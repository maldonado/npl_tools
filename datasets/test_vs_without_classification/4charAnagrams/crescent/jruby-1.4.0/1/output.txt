// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999993611307365	WITHOUT_CLASSIFICATION	6.388692635215974E-7	TEST
// TODO make an assert here	TEST	0.9999947748237155	WITHOUT_CLASSIFICATION	5.2251762844729615E-6	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.9999987249162734	WITHOUT_CLASSIFICATION	1.275083726679454E-6	TEST
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9999997688828124	WITHOUT_CLASSIFICATION	2.3111718748869413E-7	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9999972815240367	WITHOUT_CLASSIFICATION	2.718475963326207E-6	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999989533321219	WITHOUT_CLASSIFICATION	1.0466678781511562E-6	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999982432580472	WITHOUT_CLASSIFICATION	1.7567419528272456E-6	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999638652820928	WITHOUT_CLASSIFICATION	3.6134717907105925E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9996126130076526	WITHOUT_CLASSIFICATION	3.8738699234744335E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9996126130076526	WITHOUT_CLASSIFICATION	3.8738699234744335E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992590056054715	WITHOUT_CLASSIFICATION	7.40994394528443E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992590056054715	WITHOUT_CLASSIFICATION	7.40994394528443E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999525901490725	WITHOUT_CLASSIFICATION	4.7409850927495906E-4	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999994730385573	WITHOUT_CLASSIFICATION	5.269614427185745E-7	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999655745938757	WITHOUT_CLASSIFICATION	3.442540612426417E-5	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999655635793139	WITHOUT_CLASSIFICATION	3.443642068607186E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998122663060341	WITHOUT_CLASSIFICATION	1.8773369396592546E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998122663060341	WITHOUT_CLASSIFICATION	1.8773369396592546E-4	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999672528994533	WITHOUT_CLASSIFICATION	3.274710054678659E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998174481021681	WITHOUT_CLASSIFICATION	1.825518978319952E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998174481021681	WITHOUT_CLASSIFICATION	1.825518978319952E-4	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9990615532774763	WITHOUT_CLASSIFICATION	9.384467225237342E-4	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9989953894500443	WITHOUT_CLASSIFICATION	0.0010046105499557278	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9995955351654799	WITHOUT_CLASSIFICATION	4.044648345201105E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9995955351654799	WITHOUT_CLASSIFICATION	4.044648345201105E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9995955351654799	WITHOUT_CLASSIFICATION	4.044648345201105E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9995955351654799	WITHOUT_CLASSIFICATION	4.044648345201105E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9995955351654799	WITHOUT_CLASSIFICATION	4.044648345201105E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9995955351654799	WITHOUT_CLASSIFICATION	4.044648345201105E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9995955351654799	WITHOUT_CLASSIFICATION	4.044648345201105E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999254925651899	WITHOUT_CLASSIFICATION	7.450743481009374E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999254925651899	WITHOUT_CLASSIFICATION	7.450743481009374E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999254925651899	WITHOUT_CLASSIFICATION	7.450743481009374E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999254925651899	WITHOUT_CLASSIFICATION	7.450743481009374E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999254925651899	WITHOUT_CLASSIFICATION	7.450743481009374E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999254925651899	WITHOUT_CLASSIFICATION	7.450743481009374E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999254925651899	WITHOUT_CLASSIFICATION	7.450743481009374E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995123798001824	WITHOUT_CLASSIFICATION	4.8762019981772196E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995123798001824	WITHOUT_CLASSIFICATION	4.8762019981772196E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995123798001824	WITHOUT_CLASSIFICATION	4.8762019981772196E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995123798001824	WITHOUT_CLASSIFICATION	4.8762019981772196E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995123798001824	WITHOUT_CLASSIFICATION	4.8762019981772196E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995123798001824	WITHOUT_CLASSIFICATION	4.8762019981772196E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998109629646149	WITHOUT_CLASSIFICATION	1.890370353849872E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998109629646149	WITHOUT_CLASSIFICATION	1.890370353849872E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998109629646149	WITHOUT_CLASSIFICATION	1.890370353849872E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998109629646149	WITHOUT_CLASSIFICATION	1.890370353849872E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998109629646149	WITHOUT_CLASSIFICATION	1.890370353849872E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998109629646149	WITHOUT_CLASSIFICATION	1.890370353849872E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998161807287613	WITHOUT_CLASSIFICATION	1.838192712386038E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998161807287613	WITHOUT_CLASSIFICATION	1.838192712386038E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998161807287613	WITHOUT_CLASSIFICATION	1.838192712386038E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998161807287613	WITHOUT_CLASSIFICATION	1.838192712386038E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998161807287613	WITHOUT_CLASSIFICATION	1.838192712386038E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998161807287613	WITHOUT_CLASSIFICATION	1.838192712386038E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998161807287613	WITHOUT_CLASSIFICATION	1.838192712386038E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998291965527324	WITHOUT_CLASSIFICATION	1.7080344726766748E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998291965527324	WITHOUT_CLASSIFICATION	1.7080344726766748E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998291965527324	WITHOUT_CLASSIFICATION	1.7080344726766748E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998291965527324	WITHOUT_CLASSIFICATION	1.7080344726766748E-4	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9998201204158427	WITHOUT_CLASSIFICATION	1.7987958415724423E-4	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9998201204158427	WITHOUT_CLASSIFICATION	1.7987958415724423E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999589759563243	WITHOUT_CLASSIFICATION	4.1024043675619516E-5	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999860501966069	WITHOUT_CLASSIFICATION	1.3949803393005406E-5	TEST
// name	WITHOUT_CLASSIFICATION	0.9999670834760437	WITHOUT_CLASSIFICATION	3.291652395625507E-5	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999935413100071	WITHOUT_CLASSIFICATION	6.4586899929747534E-6	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999888989651802	WITHOUT_CLASSIFICATION	1.1101034819842538E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999864805958224	WITHOUT_CLASSIFICATION	1.3519404177583499E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999864805958224	WITHOUT_CLASSIFICATION	1.3519404177583499E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999864805958224	WITHOUT_CLASSIFICATION	1.3519404177583499E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999864805958224	WITHOUT_CLASSIFICATION	1.3519404177583499E-5	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999974474321741	WITHOUT_CLASSIFICATION	2.5525678258948357E-6	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999975911094738	WITHOUT_CLASSIFICATION	2.40889052613262E-6	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999938185690566	WITHOUT_CLASSIFICATION	6.181430943353802E-6	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.999998190633231	WITHOUT_CLASSIFICATION	1.8093667689460745E-6	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999944943016107	WITHOUT_CLASSIFICATION	5.505698389376743E-6	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999988288124882	WITHOUT_CLASSIFICATION	1.171187511743924E-6	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999755019349912	WITHOUT_CLASSIFICATION	2.449806500875561E-5	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999992286877964	WITHOUT_CLASSIFICATION	7.713122035279477E-7	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999903013592	WITHOUT_CLASSIFICATION	9.698640686320978E-9	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999785909125906	WITHOUT_CLASSIFICATION	2.140908740942225E-5	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999984511353878	WITHOUT_CLASSIFICATION	1.5488646122894242E-6	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.999999612253634	WITHOUT_CLASSIFICATION	3.877463660280071E-7	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999971883824715	WITHOUT_CLASSIFICATION	2.8116175285909816E-6	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999948110210667	WITHOUT_CLASSIFICATION	5.188978933312166E-6	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999870672672797	WITHOUT_CLASSIFICATION	1.2932732720375887E-5	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999967917968047	WITHOUT_CLASSIFICATION	3.208203195217087E-6	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999997289173986	WITHOUT_CLASSIFICATION	2.710826012993048E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999864805958224	WITHOUT_CLASSIFICATION	1.3519404177583499E-5	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999934301683622	WITHOUT_CLASSIFICATION	6.569831637764072E-6	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999983588762406	WITHOUT_CLASSIFICATION	1.6411237593983676E-6	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999743876768509	WITHOUT_CLASSIFICATION	2.5612323149021588E-5	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999776445989527	WITHOUT_CLASSIFICATION	2.2355401047414355E-5	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999918428873333	WITHOUT_CLASSIFICATION	8.157112666674388E-6	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999756248803503	WITHOUT_CLASSIFICATION	2.437511964978131E-5	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.999999543731008	WITHOUT_CLASSIFICATION	4.562689921250305E-7	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999992095909839	WITHOUT_CLASSIFICATION	7.904090161274996E-7	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999996935513094	WITHOUT_CLASSIFICATION	3.06448690606074E-7	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999999419181687	WITHOUT_CLASSIFICATION	5.808183139830495E-8	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.999997255775135	WITHOUT_CLASSIFICATION	2.744224865070862E-6	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999742944526423	WITHOUT_CLASSIFICATION	2.570554735775349E-5	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999979811626806	WITHOUT_CLASSIFICATION	2.018837319431834E-6	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999617049242321	WITHOUT_CLASSIFICATION	3.8295075767897095E-5	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9998365661828839	WITHOUT_CLASSIFICATION	1.6343381711622274E-4	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999377075162508	WITHOUT_CLASSIFICATION	6.229248374919454E-5	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999795378595668	WITHOUT_CLASSIFICATION	2.0462140433251174E-5	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999985950969112	WITHOUT_CLASSIFICATION	1.4049030887847522E-6	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999893981107232	WITHOUT_CLASSIFICATION	1.0601889276705178E-5	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999985850229878	WITHOUT_CLASSIFICATION	1.4149770122620394E-6	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999974837648763	WITHOUT_CLASSIFICATION	2.516235123759377E-6	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9998651700919803	WITHOUT_CLASSIFICATION	1.3482990801970166E-4	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999709767288938	WITHOUT_CLASSIFICATION	2.90232711061546E-5	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.999232712040198	WITHOUT_CLASSIFICATION	7.672879598019421E-4	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999933679336626	WITHOUT_CLASSIFICATION	6.632066337490331E-6	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9999163138899787	WITHOUT_CLASSIFICATION	8.368611002121023E-5	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999978888983443	WITHOUT_CLASSIFICATION	2.1111016556116202E-6	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999989984254942	WITHOUT_CLASSIFICATION	1.001574505727801E-6	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999959378758702	WITHOUT_CLASSIFICATION	4.062124129821759E-6	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999977375281879	WITHOUT_CLASSIFICATION	2.262471812165173E-6	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.99999144766741	WITHOUT_CLASSIFICATION	8.552332589972426E-6	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999858607884042	WITHOUT_CLASSIFICATION	1.4139211595744405E-5	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999498653157199	WITHOUT_CLASSIFICATION	5.0134684280052E-5	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999975813652685	WITHOUT_CLASSIFICATION	2.418634731516988E-6	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999998193585148	WITHOUT_CLASSIFICATION	1.8064148520851695E-7	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999996466783583	WITHOUT_CLASSIFICATION	3.533216417481446E-7	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999992481912893	WITHOUT_CLASSIFICATION	7.518087107774329E-7	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999993443584841	WITHOUT_CLASSIFICATION	6.556415158259248E-7	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.999999517488977	WITHOUT_CLASSIFICATION	4.825110230264454E-7	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999015854576419	WITHOUT_CLASSIFICATION	9.841454235814075E-5	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999934273813328	WITHOUT_CLASSIFICATION	6.572618667237067E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999495897254809	WITHOUT_CLASSIFICATION	5.041027451916629E-5	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999992278384232	WITHOUT_CLASSIFICATION	7.721615768190521E-7	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999824174194193	WITHOUT_CLASSIFICATION	1.7582580580787265E-5	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999824174194193	WITHOUT_CLASSIFICATION	1.7582580580787265E-5	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999879765275589	WITHOUT_CLASSIFICATION	1.2023472441073415E-5	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999978371771255	WITHOUT_CLASSIFICATION	2.1628228744471856E-6	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999719210944211	WITHOUT_CLASSIFICATION	2.8078905578906586E-5	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999993446725174	WITHOUT_CLASSIFICATION	6.553274825891398E-7	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999997688910083	WITHOUT_CLASSIFICATION	2.3110899161928922E-7	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999980985914513	WITHOUT_CLASSIFICATION	1.9014085488105612E-6	TEST
// ???	WITHOUT_CLASSIFICATION	0.999789015644229	WITHOUT_CLASSIFICATION	2.1098435577092956E-4	TEST
// PID	WITHOUT_CLASSIFICATION	0.999861968706785	WITHOUT_CLASSIFICATION	1.3803129321498855E-4	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999495897254809	WITHOUT_CLASSIFICATION	5.041027451916629E-5	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999974583359832	WITHOUT_CLASSIFICATION	2.5416640168794286E-6	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999497193613154	WITHOUT_CLASSIFICATION	5.028063868467876E-5	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.999998367318617	WITHOUT_CLASSIFICATION	1.6326813829597214E-6	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999990871622837	WITHOUT_CLASSIFICATION	9.128377162212543E-7	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.999986054778491	WITHOUT_CLASSIFICATION	1.39452215089279E-5	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999814962939864	WITHOUT_CLASSIFICATION	1.850370601359418E-5	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999814962939864	WITHOUT_CLASSIFICATION	1.850370601359418E-5	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999814962939864	WITHOUT_CLASSIFICATION	1.850370601359418E-5	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999961527040553	WITHOUT_CLASSIFICATION	3.847295944694611E-6	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999970971645589	WITHOUT_CLASSIFICATION	2.9028354410030994E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999986743886128	WITHOUT_CLASSIFICATION	1.3256113871843184E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999998758758963	WITHOUT_CLASSIFICATION	1.2412410356913233E-7	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999999731912661	WITHOUT_CLASSIFICATION	2.680873393696307E-8	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999976858002863	WITHOUT_CLASSIFICATION	2.3141997137681135E-6	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999952158640624	WITHOUT_CLASSIFICATION	4.784135937684829E-6	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999990745441334	WITHOUT_CLASSIFICATION	9.254558666825112E-7	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999813928855182	WITHOUT_CLASSIFICATION	1.860711448176979E-5	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999813928855182	WITHOUT_CLASSIFICATION	1.860711448176979E-5	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999335758347956	WITHOUT_CLASSIFICATION	6.642416520432651E-5	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999987539395964	WITHOUT_CLASSIFICATION	1.246060403637498E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999767166173474	WITHOUT_CLASSIFICATION	2.3283382652500656E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999767166173474	WITHOUT_CLASSIFICATION	2.3283382652500656E-5	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999989605796828	WITHOUT_CLASSIFICATION	1.0394203171670858E-6	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999987957408734	WITHOUT_CLASSIFICATION	1.204259126574399E-6	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9995200585930701	WITHOUT_CLASSIFICATION	4.799414069298542E-4	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999992253140958	WITHOUT_CLASSIFICATION	7.746859041854577E-7	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999889567822422	WITHOUT_CLASSIFICATION	1.1043217757692917E-5	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999827693197169	WITHOUT_CLASSIFICATION	1.7230680283135595E-5	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9998834018933713	WITHOUT_CLASSIFICATION	1.1659810662863105E-4	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999720816585981	WITHOUT_CLASSIFICATION	2.7918341401940612E-5	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999825696690102	WITHOUT_CLASSIFICATION	1.7430330989797132E-5	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999971910616016	WITHOUT_CLASSIFICATION	2.808938398425545E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999495897254809	WITHOUT_CLASSIFICATION	5.041027451916629E-5	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999769510028311	WITHOUT_CLASSIFICATION	2.30489971688316E-5	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999965703714789	WITHOUT_CLASSIFICATION	3.429628521063051E-6	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.999980910951414	WITHOUT_CLASSIFICATION	1.9089048586123433E-5	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.999999331126935	WITHOUT_CLASSIFICATION	6.68873065098922E-7	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999997205306761	WITHOUT_CLASSIFICATION	2.794693238937199E-7	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999674756426516	WITHOUT_CLASSIFICATION	3.25243573483553E-5	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999614460023868	WITHOUT_CLASSIFICATION	3.855399761317587E-5	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999628990069939	WITHOUT_CLASSIFICATION	3.7100993006166315E-5	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999955269382931	WITHOUT_CLASSIFICATION	4.47306170687821E-6	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999975414065837	WITHOUT_CLASSIFICATION	2.458593416333403E-6	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999989390896182	WITHOUT_CLASSIFICATION	1.0609103817660652E-6	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999992743223235	WITHOUT_CLASSIFICATION	7.256776763765782E-7	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999992963888777	WITHOUT_CLASSIFICATION	7.036111222529185E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999884524340831	WITHOUT_CLASSIFICATION	1.1547565916890608E-5	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999971702010872	WITHOUT_CLASSIFICATION	2.8297989127619407E-6	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999955313753396	WITHOUT_CLASSIFICATION	4.468624660440046E-6	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999976657363316	WITHOUT_CLASSIFICATION	2.3342636684035555E-6	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999949242542915	WITHOUT_CLASSIFICATION	5.075745708587893E-6	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999953326526254	WITHOUT_CLASSIFICATION	4.667347374648989E-6	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999992069344888	WITHOUT_CLASSIFICATION	7.930655110826821E-7	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999949656791909	WITHOUT_CLASSIFICATION	5.0343208091256605E-6	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999970297006849	WITHOUT_CLASSIFICATION	2.970299315104136E-6	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999980772530422	WITHOUT_CLASSIFICATION	1.922746957703718E-6	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.999992581723845	WITHOUT_CLASSIFICATION	7.418276154996551E-6	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999994038574106	WITHOUT_CLASSIFICATION	5.961425894423532E-7	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.999998932000553	WITHOUT_CLASSIFICATION	1.0679994470199864E-6	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.999988841134599	WITHOUT_CLASSIFICATION	1.115886540108866E-5	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999940590658074	WITHOUT_CLASSIFICATION	5.9409341925822705E-6	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999985737895406	WITHOUT_CLASSIFICATION	1.4262104593477669E-6	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999857604680209	WITHOUT_CLASSIFICATION	1.4239531979014836E-5	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999994988377967	WITHOUT_CLASSIFICATION	5.011622032852447E-7	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.999997481693014	WITHOUT_CLASSIFICATION	2.5183069861229848E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999564551925605	WITHOUT_CLASSIFICATION	4.3544807439534486E-5	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.999999066172193	WITHOUT_CLASSIFICATION	9.338278070731069E-7	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999957428408608	WITHOUT_CLASSIFICATION	4.257159139223021E-6	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999886277644857	WITHOUT_CLASSIFICATION	1.1372235514250362E-5	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999943735306379	WITHOUT_CLASSIFICATION	5.626469361989798E-6	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999944385118988	WITHOUT_CLASSIFICATION	5.561488101086811E-6	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999971272802961	WITHOUT_CLASSIFICATION	2.8727197038829976E-6	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.999996436824871	WITHOUT_CLASSIFICATION	3.563175128968321E-6	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999993669513307	WITHOUT_CLASSIFICATION	6.330486692181022E-7	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999875129550974	WITHOUT_CLASSIFICATION	1.2487044902702558E-5	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.999998376731145	WITHOUT_CLASSIFICATION	1.6232688549401075E-6	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999990663148941	WITHOUT_CLASSIFICATION	9.336851059109091E-7	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999817204496474	WITHOUT_CLASSIFICATION	1.8279550352561364E-5	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.999988024113518	WITHOUT_CLASSIFICATION	1.1975886482176499E-5	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999851016277589	WITHOUT_CLASSIFICATION	1.4898372241100135E-5	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999968236486017	WITHOUT_CLASSIFICATION	3.176351398221358E-6	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999971909298767	WITHOUT_CLASSIFICATION	2.8090701233027203E-6	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999986749789153	WITHOUT_CLASSIFICATION	1.3250210848272362E-6	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999985009918124	WITHOUT_CLASSIFICATION	1.4990081875979001E-6	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999994490206076	WITHOUT_CLASSIFICATION	5.509793924764454E-7	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999992584699579	WITHOUT_CLASSIFICATION	7.415300421352347E-7	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999971867859102	WITHOUT_CLASSIFICATION	2.813214089830917E-6	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999975948072283	WITHOUT_CLASSIFICATION	2.405192771673191E-6	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999990014296186	WITHOUT_CLASSIFICATION	9.985703813756524E-7	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999873930678234	WITHOUT_CLASSIFICATION	1.2606932176728295E-5	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999997042934585	WITHOUT_CLASSIFICATION	2.9570654151960155E-7	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.999994671769022	WITHOUT_CLASSIFICATION	5.328230977940485E-6	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999945464549618	WITHOUT_CLASSIFICATION	5.4535450381772786E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999866949785732	WITHOUT_CLASSIFICATION	1.330502142680515E-4	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999866949785732	WITHOUT_CLASSIFICATION	1.330502142680515E-4	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999185705335817	WITHOUT_CLASSIFICATION	8.142946641831496E-5	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999185705335817	WITHOUT_CLASSIFICATION	8.142946641831496E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9998675087059046	WITHOUT_CLASSIFICATION	1.3249129409532447E-4	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9998675087059046	WITHOUT_CLASSIFICATION	1.3249129409532447E-4	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9998200717981889	WITHOUT_CLASSIFICATION	1.7992820181123644E-4	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9998200717981889	WITHOUT_CLASSIFICATION	1.7992820181123644E-4	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999921475242599	WITHOUT_CLASSIFICATION	7.85247574017387E-6	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999871789208794	WITHOUT_CLASSIFICATION	1.2821079120640549E-5	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999561049655387	WITHOUT_CLASSIFICATION	4.3895034461288484E-5	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999987552190926	WITHOUT_CLASSIFICATION	1.2447809074531722E-6	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999995757965886	WITHOUT_CLASSIFICATION	4.242034114065353E-7	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999988725624362	WITHOUT_CLASSIFICATION	1.1274375637626418E-6	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999143263772086	WITHOUT_CLASSIFICATION	8.567362279142855E-5	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.999994316422821	WITHOUT_CLASSIFICATION	5.683577179013042E-6	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999950649213681	WITHOUT_CLASSIFICATION	4.935078631782127E-6	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999795530053533	WITHOUT_CLASSIFICATION	2.0446994646668926E-5	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.999998208857487	WITHOUT_CLASSIFICATION	1.7911425129702948E-6	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999968701014241	WITHOUT_CLASSIFICATION	3.1298985758846716E-6	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9998412079790077	WITHOUT_CLASSIFICATION	1.587920209923016E-4	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999989011218244	WITHOUT_CLASSIFICATION	1.0988781755207591E-6	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999958494776713	WITHOUT_CLASSIFICATION	4.150522328739531E-6	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9997807587624438	WITHOUT_CLASSIFICATION	2.192412375562643E-4	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999997199681852	WITHOUT_CLASSIFICATION	2.800318148918193E-7	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999902669994305	WITHOUT_CLASSIFICATION	9.73300056955837E-6	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.999997158532542	WITHOUT_CLASSIFICATION	2.84146745806131E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999951096883098	WITHOUT_CLASSIFICATION	4.890311690111817E-6	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999946781829302	WITHOUT_CLASSIFICATION	5.321817069755045E-6	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999965182756493	WITHOUT_CLASSIFICATION	3.4817243508424578E-6	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999637280598701	WITHOUT_CLASSIFICATION	3.6271940129843974E-5	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999869564632027	WITHOUT_CLASSIFICATION	1.304353679730358E-5	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999920666937191	WITHOUT_CLASSIFICATION	7.933306280831641E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999993213084567	WITHOUT_CLASSIFICATION	6.786915434183065E-7	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999575643598831	WITHOUT_CLASSIFICATION	4.2435640116925404E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.999982072386528	WITHOUT_CLASSIFICATION	1.792761347199452E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.999982072386528	WITHOUT_CLASSIFICATION	1.792761347199452E-5	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999743719887053	WITHOUT_CLASSIFICATION	2.5628011294747228E-5	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999896088899325	WITHOUT_CLASSIFICATION	1.0391110067479949E-5	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999809994431126	WITHOUT_CLASSIFICATION	1.900055688742093E-5	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999999719026376	WITHOUT_CLASSIFICATION	2.809736248832499E-8	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999847479365346	WITHOUT_CLASSIFICATION	1.525206346550148E-5	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9997382130522703	WITHOUT_CLASSIFICATION	2.617869477296772E-4	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999731389700031	WITHOUT_CLASSIFICATION	2.6861029996969737E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999731389700031	WITHOUT_CLASSIFICATION	2.6861029996969737E-5	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9998886043646823	WITHOUT_CLASSIFICATION	1.1139563531765174E-4	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.999986785003577	WITHOUT_CLASSIFICATION	1.3214996423083098E-5	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999540694188129	WITHOUT_CLASSIFICATION	4.593058118705061E-5	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999540694188129	WITHOUT_CLASSIFICATION	4.593058118705061E-5	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999955566495597	WITHOUT_CLASSIFICATION	4.443350440308609E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.99999679792126	WITHOUT_CLASSIFICATION	3.2020787399871312E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.99999679792126	WITHOUT_CLASSIFICATION	3.2020787399871312E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9998220438798522	WITHOUT_CLASSIFICATION	1.7795612014775037E-4	TEST
// modified	WITHOUT_CLASSIFICATION	0.9998220438798522	WITHOUT_CLASSIFICATION	1.7795612014775037E-4	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9998433516150727	WITHOUT_CLASSIFICATION	1.5664838492742593E-4	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9998433516150727	WITHOUT_CLASSIFICATION	1.5664838492742593E-4	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9998447673630977	WITHOUT_CLASSIFICATION	1.552326369023545E-4	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999597907060547	WITHOUT_CLASSIFICATION	4.020929394523205E-5	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999994027603075	WITHOUT_CLASSIFICATION	5.972396923770752E-7	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999929158521034	WITHOUT_CLASSIFICATION	7.084147896618948E-6	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999991257080566	WITHOUT_CLASSIFICATION	8.742919432904663E-7	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999960598660445	WITHOUT_CLASSIFICATION	3.940133955540544E-6	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999975821657247	WITHOUT_CLASSIFICATION	2.4178342753639204E-6	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999939605883901	WITHOUT_CLASSIFICATION	6.039411609973852E-6	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999975821657247	WITHOUT_CLASSIFICATION	2.4178342753639204E-6	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999726473361277	WITHOUT_CLASSIFICATION	2.7352663872323903E-5	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.999996149137854	WITHOUT_CLASSIFICATION	3.8508621460533076E-6	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999944271858641	WITHOUT_CLASSIFICATION	5.572814135939071E-6	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999986513883047	WITHOUT_CLASSIFICATION	1.348611695320907E-6	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.999990761198815	WITHOUT_CLASSIFICATION	9.23880118495325E-6	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999986330140387	WITHOUT_CLASSIFICATION	1.3669859612502574E-6	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999956269656332	WITHOUT_CLASSIFICATION	4.373034366852302E-6	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999719716013402	WITHOUT_CLASSIFICATION	2.802839865974223E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999986281390257	WITHOUT_CLASSIFICATION	1.3718609741789173E-6	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999985789734045	WITHOUT_CLASSIFICATION	1.421026595549905E-6	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999878440404015	WITHOUT_CLASSIFICATION	1.2155959598396066E-5	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999977998466296	WITHOUT_CLASSIFICATION	2.200153370384031E-6	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999671220912866	WITHOUT_CLASSIFICATION	3.287790871355866E-5	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999968859858827	WITHOUT_CLASSIFICATION	3.1140141173925308E-6	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.999980523679836	WITHOUT_CLASSIFICATION	1.947632016403873E-5	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999945345184809	WITHOUT_CLASSIFICATION	5.465481519162612E-6	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999967993751517	WITHOUT_CLASSIFICATION	3.200624848262345E-6	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999993973341491	WITHOUT_CLASSIFICATION	6.026658508276612E-7	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999889147929731	WITHOUT_CLASSIFICATION	1.1085207026924598E-5	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999908192073788	WITHOUT_CLASSIFICATION	9.180792621152831E-6	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999972187522719	WITHOUT_CLASSIFICATION	2.7812477280347856E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999950848662746	WITHOUT_CLASSIFICATION	4.9151337254639835E-6	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999991358077825	WITHOUT_CLASSIFICATION	8.641922174954401E-7	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999991983632399	WITHOUT_CLASSIFICATION	8.016367600322475E-7	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999916185587681	WITHOUT_CLASSIFICATION	8.381441231933763E-6	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999920177550878	WITHOUT_CLASSIFICATION	7.982244912164677E-6	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999973501055288	WITHOUT_CLASSIFICATION	2.6498944712589437E-6	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999972769526647	WITHOUT_CLASSIFICATION	2.72304733533072E-6	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999950967645335	WITHOUT_CLASSIFICATION	4.903235466521306E-6	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999916885864878	WITHOUT_CLASSIFICATION	8.311413512291127E-6	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999935964975091	WITHOUT_CLASSIFICATION	6.403502490883956E-6	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999990802567021	WITHOUT_CLASSIFICATION	9.197432978084387E-7	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999980814881029	WITHOUT_CLASSIFICATION	1.918511897147943E-6	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999965560692498	WITHOUT_CLASSIFICATION	3.4439307503513015E-6	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999956769935265	WITHOUT_CLASSIFICATION	4.3230064734683804E-6	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999949104458935	WITHOUT_CLASSIFICATION	5.08955410650629E-6	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999870697298802	WITHOUT_CLASSIFICATION	1.2930270119801555E-5	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999976565671121	WITHOUT_CLASSIFICATION	2.343432887928512E-6	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999969995090092	WITHOUT_CLASSIFICATION	3.000490990756218E-6	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999942062967118	WITHOUT_CLASSIFICATION	5.7937032882080704E-6	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999925815844808	WITHOUT_CLASSIFICATION	7.418415519240878E-6	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.999994068541807	WITHOUT_CLASSIFICATION	5.931458193137643E-6	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.999994285609561	WITHOUT_CLASSIFICATION	5.714390439007035E-6	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999976824159794	WITHOUT_CLASSIFICATION	2.3175840205806886E-6	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.999998352724229	WITHOUT_CLASSIFICATION	1.6472757709936108E-6	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999962148844679	WITHOUT_CLASSIFICATION	3.7851155320600724E-6	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999958312945083	WITHOUT_CLASSIFICATION	4.168705491758905E-6	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999973953297939	WITHOUT_CLASSIFICATION	2.6046702059935858E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.99999955077335	WITHOUT_CLASSIFICATION	4.4922664998968905E-7	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999889557863346	WITHOUT_CLASSIFICATION	1.1044213665427254E-5	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.999990636971431	WITHOUT_CLASSIFICATION	9.36302856899866E-6	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999995652964375	WITHOUT_CLASSIFICATION	4.3470356258722576E-7	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999949399918838	WITHOUT_CLASSIFICATION	5.0600081162131635E-6	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999995596681703	WITHOUT_CLASSIFICATION	4.403318296292591E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999964913677388	WITHOUT_CLASSIFICATION	3.5086322611999745E-6	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999964913677388	WITHOUT_CLASSIFICATION	3.5086322611999745E-6	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999997534161117	WITHOUT_CLASSIFICATION	2.4658388821189106E-7	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999997447888497	WITHOUT_CLASSIFICATION	2.552111502926302E-7	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999987142917176	WITHOUT_CLASSIFICATION	1.2857082823700933E-6	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.999998861847526	WITHOUT_CLASSIFICATION	1.1381524741411533E-6	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.999999875028774	WITHOUT_CLASSIFICATION	1.2497122615873992E-7	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999939382381853	WITHOUT_CLASSIFICATION	6.061761814755116E-6	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999998231371259	WITHOUT_CLASSIFICATION	1.7686287414069758E-7	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999967485326438	WITHOUT_CLASSIFICATION	3.251467356215361E-6	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999951981940126	WITHOUT_CLASSIFICATION	4.8018059873918986E-6	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999839722459284	WITHOUT_CLASSIFICATION	1.602775407155266E-5	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999999531588081	WITHOUT_CLASSIFICATION	4.684119189965939E-7	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999999531588081	WITHOUT_CLASSIFICATION	4.684119189965939E-7	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999999954733111	WITHOUT_CLASSIFICATION	4.526689000248989E-9	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999992252379349	WITHOUT_CLASSIFICATION	7.747620651213669E-7	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999996953672835	WITHOUT_CLASSIFICATION	3.046327164577296E-7	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999952813982258	WITHOUT_CLASSIFICATION	4.718601774136861E-6	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999971476050634	WITHOUT_CLASSIFICATION	2.8523949366014542E-6	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999987916959634	WITHOUT_CLASSIFICATION	1.2083040366063025E-6	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999995672429432	WITHOUT_CLASSIFICATION	4.327570568105255E-6	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999934687920541	WITHOUT_CLASSIFICATION	6.531207945994172E-6	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999985190206067	WITHOUT_CLASSIFICATION	1.4809793933601832E-6	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999995862596424	WITHOUT_CLASSIFICATION	4.1374035769358983E-7	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999987892273186	WITHOUT_CLASSIFICATION	1.2107726814607159E-6	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999998805948858	WITHOUT_CLASSIFICATION	1.1940511420239735E-7	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.999993846442507	WITHOUT_CLASSIFICATION	6.1535574929751935E-6	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.999993846442507	WITHOUT_CLASSIFICATION	6.1535574929751935E-6	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999970716546562	WITHOUT_CLASSIFICATION	2.9283453437946035E-6	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999948235163365	WITHOUT_CLASSIFICATION	5.176483663443133E-6	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999579319429129	WITHOUT_CLASSIFICATION	4.206805708695166E-5	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999997460833385	WITHOUT_CLASSIFICATION	2.5391666146483585E-7	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999976298612934	WITHOUT_CLASSIFICATION	2.3701387066106345E-6	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999884754745075	WITHOUT_CLASSIFICATION	1.1524525492441026E-5	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999828573935057	WITHOUT_CLASSIFICATION	1.7142606494322615E-5	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999933986939762	WITHOUT_CLASSIFICATION	6.601306023844847E-6	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999916061437593	WITHOUT_CLASSIFICATION	8.393856240758354E-6	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.999993208135671	WITHOUT_CLASSIFICATION	6.791864328968575E-6	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999996953672835	WITHOUT_CLASSIFICATION	3.046327164577296E-7	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999994299364044	WITHOUT_CLASSIFICATION	5.700635956251467E-7	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999984519963127	WITHOUT_CLASSIFICATION	1.548003687281196E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999983048172392	WITHOUT_CLASSIFICATION	1.6951827608110004E-6	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999988491997209	WITHOUT_CLASSIFICATION	1.150800279050026E-6	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999951167256822	WITHOUT_CLASSIFICATION	4.8832743177890775E-6	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999998584283799	WITHOUT_CLASSIFICATION	1.415716202002115E-7	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999983290362523	WITHOUT_CLASSIFICATION	1.6709637477405023E-6	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999962550618041	WITHOUT_CLASSIFICATION	3.744938195949675E-6	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999989058035037	WITHOUT_CLASSIFICATION	1.0941964962509615E-6	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999960910716197	WITHOUT_CLASSIFICATION	3.908928380358333E-6	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999922065357411	WITHOUT_CLASSIFICATION	7.793464258926218E-6	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999999161017841	WITHOUT_CLASSIFICATION	8.389821591283869E-8	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999943451719818	WITHOUT_CLASSIFICATION	5.654828018152804E-6	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.999999634988038	WITHOUT_CLASSIFICATION	3.650119619835823E-7	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999992071512779	WITHOUT_CLASSIFICATION	7.928487220158123E-7	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999993108120412	WITHOUT_CLASSIFICATION	6.891879588644384E-7	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999952535492481	WITHOUT_CLASSIFICATION	4.746450751893928E-6	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.999963497554834	WITHOUT_CLASSIFICATION	3.650244516598226E-5	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999118547255903	WITHOUT_CLASSIFICATION	8.814527440967522E-5	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999849944165077	WITHOUT_CLASSIFICATION	1.5005583492361973E-5	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999997992628539	WITHOUT_CLASSIFICATION	2.0073714602411877E-7	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999953994470863	WITHOUT_CLASSIFICATION	4.6005529136693934E-6	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999975128146769	WITHOUT_CLASSIFICATION	2.4871853230900962E-6	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.999998416087632	WITHOUT_CLASSIFICATION	1.5839123679998733E-6	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999909943223763	WITHOUT_CLASSIFICATION	9.005677623805957E-6	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999815317645803	WITHOUT_CLASSIFICATION	1.8468235419751947E-5	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9998184574700963	WITHOUT_CLASSIFICATION	1.81542529903659E-4	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999981081199955	WITHOUT_CLASSIFICATION	1.8918800044796791E-6	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999460132918682	WITHOUT_CLASSIFICATION	5.398670813171518E-5	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999995991910927	WITHOUT_CLASSIFICATION	4.0080890717012806E-7	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.999686677740396	WITHOUT_CLASSIFICATION	3.133222596040411E-4	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.999686677740396	WITHOUT_CLASSIFICATION	3.133222596040411E-4	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999916840290319	WITHOUT_CLASSIFICATION	8.315970968032216E-6	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999932536368553	WITHOUT_CLASSIFICATION	6.746363144693518E-6	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999944504008181	WITHOUT_CLASSIFICATION	5.549599181856714E-6	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999935119759926	WITHOUT_CLASSIFICATION	6.48802400738277E-6	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999981000222031	WITHOUT_CLASSIFICATION	1.8999777968428142E-6	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999811007553758	WITHOUT_CLASSIFICATION	1.8899244624205512E-5	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999495897254809	WITHOUT_CLASSIFICATION	5.041027451916629E-5	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999868705597958	WITHOUT_CLASSIFICATION	1.312944020415204E-5	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999976728202327	WITHOUT_CLASSIFICATION	2.327179767355852E-6	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999922488499077	WITHOUT_CLASSIFICATION	7.75115009234398E-6	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999989332458925	WITHOUT_CLASSIFICATION	1.0667541074628895E-6	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.999994321266923	WITHOUT_CLASSIFICATION	5.6787330769060555E-6	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999952280031785	WITHOUT_CLASSIFICATION	4.771996821515411E-6	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.999996436824871	WITHOUT_CLASSIFICATION	3.563175128968321E-6	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999996365061672	WITHOUT_CLASSIFICATION	3.634938327827662E-7	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999953976550789	WITHOUT_CLASSIFICATION	4.602344921101409E-6	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999333174925	WITHOUT_CLASSIFICATION	6.668250752042985E-8	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.999991606493447	WITHOUT_CLASSIFICATION	8.393506552961926E-6	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999948625086671	WITHOUT_CLASSIFICATION	5.137491332946951E-6	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999997075773094	WITHOUT_CLASSIFICATION	2.9242269062510374E-7	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999172168008092	WITHOUT_CLASSIFICATION	8.27831991907846E-5	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999172168008092	WITHOUT_CLASSIFICATION	8.27831991907846E-5	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999821986580152	WITHOUT_CLASSIFICATION	1.7801341984769636E-5	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999989412946965	WITHOUT_CLASSIFICATION	1.0587053034856802E-6	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999947382751548	WITHOUT_CLASSIFICATION	5.261724845112386E-6	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999907850210517	WITHOUT_CLASSIFICATION	9.214978948398456E-6	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999982131189717	WITHOUT_CLASSIFICATION	1.7868810282182533E-6	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999990999529249	WITHOUT_CLASSIFICATION	9.000470750326696E-7	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999989375126418	WITHOUT_CLASSIFICATION	1.0624873582405718E-6	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999987572120334	WITHOUT_CLASSIFICATION	1.242787966672563E-6	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999825694120525	WITHOUT_CLASSIFICATION	1.7430587947418122E-5	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999998928821898	WITHOUT_CLASSIFICATION	1.0711781008551134E-7	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999686943395371	WITHOUT_CLASSIFICATION	3.130566046296469E-5	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999981989651407	WITHOUT_CLASSIFICATION	1.8010348591887932E-6	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999920558407562	WITHOUT_CLASSIFICATION	7.944159243692926E-6	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999980283420362	WITHOUT_CLASSIFICATION	1.971657963740475E-6	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999973490071747	WITHOUT_CLASSIFICATION	2.6509928252835437E-6	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.999994248947446	WITHOUT_CLASSIFICATION	5.751052553961096E-6	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999912467378425	WITHOUT_CLASSIFICATION	8.753262157579096E-6	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999957030105421	WITHOUT_CLASSIFICATION	4.296989457866159E-6	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999196873779	WITHOUT_CLASSIFICATION	8.031262202718505E-8	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999968784745352	WITHOUT_CLASSIFICATION	3.121525464782912E-6	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.999998430246746	WITHOUT_CLASSIFICATION	1.5697532540629081E-6	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999956218276007	WITHOUT_CLASSIFICATION	4.3781723993175325E-6	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999925592545015	WITHOUT_CLASSIFICATION	7.440745498553926E-6	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999990365680688	WITHOUT_CLASSIFICATION	9.634319312396538E-7	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999976967705126	WITHOUT_CLASSIFICATION	2.303229487358901E-6	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.999982924918395	WITHOUT_CLASSIFICATION	1.707508160503402E-5	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999557080090825	WITHOUT_CLASSIFICATION	4.429199091740195E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999873402442635	WITHOUT_CLASSIFICATION	1.2659755736473302E-5	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999968358060858	WITHOUT_CLASSIFICATION	3.164193914219374E-6	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999961881839974	WITHOUT_CLASSIFICATION	3.8118160026822354E-6	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.999998202471673	WITHOUT_CLASSIFICATION	1.7975283269918216E-6	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999902201674317	WITHOUT_CLASSIFICATION	9.779832568425739E-6	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999976297555232	WITHOUT_CLASSIFICATION	2.370244476726803E-6	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.9998417402330344	WITHOUT_CLASSIFICATION	1.5825976696568874E-4	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999978474135175	WITHOUT_CLASSIFICATION	2.1525864824036237E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999051842084	WITHOUT_CLASSIFICATION	9.481579152037382E-8	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999996991039498	WITHOUT_CLASSIFICATION	3.0089605021253064E-7	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999930578407649	WITHOUT_CLASSIFICATION	6.942159235080929E-6	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999967729151695	WITHOUT_CLASSIFICATION	3.227084830479949E-6	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999952103149218	WITHOUT_CLASSIFICATION	4.789685078209181E-6	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999903198382435	WITHOUT_CLASSIFICATION	9.680161756611512E-6	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999947703492726	WITHOUT_CLASSIFICATION	5.229650727354402E-6	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999941148842177	WITHOUT_CLASSIFICATION	5.8851157822684456E-6	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999969576835448	WITHOUT_CLASSIFICATION	3.0423164552043852E-5	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999467554311217	WITHOUT_CLASSIFICATION	5.324456887831309E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999969576835448	WITHOUT_CLASSIFICATION	3.0423164552043852E-5	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999719683337	WITHOUT_CLASSIFICATION	2.8031666352728503E-8	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9999998163657622	WITHOUT_CLASSIFICATION	1.836342376717261E-7	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999972760548088	WITHOUT_CLASSIFICATION	2.72394519111365E-6	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9999528931072666	WITHOUT_CLASSIFICATION	4.7106892733311665E-5	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999606896451002	WITHOUT_CLASSIFICATION	3.931035489989259E-5	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999959355400521	WITHOUT_CLASSIFICATION	4.064459947913393E-6	TEST
// write	WITHOUT_CLASSIFICATION	0.9999677163233676	WITHOUT_CLASSIFICATION	3.228367663237201E-5	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999992521456272	WITHOUT_CLASSIFICATION	7.4785437265744E-7	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999997726301442	WITHOUT_CLASSIFICATION	2.273698557982152E-7	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.999992532768894	WITHOUT_CLASSIFICATION	7.467231105946002E-6	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999996703325699	WITHOUT_CLASSIFICATION	3.2966743013454447E-7	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999590924451187	WITHOUT_CLASSIFICATION	4.0907554881255045E-5	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999989690643333	WITHOUT_CLASSIFICATION	1.0309356666954976E-6	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999976125368281	WITHOUT_CLASSIFICATION	2.3874631720456845E-6	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999797468434478	WITHOUT_CLASSIFICATION	2.025315655213887E-5	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9999931143016977	WITHOUT_CLASSIFICATION	6.8856983023537506E-6	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999485868474	WITHOUT_CLASSIFICATION	5.1413152713762015E-8	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999865991010932	WITHOUT_CLASSIFICATION	1.3400898906725385E-5	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999648916225051	WITHOUT_CLASSIFICATION	3.5108377494870734E-5	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999421059299766	WITHOUT_CLASSIFICATION	5.789407002343249E-5	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999993850665061	WITHOUT_CLASSIFICATION	6.149334939508439E-7	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999797890051101	WITHOUT_CLASSIFICATION	2.0210994889934025E-5	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999083316950017	WITHOUT_CLASSIFICATION	9.166830499830441E-5	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999955843699763	WITHOUT_CLASSIFICATION	4.415630023747812E-6	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999956495438131	WITHOUT_CLASSIFICATION	4.350456186888118E-6	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.999998944437368	WITHOUT_CLASSIFICATION	1.0555626319735396E-6	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999893336068527	WITHOUT_CLASSIFICATION	1.0666393147170153E-5	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999947451661108	WITHOUT_CLASSIFICATION	5.254833889243677E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999984511353878	WITHOUT_CLASSIFICATION	1.5488646122894242E-6	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999996363267283	WITHOUT_CLASSIFICATION	3.6367327160203823E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999540963191972	WITHOUT_CLASSIFICATION	4.590368080284964E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999563139154302	WITHOUT_CLASSIFICATION	4.368608456995739E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999625050550794	WITHOUT_CLASSIFICATION	3.7494944920672195E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999888782668854	WITHOUT_CLASSIFICATION	1.112173311461293E-5	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999987758142458	WITHOUT_CLASSIFICATION	1.2241857541542331E-6	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999948167372691	WITHOUT_CLASSIFICATION	5.183262730939352E-6	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.999999468387245	WITHOUT_CLASSIFICATION	5.316127549537205E-7	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999989887936246	WITHOUT_CLASSIFICATION	1.0112063753192259E-6	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999986807250582	WITHOUT_CLASSIFICATION	1.319274941830489E-6	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9998029517820182	WITHOUT_CLASSIFICATION	1.9704821798184106E-4	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999998249784947	WITHOUT_CLASSIFICATION	1.7502150527002775E-7	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999978986181496	WITHOUT_CLASSIFICATION	2.1013818505484982E-6	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999970796031238	WITHOUT_CLASSIFICATION	2.920396876119003E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999471358643317	WITHOUT_CLASSIFICATION	5.28641356682711E-5	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999471358643317	WITHOUT_CLASSIFICATION	5.28641356682711E-5	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999360568495653	WITHOUT_CLASSIFICATION	6.394315043475738E-5	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999964867561337	WITHOUT_CLASSIFICATION	3.5132438663075625E-6	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999993530926287	WITHOUT_CLASSIFICATION	6.469073712057111E-7	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999986856452713	WITHOUT_CLASSIFICATION	1.3143547286837931E-6	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999998100059021	WITHOUT_CLASSIFICATION	1.8999409800345985E-7	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999973873202453	WITHOUT_CLASSIFICATION	2.612679754665877E-6	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999987965673022	WITHOUT_CLASSIFICATION	1.2034326978052582E-6	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999929394639798	WITHOUT_CLASSIFICATION	7.0605360202113375E-6	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999971190477149	WITHOUT_CLASSIFICATION	2.880952285158488E-6	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.999998884552239	WITHOUT_CLASSIFICATION	1.115447761024424E-6	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.999999533451371	WITHOUT_CLASSIFICATION	4.665486289352573E-7	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999998939534842	WITHOUT_CLASSIFICATION	1.0604651570108651E-7	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999995838682513	WITHOUT_CLASSIFICATION	4.1613174880955184E-7	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999991890844934	WITHOUT_CLASSIFICATION	8.109155065233972E-7	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999991631471726	WITHOUT_CLASSIFICATION	8.368528273068278E-7	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999981562311202	WITHOUT_CLASSIFICATION	1.8437688798491655E-6	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.999994404173038	WITHOUT_CLASSIFICATION	5.595826961941016E-6	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.999993985273438	WITHOUT_CLASSIFICATION	6.014726562064313E-6	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999977495897133	WITHOUT_CLASSIFICATION	2.2504102865514357E-6	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999945505566429	WITHOUT_CLASSIFICATION	5.449443357059936E-6	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999180781898545	WITHOUT_CLASSIFICATION	8.192181014555637E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.999988198880123	WITHOUT_CLASSIFICATION	1.180111987706469E-5	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.999999790173014	WITHOUT_CLASSIFICATION	2.0982698599763696E-7	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999991771634791	WITHOUT_CLASSIFICATION	8.228365209970215E-7	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999988324243714	WITHOUT_CLASSIFICATION	1.1675756286935865E-6	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999993195363311	WITHOUT_CLASSIFICATION	6.80463668819472E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999988419408635	WITHOUT_CLASSIFICATION	1.1580591364344137E-6	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999983216248526	WITHOUT_CLASSIFICATION	1.6783751473061974E-6	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999972252187077	WITHOUT_CLASSIFICATION	2.7747812923542554E-6	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999549075597293	WITHOUT_CLASSIFICATION	4.509244027079272E-5	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999997863477077	WITHOUT_CLASSIFICATION	2.1365229231724352E-7	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999996848108647	WITHOUT_CLASSIFICATION	3.1518913525768457E-7	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999997240364429	WITHOUT_CLASSIFICATION	2.7596355707519226E-7	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999987413432754	WITHOUT_CLASSIFICATION	1.258656724530784E-6	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999982338864515	WITHOUT_CLASSIFICATION	1.7661135485336199E-6	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999136110559	WITHOUT_CLASSIFICATION	8.638894410584284E-8	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999968298169745	WITHOUT_CLASSIFICATION	3.1701830255052385E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999939608137109	WITHOUT_CLASSIFICATION	6.039186289103213E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999945422930626	WITHOUT_CLASSIFICATION	5.457706937466467E-6	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999699822531679	WITHOUT_CLASSIFICATION	3.0017746832051233E-5	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999946481469574	WITHOUT_CLASSIFICATION	5.351853042609473E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999982432306539	WITHOUT_CLASSIFICATION	1.7567693461924224E-6	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999950270526065	WITHOUT_CLASSIFICATION	4.9729473935291725E-6	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999997334638873	WITHOUT_CLASSIFICATION	2.665361127857196E-7	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999983684627951	WITHOUT_CLASSIFICATION	1.631537204831646E-6	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999988364356914	WITHOUT_CLASSIFICATION	1.163564308642662E-6	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999994373789395	WITHOUT_CLASSIFICATION	5.626210604746205E-7	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999982797999861	WITHOUT_CLASSIFICATION	1.7202000139395012E-6	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9995502124083882	WITHOUT_CLASSIFICATION	4.4978759161178115E-4	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999778700104913	WITHOUT_CLASSIFICATION	2.2129989508705328E-5	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999995046321709	WITHOUT_CLASSIFICATION	4.95367829037774E-7	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999966388830906	WITHOUT_CLASSIFICATION	3.361116909411773E-6	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999981249649883	WITHOUT_CLASSIFICATION	1.8750350117970784E-6	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999971852072813	WITHOUT_CLASSIFICATION	2.8147927186203968E-6	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999968696647379	WITHOUT_CLASSIFICATION	3.1303352620146047E-6	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999996276816567	WITHOUT_CLASSIFICATION	3.723183432075968E-7	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999982907888268	WITHOUT_CLASSIFICATION	1.7092111731265879E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999993859291655	WITHOUT_CLASSIFICATION	6.14070834417934E-7	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999991698154566	WITHOUT_CLASSIFICATION	8.30184543351008E-7	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999960077389901	WITHOUT_CLASSIFICATION	3.992261009891218E-6	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999963801262828	WITHOUT_CLASSIFICATION	3.6198737171782912E-6	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999825655893628	WITHOUT_CLASSIFICATION	1.7434410637083154E-5	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999956840522884	WITHOUT_CLASSIFICATION	4.315947711557429E-6	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999976381935105	WITHOUT_CLASSIFICATION	2.361806489523304E-6	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999817576817431	WITHOUT_CLASSIFICATION	1.8242318256927633E-5	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999366687672904	WITHOUT_CLASSIFICATION	6.333123270968633E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999716207589219	WITHOUT_CLASSIFICATION	2.837924107816412E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.999999746328308	WITHOUT_CLASSIFICATION	2.5367169206678724E-7	TEST
// odd	WITHOUT_CLASSIFICATION	0.9998384129541471	WITHOUT_CLASSIFICATION	1.615870458528387E-4	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999824560172701	WITHOUT_CLASSIFICATION	1.7543982729870805E-5	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999924683791193	WITHOUT_CLASSIFICATION	7.5316208807884635E-6	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999988888394309	WITHOUT_CLASSIFICATION	1.1111605691500892E-6	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999993848982085	WITHOUT_CLASSIFICATION	6.151017914196738E-7	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9997162976766202	WITHOUT_CLASSIFICATION	2.837023233798277E-4	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9990894098448714	WITHOUT_CLASSIFICATION	9.105901551285428E-4	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9991258495236395	WITHOUT_CLASSIFICATION	8.74150476360581E-4	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9990868853429483	WITHOUT_CLASSIFICATION	9.131146570518295E-4	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9990546108015993	WITHOUT_CLASSIFICATION	9.45389198400643E-4	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9990321439813753	WITHOUT_CLASSIFICATION	9.678560186246888E-4	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9990238181353667	WITHOUT_CLASSIFICATION	9.761818646334582E-4	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9990240312329811	WITHOUT_CLASSIFICATION	9.759687670190201E-4	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9990238586339817	WITHOUT_CLASSIFICATION	9.761413660182326E-4	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9990239255226306	WITHOUT_CLASSIFICATION	9.760744773693902E-4	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9990235903766902	WITHOUT_CLASSIFICATION	9.764096233097235E-4	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.99913074563723	WITHOUT_CLASSIFICATION	8.692543627698446E-4	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9991420347314184	WITHOUT_CLASSIFICATION	8.579652685817134E-4	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9991218081907925	WITHOUT_CLASSIFICATION	8.781918092075207E-4	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.9991057647549638	WITHOUT_CLASSIFICATION	8.942352450361394E-4	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9991059384065601	WITHOUT_CLASSIFICATION	8.940615934397586E-4	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9991057153522422	WITHOUT_CLASSIFICATION	8.942846477577431E-4	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.9991056973242279	WITHOUT_CLASSIFICATION	8.943026757720397E-4	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.999121712268283	WITHOUT_CLASSIFICATION	8.782877317170391E-4	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9991296240941637	WITHOUT_CLASSIFICATION	8.703759058363845E-4	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.999989914483663	WITHOUT_CLASSIFICATION	1.0085516336846193E-5	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999999735681326	WITHOUT_CLASSIFICATION	2.643186736781557E-8	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999973062348697	WITHOUT_CLASSIFICATION	2.693765130181804E-6	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999958798311909	WITHOUT_CLASSIFICATION	4.1201688091529926E-6	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999993128588338	WITHOUT_CLASSIFICATION	6.871411661604115E-7	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999992951271663	WITHOUT_CLASSIFICATION	7.048728337118695E-7	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999988064157914	WITHOUT_CLASSIFICATION	1.1935842085956816E-6	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999997920799792	WITHOUT_CLASSIFICATION	2.0792002082650274E-7	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999998464794586	WITHOUT_CLASSIFICATION	1.5352054136843256E-7	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999963727174077	WITHOUT_CLASSIFICATION	3.6272825921958314E-6	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9999836861450994	WITHOUT_CLASSIFICATION	1.6313854900692705E-5	TEST
// integer division	WITHOUT_CLASSIFICATION	0.999994251006011	WITHOUT_CLASSIFICATION	5.748993988944228E-6	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999982431842054	WITHOUT_CLASSIFICATION	1.7568157946933509E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999967728567617	WITHOUT_CLASSIFICATION	3.227143238286133E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999967728567617	WITHOUT_CLASSIFICATION	3.227143238286133E-6	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.999998877649851	WITHOUT_CLASSIFICATION	1.1223501490438506E-6	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999997148434857	WITHOUT_CLASSIFICATION	2.851565142552496E-7	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999154898862	WITHOUT_CLASSIFICATION	8.451011388090515E-8	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999948653077904	WITHOUT_CLASSIFICATION	5.1346922095569235E-6	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999993799124519	WITHOUT_CLASSIFICATION	6.200875480769982E-7	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999988821930728	WITHOUT_CLASSIFICATION	1.117806927234473E-6	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999443276429114	WITHOUT_CLASSIFICATION	5.567235708852263E-5	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999962469629	WITHOUT_CLASSIFICATION	3.7530370998986116E-6	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.999994619774567	WITHOUT_CLASSIFICATION	5.380225433002631E-6	TEST
// base	WITHOUT_CLASSIFICATION	0.9999600319508044	WITHOUT_CLASSIFICATION	3.9968049195658067E-5	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999985638253176	WITHOUT_CLASSIFICATION	1.4361746824665417E-6	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999985433192733	WITHOUT_CLASSIFICATION	1.4566807267128933E-6	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9998905550379423	WITHOUT_CLASSIFICATION	1.094449620577817E-4	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999995397767618	WITHOUT_CLASSIFICATION	4.602232382468791E-7	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999993416701228	WITHOUT_CLASSIFICATION	6.583298770782129E-7	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9998989556344459	WITHOUT_CLASSIFICATION	1.0104436555419888E-4	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999756248803503	WITHOUT_CLASSIFICATION	2.437511964978131E-5	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.999998418547547	WITHOUT_CLASSIFICATION	1.5814524529897818E-6	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999980834379014	WITHOUT_CLASSIFICATION	1.9165620986173036E-6	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999965204539809	WITHOUT_CLASSIFICATION	3.479546019034897E-6	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999916308278141	WITHOUT_CLASSIFICATION	8.369172185888583E-6	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999997543105894	WITHOUT_CLASSIFICATION	2.4568941063778066E-7	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999475701955746	WITHOUT_CLASSIFICATION	5.24298044253608E-5	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999996529893792	WITHOUT_CLASSIFICATION	3.470106207992497E-7	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999980797175437	WITHOUT_CLASSIFICATION	1.920282456206506E-6	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999980723996615	WITHOUT_CLASSIFICATION	1.927600338445297E-6	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999972703254738	WITHOUT_CLASSIFICATION	2.729674526192687E-6	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999970061035932	WITHOUT_CLASSIFICATION	2.9938964068693456E-6	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.999998938282797	WITHOUT_CLASSIFICATION	1.0617172029545567E-6	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999477058509353	WITHOUT_CLASSIFICATION	5.229414906475365E-5	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999787478603263	WITHOUT_CLASSIFICATION	2.1252139673727553E-5	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.999976049234223	WITHOUT_CLASSIFICATION	2.3950765777016122E-5	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.999968625712434	WITHOUT_CLASSIFICATION	3.137428756605804E-5	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999668038243162	WITHOUT_CLASSIFICATION	3.319617568373709E-5	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.999990946918271	WITHOUT_CLASSIFICATION	9.053081728916672E-6	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999896471459374	WITHOUT_CLASSIFICATION	1.035285406251175E-5	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9998655581041525	WITHOUT_CLASSIFICATION	1.3444189584751925E-4	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999959780951245	WITHOUT_CLASSIFICATION	4.0219048755160425E-6	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999997508920577	WITHOUT_CLASSIFICATION	2.4910794222609976E-7	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999992764442982	WITHOUT_CLASSIFICATION	7.235557016982951E-7	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999996696090016	WITHOUT_CLASSIFICATION	3.3039099843625485E-7	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999983756516717	WITHOUT_CLASSIFICATION	1.6243483282651802E-6	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999853888096165	WITHOUT_CLASSIFICATION	1.461119038346869E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999751158947238	WITHOUT_CLASSIFICATION	2.4884105276164723E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999751158947238	WITHOUT_CLASSIFICATION	2.4884105276164723E-5	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999978147006078	WITHOUT_CLASSIFICATION	2.1852993922808113E-6	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999969726716779	WITHOUT_CLASSIFICATION	3.027328322046062E-6	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999978067260787	WITHOUT_CLASSIFICATION	2.193273921306775E-6	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999092046493258	WITHOUT_CLASSIFICATION	9.079535067423042E-5	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999989451414585	WITHOUT_CLASSIFICATION	1.054858541454322E-6	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999343270730225	WITHOUT_CLASSIFICATION	6.567292697750806E-5	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.999999661146089	WITHOUT_CLASSIFICATION	3.388539110141269E-7	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999999356418054	WITHOUT_CLASSIFICATION	6.43581945210301E-8	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999959353259739	WITHOUT_CLASSIFICATION	4.064674026133472E-6	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999948612517414	WITHOUT_CLASSIFICATION	5.138748258509007E-6	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999969663466708	WITHOUT_CLASSIFICATION	3.033653329148812E-6	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999968419427679	WITHOUT_CLASSIFICATION	3.1580572319899167E-6	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999969689121536	WITHOUT_CLASSIFICATION	3.031087846466392E-6	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999543719174853	WITHOUT_CLASSIFICATION	4.562808251478405E-5	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9999911918888127	WITHOUT_CLASSIFICATION	8.8081111874178E-6	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999889225132781	WITHOUT_CLASSIFICATION	1.107748672197143E-5	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999984631367134	WITHOUT_CLASSIFICATION	1.5368632867002962E-6	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999876798587443	WITHOUT_CLASSIFICATION	1.23201412557096E-5	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999998465518516	WITHOUT_CLASSIFICATION	1.5344814840092168E-7	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999944385118988	WITHOUT_CLASSIFICATION	5.561488101086811E-6	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999977656695096	WITHOUT_CLASSIFICATION	2.2343304903185456E-6	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999977656695096	WITHOUT_CLASSIFICATION	2.2343304903185456E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999913564313542	WITHOUT_CLASSIFICATION	8.643568645821252E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999913564313542	WITHOUT_CLASSIFICATION	8.643568645821252E-6	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999990761712517	WITHOUT_CLASSIFICATION	9.238287482752657E-7	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999916219840497	WITHOUT_CLASSIFICATION	8.378015950365372E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999991337354078	WITHOUT_CLASSIFICATION	8.662645921614934E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999972240269607	WITHOUT_CLASSIFICATION	2.7759730394288226E-6	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999994027603075	WITHOUT_CLASSIFICATION	5.972396923770752E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999976550296306	WITHOUT_CLASSIFICATION	2.3449703693536455E-6	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999999074952775	WITHOUT_CLASSIFICATION	9.250472259800283E-8	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999644445689923	WITHOUT_CLASSIFICATION	3.555543100765315E-5	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999889372903169	WITHOUT_CLASSIFICATION	1.1062709683064726E-5	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999959978768447	WITHOUT_CLASSIFICATION	4.002123155337778E-6	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999982945926527	WITHOUT_CLASSIFICATION	1.7054073472971647E-6	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999818117029026	WITHOUT_CLASSIFICATION	1.818829709752102E-5	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999978697749099	WITHOUT_CLASSIFICATION	2.1302250901593283E-6	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999982342218703	WITHOUT_CLASSIFICATION	1.765778129734623E-6	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999996989892422	WITHOUT_CLASSIFICATION	3.010107578670345E-7	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999803297223293	WITHOUT_CLASSIFICATION	1.9670277670667133E-5	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999988063616929	WITHOUT_CLASSIFICATION	1.1936383071608613E-6	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999866822793512	WITHOUT_CLASSIFICATION	1.3317720648907905E-5	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9997136172983393	WITHOUT_CLASSIFICATION	2.8638270166072747E-4	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999989415738403	WITHOUT_CLASSIFICATION	1.0584261597123405E-6	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999668553939188	WITHOUT_CLASSIFICATION	3.31446060811235E-5	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999972611203578	WITHOUT_CLASSIFICATION	2.738879642206393E-6	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999640867532121	WITHOUT_CLASSIFICATION	3.59132467877413E-5	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999893336068527	WITHOUT_CLASSIFICATION	1.0666393147170153E-5	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999973873202453	WITHOUT_CLASSIFICATION	2.612679754665877E-6	TEST
// undo check	WITHOUT_CLASSIFICATION	0.999982301371364	WITHOUT_CLASSIFICATION	1.769862863603394E-5	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999565626045	WITHOUT_CLASSIFICATION	4.343739557096915E-8	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999881694185614	WITHOUT_CLASSIFICATION	1.1830581438634915E-5	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999983982751186	WITHOUT_CLASSIFICATION	1.601724881319235E-6	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999940722912886	WITHOUT_CLASSIFICATION	5.927708711355659E-6	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999940722912886	WITHOUT_CLASSIFICATION	5.927708711355659E-6	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999983933816479	WITHOUT_CLASSIFICATION	1.606618352073394E-6	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999943528890051	WITHOUT_CLASSIFICATION	5.647110994913558E-6	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.999997864071531	WITHOUT_CLASSIFICATION	2.135928468929269E-6	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999931658133002	WITHOUT_CLASSIFICATION	6.834186699871433E-6	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999868828969177	WITHOUT_CLASSIFICATION	1.3117103082171049E-5	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.999996524417534	WITHOUT_CLASSIFICATION	3.4755824661168325E-6	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999989239610342	WITHOUT_CLASSIFICATION	1.0760389658403646E-6	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999997878186193	WITHOUT_CLASSIFICATION	2.12181380729833E-7	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999986856251202	WITHOUT_CLASSIFICATION	1.3143748798792745E-6	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999974362091198	WITHOUT_CLASSIFICATION	2.5637908801221636E-6	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999908720999432	WITHOUT_CLASSIFICATION	9.127900056754934E-6	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999792018212018	WITHOUT_CLASSIFICATION	2.0798178798131028E-5	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.999992640246804	WITHOUT_CLASSIFICATION	7.359753195943322E-6	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999972423770149	WITHOUT_CLASSIFICATION	2.757622984972968E-6	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999955457071243	WITHOUT_CLASSIFICATION	4.454292875683344E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999561049655387	WITHOUT_CLASSIFICATION	4.3895034461288484E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999984323776594	WITHOUT_CLASSIFICATION	1.567622340532084E-6	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999993269643132	WITHOUT_CLASSIFICATION	6.730356869449747E-7	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.999997930675519	WITHOUT_CLASSIFICATION	2.0693244809729174E-6	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999999257298712	WITHOUT_CLASSIFICATION	7.427012884910092E-8	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999983612708756	WITHOUT_CLASSIFICATION	1.6387291243587308E-6	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999983918804877	WITHOUT_CLASSIFICATION	1.608119512414159E-6	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9998442029015044	WITHOUT_CLASSIFICATION	1.5579709849564976E-4	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999652031308152	WITHOUT_CLASSIFICATION	3.4796869184779845E-5	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999952645867703	WITHOUT_CLASSIFICATION	4.735413229634037E-6	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999987063706909	WITHOUT_CLASSIFICATION	1.2936293091051853E-6	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999812656099363	WITHOUT_CLASSIFICATION	1.8734390063778343E-5	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999964594898338	WITHOUT_CLASSIFICATION	3.5405101661956007E-6	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999956968907422	WITHOUT_CLASSIFICATION	4.303109257818646E-6	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999918276081471	WITHOUT_CLASSIFICATION	8.172391852919098E-6	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999990658808094	WITHOUT_CLASSIFICATION	9.34119190614902E-7	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999864012817529	WITHOUT_CLASSIFICATION	1.3598718247115127E-5	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999844374183192	WITHOUT_CLASSIFICATION	1.5562581680786052E-5	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9999938575100527	WITHOUT_CLASSIFICATION	6.1424899473565E-6	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999989095049127	WITHOUT_CLASSIFICATION	1.090495087322934E-6	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999971049994618	WITHOUT_CLASSIFICATION	2.895000538193827E-6	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999693045758066	WITHOUT_CLASSIFICATION	3.0695424193459306E-5	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999720745983844	WITHOUT_CLASSIFICATION	2.7925401615670327E-5	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999970927072445	WITHOUT_CLASSIFICATION	2.9072927556328295E-6	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.999996883759887	WITHOUT_CLASSIFICATION	3.116240112856233E-6	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999997428780666	WITHOUT_CLASSIFICATION	2.5712193344216876E-7	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999993757392489	WITHOUT_CLASSIFICATION	6.24260751099671E-7	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.999981370416125	WITHOUT_CLASSIFICATION	1.8629583875009716E-5	TEST
// while	WITHOUT_CLASSIFICATION	0.9999496683076102	WITHOUT_CLASSIFICATION	5.03316923897892E-5	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.998924906230881	WITHOUT_CLASSIFICATION	0.0010750937691190174	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.999999838496251	WITHOUT_CLASSIFICATION	1.6150374910596568E-7	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999862294412056	WITHOUT_CLASSIFICATION	1.3770558794326766E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999994528787322	WITHOUT_CLASSIFICATION	5.47121267777319E-7	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999983292363918	WITHOUT_CLASSIFICATION	1.6707636082363064E-6	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999798505272122	WITHOUT_CLASSIFICATION	2.0149472787802868E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9991658083584048	WITHOUT_CLASSIFICATION	8.341916415952505E-4	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9991946557252722	WITHOUT_CLASSIFICATION	8.053442747277367E-4	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9991582865193731	WITHOUT_CLASSIFICATION	8.417134806268918E-4	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9992771010238871	WITHOUT_CLASSIFICATION	7.22898976112906E-4	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9998989144744653	WITHOUT_CLASSIFICATION	1.0108552553468725E-4	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9998982714922656	WITHOUT_CLASSIFICATION	1.0172850773443579E-4	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999183209124326	WITHOUT_CLASSIFICATION	8.167908756747801E-5	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999976627691021	WITHOUT_CLASSIFICATION	2.337230897839422E-6	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999175118679337	WITHOUT_CLASSIFICATION	8.24881320663514E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999794359147886	WITHOUT_CLASSIFICATION	2.0564085211442728E-5	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9989510029690489	WITHOUT_CLASSIFICATION	0.0010489970309510925	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9991658083584048	WITHOUT_CLASSIFICATION	8.341916415952505E-4	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9991582865193731	WITHOUT_CLASSIFICATION	8.417134806268918E-4	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9991946557252722	WITHOUT_CLASSIFICATION	8.053442747277367E-4	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9991671099197336	WITHOUT_CLASSIFICATION	8.328900802664092E-4	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9991482807895847	WITHOUT_CLASSIFICATION	8.517192104152125E-4	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9998651339228698	WITHOUT_CLASSIFICATION	1.3486607713018365E-4	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999913740088262	WITHOUT_CLASSIFICATION	8.625991173745506E-6	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.999994693508695	WITHOUT_CLASSIFICATION	5.306491305068245E-6	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999831879365636	WITHOUT_CLASSIFICATION	1.6812063436442962E-5	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999683432694089	WITHOUT_CLASSIFICATION	3.165673059118178E-5	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999919993574079	WITHOUT_CLASSIFICATION	8.000642592040876E-6	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999864387609103	WITHOUT_CLASSIFICATION	1.3561239089748523E-5	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999938925860918	WITHOUT_CLASSIFICATION	6.107413908072133E-6	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999943713492677	WITHOUT_CLASSIFICATION	5.628650732268519E-6	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999988119951003	WITHOUT_CLASSIFICATION	1.1880048995905776E-6	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999778200732082	WITHOUT_CLASSIFICATION	2.2179926791710646E-5	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999756990583806	WITHOUT_CLASSIFICATION	2.4300941619476064E-5	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999995184540963	WITHOUT_CLASSIFICATION	4.815459038051352E-7	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999922559067612	WITHOUT_CLASSIFICATION	7.744093238677439E-6	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999944344140703	WITHOUT_CLASSIFICATION	5.56558592971114E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999956202058397	WITHOUT_CLASSIFICATION	4.379794160356624E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999956202058397	WITHOUT_CLASSIFICATION	4.379794160356624E-6	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999981091532507	WITHOUT_CLASSIFICATION	1.8908467491779485E-6	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999966493536712	WITHOUT_CLASSIFICATION	3.3506463289296615E-6	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999622980746774	WITHOUT_CLASSIFICATION	3.7701925322582355E-5	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999957074679914	WITHOUT_CLASSIFICATION	4.292532008653927E-6	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999943354534527	WITHOUT_CLASSIFICATION	5.6645465473277E-6	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.999999221356786	WITHOUT_CLASSIFICATION	7.786432140689577E-7	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.999998697840026	WITHOUT_CLASSIFICATION	1.3021599739398537E-6	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999928576629099	WITHOUT_CLASSIFICATION	7.142337090205573E-6	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999985908937988	WITHOUT_CLASSIFICATION	1.4091062011146247E-6	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999981920128657	WITHOUT_CLASSIFICATION	1.8079871343375458E-6	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999990020664897	WITHOUT_CLASSIFICATION	9.97933510217271E-7	TEST
//                }	WITHOUT_CLASSIFICATION	0.999822858055393	WITHOUT_CLASSIFICATION	1.7714194460698702E-4	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999969900728005	WITHOUT_CLASSIFICATION	3.009927199531724E-6	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999990474241114	WITHOUT_CLASSIFICATION	9.52575888648524E-7	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999994045264208	WITHOUT_CLASSIFICATION	5.954735791897439E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999945382144682	WITHOUT_CLASSIFICATION	5.461785531829409E-6	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999831606191049	WITHOUT_CLASSIFICATION	1.683938089514885E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999974664562292	WITHOUT_CLASSIFICATION	2.5335437707719017E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999974664562292	WITHOUT_CLASSIFICATION	2.5335437707719017E-6	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9999426600147897	WITHOUT_CLASSIFICATION	5.733998521027458E-5	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999121175916288	WITHOUT_CLASSIFICATION	8.788240837120614E-5	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999994515349436	WITHOUT_CLASSIFICATION	5.484650564562082E-7	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.999933312618996	WITHOUT_CLASSIFICATION	6.668738100404688E-5	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999942286660892	WITHOUT_CLASSIFICATION	5.771333910823527E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999974664562292	WITHOUT_CLASSIFICATION	2.5335437707719017E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999974664562292	WITHOUT_CLASSIFICATION	2.5335437707719017E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999998891164237	WITHOUT_CLASSIFICATION	1.1088357634523571E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999998891164237	WITHOUT_CLASSIFICATION	1.1088357634523571E-7	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.999992983782125	WITHOUT_CLASSIFICATION	7.016217874977495E-6	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999301681556626	WITHOUT_CLASSIFICATION	6.983184433742615E-5	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999996686737137	WITHOUT_CLASSIFICATION	3.3132628634025066E-7	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.999999340273347	WITHOUT_CLASSIFICATION	6.597266528865323E-7	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999992352295037	WITHOUT_CLASSIFICATION	7.647704963304891E-7	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999992352295037	WITHOUT_CLASSIFICATION	7.647704963304891E-7	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999985953770731	WITHOUT_CLASSIFICATION	1.404622926885594E-6	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999966521822173	WITHOUT_CLASSIFICATION	3.347817782614621E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999984383430343	WITHOUT_CLASSIFICATION	1.5616569658141629E-6	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999884379905064	WITHOUT_CLASSIFICATION	1.1562009493647571E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999889101125	WITHOUT_CLASSIFICATION	1.1089887500773053E-7	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999939883562359	WITHOUT_CLASSIFICATION	6.011643764119041E-6	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999992438544077	WITHOUT_CLASSIFICATION	7.561455922000438E-7	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999960590756005	WITHOUT_CLASSIFICATION	3.940924399552049E-6	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999992212607961	WITHOUT_CLASSIFICATION	7.787392037970543E-7	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999994174494226	WITHOUT_CLASSIFICATION	5.825505774972195E-7	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999994862652998	WITHOUT_CLASSIFICATION	5.137347001398046E-7	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.999998740447352	WITHOUT_CLASSIFICATION	1.259552647986238E-6	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999992994331834	WITHOUT_CLASSIFICATION	7.005668165982067E-7	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999965988813218	WITHOUT_CLASSIFICATION	3.401118678222568E-6	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999945382144682	WITHOUT_CLASSIFICATION	5.461785531829409E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999974664562292	WITHOUT_CLASSIFICATION	2.5335437707719017E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999998891164237	WITHOUT_CLASSIFICATION	1.1088357634523571E-7	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999939883562359	WITHOUT_CLASSIFICATION	6.011643764119041E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999473044854	WITHOUT_CLASSIFICATION	5.26955145627989E-8	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999473044854	WITHOUT_CLASSIFICATION	5.26955145627989E-8	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999991504396705	WITHOUT_CLASSIFICATION	8.495603294655549E-7	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.999998966095355	WITHOUT_CLASSIFICATION	1.0339046450358096E-6	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999997959447033	WITHOUT_CLASSIFICATION	2.0405529665857216E-7	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999988720932379	WITHOUT_CLASSIFICATION	1.127906762096446E-6	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999980102184393	WITHOUT_CLASSIFICATION	1.989781560745152E-6	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999998865194523	WITHOUT_CLASSIFICATION	1.1348054779046496E-7	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.999999132529982	WITHOUT_CLASSIFICATION	8.674700179231305E-7	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999973803899058	WITHOUT_CLASSIFICATION	2.6196100942287767E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999966449358353	WITHOUT_CLASSIFICATION	3.3550641647866178E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999983447900935	WITHOUT_CLASSIFICATION	1.6552099065694772E-6	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.999993736775272	WITHOUT_CLASSIFICATION	6.26322472798479E-6	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999995194403278	WITHOUT_CLASSIFICATION	4.805596722308695E-7	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.999994491743115	WITHOUT_CLASSIFICATION	5.508256884931285E-6	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999831606191049	WITHOUT_CLASSIFICATION	1.683938089514885E-5	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999998891164237	WITHOUT_CLASSIFICATION	1.1088357634523571E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999966521822173	WITHOUT_CLASSIFICATION	3.347817782614621E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999984383430343	WITHOUT_CLASSIFICATION	1.5616569658141629E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999984383430343	WITHOUT_CLASSIFICATION	1.5616569658141629E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999889101125	WITHOUT_CLASSIFICATION	1.1089887500773053E-7	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999939883562359	WITHOUT_CLASSIFICATION	6.011643764119041E-6	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999939883562359	WITHOUT_CLASSIFICATION	6.011643764119041E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999473044854	WITHOUT_CLASSIFICATION	5.26955145627989E-8	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999999707853394	WITHOUT_CLASSIFICATION	2.921466066410648E-8	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999929826351145	WITHOUT_CLASSIFICATION	7.017364885543026E-6	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999596436575	WITHOUT_CLASSIFICATION	4.035634245847925E-8	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999979496681597	WITHOUT_CLASSIFICATION	2.0503318402946904E-6	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999995367696518	WITHOUT_CLASSIFICATION	4.6323034819593364E-7	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.999994549131438	WITHOUT_CLASSIFICATION	5.450868561931836E-6	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999935470058806	WITHOUT_CLASSIFICATION	6.452994119480666E-6	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999998231547083	WITHOUT_CLASSIFICATION	1.768452917382679E-7	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999962791286954	WITHOUT_CLASSIFICATION	3.720871304536558E-6	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999966521822173	WITHOUT_CLASSIFICATION	3.347817782614621E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999984383430343	WITHOUT_CLASSIFICATION	1.5616569658141629E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999984383430343	WITHOUT_CLASSIFICATION	1.5616569658141629E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999889101125	WITHOUT_CLASSIFICATION	1.1089887500773053E-7	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999973803899058	WITHOUT_CLASSIFICATION	2.6196100942287767E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999983447900935	WITHOUT_CLASSIFICATION	1.6552099065694772E-6	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999920060670855	WITHOUT_CLASSIFICATION	7.993932914520427E-6	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999981715356054	WITHOUT_CLASSIFICATION	1.828464394478734E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999072983000704	WITHOUT_CLASSIFICATION	9.270169992946472E-5	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999072983000704	WITHOUT_CLASSIFICATION	9.270169992946472E-5	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999882379380698	WITHOUT_CLASSIFICATION	1.1762061930193823E-5	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999887713404491	WITHOUT_CLASSIFICATION	1.1228659550990381E-5	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999995811659443	WITHOUT_CLASSIFICATION	4.1883405576778586E-7	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999943841999761	WITHOUT_CLASSIFICATION	5.615800023957289E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999813509132579	WITHOUT_CLASSIFICATION	1.8649086742105798E-5	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999813509132579	WITHOUT_CLASSIFICATION	1.8649086742105798E-5	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999977313330222	WITHOUT_CLASSIFICATION	2.268666977809456E-6	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999977313330222	WITHOUT_CLASSIFICATION	2.268666977809456E-6	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999966279453925	WITHOUT_CLASSIFICATION	3.3720546076037016E-6	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999966279453925	WITHOUT_CLASSIFICATION	3.3720546076037016E-6	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999887066479961	WITHOUT_CLASSIFICATION	1.1293352003892516E-5	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999951416848906	WITHOUT_CLASSIFICATION	4.858315109472622E-6	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999976628043248	WITHOUT_CLASSIFICATION	2.3371956752535702E-6	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.999997669438155	WITHOUT_CLASSIFICATION	2.3305618449024364E-6	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999992771649362	WITHOUT_CLASSIFICATION	7.228350638391016E-7	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999621557257498	WITHOUT_CLASSIFICATION	3.7844274250288236E-5	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.999994758232732	WITHOUT_CLASSIFICATION	5.241767268033174E-6	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999989889405999	WITHOUT_CLASSIFICATION	1.0110594001151656E-6	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.999998292697787	WITHOUT_CLASSIFICATION	1.7073022130129107E-6	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999985509557422	WITHOUT_CLASSIFICATION	1.4490442577749218E-6	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999990378151719	WITHOUT_CLASSIFICATION	9.621848280670936E-7	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999993764833399	WITHOUT_CLASSIFICATION	6.23516660027131E-7	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999962589496354	WITHOUT_CLASSIFICATION	3.741050364654415E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999802914953047	WITHOUT_CLASSIFICATION	1.9708504695310797E-5	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999802914953047	WITHOUT_CLASSIFICATION	1.9708504695310797E-5	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999968500614906	WITHOUT_CLASSIFICATION	3.1499385092283236E-6	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999976550296306	WITHOUT_CLASSIFICATION	2.3449703693536455E-6	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999995044594981	WITHOUT_CLASSIFICATION	4.955405018864055E-7	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999998893094146	WITHOUT_CLASSIFICATION	1.1069058540521449E-7	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999988660843078	WITHOUT_CLASSIFICATION	1.133915692184066E-6	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999916091586573	WITHOUT_CLASSIFICATION	8.390841342805442E-6	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999932317249902	WITHOUT_CLASSIFICATION	6.768275009691566E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999989352208919	WITHOUT_CLASSIFICATION	1.064779108075416E-6	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999979116916232	WITHOUT_CLASSIFICATION	2.0883083768099235E-6	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999959362413335	WITHOUT_CLASSIFICATION	4.06375866646336E-6	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999933367401218	WITHOUT_CLASSIFICATION	6.663259878232692E-6	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999943511397658	WITHOUT_CLASSIFICATION	5.648860234302687E-6	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999993465731453	WITHOUT_CLASSIFICATION	6.534268547239665E-7	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999999901414294	WITHOUT_CLASSIFICATION	9.858570665343605E-9	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999981578788465	WITHOUT_CLASSIFICATION	1.8421211536058902E-6	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999987607364824	WITHOUT_CLASSIFICATION	1.2392635176764482E-6	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999852661081572	WITHOUT_CLASSIFICATION	1.4733891842771377E-5	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999982279302917	WITHOUT_CLASSIFICATION	1.7720697082809542E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999955483167416	WITHOUT_CLASSIFICATION	4.451683258355528E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999955483167416	WITHOUT_CLASSIFICATION	4.451683258355528E-6	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999981243292043	WITHOUT_CLASSIFICATION	1.8756707956980707E-6	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999951469839097	WITHOUT_CLASSIFICATION	4.853016090301797E-5	TEST
//[]	WITHOUT_CLASSIFICATION	0.9970451232966062	WITHOUT_CLASSIFICATION	0.0029548767033938197	TEST
//[]	WITHOUT_CLASSIFICATION	0.9970451232966062	WITHOUT_CLASSIFICATION	0.0029548767033938197	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999986575547489	WITHOUT_CLASSIFICATION	1.3424452510080987E-6	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9997912250553795	WITHOUT_CLASSIFICATION	2.0877494462048812E-4	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9993899936207783	WITHOUT_CLASSIFICATION	6.100063792215878E-4	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9997021929193607	WITHOUT_CLASSIFICATION	2.97807080639323E-4	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999928080639958	WITHOUT_CLASSIFICATION	7.19193600414477E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999977232168271	WITHOUT_CLASSIFICATION	2.276783172858672E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999977232168271	WITHOUT_CLASSIFICATION	2.276783172858672E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999993039775619	WITHOUT_CLASSIFICATION	6.96022438055686E-7	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999922291938488	WITHOUT_CLASSIFICATION	7.77080615117919E-6	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999989383145631	WITHOUT_CLASSIFICATION	1.0616854369336394E-6	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999527532937449	WITHOUT_CLASSIFICATION	4.72467062552014E-5	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999951469839097	WITHOUT_CLASSIFICATION	4.853016090301797E-5	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9997802739814221	WITHOUT_CLASSIFICATION	2.1972601857801088E-4	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999963058921875	WITHOUT_CLASSIFICATION	3.694107812505587E-5	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999963058921875	WITHOUT_CLASSIFICATION	3.694107812505587E-5	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999938129995919	WITHOUT_CLASSIFICATION	6.187000408122286E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999968433989713	WITHOUT_CLASSIFICATION	3.1566010286490444E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999968433989713	WITHOUT_CLASSIFICATION	3.1566010286490444E-6	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999979495109466	WITHOUT_CLASSIFICATION	2.0504890534260543E-6	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999979495109466	WITHOUT_CLASSIFICATION	2.0504890534260543E-6	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999979495109466	WITHOUT_CLASSIFICATION	2.0504890534260543E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999968433989713	WITHOUT_CLASSIFICATION	3.1566010286490444E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999968433989713	WITHOUT_CLASSIFICATION	3.1566010286490444E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999938129995919	WITHOUT_CLASSIFICATION	6.187000408122286E-6	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999984753223639	WITHOUT_CLASSIFICATION	1.5246776362027758E-6	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999909942460822	WITHOUT_CLASSIFICATION	9.005753917750341E-6	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.999999370447742	WITHOUT_CLASSIFICATION	6.295522580184041E-7	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999805100396276	WITHOUT_CLASSIFICATION	1.948996037240387E-5	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999992052317872	WITHOUT_CLASSIFICATION	7.94768212734079E-7	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999954912923267	WITHOUT_CLASSIFICATION	4.50870767340802E-6	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999931290388605	WITHOUT_CLASSIFICATION	6.870961139593991E-6	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999978711138864	WITHOUT_CLASSIFICATION	2.1288861136740565E-6	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999933367401218	WITHOUT_CLASSIFICATION	6.663259878232692E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999968433989713	WITHOUT_CLASSIFICATION	3.1566010286490444E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999968433989713	WITHOUT_CLASSIFICATION	3.1566010286490444E-6	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999992686106799	WITHOUT_CLASSIFICATION	7.313893201135766E-7	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999880962401176	WITHOUT_CLASSIFICATION	1.1903759882412925E-5	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999873394179524	WITHOUT_CLASSIFICATION	1.2660582047740249E-5	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999994153267282	WITHOUT_CLASSIFICATION	5.846732718427184E-7	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999952141158007	WITHOUT_CLASSIFICATION	4.785884199290685E-6	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.999998901554986	WITHOUT_CLASSIFICATION	1.098445013882384E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999995813761433	WITHOUT_CLASSIFICATION	4.186238566813664E-7	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999995346988063	WITHOUT_CLASSIFICATION	4.6530119371107246E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999950726081227	WITHOUT_CLASSIFICATION	4.927391877305663E-6	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999994522635313	WITHOUT_CLASSIFICATION	5.477364686839869E-7	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9998424164895978	WITHOUT_CLASSIFICATION	1.575835104021406E-4	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999947515394978	WITHOUT_CLASSIFICATION	5.2484605021482146E-6	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999978345036842	WITHOUT_CLASSIFICATION	2.16549631580232E-6	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999998035173763	WITHOUT_CLASSIFICATION	1.9648262370843264E-6	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999990247311933	WITHOUT_CLASSIFICATION	9.752688067210382E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999481888892546	WITHOUT_CLASSIFICATION	5.181111074548001E-5	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999481888892546	WITHOUT_CLASSIFICATION	5.181111074548001E-5	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999481888892546	WITHOUT_CLASSIFICATION	5.181111074548001E-5	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999976174836012	WITHOUT_CLASSIFICATION	2.38251639872075E-6	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999980230762462	WITHOUT_CLASSIFICATION	1.976923753823041E-6	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999990591048368	WITHOUT_CLASSIFICATION	9.408951631765326E-7	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.999998359360362	WITHOUT_CLASSIFICATION	1.6406396379563937E-6	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.999999210426744	WITHOUT_CLASSIFICATION	7.895732560029745E-7	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999970928049863	WITHOUT_CLASSIFICATION	2.90719501370631E-6	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999998909831019	WITHOUT_CLASSIFICATION	1.0901689810209197E-7	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999978087876861	WITHOUT_CLASSIFICATION	2.1912123139639595E-6	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.999998906347913	WITHOUT_CLASSIFICATION	1.0936520870395085E-6	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999949948504603	WITHOUT_CLASSIFICATION	5.005149539713631E-6	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999993489937238	WITHOUT_CLASSIFICATION	6.510062763426522E-7	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999984035596711	WITHOUT_CLASSIFICATION	1.596440328943241E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999993039775619	WITHOUT_CLASSIFICATION	6.96022438055686E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999968433989713	WITHOUT_CLASSIFICATION	3.1566010286490444E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999968433989713	WITHOUT_CLASSIFICATION	3.1566010286490444E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999938129995919	WITHOUT_CLASSIFICATION	6.187000408122286E-6	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999954912923267	WITHOUT_CLASSIFICATION	4.50870767340802E-6	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999880962401176	WITHOUT_CLASSIFICATION	1.1903759882412925E-5	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999994153267282	WITHOUT_CLASSIFICATION	5.846732718427184E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.999998901554986	WITHOUT_CLASSIFICATION	1.098445013882384E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999873394179524	WITHOUT_CLASSIFICATION	1.2660582047740249E-5	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999995813761433	WITHOUT_CLASSIFICATION	4.186238566813664E-7	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999994522635313	WITHOUT_CLASSIFICATION	5.477364686839869E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999950726081227	WITHOUT_CLASSIFICATION	4.927391877305663E-6	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999947515394978	WITHOUT_CLASSIFICATION	5.2484605021482146E-6	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999961773032002	WITHOUT_CLASSIFICATION	3.822696799710423E-6	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999988749528242	WITHOUT_CLASSIFICATION	1.1250471756941373E-6	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999927959927086	WITHOUT_CLASSIFICATION	7.204007291316734E-6	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999920191501172	WITHOUT_CLASSIFICATION	7.980849882843004E-6	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999988433037479	WITHOUT_CLASSIFICATION	1.156696252037641E-6	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.999990782133246	WITHOUT_CLASSIFICATION	9.217866753989753E-6	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999953652253002	WITHOUT_CLASSIFICATION	4.6347746997868105E-6	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.999999976072422	WITHOUT_CLASSIFICATION	2.3927578094500927E-8	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999989893036327	WITHOUT_CLASSIFICATION	1.0106963672319477E-6	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999994276688372	WITHOUT_CLASSIFICATION	5.723311628053894E-7	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999980144368592	WITHOUT_CLASSIFICATION	1.9855631407139795E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999998398858336	WITHOUT_CLASSIFICATION	1.601141664032403E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999949100336157	WITHOUT_CLASSIFICATION	5.0899663842172E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999992373522836	WITHOUT_CLASSIFICATION	7.62647716437703E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999985557330736	WITHOUT_CLASSIFICATION	1.4442669263281441E-6	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999969524153003	WITHOUT_CLASSIFICATION	3.0475846997039546E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999960715116979	WITHOUT_CLASSIFICATION	3.928488302154642E-6	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999917861729211	WITHOUT_CLASSIFICATION	8.213827078966354E-6	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999986518585471	WITHOUT_CLASSIFICATION	1.3481414529336597E-6	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999970593012745	WITHOUT_CLASSIFICATION	2.9406987255423937E-6	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999996180425318	WITHOUT_CLASSIFICATION	3.819574682597464E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999905840992	WITHOUT_CLASSIFICATION	9.415900806214245E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999905840992	WITHOUT_CLASSIFICATION	9.415900806214245E-8	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999979866190702	WITHOUT_CLASSIFICATION	2.0133809297779805E-6	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999990510590315	WITHOUT_CLASSIFICATION	9.489409683940522E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9994069661377633	WITHOUT_CLASSIFICATION	5.930338622366741E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9994069661377633	WITHOUT_CLASSIFICATION	5.930338622366741E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9994069661377633	WITHOUT_CLASSIFICATION	5.930338622366741E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9982792566398079	WITHOUT_CLASSIFICATION	0.001720743360192061	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9982792566398079	WITHOUT_CLASSIFICATION	0.001720743360192061	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9982792566398079	WITHOUT_CLASSIFICATION	0.001720743360192061	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9982792566398079	WITHOUT_CLASSIFICATION	0.001720743360192061	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9989663315768998	WITHOUT_CLASSIFICATION	0.0010336684231001987	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9989663315768998	WITHOUT_CLASSIFICATION	0.0010336684231001987	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9989663315768998	WITHOUT_CLASSIFICATION	0.0010336684231001987	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9989890257909744	WITHOUT_CLASSIFICATION	0.0010109742090256338	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9989890257909744	WITHOUT_CLASSIFICATION	0.0010109742090256338	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9989543039984338	WITHOUT_CLASSIFICATION	0.0010456960015661984	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9990918378185925	WITHOUT_CLASSIFICATION	9.081621814074919E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999990510590315	WITHOUT_CLASSIFICATION	9.489409683940522E-7	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999990755338808	WITHOUT_CLASSIFICATION	9.244661192011091E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9994069661377633	WITHOUT_CLASSIFICATION	5.930338622366741E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9994069661377633	WITHOUT_CLASSIFICATION	5.930338622366741E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9982792566398079	WITHOUT_CLASSIFICATION	0.001720743360192061	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9982792566398079	WITHOUT_CLASSIFICATION	0.001720743360192061	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9982792566398079	WITHOUT_CLASSIFICATION	0.001720743360192061	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9989663315768998	WITHOUT_CLASSIFICATION	0.0010336684231001987	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9989663315768998	WITHOUT_CLASSIFICATION	0.0010336684231001987	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9989890257909744	WITHOUT_CLASSIFICATION	0.0010109742090256338	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9990918378185925	WITHOUT_CLASSIFICATION	9.081621814074919E-4	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999987898334619	WITHOUT_CLASSIFICATION	1.210166538079592E-6	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999987898334619	WITHOUT_CLASSIFICATION	1.210166538079592E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999986591562068	WITHOUT_CLASSIFICATION	1.3408437931738727E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999986591562068	WITHOUT_CLASSIFICATION	1.3408437931738727E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999687490955882	WITHOUT_CLASSIFICATION	3.125090441175073E-5	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999687490955882	WITHOUT_CLASSIFICATION	3.125090441175073E-5	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999974324670036	WITHOUT_CLASSIFICATION	2.567532996461945E-6	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999973275691223	WITHOUT_CLASSIFICATION	2.6724308776876164E-6	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999973275691223	WITHOUT_CLASSIFICATION	2.6724308776876164E-6	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999987355967183	WITHOUT_CLASSIFICATION	1.2644032817862074E-6	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999987355967183	WITHOUT_CLASSIFICATION	1.2644032817862074E-6	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999980796683291	WITHOUT_CLASSIFICATION	1.9203316709008407E-6	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999878766477628	WITHOUT_CLASSIFICATION	1.2123352237249512E-5	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999878766477628	WITHOUT_CLASSIFICATION	1.2123352237249512E-5	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999999805759491	WITHOUT_CLASSIFICATION	1.9424050896025517E-7	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999976729423843	WITHOUT_CLASSIFICATION	2.3270576157695076E-6	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999949436390871	WITHOUT_CLASSIFICATION	5.056360912814767E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9982792566398079	WITHOUT_CLASSIFICATION	0.001720743360192061	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9982792566398079	WITHOUT_CLASSIFICATION	0.001720743360192061	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999999805759491	WITHOUT_CLASSIFICATION	1.9424050896025517E-7	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999964667646716	WITHOUT_CLASSIFICATION	3.5332353282782822E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999807557855608	WITHOUT_CLASSIFICATION	1.924421443927346E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999807557855608	WITHOUT_CLASSIFICATION	1.924421443927346E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999807557855608	WITHOUT_CLASSIFICATION	1.924421443927346E-5	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999982809421675	WITHOUT_CLASSIFICATION	1.7190578325509192E-6	TEST
// args	WITHOUT_CLASSIFICATION	0.9999598128254339	WITHOUT_CLASSIFICATION	4.0187174566173616E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999191254389864	WITHOUT_CLASSIFICATION	8.087456101353803E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999191254389864	WITHOUT_CLASSIFICATION	8.087456101353803E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999919484322065	WITHOUT_CLASSIFICATION	8.051567793555157E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999964577998043	WITHOUT_CLASSIFICATION	3.5422001957032064E-6	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.999996189203539	WITHOUT_CLASSIFICATION	3.8107964609221477E-6	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999921660083162	WITHOUT_CLASSIFICATION	7.833991683814491E-6	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999964612434077	WITHOUT_CLASSIFICATION	3.5387565924089746E-6	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999939722786543	WITHOUT_CLASSIFICATION	6.02772134568991E-6	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999939722786543	WITHOUT_CLASSIFICATION	6.02772134568991E-6	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999987645449943	WITHOUT_CLASSIFICATION	1.2354550057998416E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9989058629058205	WITHOUT_CLASSIFICATION	0.001094137094179481	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9989058629058205	WITHOUT_CLASSIFICATION	0.001094137094179481	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9982792566398079	WITHOUT_CLASSIFICATION	0.001720743360192061	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999807557855608	WITHOUT_CLASSIFICATION	1.924421443927346E-5	TEST
// args	WITHOUT_CLASSIFICATION	0.9999598128254339	WITHOUT_CLASSIFICATION	4.0187174566173616E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999191254389864	WITHOUT_CLASSIFICATION	8.087456101353803E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999919484322065	WITHOUT_CLASSIFICATION	8.051567793555157E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999964577998043	WITHOUT_CLASSIFICATION	3.5422001957032064E-6	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.999996189203539	WITHOUT_CLASSIFICATION	3.8107964609221477E-6	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999921660083162	WITHOUT_CLASSIFICATION	7.833991683814491E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9989058629058205	WITHOUT_CLASSIFICATION	0.001094137094179481	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999941252447648	WITHOUT_CLASSIFICATION	5.874755235188216E-6	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999963157509415	WITHOUT_CLASSIFICATION	3.684249058634545E-6	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999957402006019	WITHOUT_CLASSIFICATION	4.259799398101586E-6	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999970681671954	WITHOUT_CLASSIFICATION	2.9318328045047444E-6	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.999992787360629	WITHOUT_CLASSIFICATION	7.2126393709540484E-6	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999964239640097	WITHOUT_CLASSIFICATION	3.5760359903788813E-6	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999939883452273	WITHOUT_CLASSIFICATION	6.011654772637107E-6	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999939883452273	WITHOUT_CLASSIFICATION	6.011654772637107E-6	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999984073708285	WITHOUT_CLASSIFICATION	1.592629171506042E-6	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.999998995419612	WITHOUT_CLASSIFICATION	1.0045803880243606E-6	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999982530938114	WITHOUT_CLASSIFICATION	1.7469061885612823E-6	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999986207673909	WITHOUT_CLASSIFICATION	1.3792326091343048E-6	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999989210252442	WITHOUT_CLASSIFICATION	1.078974755696891E-6	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999989210252442	WITHOUT_CLASSIFICATION	1.078974755696891E-6	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999994398455032	WITHOUT_CLASSIFICATION	5.601544968061352E-7	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999993603366777	WITHOUT_CLASSIFICATION	6.396633222957241E-7	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999986042410683	WITHOUT_CLASSIFICATION	1.3957589317350662E-6	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999986042410683	WITHOUT_CLASSIFICATION	1.3957589317350662E-6	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.999998239463014	WITHOUT_CLASSIFICATION	1.7605369859453419E-6	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999984932733798	WITHOUT_CLASSIFICATION	1.506726620152096E-6	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999964612434077	WITHOUT_CLASSIFICATION	3.5387565924089746E-6	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999778589361296	WITHOUT_CLASSIFICATION	2.2141063870409663E-5	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999994591798134	WITHOUT_CLASSIFICATION	5.40820186727633E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999971844110229	WITHOUT_CLASSIFICATION	2.815588977125734E-6	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999995728487597	WITHOUT_CLASSIFICATION	4.271512403759077E-7	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999965840197925	WITHOUT_CLASSIFICATION	3.4159802075059246E-6	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.999998653526817	WITHOUT_CLASSIFICATION	1.3464731829321863E-6	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999977651493546	WITHOUT_CLASSIFICATION	2.2348506454396427E-6	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999991510052898	WITHOUT_CLASSIFICATION	8.489947101616296E-7	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999995049743843	WITHOUT_CLASSIFICATION	4.950256157644885E-7	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999995049743843	WITHOUT_CLASSIFICATION	4.950256157644885E-7	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999951819883367	WITHOUT_CLASSIFICATION	4.818011663256504E-6	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999951819883367	WITHOUT_CLASSIFICATION	4.818011663256504E-6	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999979365891438	WITHOUT_CLASSIFICATION	2.063410856223731E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999929985610961	WITHOUT_CLASSIFICATION	7.001438903874494E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999929985610961	WITHOUT_CLASSIFICATION	7.001438903874494E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999929985610961	WITHOUT_CLASSIFICATION	7.001438903874494E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749054259806	WITHOUT_CLASSIFICATION	2.5094574019480142E-5	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999999247062566	WITHOUT_CLASSIFICATION	7.52937433948833E-7	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999999247062566	WITHOUT_CLASSIFICATION	7.52937433948833E-7	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999990887832128	WITHOUT_CLASSIFICATION	9.112167873191037E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999867601075341	WITHOUT_CLASSIFICATION	1.3239892465993717E-5	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999924607212979	WITHOUT_CLASSIFICATION	7.539278702089375E-6	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999882546739307	WITHOUT_CLASSIFICATION	1.1745326069270463E-5	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999986069018192	WITHOUT_CLASSIFICATION	1.39309818082824E-6	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999739580769869	WITHOUT_CLASSIFICATION	2.6041923013187312E-5	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999995369857776	WITHOUT_CLASSIFICATION	4.6301422241419803E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999949100336157	WITHOUT_CLASSIFICATION	5.0899663842172E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999949100336157	WITHOUT_CLASSIFICATION	5.0899663842172E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749054259806	WITHOUT_CLASSIFICATION	2.5094574019480142E-5	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999990887832128	WITHOUT_CLASSIFICATION	9.112167873191037E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999995868389142	WITHOUT_CLASSIFICATION	4.131610858742959E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999867601075341	WITHOUT_CLASSIFICATION	1.3239892465993717E-5	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999924607212979	WITHOUT_CLASSIFICATION	7.539278702089375E-6	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999989510019398	WITHOUT_CLASSIFICATION	1.048998060242054E-6	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999809443239616	WITHOUT_CLASSIFICATION	1.9055676038377327E-5	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999977977936917	WITHOUT_CLASSIFICATION	2.202206308224953E-6	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.999104858227607	WITHOUT_CLASSIFICATION	8.951417723929221E-4	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999970404669791	WITHOUT_CLASSIFICATION	2.9595330208005627E-6	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999971435996745	WITHOUT_CLASSIFICATION	2.856400325450832E-6	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999978599432864	WITHOUT_CLASSIFICATION	2.140056713590229E-6	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999989510019398	WITHOUT_CLASSIFICATION	1.048998060242054E-6	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999990054429202	WITHOUT_CLASSIFICATION	9.945570798976123E-7	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999990054429202	WITHOUT_CLASSIFICATION	9.945570798976123E-7	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.999998655342551	WITHOUT_CLASSIFICATION	1.3446574491549892E-6	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999978333147879	WITHOUT_CLASSIFICATION	2.166685212179721E-6	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999996433840419	WITHOUT_CLASSIFICATION	3.5661595811436377E-7	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999987996936169	WITHOUT_CLASSIFICATION	1.2003063830194548E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999957338624492	WITHOUT_CLASSIFICATION	4.2661375508775886E-6	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999989239228037	WITHOUT_CLASSIFICATION	1.0760771962462755E-6	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.999994676774083	WITHOUT_CLASSIFICATION	5.323225916911529E-6	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999975190389734	WITHOUT_CLASSIFICATION	2.4809610265752467E-6	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999997699697725	WITHOUT_CLASSIFICATION	2.3003022767319863E-7	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999808305100703	WITHOUT_CLASSIFICATION	1.916948992984674E-5	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999974236801012	WITHOUT_CLASSIFICATION	2.5763198987773316E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999987996936169	WITHOUT_CLASSIFICATION	1.2003063830194548E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999957338624492	WITHOUT_CLASSIFICATION	4.2661375508775886E-6	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999979760504679	WITHOUT_CLASSIFICATION	2.023949532149901E-6	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999626593831665	WITHOUT_CLASSIFICATION	3.734061683347062E-5	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999989873994748	WITHOUT_CLASSIFICATION	1.0126005251537222E-6	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999622526120919	WITHOUT_CLASSIFICATION	3.774738790808101E-5	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999769843428518	WITHOUT_CLASSIFICATION	2.3015657148285094E-5	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999054131161481	WITHOUT_CLASSIFICATION	9.45868838518877E-5	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9972550882734226	WITHOUT_CLASSIFICATION	0.0027449117265774302	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999697024802292	WITHOUT_CLASSIFICATION	3.0297519770793857E-5	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999771237357333	WITHOUT_CLASSIFICATION	2.2876264266660742E-5	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9998552736518941	WITHOUT_CLASSIFICATION	1.4472634810593502E-4	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999657003218821	WITHOUT_CLASSIFICATION	3.4299678117905454E-5	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9996116449956051	WITHOUT_CLASSIFICATION	3.8835500439498693E-4	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999987886339664	WITHOUT_CLASSIFICATION	1.2113660336230383E-6	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999965476286901	WITHOUT_CLASSIFICATION	3.4523713099433005E-6	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999995486529716	WITHOUT_CLASSIFICATION	4.5134702846950644E-7	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999807160942621	WITHOUT_CLASSIFICATION	1.928390573787788E-5	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.999887611074249	WITHOUT_CLASSIFICATION	1.1238892575103427E-4	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999877834563483	WITHOUT_CLASSIFICATION	1.221654365167769E-5	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999971360686084	WITHOUT_CLASSIFICATION	2.863931391603203E-6	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999984433620421	WITHOUT_CLASSIFICATION	1.556637957757384E-6	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.999887611074249	WITHOUT_CLASSIFICATION	1.1238892575103427E-4	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999877834563483	WITHOUT_CLASSIFICATION	1.221654365167769E-5	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999971360686084	WITHOUT_CLASSIFICATION	2.863931391603203E-6	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999937563109226	WITHOUT_CLASSIFICATION	6.2436890774727445E-6	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999984862060188	WITHOUT_CLASSIFICATION	1.5137939810727179E-6	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999988287236927	WITHOUT_CLASSIFICATION	1.1712763072995545E-6	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999953436902684	WITHOUT_CLASSIFICATION	4.65630973150999E-6	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999964330890807	WITHOUT_CLASSIFICATION	3.5669109194051723E-6	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999987026435911	WITHOUT_CLASSIFICATION	1.2973564089271499E-6	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999959156966363	WITHOUT_CLASSIFICATION	4.084303363755239E-6	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999993107529015	WITHOUT_CLASSIFICATION	6.892470984641596E-7	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999876518347084	WITHOUT_CLASSIFICATION	1.2348165291670092E-5	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999833461931021	WITHOUT_CLASSIFICATION	1.6653806897787E-5	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9999767230574934	WITHOUT_CLASSIFICATION	2.327694250655688E-5	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999991832098604	WITHOUT_CLASSIFICATION	8.167901396049979E-7	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999961583106922	WITHOUT_CLASSIFICATION	3.841689307750421E-6	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999985621293398	WITHOUT_CLASSIFICATION	1.4378706600926467E-6	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999831542484965	WITHOUT_CLASSIFICATION	1.6845751503585332E-5	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999987073385669	WITHOUT_CLASSIFICATION	1.2926614331547412E-6	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999974311421382	WITHOUT_CLASSIFICATION	2.5688578618131135E-6	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999991736243569	WITHOUT_CLASSIFICATION	8.26375643199779E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999945683450214	WITHOUT_CLASSIFICATION	5.431654978586338E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999970269487372	WITHOUT_CLASSIFICATION	2.9730512628000383E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999930388468664	WITHOUT_CLASSIFICATION	6.96115313357503E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999848328380412	WITHOUT_CLASSIFICATION	1.5167161958914208E-5	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999848328380412	WITHOUT_CLASSIFICATION	1.5167161958914208E-5	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999931196894875	WITHOUT_CLASSIFICATION	6.88031051260553E-6	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999931196894875	WITHOUT_CLASSIFICATION	6.88031051260553E-6	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999996445317314	WITHOUT_CLASSIFICATION	3.5546826869888414E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999996445317314	WITHOUT_CLASSIFICATION	3.5546826869888414E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999984814685587	WITHOUT_CLASSIFICATION	1.518531441270042E-6	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999990946948589	WITHOUT_CLASSIFICATION	9.053051410241929E-7	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999992620422694	WITHOUT_CLASSIFICATION	7.379577306175612E-7	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999979813386624	WITHOUT_CLASSIFICATION	2.0186613376450872E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999985237835973	WITHOUT_CLASSIFICATION	1.4762164026121231E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999980721385462	WITHOUT_CLASSIFICATION	1.927861453905714E-6	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.999993411190533	WITHOUT_CLASSIFICATION	6.588809466994092E-6	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999898234648475	WITHOUT_CLASSIFICATION	1.0176535152412014E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999949100336157	WITHOUT_CLASSIFICATION	5.0899663842172E-6	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999984814685587	WITHOUT_CLASSIFICATION	1.518531441270042E-6	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999990946948589	WITHOUT_CLASSIFICATION	9.053051410241929E-7	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999992620422694	WITHOUT_CLASSIFICATION	7.379577306175612E-7	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999985237835973	WITHOUT_CLASSIFICATION	1.4762164026121231E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999980721385462	WITHOUT_CLASSIFICATION	1.927861453905714E-6	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999972058625415	WITHOUT_CLASSIFICATION	2.7941374584897098E-6	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.999987259904678	WITHOUT_CLASSIFICATION	1.2740095322061423E-5	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999984117547119	WITHOUT_CLASSIFICATION	1.588245288096613E-6	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999984117547119	WITHOUT_CLASSIFICATION	1.588245288096613E-6	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999979435987228	WITHOUT_CLASSIFICATION	2.056401277178524E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999989262358493	WITHOUT_CLASSIFICATION	1.0737641507158644E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999975257091532	WITHOUT_CLASSIFICATION	2.4742908468987297E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999938820166665	WITHOUT_CLASSIFICATION	6.117983333514092E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999938820166665	WITHOUT_CLASSIFICATION	6.117983333514092E-6	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999977428058334	WITHOUT_CLASSIFICATION	2.2571941666341807E-6	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999999060951213	WITHOUT_CLASSIFICATION	9.390487869512515E-7	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999971372468991	WITHOUT_CLASSIFICATION	2.8627531008818905E-6	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999994416625938	WITHOUT_CLASSIFICATION	5.583374062299117E-7	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999986148811775	WITHOUT_CLASSIFICATION	1.3851188225459817E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999992373522836	WITHOUT_CLASSIFICATION	7.62647716437703E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999985557330736	WITHOUT_CLASSIFICATION	1.4442669263281441E-6	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999969524153003	WITHOUT_CLASSIFICATION	3.0475846997039546E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999960715116979	WITHOUT_CLASSIFICATION	3.928488302154642E-6	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999970593012745	WITHOUT_CLASSIFICATION	2.9406987255423937E-6	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999996180425318	WITHOUT_CLASSIFICATION	3.819574682597464E-7	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999977428058334	WITHOUT_CLASSIFICATION	2.2571941666341807E-6	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999999060951213	WITHOUT_CLASSIFICATION	9.390487869512515E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999994416625938	WITHOUT_CLASSIFICATION	5.583374062299117E-7	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.999999633651041	WITHOUT_CLASSIFICATION	3.663489589100059E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999975257091532	WITHOUT_CLASSIFICATION	2.4742908468987297E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999975257091532	WITHOUT_CLASSIFICATION	2.4742908468987297E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999974236801012	WITHOUT_CLASSIFICATION	2.5763198987773316E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999974236801012	WITHOUT_CLASSIFICATION	2.5763198987773316E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999999688222264	WITHOUT_CLASSIFICATION	3.1177773600851543E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999999688222264	WITHOUT_CLASSIFICATION	3.1177773600851543E-7	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999985814329378	WITHOUT_CLASSIFICATION	1.4185670622409985E-6	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999988127879186	WITHOUT_CLASSIFICATION	1.1872120814046358E-6	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.99999929268396	WITHOUT_CLASSIFICATION	7.073160400167959E-7	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999979693490944	WITHOUT_CLASSIFICATION	2.0306509056004002E-6	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999992787527661	WITHOUT_CLASSIFICATION	7.212472338412695E-7	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999979888570504	WITHOUT_CLASSIFICATION	2.0111429496306456E-6	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999997849382912	WITHOUT_CLASSIFICATION	2.150617088850573E-7	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999998003701596	WITHOUT_CLASSIFICATION	1.9962984042509166E-7	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999993116157103	WITHOUT_CLASSIFICATION	6.883842896563297E-7	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999981614700917	WITHOUT_CLASSIFICATION	1.8385299084073082E-6	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999877464196107	WITHOUT_CLASSIFICATION	1.2253580389299849E-5	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999890341526537	WITHOUT_CLASSIFICATION	1.0965847346326684E-5	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999966523057442	WITHOUT_CLASSIFICATION	3.347694255695541E-6	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999984307776326	WITHOUT_CLASSIFICATION	1.5692223674109764E-6	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999994699290616	WITHOUT_CLASSIFICATION	5.300709382693677E-7	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999878673719388	WITHOUT_CLASSIFICATION	1.2132628061274824E-5	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999912811577254	WITHOUT_CLASSIFICATION	8.718842274612418E-6	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999994565507092	WITHOUT_CLASSIFICATION	5.434492908176494E-7	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999996230085931	WITHOUT_CLASSIFICATION	3.7699140691066435E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999985557330736	WITHOUT_CLASSIFICATION	1.4442669263281441E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999960715116979	WITHOUT_CLASSIFICATION	3.928488302154642E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999905840992	WITHOUT_CLASSIFICATION	9.415900806214245E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999191254389864	WITHOUT_CLASSIFICATION	8.087456101353803E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999191254389864	WITHOUT_CLASSIFICATION	8.087456101353803E-5	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.999999633651041	WITHOUT_CLASSIFICATION	3.663489589100059E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999975257091532	WITHOUT_CLASSIFICATION	2.4742908468987297E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999974236801012	WITHOUT_CLASSIFICATION	2.5763198987773316E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999999688222264	WITHOUT_CLASSIFICATION	3.1177773600851543E-7	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999996348084808	WITHOUT_CLASSIFICATION	3.651915192045348E-7	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999998955598053	WITHOUT_CLASSIFICATION	1.044401946885242E-7	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999978476032686	WITHOUT_CLASSIFICATION	2.1523967313562464E-6	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999999429353859	WITHOUT_CLASSIFICATION	5.70646140649619E-8	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999981765287331	WITHOUT_CLASSIFICATION	1.8234712669615172E-6	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999981765287331	WITHOUT_CLASSIFICATION	1.8234712669615172E-6	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.999997832539214	WITHOUT_CLASSIFICATION	2.167460785968031E-6	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999895602903641	WITHOUT_CLASSIFICATION	1.0439709635752202E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999922144668968	WITHOUT_CLASSIFICATION	7.785533103251967E-6	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999908039962877	WITHOUT_CLASSIFICATION	9.196003712341518E-6	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.999863108800629	WITHOUT_CLASSIFICATION	1.368911993709399E-4	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.999863108800629	WITHOUT_CLASSIFICATION	1.368911993709399E-4	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999991246062814	WITHOUT_CLASSIFICATION	8.753937186860054E-7	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999946966741663	WITHOUT_CLASSIFICATION	5.303325833728919E-6	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.999997358454932	WITHOUT_CLASSIFICATION	2.6415450679216863E-6	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999996389465388	WITHOUT_CLASSIFICATION	3.6105346126255404E-7	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999959502944875	WITHOUT_CLASSIFICATION	4.049705512548472E-6	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999981160377964	WITHOUT_CLASSIFICATION	1.8839622036354493E-6	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999806443583663	WITHOUT_CLASSIFICATION	1.9355641633703004E-5	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999979462476559	WITHOUT_CLASSIFICATION	2.0537523440342697E-6	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999977076415606	WITHOUT_CLASSIFICATION	2.292358439457366E-6	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999998065066557	WITHOUT_CLASSIFICATION	1.9349334426331676E-7	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999999661441707	WITHOUT_CLASSIFICATION	3.385582923226591E-8	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999982187272158	WITHOUT_CLASSIFICATION	1.7812727841853793E-6	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.999999961979117	WITHOUT_CLASSIFICATION	3.802088305528173E-8	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.999999363312631	WITHOUT_CLASSIFICATION	6.366873690390758E-7	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.999996390968716	WITHOUT_CLASSIFICATION	3.6090312840665434E-6	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999996791344415	WITHOUT_CLASSIFICATION	3.208655584651334E-7	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999978264071568	WITHOUT_CLASSIFICATION	2.1735928432366934E-6	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999976365570483	WITHOUT_CLASSIFICATION	2.363442951695856E-6	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999999104925297	WITHOUT_CLASSIFICATION	8.95074702629744E-8	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999461167458934	WITHOUT_CLASSIFICATION	5.3883254106611836E-5	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999923220130194	WITHOUT_CLASSIFICATION	7.677986980555726E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999911938413275	WITHOUT_CLASSIFICATION	8.806158672543486E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999911938413275	WITHOUT_CLASSIFICATION	8.806158672543486E-6	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.999997941839125	WITHOUT_CLASSIFICATION	2.058160874980291E-6	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999806800223154	WITHOUT_CLASSIFICATION	1.9319977684534743E-5	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999989352208919	WITHOUT_CLASSIFICATION	1.064779108075416E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999989352208919	WITHOUT_CLASSIFICATION	1.064779108075416E-6	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999977297118435	WITHOUT_CLASSIFICATION	2.270288156508015E-6	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999785002444017	WITHOUT_CLASSIFICATION	2.149975559825348E-5	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999513499821735	WITHOUT_CLASSIFICATION	4.865001782655178E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.99999826943129	WITHOUT_CLASSIFICATION	1.730568709994618E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.99999826943129	WITHOUT_CLASSIFICATION	1.730568709994618E-6	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999964000015896	WITHOUT_CLASSIFICATION	3.599998410351415E-6	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999965030672116	WITHOUT_CLASSIFICATION	3.496932788322964E-6	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999958860509094	WITHOUT_CLASSIFICATION	4.113949090571324E-6	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999977829399074	WITHOUT_CLASSIFICATION	2.217060092603968E-6	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999992806208231	WITHOUT_CLASSIFICATION	7.193791768643539E-7	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999972835888467	WITHOUT_CLASSIFICATION	2.7164111533886103E-6	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999820939150832	WITHOUT_CLASSIFICATION	1.7906084916840172E-5	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999987514291062	WITHOUT_CLASSIFICATION	1.248570893754767E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999821890040244	WITHOUT_CLASSIFICATION	1.7810995975632683E-5	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999955816324531	WITHOUT_CLASSIFICATION	4.418367546963041E-6	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999547753653628	WITHOUT_CLASSIFICATION	4.522463463726239E-5	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999880983270456	WITHOUT_CLASSIFICATION	1.1901672954275289E-5	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999827812764176	WITHOUT_CLASSIFICATION	1.721872358246005E-5	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999971269687183	WITHOUT_CLASSIFICATION	2.8730312815829807E-6	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999983848687908	WITHOUT_CLASSIFICATION	1.615131209181253E-6	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999992210452197	WITHOUT_CLASSIFICATION	7.789547802808133E-7	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999979650963551	WITHOUT_CLASSIFICATION	2.0349036449152766E-6	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999849061701177	WITHOUT_CLASSIFICATION	1.5093829882172211E-5	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.999967935055043	WITHOUT_CLASSIFICATION	3.206494495698503E-5	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999865595380372	WITHOUT_CLASSIFICATION	1.3440461962831651E-5	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999906902203478	WITHOUT_CLASSIFICATION	9.309779652277827E-6	TEST
// Class method	WITHOUT_CLASSIFICATION	0.999979614641831	WITHOUT_CLASSIFICATION	2.0385358168977664E-5	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999969175236882	WITHOUT_CLASSIFICATION	3.082476311782924E-6	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999980592434659	WITHOUT_CLASSIFICATION	1.9407565341915237E-6	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999398256059856	WITHOUT_CLASSIFICATION	6.0174394014445064E-5	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999981007604497	WITHOUT_CLASSIFICATION	1.899239550221835E-6	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999979077080408	WITHOUT_CLASSIFICATION	2.0922919592357123E-6	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999997665156869	WITHOUT_CLASSIFICATION	2.3348431309019885E-6	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999725942669457	WITHOUT_CLASSIFICATION	2.740573305426029E-5	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999962386303441	WITHOUT_CLASSIFICATION	3.7613696559105844E-6	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999995413847027	WITHOUT_CLASSIFICATION	4.586152973648543E-7	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999971269687183	WITHOUT_CLASSIFICATION	2.8730312815829807E-6	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999997665156869	WITHOUT_CLASSIFICATION	2.3348431309019885E-6	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999725942669457	WITHOUT_CLASSIFICATION	2.740573305426029E-5	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999995413847027	WITHOUT_CLASSIFICATION	4.586152973648543E-7	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999980429978903	WITHOUT_CLASSIFICATION	1.9570021097288854E-6	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999751637779091	WITHOUT_CLASSIFICATION	2.4836222091002473E-5	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999622864619864	WITHOUT_CLASSIFICATION	3.77135380136307E-5	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999981164333714	WITHOUT_CLASSIFICATION	1.8835666284974859E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999939152791633	WITHOUT_CLASSIFICATION	6.084720836754588E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999995795541465	WITHOUT_CLASSIFICATION	4.20445853574453E-7	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999803129964033	WITHOUT_CLASSIFICATION	1.9687003596736756E-5	TEST
// call operator	WITHOUT_CLASSIFICATION	0.999993601339133	WITHOUT_CLASSIFICATION	6.39866086708678E-6	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999857135712511	WITHOUT_CLASSIFICATION	1.4286428748878426E-5	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.999999784699083	WITHOUT_CLASSIFICATION	2.1530091702367988E-7	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999864519439501	WITHOUT_CLASSIFICATION	1.3548056049906562E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999864519439501	WITHOUT_CLASSIFICATION	1.3548056049906562E-5	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.99999537967756	WITHOUT_CLASSIFICATION	4.620322439944985E-6	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999956747146298	WITHOUT_CLASSIFICATION	4.325285370216406E-6	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999964710071063	WITHOUT_CLASSIFICATION	3.5289928937236566E-6	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999861106223892	WITHOUT_CLASSIFICATION	1.3889377610871449E-5	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999965045904845	WITHOUT_CLASSIFICATION	3.4954095155026356E-6	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999650452201838	WITHOUT_CLASSIFICATION	3.495477981623745E-5	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999956367163647	WITHOUT_CLASSIFICATION	4.363283635280499E-6	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999390990313	WITHOUT_CLASSIFICATION	6.090096869070955E-8	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999985749614252	WITHOUT_CLASSIFICATION	1.4250385748329316E-6	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999997899967954	WITHOUT_CLASSIFICATION	2.1000320466429827E-7	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999926648583679	WITHOUT_CLASSIFICATION	7.335141632140601E-6	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999998389778292	WITHOUT_CLASSIFICATION	1.610221708754819E-7	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999940258424092	WITHOUT_CLASSIFICATION	5.97415759080691E-6	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999991411374646	WITHOUT_CLASSIFICATION	8.58862535433672E-7	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999972313369444	WITHOUT_CLASSIFICATION	2.7686630555758064E-6	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999996729753682	WITHOUT_CLASSIFICATION	3.2702463175901817E-7	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999936476749467	WITHOUT_CLASSIFICATION	6.352325053266874E-6	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999968654102754	WITHOUT_CLASSIFICATION	3.1345897245843803E-6	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999941154977002	WITHOUT_CLASSIFICATION	5.884502299731839E-6	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.999994025885732	WITHOUT_CLASSIFICATION	5.974114267847631E-6	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9999459326306709	WITHOUT_CLASSIFICATION	5.406736932914188E-5	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999735009535522	WITHOUT_CLASSIFICATION	2.64990464478671E-5	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999985479252301	WITHOUT_CLASSIFICATION	1.452074769831677E-6	TEST
// others	WITHOUT_CLASSIFICATION	0.9999630630251792	WITHOUT_CLASSIFICATION	3.693697482089023E-5	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999920782544748	WITHOUT_CLASSIFICATION	7.921745525254559E-6	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999942700638766	WITHOUT_CLASSIFICATION	5.7299361234210455E-6	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999999553240236	WITHOUT_CLASSIFICATION	4.4675976467565934E-8	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.99999984193369	WITHOUT_CLASSIFICATION	1.5806631006394836E-7	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999684948420686	WITHOUT_CLASSIFICATION	3.150515793142539E-5	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.999996962265353	WITHOUT_CLASSIFICATION	3.0377346469949154E-6	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999976244498001	WITHOUT_CLASSIFICATION	2.375550199895607E-6	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999958044432938	WITHOUT_CLASSIFICATION	4.19555670613531E-6	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999979589956579	WITHOUT_CLASSIFICATION	2.0410043421001768E-6	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999989438015006	WITHOUT_CLASSIFICATION	1.0561984994277894E-6	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999987287066134	WITHOUT_CLASSIFICATION	1.271293386584148E-6	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999946830395471	WITHOUT_CLASSIFICATION	5.316960452890608E-6	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999991749112996	WITHOUT_CLASSIFICATION	8.250887004083198E-7	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999979098222503	WITHOUT_CLASSIFICATION	2.0901777497182712E-6	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999981844286927	WITHOUT_CLASSIFICATION	1.8155713072345896E-6	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.999998167062066	WITHOUT_CLASSIFICATION	1.8329379339890784E-6	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999939595997578	WITHOUT_CLASSIFICATION	6.040400242250288E-6	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999945613030436	WITHOUT_CLASSIFICATION	5.438696956353699E-6	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999839666359188	WITHOUT_CLASSIFICATION	1.603336408120423E-5	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999942974421959	WITHOUT_CLASSIFICATION	5.702557804051303E-6	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999990690010391	WITHOUT_CLASSIFICATION	9.309989610137265E-7	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999998323876758	WITHOUT_CLASSIFICATION	1.6761232428089398E-7	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999997029170824	WITHOUT_CLASSIFICATION	2.970829175748799E-7	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999990535579575	WITHOUT_CLASSIFICATION	9.464420426227065E-7	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999993544555662	WITHOUT_CLASSIFICATION	6.455444337636313E-7	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999797533147466	WITHOUT_CLASSIFICATION	2.0246685253361947E-5	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999953016827966	WITHOUT_CLASSIFICATION	4.698317203433265E-6	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999999411086704	WITHOUT_CLASSIFICATION	5.889132969395047E-8	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999993249246517	WITHOUT_CLASSIFICATION	6.750753483598542E-7	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9994967373742359	WITHOUT_CLASSIFICATION	5.032626257640294E-4	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999993008799448	WITHOUT_CLASSIFICATION	6.991200552028737E-7	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9998732395140432	WITHOUT_CLASSIFICATION	1.267604859568705E-4	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999993975675826	WITHOUT_CLASSIFICATION	6.024324173298158E-7	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999970203190671	WITHOUT_CLASSIFICATION	2.979680932884752E-6	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999994772797018	WITHOUT_CLASSIFICATION	5.227202980670964E-7	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999816403704508	WITHOUT_CLASSIFICATION	1.835962954918132E-5	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999816403704508	WITHOUT_CLASSIFICATION	1.835962954918132E-5	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999341250835603	WITHOUT_CLASSIFICATION	6.587491643969362E-5	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999979262858677	WITHOUT_CLASSIFICATION	2.073714132331543E-6	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9998750232935236	WITHOUT_CLASSIFICATION	1.249767064763428E-4	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999129586571611	WITHOUT_CLASSIFICATION	8.70413428389129E-5	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999959569905291	WITHOUT_CLASSIFICATION	4.043009470876181E-6	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999982791521563	WITHOUT_CLASSIFICATION	1.7208478436273515E-6	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.999595383048619	WITHOUT_CLASSIFICATION	4.04616951381099E-4	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999976920049799	WITHOUT_CLASSIFICATION	2.307995020165191E-6	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999988751074237	WITHOUT_CLASSIFICATION	1.1248925762942916E-6	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999993156069676	WITHOUT_CLASSIFICATION	6.843930323349723E-7	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999702728677997	WITHOUT_CLASSIFICATION	2.972713220033256E-5	TEST
// class or module	WITHOUT_CLASSIFICATION	0.999992847566824	WITHOUT_CLASSIFICATION	7.152433175966028E-6	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999190666295226	WITHOUT_CLASSIFICATION	8.093337047741229E-5	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.999998454084585	WITHOUT_CLASSIFICATION	1.545915414996169E-6	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999951203017544	WITHOUT_CLASSIFICATION	4.87969824550871E-6	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999310405706546	WITHOUT_CLASSIFICATION	6.89594293453613E-5	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999817997699796	WITHOUT_CLASSIFICATION	1.820023002049263E-5	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998883822144867	WITHOUT_CLASSIFICATION	1.1161778551330654E-4	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999987730249583	WITHOUT_CLASSIFICATION	1.2269750416172848E-6	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999985736312547	WITHOUT_CLASSIFICATION	1.4263687454096646E-6	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9997304040278108	WITHOUT_CLASSIFICATION	2.695959721892734E-4	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999998025011284	WITHOUT_CLASSIFICATION	1.9749887165022105E-7	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999993128057915	WITHOUT_CLASSIFICATION	6.871942085015305E-7	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999998373271369	WITHOUT_CLASSIFICATION	1.6267286310322197E-7	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999826457951594	WITHOUT_CLASSIFICATION	1.7354204840546177E-5	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999941591236098	WITHOUT_CLASSIFICATION	5.840876390233962E-6	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999972152946822	WITHOUT_CLASSIFICATION	2.7847053178397115E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999130023198	WITHOUT_CLASSIFICATION	8.699768013406215E-8	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999974335508561	WITHOUT_CLASSIFICATION	2.5664491437445697E-6	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999370017696	WITHOUT_CLASSIFICATION	6.299823037537114E-8	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999969329565658	WITHOUT_CLASSIFICATION	3.0670434341573154E-6	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999985412299276	WITHOUT_CLASSIFICATION	1.4587700724129508E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999994753753931	WITHOUT_CLASSIFICATION	5.24624606754644E-7	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999940559057019	WITHOUT_CLASSIFICATION	5.944094298105398E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999994753753931	WITHOUT_CLASSIFICATION	5.24624606754644E-7	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999986623039173	WITHOUT_CLASSIFICATION	1.3376960827055423E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999893547400754	WITHOUT_CLASSIFICATION	1.0645259924587888E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999893547400754	WITHOUT_CLASSIFICATION	1.0645259924587888E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999893547400754	WITHOUT_CLASSIFICATION	1.0645259924587888E-5	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999989948558117	WITHOUT_CLASSIFICATION	1.0051441883837086E-6	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999989948558117	WITHOUT_CLASSIFICATION	1.0051441883837086E-6	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999997089015601	WITHOUT_CLASSIFICATION	2.910984398696704E-7	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999996943169064	WITHOUT_CLASSIFICATION	3.056830936335465E-7	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999981249990442	WITHOUT_CLASSIFICATION	1.8750009558414684E-6	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999996952346641	WITHOUT_CLASSIFICATION	3.0476533584570285E-7	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999772028131549	WITHOUT_CLASSIFICATION	2.2797186844982004E-5	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999993904671624	WITHOUT_CLASSIFICATION	6.095328377633753E-7	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999976733152405	WITHOUT_CLASSIFICATION	2.326684759471192E-6	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999781476015951	WITHOUT_CLASSIFICATION	2.1852398404979942E-5	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999998971294054	WITHOUT_CLASSIFICATION	1.0287059455646557E-7	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999992533187475	WITHOUT_CLASSIFICATION	7.466812525101801E-7	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999829452970673	WITHOUT_CLASSIFICATION	1.705470293272562E-5	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.999993998076483	WITHOUT_CLASSIFICATION	6.00192351701894E-6	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999977436530195	WITHOUT_CLASSIFICATION	2.256346980552775E-6	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999809693558349	WITHOUT_CLASSIFICATION	1.903064416515498E-5	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999823341702815	WITHOUT_CLASSIFICATION	1.766582971848919E-5	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999873926435456	WITHOUT_CLASSIFICATION	1.2607356454442658E-5	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999992147250153	WITHOUT_CLASSIFICATION	7.852749847514902E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999877040080807	WITHOUT_CLASSIFICATION	1.2295991919318474E-5	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999877040080807	WITHOUT_CLASSIFICATION	1.2295991919318474E-5	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999721500325228	WITHOUT_CLASSIFICATION	2.784996747715337E-5	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.99999552472907	WITHOUT_CLASSIFICATION	4.475270929989633E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.99999552472907	WITHOUT_CLASSIFICATION	4.475270929989633E-6	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999567444640849	WITHOUT_CLASSIFICATION	4.3255535915091965E-5	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999879635083885	WITHOUT_CLASSIFICATION	1.2036491611486042E-5	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999779962103885	WITHOUT_CLASSIFICATION	2.2003789611539273E-5	TEST
// args array	WITHOUT_CLASSIFICATION	0.999962152179252	WITHOUT_CLASSIFICATION	3.78478207480669E-5	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999942689315323	WITHOUT_CLASSIFICATION	5.731068467607751E-6	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999971113912299	WITHOUT_CLASSIFICATION	2.8886087701341747E-6	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999862877140165	WITHOUT_CLASSIFICATION	1.3712285983524939E-5	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999965059357209	WITHOUT_CLASSIFICATION	3.4940642792153334E-6	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999967161198041	WITHOUT_CLASSIFICATION	3.283880195996003E-6	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999887041601396	WITHOUT_CLASSIFICATION	1.1295839860479747E-5	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999952581731153	WITHOUT_CLASSIFICATION	4.741826884719576E-6	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999775072741093	WITHOUT_CLASSIFICATION	2.2492725890711208E-5	TEST
// undo check	WITHOUT_CLASSIFICATION	0.999982301371364	WITHOUT_CLASSIFICATION	1.769862863603394E-5	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999991986556264	WITHOUT_CLASSIFICATION	8.01344373733083E-7	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999781476015951	WITHOUT_CLASSIFICATION	2.1852398404979942E-5	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9985386609957978	WITHOUT_CLASSIFICATION	0.0014613390042021682	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.999990323833558	WITHOUT_CLASSIFICATION	9.676166441965897E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.999990979677835	WITHOUT_CLASSIFICATION	9.020322164944448E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.999990979677835	WITHOUT_CLASSIFICATION	9.020322164944448E-6	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999964476200757	WITHOUT_CLASSIFICATION	3.5523799243944337E-6	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999843933975806	WITHOUT_CLASSIFICATION	1.560660241942119E-5	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999992963922611	WITHOUT_CLASSIFICATION	7.036077388222777E-7	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999837762704225	WITHOUT_CLASSIFICATION	1.6223729577629112E-5	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999989379099061	WITHOUT_CLASSIFICATION	1.0620900938776216E-6	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999981404541366	WITHOUT_CLASSIFICATION	1.8595458633294359E-6	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999993769521757	WITHOUT_CLASSIFICATION	6.230478243437347E-7	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999996246833149	WITHOUT_CLASSIFICATION	3.753166851003989E-7	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999996409906766	WITHOUT_CLASSIFICATION	3.5900932338531514E-7	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999997612779029	WITHOUT_CLASSIFICATION	2.387220970941811E-7	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999935116830425	WITHOUT_CLASSIFICATION	6.488316957540463E-6	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999966171349219	WITHOUT_CLASSIFICATION	3.3828650780031806E-6	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999263545496886	WITHOUT_CLASSIFICATION	7.364545031139066E-5	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999984352029231	WITHOUT_CLASSIFICATION	1.5647970769166563E-6	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999994297879141	WITHOUT_CLASSIFICATION	5.702120858021482E-7	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999995305719587	WITHOUT_CLASSIFICATION	4.6942804136166536E-7	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999861326724848	WITHOUT_CLASSIFICATION	1.3867327515310993E-5	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999755355800549	WITHOUT_CLASSIFICATION	2.4464419945077337E-5	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999650009141876	WITHOUT_CLASSIFICATION	3.499908581244039E-5	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999978139508884	WITHOUT_CLASSIFICATION	2.186049111606876E-6	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999949296513835	WITHOUT_CLASSIFICATION	5.070348616511315E-6	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999986019239995	WITHOUT_CLASSIFICATION	1.3980760005307053E-6	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999803385806991	WITHOUT_CLASSIFICATION	1.9661419300854898E-5	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999296898875	WITHOUT_CLASSIFICATION	7.031011247037896E-8	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999995148144997	WITHOUT_CLASSIFICATION	4.851855003367851E-7	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999829520600867	WITHOUT_CLASSIFICATION	1.7047939913225963E-5	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999852844070823	WITHOUT_CLASSIFICATION	1.4715592917660916E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999994216479086	WITHOUT_CLASSIFICATION	5.783520914603051E-7	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999983732013004	WITHOUT_CLASSIFICATION	1.626798699628756E-6	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999972235077987	WITHOUT_CLASSIFICATION	2.776492201321997E-6	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.999992898794149	WITHOUT_CLASSIFICATION	7.101205850927259E-6	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999989935443192	WITHOUT_CLASSIFICATION	1.0064556807648089E-6	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999380229795016	WITHOUT_CLASSIFICATION	6.197702049831651E-5	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999993165052797	WITHOUT_CLASSIFICATION	6.834947202750058E-7	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999979352812092	WITHOUT_CLASSIFICATION	2.0647187908395398E-6	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999226768276633	WITHOUT_CLASSIFICATION	7.732317233665293E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999994216479086	WITHOUT_CLASSIFICATION	5.783520914603051E-7	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999958671144793	WITHOUT_CLASSIFICATION	4.132885520776978E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999979352812092	WITHOUT_CLASSIFICATION	2.0647187908395398E-6	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999996498211878	WITHOUT_CLASSIFICATION	3.501788121615797E-7	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.999997150048608	WITHOUT_CLASSIFICATION	2.8499513919895392E-6	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.999934816087625	WITHOUT_CLASSIFICATION	6.518391237505554E-5	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.99999656239454	WITHOUT_CLASSIFICATION	3.4376054598697588E-6	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999667051441117	WITHOUT_CLASSIFICATION	3.329485588827459E-5	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999973566792741	WITHOUT_CLASSIFICATION	2.643320725813733E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999973566792741	WITHOUT_CLASSIFICATION	2.643320725813733E-6	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999877551921637	WITHOUT_CLASSIFICATION	1.2244807836365647E-5	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999994095660851	WITHOUT_CLASSIFICATION	5.904339149041287E-7	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999946981276019	WITHOUT_CLASSIFICATION	5.301872398082614E-6	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999946981276019	WITHOUT_CLASSIFICATION	5.301872398082614E-6	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999993580361556	WITHOUT_CLASSIFICATION	6.419638444302995E-7	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9943636508297957	WITHOUT_CLASSIFICATION	0.005636349170204219	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9982156300531277	WITHOUT_CLASSIFICATION	0.0017843699468722504	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9982156300531277	WITHOUT_CLASSIFICATION	0.0017843699468722504	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999737051294141	WITHOUT_CLASSIFICATION	2.629487058592545E-5	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999685156206102	WITHOUT_CLASSIFICATION	3.1484379389831914E-5	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999989792475107	WITHOUT_CLASSIFICATION	1.0207524893803713E-6	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.999999524765555	WITHOUT_CLASSIFICATION	4.752344449857788E-7	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999998575441866	WITHOUT_CLASSIFICATION	1.4245581336590375E-7	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.999994751151036	WITHOUT_CLASSIFICATION	5.248848964047514E-6	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999997418455158	WITHOUT_CLASSIFICATION	2.581544841755075E-7	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999983206464728	WITHOUT_CLASSIFICATION	1.6793535272458651E-6	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999851436997139	WITHOUT_CLASSIFICATION	1.4856300286008026E-5	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999954407279324	WITHOUT_CLASSIFICATION	4.559272067479699E-6	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.999994221680289	WITHOUT_CLASSIFICATION	5.778319711053957E-6	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999842376253704	WITHOUT_CLASSIFICATION	1.5762374629578785E-5	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999989446183445	WITHOUT_CLASSIFICATION	1.0553816554967473E-6	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999879774243271	WITHOUT_CLASSIFICATION	1.2022575672829702E-5	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999984994508921	WITHOUT_CLASSIFICATION	1.5005491077518334E-6	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.999995094465479	WITHOUT_CLASSIFICATION	4.905534521033112E-6	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999925878120128	WITHOUT_CLASSIFICATION	7.412187987249604E-6	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999936711958376	WITHOUT_CLASSIFICATION	6.328804162430816E-6	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999994910139371	WITHOUT_CLASSIFICATION	5.089860628671647E-7	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999970242229151	WITHOUT_CLASSIFICATION	2.9757770848913347E-6	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.999997702153322	WITHOUT_CLASSIFICATION	2.2978466780964004E-6	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999966220238781	WITHOUT_CLASSIFICATION	3.3779761220054554E-6	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.99999858759369	WITHOUT_CLASSIFICATION	1.4124063100505378E-6	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9998784923972002	WITHOUT_CLASSIFICATION	1.2150760279981973E-4	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9998075529610092	WITHOUT_CLASSIFICATION	1.9244703899089506E-4	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9998321153486923	WITHOUT_CLASSIFICATION	1.6788465130758158E-4	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999954202023281	WITHOUT_CLASSIFICATION	4.579797671828649E-6	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999655267361822	WITHOUT_CLASSIFICATION	3.447326381776437E-5	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999960077389901	WITHOUT_CLASSIFICATION	3.992261009891218E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999960077389901	WITHOUT_CLASSIFICATION	3.992261009891218E-6	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999250766576	WITHOUT_CLASSIFICATION	7.492334239400162E-8	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999994999535967	WITHOUT_CLASSIFICATION	5.000464033235012E-7	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999713888506931	WITHOUT_CLASSIFICATION	2.8611149306822952E-5	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999985576678277	WITHOUT_CLASSIFICATION	1.442332172242621E-6	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.99999669615305	WITHOUT_CLASSIFICATION	3.303846949965576E-6	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.999980194338194	WITHOUT_CLASSIFICATION	1.9805661806087008E-5	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999920336734226	WITHOUT_CLASSIFICATION	7.966326577418707E-6	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999941138707655	WITHOUT_CLASSIFICATION	5.886129234453398E-6	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999998661052499	WITHOUT_CLASSIFICATION	1.3389475013474393E-7	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999992309398771	WITHOUT_CLASSIFICATION	7.690601228264361E-7	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.999998690723819	WITHOUT_CLASSIFICATION	1.3092761809263566E-6	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999943639842078	WITHOUT_CLASSIFICATION	5.636015792240731E-6	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999615714901049	WITHOUT_CLASSIFICATION	3.842850989510085E-5	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999989135226129	WITHOUT_CLASSIFICATION	1.086477387134891E-6	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999993364755438	WITHOUT_CLASSIFICATION	6.635244561948044E-7	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999875334588785	WITHOUT_CLASSIFICATION	1.246654112146553E-5	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999990615356752	WITHOUT_CLASSIFICATION	9.38464324809645E-7	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999991649502186	WITHOUT_CLASSIFICATION	8.350497815084863E-7	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999574140192391	WITHOUT_CLASSIFICATION	4.25859807608537E-5	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.999999350199885	WITHOUT_CLASSIFICATION	6.498001149432175E-7	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999972939789005	WITHOUT_CLASSIFICATION	2.706021099486186E-6	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999714324465867	WITHOUT_CLASSIFICATION	2.856755341327135E-5	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999956160628075	WITHOUT_CLASSIFICATION	4.383937192514456E-6	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999974058388331	WITHOUT_CLASSIFICATION	2.5941611668442327E-6	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.99999254711256	WITHOUT_CLASSIFICATION	7.452887439974508E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999940921346615	WITHOUT_CLASSIFICATION	5.907865338554995E-6	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999996924224401	WITHOUT_CLASSIFICATION	3.0757755986310655E-7	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999918589758904	WITHOUT_CLASSIFICATION	8.141024109616492E-6	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999812924228348	WITHOUT_CLASSIFICATION	1.870757716519262E-5	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999973742280264	WITHOUT_CLASSIFICATION	2.625771973669663E-6	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999486745581413	WITHOUT_CLASSIFICATION	5.1325441858787624E-5	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.999993490129205	WITHOUT_CLASSIFICATION	6.509870794912011E-6	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999961522550777	WITHOUT_CLASSIFICATION	3.847744922380582E-6	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999852292373683	WITHOUT_CLASSIFICATION	1.4770762631752206E-5	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999991990843299	WITHOUT_CLASSIFICATION	8.009156701427765E-7	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999841648472412	WITHOUT_CLASSIFICATION	1.5835152758817233E-5	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999980648461761	WITHOUT_CLASSIFICATION	1.9351538238802832E-6	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999867230512994	WITHOUT_CLASSIFICATION	1.3276948700431352E-5	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999990676636736	WITHOUT_CLASSIFICATION	9.323363263851646E-7	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999967365227249	WITHOUT_CLASSIFICATION	3.2634772749727815E-6	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999986212787464	WITHOUT_CLASSIFICATION	1.3787212536255327E-6	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999949975425948	WITHOUT_CLASSIFICATION	5.002457405164197E-6	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999998386609196	WITHOUT_CLASSIFICATION	1.613390804076148E-7	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999998386609196	WITHOUT_CLASSIFICATION	1.613390804076148E-7	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999941372225124	WITHOUT_CLASSIFICATION	5.8627774875575435E-6	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999998517971436	WITHOUT_CLASSIFICATION	1.4820285640989293E-7	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999873014548926	WITHOUT_CLASSIFICATION	1.269854510733527E-5	TEST
// return	WITHOUT_CLASSIFICATION	0.9999794744227323	WITHOUT_CLASSIFICATION	2.0525577267697796E-5	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999945683450214	WITHOUT_CLASSIFICATION	5.431654978586338E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999970269487372	WITHOUT_CLASSIFICATION	2.9730512628000383E-6	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999928158878499	WITHOUT_CLASSIFICATION	7.184112149938908E-6	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999985724836423	WITHOUT_CLASSIFICATION	1.4275163576417075E-6	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999992843077522	WITHOUT_CLASSIFICATION	7.156922478416669E-7	TEST
// tc	WITHOUT_CLASSIFICATION	0.9998323642249394	WITHOUT_CLASSIFICATION	1.6763577506062168E-4	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999835233534627	WITHOUT_CLASSIFICATION	1.6476646537190707E-5	TEST
// no args	WITHOUT_CLASSIFICATION	0.999984241795801	WITHOUT_CLASSIFICATION	1.5758204199037095E-5	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999968279277073	WITHOUT_CLASSIFICATION	3.1720722926289977E-6	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999979400816443	WITHOUT_CLASSIFICATION	2.059918355730145E-6	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999950008889685	WITHOUT_CLASSIFICATION	4.9991110314172976E-6	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999968336634169	WITHOUT_CLASSIFICATION	3.1663365831702044E-6	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999944081783396	WITHOUT_CLASSIFICATION	5.591821660350573E-6	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999883595574309	WITHOUT_CLASSIFICATION	1.1640442569100686E-5	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999914104475458	WITHOUT_CLASSIFICATION	8.589552454197318E-6	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999914323246553	WITHOUT_CLASSIFICATION	8.567675344766536E-6	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999936790875809	WITHOUT_CLASSIFICATION	6.3209124191916964E-6	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999868807390775	WITHOUT_CLASSIFICATION	1.311926092257417E-5	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999965100861024	WITHOUT_CLASSIFICATION	3.489913897697376E-6	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999974285300895	WITHOUT_CLASSIFICATION	2.571469910538158E-6	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999981106920378	WITHOUT_CLASSIFICATION	1.8893079620911267E-6	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999959343107526	WITHOUT_CLASSIFICATION	4.065689247387428E-6	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999968257339463	WITHOUT_CLASSIFICATION	3.1742660535977794E-6	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999967828810993	WITHOUT_CLASSIFICATION	3.2171189006771033E-6	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999991839346225	WITHOUT_CLASSIFICATION	8.160653774970438E-7	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999894778572237	WITHOUT_CLASSIFICATION	1.052214277623578E-5	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999930646419175	WITHOUT_CLASSIFICATION	6.935358082448728E-6	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999993179773471	WITHOUT_CLASSIFICATION	6.820226528622101E-7	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999963127018635	WITHOUT_CLASSIFICATION	3.6872981364437854E-6	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999882528104705	WITHOUT_CLASSIFICATION	1.1747189529582012E-5	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999867230512994	WITHOUT_CLASSIFICATION	1.3276948700431352E-5	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999963539768885	WITHOUT_CLASSIFICATION	3.646023111461267E-6	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999976858647159	WITHOUT_CLASSIFICATION	2.3141352840006985E-6	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999976858647159	WITHOUT_CLASSIFICATION	2.3141352840006985E-6	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999993547256364	WITHOUT_CLASSIFICATION	6.452743636196686E-7	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.999999577483579	WITHOUT_CLASSIFICATION	4.2251642088834966E-7	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999943158036325	WITHOUT_CLASSIFICATION	5.68419636745345E-6	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999846794739127	WITHOUT_CLASSIFICATION	1.5320526087342715E-5	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999944203772403	WITHOUT_CLASSIFICATION	5.5796227596991215E-6	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999953744402869	WITHOUT_CLASSIFICATION	4.625559713152412E-6	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999957209827341	WITHOUT_CLASSIFICATION	4.2790172659185914E-6	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.999994759169522	WITHOUT_CLASSIFICATION	5.240830478023054E-6	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999968841244731	WITHOUT_CLASSIFICATION	3.1158755268919304E-6	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999971511468166	WITHOUT_CLASSIFICATION	2.8488531833391504E-6	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999964696642745	WITHOUT_CLASSIFICATION	3.530335725609112E-6	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999964034310154	WITHOUT_CLASSIFICATION	3.5965689845278287E-6	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999877828348014	WITHOUT_CLASSIFICATION	1.2217165198650454E-5	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999983698923198	WITHOUT_CLASSIFICATION	1.630107680088458E-6	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999999646286241	WITHOUT_CLASSIFICATION	3.5371375934632026E-8	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999999414063269	WITHOUT_CLASSIFICATION	5.8593673101827105E-8	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999874011639537	WITHOUT_CLASSIFICATION	1.2598836046316655E-5	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999877374908034	WITHOUT_CLASSIFICATION	1.226250919660898E-5	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999924319926157	WITHOUT_CLASSIFICATION	7.568007384303417E-6	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999930805483184	WITHOUT_CLASSIFICATION	6.919451681631271E-6	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999924914169628	WITHOUT_CLASSIFICATION	7.5085830372746485E-6	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999930326821578	WITHOUT_CLASSIFICATION	6.967317842285895E-6	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999969387877262	WITHOUT_CLASSIFICATION	3.061212273876894E-6	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999971910792097	WITHOUT_CLASSIFICATION	2.8089207902574397E-6	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999990810542028	WITHOUT_CLASSIFICATION	9.189457971864663E-7	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999989009883509	WITHOUT_CLASSIFICATION	1.0990116491429112E-6	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999795359331447	WITHOUT_CLASSIFICATION	2.0464066855342984E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999954503422983	WITHOUT_CLASSIFICATION	4.549657701688507E-6	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999921107010223	WITHOUT_CLASSIFICATION	7.88929897767305E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999914064592643	WITHOUT_CLASSIFICATION	8.593540735798107E-6	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999921518825652	WITHOUT_CLASSIFICATION	7.848117434850991E-6	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999896573129183	WITHOUT_CLASSIFICATION	1.0342687081641453E-5	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999752521489672	WITHOUT_CLASSIFICATION	2.4747851032704945E-5	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999995887803558	WITHOUT_CLASSIFICATION	4.1121964419896325E-7	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999981554764155	WITHOUT_CLASSIFICATION	1.844523584534002E-6	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999934085780722	WITHOUT_CLASSIFICATION	6.591421927814958E-6	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999908267567549	WITHOUT_CLASSIFICATION	9.173243245141628E-6	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999989009883509	WITHOUT_CLASSIFICATION	1.0990116491429112E-6	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999795359331447	WITHOUT_CLASSIFICATION	2.0464066855342984E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999954503422983	WITHOUT_CLASSIFICATION	4.549657701688507E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999914064592643	WITHOUT_CLASSIFICATION	8.593540735798107E-6	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999992839668919	WITHOUT_CLASSIFICATION	7.1603310804845E-7	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.999999156697251	WITHOUT_CLASSIFICATION	8.433027489479649E-7	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999950748934788	WITHOUT_CLASSIFICATION	4.92510652118192E-6	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999824095167995	WITHOUT_CLASSIFICATION	1.759048320048352E-5	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999832826666418	WITHOUT_CLASSIFICATION	1.6717333358208282E-5	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999998833790237	WITHOUT_CLASSIFICATION	1.1662097630357618E-6	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.999987810616562	WITHOUT_CLASSIFICATION	1.2189383438038427E-5	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999823498158642	WITHOUT_CLASSIFICATION	1.7650184135773837E-5	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999985715010886	WITHOUT_CLASSIFICATION	1.4284989114892542E-6	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999873204227022	WITHOUT_CLASSIFICATION	1.2679577297714056E-5	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999894653722107	WITHOUT_CLASSIFICATION	1.0534627789373076E-5	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999940060900097	WITHOUT_CLASSIFICATION	5.9939099903809E-6	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.999937958425604	WITHOUT_CLASSIFICATION	6.204157439601609E-5	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999964180469789	WITHOUT_CLASSIFICATION	3.581953021114562E-6	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999806134180252	WITHOUT_CLASSIFICATION	1.938658197468021E-5	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999920226448852	WITHOUT_CLASSIFICATION	7.97735511483679E-6	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999973653006604	WITHOUT_CLASSIFICATION	2.6346993395651825E-6	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999991487402272	WITHOUT_CLASSIFICATION	8.512597726964897E-7	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999993791176729	WITHOUT_CLASSIFICATION	6.208823271847035E-7	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999908267567549	WITHOUT_CLASSIFICATION	9.173243245141628E-6	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.999999156697251	WITHOUT_CLASSIFICATION	8.433027489479649E-7	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999950748934788	WITHOUT_CLASSIFICATION	4.92510652118192E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999832826666418	WITHOUT_CLASSIFICATION	1.6717333358208282E-5	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999998833790237	WITHOUT_CLASSIFICATION	1.1662097630357618E-6	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.999987810616562	WITHOUT_CLASSIFICATION	1.2189383438038427E-5	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999823498158642	WITHOUT_CLASSIFICATION	1.7650184135773837E-5	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999873740846643	WITHOUT_CLASSIFICATION	1.2625915335594293E-5	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999979807329566	WITHOUT_CLASSIFICATION	2.01926704331454E-6	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.999988878559244	WITHOUT_CLASSIFICATION	1.1121440755966342E-5	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999961361608567	WITHOUT_CLASSIFICATION	3.863839143327531E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999937650481276	WITHOUT_CLASSIFICATION	6.234951872418779E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999937650481276	WITHOUT_CLASSIFICATION	6.234951872418779E-6	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999846923938441	WITHOUT_CLASSIFICATION	1.5307606155814806E-5	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999907851417393	WITHOUT_CLASSIFICATION	9.214858260725193E-6	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.999995861970889	WITHOUT_CLASSIFICATION	4.138029111025669E-6	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.999993628398281	WITHOUT_CLASSIFICATION	6.3716017190722435E-6	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999979990706326	WITHOUT_CLASSIFICATION	2.000929367368135E-6	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999980651954145	WITHOUT_CLASSIFICATION	1.93480458553545E-6	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999876882300223	WITHOUT_CLASSIFICATION	1.2311769977701469E-5	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999966632173782	WITHOUT_CLASSIFICATION	3.336782621677446E-6	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999990804142719	WITHOUT_CLASSIFICATION	9.195857281791052E-7	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999979169366457	WITHOUT_CLASSIFICATION	2.0830633541262395E-6	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999989976214062	WITHOUT_CLASSIFICATION	1.0023785937418299E-6	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999977250613592	WITHOUT_CLASSIFICATION	2.2749386408391314E-6	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999909330987601	WITHOUT_CLASSIFICATION	9.066901239899191E-6	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999969515956322	WITHOUT_CLASSIFICATION	3.048404367849565E-6	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999939188999313	WITHOUT_CLASSIFICATION	6.081100068753465E-6	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999940940902784	WITHOUT_CLASSIFICATION	5.905909721541218E-6	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999962803443545	WITHOUT_CLASSIFICATION	3.7196556455335156E-6	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999918339439696	WITHOUT_CLASSIFICATION	8.166056030412694E-6	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999995704999	WITHOUT_CLASSIFICATION	4.2950010002765305E-7	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999998007267635	WITHOUT_CLASSIFICATION	1.9927323653116877E-7	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9999998979594265	WITHOUT_CLASSIFICATION	1.020405735420743E-7	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999986325288648	WITHOUT_CLASSIFICATION	1.3674711352766556E-6	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999974231410268	WITHOUT_CLASSIFICATION	2.5768589733250108E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999644806849136	WITHOUT_CLASSIFICATION	3.551931508628787E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999930068050525	WITHOUT_CLASSIFICATION	6.99319494743861E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999984187008508	WITHOUT_CLASSIFICATION	1.5812991492365083E-6	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.999999610696354	WITHOUT_CLASSIFICATION	3.893036460080841E-7	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999952518419472	WITHOUT_CLASSIFICATION	4.748158052817278E-6	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999653230924949	WITHOUT_CLASSIFICATION	3.467690750508827E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999930068050525	WITHOUT_CLASSIFICATION	6.99319494743861E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999984187008508	WITHOUT_CLASSIFICATION	1.5812991492365083E-6	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999969515956322	WITHOUT_CLASSIFICATION	3.048404367849565E-6	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999977275470872	WITHOUT_CLASSIFICATION	2.2724529128451052E-6	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999825555957291	WITHOUT_CLASSIFICATION	1.7444404270830358E-5	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999955021717858	WITHOUT_CLASSIFICATION	4.49782821429547E-6	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999996153958269	WITHOUT_CLASSIFICATION	3.8460417297250514E-7	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999937905766175	WITHOUT_CLASSIFICATION	6.20942338244556E-6	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999922608096276	WITHOUT_CLASSIFICATION	7.739190372484432E-6	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999894954446881	WITHOUT_CLASSIFICATION	1.0504555311802458E-5	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999916342545664	WITHOUT_CLASSIFICATION	8.365745433545427E-6	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.999999846567221	WITHOUT_CLASSIFICATION	1.534327790533465E-7	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999989729629514	WITHOUT_CLASSIFICATION	1.0270370486451782E-6	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999998501075721	WITHOUT_CLASSIFICATION	1.4989242796281054E-7	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999967187505134	WITHOUT_CLASSIFICATION	3.281249486573293E-6	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999988013703359	WITHOUT_CLASSIFICATION	1.1986296640689782E-6	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999997471009856	WITHOUT_CLASSIFICATION	2.528990144007297E-7	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.999999759049762	WITHOUT_CLASSIFICATION	2.4095023804587537E-7	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999986038549289	WITHOUT_CLASSIFICATION	1.3961450710476992E-6	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999970208031945	WITHOUT_CLASSIFICATION	2.9791968054953016E-6	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999996074066001	WITHOUT_CLASSIFICATION	3.9259340000666906E-7	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999197430304	WITHOUT_CLASSIFICATION	8.02569696583466E-8	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999988672544207	WITHOUT_CLASSIFICATION	1.1327455793103688E-6	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999993597473746	WITHOUT_CLASSIFICATION	6.402526252747453E-7	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999998975330437	WITHOUT_CLASSIFICATION	1.0246695622905892E-7	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999988397204091	WITHOUT_CLASSIFICATION	1.1602795908776953E-6	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999656814164	WITHOUT_CLASSIFICATION	3.4318583579587814E-8	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999992468944954	WITHOUT_CLASSIFICATION	7.531055045979084E-7	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999984468205478	WITHOUT_CLASSIFICATION	1.5531794522172875E-6	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999860868705447	WITHOUT_CLASSIFICATION	1.391312945521384E-5	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999985080250888	WITHOUT_CLASSIFICATION	1.4919749112595447E-6	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999991377052093	WITHOUT_CLASSIFICATION	8.622947906773924E-7	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.999999892129352	WITHOUT_CLASSIFICATION	1.0787064795733546E-7	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999983412586466	WITHOUT_CLASSIFICATION	1.6587413533247159E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999847027638917	WITHOUT_CLASSIFICATION	1.5297236108275237E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999847027638917	WITHOUT_CLASSIFICATION	1.5297236108275237E-5	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999909330987601	WITHOUT_CLASSIFICATION	9.066901239899191E-6	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999997734395144	WITHOUT_CLASSIFICATION	2.2656048557392252E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999990676265189	WITHOUT_CLASSIFICATION	9.323734810407008E-7	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999923770655845	WITHOUT_CLASSIFICATION	7.6229344154635035E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999993168278177	WITHOUT_CLASSIFICATION	6.831721822384746E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999993168278177	WITHOUT_CLASSIFICATION	6.831721822384746E-7	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999979366216816	WITHOUT_CLASSIFICATION	2.0633783184464752E-6	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999975102970008	WITHOUT_CLASSIFICATION	2.4897029993083548E-6	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999989913490345	WITHOUT_CLASSIFICATION	1.0086509654591131E-6	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999981740606247	WITHOUT_CLASSIFICATION	1.825939375289097E-6	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999958764822752	WITHOUT_CLASSIFICATION	4.1235177248100565E-6	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999786941681	WITHOUT_CLASSIFICATION	2.130583189447554E-8	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999997947016444	WITHOUT_CLASSIFICATION	2.0529835567451429E-7	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999835654360385	WITHOUT_CLASSIFICATION	1.6434563961459416E-5	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999996626587865	WITHOUT_CLASSIFICATION	3.3734121354895415E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999970248097565	WITHOUT_CLASSIFICATION	2.975190243530865E-6	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999848819721271	WITHOUT_CLASSIFICATION	1.5118027873004708E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999650211071962	WITHOUT_CLASSIFICATION	3.497889280382812E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9998713927645905	WITHOUT_CLASSIFICATION	1.286072354094509E-4	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999994026691418	WITHOUT_CLASSIFICATION	5.973308581702889E-7	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999931064932875	WITHOUT_CLASSIFICATION	6.893506712455042E-6	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999888022112913	WITHOUT_CLASSIFICATION	1.119778870874612E-5	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999983360139477	WITHOUT_CLASSIFICATION	1.6639860522868033E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999983360139477	WITHOUT_CLASSIFICATION	1.6639860522868033E-6	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999992528859017	WITHOUT_CLASSIFICATION	7.471140981608938E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999992528859017	WITHOUT_CLASSIFICATION	7.471140981608938E-7	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999996965023447	WITHOUT_CLASSIFICATION	3.034976553158987E-7	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999996283638353	WITHOUT_CLASSIFICATION	3.716361647759663E-7	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999995718211113	WITHOUT_CLASSIFICATION	4.2817888869966293E-7	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.999999765674698	WITHOUT_CLASSIFICATION	2.343253019758601E-7	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999962977765506	WITHOUT_CLASSIFICATION	3.702223449341521E-6	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999951950797537	WITHOUT_CLASSIFICATION	4.804920246353895E-6	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999986822646465	WITHOUT_CLASSIFICATION	1.317735353540691E-6	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999650211071962	WITHOUT_CLASSIFICATION	3.497889280382812E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9998713927645905	WITHOUT_CLASSIFICATION	1.286072354094509E-4	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999931064932875	WITHOUT_CLASSIFICATION	6.893506712455042E-6	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999996918719902	WITHOUT_CLASSIFICATION	3.0812800979546725E-7	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999992106871886	WITHOUT_CLASSIFICATION	7.893128114418067E-7	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999422513709	WITHOUT_CLASSIFICATION	5.77486291470182E-8	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999970939625942	WITHOUT_CLASSIFICATION	2.906037405811543E-6	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999997540485432	WITHOUT_CLASSIFICATION	2.459514568248975E-7	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.999999869361507	WITHOUT_CLASSIFICATION	1.3063849307016066E-7	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999955812578002	WITHOUT_CLASSIFICATION	4.418742199741163E-6	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999955541416464	WITHOUT_CLASSIFICATION	4.44585835357925E-6	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.999998924680666	WITHOUT_CLASSIFICATION	1.0753193340028305E-6	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999998974146451	WITHOUT_CLASSIFICATION	1.0258535481773793E-7	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999996480241469	WITHOUT_CLASSIFICATION	3.5197585317683835E-7	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999982769941651	WITHOUT_CLASSIFICATION	1.7230058348707177E-6	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999882172716795	WITHOUT_CLASSIFICATION	1.178272832035846E-5	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999968322313816	WITHOUT_CLASSIFICATION	3.1677686185134865E-6	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999988107452926	WITHOUT_CLASSIFICATION	1.1892547073770537E-6	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999986467044917	WITHOUT_CLASSIFICATION	1.3532955083322542E-6	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999927143483094	WITHOUT_CLASSIFICATION	7.285651690652135E-6	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999998152003282	WITHOUT_CLASSIFICATION	1.847996718202502E-7	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999985256118831	WITHOUT_CLASSIFICATION	1.4743881168270765E-6	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999989094896522	WITHOUT_CLASSIFICATION	1.0905103479018296E-6	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999986057685494	WITHOUT_CLASSIFICATION	1.3942314505948108E-6	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.99996057724725	WITHOUT_CLASSIFICATION	3.942275275002255E-5	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999554356854362	WITHOUT_CLASSIFICATION	4.4564314563703626E-5	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999954766639436	WITHOUT_CLASSIFICATION	4.523336056390334E-6	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999973254279195	WITHOUT_CLASSIFICATION	2.6745720804638176E-6	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999953261259502	WITHOUT_CLASSIFICATION	4.67387404971364E-6	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999962966553417	WITHOUT_CLASSIFICATION	3.70334465826285E-6	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.999997645316026	WITHOUT_CLASSIFICATION	2.3546839739805595E-6	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999982195481594	WITHOUT_CLASSIFICATION	1.7804518405505527E-6	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999958974720147	WITHOUT_CLASSIFICATION	4.102527985331733E-6	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.999997644458093	WITHOUT_CLASSIFICATION	2.3555419068624226E-6	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999958075806151	WITHOUT_CLASSIFICATION	4.1924193848288335E-6	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999978375779837	WITHOUT_CLASSIFICATION	2.162422016457882E-6	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999967138041832	WITHOUT_CLASSIFICATION	3.2861958168572325E-6	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999949422530623	WITHOUT_CLASSIFICATION	5.057746937639274E-6	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999959526540777	WITHOUT_CLASSIFICATION	4.047345922321954E-6	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999919882983108	WITHOUT_CLASSIFICATION	8.011701689268627E-6	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999987792478057	WITHOUT_CLASSIFICATION	1.2207521943260717E-6	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.999788945056626	WITHOUT_CLASSIFICATION	2.1105494337413482E-4	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999992905770149	WITHOUT_CLASSIFICATION	7.094229850738806E-7	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999987759078126	WITHOUT_CLASSIFICATION	1.2240921872902517E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999990676265189	WITHOUT_CLASSIFICATION	9.323734810407008E-7	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999919882983108	WITHOUT_CLASSIFICATION	8.011701689268627E-6	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999996575768214	WITHOUT_CLASSIFICATION	3.4242317868972146E-7	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999471280651	WITHOUT_CLASSIFICATION	5.287193488283693E-8	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999981591773999	WITHOUT_CLASSIFICATION	1.8408226001086219E-6	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999760381426357	WITHOUT_CLASSIFICATION	2.3961857364225862E-5	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999760381426357	WITHOUT_CLASSIFICATION	2.3961857364225862E-5	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999987974350685	WITHOUT_CLASSIFICATION	1.2025649314451464E-6	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999996025678415	WITHOUT_CLASSIFICATION	3.974321585286461E-7	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999996014770886	WITHOUT_CLASSIFICATION	3.985229114032737E-7	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999996796658404	WITHOUT_CLASSIFICATION	3.203341596472269E-7	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999986772383223	WITHOUT_CLASSIFICATION	1.3227616778472653E-6	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999823276006389	WITHOUT_CLASSIFICATION	1.7672399361085196E-5	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999842344267	WITHOUT_CLASSIFICATION	1.5765573275136058E-8	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999996158150712	WITHOUT_CLASSIFICATION	3.8418492875367083E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999983807749007	WITHOUT_CLASSIFICATION	1.6192250994555855E-6	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999983807749007	WITHOUT_CLASSIFICATION	1.6192250994555855E-6	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999967997142084	WITHOUT_CLASSIFICATION	3.200285791671479E-6	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999994582535476	WITHOUT_CLASSIFICATION	5.4174645232275E-7	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999978015253124	WITHOUT_CLASSIFICATION	2.1984746875158066E-6	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999929375364949	WITHOUT_CLASSIFICATION	7.062463505147771E-6	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.99999179917376	WITHOUT_CLASSIFICATION	8.200826239921407E-6	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999988986033577	WITHOUT_CLASSIFICATION	1.1013966424200204E-6	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999870896957	WITHOUT_CLASSIFICATION	1.2910304220189975E-8	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999989526820945	WITHOUT_CLASSIFICATION	1.047317905503817E-6	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999959586137563	WITHOUT_CLASSIFICATION	4.041386243662482E-6	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999945949699623	WITHOUT_CLASSIFICATION	5.405030037706553E-6	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999796229827268	WITHOUT_CLASSIFICATION	2.0377017273248805E-5	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999854835535577	WITHOUT_CLASSIFICATION	1.4516446442382726E-5	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.999978304112449	WITHOUT_CLASSIFICATION	2.169588755098666E-5	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999247084143306	WITHOUT_CLASSIFICATION	7.52915856694129E-5	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999247084143306	WITHOUT_CLASSIFICATION	7.52915856694129E-5	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999887713404491	WITHOUT_CLASSIFICATION	1.1228659550990381E-5	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999823498158642	WITHOUT_CLASSIFICATION	1.7650184135773837E-5	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999974187232087	WITHOUT_CLASSIFICATION	2.5812767913239884E-6	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999999004290286	WITHOUT_CLASSIFICATION	9.957097134005903E-8	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999997841552654	WITHOUT_CLASSIFICATION	2.1584473464702253E-7	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999928071594987	WITHOUT_CLASSIFICATION	7.192840501388945E-6	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999784808562313	WITHOUT_CLASSIFICATION	2.151914376876324E-5	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999927343260857	WITHOUT_CLASSIFICATION	7.2656739142730154E-6	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.999995451984429	WITHOUT_CLASSIFICATION	4.548015571086117E-6	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9998998812376687	WITHOUT_CLASSIFICATION	1.0011876233124191E-4	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.999999286864772	WITHOUT_CLASSIFICATION	7.131352279853073E-7	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999915662336629	WITHOUT_CLASSIFICATION	8.43376633699047E-6	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999986727521036	WITHOUT_CLASSIFICATION	1.3272478963445178E-6	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999996807171606	WITHOUT_CLASSIFICATION	3.1928283937678187E-7	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.999999315833234	WITHOUT_CLASSIFICATION	6.841667659679005E-7	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999968323279437	WITHOUT_CLASSIFICATION	3.1676720563544355E-6	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999996671303079	WITHOUT_CLASSIFICATION	3.328696921368517E-7	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.999994492991731	WITHOUT_CLASSIFICATION	5.507008269050914E-6	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999907039256871	WITHOUT_CLASSIFICATION	9.296074312888368E-6	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.999994855836448	WITHOUT_CLASSIFICATION	5.144163551998976E-6	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9999862015872081	WITHOUT_CLASSIFICATION	1.3798412791951953E-5	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999829443915893	WITHOUT_CLASSIFICATION	1.7055608410721802E-5	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999962045988613	WITHOUT_CLASSIFICATION	3.7954011386503284E-6	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999963735063739	WITHOUT_CLASSIFICATION	3.6264936261780123E-6	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9999997234753423	WITHOUT_CLASSIFICATION	2.7652465777958726E-7	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999997193776607	WITHOUT_CLASSIFICATION	2.806223391669867E-7	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999613845312105	WITHOUT_CLASSIFICATION	3.8615468789418846E-5	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.999995611528745	WITHOUT_CLASSIFICATION	4.3884712549671944E-6	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999961893858679	WITHOUT_CLASSIFICATION	3.8106141322253917E-6	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999925860885809	WITHOUT_CLASSIFICATION	7.4139114190762875E-6	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999964694544141	WITHOUT_CLASSIFICATION	3.530545585904115E-6	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999954239256593	WITHOUT_CLASSIFICATION	4.5760743406688085E-6	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.99999217888452	WITHOUT_CLASSIFICATION	7.82111547996669E-6	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999991351105869	WITHOUT_CLASSIFICATION	8.648894132019885E-7	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999994653125178	WITHOUT_CLASSIFICATION	5.346874821187604E-7	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999975791518527	WITHOUT_CLASSIFICATION	2.42084814733195E-6	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999946790233379	WITHOUT_CLASSIFICATION	5.320976662135946E-6	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999957930181924	WITHOUT_CLASSIFICATION	4.206981807533428E-6	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999988676279415	WITHOUT_CLASSIFICATION	1.1323720584955708E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.999995989800407	WITHOUT_CLASSIFICATION	4.010199592975431E-6	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999856028141058	WITHOUT_CLASSIFICATION	1.4397185894187211E-5	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999991298448542	WITHOUT_CLASSIFICATION	8.701551458815005E-7	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999989207433492	WITHOUT_CLASSIFICATION	1.0792566509169215E-6	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999993437087137	WITHOUT_CLASSIFICATION	6.562912862809684E-7	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9989623977471471	WITHOUT_CLASSIFICATION	0.0010376022528529258	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999991337354078	WITHOUT_CLASSIFICATION	8.662645921614934E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999972240269607	WITHOUT_CLASSIFICATION	2.7759730394288226E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999966449358353	WITHOUT_CLASSIFICATION	3.3550641647866178E-6	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999979496681597	WITHOUT_CLASSIFICATION	2.0503318402946904E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999930068050525	WITHOUT_CLASSIFICATION	6.99319494743861E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999930068050525	WITHOUT_CLASSIFICATION	6.99319494743861E-6	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999992243279454	WITHOUT_CLASSIFICATION	7.756720545451317E-7	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999840408496261	WITHOUT_CLASSIFICATION	1.5959150373931817E-5	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999990609468771	WITHOUT_CLASSIFICATION	9.390531228766478E-7	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.999999983971027	WITHOUT_CLASSIFICATION	1.6028973107633633E-8	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999997106851191	WITHOUT_CLASSIFICATION	2.893148810181559E-7	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.999999661986692	WITHOUT_CLASSIFICATION	3.3801330805936423E-7	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999239631715	WITHOUT_CLASSIFICATION	7.603682840988687E-8	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999724465127	WITHOUT_CLASSIFICATION	2.7553487212190387E-8	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.99999994586532	WITHOUT_CLASSIFICATION	5.4134679972718E-8	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999966808195243	WITHOUT_CLASSIFICATION	3.3191804756988872E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999975437422008	WITHOUT_CLASSIFICATION	2.456257799234329E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999975437422008	WITHOUT_CLASSIFICATION	2.456257799234329E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999975437422008	WITHOUT_CLASSIFICATION	2.456257799234329E-6	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999317917617	WITHOUT_CLASSIFICATION	6.820823835320277E-8	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999995530658513	WITHOUT_CLASSIFICATION	4.4693414864281257E-7	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999900852308903	WITHOUT_CLASSIFICATION	9.914769109666539E-6	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999974716760713	WITHOUT_CLASSIFICATION	2.5283239285536038E-6	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999974716760713	WITHOUT_CLASSIFICATION	2.5283239285536038E-6	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999983087587615	WITHOUT_CLASSIFICATION	1.691241238543086E-6	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999949599038457	WITHOUT_CLASSIFICATION	5.0400961542995494E-6	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999914573401837	WITHOUT_CLASSIFICATION	8.54265981635231E-6	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999960336164629	WITHOUT_CLASSIFICATION	3.966383537021579E-6	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999974766204607	WITHOUT_CLASSIFICATION	2.523379539257003E-6	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.999994088931869	WITHOUT_CLASSIFICATION	5.911068131046685E-6	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999959082397564	WITHOUT_CLASSIFICATION	4.0917602436274975E-6	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999994646546277	WITHOUT_CLASSIFICATION	5.353453721813237E-7	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999988849273043	WITHOUT_CLASSIFICATION	1.115072695667674E-6	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999991113243062	WITHOUT_CLASSIFICATION	8.886756938339072E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999991113243062	WITHOUT_CLASSIFICATION	8.886756938339072E-7	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999854700172554	WITHOUT_CLASSIFICATION	1.4529982744681728E-5	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999938483729586	WITHOUT_CLASSIFICATION	6.1516270413445305E-6	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999919827578704	WITHOUT_CLASSIFICATION	8.017242129642704E-6	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999872569712689	WITHOUT_CLASSIFICATION	1.2743028731095272E-5	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999980438983103	WITHOUT_CLASSIFICATION	1.956101689760429E-6	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999444963880997	WITHOUT_CLASSIFICATION	5.550361190038419E-5	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999307652138725	WITHOUT_CLASSIFICATION	6.923478612756159E-5	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999476954800748	WITHOUT_CLASSIFICATION	5.2304519925203665E-5	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9998811929655029	WITHOUT_CLASSIFICATION	1.1880703449703987E-4	TEST
// POP	WITHOUT_CLASSIFICATION	0.9998315685328149	WITHOUT_CLASSIFICATION	1.6843146718501854E-4	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999998148584726	WITHOUT_CLASSIFICATION	1.851415274876763E-7	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9998856110563125	WITHOUT_CLASSIFICATION	1.1438894368757088E-4	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9998697110600744	WITHOUT_CLASSIFICATION	1.30288939925644E-4	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999988810714514	WITHOUT_CLASSIFICATION	1.1189285486651824E-6	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999964755164509	WITHOUT_CLASSIFICATION	3.5244835492196037E-6	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999997258333281	WITHOUT_CLASSIFICATION	2.7416667196468706E-7	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999976809026613	WITHOUT_CLASSIFICATION	2.319097338712383E-6	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999986422491525	WITHOUT_CLASSIFICATION	1.357750847602709E-6	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999986479243358	WITHOUT_CLASSIFICATION	1.352075664150766E-6	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999994300602185	WITHOUT_CLASSIFICATION	5.699397814415588E-7	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999989213497352	WITHOUT_CLASSIFICATION	1.0786502647963318E-6	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999988227184197	WITHOUT_CLASSIFICATION	1.1772815803301544E-6	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999991085769846	WITHOUT_CLASSIFICATION	8.914230153725803E-7	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999858976844492	WITHOUT_CLASSIFICATION	1.410231555083804E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999422611891594	WITHOUT_CLASSIFICATION	5.7738810840481795E-5	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.999996459930605	WITHOUT_CLASSIFICATION	3.5400693948626018E-6	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999859309690292	WITHOUT_CLASSIFICATION	1.4069030970910132E-5	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999659617893467	WITHOUT_CLASSIFICATION	3.403821065322793E-5	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999985244137455	WITHOUT_CLASSIFICATION	1.4755862546151746E-6	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999059314228551	WITHOUT_CLASSIFICATION	9.40685771449646E-5	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9991000849212076	WITHOUT_CLASSIFICATION	8.999150787923874E-4	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999581504545458	WITHOUT_CLASSIFICATION	4.1849545454272975E-5	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999177826473371	WITHOUT_CLASSIFICATION	8.221735266283908E-5	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9991000849212076	WITHOUT_CLASSIFICATION	8.999150787923874E-4	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999623649980831	WITHOUT_CLASSIFICATION	3.763500191681895E-5	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999986394488771	WITHOUT_CLASSIFICATION	1.3605511228067105E-6	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999742217553668	WITHOUT_CLASSIFICATION	2.5778244633286406E-5	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.999989495653894	WITHOUT_CLASSIFICATION	1.0504346106149586E-5	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.999996697427234	WITHOUT_CLASSIFICATION	3.302572766137143E-6	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999939702508553	WITHOUT_CLASSIFICATION	6.0297491445966776E-6	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999879671177767	WITHOUT_CLASSIFICATION	1.2032882223282215E-5	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999789397912887	WITHOUT_CLASSIFICATION	2.1060208711259133E-5	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9998544722591302	WITHOUT_CLASSIFICATION	1.455277408698946E-4	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9997453322095378	WITHOUT_CLASSIFICATION	2.5466779046217584E-4	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9991534466583818	WITHOUT_CLASSIFICATION	8.465533416182663E-4	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.999808994111557	WITHOUT_CLASSIFICATION	1.9100588844293747E-4	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999557312926872	WITHOUT_CLASSIFICATION	4.426870731276006E-5	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999435243338816	WITHOUT_CLASSIFICATION	5.6475666118458905E-5	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999863238710442	WITHOUT_CLASSIFICATION	1.3676128955722198E-5	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.999469705788895	WITHOUT_CLASSIFICATION	5.302942111048506E-4	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9993018026381453	WITHOUT_CLASSIFICATION	6.981973618547067E-4	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.999988826722032	WITHOUT_CLASSIFICATION	1.1173277967986452E-5	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999680919204275	WITHOUT_CLASSIFICATION	3.1908079572511856E-5	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9997483878452452	WITHOUT_CLASSIFICATION	2.516121547547497E-4	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999455187044294	WITHOUT_CLASSIFICATION	5.4481295570668075E-5	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9998744864416103	WITHOUT_CLASSIFICATION	1.255135583897233E-4	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9998755081623627	WITHOUT_CLASSIFICATION	1.2449183763728648E-4	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999913806959408	WITHOUT_CLASSIFICATION	8.61930405919268E-6	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999869728661621	WITHOUT_CLASSIFICATION	1.3027133837728708E-5	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999973222980807	WITHOUT_CLASSIFICATION	2.6777019193006222E-6	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.999928867901161	WITHOUT_CLASSIFICATION	7.113209883910403E-5	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999914067353771	WITHOUT_CLASSIFICATION	8.593264622843954E-6	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999881628596557	WITHOUT_CLASSIFICATION	1.1837140344217796E-5	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999774791465557	WITHOUT_CLASSIFICATION	2.2520853444411687E-5	TEST
// hash	WITHOUT_CLASSIFICATION	0.9999204840736493	WITHOUT_CLASSIFICATION	7.951592635065871E-5	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999986201226965	WITHOUT_CLASSIFICATION	1.379877303467699E-6	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999878447207308	WITHOUT_CLASSIFICATION	1.2155279269157751E-5	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999991911204295	WITHOUT_CLASSIFICATION	8.088795705714513E-7	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999820375407622	WITHOUT_CLASSIFICATION	1.7962459237703558E-5	TEST
// binary	WITHOUT_CLASSIFICATION	0.999978326066409	WITHOUT_CLASSIFICATION	2.167393359097952E-5	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999820216732517	WITHOUT_CLASSIFICATION	1.797832674821466E-5	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9992329149591102	WITHOUT_CLASSIFICATION	7.670850408898516E-4	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999947051738948	WITHOUT_CLASSIFICATION	5.294826105297388E-6	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999613438359237	WITHOUT_CLASSIFICATION	3.8656164076262956E-5	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999736708227238	WITHOUT_CLASSIFICATION	2.63291772762743E-5	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999907500884713	WITHOUT_CLASSIFICATION	9.249911528729151E-6	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999181614507475	WITHOUT_CLASSIFICATION	8.18385492525679E-5	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999915521622255	WITHOUT_CLASSIFICATION	8.447837774497171E-6	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999790979537859	WITHOUT_CLASSIFICATION	2.0902046214128333E-5	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999617251126414	WITHOUT_CLASSIFICATION	3.8274887358560274E-5	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999902768214437	WITHOUT_CLASSIFICATION	9.723178556243284E-6	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999809740060956	WITHOUT_CLASSIFICATION	1.9025993904384086E-5	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999983203030985	WITHOUT_CLASSIFICATION	1.6796969014058561E-6	TEST
// space	WITHOUT_CLASSIFICATION	0.9999683946934804	WITHOUT_CLASSIFICATION	3.160530651958313E-5	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999915772747576	WITHOUT_CLASSIFICATION	8.42272524249E-6	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.999999984757742	WITHOUT_CLASSIFICATION	1.52422580490607E-8	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999996180331094	WITHOUT_CLASSIFICATION	3.819668905143009E-7	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999983203030985	WITHOUT_CLASSIFICATION	1.6796969014058561E-6	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.999993252500577	WITHOUT_CLASSIFICATION	6.747499422990961E-6	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.999993252500577	WITHOUT_CLASSIFICATION	6.747499422990961E-6	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.999996972098335	WITHOUT_CLASSIFICATION	3.0279016648549196E-6	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999921450454742	WITHOUT_CLASSIFICATION	7.854954525796332E-6	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999992715921814	WITHOUT_CLASSIFICATION	7.284078186474699E-7	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999952041028296	WITHOUT_CLASSIFICATION	4.795897170397452E-6	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999993542110106	WITHOUT_CLASSIFICATION	6.457889893305133E-7	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999950007738783	WITHOUT_CLASSIFICATION	4.999226121709613E-6	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999936850847224	WITHOUT_CLASSIFICATION	6.314915277676962E-6	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9999996269293252	WITHOUT_CLASSIFICATION	3.730706747004185E-7	TEST
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999992435709181	WITHOUT_CLASSIFICATION	7.564290818422177E-7	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999930080893499	WITHOUT_CLASSIFICATION	6.991910650068775E-6	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999626846859	WITHOUT_CLASSIFICATION	3.731531401442567E-8	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999654068245	WITHOUT_CLASSIFICATION	3.4593175594638785E-8	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999915291813442	WITHOUT_CLASSIFICATION	8.470818655788864E-6	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999858793368347	WITHOUT_CLASSIFICATION	1.4120663165401842E-5	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999996994589828	WITHOUT_CLASSIFICATION	3.0054101717853776E-7	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999996918440145	WITHOUT_CLASSIFICATION	3.08155985491795E-7	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999987426881873	WITHOUT_CLASSIFICATION	1.2573118126666154E-6	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9991073051287878	WITHOUT_CLASSIFICATION	8.926948712122915E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9991073051287878	WITHOUT_CLASSIFICATION	8.926948712122915E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9991073051287878	WITHOUT_CLASSIFICATION	8.926948712122915E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9991073051287878	WITHOUT_CLASSIFICATION	8.926948712122915E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9991073051287878	WITHOUT_CLASSIFICATION	8.926948712122915E-4	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999653103698923	WITHOUT_CLASSIFICATION	3.468963010769199E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999853727821688	WITHOUT_CLASSIFICATION	1.4627217831104775E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998339343858116	WITHOUT_CLASSIFICATION	1.6606561418838287E-4	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999958058620614	WITHOUT_CLASSIFICATION	4.194137938614301E-6	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999984759807573	WITHOUT_CLASSIFICATION	1.5240192426469041E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999884358805128	WITHOUT_CLASSIFICATION	1.1564119487193731E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999592844723725	WITHOUT_CLASSIFICATION	4.071552762747848E-5	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999634933671772	WITHOUT_CLASSIFICATION	3.650663282280761E-5	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999941917945979	WITHOUT_CLASSIFICATION	5.808205402057379E-6	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999683398558448	WITHOUT_CLASSIFICATION	3.1660144155221206E-5	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999655307397299	WITHOUT_CLASSIFICATION	3.4469260270111315E-5	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999660711549676	WITHOUT_CLASSIFICATION	3.39288450323846E-5	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999679855608451	WITHOUT_CLASSIFICATION	3.2014439154873296E-5	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999668568006167	WITHOUT_CLASSIFICATION	3.3143199383302834E-5	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999664594407529	WITHOUT_CLASSIFICATION	3.354055924714562E-5	TEST
// line 332	WITHOUT_CLASSIFICATION	0.999965510148344	WITHOUT_CLASSIFICATION	3.4489851655922964E-5	TEST
// line 338	WITHOUT_CLASSIFICATION	0.999963921784964	WITHOUT_CLASSIFICATION	3.6078215036027595E-5	TEST
// line 341	WITHOUT_CLASSIFICATION	0.999967432032161	WITHOUT_CLASSIFICATION	3.256796783902086E-5	TEST
// line 344	WITHOUT_CLASSIFICATION	0.999964293120503	WITHOUT_CLASSIFICATION	3.570687949697019E-5	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999672537830346	WITHOUT_CLASSIFICATION	3.2746216965330225E-5	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999639775587903	WITHOUT_CLASSIFICATION	3.602244120976887E-5	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999639324742025	WITHOUT_CLASSIFICATION	3.606752579744082E-5	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999655635793139	WITHOUT_CLASSIFICATION	3.443642068607186E-5	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999639779144758	WITHOUT_CLASSIFICATION	3.6022085524149444E-5	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999655685206499	WITHOUT_CLASSIFICATION	3.443147935001804E-5	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999650520294722	WITHOUT_CLASSIFICATION	3.49479705278311E-5	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999672236728077	WITHOUT_CLASSIFICATION	3.27763271923448E-5	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999658295233775	WITHOUT_CLASSIFICATION	3.41704766223742E-5	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999656612349556	WITHOUT_CLASSIFICATION	3.43387650444986E-5	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999673722972662	WITHOUT_CLASSIFICATION	3.262770273386793E-5	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999644978375419	WITHOUT_CLASSIFICATION	3.5502162458098515E-5	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999639035484772	WITHOUT_CLASSIFICATION	3.6096451522802045E-5	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999639458637688	WITHOUT_CLASSIFICATION	3.605413623131081E-5	TEST
// line 446	WITHOUT_CLASSIFICATION	0.999963026450453	WITHOUT_CLASSIFICATION	3.6973549547062526E-5	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999647454280247	WITHOUT_CLASSIFICATION	3.525457197522397E-5	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999630626460979	WITHOUT_CLASSIFICATION	3.6937353902083924E-5	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999632610702665	WITHOUT_CLASSIFICATION	3.673892973355782E-5	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999630805230891	WITHOUT_CLASSIFICATION	3.691947691090966E-5	TEST
// line 470	WITHOUT_CLASSIFICATION	0.999965879668096	WITHOUT_CLASSIFICATION	3.412033190400169E-5	TEST
// line 479	WITHOUT_CLASSIFICATION	0.99996306163722	WITHOUT_CLASSIFICATION	3.6938362779982424E-5	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999632654220184	WITHOUT_CLASSIFICATION	3.673457798161477E-5	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999630887774089	WITHOUT_CLASSIFICATION	3.691122259103132E-5	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999647429761859	WITHOUT_CLASSIFICATION	3.5257023814074334E-5	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999631192810401	WITHOUT_CLASSIFICATION	3.6880718959862625E-5	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999685567165946	WITHOUT_CLASSIFICATION	3.144328340547252E-5	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999651694884991	WITHOUT_CLASSIFICATION	3.4830511500939054E-5	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999647520563884	WITHOUT_CLASSIFICATION	3.5247943611687305E-5	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999687839618576	WITHOUT_CLASSIFICATION	3.121603814230688E-5	TEST
// line 519	WITHOUT_CLASSIFICATION	0.999965364849589	WITHOUT_CLASSIFICATION	3.46351504109196E-5	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999641275676101	WITHOUT_CLASSIFICATION	3.587243238982168E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998339343858116	WITHOUT_CLASSIFICATION	1.6606561418838287E-4	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999634169216999	WITHOUT_CLASSIFICATION	3.658307830017038E-5	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999657721920172	WITHOUT_CLASSIFICATION	3.422780798273334E-5	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999638892643287	WITHOUT_CLASSIFICATION	3.611073567122235E-5	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999629684077292	WITHOUT_CLASSIFICATION	3.703159227079743E-5	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999626994702293	WITHOUT_CLASSIFICATION	3.730052977065671E-5	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999626857826153	WITHOUT_CLASSIFICATION	3.7314217384677664E-5	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999637008179393	WITHOUT_CLASSIFICATION	3.629918206072912E-5	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999627080917503	WITHOUT_CLASSIFICATION	3.729190824982062E-5	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999627528869472	WITHOUT_CLASSIFICATION	3.724711305274549E-5	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999626869187561	WITHOUT_CLASSIFICATION	3.7313081243976444E-5	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999628031048838	WITHOUT_CLASSIFICATION	3.719689511614212E-5	TEST
// line 587	WITHOUT_CLASSIFICATION	0.999962749822972	WITHOUT_CLASSIFICATION	3.725017702802415E-5	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999627562982433	WITHOUT_CLASSIFICATION	3.7243701756629656E-5	TEST
// line 604	WITHOUT_CLASSIFICATION	0.999965177674185	WITHOUT_CLASSIFICATION	3.482232581498469E-5	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999647603378425	WITHOUT_CLASSIFICATION	3.523966215740184E-5	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999687913393606	WITHOUT_CLASSIFICATION	3.120866063938786E-5	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999662549044488	WITHOUT_CLASSIFICATION	3.3745095551255327E-5	TEST
// line 616	WITHOUT_CLASSIFICATION	0.999965323015084	WITHOUT_CLASSIFICATION	3.467698491608904E-5	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999638554077647	WITHOUT_CLASSIFICATION	3.614459223538797E-5	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999634795227912	WITHOUT_CLASSIFICATION	3.6520477208790824E-5	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999638977771007	WITHOUT_CLASSIFICATION	3.6102222899339625E-5	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999629104372387	WITHOUT_CLASSIFICATION	3.708956276140295E-5	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999626955930562	WITHOUT_CLASSIFICATION	3.7304406943813886E-5	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999655485673052	WITHOUT_CLASSIFICATION	3.4451432694739216E-5	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999627043398154	WITHOUT_CLASSIFICATION	3.7295660184617106E-5	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999655939933971	WITHOUT_CLASSIFICATION	3.440600660287222E-5	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999644488672923	WITHOUT_CLASSIFICATION	3.555113270779976E-5	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999626979932545	WITHOUT_CLASSIFICATION	3.7302006745465924E-5	TEST
// line 701	WITHOUT_CLASSIFICATION	0.999968558006005	WITHOUT_CLASSIFICATION	3.144199399506202E-5	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999653132666846	WITHOUT_CLASSIFICATION	3.468673331530813E-5	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999670927257436	WITHOUT_CLASSIFICATION	3.290727425647867E-5	TEST
// line 726	WITHOUT_CLASSIFICATION	0.999964193634632	WITHOUT_CLASSIFICATION	3.5806365367999164E-5	TEST
// line 729	WITHOUT_CLASSIFICATION	0.999964180500027	WITHOUT_CLASSIFICATION	3.581949997300318E-5	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999650805764737	WITHOUT_CLASSIFICATION	3.4919423526351545E-5	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999634152217063	WITHOUT_CLASSIFICATION	3.658477829369857E-5	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999634724282989	WITHOUT_CLASSIFICATION	3.652757170119795E-5	TEST
// line 751	WITHOUT_CLASSIFICATION	0.999966187205125	WITHOUT_CLASSIFICATION	3.38127948751266E-5	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999631871119663	WITHOUT_CLASSIFICATION	3.681288803372439E-5	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999626883462823	WITHOUT_CLASSIFICATION	3.7311653717746706E-5	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999655958931656	WITHOUT_CLASSIFICATION	3.4404106834451494E-5	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999637023276923	WITHOUT_CLASSIFICATION	3.629767230780435E-5	TEST
// line 769	WITHOUT_CLASSIFICATION	0.999962754436125	WITHOUT_CLASSIFICATION	3.724556387501272E-5	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999643870228198	WITHOUT_CLASSIFICATION	3.561297718021972E-5	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999626885927702	WITHOUT_CLASSIFICATION	3.731140722976184E-5	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999644472958905	WITHOUT_CLASSIFICATION	3.555270410950714E-5	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999627469355313	WITHOUT_CLASSIFICATION	3.725306446869798E-5	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999661862860578	WITHOUT_CLASSIFICATION	3.381371394220048E-5	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999631946082318	WITHOUT_CLASSIFICATION	3.68053917681794E-5	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999626873173103	WITHOUT_CLASSIFICATION	3.7312682689747626E-5	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999656588679318	WITHOUT_CLASSIFICATION	3.43411320682217E-5	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999647811140028	WITHOUT_CLASSIFICATION	3.5218885997203766E-5	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999647620707487	WITHOUT_CLASSIFICATION	3.52379292513688E-5	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999653702708431	WITHOUT_CLASSIFICATION	3.462972915697426E-5	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999653650197496	WITHOUT_CLASSIFICATION	3.463498025032092E-5	TEST
// line 821	WITHOUT_CLASSIFICATION	0.999967492587408	WITHOUT_CLASSIFICATION	3.250741259201594E-5	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999646082204956	WITHOUT_CLASSIFICATION	3.539177950446933E-5	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999662067848495	WITHOUT_CLASSIFICATION	3.379321515056399E-5	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999636394206622	WITHOUT_CLASSIFICATION	3.636057933769063E-5	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999634313222056	WITHOUT_CLASSIFICATION	3.656867779457202E-5	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999634167318003	WITHOUT_CLASSIFICATION	3.658326819957493E-5	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999646459825845	WITHOUT_CLASSIFICATION	3.53540174153832E-5	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999629724943038	WITHOUT_CLASSIFICATION	3.702750569621988E-5	TEST
// line 852	WITHOUT_CLASSIFICATION	0.999964446022529	WITHOUT_CLASSIFICATION	3.555397747110592E-5	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999627442691302	WITHOUT_CLASSIFICATION	3.725573086980891E-5	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999661980817872	WITHOUT_CLASSIFICATION	3.3801918212834255E-5	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999627620394277	WITHOUT_CLASSIFICATION	3.723796057230848E-5	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999661896481846	WITHOUT_CLASSIFICATION	3.381035181540434E-5	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999627613585731	WITHOUT_CLASSIFICATION	3.723864142696162E-5	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999627476862784	WITHOUT_CLASSIFICATION	3.725231372167132E-5	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999636394182588	WITHOUT_CLASSIFICATION	3.6360581741233355E-5	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999636946441958	WITHOUT_CLASSIFICATION	3.630535580420181E-5	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999627603967151	WITHOUT_CLASSIFICATION	3.72396032849758E-5	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999626898913139	WITHOUT_CLASSIFICATION	3.731010868605035E-5	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999656427198633	WITHOUT_CLASSIFICATION	3.435728013665783E-5	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999647465744286	WITHOUT_CLASSIFICATION	3.52534255714964E-5	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999653598405494	WITHOUT_CLASSIFICATION	3.4640159450565246E-5	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999670850697812	WITHOUT_CLASSIFICATION	3.291493021886894E-5	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999650892461175	WITHOUT_CLASSIFICATION	3.4910753882520195E-5	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999641853065817	WITHOUT_CLASSIFICATION	3.581469341829759E-5	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999650724500861	WITHOUT_CLASSIFICATION	3.4927549913952183E-5	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999634203079325	WITHOUT_CLASSIFICATION	3.657969206752232E-5	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999657735588219	WITHOUT_CLASSIFICATION	3.4226441178146506E-5	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999631300580221	WITHOUT_CLASSIFICATION	3.6869941977879334E-5	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999630152275591	WITHOUT_CLASSIFICATION	3.6984772440965876E-5	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999627500134011	WITHOUT_CLASSIFICATION	3.724998659891509E-5	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999655880502046	WITHOUT_CLASSIFICATION	3.441194979542941E-5	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999631880296856	WITHOUT_CLASSIFICATION	3.6811970314457536E-5	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999627470822066	WITHOUT_CLASSIFICATION	3.725291779345954E-5	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999644336860983	WITHOUT_CLASSIFICATION	3.5566313901634095E-5	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999627959959555	WITHOUT_CLASSIFICATION	3.7204004044572957E-5	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999655910720894	WITHOUT_CLASSIFICATION	3.4408927910558605E-5	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999631922176334	WITHOUT_CLASSIFICATION	3.680778236657527E-5	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999627552341068	WITHOUT_CLASSIFICATION	3.7244765893203396E-5	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999626925212278	WITHOUT_CLASSIFICATION	3.730747877225289E-5	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999712762628407	WITHOUT_CLASSIFICATION	2.8723737159278148E-5	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999702099882677	WITHOUT_CLASSIFICATION	2.9790011732275332E-5	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999699000173741	WITHOUT_CLASSIFICATION	3.0099982625939117E-5	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999703394304771	WITHOUT_CLASSIFICATION	2.966056952293966E-5	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999705599325365	WITHOUT_CLASSIFICATION	2.944006746362894E-5	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999712930733025	WITHOUT_CLASSIFICATION	2.8706926697514606E-5	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999702800949298	WITHOUT_CLASSIFICATION	2.971990507007835E-5	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999695407353709	WITHOUT_CLASSIFICATION	3.0459264629167494E-5	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999695953952653	WITHOUT_CLASSIFICATION	3.0404604734688258E-5	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.999970053068455	WITHOUT_CLASSIFICATION	2.994693154498127E-5	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.999969421739011	WITHOUT_CLASSIFICATION	3.057826098902608E-5	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999700529336645	WITHOUT_CLASSIFICATION	2.994706633544357E-5	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999701525716684	WITHOUT_CLASSIFICATION	2.9847428331546637E-5	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999693843557914	WITHOUT_CLASSIFICATION	3.061564420855548E-5	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999693731110276	WITHOUT_CLASSIFICATION	3.062688897241369E-5	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999707726510693	WITHOUT_CLASSIFICATION	2.9227348930698483E-5	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999693775138436	WITHOUT_CLASSIFICATION	3.0622486156257936E-5	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999693731211534	WITHOUT_CLASSIFICATION	3.062687884667498E-5	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999722608404922	WITHOUT_CLASSIFICATION	2.7739159507789738E-5	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999713155038589	WITHOUT_CLASSIFICATION	2.8684496141101844E-5	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999705673180365	WITHOUT_CLASSIFICATION	2.9432681963597994E-5	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999694192451918	WITHOUT_CLASSIFICATION	3.058075480826041E-5	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999689958518009	WITHOUT_CLASSIFICATION	3.1004148199226996E-5	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999681870721455	WITHOUT_CLASSIFICATION	3.181292785436724E-5	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999681856100867	WITHOUT_CLASSIFICATION	3.1814389913292196E-5	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999706771092987	WITHOUT_CLASSIFICATION	2.9322890701416118E-5	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999684493656759	WITHOUT_CLASSIFICATION	3.155063432408942E-5	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999682569969978	WITHOUT_CLASSIFICATION	3.174300300222537E-5	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999682570965294	WITHOUT_CLASSIFICATION	3.174290347064357E-5	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999703027378766	WITHOUT_CLASSIFICATION	2.9697262123419755E-5	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999683932417371	WITHOUT_CLASSIFICATION	3.1606758262918046E-5	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999680590918623	WITHOUT_CLASSIFICATION	3.194090813779954E-5	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999677269216076	WITHOUT_CLASSIFICATION	3.227307839232171E-5	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999680662337954	WITHOUT_CLASSIFICATION	3.1933766204580096E-5	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999676755338284	WITHOUT_CLASSIFICATION	3.232446617164611E-5	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999677262985183	WITHOUT_CLASSIFICATION	3.227370148168356E-5	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999676800642289	WITHOUT_CLASSIFICATION	3.231993577112143E-5	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.999967679077981	WITHOUT_CLASSIFICATION	3.232092201904482E-5	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999684967049302	WITHOUT_CLASSIFICATION	3.150329506985883E-5	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999703340366713	WITHOUT_CLASSIFICATION	2.9665963328551262E-5	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999699784961109	WITHOUT_CLASSIFICATION	3.0021503889002246E-5	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999712001860548	WITHOUT_CLASSIFICATION	2.8799813945161162E-5	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999684249164101	WITHOUT_CLASSIFICATION	3.157508358992688E-5	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999690442136263	WITHOUT_CLASSIFICATION	3.0955786373655115E-5	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999686724514192	WITHOUT_CLASSIFICATION	3.132754858084107E-5	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999690758373336	WITHOUT_CLASSIFICATION	3.092416266637795E-5	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999682692334109	WITHOUT_CLASSIFICATION	3.17307665892016E-5	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999688030380413	WITHOUT_CLASSIFICATION	3.1196961958760265E-5	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999689144545398	WITHOUT_CLASSIFICATION	3.1085545460127984E-5	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999681026701437	WITHOUT_CLASSIFICATION	3.18973298563649E-5	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999705388508079	WITHOUT_CLASSIFICATION	2.9461149192033566E-5	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999689109507988	WITHOUT_CLASSIFICATION	3.108904920121386E-5	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999705281797518	WITHOUT_CLASSIFICATION	2.9471820248184983E-5	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999681055936016	WITHOUT_CLASSIFICATION	3.189440639845412E-5	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999680452078895	WITHOUT_CLASSIFICATION	3.195479211043527E-5	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999705148918188	WITHOUT_CLASSIFICATION	2.9485108181327072E-5	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999691007193078	WITHOUT_CLASSIFICATION	3.089928069227421E-5	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999674903428065	WITHOUT_CLASSIFICATION	3.2509657193430044E-5	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999672931871341	WITHOUT_CLASSIFICATION	3.2706812865812064E-5	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999711530780797	WITHOUT_CLASSIFICATION	2.8846921920285092E-5	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999686501252709	WITHOUT_CLASSIFICATION	3.134987472912485E-5	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999672921270213	WITHOUT_CLASSIFICATION	3.270787297874322E-5	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999675787304414	WITHOUT_CLASSIFICATION	3.242126955866429E-5	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999688305935699	WITHOUT_CLASSIFICATION	3.11694064301035E-5	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999673937562774	WITHOUT_CLASSIFICATION	3.2606243722628E-5	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999677294545727	WITHOUT_CLASSIFICATION	3.2270545427366217E-5	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999680714366995	WITHOUT_CLASSIFICATION	3.192856330049596E-5	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999673473766686	WITHOUT_CLASSIFICATION	3.265262333139475E-5	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999688284237704	WITHOUT_CLASSIFICATION	3.117157622951286E-5	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999668748523025	WITHOUT_CLASSIFICATION	3.3125147697446604E-5	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.999968239470904	WITHOUT_CLASSIFICATION	3.176052909612165E-5	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999676780669504	WITHOUT_CLASSIFICATION	3.232193304964331E-5	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999693993555124	WITHOUT_CLASSIFICATION	3.060064448748056E-5	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999677159575773	WITHOUT_CLASSIFICATION	3.22840424227965E-5	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999677672295247	WITHOUT_CLASSIFICATION	3.223277047519492E-5	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999669362186587	WITHOUT_CLASSIFICATION	3.306378134127744E-5	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999684460511628	WITHOUT_CLASSIFICATION	3.155394883723838E-5	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999669409902702	WITHOUT_CLASSIFICATION	3.3059009729851015E-5	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999694475548423	WITHOUT_CLASSIFICATION	3.055244515766976E-5	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.999966874103529	WITHOUT_CLASSIFICATION	3.3125896471100355E-5	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999694721201722	WITHOUT_CLASSIFICATION	3.052787982776789E-5	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999669374825236	WITHOUT_CLASSIFICATION	3.3062517476440594E-5	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999669332155389	WITHOUT_CLASSIFICATION	3.3066784461061754E-5	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999669354748678	WITHOUT_CLASSIFICATION	3.30645251321925E-5	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999699763770956	WITHOUT_CLASSIFICATION	3.0023622904405008E-5	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999699815639177	WITHOUT_CLASSIFICATION	3.0018436082320614E-5	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999675418594988	WITHOUT_CLASSIFICATION	3.2458140501246684E-5	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999667054924826	WITHOUT_CLASSIFICATION	3.329450751746564E-5	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999675422036874	WITHOUT_CLASSIFICATION	3.245779631259524E-5	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999692341748727	WITHOUT_CLASSIFICATION	3.076582512734686E-5	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999675422036878	WITHOUT_CLASSIFICATION	3.245779631216745E-5	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999667053914996	WITHOUT_CLASSIFICATION	3.3294608500527394E-5	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999667025023187	WITHOUT_CLASSIFICATION	3.329749768128178E-5	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999668136271966	WITHOUT_CLASSIFICATION	3.318637280335001E-5	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999674831886793	WITHOUT_CLASSIFICATION	3.2516811320642815E-5	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.999967139407081	WITHOUT_CLASSIFICATION	3.2860592918893217E-5	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999666944101857	WITHOUT_CLASSIFICATION	3.3305589814361035E-5	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999667503367474	WITHOUT_CLASSIFICATION	3.324966325255919E-5	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.999966693171626	WITHOUT_CLASSIFICATION	3.330682837398582E-5	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999667966640784	WITHOUT_CLASSIFICATION	3.320333592147669E-5	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999697332762315	WITHOUT_CLASSIFICATION	3.0266723768485365E-5	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999685426734656	WITHOUT_CLASSIFICATION	3.1457326534348545E-5	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999688507261506	WITHOUT_CLASSIFICATION	3.1149273849444914E-5	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999679866071524	WITHOUT_CLASSIFICATION	3.201339284765645E-5	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999680324547119	WITHOUT_CLASSIFICATION	3.196754528809596E-5	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999688355486821	WITHOUT_CLASSIFICATION	3.1164451317821645E-5	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.999967400323031	WITHOUT_CLASSIFICATION	3.259967696897626E-5	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999676663582443	WITHOUT_CLASSIFICATION	3.233364175570038E-5	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999670948198447	WITHOUT_CLASSIFICATION	3.2905180155238666E-5	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999669321011219	WITHOUT_CLASSIFICATION	3.306789887821547E-5	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999667005523698	WITHOUT_CLASSIFICATION	3.3299447630131686E-5	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999668040196935	WITHOUT_CLASSIFICATION	3.319598030641613E-5	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999674465874936	WITHOUT_CLASSIFICATION	3.255341250630248E-5	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999682656030229	WITHOUT_CLASSIFICATION	3.173439697721584E-5	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999667008855738	WITHOUT_CLASSIFICATION	3.3299114426160917E-5	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999667644784234	WITHOUT_CLASSIFICATION	3.3235521576754405E-5	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999671523853086	WITHOUT_CLASSIFICATION	3.284761469132151E-5	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999685356845196	WITHOUT_CLASSIFICATION	3.146431548049944E-5	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999685850942527	WITHOUT_CLASSIFICATION	3.14149057472742E-5	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999680251433725	WITHOUT_CLASSIFICATION	3.1974856627523374E-5	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999675390359916	WITHOUT_CLASSIFICATION	3.246096400847144E-5	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999684303500933	WITHOUT_CLASSIFICATION	3.156964990666109E-5	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999669247431103	WITHOUT_CLASSIFICATION	3.307525688971514E-5	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999669238462768	WITHOUT_CLASSIFICATION	3.30761537231729E-5	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999666922375209	WITHOUT_CLASSIFICATION	3.3307762479012333E-5	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999667512377374	WITHOUT_CLASSIFICATION	3.3248762262698156E-5	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999682086379936	WITHOUT_CLASSIFICATION	3.1791362006363906E-5	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999666924597626	WITHOUT_CLASSIFICATION	3.330754023748223E-5	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999671499045893	WITHOUT_CLASSIFICATION	3.285009541058933E-5	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999685428007479	WITHOUT_CLASSIFICATION	3.1457199252130095E-5	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999670915565687	WITHOUT_CLASSIFICATION	3.29084434312679E-5	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999666927188913	WITHOUT_CLASSIFICATION	3.3307281108717174E-5	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999682129750899	WITHOUT_CLASSIFICATION	3.1787024910155826E-5	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999109167887351	WITHOUT_CLASSIFICATION	8.908321126482923E-5	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9986866509764949	WITHOUT_CLASSIFICATION	0.0013133490235050312	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9987456791003808	WITHOUT_CLASSIFICATION	0.0012543208996192235	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9985157958368228	WITHOUT_CLASSIFICATION	0.001484204163177259	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999838422737181	WITHOUT_CLASSIFICATION	1.615772628185321E-5	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999903028652035	WITHOUT_CLASSIFICATION	9.697134796389532E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999403944033539	WITHOUT_CLASSIFICATION	5.9605596645960403E-5	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999403867212981	WITHOUT_CLASSIFICATION	5.961327870188682E-5	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9997901716378332	WITHOUT_CLASSIFICATION	2.0982836216673354E-4	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9998468690517329	WITHOUT_CLASSIFICATION	1.5313094826698042E-4	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999832102920191	WITHOUT_CLASSIFICATION	1.6789707980887506E-5	TEST
// line 529	WITHOUT_CLASSIFICATION	0.999964182049784	WITHOUT_CLASSIFICATION	3.581795021605016E-5	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9998849569062183	WITHOUT_CLASSIFICATION	1.150430937817045E-4	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9988343563425053	WITHOUT_CLASSIFICATION	0.0011656436574947408	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999722570520938	WITHOUT_CLASSIFICATION	2.774294790614385E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999454156744386	WITHOUT_CLASSIFICATION	5.458432556151792E-5	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998389936988085	WITHOUT_CLASSIFICATION	1.6100630119152072E-4	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999558345919277	WITHOUT_CLASSIFICATION	4.416540807219366E-5	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999973911402076	WITHOUT_CLASSIFICATION	2.6088597925318532E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999967895532432	WITHOUT_CLASSIFICATION	3.2104467569084335E-6	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999903109871962	WITHOUT_CLASSIFICATION	9.689012803941885E-6	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999677938984187	WITHOUT_CLASSIFICATION	3.2206101581344894E-5	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999987283717103	WITHOUT_CLASSIFICATION	1.2716282896769545E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999983067167014	WITHOUT_CLASSIFICATION	1.6932832985397837E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999983067167014	WITHOUT_CLASSIFICATION	1.6932832985397837E-6	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.999999718208101	WITHOUT_CLASSIFICATION	2.8179189903142825E-7	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999997842442254	WITHOUT_CLASSIFICATION	2.1575577459823255E-7	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.999976915419875	WITHOUT_CLASSIFICATION	2.3084580124994217E-5	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999988985309065	WITHOUT_CLASSIFICATION	1.1014690935490645E-6	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999974186543261	WITHOUT_CLASSIFICATION	2.5813456739153196E-6	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999988683851283	WITHOUT_CLASSIFICATION	1.1316148716970623E-6	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999997584769307	WITHOUT_CLASSIFICATION	2.415230693160691E-7	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999985511819618	WITHOUT_CLASSIFICATION	1.4488180382084686E-6	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999990112208594	WITHOUT_CLASSIFICATION	9.887791405406036E-7	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999967237517289	WITHOUT_CLASSIFICATION	3.2762482711304803E-6	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999844092305663	WITHOUT_CLASSIFICATION	1.5590769433686895E-5	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999979763867367	WITHOUT_CLASSIFICATION	2.0236132633057293E-6	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999988431522204	WITHOUT_CLASSIFICATION	1.1568477795547575E-6	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9998668363170734	WITHOUT_CLASSIFICATION	1.3316368292651978E-4	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9998251095509795	WITHOUT_CLASSIFICATION	1.7489044902044976E-4	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999308192715999	WITHOUT_CLASSIFICATION	6.918072840015492E-5	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999994515747324	WITHOUT_CLASSIFICATION	5.484252676904957E-7	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999416766656297	WITHOUT_CLASSIFICATION	5.8323334370210404E-5	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999996431191335	WITHOUT_CLASSIFICATION	3.5688086658618107E-7	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999969312002166	WITHOUT_CLASSIFICATION	3.068799783342608E-6	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999996778953955	WITHOUT_CLASSIFICATION	3.221046044517603E-7	TEST
// Node	WITHOUT_CLASSIFICATION	0.9998975879877522	WITHOUT_CLASSIFICATION	1.0241201224783303E-4	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999994876601367	WITHOUT_CLASSIFICATION	5.123398633636352E-7	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999876786624275	WITHOUT_CLASSIFICATION	1.2321337572344304E-5	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999994876601367	WITHOUT_CLASSIFICATION	5.123398633636352E-7	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999877047499418	WITHOUT_CLASSIFICATION	1.2295250058228113E-5	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999814949795717	WITHOUT_CLASSIFICATION	1.8505020428347612E-5	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999993675489534	WITHOUT_CLASSIFICATION	6.324510467345863E-7	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.999943026468727	WITHOUT_CLASSIFICATION	5.697353127296515E-5	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.999998491064721	WITHOUT_CLASSIFICATION	1.5089352790340194E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.999834654638094	WITHOUT_CLASSIFICATION	1.653453619060282E-4	TEST
// foo()	WITHOUT_CLASSIFICATION	0.999834654638094	WITHOUT_CLASSIFICATION	1.653453619060282E-4	TEST
// foo()	WITHOUT_CLASSIFICATION	0.999834654638094	WITHOUT_CLASSIFICATION	1.653453619060282E-4	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999967865551004	WITHOUT_CLASSIFICATION	3.213444899517679E-6	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999827144639661	WITHOUT_CLASSIFICATION	1.7285536033941394E-5	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999985988318332	WITHOUT_CLASSIFICATION	1.4011681668477844E-6	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9991462325326019	WITHOUT_CLASSIFICATION	8.537674673980539E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9991462325326019	WITHOUT_CLASSIFICATION	8.537674673980539E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9991462325326019	WITHOUT_CLASSIFICATION	8.537674673980539E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9991462325326019	WITHOUT_CLASSIFICATION	8.537674673980539E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9991462325326019	WITHOUT_CLASSIFICATION	8.537674673980539E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9991462325326019	WITHOUT_CLASSIFICATION	8.537674673980539E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9996126130076526	WITHOUT_CLASSIFICATION	3.8738699234744335E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9996126130076526	WITHOUT_CLASSIFICATION	3.8738699234744335E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9996126130076526	WITHOUT_CLASSIFICATION	3.8738699234744335E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9996126130076526	WITHOUT_CLASSIFICATION	3.8738699234744335E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9996126130076526	WITHOUT_CLASSIFICATION	3.8738699234744335E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992590056054715	WITHOUT_CLASSIFICATION	7.40994394528443E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992590056054715	WITHOUT_CLASSIFICATION	7.40994394528443E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992590056054715	WITHOUT_CLASSIFICATION	7.40994394528443E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992590056054715	WITHOUT_CLASSIFICATION	7.40994394528443E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9992590056054715	WITHOUT_CLASSIFICATION	7.40994394528443E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999525901490725	WITHOUT_CLASSIFICATION	4.7409850927495906E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999525901490725	WITHOUT_CLASSIFICATION	4.7409850927495906E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999525901490725	WITHOUT_CLASSIFICATION	4.7409850927495906E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999525901490725	WITHOUT_CLASSIFICATION	4.7409850927495906E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999525901490725	WITHOUT_CLASSIFICATION	4.7409850927495906E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999525901490725	WITHOUT_CLASSIFICATION	4.7409850927495906E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998122663060341	WITHOUT_CLASSIFICATION	1.8773369396592546E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998122663060341	WITHOUT_CLASSIFICATION	1.8773369396592546E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998122663060341	WITHOUT_CLASSIFICATION	1.8773369396592546E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998122663060341	WITHOUT_CLASSIFICATION	1.8773369396592546E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998122663060341	WITHOUT_CLASSIFICATION	1.8773369396592546E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998174481021681	WITHOUT_CLASSIFICATION	1.825518978319952E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998174481021681	WITHOUT_CLASSIFICATION	1.825518978319952E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998174481021681	WITHOUT_CLASSIFICATION	1.825518978319952E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998174481021681	WITHOUT_CLASSIFICATION	1.825518978319952E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998174481021681	WITHOUT_CLASSIFICATION	1.825518978319952E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998339343858116	WITHOUT_CLASSIFICATION	1.6606561418838287E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998339343858116	WITHOUT_CLASSIFICATION	1.6606561418838287E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998339343858116	WITHOUT_CLASSIFICATION	1.6606561418838287E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998339343858116	WITHOUT_CLASSIFICATION	1.6606561418838287E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998339343858116	WITHOUT_CLASSIFICATION	1.6606561418838287E-4	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999958058620614	WITHOUT_CLASSIFICATION	4.194137938614301E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999884358805128	WITHOUT_CLASSIFICATION	1.1564119487193731E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999592844723725	WITHOUT_CLASSIFICATION	4.071552762747848E-5	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999634933671772	WITHOUT_CLASSIFICATION	3.650663282280761E-5	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999941917945979	WITHOUT_CLASSIFICATION	5.808205402057379E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999685156206102	WITHOUT_CLASSIFICATION	3.1484379389831914E-5	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999672537830346	WITHOUT_CLASSIFICATION	3.2746216965330225E-5	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999655685206499	WITHOUT_CLASSIFICATION	3.443147935001804E-5	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999656612349556	WITHOUT_CLASSIFICATION	3.43387650444986E-5	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999673722972662	WITHOUT_CLASSIFICATION	3.262770273386793E-5	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999653938892729	WITHOUT_CLASSIFICATION	3.4606110727219684E-5	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999644978375419	WITHOUT_CLASSIFICATION	3.5502162458098515E-5	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999677873747876	WITHOUT_CLASSIFICATION	3.221262521233057E-5	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999660074471266	WITHOUT_CLASSIFICATION	3.39925528734555E-5	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999651268754157	WITHOUT_CLASSIFICATION	3.4873124584312155E-5	TEST
// line 324	WITHOUT_CLASSIFICATION	0.999965722026092	WITHOUT_CLASSIFICATION	3.4277973908002906E-5	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999653123267414	WITHOUT_CLASSIFICATION	3.468767325861722E-5	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999672030859825	WITHOUT_CLASSIFICATION	3.279691401748165E-5	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999640842668243	WITHOUT_CLASSIFICATION	3.591573317573102E-5	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999638787118247	WITHOUT_CLASSIFICATION	3.612128817530202E-5	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999657509097822	WITHOUT_CLASSIFICATION	3.424909021772018E-5	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999641175206004	WITHOUT_CLASSIFICATION	3.588247939962145E-5	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999641819122377	WITHOUT_CLASSIFICATION	3.581808776234619E-5	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999643483179387	WITHOUT_CLASSIFICATION	3.565168206133225E-5	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999639970683402	WITHOUT_CLASSIFICATION	3.600293165985409E-5	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999638656388871	WITHOUT_CLASSIFICATION	3.613436111292021E-5	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999639217825792	WITHOUT_CLASSIFICATION	3.607821742090581E-5	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999655625330386	WITHOUT_CLASSIFICATION	3.443746696131812E-5	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999639202805076	WITHOUT_CLASSIFICATION	3.607971949240098E-5	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999644848121725	WITHOUT_CLASSIFICATION	3.5515187827548194E-5	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999653772420933	WITHOUT_CLASSIFICATION	3.4622757906600274E-5	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999637395166815	WITHOUT_CLASSIFICATION	3.626048331852374E-5	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999630053348663	WITHOUT_CLASSIFICATION	3.6994665133728E-5	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999630717222635	WITHOUT_CLASSIFICATION	3.692827773649298E-5	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999632432831271	WITHOUT_CLASSIFICATION	3.675671687288243E-5	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999630615213968	WITHOUT_CLASSIFICATION	3.693847860322618E-5	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999630435354828	WITHOUT_CLASSIFICATION	3.695646451727445E-5	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999630793964902	WITHOUT_CLASSIFICATION	3.6920603509858684E-5	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999631206500559	WITHOUT_CLASSIFICATION	3.687934994407811E-5	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999664869271867	WITHOUT_CLASSIFICATION	3.351307281324599E-5	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999630717173797	WITHOUT_CLASSIFICATION	3.692828262018987E-5	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999632507776749	WITHOUT_CLASSIFICATION	3.674922232512034E-5	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999630616421045	WITHOUT_CLASSIFICATION	3.6938357895480136E-5	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999656480624761	WITHOUT_CLASSIFICATION	3.435193752400186E-5	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999647700323709	WITHOUT_CLASSIFICATION	3.52299676290021E-5	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999647509854567	WITHOUT_CLASSIFICATION	3.524901454336342E-5	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999670140813761	WITHOUT_CLASSIFICATION	3.298591862382208E-5	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999674915537281	WITHOUT_CLASSIFICATION	3.250844627190092E-5	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999641951861891	WITHOUT_CLASSIFICATION	3.5804813810984386E-5	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999657721920172	WITHOUT_CLASSIFICATION	3.422780798273334E-5	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999638892643287	WITHOUT_CLASSIFICATION	3.611073567122235E-5	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999629684077292	WITHOUT_CLASSIFICATION	3.703159227079743E-5	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999627080917503	WITHOUT_CLASSIFICATION	3.729190824982062E-5	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999687913393606	WITHOUT_CLASSIFICATION	3.120866063938786E-5	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999644488672923	WITHOUT_CLASSIFICATION	3.555113270779976E-5	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999661928624165	WITHOUT_CLASSIFICATION	3.380713758353435E-5	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999626979932545	WITHOUT_CLASSIFICATION	3.7302006745465924E-5	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999643870228198	WITHOUT_CLASSIFICATION	3.561297718021972E-5	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999644472958905	WITHOUT_CLASSIFICATION	3.555270410950714E-5	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999627519912323	WITHOUT_CLASSIFICATION	3.7248008767725146E-5	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999627469355313	WITHOUT_CLASSIFICATION	3.725306446869798E-5	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999661862860578	WITHOUT_CLASSIFICATION	3.381371394220048E-5	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999638499504148	WITHOUT_CLASSIFICATION	3.6150049585190315E-5	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999629462543168	WITHOUT_CLASSIFICATION	3.7053745683109036E-5	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999643868173578	WITHOUT_CLASSIFICATION	3.561318264217824E-5	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999627451399277	WITHOUT_CLASSIFICATION	3.725486007230314E-5	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999661943638789	WITHOUT_CLASSIFICATION	3.380563612110242E-5	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999661859248765	WITHOUT_CLASSIFICATION	3.381407512357015E-5	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999631857035219	WITHOUT_CLASSIFICATION	3.681429647811738E-5	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999627435839441	WITHOUT_CLASSIFICATION	3.725641605598473E-5	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999627623483607	WITHOUT_CLASSIFICATION	3.723765163939398E-5	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999627486862825	WITHOUT_CLASSIFICATION	3.7251313717430465E-5	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999644393993595	WITHOUT_CLASSIFICATION	3.556060064041812E-5	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999626857801471	WITHOUT_CLASSIFICATION	3.73142198528532E-5	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999628017240808	WITHOUT_CLASSIFICATION	3.7198275919232597E-5	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999651043614567	WITHOUT_CLASSIFICATION	3.4895638543306864E-5	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999641896991238	WITHOUT_CLASSIFICATION	3.581030087620229E-5	TEST
// line 630	WITHOUT_CLASSIFICATION	0.999966211035232	WITHOUT_CLASSIFICATION	3.3788964768095954E-5	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999636439939463	WITHOUT_CLASSIFICATION	3.635600605363004E-5	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999634213330924	WITHOUT_CLASSIFICATION	3.657866690765014E-5	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999630224697654	WITHOUT_CLASSIFICATION	3.6977530234642104E-5	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999627533865777	WITHOUT_CLASSIFICATION	3.7246613422402584E-5	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999661492692187	WITHOUT_CLASSIFICATION	3.385073078128621E-5	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999626497162379	WITHOUT_CLASSIFICATION	3.735028376198612E-5	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999628118761581	WITHOUT_CLASSIFICATION	3.718812384192472E-5	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999644621657805	WITHOUT_CLASSIFICATION	3.553783421962952E-5	TEST
// line 688	WITHOUT_CLASSIFICATION	0.999962762514107	WITHOUT_CLASSIFICATION	3.7237485892929735E-5	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999626945790858	WITHOUT_CLASSIFICATION	3.7305420914190034E-5	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999647714747286	WITHOUT_CLASSIFICATION	3.522852527135081E-5	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999648087310037	WITHOUT_CLASSIFICATION	3.5191268996362656E-5	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999641269468901	WITHOUT_CLASSIFICATION	3.5873053109952614E-5	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999633585748179	WITHOUT_CLASSIFICATION	3.6641425182131694E-5	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999636946836281	WITHOUT_CLASSIFICATION	3.630531637191E-5	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999626875761443	WITHOUT_CLASSIFICATION	3.731242385584088E-5	TEST
// line 801	WITHOUT_CLASSIFICATION	0.999968566609236	WITHOUT_CLASSIFICATION	3.1433390763877726E-5	TEST
// line 808	WITHOUT_CLASSIFICATION	0.999964758951206	WITHOUT_CLASSIFICATION	3.524104879414675E-5	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999669450907934	WITHOUT_CLASSIFICATION	3.305490920661826E-5	TEST
// line 817	WITHOUT_CLASSIFICATION	0.999965369371188	WITHOUT_CLASSIFICATION	3.4630628811992275E-5	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999646459825845	WITHOUT_CLASSIFICATION	3.53540174153832E-5	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999629598997613	WITHOUT_CLASSIFICATION	3.7040100238738904E-5	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999629724943038	WITHOUT_CLASSIFICATION	3.702750569621988E-5	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999636946441958	WITHOUT_CLASSIFICATION	3.630535580420181E-5	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999626898913139	WITHOUT_CLASSIFICATION	3.731010868605035E-5	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999650724500861	WITHOUT_CLASSIFICATION	3.4927549913952183E-5	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999631300580221	WITHOUT_CLASSIFICATION	3.6869941977879334E-5	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999655880502046	WITHOUT_CLASSIFICATION	3.441194979542941E-5	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999655910720894	WITHOUT_CLASSIFICATION	3.4408927910558605E-5	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999702099882677	WITHOUT_CLASSIFICATION	2.9790011732275332E-5	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999699710213575	WITHOUT_CLASSIFICATION	3.0028978642549548E-5	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999670951958209	WITHOUT_CLASSIFICATION	3.2904804179123096E-5	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999641963246806	WITHOUT_CLASSIFICATION	3.580367531935941E-5	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999641831886932	WITHOUT_CLASSIFICATION	3.5816811306739676E-5	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999650829669106	WITHOUT_CLASSIFICATION	3.49170330893999E-5	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999661897498782	WITHOUT_CLASSIFICATION	3.3810250121794685E-5	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999627489498204	WITHOUT_CLASSIFICATION	3.725105017955903E-5	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999655982437773	WITHOUT_CLASSIFICATION	3.440175622273418E-5	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999637048100751	WITHOUT_CLASSIFICATION	3.6295189924857665E-5	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999627121930607	WITHOUT_CLASSIFICATION	3.728780693931148E-5	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999627569833315	WITHOUT_CLASSIFICATION	3.724301666856434E-5	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999627487012667	WITHOUT_CLASSIFICATION	3.725129873331089E-5	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999631411596882	WITHOUT_CLASSIFICATION	3.685884031182081E-5	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999626910248633	WITHOUT_CLASSIFICATION	3.7308975136677795E-5	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999655889688427	WITHOUT_CLASSIFICATION	3.441103115725649E-5	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999663589928032	WITHOUT_CLASSIFICATION	3.364100719678711E-5	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999646918781874	WITHOUT_CLASSIFICATION	3.5308121812616656E-5	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999670077946609	WITHOUT_CLASSIFICATION	3.299220533918161E-5	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999653705955962	WITHOUT_CLASSIFICATION	3.462940440380957E-5	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999643784997124	WITHOUT_CLASSIFICATION	3.562150028759428E-5	TEST
// line 928	WITHOUT_CLASSIFICATION	0.99996422916186	WITHOUT_CLASSIFICATION	3.577083814004629E-5	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999663712084547	WITHOUT_CLASSIFICATION	3.3628791545302506E-5	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999629488596792	WITHOUT_CLASSIFICATION	3.7051140320874665E-5	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999661793384983	WITHOUT_CLASSIFICATION	3.382066150167539E-5	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999626796607318	WITHOUT_CLASSIFICATION	3.7320339268313945E-5	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999627469580069	WITHOUT_CLASSIFICATION	3.725304199320053E-5	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999626892789029	WITHOUT_CLASSIFICATION	3.7310721097143294E-5	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999626800366364	WITHOUT_CLASSIFICATION	3.731996336356829E-5	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999636897860267	WITHOUT_CLASSIFICATION	3.631021397329214E-5	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999707476796107	WITHOUT_CLASSIFICATION	2.9252320389352917E-5	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999713135082274	WITHOUT_CLASSIFICATION	2.868649177264327E-5	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999699239920411	WITHOUT_CLASSIFICATION	3.007600795892475E-5	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999702162631586	WITHOUT_CLASSIFICATION	2.978373684139222E-5	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999703151173283	WITHOUT_CLASSIFICATION	2.9684882671705552E-5	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999697364659065	WITHOUT_CLASSIFICATION	3.026353409343693E-5	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999693739515795	WITHOUT_CLASSIFICATION	3.062604842050221E-5	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999700630031677	WITHOUT_CLASSIFICATION	2.9936996832300758E-5	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999693834215482	WITHOUT_CLASSIFICATION	3.061657845170621E-5	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999693739495537	WITHOUT_CLASSIFICATION	3.0626050446281505E-5	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999705672199082	WITHOUT_CLASSIFICATION	2.943278009175238E-5	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999694192451918	WITHOUT_CLASSIFICATION	3.058075480826041E-5	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999691331507945	WITHOUT_CLASSIFICATION	3.086684920555662E-5	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999706771092987	WITHOUT_CLASSIFICATION	2.9322890701416118E-5	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999703027378766	WITHOUT_CLASSIFICATION	2.9697262123419755E-5	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999677269216076	WITHOUT_CLASSIFICATION	3.227307839232171E-5	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999703340366713	WITHOUT_CLASSIFICATION	2.9665963328551262E-5	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999699784961109	WITHOUT_CLASSIFICATION	3.0021503889002246E-5	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999682692334109	WITHOUT_CLASSIFICATION	3.17307665892016E-5	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999688030380413	WITHOUT_CLASSIFICATION	3.1196961958760265E-5	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.999968810936143	WITHOUT_CLASSIFICATION	3.118906385705392E-5	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999694220449873	WITHOUT_CLASSIFICATION	3.0577955012793946E-5	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999697479014037	WITHOUT_CLASSIFICATION	3.0252098596382595E-5	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999693784482667	WITHOUT_CLASSIFICATION	3.062155173320342E-5	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999700523314148	WITHOUT_CLASSIFICATION	2.9947668585271683E-5	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999701516628408	WITHOUT_CLASSIFICATION	2.9848337159220335E-5	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999685631505452	WITHOUT_CLASSIFICATION	3.1436849454825425E-5	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999681969494238	WITHOUT_CLASSIFICATION	3.1803050576115494E-5	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999682358841788	WITHOUT_CLASSIFICATION	3.17641158212351E-5	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999693227744577	WITHOUT_CLASSIFICATION	3.067722554227801E-5	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999689657457562	WITHOUT_CLASSIFICATION	3.1034254243799436E-5	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999683066328818	WITHOUT_CLASSIFICATION	3.169336711809578E-5	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999680090398902	WITHOUT_CLASSIFICATION	3.199096010977569E-5	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999678508419124	WITHOUT_CLASSIFICATION	3.214915808754066E-5	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999676263307496	WITHOUT_CLASSIFICATION	3.2373669250310094E-5	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999691548606678	WITHOUT_CLASSIFICATION	3.084513933212793E-5	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999684973363788	WITHOUT_CLASSIFICATION	3.1502663621277326E-5	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999676746552155	WITHOUT_CLASSIFICATION	3.232534478446842E-5	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999691513843939	WITHOUT_CLASSIFICATION	3.084861560607596E-5	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999701407918994	WITHOUT_CLASSIFICATION	2.9859208100561905E-5	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999676860251178	WITHOUT_CLASSIFICATION	3.231397488221755E-5	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999688595202807	WITHOUT_CLASSIFICATION	3.114047971933481E-5	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999680463563717	WITHOUT_CLASSIFICATION	3.195364362820776E-5	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999693680620143	WITHOUT_CLASSIFICATION	3.063193798571126E-5	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999686849436942	WITHOUT_CLASSIFICATION	3.1315056305858245E-5	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999684244112362	WITHOUT_CLASSIFICATION	3.157558876376817E-5	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999684732225226	WITHOUT_CLASSIFICATION	3.152677747744903E-5	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999681453588927	WITHOUT_CLASSIFICATION	3.185464110724605E-5	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999684811916146	WITHOUT_CLASSIFICATION	3.1518808385272674E-5	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999705303007927	WITHOUT_CLASSIFICATION	2.946969920731588E-5	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999689075018173	WITHOUT_CLASSIFICATION	3.1092498182679584E-5	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999681072412392	WITHOUT_CLASSIFICATION	3.189275876086755E-5	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.999968095531641	WITHOUT_CLASSIFICATION	3.190446835907456E-5	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999682830010814	WITHOUT_CLASSIFICATION	3.171699891846937E-5	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999680990749078	WITHOUT_CLASSIFICATION	3.190092509224124E-5	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999682774855021	WITHOUT_CLASSIFICATION	3.172251449795445E-5	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999680946011301	WITHOUT_CLASSIFICATION	3.19053988697898E-5	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999681444951553	WITHOUT_CLASSIFICATION	3.185550484485839E-5	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999691015550758	WITHOUT_CLASSIFICATION	3.0898444924142594E-5	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999675787304414	WITHOUT_CLASSIFICATION	3.242126955866429E-5	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999673473766686	WITHOUT_CLASSIFICATION	3.265262333139475E-5	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999688284237704	WITHOUT_CLASSIFICATION	3.117157622951286E-5	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999669332199119	WITHOUT_CLASSIFICATION	3.306678008802395E-5	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999684460511628	WITHOUT_CLASSIFICATION	3.155394883723838E-5	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999694475548423	WITHOUT_CLASSIFICATION	3.055244515766976E-5	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999669354748678	WITHOUT_CLASSIFICATION	3.30645251321925E-5	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999699763770956	WITHOUT_CLASSIFICATION	3.0023622904405008E-5	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.999966693171626	WITHOUT_CLASSIFICATION	3.330682837398582E-5	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999667966640784	WITHOUT_CLASSIFICATION	3.320333592147669E-5	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999691500762262	WITHOUT_CLASSIFICATION	3.084992377375245E-5	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999687805633629	WITHOUT_CLASSIFICATION	3.1219436637034804E-5	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.999967292339597	WITHOUT_CLASSIFICATION	3.270766040304202E-5	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999687960216171	WITHOUT_CLASSIFICATION	3.1203978382925606E-5	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999686116899521	WITHOUT_CLASSIFICATION	3.138831004785774E-5	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999686001738644	WITHOUT_CLASSIFICATION	3.139982613558507E-5	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999672922317416	WITHOUT_CLASSIFICATION	3.270776825839667E-5	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999689989362852	WITHOUT_CLASSIFICATION	3.100106371468151E-5	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999675204452043	WITHOUT_CLASSIFICATION	3.2479554795656205E-5	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999677293555211	WITHOUT_CLASSIFICATION	3.2270644478785634E-5	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999673418052566	WITHOUT_CLASSIFICATION	3.265819474329856E-5	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999673120408182	WITHOUT_CLASSIFICATION	3.2687959181805374E-5	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999673513037534	WITHOUT_CLASSIFICATION	3.264869624672026E-5	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.999967540704052	WITHOUT_CLASSIFICATION	3.245929594804128E-5	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999672924478165	WITHOUT_CLASSIFICATION	3.270755218357286E-5	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.999967545149438	WITHOUT_CLASSIFICATION	3.245485056208499E-5	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999672912401495	WITHOUT_CLASSIFICATION	3.270875985050466E-5	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999699253679871	WITHOUT_CLASSIFICATION	3.0074632012885698E-5	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999687224213193	WITHOUT_CLASSIFICATION	3.1277578680768044E-5	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999668739939254	WITHOUT_CLASSIFICATION	3.312600607469929E-5	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999683550361904	WITHOUT_CLASSIFICATION	3.1644963809617596E-5	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999682003451738	WITHOUT_CLASSIFICATION	3.179965482622215E-5	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999699954904592	WITHOUT_CLASSIFICATION	3.0004509540887822E-5	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999677159554418	WITHOUT_CLASSIFICATION	3.228404455824131E-5	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999675311870051	WITHOUT_CLASSIFICATION	3.246881299487786E-5	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.999968381701294	WITHOUT_CLASSIFICATION	3.16182987060574E-5	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999668737742489	WITHOUT_CLASSIFICATION	3.312622575112882E-5	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999669767011752	WITHOUT_CLASSIFICATION	3.3023298824822104E-5	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999671027689192	WITHOUT_CLASSIFICATION	3.289723108083508E-5	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999669363654229	WITHOUT_CLASSIFICATION	3.306363457715498E-5	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999677649857036	WITHOUT_CLASSIFICATION	3.2235014296298803E-5	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999685373329406	WITHOUT_CLASSIFICATION	3.1462667059465016E-5	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999666936213859	WITHOUT_CLASSIFICATION	3.330637861400303E-5	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999688308109251	WITHOUT_CLASSIFICATION	3.1169189074835594E-5	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999673953670919	WITHOUT_CLASSIFICATION	3.2604632908194544E-5	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999684320935058	WITHOUT_CLASSIFICATION	3.156790649410635E-5	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999666941879576	WITHOUT_CLASSIFICATION	3.3305812042438636E-5	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.999967591113808	WITHOUT_CLASSIFICATION	3.240888619208289E-5	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999674821964236	WITHOUT_CLASSIFICATION	3.251780357648777E-5	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999667016360602	WITHOUT_CLASSIFICATION	3.329836393977565E-5	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999680324547119	WITHOUT_CLASSIFICATION	3.196754528809596E-5	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999688355486821	WITHOUT_CLASSIFICATION	3.1164451317821645E-5	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999685356845196	WITHOUT_CLASSIFICATION	3.146431548049944E-5	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999667036647273	WITHOUT_CLASSIFICATION	3.3296335272694035E-5	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999680251433725	WITHOUT_CLASSIFICATION	3.1974856627523374E-5	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999684303500933	WITHOUT_CLASSIFICATION	3.156964990666109E-5	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999669238462768	WITHOUT_CLASSIFICATION	3.30761537231729E-5	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999666927188913	WITHOUT_CLASSIFICATION	3.3307281108717174E-5	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999682129750899	WITHOUT_CLASSIFICATION	3.1787024910155826E-5	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.999968543625041	WITHOUT_CLASSIFICATION	3.145637495909564E-5	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999699874081641	WITHOUT_CLASSIFICATION	3.001259183594536E-5	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999682165571074	WITHOUT_CLASSIFICATION	3.178344289255245E-5	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999680333214873	WITHOUT_CLASSIFICATION	3.196667851268989E-5	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999673026008108	WITHOUT_CLASSIFICATION	3.2697399189185324E-5	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999673483803133	WITHOUT_CLASSIFICATION	3.265161968660929E-5	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999669331079756	WITHOUT_CLASSIFICATION	3.306689202441422E-5	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999674893937267	WITHOUT_CLASSIFICATION	3.251060627324874E-5	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999667521414499	WITHOUT_CLASSIFICATION	3.324785855009747E-5	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999692472398529	WITHOUT_CLASSIFICATION	3.0752760147082133E-5	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999675546340997	WITHOUT_CLASSIFICATION	3.2445365900287064E-5	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999668043518627	WITHOUT_CLASSIFICATION	3.319564813728492E-5	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999699749041712	WITHOUT_CLASSIFICATION	3.002509582878161E-5	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999682079784593	WITHOUT_CLASSIFICATION	3.179202154073345E-5	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.999966691792979	WITHOUT_CLASSIFICATION	3.3308207020892494E-5	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999682084258688	WITHOUT_CLASSIFICATION	3.1791574131252E-5	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999680654202736	WITHOUT_CLASSIFICATION	3.1934579726439776E-5	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999677278004809	WITHOUT_CLASSIFICATION	3.227219951902946E-5	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999673921850659	WITHOUT_CLASSIFICATION	3.2607814934018096E-5	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999669436194887	WITHOUT_CLASSIFICATION	3.3056380511276625E-5	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999667550241244	WITHOUT_CLASSIFICATION	3.324497587572642E-5	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999667957284837	WITHOUT_CLASSIFICATION	3.320427151631004E-5	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999674895107156	WITHOUT_CLASSIFICATION	3.251048928446739E-5	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999667006655911	WITHOUT_CLASSIFICATION	3.3299334408834046E-5	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999667037770968	WITHOUT_CLASSIFICATION	3.329622290313454E-5	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.999968262443389	WITHOUT_CLASSIFICATION	3.173755661089616E-5	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.999966749055196	WITHOUT_CLASSIFICATION	3.325094480400047E-5	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999667445420015	WITHOUT_CLASSIFICATION	3.325545799843969E-5	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999674803941011	WITHOUT_CLASSIFICATION	3.251960589889453E-5	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999666913277756	WITHOUT_CLASSIFICATION	3.330867222440118E-5	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999697430750674	WITHOUT_CLASSIFICATION	3.0256924932599244E-5	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999693460959139	WITHOUT_CLASSIFICATION	3.0653904086089026E-5	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999685625839888	WITHOUT_CLASSIFICATION	3.1437416011286384E-5	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999685455853543	WITHOUT_CLASSIFICATION	3.1454414645729435E-5	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999666978741062	WITHOUT_CLASSIFICATION	3.330212589374546E-5	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999680297167058	WITHOUT_CLASSIFICATION	3.197028329416821E-5	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999680258082511	WITHOUT_CLASSIFICATION	3.1974191748919066E-5	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999680697769058	WITHOUT_CLASSIFICATION	3.1930223094198315E-5	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999669370182268	WITHOUT_CLASSIFICATION	3.306298177316588E-5	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999403944033539	WITHOUT_CLASSIFICATION	5.9605596645960403E-5	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999403867212981	WITHOUT_CLASSIFICATION	5.961327870188682E-5	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9998849569062183	WITHOUT_CLASSIFICATION	1.150430937817045E-4	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999722570520938	WITHOUT_CLASSIFICATION	2.774294790614385E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999454156744386	WITHOUT_CLASSIFICATION	5.458432556151792E-5	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998389936988085	WITHOUT_CLASSIFICATION	1.6100630119152072E-4	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999558345919277	WITHOUT_CLASSIFICATION	4.416540807219366E-5	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999553598694485	WITHOUT_CLASSIFICATION	4.464013055150065E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999671421960458	WITHOUT_CLASSIFICATION	3.285780395420693E-5	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999667557736521	WITHOUT_CLASSIFICATION	3.324422634788962E-5	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999682620198551	WITHOUT_CLASSIFICATION	3.173798014495065E-5	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999666971257379	WITHOUT_CLASSIFICATION	3.330287426208199E-5	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.999966708099552	WITHOUT_CLASSIFICATION	3.329190044795944E-5	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.999966743305306	WITHOUT_CLASSIFICATION	3.325669469400536E-5	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999699749211797	WITHOUT_CLASSIFICATION	3.0025078820247043E-5	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999685357044246	WITHOUT_CLASSIFICATION	3.146429557548131E-5	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999682073306964	WITHOUT_CLASSIFICATION	3.1792669303651045E-5	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.999966743752187	WITHOUT_CLASSIFICATION	3.325624781296348E-5	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999673404581424	WITHOUT_CLASSIFICATION	3.265954185749924E-5	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.999967391527153	WITHOUT_CLASSIFICATION	3.260847284705494E-5	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999684370081326	WITHOUT_CLASSIFICATION	3.156299186740412E-5	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999669910625386	WITHOUT_CLASSIFICATION	3.300893746135281E-5	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999692873151652	WITHOUT_CLASSIFICATION	3.0712684834773654E-5	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999675969150517	WITHOUT_CLASSIFICATION	3.2403084948360434E-5	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.999966811284671	WITHOUT_CLASSIFICATION	3.3188715329031755E-5	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999682570406023	WITHOUT_CLASSIFICATION	3.1742959397702743E-5	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999682615933626	WITHOUT_CLASSIFICATION	3.173840663732256E-5	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999666915676891	WITHOUT_CLASSIFICATION	3.330843231091782E-5	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999689062800109	WITHOUT_CLASSIFICATION	3.109371998909812E-5	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999677182744643	WITHOUT_CLASSIFICATION	3.2281725535731786E-5	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999714282869622	WITHOUT_CLASSIFICATION	2.8571713037788435E-5	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.999992834439467	WITHOUT_CLASSIFICATION	7.1655605330227694E-6	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.999992823488587	WITHOUT_CLASSIFICATION	7.176511412903917E-6	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999969066649939	WITHOUT_CLASSIFICATION	3.0933350061395307E-6	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999694361313657	WITHOUT_CLASSIFICATION	3.0563868634343137E-5	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999983494355998	WITHOUT_CLASSIFICATION	1.6505644002077596E-6	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999844378616212	WITHOUT_CLASSIFICATION	1.556213837883543E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999967895532432	WITHOUT_CLASSIFICATION	3.2104467569084335E-6	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999903109871962	WITHOUT_CLASSIFICATION	9.689012803941885E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999983067167014	WITHOUT_CLASSIFICATION	1.6932832985397837E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999983067167014	WITHOUT_CLASSIFICATION	1.6932832985397837E-6	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999950770085847	WITHOUT_CLASSIFICATION	4.922991415281111E-6	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9998716704460215	WITHOUT_CLASSIFICATION	1.2832955397856349E-4	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999968561436995	WITHOUT_CLASSIFICATION	3.1438563004182784E-6	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999680192771578	WITHOUT_CLASSIFICATION	3.198072284209347E-5	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999998768421743	WITHOUT_CLASSIFICATION	1.2315782563853912E-7	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999986538434894	WITHOUT_CLASSIFICATION	1.3461565105642342E-6	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999999399013988	WITHOUT_CLASSIFICATION	6.009860122738189E-8	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999972063763094	WITHOUT_CLASSIFICATION	2.7936236906462637E-6	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999963845479426	WITHOUT_CLASSIFICATION	3.6154520573345585E-6	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999984858898339	WITHOUT_CLASSIFICATION	1.5141101661479517E-6	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999996842194147	WITHOUT_CLASSIFICATION	3.157805853185611E-7	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999997665209454	WITHOUT_CLASSIFICATION	2.3347905478180824E-7	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999987937127078	WITHOUT_CLASSIFICATION	1.206287292164802E-6	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.999999786802409	WITHOUT_CLASSIFICATION	2.131975909643393E-7	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999939454081935	WITHOUT_CLASSIFICATION	6.054591806481174E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999939454081935	WITHOUT_CLASSIFICATION	6.054591806481174E-6	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999984510845226	WITHOUT_CLASSIFICATION	1.5489154774074362E-6	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999983316316469	WITHOUT_CLASSIFICATION	1.668368353150922E-6	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999798719796795	WITHOUT_CLASSIFICATION	2.012802032044327E-5	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999953325103745	WITHOUT_CLASSIFICATION	4.667489625435646E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999978239765649	WITHOUT_CLASSIFICATION	2.1760234350559596E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999977642338852	WITHOUT_CLASSIFICATION	2.2357661148204894E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999945744846009	WITHOUT_CLASSIFICATION	5.425515398999888E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999977642338852	WITHOUT_CLASSIFICATION	2.2357661148204894E-6	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999998212581891	WITHOUT_CLASSIFICATION	1.7874181102064143E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999982640260209	WITHOUT_CLASSIFICATION	1.7359739791330637E-6	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999986398963674	WITHOUT_CLASSIFICATION	1.3601036326648977E-6	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999991360521828	WITHOUT_CLASSIFICATION	8.639478171690145E-7	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999892597441838	WITHOUT_CLASSIFICATION	1.0740255816162772E-5	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999849395488404	WITHOUT_CLASSIFICATION	1.5060451159683348E-5	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999995144474825	WITHOUT_CLASSIFICATION	4.85552517550168E-7	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999977629701572	WITHOUT_CLASSIFICATION	2.237029842842002E-6	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999978906224403	WITHOUT_CLASSIFICATION	2.109377559772696E-6	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999999310427627	WITHOUT_CLASSIFICATION	6.895723723630745E-8	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999999627292785	WITHOUT_CLASSIFICATION	3.7270721588909825E-8	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9998829303557196	WITHOUT_CLASSIFICATION	1.1706964428040928E-4	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.999897642398034	WITHOUT_CLASSIFICATION	1.0235760196600627E-4	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999968856370791	WITHOUT_CLASSIFICATION	3.1143629208901325E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999904902869089	WITHOUT_CLASSIFICATION	9.509713091117477E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999904902869089	WITHOUT_CLASSIFICATION	9.509713091117477E-6	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999993713695968	WITHOUT_CLASSIFICATION	6.286304031189586E-7	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999984939187944	WITHOUT_CLASSIFICATION	1.5060812056387894E-6	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999960349187417	WITHOUT_CLASSIFICATION	3.965081258311688E-6	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999999082306009	WITHOUT_CLASSIFICATION	9.176939905247741E-8	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999969077905007	WITHOUT_CLASSIFICATION	3.092209499261938E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999977642338852	WITHOUT_CLASSIFICATION	2.2357661148204894E-6	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999993947807332	WITHOUT_CLASSIFICATION	6.052192668657358E-7	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999997931715912	WITHOUT_CLASSIFICATION	2.068284087152231E-7	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.999997926702207	WITHOUT_CLASSIFICATION	2.0732977929889213E-6	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999993794179202	WITHOUT_CLASSIFICATION	6.205820798657604E-7	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999997485769018	WITHOUT_CLASSIFICATION	2.5142309829151494E-7	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999996404537411	WITHOUT_CLASSIFICATION	3.595462587824975E-7	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.999999168204626	WITHOUT_CLASSIFICATION	8.3179537408369E-7	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999990401414038	WITHOUT_CLASSIFICATION	9.598585962257174E-7	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.999999965053913	WITHOUT_CLASSIFICATION	3.4946087014629005E-8	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999988881555313	WITHOUT_CLASSIFICATION	1.111844468661016E-6	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999963645706629	WITHOUT_CLASSIFICATION	3.6354293372566484E-6	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999966596186488	WITHOUT_CLASSIFICATION	3.3403813511512615E-6	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999979237733948	WITHOUT_CLASSIFICATION	2.0762266052877748E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999865311092451	WITHOUT_CLASSIFICATION	1.3468890754940979E-5	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999988135266902	WITHOUT_CLASSIFICATION	1.1864733098670314E-6	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999569720827259	WITHOUT_CLASSIFICATION	4.302791727399998E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.999995888073703	WITHOUT_CLASSIFICATION	4.1119262969970815E-6	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999938218641272	WITHOUT_CLASSIFICATION	6.1781358728594995E-6	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999868723629188	WITHOUT_CLASSIFICATION	1.312763708111047E-5	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999589709756047	WITHOUT_CLASSIFICATION	4.102902439524265E-5	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999950490106118	WITHOUT_CLASSIFICATION	4.95098938822812E-6	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999931693132214	WITHOUT_CLASSIFICATION	6.830686778643979E-6	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999996509479036	WITHOUT_CLASSIFICATION	3.490520964525069E-7	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999976078587195	WITHOUT_CLASSIFICATION	2.3921412804919057E-6	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999955364479899	WITHOUT_CLASSIFICATION	4.4635520101728465E-6	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999934952554966	WITHOUT_CLASSIFICATION	6.504744503362794E-6	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999987634551892	WITHOUT_CLASSIFICATION	1.2365448107324131E-6	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999972095893123	WITHOUT_CLASSIFICATION	2.790410687769752E-6	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999973134072386	WITHOUT_CLASSIFICATION	2.6865927614242336E-6	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.999995931860102	WITHOUT_CLASSIFICATION	4.0681398980431705E-6	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999879784120091	WITHOUT_CLASSIFICATION	1.2021587990858025E-5	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999884984801239	WITHOUT_CLASSIFICATION	1.1501519876022784E-5	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999986722824553	WITHOUT_CLASSIFICATION	1.3277175447353802E-6	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999994314538871	WITHOUT_CLASSIFICATION	5.685461129727428E-7	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.999999592475358	WITHOUT_CLASSIFICATION	4.0752464198915453E-7	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999985347136541	WITHOUT_CLASSIFICATION	1.4652863459477738E-6	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999941633989277	WITHOUT_CLASSIFICATION	5.8366010723094E-6	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999946121727216	WITHOUT_CLASSIFICATION	5.387827278460946E-6	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999922277768559	WITHOUT_CLASSIFICATION	7.772223144071456E-6	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999992752575602	WITHOUT_CLASSIFICATION	7.247424398569139E-7	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999553598694485	WITHOUT_CLASSIFICATION	4.464013055150065E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999998702421338	WITHOUT_CLASSIFICATION	1.297578662856632E-7	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999916219840497	WITHOUT_CLASSIFICATION	8.378015950365372E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999991337354078	WITHOUT_CLASSIFICATION	8.662645921614934E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999972240269607	WITHOUT_CLASSIFICATION	2.7759730394288226E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999982640260209	WITHOUT_CLASSIFICATION	1.7359739791330637E-6	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999998143156636	WITHOUT_CLASSIFICATION	1.8568433624111374E-7	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999998620801234	WITHOUT_CLASSIFICATION	1.3791987659822134E-7	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999998943266976	WITHOUT_CLASSIFICATION	1.0567330246351905E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999761195299	WITHOUT_CLASSIFICATION	2.388047010063379E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999761195299	WITHOUT_CLASSIFICATION	2.388047010063379E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999992638601902	WITHOUT_CLASSIFICATION	7.361398098149402E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999992638601902	WITHOUT_CLASSIFICATION	7.361398098149402E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999992638601902	WITHOUT_CLASSIFICATION	7.361398098149402E-7	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999940239548811	WITHOUT_CLASSIFICATION	5.976045118963122E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999940239548811	WITHOUT_CLASSIFICATION	5.976045118963122E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999873625650463	WITHOUT_CLASSIFICATION	1.2637434953654897E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999873625650463	WITHOUT_CLASSIFICATION	1.2637434953654897E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999946769731535	WITHOUT_CLASSIFICATION	5.323026846581546E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999813447975808	WITHOUT_CLASSIFICATION	1.865520241915966E-5	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.999947471694149	WITHOUT_CLASSIFICATION	5.2528305850993555E-5	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.999947471694149	WITHOUT_CLASSIFICATION	5.2528305850993555E-5	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999993178213396	WITHOUT_CLASSIFICATION	6.821786604001225E-7	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999966482151368	WITHOUT_CLASSIFICATION	3.3517848632316378E-6	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999838179703062	WITHOUT_CLASSIFICATION	1.6182029693742174E-5	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999980116801969	WITHOUT_CLASSIFICATION	1.9883198031963194E-6	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999992110309863	WITHOUT_CLASSIFICATION	7.889690136159983E-7	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.999999545277934	WITHOUT_CLASSIFICATION	4.5472206609827865E-7	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999924212729955	WITHOUT_CLASSIFICATION	7.578727004596482E-6	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999958574757535	WITHOUT_CLASSIFICATION	4.142524246576962E-6	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999824338276943	WITHOUT_CLASSIFICATION	1.7566172305711946E-5	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999914226006731	WITHOUT_CLASSIFICATION	8.577399326934175E-6	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999996046955538	WITHOUT_CLASSIFICATION	3.953044461660596E-7	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999947009835237	WITHOUT_CLASSIFICATION	5.29901647635573E-6	TEST
// throw	WITHOUT_CLASSIFICATION	0.9998927362310991	WITHOUT_CLASSIFICATION	1.072637689008931E-4	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999906229349904	WITHOUT_CLASSIFICATION	9.377065009585519E-6	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999975253272735	WITHOUT_CLASSIFICATION	2.4746727264849198E-6	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.99994401191283	WITHOUT_CLASSIFICATION	5.5988087170046965E-5	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999977840172996	WITHOUT_CLASSIFICATION	2.2159827004133165E-6	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999925553934429	WITHOUT_CLASSIFICATION	7.444606557178086E-6	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999906867244148	WITHOUT_CLASSIFICATION	9.313275585210641E-6	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999742642780332	WITHOUT_CLASSIFICATION	2.5735721966927685E-5	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999991869565905	WITHOUT_CLASSIFICATION	8.130434095495799E-7	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999989135672096	WITHOUT_CLASSIFICATION	1.08643279044265E-6	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999873252715937	WITHOUT_CLASSIFICATION	1.267472840630762E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999996143147657	WITHOUT_CLASSIFICATION	3.856852343230712E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999993667668187	WITHOUT_CLASSIFICATION	6.332331813165242E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999989531803068	WITHOUT_CLASSIFICATION	1.0468196930803125E-6	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999994504960042	WITHOUT_CLASSIFICATION	5.495039957011064E-7	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999995326895139	WITHOUT_CLASSIFICATION	4.673104861016362E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999996421175898	WITHOUT_CLASSIFICATION	3.5788241012897245E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999994124145781	WITHOUT_CLASSIFICATION	5.875854219439457E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999990286421692	WITHOUT_CLASSIFICATION	9.713578308034625E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999719589529	WITHOUT_CLASSIFICATION	2.8041047105928015E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995396110328	WITHOUT_CLASSIFICATION	4.603889671145385E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993681870402	WITHOUT_CLASSIFICATION	6.318129598085097E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995396110328	WITHOUT_CLASSIFICATION	4.603889671145385E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995396110328	WITHOUT_CLASSIFICATION	4.603889671145385E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995396110328	WITHOUT_CLASSIFICATION	4.603889671145385E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995396110328	WITHOUT_CLASSIFICATION	4.603889671145385E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995396110328	WITHOUT_CLASSIFICATION	4.603889671145385E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995396110328	WITHOUT_CLASSIFICATION	4.603889671145385E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993681870402	WITHOUT_CLASSIFICATION	6.318129598085097E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993681870402	WITHOUT_CLASSIFICATION	6.318129598085097E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993681870402	WITHOUT_CLASSIFICATION	6.318129598085097E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993681870402	WITHOUT_CLASSIFICATION	6.318129598085097E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993681870402	WITHOUT_CLASSIFICATION	6.318129598085097E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993681870402	WITHOUT_CLASSIFICATION	6.318129598085097E-7	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999997605078333	WITHOUT_CLASSIFICATION	2.394921667280384E-7	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999964677583084	WITHOUT_CLASSIFICATION	3.5322416916925523E-6	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999929535581221	WITHOUT_CLASSIFICATION	7.046441877874798E-6	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999998746791454	WITHOUT_CLASSIFICATION	1.2532085459924856E-6	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999980039913254	WITHOUT_CLASSIFICATION	1.9960086745233054E-6	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999984815882688	WITHOUT_CLASSIFICATION	1.5184117311785124E-6	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999835600917751	WITHOUT_CLASSIFICATION	1.6439908224864673E-5	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999993875459688	WITHOUT_CLASSIFICATION	6.124540311704602E-7	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999994068486219	WITHOUT_CLASSIFICATION	5.931513780947136E-7	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999714594786299	WITHOUT_CLASSIFICATION	2.85405213701408E-5	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999912318661601	WITHOUT_CLASSIFICATION	8.768133839914235E-6	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999979134683241	WITHOUT_CLASSIFICATION	2.086531675897243E-6	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999465957864094	WITHOUT_CLASSIFICATION	5.3404213590681504E-5	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999998843109915	WITHOUT_CLASSIFICATION	1.1568900857874925E-7	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999989413248902	WITHOUT_CLASSIFICATION	1.0586751097942979E-6	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999994588571319	WITHOUT_CLASSIFICATION	5.411428680268839E-7	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.99999874074898	WITHOUT_CLASSIFICATION	1.2592510200683926E-6	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999894601429468	WITHOUT_CLASSIFICATION	1.0539857053260293E-5	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999989458399786	WITHOUT_CLASSIFICATION	1.0541600213552356E-6	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999996270784316	WITHOUT_CLASSIFICATION	3.729215684869426E-7	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999970119887089	WITHOUT_CLASSIFICATION	2.988011291050441E-6	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999957629149312	WITHOUT_CLASSIFICATION	4.237085068751908E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999945744846009	WITHOUT_CLASSIFICATION	5.425515398999888E-6	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999999246083129	WITHOUT_CLASSIFICATION	7.539168713823847E-8	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999995490142484	WITHOUT_CLASSIFICATION	4.509857515481829E-7	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999519827373	WITHOUT_CLASSIFICATION	4.8017262692384904E-8	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999200500883	WITHOUT_CLASSIFICATION	7.994991164061376E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999934447211029	WITHOUT_CLASSIFICATION	6.555278897221228E-6	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999798541891333	WITHOUT_CLASSIFICATION	2.0145810866806596E-5	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999992642020585	WITHOUT_CLASSIFICATION	7.357979414381066E-7	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999946454723021	WITHOUT_CLASSIFICATION	5.3545276979502E-6	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999959874955183	WITHOUT_CLASSIFICATION	4.012504481634047E-6	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999990502034979	WITHOUT_CLASSIFICATION	9.497965020636787E-7	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999967445332002	WITHOUT_CLASSIFICATION	3.2554667998043518E-6	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999952177989215	WITHOUT_CLASSIFICATION	4.782201078393787E-6	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999935489925751	WITHOUT_CLASSIFICATION	6.4510074248352935E-6	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999995945384388	WITHOUT_CLASSIFICATION	4.054615611909416E-7	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999985946141878	WITHOUT_CLASSIFICATION	1.4053858121744303E-6	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999996225393752	WITHOUT_CLASSIFICATION	3.774606247010009E-7	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999995495946498	WITHOUT_CLASSIFICATION	4.5040535021220784E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999953672889328	WITHOUT_CLASSIFICATION	4.632711067308235E-6	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999938943969101	WITHOUT_CLASSIFICATION	6.105603089959573E-6	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999991317302795	WITHOUT_CLASSIFICATION	8.682697204453201E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999999129625329	WITHOUT_CLASSIFICATION	8.703746709437632E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999999129625329	WITHOUT_CLASSIFICATION	8.703746709437632E-7	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999925743533283	WITHOUT_CLASSIFICATION	7.425646671724945E-6	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999925743533283	WITHOUT_CLASSIFICATION	7.425646671724945E-6	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999987897525313	WITHOUT_CLASSIFICATION	1.2102474686175214E-6	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999987897525313	WITHOUT_CLASSIFICATION	1.2102474686175214E-6	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999240502706	WITHOUT_CLASSIFICATION	7.594972933059574E-8	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999982544711608	WITHOUT_CLASSIFICATION	1.7455288392064249E-6	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999948084380728	WITHOUT_CLASSIFICATION	5.191561927307068E-6	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999997809894103	WITHOUT_CLASSIFICATION	2.1901058977919934E-7	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999985012405775	WITHOUT_CLASSIFICATION	1.498759422397568E-6	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999994802777707	WITHOUT_CLASSIFICATION	5.197222292684003E-7	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999956973462202	WITHOUT_CLASSIFICATION	4.302653779802597E-6	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999498476457	WITHOUT_CLASSIFICATION	5.0152354171388863E-8	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999900063456003	WITHOUT_CLASSIFICATION	9.993654399609712E-6	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999996563861899	WITHOUT_CLASSIFICATION	3.436138100436471E-7	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999999598662671	WITHOUT_CLASSIFICATION	4.013373292488319E-8	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999982400596152	WITHOUT_CLASSIFICATION	1.7599403846844749E-6	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999996201183841	WITHOUT_CLASSIFICATION	3.7988161600912167E-7	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999997150210678	WITHOUT_CLASSIFICATION	2.849789322492702E-7	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999929547963213	WITHOUT_CLASSIFICATION	7.045203678638808E-6	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999693375777671	WITHOUT_CLASSIFICATION	3.066242223303731E-5	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999635683859	WITHOUT_CLASSIFICATION	3.643161407715564E-8	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999987954652888	WITHOUT_CLASSIFICATION	1.2045347112136254E-6	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999974798719163	WITHOUT_CLASSIFICATION	2.5201280835327174E-6	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999340394011687	WITHOUT_CLASSIFICATION	6.596059883139574E-5	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999570103767926	WITHOUT_CLASSIFICATION	4.2989623207443894E-5	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999894620264441	WITHOUT_CLASSIFICATION	1.0537973556004877E-5	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999809278395443	WITHOUT_CLASSIFICATION	1.9072160455735734E-5	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999987484099156	WITHOUT_CLASSIFICATION	1.251590084354924E-6	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999955580384958	WITHOUT_CLASSIFICATION	4.441961504189619E-6	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999996620257958	WITHOUT_CLASSIFICATION	3.3797420411547955E-7	TEST
// sic	WITHOUT_CLASSIFICATION	0.999919428895108	WITHOUT_CLASSIFICATION	8.057110489195384E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999985340250498	WITHOUT_CLASSIFICATION	1.4659749501644356E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999985340250498	WITHOUT_CLASSIFICATION	1.4659749501644356E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999985340250498	WITHOUT_CLASSIFICATION	1.4659749501644356E-6	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999993481211095	WITHOUT_CLASSIFICATION	6.51878890495351E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999993481211095	WITHOUT_CLASSIFICATION	6.51878890495351E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999865311092451	WITHOUT_CLASSIFICATION	1.3468890754940979E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999865311092451	WITHOUT_CLASSIFICATION	1.3468890754940979E-5	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999978793813643	WITHOUT_CLASSIFICATION	2.1206186357158754E-6	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999314590254099	WITHOUT_CLASSIFICATION	6.854097459011857E-5	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999965016082895	WITHOUT_CLASSIFICATION	3.4983917105223187E-6	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.999994356222438	WITHOUT_CLASSIFICATION	5.643777561917049E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999985340250498	WITHOUT_CLASSIFICATION	1.4659749501644356E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999985340250498	WITHOUT_CLASSIFICATION	1.4659749501644356E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999985340250498	WITHOUT_CLASSIFICATION	1.4659749501644356E-6	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999993481211095	WITHOUT_CLASSIFICATION	6.51878890495351E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999993481211095	WITHOUT_CLASSIFICATION	6.51878890495351E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999993481211095	WITHOUT_CLASSIFICATION	6.51878890495351E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999865311092451	WITHOUT_CLASSIFICATION	1.3468890754940979E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999865311092451	WITHOUT_CLASSIFICATION	1.3468890754940979E-5	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999993794156662	WITHOUT_CLASSIFICATION	6.205843337636965E-7	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999996422814367	WITHOUT_CLASSIFICATION	3.5771856331147215E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999735876105	WITHOUT_CLASSIFICATION	2.6412389454980452E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999735876105	WITHOUT_CLASSIFICATION	2.6412389454980452E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999735876105	WITHOUT_CLASSIFICATION	2.6412389454980452E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999735876105	WITHOUT_CLASSIFICATION	2.6412389454980452E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999735876105	WITHOUT_CLASSIFICATION	2.6412389454980452E-8	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999901293536771	WITHOUT_CLASSIFICATION	9.870646322799614E-6	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999883535302788	WITHOUT_CLASSIFICATION	1.1646469721196455E-5	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.999985374446925	WITHOUT_CLASSIFICATION	1.462555307500475E-5	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999966480289756	WITHOUT_CLASSIFICATION	3.3519710244326735E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999920464848664	WITHOUT_CLASSIFICATION	7.953515133560283E-6	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999992490696387	WITHOUT_CLASSIFICATION	7.509303613919675E-7	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999810257265596	WITHOUT_CLASSIFICATION	1.8974273440466323E-5	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999975682095082	WITHOUT_CLASSIFICATION	2.4317904917740247E-6	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.999994064263557	WITHOUT_CLASSIFICATION	5.935736442982416E-6	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999933028225171	WITHOUT_CLASSIFICATION	6.697177482964924E-6	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999929911392271	WITHOUT_CLASSIFICATION	7.00886077282053E-6	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999741634874043	WITHOUT_CLASSIFICATION	2.58365125957826E-5	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999954382467575	WITHOUT_CLASSIFICATION	4.561753242440772E-6	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999986171359774	WITHOUT_CLASSIFICATION	1.3828640225668944E-6	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999987885149189	WITHOUT_CLASSIFICATION	1.2114850811266968E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9991501057360784	WITHOUT_CLASSIFICATION	8.498942639216271E-4	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9991501057360784	WITHOUT_CLASSIFICATION	8.498942639216271E-4	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9991501057360784	WITHOUT_CLASSIFICATION	8.498942639216271E-4	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999998294591645	WITHOUT_CLASSIFICATION	1.7054083546084786E-7	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999998294538209	WITHOUT_CLASSIFICATION	1.7054617911837832E-7	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999790716226452	WITHOUT_CLASSIFICATION	2.092837735480105E-5	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999997161171567	WITHOUT_CLASSIFICATION	2.83882843391593E-7	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999982863054245	WITHOUT_CLASSIFICATION	1.713694575505047E-6	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999975095222169	WITHOUT_CLASSIFICATION	2.490477783185122E-6	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999964524250111	WITHOUT_CLASSIFICATION	3.5475749889533716E-6	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999976076889893	WITHOUT_CLASSIFICATION	2.392311010765684E-6	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999977024110508	WITHOUT_CLASSIFICATION	2.297588949123025E-6	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999978185736996	WITHOUT_CLASSIFICATION	2.181426300414167E-6	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999969538701534	WITHOUT_CLASSIFICATION	3.0461298465815648E-6	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999981488199872	WITHOUT_CLASSIFICATION	1.8511800128914919E-6	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999968855325367	WITHOUT_CLASSIFICATION	3.1144674632820707E-6	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999928961546566	WITHOUT_CLASSIFICATION	7.1038453433346385E-6	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.999993473619782	WITHOUT_CLASSIFICATION	6.526380218004551E-6	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.999990945967957	WITHOUT_CLASSIFICATION	9.054032043014289E-6	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999889282778451	WITHOUT_CLASSIFICATION	1.1071722154866908E-5	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999914034561526	WITHOUT_CLASSIFICATION	8.596543847534832E-6	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999878473262755	WITHOUT_CLASSIFICATION	1.2152673724535982E-5	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999923479467935	WITHOUT_CLASSIFICATION	7.652053206522923E-6	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999968492092934	WITHOUT_CLASSIFICATION	3.1507907065573413E-6	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999972114443613	WITHOUT_CLASSIFICATION	2.788555638764458E-6	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999975901730219	WITHOUT_CLASSIFICATION	2.4098269780189697E-6	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999944374369475	WITHOUT_CLASSIFICATION	5.562563052495501E-6	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999806195021131	WITHOUT_CLASSIFICATION	1.9380497886900078E-5	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999783685297687	WITHOUT_CLASSIFICATION	2.1631470231236057E-5	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999835677666632	WITHOUT_CLASSIFICATION	1.6432233336822772E-5	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999787904731521	WITHOUT_CLASSIFICATION	2.1209526848008477E-5	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999186220692978	WITHOUT_CLASSIFICATION	8.137793070215051E-5	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9991195439109498	WITHOUT_CLASSIFICATION	8.804560890501816E-4	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9990676053240749	WITHOUT_CLASSIFICATION	9.323946759250708E-4	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9990322323939785	WITHOUT_CLASSIFICATION	9.677676060213749E-4	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9990046968636112	WITHOUT_CLASSIFICATION	9.953031363888094E-4	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9989960079521066	WITHOUT_CLASSIFICATION	0.0010039920478933182	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9989962387673053	WITHOUT_CLASSIFICATION	0.001003761232694688	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.998999055511952	WITHOUT_CLASSIFICATION	0.0010009444880479793	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.999998343690914	WITHOUT_CLASSIFICATION	1.6563090859921817E-6	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.999998490848176	WITHOUT_CLASSIFICATION	1.509151824027788E-6	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999995175772829	WITHOUT_CLASSIFICATION	4.824227170837482E-7	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999980157246132	WITHOUT_CLASSIFICATION	1.9842753868784787E-6	TEST
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999996555092837	WITHOUT_CLASSIFICATION	3.444907163194564E-7	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999999132635073	WITHOUT_CLASSIFICATION	8.673649262026813E-8	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999990618283549	WITHOUT_CLASSIFICATION	9.381716450303288E-7	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999950757130288	WITHOUT_CLASSIFICATION	4.924286971180036E-6	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999190636203648	WITHOUT_CLASSIFICATION	8.093637963518285E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999925749055995	WITHOUT_CLASSIFICATION	7.4250944005083725E-6	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999685112418955	WITHOUT_CLASSIFICATION	3.1488758104485215E-5	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999685112418955	WITHOUT_CLASSIFICATION	3.1488758104485215E-5	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.999987210755407	WITHOUT_CLASSIFICATION	1.2789244593110128E-5	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999990138185411	WITHOUT_CLASSIFICATION	9.861814589196318E-7	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999878228269025	WITHOUT_CLASSIFICATION	1.2177173097472019E-5	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999432248965151	WITHOUT_CLASSIFICATION	5.67751034848513E-5	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.999996836562499	WITHOUT_CLASSIFICATION	3.1634375008691068E-6	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999985956267218	WITHOUT_CLASSIFICATION	1.4043732782318345E-6	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.99999629682623	WITHOUT_CLASSIFICATION	3.7031737700295834E-6	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.999999064222867	WITHOUT_CLASSIFICATION	9.357771330912797E-7	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999923118538526	WITHOUT_CLASSIFICATION	7.688146147452852E-6	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999978949366366	WITHOUT_CLASSIFICATION	2.1050633633833076E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999967917899498	WITHOUT_CLASSIFICATION	3.2082100502391173E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999967917899498	WITHOUT_CLASSIFICATION	3.2082100502391173E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999967917899498	WITHOUT_CLASSIFICATION	3.2082100502391173E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999967917899498	WITHOUT_CLASSIFICATION	3.2082100502391173E-6	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999270141162524	WITHOUT_CLASSIFICATION	7.298588374756372E-5	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999546041058177	WITHOUT_CLASSIFICATION	4.539589418228195E-5	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999787301707677	WITHOUT_CLASSIFICATION	2.126982923235586E-5	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999786962587872	WITHOUT_CLASSIFICATION	2.130374121282891E-5	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999984274609994	WITHOUT_CLASSIFICATION	1.5725390005855056E-6	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999992266498884	WITHOUT_CLASSIFICATION	7.733501117108504E-7	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999959871879104	WITHOUT_CLASSIFICATION	4.012812089576693E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999998458323294	WITHOUT_CLASSIFICATION	1.5416767059940993E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999998458323294	WITHOUT_CLASSIFICATION	1.5416767059940993E-6	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999998913494618	WITHOUT_CLASSIFICATION	1.086505381922239E-7	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999924149427658	WITHOUT_CLASSIFICATION	7.585057234296646E-6	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999998277408947	WITHOUT_CLASSIFICATION	1.722591053859349E-7	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999998243565149	WITHOUT_CLASSIFICATION	1.756434850350236E-7	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999998243565149	WITHOUT_CLASSIFICATION	1.756434850350236E-7	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999998240165121	WITHOUT_CLASSIFICATION	1.7598348790807879E-7	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999912314299776	WITHOUT_CLASSIFICATION	8.768570022448547E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999912314299776	WITHOUT_CLASSIFICATION	8.768570022448547E-6	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999987022609921	WITHOUT_CLASSIFICATION	1.2977390078363042E-6	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999997919533095	WITHOUT_CLASSIFICATION	2.0804669052369048E-7	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999997797864353	WITHOUT_CLASSIFICATION	2.2021356473343773E-7	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.999999844955415	WITHOUT_CLASSIFICATION	1.5504458492944462E-7	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999993282994482	WITHOUT_CLASSIFICATION	6.717005517650086E-7	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999163339305	WITHOUT_CLASSIFICATION	8.366606952328278E-8	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999996116391656	WITHOUT_CLASSIFICATION	3.883608342691375E-7	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9998556886284798	WITHOUT_CLASSIFICATION	1.4431137152010068E-4	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999977237325629	WITHOUT_CLASSIFICATION	2.2762674371151E-6	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999962323329333	WITHOUT_CLASSIFICATION	3.767667066623142E-6	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999926822680436	WITHOUT_CLASSIFICATION	7.317731956356737E-6	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999873309308795	WITHOUT_CLASSIFICATION	1.2669069120520605E-5	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999627738442078	WITHOUT_CLASSIFICATION	3.722615579228087E-5	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.999958577236132	WITHOUT_CLASSIFICATION	4.1422763868100464E-5	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999995745444098	WITHOUT_CLASSIFICATION	4.254555902835078E-7	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999997534867839	WITHOUT_CLASSIFICATION	2.465132161398266E-7	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999239009262024	WITHOUT_CLASSIFICATION	7.609907379754328E-5	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.999995706612275	WITHOUT_CLASSIFICATION	4.2933877250358554E-6	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999941866310584	WITHOUT_CLASSIFICATION	5.813368941462135E-6	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999997683871183	WITHOUT_CLASSIFICATION	2.3161288178645486E-7	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999975105133475	WITHOUT_CLASSIFICATION	2.4894866525227315E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999998235758607	WITHOUT_CLASSIFICATION	1.7642413924876812E-7	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999999125587042	WITHOUT_CLASSIFICATION	8.744129575941845E-8	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999995130205328	WITHOUT_CLASSIFICATION	4.869794672011996E-7	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999999542095552	WITHOUT_CLASSIFICATION	4.5790444803914243E-7	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999998439253186	WITHOUT_CLASSIFICATION	1.5607468150404544E-7	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999912057476639	WITHOUT_CLASSIFICATION	8.794252336214512E-6	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999908594976069	WITHOUT_CLASSIFICATION	9.14050239299509E-6	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999822080186	WITHOUT_CLASSIFICATION	1.7791981489138054E-8	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999985334049675	WITHOUT_CLASSIFICATION	1.4665950325426517E-6	TEST
// ..	WITHOUT_CLASSIFICATION	0.9998632398239905	WITHOUT_CLASSIFICATION	1.3676017600953606E-4	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.999976116253451	WITHOUT_CLASSIFICATION	2.3883746549111926E-5	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9999992602979003	WITHOUT_CLASSIFICATION	7.397020997204216E-7	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999952585864199	WITHOUT_CLASSIFICATION	4.7414135801117895E-6	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999998503773982	WITHOUT_CLASSIFICATION	1.4962260165787254E-7	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999952986088015	WITHOUT_CLASSIFICATION	4.701391198553223E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999000005827836	WITHOUT_CLASSIFICATION	9.999941721643499E-5	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999959137432749	WITHOUT_CLASSIFICATION	4.086256725088229E-6	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999823828538378	WITHOUT_CLASSIFICATION	1.761714616222731E-5	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999952986088015	WITHOUT_CLASSIFICATION	4.701391198553223E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999000005827836	WITHOUT_CLASSIFICATION	9.999941721643499E-5	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999974770021973	WITHOUT_CLASSIFICATION	2.5229978025504724E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999934241119177	WITHOUT_CLASSIFICATION	6.575888082249166E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999934241119177	WITHOUT_CLASSIFICATION	6.575888082249166E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999659487788	WITHOUT_CLASSIFICATION	3.4051221200006794E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999550917822	WITHOUT_CLASSIFICATION	4.4908217815737615E-8	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999148969366072	WITHOUT_CLASSIFICATION	8.510306339276984E-5	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999297189792105	WITHOUT_CLASSIFICATION	7.0281020789576E-5	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999877337994052	WITHOUT_CLASSIFICATION	1.2266200594861082E-5	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999994681008069	WITHOUT_CLASSIFICATION	5.318991931407947E-7	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999277842003014	WITHOUT_CLASSIFICATION	7.221579969868505E-5	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999966451380583	WITHOUT_CLASSIFICATION	3.354861941617075E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999969839697758	WITHOUT_CLASSIFICATION	3.016030224162832E-6	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9998167519440544	WITHOUT_CLASSIFICATION	1.8324805594571305E-4	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999983720905301	WITHOUT_CLASSIFICATION	1.6279094698972877E-6	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999960419741711	WITHOUT_CLASSIFICATION	3.958025828771325E-6	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999972933619188	WITHOUT_CLASSIFICATION	2.7066380812112365E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999951728667054	WITHOUT_CLASSIFICATION	4.827133294642612E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999951728667054	WITHOUT_CLASSIFICATION	4.827133294642612E-6	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999898952127737	WITHOUT_CLASSIFICATION	1.0104787226365328E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999898952127737	WITHOUT_CLASSIFICATION	1.0104787226365328E-5	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999952084970407	WITHOUT_CLASSIFICATION	4.791502959285583E-6	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.999992595609411	WITHOUT_CLASSIFICATION	7.404390588972366E-6	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.999977657059821	WITHOUT_CLASSIFICATION	2.234294017910917E-5	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999968080865105	WITHOUT_CLASSIFICATION	3.191913489570513E-6	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999710044698678	WITHOUT_CLASSIFICATION	2.8995530132369195E-5	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999780135915377	WITHOUT_CLASSIFICATION	2.1986408462366526E-5	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999148969366072	WITHOUT_CLASSIFICATION	8.510306339276984E-5	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999297189792105	WITHOUT_CLASSIFICATION	7.0281020789576E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999969839697758	WITHOUT_CLASSIFICATION	3.016030224162832E-6	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9998167519440544	WITHOUT_CLASSIFICATION	1.8324805594571305E-4	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.999997084369927	WITHOUT_CLASSIFICATION	2.9156300730860194E-6	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999956264276693	WITHOUT_CLASSIFICATION	4.373572330709119E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9998063662586429	WITHOUT_CLASSIFICATION	1.9363374135719034E-4	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999937884346514	WITHOUT_CLASSIFICATION	6.2115653486391965E-6	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999957535857154	WITHOUT_CLASSIFICATION	4.24641428466346E-6	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999955201060532	WITHOUT_CLASSIFICATION	4.4798939468366466E-6	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999978792883124	WITHOUT_CLASSIFICATION	2.1207116876377523E-6	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9997984201873094	WITHOUT_CLASSIFICATION	2.0157981269069012E-4	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999965239790962	WITHOUT_CLASSIFICATION	3.476020903771412E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999951432170803	WITHOUT_CLASSIFICATION	4.85678291973032E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999814881477	WITHOUT_CLASSIFICATION	1.8511852321702385E-8	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999941847760824	WITHOUT_CLASSIFICATION	5.815223917585961E-6	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999889360530726	WITHOUT_CLASSIFICATION	1.1063946927380131E-5	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999962372461944	WITHOUT_CLASSIFICATION	3.7627538055414754E-6	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999986500932779	WITHOUT_CLASSIFICATION	1.3499067221613397E-6	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999999102266729	WITHOUT_CLASSIFICATION	8.977332714912841E-8	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999755936577143	WITHOUT_CLASSIFICATION	2.4406342285732415E-5	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.999957798341115	WITHOUT_CLASSIFICATION	4.220165888500246E-5	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999760066040012	WITHOUT_CLASSIFICATION	2.399339599878128E-5	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999786435432191	WITHOUT_CLASSIFICATION	2.1356456780949023E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999830701146315	WITHOUT_CLASSIFICATION	1.6929885368568414E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999830701146315	WITHOUT_CLASSIFICATION	1.6929885368568414E-5	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999886509480961	WITHOUT_CLASSIFICATION	1.1349051903824183E-5	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999218457377473	WITHOUT_CLASSIFICATION	7.815426225272107E-5	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999508656009	WITHOUT_CLASSIFICATION	4.913439912729188E-8	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999779514125062	WITHOUT_CLASSIFICATION	2.204858749371615E-5	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999779514125062	WITHOUT_CLASSIFICATION	2.204858749371615E-5	TEST
// \v	WITHOUT_CLASSIFICATION	0.9998063662586429	WITHOUT_CLASSIFICATION	1.9363374135719034E-4	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9998967957047595	WITHOUT_CLASSIFICATION	1.032042952403766E-4	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999629778952864	WITHOUT_CLASSIFICATION	3.7022104713468906E-5	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999853708842966	WITHOUT_CLASSIFICATION	1.4629115703357982E-5	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999799832694918	WITHOUT_CLASSIFICATION	2.0016730508194032E-5	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999934111882218	WITHOUT_CLASSIFICATION	6.588811778180627E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993018081362158	WITHOUT_CLASSIFICATION	6.981918637842262E-4	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999894052437861	WITHOUT_CLASSIFICATION	1.0594756213969074E-5	TEST
// no number	WITHOUT_CLASSIFICATION	0.999986025617513	WITHOUT_CLASSIFICATION	1.3974382486990961E-5	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999926221734684	WITHOUT_CLASSIFICATION	7.377826531665238E-6	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999971326498067	WITHOUT_CLASSIFICATION	2.867350193208318E-6	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999798904963886	WITHOUT_CLASSIFICATION	2.0109503611439294E-5	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999990384869205	WITHOUT_CLASSIFICATION	9.615130794953577E-7	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999940580418796	WITHOUT_CLASSIFICATION	5.941958120533345E-6	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999899300110341	WITHOUT_CLASSIFICATION	1.0069988965812808E-5	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999808437612384	WITHOUT_CLASSIFICATION	1.9156238761576896E-5	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.999987089423904	WITHOUT_CLASSIFICATION	1.2910576095943235E-5	TEST
// states	WITHOUT_CLASSIFICATION	0.9999632453898358	WITHOUT_CLASSIFICATION	3.67546101641045E-5	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999997480081297	WITHOUT_CLASSIFICATION	2.519918703326821E-7	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.999999954299053	WITHOUT_CLASSIFICATION	4.570094697763225E-8	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999998689893451	WITHOUT_CLASSIFICATION	1.3101065483144235E-7	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999885199788442	WITHOUT_CLASSIFICATION	1.1480021155726817E-5	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999974263704602	WITHOUT_CLASSIFICATION	2.573629539809326E-6	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999927257944583	WITHOUT_CLASSIFICATION	7.274205541686107E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999990878427663	WITHOUT_CLASSIFICATION	9.121572337732716E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999983730449432	WITHOUT_CLASSIFICATION	1.626955056853083E-6	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999993689948014	WITHOUT_CLASSIFICATION	6.310051986092853E-7	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999951833877937	WITHOUT_CLASSIFICATION	4.816612206295781E-6	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999745836033	WITHOUT_CLASSIFICATION	2.5416396678356554E-8	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999979543199484	WITHOUT_CLASSIFICATION	2.045680051474582E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999957111318075	WITHOUT_CLASSIFICATION	4.288868192499438E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999957111318075	WITHOUT_CLASSIFICATION	4.288868192499438E-6	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999997242778446	WITHOUT_CLASSIFICATION	2.757221554446286E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999948781593292	WITHOUT_CLASSIFICATION	5.121840670750472E-6	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999948781593292	WITHOUT_CLASSIFICATION	5.121840670750472E-6	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999985010184769	WITHOUT_CLASSIFICATION	1.4989815230408676E-6	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999985010184769	WITHOUT_CLASSIFICATION	1.4989815230408676E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999821276593857	WITHOUT_CLASSIFICATION	1.7872340614399774E-5	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999987505814594	WITHOUT_CLASSIFICATION	1.24941854058708E-6	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999993882641499	WITHOUT_CLASSIFICATION	6.117358501502432E-7	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999622288066103	WITHOUT_CLASSIFICATION	3.777119338965593E-5	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999988909648533	WITHOUT_CLASSIFICATION	1.109035146667428E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999191254389864	WITHOUT_CLASSIFICATION	8.087456101353803E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999191254389864	WITHOUT_CLASSIFICATION	8.087456101353803E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999990878427663	WITHOUT_CLASSIFICATION	9.121572337732716E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999990878427663	WITHOUT_CLASSIFICATION	9.121572337732716E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999990878427663	WITHOUT_CLASSIFICATION	9.121572337732716E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999983730449432	WITHOUT_CLASSIFICATION	1.626955056853083E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999957111318075	WITHOUT_CLASSIFICATION	4.288868192499438E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999957111318075	WITHOUT_CLASSIFICATION	4.288868192499438E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999957111318075	WITHOUT_CLASSIFICATION	4.288868192499438E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999821276593857	WITHOUT_CLASSIFICATION	1.7872340614399774E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999821276593857	WITHOUT_CLASSIFICATION	1.7872340614399774E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999821276593857	WITHOUT_CLASSIFICATION	1.7872340614399774E-5	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999622288066103	WITHOUT_CLASSIFICATION	3.777119338965593E-5	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999622288066103	WITHOUT_CLASSIFICATION	3.777119338965593E-5	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999993620096158	WITHOUT_CLASSIFICATION	6.379903841772519E-7	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999997005240275	WITHOUT_CLASSIFICATION	2.994759723833798E-7	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999995044033972	WITHOUT_CLASSIFICATION	4.955966027768581E-7	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999999522608	WITHOUT_CLASSIFICATION	4.7739200113579024E-8	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.999994237081425	WITHOUT_CLASSIFICATION	5.7629185749461605E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999716091046925	WITHOUT_CLASSIFICATION	2.8390895307458285E-5	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999716091046925	WITHOUT_CLASSIFICATION	2.8390895307458285E-5	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999987473539427	WITHOUT_CLASSIFICATION	1.2526460573493439E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993018081362158	WITHOUT_CLASSIFICATION	6.981918637842262E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993018081362158	WITHOUT_CLASSIFICATION	6.981918637842262E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993018081362158	WITHOUT_CLASSIFICATION	6.981918637842262E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993018081362158	WITHOUT_CLASSIFICATION	6.981918637842262E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993018081362158	WITHOUT_CLASSIFICATION	6.981918637842262E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999985967160453	WITHOUT_CLASSIFICATION	1.4032839547307883E-6	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999985967160453	WITHOUT_CLASSIFICATION	1.4032839547307883E-6	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999985967160453	WITHOUT_CLASSIFICATION	1.4032839547307883E-6	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999954196285067	WITHOUT_CLASSIFICATION	4.5803714932612335E-6	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999981693306238	WITHOUT_CLASSIFICATION	1.8306693761201745E-6	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999983730449432	WITHOUT_CLASSIFICATION	1.626955056853083E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999821276593857	WITHOUT_CLASSIFICATION	1.7872340614399774E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999821276593857	WITHOUT_CLASSIFICATION	1.7872340614399774E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993018081362158	WITHOUT_CLASSIFICATION	6.981918637842262E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993018081362158	WITHOUT_CLASSIFICATION	6.981918637842262E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999985967160453	WITHOUT_CLASSIFICATION	1.4032839547307883E-6	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999987473539427	WITHOUT_CLASSIFICATION	1.2526460573493439E-6	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999961597828214	WITHOUT_CLASSIFICATION	3.840217178617386E-6	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.999985135653899	WITHOUT_CLASSIFICATION	1.4864346101045864E-5	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999991208825617	WITHOUT_CLASSIFICATION	8.791174382875966E-7	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999998291320866	WITHOUT_CLASSIFICATION	1.7086791340718128E-7	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999784228374005	WITHOUT_CLASSIFICATION	2.157716259954665E-5	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999883007497208	WITHOUT_CLASSIFICATION	1.1699250279275805E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998195666057912	WITHOUT_CLASSIFICATION	1.8043339420882988E-4	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999964413604993	WITHOUT_CLASSIFICATION	3.5586395007173626E-6	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999947909210416	WITHOUT_CLASSIFICATION	5.2090789583912165E-6	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999981369120742	WITHOUT_CLASSIFICATION	1.8630879259354237E-6	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999963096330288	WITHOUT_CLASSIFICATION	3.690366971293151E-6	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999794545959719	WITHOUT_CLASSIFICATION	2.054540402809284E-5	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.999996664094792	WITHOUT_CLASSIFICATION	3.335905208003866E-6	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.999941388024627	WITHOUT_CLASSIFICATION	5.861197537302856E-5	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999894562216614	WITHOUT_CLASSIFICATION	1.0543778338615736E-5	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999956562289285	WITHOUT_CLASSIFICATION	4.343771071558308E-6	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999955331626497	WITHOUT_CLASSIFICATION	4.466837350333597E-6	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999999953956046	WITHOUT_CLASSIFICATION	4.604395408997383E-9	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9997018352090727	WITHOUT_CLASSIFICATION	2.981647909272255E-4	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999980412005135	WITHOUT_CLASSIFICATION	1.9587994865148277E-6	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999986322836286	WITHOUT_CLASSIFICATION	1.3677163712808887E-6	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999989085870358	WITHOUT_CLASSIFICATION	1.0914129642343707E-6	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999974182661988	WITHOUT_CLASSIFICATION	2.581733801173069E-6	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999990788872424	WITHOUT_CLASSIFICATION	9.211127575995499E-7	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999988256503529	WITHOUT_CLASSIFICATION	1.174349647121465E-6	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999975250053998	WITHOUT_CLASSIFICATION	2.474994600210664E-6	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999882442299515	WITHOUT_CLASSIFICATION	1.1755770048571535E-5	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.999999242576208	WITHOUT_CLASSIFICATION	7.574237920704375E-7	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.999998183888608	WITHOUT_CLASSIFICATION	1.8161113920227978E-6	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.999999853291648	WITHOUT_CLASSIFICATION	1.4670835201567736E-7	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999998948751806	WITHOUT_CLASSIFICATION	1.0512481936218322E-7	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.999999813595718	WITHOUT_CLASSIFICATION	1.864042819059597E-7	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.999999508481489	WITHOUT_CLASSIFICATION	4.915185109943361E-7	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999974466960746	WITHOUT_CLASSIFICATION	2.5533039253430576E-6	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999961597828214	WITHOUT_CLASSIFICATION	3.840217178617386E-6	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999990367652069	WITHOUT_CLASSIFICATION	9.632347931655694E-7	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999938389075096	WITHOUT_CLASSIFICATION	6.161092490442421E-6	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999996495703101	WITHOUT_CLASSIFICATION	3.504296898466062E-7	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999811542028889	WITHOUT_CLASSIFICATION	1.8845797111111644E-5	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999811542028889	WITHOUT_CLASSIFICATION	1.8845797111111644E-5	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999755623462439	WITHOUT_CLASSIFICATION	2.443765375614435E-5	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999755623462439	WITHOUT_CLASSIFICATION	2.443765375614435E-5	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999985351444438	WITHOUT_CLASSIFICATION	1.4648555561232186E-6	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999997027894727	WITHOUT_CLASSIFICATION	2.972105273154007E-7	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999923588232005	WITHOUT_CLASSIFICATION	7.641176799491964E-6	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999982033198869	WITHOUT_CLASSIFICATION	1.79668011319776E-6	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999984692106155	WITHOUT_CLASSIFICATION	1.530789384502304E-6	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999983363548622	WITHOUT_CLASSIFICATION	1.6636451377541066E-6	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999988585371223	WITHOUT_CLASSIFICATION	1.1414628777087878E-6	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999998322805824	WITHOUT_CLASSIFICATION	1.6771941745194017E-7	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999994427440365	WITHOUT_CLASSIFICATION	5.572559635341284E-7	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999985347521742	WITHOUT_CLASSIFICATION	1.465247825787926E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999997920932677	WITHOUT_CLASSIFICATION	2.07906732271061E-7	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999982834081006	WITHOUT_CLASSIFICATION	1.7165918994267703E-6	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999982834081006	WITHOUT_CLASSIFICATION	1.7165918994267703E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999997023782439	WITHOUT_CLASSIFICATION	2.976217561712872E-7	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.99999997607971	WITHOUT_CLASSIFICATION	2.3920289984747006E-8	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999941698263565	WITHOUT_CLASSIFICATION	5.8301736435908875E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999941698263565	WITHOUT_CLASSIFICATION	5.8301736435908875E-6	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999990740774956	WITHOUT_CLASSIFICATION	9.259225043830669E-7	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999988510013845	WITHOUT_CLASSIFICATION	1.1489986155476143E-6	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.999992931211784	WITHOUT_CLASSIFICATION	7.068788216031537E-6	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999871038264002	WITHOUT_CLASSIFICATION	1.289617359985107E-5	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999982255468024	WITHOUT_CLASSIFICATION	1.7744531976079126E-6	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999992603592517	WITHOUT_CLASSIFICATION	7.396407482502655E-7	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999831113329811	WITHOUT_CLASSIFICATION	1.68886670188889E-5	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.999999515795344	WITHOUT_CLASSIFICATION	4.842046560206749E-7	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999920740802674	WITHOUT_CLASSIFICATION	7.925919732677047E-6	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999441389905283	WITHOUT_CLASSIFICATION	5.586100947184646E-5	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999981934371209	WITHOUT_CLASSIFICATION	1.8065628790884505E-6	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999990516101047	WITHOUT_CLASSIFICATION	9.483898952381191E-7	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999984297246185	WITHOUT_CLASSIFICATION	1.570275381464998E-6	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999970531088166	WITHOUT_CLASSIFICATION	2.9468911834184546E-6	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999995449514625	WITHOUT_CLASSIFICATION	4.5504853746981167E-7	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999988542537829	WITHOUT_CLASSIFICATION	1.1457462171150916E-6	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999987435243666	WITHOUT_CLASSIFICATION	1.2564756334408095E-6	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999992101417642	WITHOUT_CLASSIFICATION	7.898582359637699E-7	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999928123863248	WITHOUT_CLASSIFICATION	7.187613675152449E-6	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999998817273895	WITHOUT_CLASSIFICATION	1.1827261053077019E-7	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.999998717482691	WITHOUT_CLASSIFICATION	1.2825173090397883E-6	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999906492059407	WITHOUT_CLASSIFICATION	9.350794059385833E-6	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999951804441705	WITHOUT_CLASSIFICATION	4.819555829520813E-6	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999966316057136	WITHOUT_CLASSIFICATION	3.3683942864017664E-6	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.99997605925004	WITHOUT_CLASSIFICATION	2.394074996005496E-5	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999948629986511	WITHOUT_CLASSIFICATION	5.137001348864329E-6	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999901444431204	WITHOUT_CLASSIFICATION	9.85555687947065E-6	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999860703782191	WITHOUT_CLASSIFICATION	1.3929621780987522E-5	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.99999869153122	WITHOUT_CLASSIFICATION	1.308468780050836E-6	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999996257036872	WITHOUT_CLASSIFICATION	3.7429631286708664E-7	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999932097710862	WITHOUT_CLASSIFICATION	6.790228913787317E-6	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999942209774038	WITHOUT_CLASSIFICATION	5.779022596327543E-6	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999991355486793	WITHOUT_CLASSIFICATION	8.644513206059331E-7	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999953511653237	WITHOUT_CLASSIFICATION	4.648834676271193E-6	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999953511653237	WITHOUT_CLASSIFICATION	4.648834676271193E-6	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999987141731705	WITHOUT_CLASSIFICATION	1.2858268294683663E-6	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999996577301372	WITHOUT_CLASSIFICATION	3.422698627546813E-7	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999897227525064	WITHOUT_CLASSIFICATION	1.0277247493494733E-5	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999451503065626	WITHOUT_CLASSIFICATION	5.4849693437411146E-5	TEST
// Block	WITHOUT_CLASSIFICATION	0.9999161060034244	WITHOUT_CLASSIFICATION	8.38939965756643E-5	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999866903061491	WITHOUT_CLASSIFICATION	1.3309693850867421E-5	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999899911402398	WITHOUT_CLASSIFICATION	1.0008859760148386E-5	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999945318474691	WITHOUT_CLASSIFICATION	5.468152530875818E-6	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999996637158792	WITHOUT_CLASSIFICATION	3.3628412074786165E-7	TEST
// ok	WITHOUT_CLASSIFICATION	0.9998610293647637	WITHOUT_CLASSIFICATION	1.3897063523622214E-4	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999430191109	WITHOUT_CLASSIFICATION	5.6980889059607575E-8	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.999987389349258	WITHOUT_CLASSIFICATION	1.261065074208093E-5	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9998178414259971	WITHOUT_CLASSIFICATION	1.8215857400285677E-4	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999880497845371	WITHOUT_CLASSIFICATION	1.195021546282482E-5	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999989480744264	WITHOUT_CLASSIFICATION	1.051925573683158E-6	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999896593993055	WITHOUT_CLASSIFICATION	1.0340600694587134E-5	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999997530815208	WITHOUT_CLASSIFICATION	2.4691847920936974E-7	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999925574995703	WITHOUT_CLASSIFICATION	7.442500429754157E-6	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999914691053385	WITHOUT_CLASSIFICATION	8.530894661582971E-6	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999937777998837	WITHOUT_CLASSIFICATION	6.22220011627477E-6	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.999999849102154	WITHOUT_CLASSIFICATION	1.5089784595317364E-7	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999993213084567	WITHOUT_CLASSIFICATION	6.786915434183065E-7	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999999544180268	WITHOUT_CLASSIFICATION	4.558197314070501E-8	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999978646537947	WITHOUT_CLASSIFICATION	2.135346205239096E-6	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999949812149876	WITHOUT_CLASSIFICATION	5.01878501233726E-6	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999993252958288	WITHOUT_CLASSIFICATION	6.747041712520321E-7	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999998135397661	WITHOUT_CLASSIFICATION	1.8646023398927727E-7	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999936685600826	WITHOUT_CLASSIFICATION	6.331439917344774E-6	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999887328618835	WITHOUT_CLASSIFICATION	1.1267138116535206E-5	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.999999935448485	WITHOUT_CLASSIFICATION	6.455151499305104E-8	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999998046098884	WITHOUT_CLASSIFICATION	1.9539011170404114E-7	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999997462604074	WITHOUT_CLASSIFICATION	2.5373959254629204E-7	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999978419194967	WITHOUT_CLASSIFICATION	2.158080503399928E-6	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999991685688224	WITHOUT_CLASSIFICATION	8.314311776121072E-7	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999730237655594	WITHOUT_CLASSIFICATION	2.6976234440611696E-5	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999973986471672	WITHOUT_CLASSIFICATION	2.6013528328903762E-6	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999487508669795	WITHOUT_CLASSIFICATION	5.1249133020383015E-5	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999875466959643	WITHOUT_CLASSIFICATION	1.2453304035584793E-5	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999920485151541	WITHOUT_CLASSIFICATION	7.951484845846535E-6	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.999996573923167	WITHOUT_CLASSIFICATION	3.4260768329758213E-6	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.999988318831256	WITHOUT_CLASSIFICATION	1.1681168743820641E-5	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999756893976403	WITHOUT_CLASSIFICATION	2.431060235974693E-5	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999756893976403	WITHOUT_CLASSIFICATION	2.431060235974693E-5	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.999970432788073	WITHOUT_CLASSIFICATION	2.956721192708841E-5	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999957845080824	WITHOUT_CLASSIFICATION	4.2154919176942315E-6	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999726866429295	WITHOUT_CLASSIFICATION	2.7313357070446718E-5	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999979503684951	WITHOUT_CLASSIFICATION	2.0496315048226394E-6	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999983918199997	WITHOUT_CLASSIFICATION	1.6081800003930514E-6	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999961455495237	WITHOUT_CLASSIFICATION	3.854450476349938E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999905840992	WITHOUT_CLASSIFICATION	9.415900806214245E-8	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999999809232162	WITHOUT_CLASSIFICATION	1.907678375859152E-8	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999996110343803	WITHOUT_CLASSIFICATION	3.8896561979000684E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999010807292	WITHOUT_CLASSIFICATION	9.891927083072379E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999527532937449	WITHOUT_CLASSIFICATION	4.72467062552014E-5	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999990755338808	WITHOUT_CLASSIFICATION	9.244661192011091E-7	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999997362770229	WITHOUT_CLASSIFICATION	2.6372297704522265E-7	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999978412058063	WITHOUT_CLASSIFICATION	2.1587941936504383E-6	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999998830221558	WITHOUT_CLASSIFICATION	1.1697784425898892E-7	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.999999313482659	WITHOUT_CLASSIFICATION	6.8651734094175E-7	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999471280651	WITHOUT_CLASSIFICATION	5.287193488283693E-8	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9998649969441201	WITHOUT_CLASSIFICATION	1.3500305587996393E-4	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.999999419559261	WITHOUT_CLASSIFICATION	5.804407391364322E-7	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999980699353104	WITHOUT_CLASSIFICATION	1.93006468964752E-6	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.999998477512829	WITHOUT_CLASSIFICATION	1.5224871710556981E-6	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999948021725622	WITHOUT_CLASSIFICATION	5.197827437781214E-6	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999997641008839	WITHOUT_CLASSIFICATION	2.3589911613124067E-7	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999999346096626	WITHOUT_CLASSIFICATION	6.539033730324089E-8	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999996626587865	WITHOUT_CLASSIFICATION	3.3734121354895415E-7	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999997437097532	WITHOUT_CLASSIFICATION	2.5629024681986825E-7	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.999999712112205	WITHOUT_CLASSIFICATION	2.8788779502326176E-7	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999908852020376	WITHOUT_CLASSIFICATION	9.114797962357543E-6	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999996877729691	WITHOUT_CLASSIFICATION	3.12227030903265E-6	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999834733530639	WITHOUT_CLASSIFICATION	1.6526646936088614E-5	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999970168639271	WITHOUT_CLASSIFICATION	2.9831360729447275E-6	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999996487351618	WITHOUT_CLASSIFICATION	3.5126483825115105E-7	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999834733530639	WITHOUT_CLASSIFICATION	1.6526646936088614E-5	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999999538777024	WITHOUT_CLASSIFICATION	4.612229769183835E-8	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999999542095552	WITHOUT_CLASSIFICATION	4.5790444803914243E-7	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.999999996703671	WITHOUT_CLASSIFICATION	3.2963290289542824E-9	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9999968174992618	WITHOUT_CLASSIFICATION	3.1825007382089626E-6	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999966375250717	WITHOUT_CLASSIFICATION	3.362474928301636E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999735876105	WITHOUT_CLASSIFICATION	2.6412389454980452E-8	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999949022367544	WITHOUT_CLASSIFICATION	5.097763245643441E-6	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999983183992002	WITHOUT_CLASSIFICATION	1.6816007997669485E-6	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999550917822	WITHOUT_CLASSIFICATION	4.4908217815737615E-8	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999998817273895	WITHOUT_CLASSIFICATION	1.1827261053077019E-7	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999995044033972	WITHOUT_CLASSIFICATION	4.955966027768581E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999473044854	WITHOUT_CLASSIFICATION	5.26955145627989E-8	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999993804759119	WITHOUT_CLASSIFICATION	6.195240882225102E-7	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999995407210507	WITHOUT_CLASSIFICATION	4.5927894932976456E-7	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999604014955786	WITHOUT_CLASSIFICATION	3.95985044213993E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999865743435005	WITHOUT_CLASSIFICATION	1.3425656499638832E-5	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999999946520793	WITHOUT_CLASSIFICATION	5.3479206379311475E-9	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999970467936544	WITHOUT_CLASSIFICATION	2.9532063455805877E-6	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999844258595	WITHOUT_CLASSIFICATION	1.5574140472976957E-8	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999999749933642	WITHOUT_CLASSIFICATION	2.5006635734935932E-8	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999347997055817	WITHOUT_CLASSIFICATION	6.520029441826597E-5	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999717847256969	WITHOUT_CLASSIFICATION	2.8215274303124828E-5	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999828045315963	WITHOUT_CLASSIFICATION	1.7195468403740532E-5	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999963990128157	WITHOUT_CLASSIFICATION	3.600987184371879E-6	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999519643402502	WITHOUT_CLASSIFICATION	4.8035659749772056E-5	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999653938892729	WITHOUT_CLASSIFICATION	3.4606110727219684E-5	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999630887774089	WITHOUT_CLASSIFICATION	3.691122259103132E-5	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999995848873265	WITHOUT_CLASSIFICATION	4.151126734757227E-7	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999987572120334	WITHOUT_CLASSIFICATION	1.242787966672563E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999993859291655	WITHOUT_CLASSIFICATION	6.14070834417934E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999993859291655	WITHOUT_CLASSIFICATION	6.14070834417934E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999955483167416	WITHOUT_CLASSIFICATION	4.451683258355528E-6	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999995671770419	WITHOUT_CLASSIFICATION	4.3282295801727626E-7	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999994095660851	WITHOUT_CLASSIFICATION	5.904339149041287E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999644806849136	WITHOUT_CLASSIFICATION	3.551931508628787E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999644806849136	WITHOUT_CLASSIFICATION	3.551931508628787E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999644806849136	WITHOUT_CLASSIFICATION	3.551931508628787E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999644806849136	WITHOUT_CLASSIFICATION	3.551931508628787E-5	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999993283822347	WITHOUT_CLASSIFICATION	6.716177652776352E-7	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999998035173763	WITHOUT_CLASSIFICATION	1.9648262370843264E-6	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999482444884116	WITHOUT_CLASSIFICATION	5.1755511588297944E-5	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.99999998906167	WITHOUT_CLASSIFICATION	1.093833013162503E-8	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999930068050525	WITHOUT_CLASSIFICATION	6.99319494743861E-6	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999877118606683	WITHOUT_CLASSIFICATION	1.2288139331776971E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999564551925605	WITHOUT_CLASSIFICATION	4.3544807439534486E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999564551925605	WITHOUT_CLASSIFICATION	4.3544807439534486E-5	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999258505439	WITHOUT_CLASSIFICATION	7.414945612142484E-8	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9991763851839771	WITHOUT_CLASSIFICATION	8.236148160228688E-4	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.999999477209967	WITHOUT_CLASSIFICATION	5.227900329451196E-7	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999999837979957	WITHOUT_CLASSIFICATION	1.6202004263205168E-8	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999978345036842	WITHOUT_CLASSIFICATION	2.16549631580232E-6	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999950843045138	WITHOUT_CLASSIFICATION	4.915695486285389E-6	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999995386854582	WITHOUT_CLASSIFICATION	4.6131454177883864E-7	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999864594918371	WITHOUT_CLASSIFICATION	1.35405081629959E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9991073051287878	WITHOUT_CLASSIFICATION	8.926948712122915E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9991073051287878	WITHOUT_CLASSIFICATION	8.926948712122915E-4	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999996487351618	WITHOUT_CLASSIFICATION	3.5126483825115105E-7	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999630043317622	WITHOUT_CLASSIFICATION	3.699566823775567E-5	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999630615140673	WITHOUT_CLASSIFICATION	3.6938485932669934E-5	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999954008782848	WITHOUT_CLASSIFICATION	4.599121715153055E-6	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999342041609	WITHOUT_CLASSIFICATION	6.579583910008172E-8	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9991105852239965	WITHOUT_CLASSIFICATION	8.894147760034735E-4	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999980046456388	WITHOUT_CLASSIFICATION	1.99535436113113E-6	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999798648043382	WITHOUT_CLASSIFICATION	2.013519566181659E-5	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999930388468664	WITHOUT_CLASSIFICATION	6.96115313357503E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999930388468664	WITHOUT_CLASSIFICATION	6.96115313357503E-6	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999996858181529	WITHOUT_CLASSIFICATION	3.1418184709637075E-7	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999863263433	WITHOUT_CLASSIFICATION	1.3673656591616778E-8	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999997255154361	WITHOUT_CLASSIFICATION	2.7448456389987477E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999848328380412	WITHOUT_CLASSIFICATION	1.5167161958914208E-5	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999991209512558	WITHOUT_CLASSIFICATION	8.79048744326265E-7	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9991058374850047	WITHOUT_CLASSIFICATION	8.941625149952808E-4	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999994045264208	WITHOUT_CLASSIFICATION	5.954735791897439E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999998398858336	WITHOUT_CLASSIFICATION	1.601141664032403E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999998398858336	WITHOUT_CLASSIFICATION	1.601141664032403E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999998398858336	WITHOUT_CLASSIFICATION	1.601141664032403E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999998398858336	WITHOUT_CLASSIFICATION	1.601141664032403E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.99999826943129	WITHOUT_CLASSIFICATION	1.730568709994618E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999902904911	WITHOUT_CLASSIFICATION	9.709508789705143E-9	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999925878120128	WITHOUT_CLASSIFICATION	7.412187987249604E-6	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999996831616056	WITHOUT_CLASSIFICATION	3.16838394473149E-7	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999995505318608	WITHOUT_CLASSIFICATION	4.49468139197154E-7	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.9990623684039678	WITHOUT_CLASSIFICATION	9.376315960322624E-4	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999945382144682	WITHOUT_CLASSIFICATION	5.461785531829409E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999949100336157	WITHOUT_CLASSIFICATION	5.0899663842172E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999949100336157	WITHOUT_CLASSIFICATION	5.0899663842172E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999949100336157	WITHOUT_CLASSIFICATION	5.0899663842172E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999989262358493	WITHOUT_CLASSIFICATION	1.0737641507158644E-6	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999993375947268	WITHOUT_CLASSIFICATION	6.624052731229939E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999994753753931	WITHOUT_CLASSIFICATION	5.24624606754644E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999994753753931	WITHOUT_CLASSIFICATION	5.24624606754644E-7	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9998784923972002	WITHOUT_CLASSIFICATION	1.2150760279981973E-4	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999988825411	WITHOUT_CLASSIFICATION	1.1174589029793082E-9	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.999999945181349	WITHOUT_CLASSIFICATION	5.4818650815779295E-8	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9998951181119448	WITHOUT_CLASSIFICATION	1.0488188805518768E-4	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999237569624	WITHOUT_CLASSIFICATION	7.624303752850322E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999831606191049	WITHOUT_CLASSIFICATION	1.683938089514885E-5	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999992373522836	WITHOUT_CLASSIFICATION	7.62647716437703E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999992373522836	WITHOUT_CLASSIFICATION	7.62647716437703E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999938820166665	WITHOUT_CLASSIFICATION	6.117983333514092E-6	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999734441759	WITHOUT_CLASSIFICATION	2.6555824057426743E-8	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999991749989	WITHOUT_CLASSIFICATION	8.250009416257149E-10	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999765242736331	WITHOUT_CLASSIFICATION	2.347572636696052E-5	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999952609647603	WITHOUT_CLASSIFICATION	4.73903523971069E-6	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999683722198	WITHOUT_CLASSIFICATION	3.162778013628878E-8	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.999995740137322	WITHOUT_CLASSIFICATION	4.259862678005557E-6	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9995123798001824	WITHOUT_CLASSIFICATION	4.8762019981772196E-4	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999984759807573	WITHOUT_CLASSIFICATION	1.5240192426469041E-6	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999968789461163	WITHOUT_CLASSIFICATION	3.1210538836092396E-6	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999987603927135	WITHOUT_CLASSIFICATION	1.2396072864357696E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999985557330736	WITHOUT_CLASSIFICATION	1.4442669263281441E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999999688222264	WITHOUT_CLASSIFICATION	3.1177773600851543E-7	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999999121288412	WITHOUT_CLASSIFICATION	8.787115872784606E-8	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999992309398771	WITHOUT_CLASSIFICATION	7.690601228264361E-7	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999997976413878	WITHOUT_CLASSIFICATION	2.0235861219956082E-7	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999999675931379	WITHOUT_CLASSIFICATION	3.240686204040748E-8	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999998378106052	WITHOUT_CLASSIFICATION	1.6218939470931134E-7	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999986518585471	WITHOUT_CLASSIFICATION	1.3481414529336597E-6	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999994392750853	WITHOUT_CLASSIFICATION	5.607249146759785E-7	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999962386303441	WITHOUT_CLASSIFICATION	3.7613696559105844E-6	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999992839668919	WITHOUT_CLASSIFICATION	7.1603310804845E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999847027638917	WITHOUT_CLASSIFICATION	1.5297236108275237E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999847027638917	WITHOUT_CLASSIFICATION	1.5297236108275237E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999847027638917	WITHOUT_CLASSIFICATION	1.5297236108275237E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999847027638917	WITHOUT_CLASSIFICATION	1.5297236108275237E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999847027638917	WITHOUT_CLASSIFICATION	1.5297236108275237E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999847027638917	WITHOUT_CLASSIFICATION	1.5297236108275237E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999847027638917	WITHOUT_CLASSIFICATION	1.5297236108275237E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999847027638917	WITHOUT_CLASSIFICATION	1.5297236108275237E-5	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999995718211113	WITHOUT_CLASSIFICATION	4.2817888869966293E-7	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9998819677196977	WITHOUT_CLASSIFICATION	1.1803228030223003E-4	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999975204536329	WITHOUT_CLASSIFICATION	2.47954636708783E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999719683337	WITHOUT_CLASSIFICATION	2.8031666352728503E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999905840992	WITHOUT_CLASSIFICATION	9.415900806214245E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999905840992	WITHOUT_CLASSIFICATION	9.415900806214245E-8	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999992726588915	WITHOUT_CLASSIFICATION	7.273411084167117E-7	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999975465746422	WITHOUT_CLASSIFICATION	2.453425357783365E-6	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999976934397209	WITHOUT_CLASSIFICATION	2.306560279149087E-6	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999993729483536	WITHOUT_CLASSIFICATION	6.270516464579394E-7	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999934085780722	WITHOUT_CLASSIFICATION	6.591421927814958E-6	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999872961233275	WITHOUT_CLASSIFICATION	1.2703876672563814E-5	TEST
// read	WITHOUT_CLASSIFICATION	0.9999637883466796	WITHOUT_CLASSIFICATION	3.6211653320326165E-5	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999951096883098	WITHOUT_CLASSIFICATION	4.890311690111817E-6	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999963727174077	WITHOUT_CLASSIFICATION	3.6272825921958314E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999974664562292	WITHOUT_CLASSIFICATION	2.5335437707719017E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999974664562292	WITHOUT_CLASSIFICATION	2.5335437707719017E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999974664562292	WITHOUT_CLASSIFICATION	2.5335437707719017E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9994069661377633	WITHOUT_CLASSIFICATION	5.930338622366741E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9994069661377633	WITHOUT_CLASSIFICATION	5.930338622366741E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9994069661377633	WITHOUT_CLASSIFICATION	5.930338622366741E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9994069661377633	WITHOUT_CLASSIFICATION	5.930338622366741E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9994069661377633	WITHOUT_CLASSIFICATION	5.930338622366741E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9994069661377633	WITHOUT_CLASSIFICATION	5.930338622366741E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9994069661377633	WITHOUT_CLASSIFICATION	5.930338622366741E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9994069661377633	WITHOUT_CLASSIFICATION	5.930338622366741E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9994069661377633	WITHOUT_CLASSIFICATION	5.930338622366741E-4	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999981765287331	WITHOUT_CLASSIFICATION	1.8234712669615172E-6	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999775072741093	WITHOUT_CLASSIFICATION	2.2492725890711208E-5	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999920666937191	WITHOUT_CLASSIFICATION	7.933306280831641E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999959355400521	WITHOUT_CLASSIFICATION	4.064459947913393E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9994069661377633	WITHOUT_CLASSIFICATION	5.930338622366741E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9994069661377633	WITHOUT_CLASSIFICATION	5.930338622366741E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9994069661377633	WITHOUT_CLASSIFICATION	5.930338622366741E-4	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999922144668968	WITHOUT_CLASSIFICATION	7.785533103251967E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999939152791633	WITHOUT_CLASSIFICATION	6.084720836754588E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999997621035067	WITHOUT_CLASSIFICATION	2.3789649314273693E-7	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999940921346615	WITHOUT_CLASSIFICATION	5.907865338554995E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999940921346615	WITHOUT_CLASSIFICATION	5.907865338554995E-6	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999824095167995	WITHOUT_CLASSIFICATION	1.759048320048352E-5	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999990676265189	WITHOUT_CLASSIFICATION	9.323734810407008E-7	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999996616580434	WITHOUT_CLASSIFICATION	3.3834195652995326E-7	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999360281931	WITHOUT_CLASSIFICATION	6.397180682063698E-8	TEST
// block given	WITHOUT_CLASSIFICATION	0.999982072386528	WITHOUT_CLASSIFICATION	1.792761347199452E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.999982072386528	WITHOUT_CLASSIFICATION	1.792761347199452E-5	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999999776762531	WITHOUT_CLASSIFICATION	2.232374684582328E-8	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999998694464183	WITHOUT_CLASSIFICATION	1.3055358177737646E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999966521822173	WITHOUT_CLASSIFICATION	3.347817782614621E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9982792566398079	WITHOUT_CLASSIFICATION	0.001720743360192061	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9982792566398079	WITHOUT_CLASSIFICATION	0.001720743360192061	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9982792566398079	WITHOUT_CLASSIFICATION	0.001720743360192061	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.999863108800629	WITHOUT_CLASSIFICATION	1.368911993709399E-4	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.999990323833558	WITHOUT_CLASSIFICATION	9.676166441965897E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.999990323833558	WITHOUT_CLASSIFICATION	9.676166441965897E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.999994062635512	WITHOUT_CLASSIFICATION	5.937364487891746E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.999994062635512	WITHOUT_CLASSIFICATION	5.937364487891746E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999873740846643	WITHOUT_CLASSIFICATION	1.2625915335594293E-5	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999993168278177	WITHOUT_CLASSIFICATION	6.831721822384746E-7	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999881598214511	WITHOUT_CLASSIFICATION	1.1840178549014603E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9998433516150727	WITHOUT_CLASSIFICATION	1.5664838492742593E-4	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999083316950017	WITHOUT_CLASSIFICATION	9.166830499830441E-5	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.999998742985221	WITHOUT_CLASSIFICATION	1.2570147790329705E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999889101125	WITHOUT_CLASSIFICATION	1.1089887500773053E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999191254389864	WITHOUT_CLASSIFICATION	8.087456101353803E-5	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999955339930369	WITHOUT_CLASSIFICATION	4.466006963072999E-6	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.999999952533242	WITHOUT_CLASSIFICATION	4.7466757976276334E-8	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999263545496886	WITHOUT_CLASSIFICATION	7.364545031139066E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999918589758904	WITHOUT_CLASSIFICATION	8.141024109616492E-6	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999990585620574	WITHOUT_CLASSIFICATION	9.414379426156077E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999997947016444	WITHOUT_CLASSIFICATION	2.0529835567451429E-7	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999375859016	WITHOUT_CLASSIFICATION	6.241409841076538E-8	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999987728490369	WITHOUT_CLASSIFICATION	1.2271509630324058E-6	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999998951135094	WITHOUT_CLASSIFICATION	1.0488649062898885E-7	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999986281390257	WITHOUT_CLASSIFICATION	1.3718609741789173E-6	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999995242886888	WITHOUT_CLASSIFICATION	4.757113112289602E-7	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999977960367105	WITHOUT_CLASSIFICATION	2.2039632895243372E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999473044854	WITHOUT_CLASSIFICATION	5.26955145627989E-8	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9989058629058205	WITHOUT_CLASSIFICATION	0.001094137094179481	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999965808810928	WITHOUT_CLASSIFICATION	3.419118907339916E-6	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.999998225170414	WITHOUT_CLASSIFICATION	1.7748295858878322E-6	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999973189772978	WITHOUT_CLASSIFICATION	2.681022702084825E-6	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999918878641352	WITHOUT_CLASSIFICATION	8.112135864821024E-6	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.999788945056626	WITHOUT_CLASSIFICATION	2.1105494337413482E-4	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999997413282331	WITHOUT_CLASSIFICATION	2.5867176691717635E-7	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999818533322645	WITHOUT_CLASSIFICATION	1.81466677354494E-5	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.999999890575388	WITHOUT_CLASSIFICATION	1.0942461199305832E-7	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999962931676599	WITHOUT_CLASSIFICATION	3.7068323400095637E-6	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999978785095661	WITHOUT_CLASSIFICATION	2.1214904338674908E-6	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999963157509415	WITHOUT_CLASSIFICATION	3.684249058634545E-6	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999990432832432	WITHOUT_CLASSIFICATION	9.567167567964406E-7	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999950848662746	WITHOUT_CLASSIFICATION	4.9151337254639835E-6	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999999942325974	WITHOUT_CLASSIFICATION	5.767402529288678E-9	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999982077573233	WITHOUT_CLASSIFICATION	1.7922426767551908E-6	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999982138794746	WITHOUT_CLASSIFICATION	1.7861205254119883E-6	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999964239640097	WITHOUT_CLASSIFICATION	3.5760359903788813E-6	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999390990313	WITHOUT_CLASSIFICATION	6.090096869070955E-8	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999999924493161	WITHOUT_CLASSIFICATION	7.550683835419557E-9	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999486745581413	WITHOUT_CLASSIFICATION	5.1325441858787624E-5	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.999999927554757	WITHOUT_CLASSIFICATION	7.244524303703497E-8	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999958216303416	WITHOUT_CLASSIFICATION	4.178369658324015E-6	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999999714946144	WITHOUT_CLASSIFICATION	2.850538567546474E-8	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999979496681597	WITHOUT_CLASSIFICATION	2.0503318402946904E-6	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999912980772899	WITHOUT_CLASSIFICATION	8.701922710083363E-6	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999997711470828	WITHOUT_CLASSIFICATION	2.2885291713928378E-7	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.999996920040579	WITHOUT_CLASSIFICATION	3.0799594209630747E-6	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999540963191972	WITHOUT_CLASSIFICATION	4.590368080284964E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999997748145577	WITHOUT_CLASSIFICATION	2.251854423881548E-7	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999943841999761	WITHOUT_CLASSIFICATION	5.615800023957289E-6	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999943841999761	WITHOUT_CLASSIFICATION	5.615800023957289E-6	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999994591798134	WITHOUT_CLASSIFICATION	5.40820186727633E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999994591798134	WITHOUT_CLASSIFICATION	5.40820186727633E-7	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999945613030436	WITHOUT_CLASSIFICATION	5.438696956353699E-6	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999945613030436	WITHOUT_CLASSIFICATION	5.438696956353699E-6	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999015854576419	WITHOUT_CLASSIFICATION	9.841454235814075E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999015854576419	WITHOUT_CLASSIFICATION	9.841454235814075E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999913564313542	WITHOUT_CLASSIFICATION	8.643568645821252E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999913564313542	WITHOUT_CLASSIFICATION	8.643568645821252E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999913564313542	WITHOUT_CLASSIFICATION	8.643568645821252E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999913564313542	WITHOUT_CLASSIFICATION	8.643568645821252E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999913564313542	WITHOUT_CLASSIFICATION	8.643568645821252E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999913564313542	WITHOUT_CLASSIFICATION	8.643568645821252E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999913564313542	WITHOUT_CLASSIFICATION	8.643568645821252E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999913564313542	WITHOUT_CLASSIFICATION	8.643568645821252E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999913564313542	WITHOUT_CLASSIFICATION	8.643568645821252E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999971844110229	WITHOUT_CLASSIFICATION	2.815588977125734E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999971844110229	WITHOUT_CLASSIFICATION	2.815588977125734E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999971844110229	WITHOUT_CLASSIFICATION	2.815588977125734E-6	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999970248097565	WITHOUT_CLASSIFICATION	2.975190243530865E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999495897254809	WITHOUT_CLASSIFICATION	5.041027451916629E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999495897254809	WITHOUT_CLASSIFICATION	5.041027451916629E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999495897254809	WITHOUT_CLASSIFICATION	5.041027451916629E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.99999955077335	WITHOUT_CLASSIFICATION	4.4922664998968905E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.99999955077335	WITHOUT_CLASSIFICATION	4.4922664998968905E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.99999955077335	WITHOUT_CLASSIFICATION	4.4922664998968905E-7	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999563139154302	WITHOUT_CLASSIFICATION	4.368608456995739E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999719532839452	WITHOUT_CLASSIFICATION	2.8046716054791486E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998109629646149	WITHOUT_CLASSIFICATION	1.890370353849872E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998291965527324	WITHOUT_CLASSIFICATION	1.7080344726766748E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998291965527324	WITHOUT_CLASSIFICATION	1.7080344726766748E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998291965527324	WITHOUT_CLASSIFICATION	1.7080344726766748E-4	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.999949152297366	WITHOUT_CLASSIFICATION	5.084770263399986E-5	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999767626823763	WITHOUT_CLASSIFICATION	2.3237317623746817E-5	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999767626823763	WITHOUT_CLASSIFICATION	2.3237317623746817E-5	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999992278384232	WITHOUT_CLASSIFICATION	7.721615768190521E-7	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999947717714	WITHOUT_CLASSIFICATION	5.22822859761131E-9	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999947717714	WITHOUT_CLASSIFICATION	5.22822859761131E-9	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9999996817817448	WITHOUT_CLASSIFICATION	3.1821825522777645E-7	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999998702421338	WITHOUT_CLASSIFICATION	1.297578662856632E-7	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999966819215372	WITHOUT_CLASSIFICATION	3.318078462729595E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749054259806	WITHOUT_CLASSIFICATION	2.5094574019480142E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749054259806	WITHOUT_CLASSIFICATION	2.5094574019480142E-5	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999997688910083	WITHOUT_CLASSIFICATION	2.3110899161928922E-7	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999979885257451	WITHOUT_CLASSIFICATION	2.0114742549309783E-6	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999998587397116	WITHOUT_CLASSIFICATION	1.4126028839437719E-7	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999999505441158	WITHOUT_CLASSIFICATION	4.945588401442202E-8	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999999052937347	WITHOUT_CLASSIFICATION	9.470626531477736E-8	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749054259806	WITHOUT_CLASSIFICATION	2.5094574019480142E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749054259806	WITHOUT_CLASSIFICATION	2.5094574019480142E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749054259806	WITHOUT_CLASSIFICATION	2.5094574019480142E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749054259806	WITHOUT_CLASSIFICATION	2.5094574019480142E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999749054259806	WITHOUT_CLASSIFICATION	2.5094574019480142E-5	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999650009141876	WITHOUT_CLASSIFICATION	3.499908581244039E-5	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999980648461761	WITHOUT_CLASSIFICATION	1.9351538238802832E-6	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999998568269917	WITHOUT_CLASSIFICATION	1.43173008426337E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999848819721271	WITHOUT_CLASSIFICATION	1.5118027873004708E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999921175606	WITHOUT_CLASSIFICATION	7.882439387395084E-9	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.999983915463359	WITHOUT_CLASSIFICATION	1.6084536641076473E-5	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999999920629886	WITHOUT_CLASSIFICATION	7.937011366968291E-9	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999983982751186	WITHOUT_CLASSIFICATION	1.601724881319235E-6	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999995868389142	WITHOUT_CLASSIFICATION	4.131610858742959E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999461167458934	WITHOUT_CLASSIFICATION	5.3883254106611836E-5	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999978139508884	WITHOUT_CLASSIFICATION	2.186049111606876E-6	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999948021725622	WITHOUT_CLASSIFICATION	5.197827437781214E-6	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.999993543305782	WITHOUT_CLASSIFICATION	6.456694217868413E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999987539395964	WITHOUT_CLASSIFICATION	1.246060403637498E-6	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999996785127447	WITHOUT_CLASSIFICATION	3.2148725522870673E-7	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999999822016572	WITHOUT_CLASSIFICATION	1.7798342826968895E-8	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999994861060945	WITHOUT_CLASSIFICATION	5.138939055291053E-7	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.999999997544104	WITHOUT_CLASSIFICATION	2.4558960573655935E-9	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999986291257574	WITHOUT_CLASSIFICATION	1.3708742425641375E-6	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999995672429432	WITHOUT_CLASSIFICATION	4.327570568105255E-6	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999990152021054	WITHOUT_CLASSIFICATION	9.847978945517105E-7	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999974362091198	WITHOUT_CLASSIFICATION	2.5637908801221636E-6	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999010807292	WITHOUT_CLASSIFICATION	9.891927083072379E-8	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999977977936917	WITHOUT_CLASSIFICATION	2.202206308224953E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999977977936917	WITHOUT_CLASSIFICATION	2.202206308224953E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999977977936917	WITHOUT_CLASSIFICATION	2.202206308224953E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999977977936917	WITHOUT_CLASSIFICATION	2.202206308224953E-6	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999991165519567	WITHOUT_CLASSIFICATION	8.83448043323898E-7	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999999892250389	WITHOUT_CLASSIFICATION	1.07749610366735E-8	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999974776704449	WITHOUT_CLASSIFICATION	2.5223295549957006E-6	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999974776704449	WITHOUT_CLASSIFICATION	2.5223295549957006E-6	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999807160942621	WITHOUT_CLASSIFICATION	1.928390573787788E-5	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9994472606194016	WITHOUT_CLASSIFICATION	5.527393805984705E-4	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999958671144793	WITHOUT_CLASSIFICATION	4.132885520776978E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999983109517538	WITHOUT_CLASSIFICATION	1.689048246179683E-6	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999996283638353	WITHOUT_CLASSIFICATION	3.716361647759663E-7	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999983727324129	WITHOUT_CLASSIFICATION	1.6272675871881007E-6	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999991227217758	WITHOUT_CLASSIFICATION	8.772782240504486E-7	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999798821088848	WITHOUT_CLASSIFICATION	2.0117891115314745E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999798821088848	WITHOUT_CLASSIFICATION	2.0117891115314745E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999798821088848	WITHOUT_CLASSIFICATION	2.0117891115314745E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999798821088848	WITHOUT_CLASSIFICATION	2.0117891115314745E-5	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999389104106	WITHOUT_CLASSIFICATION	6.108958935519144E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999988419408635	WITHOUT_CLASSIFICATION	1.1580591364344137E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999988419408635	WITHOUT_CLASSIFICATION	1.1580591364344137E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999988419408635	WITHOUT_CLASSIFICATION	1.1580591364344137E-6	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999932317249902	WITHOUT_CLASSIFICATION	6.768275009691566E-6	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999954142500801	WITHOUT_CLASSIFICATION	4.585749919835454E-6	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999978345984262	WITHOUT_CLASSIFICATION	2.165401573809762E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999644806849136	WITHOUT_CLASSIFICATION	3.551931508628787E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999644806849136	WITHOUT_CLASSIFICATION	3.551931508628787E-5	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999903529018	WITHOUT_CLASSIFICATION	9.647098175225787E-9	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999836363699	WITHOUT_CLASSIFICATION	1.6363630125547668E-8	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9998988179988055	WITHOUT_CLASSIFICATION	1.0118200119446996E-4	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9998988179988055	WITHOUT_CLASSIFICATION	1.0118200119446996E-4	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999984323776594	WITHOUT_CLASSIFICATION	1.567622340532084E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999984323776594	WITHOUT_CLASSIFICATION	1.567622340532084E-6	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999298897957	WITHOUT_CLASSIFICATION	7.011020430115688E-8	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999999245510061	WITHOUT_CLASSIFICATION	7.544899391202175E-8	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999952650579473	WITHOUT_CLASSIFICATION	4.734942052714918E-6	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999999461399539	WITHOUT_CLASSIFICATION	5.38600461254423E-8	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999377202084025	WITHOUT_CLASSIFICATION	6.22797915975429E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999923318129114	WITHOUT_CLASSIFICATION	7.668187088650665E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999965703714789	WITHOUT_CLASSIFICATION	3.429628521063051E-6	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999990861183138	WITHOUT_CLASSIFICATION	9.138816862335955E-7	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999997865174531	WITHOUT_CLASSIFICATION	2.1348254687241588E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999994528787322	WITHOUT_CLASSIFICATION	5.47121267777319E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999994528787322	WITHOUT_CLASSIFICATION	5.47121267777319E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999884524340831	WITHOUT_CLASSIFICATION	1.1547565916890608E-5	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999884524340831	WITHOUT_CLASSIFICATION	1.1547565916890608E-5	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999994851871965	WITHOUT_CLASSIFICATION	5.148128035601941E-7	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999988364356914	WITHOUT_CLASSIFICATION	1.163564308642662E-6	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9992771010238871	WITHOUT_CLASSIFICATION	7.22898976112906E-4	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999853727821688	WITHOUT_CLASSIFICATION	1.4627217831104775E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999853727821688	WITHOUT_CLASSIFICATION	1.4627217831104775E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999853727821688	WITHOUT_CLASSIFICATION	1.4627217831104775E-5	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999651325450646	WITHOUT_CLASSIFICATION	3.4867454935412635E-5	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999630751942931	WITHOUT_CLASSIFICATION	3.692480570687563E-5	TEST
// line 513	WITHOUT_CLASSIFICATION	0.999966246927371	WITHOUT_CLASSIFICATION	3.375307262890639E-5	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999662059335384	WITHOUT_CLASSIFICATION	3.3794066461689575E-5	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999636385046771	WITHOUT_CLASSIFICATION	3.6361495322929435E-5	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999634169216999	WITHOUT_CLASSIFICATION	3.658307830017038E-5	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999661334482973	WITHOUT_CLASSIFICATION	3.386655170269419E-5	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999555498120019	WITHOUT_CLASSIFICATION	4.44501879982625E-5	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999995768098856	WITHOUT_CLASSIFICATION	4.231901143009674E-7	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999984862060188	WITHOUT_CLASSIFICATION	1.5137939810727179E-6	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999995595827395	WITHOUT_CLASSIFICATION	4.4041726051937406E-7	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999975365762467	WITHOUT_CLASSIFICATION	2.463423753329393E-6	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999971565522063	WITHOUT_CLASSIFICATION	2.8434477936846303E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999644806849136	WITHOUT_CLASSIFICATION	3.551931508628787E-5	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.999999235025566	WITHOUT_CLASSIFICATION	7.649744340247562E-7	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999997075773094	WITHOUT_CLASSIFICATION	2.9242269062510374E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999993859291655	WITHOUT_CLASSIFICATION	6.14070834417934E-7	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9994142931906331	WITHOUT_CLASSIFICATION	5.85706809366844E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9994142931906331	WITHOUT_CLASSIFICATION	5.85706809366844E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9994142931906331	WITHOUT_CLASSIFICATION	5.85706809366844E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9994142931906331	WITHOUT_CLASSIFICATION	5.85706809366844E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9994142931906331	WITHOUT_CLASSIFICATION	5.85706809366844E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9991462325326019	WITHOUT_CLASSIFICATION	8.537674673980539E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9994142931906331	WITHOUT_CLASSIFICATION	5.85706809366844E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9994142931906331	WITHOUT_CLASSIFICATION	5.85706809366844E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9994142931906331	WITHOUT_CLASSIFICATION	5.85706809366844E-4	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999999439034177	WITHOUT_CLASSIFICATION	5.609658231301319E-8	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.999999429298302	WITHOUT_CLASSIFICATION	5.707016981165946E-7	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999994877061245	WITHOUT_CLASSIFICATION	5.122938754802193E-7	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999791775175225	WITHOUT_CLASSIFICATION	2.082248247755519E-5	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999811510684465	WITHOUT_CLASSIFICATION	1.8848931553476427E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.999999984757742	WITHOUT_CLASSIFICATION	1.52422580490607E-8	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999537449981	WITHOUT_CLASSIFICATION	4.625500194295834E-8	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999644404821086	WITHOUT_CLASSIFICATION	3.5559517891350365E-5	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999685641083357	WITHOUT_CLASSIFICATION	3.143589166432056E-5	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999685641083357	WITHOUT_CLASSIFICATION	3.143589166432056E-5	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999641886499655	WITHOUT_CLASSIFICATION	3.58113500344224E-5	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999629549893865	WITHOUT_CLASSIFICATION	3.704501061357523E-5	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999661928624165	WITHOUT_CLASSIFICATION	3.380713758353435E-5	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999650973662892	WITHOUT_CLASSIFICATION	3.490263371080373E-5	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999650805764737	WITHOUT_CLASSIFICATION	3.4919423526351545E-5	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999629487976386	WITHOUT_CLASSIFICATION	3.705120236144976E-5	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999627096427909	WITHOUT_CLASSIFICATION	3.729035720904056E-5	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999627519912323	WITHOUT_CLASSIFICATION	3.7248008767725146E-5	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999631946082318	WITHOUT_CLASSIFICATION	3.68053917681794E-5	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999661035964036	WITHOUT_CLASSIFICATION	3.3896403596358355E-5	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999670177287651	WITHOUT_CLASSIFICATION	3.298227123494247E-5	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999641852091246	WITHOUT_CLASSIFICATION	3.581479087542205E-5	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999634167318003	WITHOUT_CLASSIFICATION	3.658326819957493E-5	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999629598997613	WITHOUT_CLASSIFICATION	3.7040100238738904E-5	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999631989390391	WITHOUT_CLASSIFICATION	3.680106096089124E-5	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999627035700221	WITHOUT_CLASSIFICATION	3.729642997789472E-5	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999627603967151	WITHOUT_CLASSIFICATION	3.72396032849758E-5	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999669351326246	WITHOUT_CLASSIFICATION	3.3064867375438815E-5	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999641176693456	WITHOUT_CLASSIFICATION	3.5882330654452494E-5	TEST
// line 952	WITHOUT_CLASSIFICATION	0.99996443507186	WITHOUT_CLASSIFICATION	3.556492814008114E-5	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999655793011829	WITHOUT_CLASSIFICATION	3.442069881698542E-5	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999644336860983	WITHOUT_CLASSIFICATION	3.5566313901634095E-5	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999661269870299	WITHOUT_CLASSIFICATION	3.387301297015834E-5	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999718061020693	WITHOUT_CLASSIFICATION	2.8193897930757258E-5	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999705707298913	WITHOUT_CLASSIFICATION	2.9429270108817216E-5	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999699710213575	WITHOUT_CLASSIFICATION	3.0028978642549548E-5	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999693843557914	WITHOUT_CLASSIFICATION	3.061564420851214E-5	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999693785484695	WITHOUT_CLASSIFICATION	3.062145153060027E-5	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999693731211534	WITHOUT_CLASSIFICATION	3.062687884667498E-5	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999705672199082	WITHOUT_CLASSIFICATION	2.943278009175238E-5	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999691331507945	WITHOUT_CLASSIFICATION	3.086684920555662E-5	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999684493656759	WITHOUT_CLASSIFICATION	3.155063432408942E-5	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999678517136119	WITHOUT_CLASSIFICATION	3.2148286388020244E-5	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999676827290975	WITHOUT_CLASSIFICATION	3.2317270902386985E-5	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999711478511835	WITHOUT_CLASSIFICATION	2.885214881660974E-5	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999712001860548	WITHOUT_CLASSIFICATION	2.8799813945161162E-5	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999680451994353	WITHOUT_CLASSIFICATION	3.1954800564700035E-5	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.999968810936143	WITHOUT_CLASSIFICATION	3.118906385705392E-5	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999681000504498	WITHOUT_CLASSIFICATION	3.1899949550170996E-5	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999689057477784	WITHOUT_CLASSIFICATION	3.109425222165463E-5	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999691016580904	WITHOUT_CLASSIFICATION	3.089834190964922E-5	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999711530780797	WITHOUT_CLASSIFICATION	2.8846921920285092E-5	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.999968601025247	WITHOUT_CLASSIFICATION	3.139897475296382E-5	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999675500472462	WITHOUT_CLASSIFICATION	3.244995275380939E-5	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999673928700045	WITHOUT_CLASSIFICATION	3.2607129995623676E-5	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999669332199119	WITHOUT_CLASSIFICATION	3.306678008802395E-5	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999669362186587	WITHOUT_CLASSIFICATION	3.306378134127744E-5	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999677659693303	WITHOUT_CLASSIFICATION	3.2234030669698616E-5	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999684297205087	WITHOUT_CLASSIFICATION	3.157027949122159E-5	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999675418594988	WITHOUT_CLASSIFICATION	3.2458140501246684E-5	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999688457976244	WITHOUT_CLASSIFICATION	3.11542023756226E-5	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999682675500954	WITHOUT_CLASSIFICATION	3.173244990464081E-5	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.99996826398222	WITHOUT_CLASSIFICATION	3.173601777990569E-5	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999693432500197	WITHOUT_CLASSIFICATION	3.065674998025901E-5	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999693432500197	WITHOUT_CLASSIFICATION	3.065674998025901E-5	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999667016360602	WITHOUT_CLASSIFICATION	3.329836393977565E-5	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999706315149169	WITHOUT_CLASSIFICATION	2.93684850831019E-5	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999673492677956	WITHOUT_CLASSIFICATION	3.265073220440802E-5	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999682668436846	WITHOUT_CLASSIFICATION	3.1733156315349515E-5	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999675014635905	WITHOUT_CLASSIFICATION	3.249853640962073E-5	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999685850942527	WITHOUT_CLASSIFICATION	3.14149057472742E-5	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999667036647273	WITHOUT_CLASSIFICATION	3.3296335272694035E-5	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999666922353183	WITHOUT_CLASSIFICATION	3.3307764681730444E-5	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999682086379936	WITHOUT_CLASSIFICATION	3.1791362006363906E-5	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999667477098576	WITHOUT_CLASSIFICATION	3.325229014242017E-5	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9998801390295393	WITHOUT_CLASSIFICATION	1.1986097046060139E-4	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9998801390295393	WITHOUT_CLASSIFICATION	1.1986097046060139E-4	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999109167887351	WITHOUT_CLASSIFICATION	8.908321126482923E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999838422737181	WITHOUT_CLASSIFICATION	1.615772628185321E-5	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999903028652035	WITHOUT_CLASSIFICATION	9.697134796389532E-6	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999394396926	WITHOUT_CLASSIFICATION	6.05603074617192E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999967895532432	WITHOUT_CLASSIFICATION	3.2104467569084335E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999967895532432	WITHOUT_CLASSIFICATION	3.2104467569084335E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999967895532432	WITHOUT_CLASSIFICATION	3.2104467569084335E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999967895532432	WITHOUT_CLASSIFICATION	3.2104467569084335E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999994876601367	WITHOUT_CLASSIFICATION	5.123398633636352E-7	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999999482323196	WITHOUT_CLASSIFICATION	5.1767680357701916E-8	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999666635535222	WITHOUT_CLASSIFICATION	3.3336446477869406E-5	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999638642999156	WITHOUT_CLASSIFICATION	3.6135700084383096E-5	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999672639668753	WITHOUT_CLASSIFICATION	3.273603312467654E-5	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999665350939692	WITHOUT_CLASSIFICATION	3.3464906030882843E-5	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999664744716711	WITHOUT_CLASSIFICATION	3.352552832897935E-5	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999647440496919	WITHOUT_CLASSIFICATION	3.525595030798711E-5	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999660850918707	WITHOUT_CLASSIFICATION	3.391490812928616E-5	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999653128200853	WITHOUT_CLASSIFICATION	3.468717991478789E-5	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999626290245759	WITHOUT_CLASSIFICATION	3.7370975424086144E-5	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999644455798908	WITHOUT_CLASSIFICATION	3.555442010911133E-5	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999653730351266	WITHOUT_CLASSIFICATION	3.462696487345274E-5	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999633700478389	WITHOUT_CLASSIFICATION	3.6629952161077486E-5	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999627031992706	WITHOUT_CLASSIFICATION	3.729680072938569E-5	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999656494688873	WITHOUT_CLASSIFICATION	3.435053111273439E-5	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999627012704997	WITHOUT_CLASSIFICATION	3.729872950041253E-5	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999657796470854	WITHOUT_CLASSIFICATION	3.42203529145403E-5	TEST
// line 823	WITHOUT_CLASSIFICATION	0.999965099983828	WITHOUT_CLASSIFICATION	3.490001617199095E-5	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999631898800636	WITHOUT_CLASSIFICATION	3.681011993629426E-5	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999644443976028	WITHOUT_CLASSIFICATION	3.5555602397232134E-5	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999647464568947	WITHOUT_CLASSIFICATION	3.5253543105245275E-5	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999641731379925	WITHOUT_CLASSIFICATION	3.582686200755562E-5	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999627956212181	WITHOUT_CLASSIFICATION	3.720437878186827E-5	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999643785044243	WITHOUT_CLASSIFICATION	3.562149557565584E-5	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999695408369211	WITHOUT_CLASSIFICATION	3.045916307884356E-5	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999707680703418	WITHOUT_CLASSIFICATION	2.923192965823024E-5	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999700574713732	WITHOUT_CLASSIFICATION	2.9942528626712366E-5	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999706134395301	WITHOUT_CLASSIFICATION	2.9386560469934826E-5	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999682689891218	WITHOUT_CLASSIFICATION	3.173101087814116E-5	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999677415914076	WITHOUT_CLASSIFICATION	3.225840859248792E-5	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999691463510423	WITHOUT_CLASSIFICATION	3.085364895763007E-5	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.999968972856343	WITHOUT_CLASSIFICATION	3.102714365694686E-5	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999681036434668	WITHOUT_CLASSIFICATION	3.1896356533195885E-5	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999681107768794	WITHOUT_CLASSIFICATION	3.1889223120543755E-5	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999703051556814	WITHOUT_CLASSIFICATION	2.9694844318508894E-5	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999676798323064	WITHOUT_CLASSIFICATION	3.232016769352391E-5	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999674903449566	WITHOUT_CLASSIFICATION	3.250965504347384E-5	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999688389162772	WITHOUT_CLASSIFICATION	3.11610837227257E-5	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999673417987769	WITHOUT_CLASSIFICATION	3.265820122303284E-5	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999707841076808	WITHOUT_CLASSIFICATION	2.9215892319173576E-5	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999675182323373	WITHOUT_CLASSIFICATION	3.248176766273082E-5	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999669363288921	WITHOUT_CLASSIFICATION	3.306367110785587E-5	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999672937450196	WITHOUT_CLASSIFICATION	3.270625498041165E-5	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999667461544273	WITHOUT_CLASSIFICATION	3.3253845572747334E-5	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999667527293894	WITHOUT_CLASSIFICATION	3.324727061060575E-5	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999677736754424	WITHOUT_CLASSIFICATION	3.222632455765246E-5	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999667073354104	WITHOUT_CLASSIFICATION	3.329266458964534E-5	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999680751439006	WITHOUT_CLASSIFICATION	3.1924856099407945E-5	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999675905889083	WITHOUT_CLASSIFICATION	3.240941109171022E-5	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999666915522263	WITHOUT_CLASSIFICATION	3.330844777359874E-5	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999671441811074	WITHOUT_CLASSIFICATION	3.285581889251173E-5	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999682821752784	WITHOUT_CLASSIFICATION	3.17178247214738E-5	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999673456813961	WITHOUT_CLASSIFICATION	3.265431860390542E-5	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999667473683252	WITHOUT_CLASSIFICATION	3.325263167470209E-5	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999680245003445	WITHOUT_CLASSIFICATION	3.1975499655441694E-5	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999692794201374	WITHOUT_CLASSIFICATION	3.0720579862683475E-5	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999682077907321	WITHOUT_CLASSIFICATION	3.179220926797444E-5	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999703803455089	WITHOUT_CLASSIFICATION	2.9619654491108854E-5	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999964510942254	WITHOUT_CLASSIFICATION	3.5489057745991505E-6	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999983316316469	WITHOUT_CLASSIFICATION	1.668368353150922E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999978239765649	WITHOUT_CLASSIFICATION	2.1760234350559596E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999978239765649	WITHOUT_CLASSIFICATION	2.1760234350559596E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999978239765649	WITHOUT_CLASSIFICATION	2.1760234350559596E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999978239765649	WITHOUT_CLASSIFICATION	2.1760234350559596E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999978239765649	WITHOUT_CLASSIFICATION	2.1760234350559596E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999978239765649	WITHOUT_CLASSIFICATION	2.1760234350559596E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999978239765649	WITHOUT_CLASSIFICATION	2.1760234350559596E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999982640260209	WITHOUT_CLASSIFICATION	1.7359739791330637E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999982640260209	WITHOUT_CLASSIFICATION	1.7359739791330637E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999982640260209	WITHOUT_CLASSIFICATION	1.7359739791330637E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999982640260209	WITHOUT_CLASSIFICATION	1.7359739791330637E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999968856370791	WITHOUT_CLASSIFICATION	3.1143629208901325E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999968856370791	WITHOUT_CLASSIFICATION	3.1143629208901325E-6	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999994289626	WITHOUT_CLASSIFICATION	5.710374707119863E-10	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999761195299	WITHOUT_CLASSIFICATION	2.388047010063379E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999761195299	WITHOUT_CLASSIFICATION	2.388047010063379E-7	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999976471760533	WITHOUT_CLASSIFICATION	2.35282394663149E-6	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999922286931797	WITHOUT_CLASSIFICATION	7.771306820339159E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999719589529	WITHOUT_CLASSIFICATION	2.8041047105928015E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999719589529	WITHOUT_CLASSIFICATION	2.8041047105928015E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999719589529	WITHOUT_CLASSIFICATION	2.8041047105928015E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999719589529	WITHOUT_CLASSIFICATION	2.8041047105928015E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999719589529	WITHOUT_CLASSIFICATION	2.8041047105928015E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999719589529	WITHOUT_CLASSIFICATION	2.8041047105928015E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999719589529	WITHOUT_CLASSIFICATION	2.8041047105928015E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995396110328	WITHOUT_CLASSIFICATION	4.603889671145385E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993681870402	WITHOUT_CLASSIFICATION	6.318129598085097E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999934447211029	WITHOUT_CLASSIFICATION	6.555278897221228E-6	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999934447211029	WITHOUT_CLASSIFICATION	6.555278897221228E-6	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999975867549533	WITHOUT_CLASSIFICATION	2.413245046660876E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999953672889328	WITHOUT_CLASSIFICATION	4.632711067308235E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999953672889328	WITHOUT_CLASSIFICATION	4.632711067308235E-6	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999948823886	WITHOUT_CLASSIFICATION	5.1176114634246055E-9	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999999989751714	WITHOUT_CLASSIFICATION	1.0248285841164955E-9	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999996859014	WITHOUT_CLASSIFICATION	3.1409860009150247E-7	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999999313721827	WITHOUT_CLASSIFICATION	6.86278173613888E-8	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999982221163427	WITHOUT_CLASSIFICATION	1.7778836573453506E-6	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999995913355652	WITHOUT_CLASSIFICATION	4.086644347990187E-6	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999987195418663	WITHOUT_CLASSIFICATION	1.2804581336635378E-6	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999962206880341	WITHOUT_CLASSIFICATION	3.7793119658810117E-6	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999998277408947	WITHOUT_CLASSIFICATION	1.722591053859349E-7	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999986998941313	WITHOUT_CLASSIFICATION	1.300105868790966E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999432248965151	WITHOUT_CLASSIFICATION	5.67751034848513E-5	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999877325095	WITHOUT_CLASSIFICATION	1.2267490424128793E-8	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.999999064222867	WITHOUT_CLASSIFICATION	9.357771330912797E-7	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.999999997219155	WITHOUT_CLASSIFICATION	2.7808450861717372E-9	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999659487788	WITHOUT_CLASSIFICATION	3.4051221200006794E-5	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999998670992427	WITHOUT_CLASSIFICATION	1.3290075736182746E-7	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999994541997521	WITHOUT_CLASSIFICATION	5.458002479464785E-7	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999877337994052	WITHOUT_CLASSIFICATION	1.2266200594861082E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999969839697758	WITHOUT_CLASSIFICATION	3.016030224162832E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999969839697758	WITHOUT_CLASSIFICATION	3.016030224162832E-6	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999993269243129	WITHOUT_CLASSIFICATION	6.730756871255072E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999957111318075	WITHOUT_CLASSIFICATION	4.288868192499438E-6	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999996685347802	WITHOUT_CLASSIFICATION	3.3146521984552376E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9993018081362158	WITHOUT_CLASSIFICATION	6.981918637842262E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998195666057912	WITHOUT_CLASSIFICATION	1.8043339420882988E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998195666057912	WITHOUT_CLASSIFICATION	1.8043339420882988E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9998195666057912	WITHOUT_CLASSIFICATION	1.8043339420882988E-4	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999963096330288	WITHOUT_CLASSIFICATION	3.690366971293151E-6	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999986322836286	WITHOUT_CLASSIFICATION	1.3677163712808887E-6	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999992671478681	WITHOUT_CLASSIFICATION	7.328521319898934E-7	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999997760574335	WITHOUT_CLASSIFICATION	2.2394256653139308E-7	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.999999971080036	WITHOUT_CLASSIFICATION	2.8919963888929716E-8	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999996181364241	WITHOUT_CLASSIFICATION	3.818635757977632E-7	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999995390691478	WITHOUT_CLASSIFICATION	4.609308520898489E-7	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999985347521742	WITHOUT_CLASSIFICATION	1.465247825787926E-6	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999994427440365	WITHOUT_CLASSIFICATION	5.572559635341284E-7	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999982132326356	WITHOUT_CLASSIFICATION	1.7867673643566866E-6	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999820969844806	WITHOUT_CLASSIFICATION	1.790301551951465E-5	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999998933143659	WITHOUT_CLASSIFICATION	1.0668563408063346E-7	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.999998717482691	WITHOUT_CLASSIFICATION	1.2825173090397883E-6	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999985009876867	WITHOUT_CLASSIFICATION	1.49901231325883E-6	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999435754015	WITHOUT_CLASSIFICATION	5.642459856430049E-8	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999997165311743	WITHOUT_CLASSIFICATION	2.8346882578430646E-7	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.99999918843016	WITHOUT_CLASSIFICATION	8.115698400721837E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999998046098884	WITHOUT_CLASSIFICATION	1.9539011170404114E-7	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.999998592581033	WITHOUT_CLASSIFICATION	1.407418966966011E-6	TEST
