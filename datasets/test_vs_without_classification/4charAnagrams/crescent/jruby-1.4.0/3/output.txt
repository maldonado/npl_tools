// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999965014395253	WITHOUT_CLASSIFICATION	3.4985604746262236E-6	TEST
// TODO make an assert here	TEST	0.9999944390876567	WITHOUT_CLASSIFICATION	5.560912343227034E-6	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.9999890251442997	WITHOUT_CLASSIFICATION	1.0974855700281888E-5	TEST
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9999994338185628	WITHOUT_CLASSIFICATION	5.661814372558803E-7	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9999876999969665	WITHOUT_CLASSIFICATION	1.2300003033602867E-5	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999912976348936	WITHOUT_CLASSIFICATION	8.702365106394266E-6	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999994891209725	WITHOUT_CLASSIFICATION	5.108790275526813E-7	TEST
// line 335	WITHOUT_CLASSIFICATION	0.999992462773935	WITHOUT_CLASSIFICATION	7.537226064953196E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999240488310094	WITHOUT_CLASSIFICATION	7.595116899061534E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999240488310094	WITHOUT_CLASSIFICATION	7.595116899061534E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997359059287617	WITHOUT_CLASSIFICATION	2.640940712382971E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997359059287617	WITHOUT_CLASSIFICATION	2.640940712382971E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998982826099708	WITHOUT_CLASSIFICATION	1.0171739002917033E-4	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999989024921061	WITHOUT_CLASSIFICATION	1.0975078938809094E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999930504842867	WITHOUT_CLASSIFICATION	6.949515713283638E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.999993118870784	WITHOUT_CLASSIFICATION	6.881129215893798E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999375592976336	WITHOUT_CLASSIFICATION	6.244070236638962E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999375592976336	WITHOUT_CLASSIFICATION	6.244070236638962E-5	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999940602405575	WITHOUT_CLASSIFICATION	5.939759442541048E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999433091569213	WITHOUT_CLASSIFICATION	5.669084307876009E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999433091569213	WITHOUT_CLASSIFICATION	5.669084307876009E-5	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9999588620868237	WITHOUT_CLASSIFICATION	4.1137913176309095E-5	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999636264745312	WITHOUT_CLASSIFICATION	3.637352546880849E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999195486449755	WITHOUT_CLASSIFICATION	8.045135502453753E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999195486449755	WITHOUT_CLASSIFICATION	8.045135502453753E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999195486449755	WITHOUT_CLASSIFICATION	8.045135502453753E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999195486449755	WITHOUT_CLASSIFICATION	8.045135502453753E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999195486449755	WITHOUT_CLASSIFICATION	8.045135502453753E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999195486449755	WITHOUT_CLASSIFICATION	8.045135502453753E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999195486449755	WITHOUT_CLASSIFICATION	8.045135502453753E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997573554958714	WITHOUT_CLASSIFICATION	2.4264450412864874E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997573554958714	WITHOUT_CLASSIFICATION	2.4264450412864874E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997573554958714	WITHOUT_CLASSIFICATION	2.4264450412864874E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997573554958714	WITHOUT_CLASSIFICATION	2.4264450412864874E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997573554958714	WITHOUT_CLASSIFICATION	2.4264450412864874E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997573554958714	WITHOUT_CLASSIFICATION	2.4264450412864874E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997573554958714	WITHOUT_CLASSIFICATION	2.4264450412864874E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998952955146054	WITHOUT_CLASSIFICATION	1.0470448539466609E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998952955146054	WITHOUT_CLASSIFICATION	1.0470448539466609E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998952955146054	WITHOUT_CLASSIFICATION	1.0470448539466609E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998952955146054	WITHOUT_CLASSIFICATION	1.0470448539466609E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998952955146054	WITHOUT_CLASSIFICATION	1.0470448539466609E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998952955146054	WITHOUT_CLASSIFICATION	1.0470448539466609E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999425950595472	WITHOUT_CLASSIFICATION	5.7404940452763755E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999425950595472	WITHOUT_CLASSIFICATION	5.7404940452763755E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999425950595472	WITHOUT_CLASSIFICATION	5.7404940452763755E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999425950595472	WITHOUT_CLASSIFICATION	5.7404940452763755E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999425950595472	WITHOUT_CLASSIFICATION	5.7404940452763755E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999425950595472	WITHOUT_CLASSIFICATION	5.7404940452763755E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999478812242876	WITHOUT_CLASSIFICATION	5.211877571248437E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999478812242876	WITHOUT_CLASSIFICATION	5.211877571248437E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999478812242876	WITHOUT_CLASSIFICATION	5.211877571248437E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999478812242876	WITHOUT_CLASSIFICATION	5.211877571248437E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999478812242876	WITHOUT_CLASSIFICATION	5.211877571248437E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999478812242876	WITHOUT_CLASSIFICATION	5.211877571248437E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999478812242876	WITHOUT_CLASSIFICATION	5.211877571248437E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999954375735454	WITHOUT_CLASSIFICATION	4.5624264545959956E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999954375735454	WITHOUT_CLASSIFICATION	4.5624264545959956E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999954375735454	WITHOUT_CLASSIFICATION	4.5624264545959956E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999954375735454	WITHOUT_CLASSIFICATION	4.5624264545959956E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999353681177162	WITHOUT_CLASSIFICATION	6.463188228379047E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999353681177162	WITHOUT_CLASSIFICATION	6.463188228379047E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.999994791387221	WITHOUT_CLASSIFICATION	5.208612778997299E-6	TEST
// return result	WITHOUT_CLASSIFICATION	0.999995874172678	WITHOUT_CLASSIFICATION	4.125827322036681E-6	TEST
// name	WITHOUT_CLASSIFICATION	0.9999967468079008	WITHOUT_CLASSIFICATION	3.2531920990658546E-6	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999969813221612	WITHOUT_CLASSIFICATION	3.0186778386601752E-6	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.999997548185074	WITHOUT_CLASSIFICATION	2.451814925882143E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999941181450342	WITHOUT_CLASSIFICATION	5.881854965778674E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999941181450342	WITHOUT_CLASSIFICATION	5.881854965778674E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999941181450342	WITHOUT_CLASSIFICATION	5.881854965778674E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999941181450342	WITHOUT_CLASSIFICATION	5.881854965778674E-6	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999951575666527	WITHOUT_CLASSIFICATION	4.8424333472703665E-6	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.999997869026895	WITHOUT_CLASSIFICATION	2.130973104987418E-6	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999939274535079	WITHOUT_CLASSIFICATION	6.072546492147681E-6	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999924618517382	WITHOUT_CLASSIFICATION	7.538148261774063E-6	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.999998776895222	WITHOUT_CLASSIFICATION	1.2231047780346673E-6	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999973954626843	WITHOUT_CLASSIFICATION	2.604537315646447E-6	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999963061903548	WITHOUT_CLASSIFICATION	3.693809645122875E-6	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999998228182403	WITHOUT_CLASSIFICATION	1.7718175973818326E-7	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999988205179	WITHOUT_CLASSIFICATION	1.1794820316447406E-9	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999969335300495	WITHOUT_CLASSIFICATION	3.0664699504664088E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999994521044425	WITHOUT_CLASSIFICATION	5.478955575459886E-7	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999940188001886	WITHOUT_CLASSIFICATION	5.981199811453691E-6	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999939188716657	WITHOUT_CLASSIFICATION	6.081128334335415E-6	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999944984456212	WITHOUT_CLASSIFICATION	5.501554378918857E-6	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999996770398523	WITHOUT_CLASSIFICATION	3.229601476883381E-6	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999942964898367	WITHOUT_CLASSIFICATION	5.7035101633104344E-6	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999994276208428	WITHOUT_CLASSIFICATION	5.723791571170687E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999941181450342	WITHOUT_CLASSIFICATION	5.881854965778674E-6	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999986288455894	WITHOUT_CLASSIFICATION	1.3711544104823987E-6	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999962990665816	WITHOUT_CLASSIFICATION	3.7009334183429114E-6	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999939522059496	WITHOUT_CLASSIFICATION	6.04779405042793E-6	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999459040657737	WITHOUT_CLASSIFICATION	5.409593422633258E-5	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.999991856820338	WITHOUT_CLASSIFICATION	8.14317966198542E-6	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999953255289733	WITHOUT_CLASSIFICATION	4.674471026683108E-6	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999976536954487	WITHOUT_CLASSIFICATION	2.3463045513216307E-6	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999999047203841	WITHOUT_CLASSIFICATION	9.527961588259296E-8	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.999999903887921	WITHOUT_CLASSIFICATION	9.61120790208206E-8	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999999830429424	WITHOUT_CLASSIFICATION	1.695705766878507E-8	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999973407947479	WITHOUT_CLASSIFICATION	2.6592052521532675E-6	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999946969899979	WITHOUT_CLASSIFICATION	5.3030100020332795E-6	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999993329720366	WITHOUT_CLASSIFICATION	6.670279634046624E-7	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999702255419883	WITHOUT_CLASSIFICATION	2.9774458011607824E-5	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.999953333631469	WITHOUT_CLASSIFICATION	4.666636853094432E-5	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.999981371495278	WITHOUT_CLASSIFICATION	1.8628504722005416E-5	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999941052871156	WITHOUT_CLASSIFICATION	5.894712884452324E-6	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999992572373331	WITHOUT_CLASSIFICATION	7.427626669971115E-7	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9998482149795149	WITHOUT_CLASSIFICATION	1.51785020485171E-4	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999990526593406	WITHOUT_CLASSIFICATION	9.473406594347387E-7	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999982008001311	WITHOUT_CLASSIFICATION	1.7991998688756699E-6	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999764046604472	WITHOUT_CLASSIFICATION	2.359533955271508E-5	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999916363398932	WITHOUT_CLASSIFICATION	8.363660106753736E-6	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9998981683906554	WITHOUT_CLASSIFICATION	1.0183160934461544E-4	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999982513568745	WITHOUT_CLASSIFICATION	1.7486431255086688E-6	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.999991509184622	WITHOUT_CLASSIFICATION	8.490815378035239E-6	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999658409115082	WITHOUT_CLASSIFICATION	3.415908849191552E-5	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999996847155679	WITHOUT_CLASSIFICATION	3.152844320749166E-7	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999986707238739	WITHOUT_CLASSIFICATION	1.329276125982078E-6	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999988304448038	WITHOUT_CLASSIFICATION	1.1695551962743608E-6	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999945078368758	WITHOUT_CLASSIFICATION	5.492163124120546E-6	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999978077839485	WITHOUT_CLASSIFICATION	2.192216051538845E-6	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999968842254267	WITHOUT_CLASSIFICATION	3.115774573381676E-6	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999996014964972	WITHOUT_CLASSIFICATION	3.985035028097313E-7	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999997480234787	WITHOUT_CLASSIFICATION	2.519765213865634E-7	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999989543683137	WITHOUT_CLASSIFICATION	1.0456316864312395E-6	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999983454907378	WITHOUT_CLASSIFICATION	1.6545092621918112E-6	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999989067815793	WITHOUT_CLASSIFICATION	1.093218420655469E-6	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999997378903962	WITHOUT_CLASSIFICATION	2.621096037349449E-7	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999880376916492	WITHOUT_CLASSIFICATION	1.196230835080693E-5	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999998328396078	WITHOUT_CLASSIFICATION	1.671603922619373E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999959534802535	WITHOUT_CLASSIFICATION	4.046519746435585E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999998633121117	WITHOUT_CLASSIFICATION	1.366878883231619E-7	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999923674122365	WITHOUT_CLASSIFICATION	7.632587763491655E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999923674122365	WITHOUT_CLASSIFICATION	7.632587763491655E-6	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999966599137791	WITHOUT_CLASSIFICATION	3.340086220904147E-6	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999995614375434	WITHOUT_CLASSIFICATION	4.3856245660851243E-7	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999946454742317	WITHOUT_CLASSIFICATION	5.354525768352769E-6	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999995754794203	WITHOUT_CLASSIFICATION	4.245205797480069E-7	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999921970154478	WITHOUT_CLASSIFICATION	7.802984552143844E-6	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999975983413368	WITHOUT_CLASSIFICATION	2.401658663168333E-6	TEST
// ???	WITHOUT_CLASSIFICATION	0.9999771741031394	WITHOUT_CLASSIFICATION	2.282589686068445E-5	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999803770002674	WITHOUT_CLASSIFICATION	1.9622999732624203E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999959534802535	WITHOUT_CLASSIFICATION	4.046519746435585E-6	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999983136047439	WITHOUT_CLASSIFICATION	1.686395256045668E-6	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999893815069871	WITHOUT_CLASSIFICATION	1.06184930129043E-5	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999990589338102	WITHOUT_CLASSIFICATION	9.410661898167937E-7	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999736570258	WITHOUT_CLASSIFICATION	2.6342974241604844E-8	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999942770866215	WITHOUT_CLASSIFICATION	5.722913378545048E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999972819000611	WITHOUT_CLASSIFICATION	2.7180999389764573E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999972819000611	WITHOUT_CLASSIFICATION	2.7180999389764573E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999972819000611	WITHOUT_CLASSIFICATION	2.7180999389764573E-6	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999994233259853	WITHOUT_CLASSIFICATION	5.766740146374453E-7	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999930024636231	WITHOUT_CLASSIFICATION	6.9975363768830905E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999987136142954	WITHOUT_CLASSIFICATION	1.286385704657639E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999976364628438	WITHOUT_CLASSIFICATION	2.3635371561681284E-6	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999997152642618	WITHOUT_CLASSIFICATION	2.847357382192656E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999941974597977	WITHOUT_CLASSIFICATION	5.802540202265052E-6	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999981131201297	WITHOUT_CLASSIFICATION	1.8868798703346988E-6	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999996774255437	WITHOUT_CLASSIFICATION	3.2257445620116575E-7	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999948759549487	WITHOUT_CLASSIFICATION	5.12404505132837E-6	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999948759549487	WITHOUT_CLASSIFICATION	5.12404505132837E-6	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999856573963961	WITHOUT_CLASSIFICATION	1.4342603603804723E-5	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999957541034379	WITHOUT_CLASSIFICATION	4.245896562060822E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999969246985738	WITHOUT_CLASSIFICATION	3.0753014262016395E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999969246985738	WITHOUT_CLASSIFICATION	3.0753014262016395E-6	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999995033793777	WITHOUT_CLASSIFICATION	4.966206221864175E-7	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.999998768732157	WITHOUT_CLASSIFICATION	1.2312678429645283E-6	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999103520302468	WITHOUT_CLASSIFICATION	8.964796975311912E-5	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999997903158001	WITHOUT_CLASSIFICATION	2.096841997787688E-7	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999968947293804	WITHOUT_CLASSIFICATION	3.1052706196855613E-6	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999969180324114	WITHOUT_CLASSIFICATION	3.0819675886764E-6	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999766764225758	WITHOUT_CLASSIFICATION	2.3323577424150015E-5	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.999992694835257	WITHOUT_CLASSIFICATION	7.305164743013093E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999964535415685	WITHOUT_CLASSIFICATION	3.5464584315000755E-6	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999982541367325	WITHOUT_CLASSIFICATION	1.7458632675262255E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999959534802535	WITHOUT_CLASSIFICATION	4.046519746435585E-6	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999881210161049	WITHOUT_CLASSIFICATION	1.1878983895026869E-5	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999979077938944	WITHOUT_CLASSIFICATION	2.0922061055735807E-6	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.999996543718087	WITHOUT_CLASSIFICATION	3.4562819129676025E-6	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.999998512908126	WITHOUT_CLASSIFICATION	1.487091874068448E-6	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999989117470162	WITHOUT_CLASSIFICATION	1.088252983914758E-6	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999878191987158	WITHOUT_CLASSIFICATION	1.2180801284099473E-5	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999919592901598	WITHOUT_CLASSIFICATION	8.040709840186455E-6	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999939224823309	WITHOUT_CLASSIFICATION	6.0775176691529245E-6	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999988135014302	WITHOUT_CLASSIFICATION	1.1864985698803635E-6	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999989014295564	WITHOUT_CLASSIFICATION	1.0985704436445709E-6	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999991615571132	WITHOUT_CLASSIFICATION	8.384428867698096E-7	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999997786818726	WITHOUT_CLASSIFICATION	2.2131812739300927E-7	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.999999427772663	WITHOUT_CLASSIFICATION	5.722273368785477E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999913926329445	WITHOUT_CLASSIFICATION	8.60736705560687E-6	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999894203165509	WITHOUT_CLASSIFICATION	1.0579683449043665E-5	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999988141877815	WITHOUT_CLASSIFICATION	1.1858122184528892E-6	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999980097470824	WITHOUT_CLASSIFICATION	1.990252917544084E-6	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999977752456926	WITHOUT_CLASSIFICATION	2.2247543074310612E-6	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999988245556579	WITHOUT_CLASSIFICATION	1.1754443419787455E-6	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999997753762534	WITHOUT_CLASSIFICATION	2.246237465239239E-7	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999989742657589	WITHOUT_CLASSIFICATION	1.0257342410823955E-6	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999992254905767	WITHOUT_CLASSIFICATION	7.745094232866736E-7	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.999999184815383	WITHOUT_CLASSIFICATION	8.151846168939977E-7	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999955311184393	WITHOUT_CLASSIFICATION	4.468881560745303E-6	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999988184366332	WITHOUT_CLASSIFICATION	1.1815633668399813E-6	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999995969220853	WITHOUT_CLASSIFICATION	4.0307791479058856E-7	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999957708126562	WITHOUT_CLASSIFICATION	4.2291873438812756E-6	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999981981130275	WITHOUT_CLASSIFICATION	1.801886972508514E-6	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999996725222875	WITHOUT_CLASSIFICATION	3.274777125856844E-7	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999928126126679	WITHOUT_CLASSIFICATION	7.1873873321028E-6	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999992340435373	WITHOUT_CLASSIFICATION	7.659564627446182E-7	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999992793575351	WITHOUT_CLASSIFICATION	7.206424648893492E-7	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999824329618029	WITHOUT_CLASSIFICATION	1.7567038197172608E-5	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999997937308834	WITHOUT_CLASSIFICATION	2.062691166132042E-7	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999852887417138	WITHOUT_CLASSIFICATION	1.4711258286327334E-5	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999731451374789	WITHOUT_CLASSIFICATION	2.685486252094922E-5	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999991941877935	WITHOUT_CLASSIFICATION	8.058122065185271E-7	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999965218157271	WITHOUT_CLASSIFICATION	3.47818427300768E-6	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999987231994748	WITHOUT_CLASSIFICATION	1.276800525200361E-6	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999983865058023	WITHOUT_CLASSIFICATION	1.6134941976965644E-6	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999994843201028	WITHOUT_CLASSIFICATION	5.156798972199479E-7	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999966771950534	WITHOUT_CLASSIFICATION	3.322804946617933E-6	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999985166013358	WITHOUT_CLASSIFICATION	1.483398664254124E-6	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999981623018965	WITHOUT_CLASSIFICATION	1.8376981034380744E-6	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999973730045076	WITHOUT_CLASSIFICATION	2.6269954924752644E-6	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999947259285541	WITHOUT_CLASSIFICATION	5.27407144586635E-6	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999985179816452	WITHOUT_CLASSIFICATION	1.4820183547791416E-6	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999986652113674	WITHOUT_CLASSIFICATION	1.3347886326687606E-6	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999991031482394	WITHOUT_CLASSIFICATION	8.968517605753138E-7	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999998108187429	WITHOUT_CLASSIFICATION	1.891812571469377E-7	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999997613611773	WITHOUT_CLASSIFICATION	2.3863882265278064E-7	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999989687420452	WITHOUT_CLASSIFICATION	1.0312579547461256E-6	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999994839503283	WITHOUT_CLASSIFICATION	5.16049671563088E-7	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999987468360407	WITHOUT_CLASSIFICATION	1.2531639593176316E-6	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999995439740372	WITHOUT_CLASSIFICATION	4.5602596272925604E-7	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999993440647699	WITHOUT_CLASSIFICATION	6.559352301283698E-7	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9998755859755118	WITHOUT_CLASSIFICATION	1.24414024488111E-4	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999998919667085	WITHOUT_CLASSIFICATION	1.0803329155619652E-7	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999967823323248	WITHOUT_CLASSIFICATION	3.217667675123613E-6	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999987242887981	WITHOUT_CLASSIFICATION	1.2757112018343942E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999794213952441	WITHOUT_CLASSIFICATION	2.0578604755843082E-5	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999794213952441	WITHOUT_CLASSIFICATION	2.0578604755843082E-5	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999803444822555	WITHOUT_CLASSIFICATION	1.9655517744608803E-5	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999803444822555	WITHOUT_CLASSIFICATION	1.9655517744608803E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999870272468228	WITHOUT_CLASSIFICATION	1.2972753177322743E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999870272468228	WITHOUT_CLASSIFICATION	1.2972753177322743E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999809510120411	WITHOUT_CLASSIFICATION	1.9048987958931994E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999809510120411	WITHOUT_CLASSIFICATION	1.9048987958931994E-5	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999992546159276	WITHOUT_CLASSIFICATION	7.453840723313393E-7	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999979683671002	WITHOUT_CLASSIFICATION	2.0316328998710215E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999947656776862	WITHOUT_CLASSIFICATION	5.2343223138580714E-6	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999993865331994	WITHOUT_CLASSIFICATION	6.134668005735997E-7	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999990016871644	WITHOUT_CLASSIFICATION	9.983128356870963E-7	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.999999472901315	WITHOUT_CLASSIFICATION	5.27098685035564E-7	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.999981028044267	WITHOUT_CLASSIFICATION	1.897195573295005E-5	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999977790458542	WITHOUT_CLASSIFICATION	2.2209541457969627E-6	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999973713292926	WITHOUT_CLASSIFICATION	2.628670707329791E-6	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999956931388493	WITHOUT_CLASSIFICATION	4.306861150812341E-6	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999990970306323	WITHOUT_CLASSIFICATION	9.029693676767664E-7	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999969536341617	WITHOUT_CLASSIFICATION	3.0463658382302927E-6	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999864166844135	WITHOUT_CLASSIFICATION	1.358331558641571E-5	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999991338495295	WITHOUT_CLASSIFICATION	8.661504704405826E-7	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999977106138146	WITHOUT_CLASSIFICATION	2.289386185389901E-6	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999876304158715	WITHOUT_CLASSIFICATION	1.2369584128577047E-5	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999995302618508	WITHOUT_CLASSIFICATION	4.697381492051267E-7	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999957534318084	WITHOUT_CLASSIFICATION	4.246568191626407E-6	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.999997341997696	WITHOUT_CLASSIFICATION	2.6580023040210573E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.999915315949484	WITHOUT_CLASSIFICATION	8.468405051597034E-5	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999980000574106	WITHOUT_CLASSIFICATION	1.9999425894260105E-6	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.999999416064915	WITHOUT_CLASSIFICATION	5.839350849145248E-7	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999973023058149	WITHOUT_CLASSIFICATION	2.697694185127331E-6	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999985424454172	WITHOUT_CLASSIFICATION	1.4575545827702054E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999994641758684	WITHOUT_CLASSIFICATION	5.35824131554736E-7	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999996518551766	WITHOUT_CLASSIFICATION	3.481448234906815E-7	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999968485698486	WITHOUT_CLASSIFICATION	3.151430151442635E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999960342465444	WITHOUT_CLASSIFICATION	3.965753455592094E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999960342465444	WITHOUT_CLASSIFICATION	3.965753455592094E-6	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999979935104142	WITHOUT_CLASSIFICATION	2.0064895858584175E-6	TEST
// string given	WITHOUT_CLASSIFICATION	0.999997759366727	WITHOUT_CLASSIFICATION	2.24063327302811E-6	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999958975898028	WITHOUT_CLASSIFICATION	4.1024101972367384E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999999667772901	WITHOUT_CLASSIFICATION	3.3222709968642204E-8	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999956934592505	WITHOUT_CLASSIFICATION	4.306540749460943E-6	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999745584218104	WITHOUT_CLASSIFICATION	2.5441578189569196E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.999995643605267	WITHOUT_CLASSIFICATION	4.356394732944618E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.999995643605267	WITHOUT_CLASSIFICATION	4.356394732944618E-6	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999923267247065	WITHOUT_CLASSIFICATION	7.673275293450045E-6	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9999823310135151	WITHOUT_CLASSIFICATION	1.7668986484945185E-5	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999901343476025	WITHOUT_CLASSIFICATION	9.86565239744287E-6	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999901343476025	WITHOUT_CLASSIFICATION	9.86565239744287E-6	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999993302289365	WITHOUT_CLASSIFICATION	6.697710635774838E-7	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999911089872808	WITHOUT_CLASSIFICATION	8.891012719239179E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999911089872808	WITHOUT_CLASSIFICATION	8.891012719239179E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999689221913298	WITHOUT_CLASSIFICATION	3.107780867020269E-5	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999689221913298	WITHOUT_CLASSIFICATION	3.107780867020269E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999859179668396	WITHOUT_CLASSIFICATION	1.4082033160458906E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999859179668396	WITHOUT_CLASSIFICATION	1.4082033160458906E-5	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9999799274933175	WITHOUT_CLASSIFICATION	2.0072506682338566E-5	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999964237666906	WITHOUT_CLASSIFICATION	3.57623330948214E-6	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999997798266612	WITHOUT_CLASSIFICATION	2.2017333871182468E-7	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999989378150044	WITHOUT_CLASSIFICATION	1.0621849955444925E-6	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999998988476497	WITHOUT_CLASSIFICATION	1.0115235016846558E-7	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999994425715022	WITHOUT_CLASSIFICATION	5.574284978356871E-7	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999998975824779	WITHOUT_CLASSIFICATION	1.0241752209375295E-6	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999972866699262	WITHOUT_CLASSIFICATION	2.713330073954482E-6	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999998975824779	WITHOUT_CLASSIFICATION	1.0241752209375295E-6	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999670034308857	WITHOUT_CLASSIFICATION	3.299656911419903E-5	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999990789763582	WITHOUT_CLASSIFICATION	9.210236417586851E-7	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999899250625812	WITHOUT_CLASSIFICATION	1.0074937418738124E-5	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999943063861125	WITHOUT_CLASSIFICATION	5.693613887438204E-6	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999966272130466	WITHOUT_CLASSIFICATION	3.372786953452687E-6	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999886629777033	WITHOUT_CLASSIFICATION	1.1337022296775542E-5	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999988824208891	WITHOUT_CLASSIFICATION	1.1175791108479898E-6	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999905447833355	WITHOUT_CLASSIFICATION	9.45521666442166E-6	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999992978135384	WITHOUT_CLASSIFICATION	7.021864616896797E-7	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999994369780459	WITHOUT_CLASSIFICATION	5.630219539996587E-7	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999975745820143	WITHOUT_CLASSIFICATION	2.425417985764532E-6	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999788497280503	WITHOUT_CLASSIFICATION	2.115027194979066E-5	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999962766685027	WITHOUT_CLASSIFICATION	3.723331497291334E-6	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999987820593434	WITHOUT_CLASSIFICATION	1.2179406566477004E-6	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999962721816523	WITHOUT_CLASSIFICATION	3.7278183477158634E-6	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999988896473182	WITHOUT_CLASSIFICATION	1.110352681750068E-6	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999992316419362	WITHOUT_CLASSIFICATION	7.68358063817279E-7	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999998912911449	WITHOUT_CLASSIFICATION	1.0870885516435647E-7	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999875766348496	WITHOUT_CLASSIFICATION	1.2423365150241556E-5	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999597976362674	WITHOUT_CLASSIFICATION	4.0202363732675854E-5	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999996946406826	WITHOUT_CLASSIFICATION	3.0535931735031497E-7	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999992861552598	WITHOUT_CLASSIFICATION	7.138447401056531E-7	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999996928524811	WITHOUT_CLASSIFICATION	3.071475188574234E-7	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999993154957392	WITHOUT_CLASSIFICATION	6.845042609191819E-7	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.999995599846088	WITHOUT_CLASSIFICATION	4.400153912065308E-6	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999986087136236	WITHOUT_CLASSIFICATION	1.3912863764599233E-6	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999978664587881	WITHOUT_CLASSIFICATION	2.1335412119445845E-6	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999964174666361	WITHOUT_CLASSIFICATION	3.5825333639420366E-6	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999967574006746	WITHOUT_CLASSIFICATION	3.2425993253177234E-6	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999978812578283	WITHOUT_CLASSIFICATION	2.118742171744182E-6	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999952609656768	WITHOUT_CLASSIFICATION	4.73903432321062E-6	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999993153980297	WITHOUT_CLASSIFICATION	6.846019702817025E-7	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999986371342646	WITHOUT_CLASSIFICATION	1.3628657353971359E-6	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999989968151816	WITHOUT_CLASSIFICATION	1.003184818403942E-6	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999901855672312	WITHOUT_CLASSIFICATION	9.814432768827955E-6	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999858843045428	WITHOUT_CLASSIFICATION	1.4115695457263505E-5	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999903637297022	WITHOUT_CLASSIFICATION	9.636270297782214E-6	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999992454807297	WITHOUT_CLASSIFICATION	7.545192703066116E-7	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999997387284781	WITHOUT_CLASSIFICATION	2.612715218311509E-7	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999951776228975	WITHOUT_CLASSIFICATION	4.822377102547531E-6	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999979502434371	WITHOUT_CLASSIFICATION	2.049756562984282E-6	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999969559501101	WITHOUT_CLASSIFICATION	3.0440498899578228E-6	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999965141452946	WITHOUT_CLASSIFICATION	3.485854705455536E-6	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999985046218727	WITHOUT_CLASSIFICATION	1.495378127343588E-6	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.999999822628532	WITHOUT_CLASSIFICATION	1.773714678668164E-7	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999995430312325	WITHOUT_CLASSIFICATION	4.5696876741893707E-7	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999962022450435	WITHOUT_CLASSIFICATION	3.7977549564633435E-6	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.999999283330995	WITHOUT_CLASSIFICATION	7.166690050788385E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998458466898	WITHOUT_CLASSIFICATION	1.5415331018238173E-7	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999953713423116	WITHOUT_CLASSIFICATION	4.628657688433888E-6	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.999996547306594	WITHOUT_CLASSIFICATION	3.4526934060296063E-6	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999448762975	WITHOUT_CLASSIFICATION	5.512370258065181E-8	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999915819560421	WITHOUT_CLASSIFICATION	8.418043957875192E-6	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999996880054892	WITHOUT_CLASSIFICATION	3.119945107617161E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999987507062781	WITHOUT_CLASSIFICATION	1.2492937220269532E-6	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999987507062781	WITHOUT_CLASSIFICATION	1.2492937220269532E-6	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999998160767044	WITHOUT_CLASSIFICATION	1.839232955160847E-7	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999996366402528	WITHOUT_CLASSIFICATION	3.633597471624585E-7	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999992762107467	WITHOUT_CLASSIFICATION	7.237892533099285E-7	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999997123623101	WITHOUT_CLASSIFICATION	2.8763768994470663E-7	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999999152486392	WITHOUT_CLASSIFICATION	8.475136082825066E-8	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999966424525639	WITHOUT_CLASSIFICATION	3.3575474360478868E-6	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999959456168128	WITHOUT_CLASSIFICATION	4.054383187212889E-6	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999992727727716	WITHOUT_CLASSIFICATION	7.272272283946476E-7	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999958530726352	WITHOUT_CLASSIFICATION	4.146927364789364E-6	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999904099470885	WITHOUT_CLASSIFICATION	9.590052911576164E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999998911073218	WITHOUT_CLASSIFICATION	1.0889267818947782E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999998911073218	WITHOUT_CLASSIFICATION	1.0889267818947782E-6	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999999864069604	WITHOUT_CLASSIFICATION	1.3593039697607063E-8	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999996580585818	WITHOUT_CLASSIFICATION	3.419414181460691E-7	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999766335880249	WITHOUT_CLASSIFICATION	2.3366411975083262E-5	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999983093363457	WITHOUT_CLASSIFICATION	1.6906636543512945E-6	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999981093550266	WITHOUT_CLASSIFICATION	1.8906449733401753E-6	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999994606296303	WITHOUT_CLASSIFICATION	5.393703697591303E-7	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999977988744514	WITHOUT_CLASSIFICATION	2.201125548488168E-6	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999975639035139	WITHOUT_CLASSIFICATION	2.436096486197674E-6	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999980958912257	WITHOUT_CLASSIFICATION	1.9041087742823152E-6	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999996613723023	WITHOUT_CLASSIFICATION	3.3862769761542557E-7	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999990188469072	WITHOUT_CLASSIFICATION	9.811530928705588E-7	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999999089065371	WITHOUT_CLASSIFICATION	9.109346285584878E-8	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999988899871238	WITHOUT_CLASSIFICATION	1.110012876195262E-6	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999988899871238	WITHOUT_CLASSIFICATION	1.110012876195262E-6	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.999998655359042	WITHOUT_CLASSIFICATION	1.344640958001284E-6	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999980685358442	WITHOUT_CLASSIFICATION	1.931464155804438E-6	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999981077255573	WITHOUT_CLASSIFICATION	1.8922744426593676E-6	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999952901138743	WITHOUT_CLASSIFICATION	4.709886125780218E-6	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999994235676933	WITHOUT_CLASSIFICATION	5.764323066055035E-7	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.999982423100439	WITHOUT_CLASSIFICATION	1.757689956094992E-5	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999989756359494	WITHOUT_CLASSIFICATION	1.0243640506678748E-6	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999986479933018	WITHOUT_CLASSIFICATION	1.3520066981320339E-6	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999965212805189	WITHOUT_CLASSIFICATION	3.4787194811823244E-6	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999969189261458	WITHOUT_CLASSIFICATION	3.0810738542523763E-6	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999766335880249	WITHOUT_CLASSIFICATION	2.3366411975083262E-5	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999999692379506	WITHOUT_CLASSIFICATION	3.076204935161425E-8	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999987779639301	WITHOUT_CLASSIFICATION	1.2220360698956408E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999982445409895	WITHOUT_CLASSIFICATION	1.7554590104752671E-6	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999996804884298	WITHOUT_CLASSIFICATION	3.1951157021635176E-7	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.999997600388567	WITHOUT_CLASSIFICATION	2.3996114330206783E-6	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999660188222	WITHOUT_CLASSIFICATION	3.39811778207645E-8	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.999998345815664	WITHOUT_CLASSIFICATION	1.6541843359757064E-6	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999982994287469	WITHOUT_CLASSIFICATION	1.7005712531489845E-6	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999995537948264	WITHOUT_CLASSIFICATION	4.4620517361027817E-7	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999977913246656	WITHOUT_CLASSIFICATION	2.208675334394516E-6	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999959424163457	WITHOUT_CLASSIFICATION	4.057583654321271E-6	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999999586880413	WITHOUT_CLASSIFICATION	4.1311958826626375E-8	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999984443543766	WITHOUT_CLASSIFICATION	1.5556456234339807E-6	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.99999895394854	WITHOUT_CLASSIFICATION	1.0460514599885527E-6	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999972785806434	WITHOUT_CLASSIFICATION	2.7214193565961014E-6	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999997239776004	WITHOUT_CLASSIFICATION	2.760223996636669E-7	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999948614296581	WITHOUT_CLASSIFICATION	5.138570341981732E-6	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999974917624079	WITHOUT_CLASSIFICATION	2.5082375920952484E-6	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999945632967983	WITHOUT_CLASSIFICATION	5.436703201772459E-6	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999966040267537	WITHOUT_CLASSIFICATION	3.3959732462697066E-6	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999173746148	WITHOUT_CLASSIFICATION	8.26253851321761E-8	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999984601447832	WITHOUT_CLASSIFICATION	1.5398552168355426E-6	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999988917204662	WITHOUT_CLASSIFICATION	1.1082795337802004E-6	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999956932746698	WITHOUT_CLASSIFICATION	4.306725330215525E-6	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.999998047528459	WITHOUT_CLASSIFICATION	1.9524715410516287E-6	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999963777018289	WITHOUT_CLASSIFICATION	3.6222981709528985E-6	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.999982469651165	WITHOUT_CLASSIFICATION	1.7530348834989252E-5	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999986393793916	WITHOUT_CLASSIFICATION	1.3606206084947299E-6	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999924854943828	WITHOUT_CLASSIFICATION	7.514505617194236E-6	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999998685316462	WITHOUT_CLASSIFICATION	1.3146835367906635E-7	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999602442652508	WITHOUT_CLASSIFICATION	3.9755734749278924E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999602442652508	WITHOUT_CLASSIFICATION	3.9755734749278924E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999986570501911	WITHOUT_CLASSIFICATION	1.3429498088848372E-6	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999989009648591	WITHOUT_CLASSIFICATION	1.099035140974945E-6	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999965337334752	WITHOUT_CLASSIFICATION	3.4662665247140592E-6	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999990801924326	WITHOUT_CLASSIFICATION	9.198075675427725E-7	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999985336760504	WITHOUT_CLASSIFICATION	1.4663239496418557E-6	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999936232394189	WITHOUT_CLASSIFICATION	6.376760581155429E-6	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999959534802535	WITHOUT_CLASSIFICATION	4.046519746435585E-6	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999876036375509	WITHOUT_CLASSIFICATION	1.239636244917374E-5	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999984912278966	WITHOUT_CLASSIFICATION	1.508772103408193E-6	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999974703032295	WITHOUT_CLASSIFICATION	2.52969677053348E-6	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999995563716383	WITHOUT_CLASSIFICATION	4.436283616791435E-7	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999988714542567	WITHOUT_CLASSIFICATION	1.128545743299952E-6	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999691838948489	WITHOUT_CLASSIFICATION	3.081610515104456E-5	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999983865058023	WITHOUT_CLASSIFICATION	1.6134941976965644E-6	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999998392695918	WITHOUT_CLASSIFICATION	1.6073040817796928E-7	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999900732578014	WITHOUT_CLASSIFICATION	9.92674219855828E-6	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999584526699	WITHOUT_CLASSIFICATION	4.1547330132065004E-8	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999962511810598	WITHOUT_CLASSIFICATION	3.748818940282903E-6	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999990735104859	WITHOUT_CLASSIFICATION	9.264895141620947E-7	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999960679089243	WITHOUT_CLASSIFICATION	3.932091075685955E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999717450782833	WITHOUT_CLASSIFICATION	2.8254921716602186E-5	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999717450782833	WITHOUT_CLASSIFICATION	2.8254921716602186E-5	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999968629461587	WITHOUT_CLASSIFICATION	3.1370538411967977E-6	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999996980012998	WITHOUT_CLASSIFICATION	3.01998700148472E-7	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.999999396521773	WITHOUT_CLASSIFICATION	6.034782270243541E-7	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999941761851379	WITHOUT_CLASSIFICATION	5.823814862215215E-6	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.999999728368539	WITHOUT_CLASSIFICATION	2.7163146100801374E-7	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999995135975583	WITHOUT_CLASSIFICATION	4.864024415976214E-7	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999992251314817	WITHOUT_CLASSIFICATION	7.748685183766158E-7	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999996304719733	WITHOUT_CLASSIFICATION	3.6952802666339206E-7	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999766953443225	WITHOUT_CLASSIFICATION	2.3304655677512196E-5	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999996802073543	WITHOUT_CLASSIFICATION	3.1979264573343756E-7	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999833030956138	WITHOUT_CLASSIFICATION	1.669690438627239E-5	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999971652467858	WITHOUT_CLASSIFICATION	2.8347532142137617E-6	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999991843339113	WITHOUT_CLASSIFICATION	8.156660885775464E-7	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999980280334717	WITHOUT_CLASSIFICATION	1.9719665283261992E-6	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999986609551972	WITHOUT_CLASSIFICATION	1.3390448027909176E-6	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999852522857862	WITHOUT_CLASSIFICATION	1.4747714213774842E-5	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999984420126823	WITHOUT_CLASSIFICATION	1.557987317657836E-6	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999987300355657	WITHOUT_CLASSIFICATION	1.269964434283767E-6	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999995898236629	WITHOUT_CLASSIFICATION	4.101763370462033E-7	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999985140238453	WITHOUT_CLASSIFICATION	1.485976154648658E-6	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999972545028943	WITHOUT_CLASSIFICATION	2.745497105715708E-6	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999991465043977	WITHOUT_CLASSIFICATION	8.534956023422061E-7	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.999996301479208	WITHOUT_CLASSIFICATION	3.6985207919329093E-6	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999843079312037	WITHOUT_CLASSIFICATION	1.5692068796272283E-5	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999990170379217	WITHOUT_CLASSIFICATION	9.829620782678136E-7	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999986609331014	WITHOUT_CLASSIFICATION	1.3390668986012725E-6	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999850009120176	WITHOUT_CLASSIFICATION	1.4999087982431628E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999972131329863	WITHOUT_CLASSIFICATION	2.786867013820528E-6	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.999999581504101	WITHOUT_CLASSIFICATION	4.1849589904075604E-7	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.999989322852573	WITHOUT_CLASSIFICATION	1.0677147426955199E-5	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999980444241909	WITHOUT_CLASSIFICATION	1.955575809010502E-6	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999890873377323	WITHOUT_CLASSIFICATION	1.0912662267677793E-5	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999992755855541	WITHOUT_CLASSIFICATION	7.244144459500806E-7	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.9999848518799934	WITHOUT_CLASSIFICATION	1.5148120006544618E-5	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999996722765719	WITHOUT_CLASSIFICATION	3.277234280591394E-7	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999997167082217	WITHOUT_CLASSIFICATION	2.832917782686967E-7	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.999999920983316	WITHOUT_CLASSIFICATION	7.901668395778126E-8	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999965707934887	WITHOUT_CLASSIFICATION	3.4292065113188166E-6	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999942043112271	WITHOUT_CLASSIFICATION	5.795688772972775E-6	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999873802927522	WITHOUT_CLASSIFICATION	1.2619707247765161E-5	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999899910346608	WITHOUT_CLASSIFICATION	1.0008965339147409E-5	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999934134669528	WITHOUT_CLASSIFICATION	6.586533047131987E-6	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999940842505098	WITHOUT_CLASSIFICATION	5.915749490170753E-6	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999947404637628	WITHOUT_CLASSIFICATION	5.259536237219163E-6	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999963139147566	WITHOUT_CLASSIFICATION	3.686085243358001E-6	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999947404637628	WITHOUT_CLASSIFICATION	5.259536237219163E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999998523647792	WITHOUT_CLASSIFICATION	1.4763522087730057E-7	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9999996964814057	WITHOUT_CLASSIFICATION	3.03518594230358E-7	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999981780830014	WITHOUT_CLASSIFICATION	1.821916998674978E-6	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9999746941338383	WITHOUT_CLASSIFICATION	2.5305866161683283E-5	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999949139276665	WITHOUT_CLASSIFICATION	5.086072333494647E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999987632111519	WITHOUT_CLASSIFICATION	1.236788848142036E-6	TEST
// write	WITHOUT_CLASSIFICATION	0.9999942745575598	WITHOUT_CLASSIFICATION	5.725442440152876E-6	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999993830858974	WITHOUT_CLASSIFICATION	6.169141025497802E-7	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999995432736931	WITHOUT_CLASSIFICATION	4.567263069406624E-7	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999980973456615	WITHOUT_CLASSIFICATION	1.9026543384579886E-6	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999997249274595	WITHOUT_CLASSIFICATION	2.750725404098933E-7	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999710346688272	WITHOUT_CLASSIFICATION	2.896533117283385E-5	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999997060331065	WITHOUT_CLASSIFICATION	2.939668934496135E-7	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999996490802917	WITHOUT_CLASSIFICATION	3.5091970835524077E-7	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999883200385129	WITHOUT_CLASSIFICATION	1.1679961487147313E-5	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9999913983648926	WITHOUT_CLASSIFICATION	8.601635107338099E-6	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999996455194836	WITHOUT_CLASSIFICATION	3.5448051632327854E-7	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999911901728598	WITHOUT_CLASSIFICATION	8.80982714020609E-6	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999779472667301	WITHOUT_CLASSIFICATION	2.2052733270001984E-5	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999824298391309	WITHOUT_CLASSIFICATION	1.757016086913459E-5	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999997908131533	WITHOUT_CLASSIFICATION	2.091868466837241E-7	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.999995195283124	WITHOUT_CLASSIFICATION	4.804716875987405E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999922775827788	WITHOUT_CLASSIFICATION	7.722417221267704E-6	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.999997096831192	WITHOUT_CLASSIFICATION	2.9031688079958008E-6	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999969495409874	WITHOUT_CLASSIFICATION	3.0504590126236803E-6	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999996669405087	WITHOUT_CLASSIFICATION	3.3305949132858785E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999984643295785	WITHOUT_CLASSIFICATION	1.5356704214626104E-6	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999979208131282	WITHOUT_CLASSIFICATION	2.0791868718527947E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999994521044425	WITHOUT_CLASSIFICATION	5.478955575459886E-7	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999992093703953	WITHOUT_CLASSIFICATION	7.906296046245722E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999881457346514	WITHOUT_CLASSIFICATION	1.18542653486262E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999860335931665	WITHOUT_CLASSIFICATION	1.396640683348842E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999888420715836	WITHOUT_CLASSIFICATION	1.1157928416499146E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999974282524442	WITHOUT_CLASSIFICATION	2.5717475558488097E-6	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999996832332394	WITHOUT_CLASSIFICATION	3.167667606152577E-7	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999989280024504	WITHOUT_CLASSIFICATION	1.0719975495854778E-6	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999997410151825	WITHOUT_CLASSIFICATION	2.589848174139556E-7	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.999999586061779	WITHOUT_CLASSIFICATION	4.139382210262463E-7	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999984271384115	WITHOUT_CLASSIFICATION	1.5728615884630219E-6	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999699620321298	WITHOUT_CLASSIFICATION	3.0037967870125192E-5	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999314690167	WITHOUT_CLASSIFICATION	6.853098334091919E-8	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999988335667827	WITHOUT_CLASSIFICATION	1.1664332173418666E-6	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999987889458885	WITHOUT_CLASSIFICATION	1.2110541115892196E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999907506503072	WITHOUT_CLASSIFICATION	9.249349692692831E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999907506503072	WITHOUT_CLASSIFICATION	9.249349692692831E-6	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.999954000159849	WITHOUT_CLASSIFICATION	4.599984015087374E-5	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999988966640876	WITHOUT_CLASSIFICATION	1.1033359124016284E-6	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999996975122818	WITHOUT_CLASSIFICATION	3.02487718228704E-7	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999996155177051	WITHOUT_CLASSIFICATION	3.844822948090033E-7	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999373600895	WITHOUT_CLASSIFICATION	6.263991047449432E-8	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999967410687156	WITHOUT_CLASSIFICATION	3.258931284443705E-6	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999997729265133	WITHOUT_CLASSIFICATION	2.270734866671866E-7	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999974254424374	WITHOUT_CLASSIFICATION	2.5745575626514826E-6	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999989639701978	WITHOUT_CLASSIFICATION	1.0360298022222756E-6	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999996972640418	WITHOUT_CLASSIFICATION	3.0273595825707595E-7	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999998509847435	WITHOUT_CLASSIFICATION	1.4901525641792422E-7	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999807354485	WITHOUT_CLASSIFICATION	1.926455148628939E-8	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999995211593115	WITHOUT_CLASSIFICATION	4.788406884549363E-7	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999912256912159	WITHOUT_CLASSIFICATION	8.77430878410244E-6	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999995785638934	WITHOUT_CLASSIFICATION	4.2143610655388115E-7	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999979278254608	WITHOUT_CLASSIFICATION	2.072174539166633E-6	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.999998736990266	WITHOUT_CLASSIFICATION	1.2630097339847815E-6	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999986828946693	WITHOUT_CLASSIFICATION	1.3171053307224254E-6	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999960225807782	WITHOUT_CLASSIFICATION	3.977419221809769E-6	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999989580376986	WITHOUT_CLASSIFICATION	1.0419623014257305E-6	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999851515887048	WITHOUT_CLASSIFICATION	1.484841129516957E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999972601151919	WITHOUT_CLASSIFICATION	2.7398848082421745E-6	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999993953863456	WITHOUT_CLASSIFICATION	6.0461365436251E-7	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999995722125631	WITHOUT_CLASSIFICATION	4.2778743690976803E-7	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999985251389528	WITHOUT_CLASSIFICATION	1.4748610471666386E-6	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.999999608912094	WITHOUT_CLASSIFICATION	3.910879059599214E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999997691338784	WITHOUT_CLASSIFICATION	2.3086612156560343E-7	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999994909470735	WITHOUT_CLASSIFICATION	5.090529264683464E-7	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.999997647714324	WITHOUT_CLASSIFICATION	2.3522856759812743E-6	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999976284923099	WITHOUT_CLASSIFICATION	2.371507690173568E-6	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999984259933389	WITHOUT_CLASSIFICATION	1.5740066610884711E-6	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999999616362378	WITHOUT_CLASSIFICATION	3.836376220925667E-8	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999206263532	WITHOUT_CLASSIFICATION	7.937364682604864E-8	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999984077355588	WITHOUT_CLASSIFICATION	1.592264441218E-6	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999979393624733	WITHOUT_CLASSIFICATION	2.0606375266517603E-6	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999401317167	WITHOUT_CLASSIFICATION	5.986828334217275E-8	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999894679398096	WITHOUT_CLASSIFICATION	1.0532060190384303E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999977729424378	WITHOUT_CLASSIFICATION	2.2270575621981556E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999930972901818	WITHOUT_CLASSIFICATION	6.902709818134299E-6	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999907360585747	WITHOUT_CLASSIFICATION	9.263941425324433E-6	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999961186105807	WITHOUT_CLASSIFICATION	3.881389419239275E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999981368022914	WITHOUT_CLASSIFICATION	1.8631977085031998E-6	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999768045599369	WITHOUT_CLASSIFICATION	2.319544006307562E-5	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999340292521	WITHOUT_CLASSIFICATION	6.597074786339258E-8	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999992309186391	WITHOUT_CLASSIFICATION	7.6908136094421E-7	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999992986423135	WITHOUT_CLASSIFICATION	7.013576864869803E-7	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999995728824657	WITHOUT_CLASSIFICATION	4.271175342799643E-7	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999976088011975	WITHOUT_CLASSIFICATION	2.3911988024656472E-6	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9999538219464607	WITHOUT_CLASSIFICATION	4.61780535392742E-5	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999959117885119	WITHOUT_CLASSIFICATION	4.08821148811819E-6	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999998231997415	WITHOUT_CLASSIFICATION	1.7680025859368794E-7	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.999998602067997	WITHOUT_CLASSIFICATION	1.397932003067946E-6	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999986824217052	WITHOUT_CLASSIFICATION	1.317578294757607E-6	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999992843645383	WITHOUT_CLASSIFICATION	7.156354617637973E-7	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.999999045012837	WITHOUT_CLASSIFICATION	9.549871629824718E-7	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.999999795250936	WITHOUT_CLASSIFICATION	2.0474906395295343E-7	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999994720671194	WITHOUT_CLASSIFICATION	5.279328806171619E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999983001608743	WITHOUT_CLASSIFICATION	1.6998391256317807E-6	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999995202799515	WITHOUT_CLASSIFICATION	4.797200484797191E-7	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999999076241924	WITHOUT_CLASSIFICATION	9.237580761240536E-7	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999960059744728	WITHOUT_CLASSIFICATION	3.994025527204687E-6	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999959333324494	WITHOUT_CLASSIFICATION	4.066667550501768E-6	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999978562256748	WITHOUT_CLASSIFICATION	2.1437743251206713E-6	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999991791032021	WITHOUT_CLASSIFICATION	8.20896797863206E-7	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.999996498974122	WITHOUT_CLASSIFICATION	3.5010258779994097E-6	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999782194616718	WITHOUT_CLASSIFICATION	2.1780538328217908E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999884544728482	WITHOUT_CLASSIFICATION	1.1545527151850355E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999994256872341	WITHOUT_CLASSIFICATION	5.743127658346606E-7	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999788141864805	WITHOUT_CLASSIFICATION	2.118581351953551E-5	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999949826828419	WITHOUT_CLASSIFICATION	5.017317158004449E-6	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.999999269143601	WITHOUT_CLASSIFICATION	7.308563989442854E-7	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.99999981984339	WITHOUT_CLASSIFICATION	1.8015660995034897E-7	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999991998178526	WITHOUT_CLASSIFICATION	8.0018214741166E-7	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.999972473744379	WITHOUT_CLASSIFICATION	2.752625562104622E-5	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.99997049034494	WITHOUT_CLASSIFICATION	2.9509655060031878E-5	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9999745011319614	WITHOUT_CLASSIFICATION	2.54988680385954E-5	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9999701120172747	WITHOUT_CLASSIFICATION	2.9887982725194745E-5	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9999691115371738	WITHOUT_CLASSIFICATION	3.0888462826212366E-5	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9999677017317766	WITHOUT_CLASSIFICATION	3.229826822328626E-5	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9999674084698612	WITHOUT_CLASSIFICATION	3.259153013875233E-5	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9999673254292787	WITHOUT_CLASSIFICATION	3.2674570721403506E-5	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9999676388059677	WITHOUT_CLASSIFICATION	3.236119403228687E-5	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9999706708054004	WITHOUT_CLASSIFICATION	2.9329194599528305E-5	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9999675507299266	WITHOUT_CLASSIFICATION	3.24492700733358E-5	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.9999726401216973	WITHOUT_CLASSIFICATION	2.7359878302709503E-5	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9999743730998574	WITHOUT_CLASSIFICATION	2.56269001426647E-5	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9999736674814463	WITHOUT_CLASSIFICATION	2.633251855371545E-5	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.9999726664858409	WITHOUT_CLASSIFICATION	2.7333514159046828E-5	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9999726693495496	WITHOUT_CLASSIFICATION	2.7330650450459262E-5	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9999729091267923	WITHOUT_CLASSIFICATION	2.7090873207720212E-5	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.999972937854957	WITHOUT_CLASSIFICATION	2.706214504303101E-5	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.9999708932694886	WITHOUT_CLASSIFICATION	2.910673051139303E-5	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.999974169017226	WITHOUT_CLASSIFICATION	2.5830982774057513E-5	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999973808122781	WITHOUT_CLASSIFICATION	2.6191877219934368E-6	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999998701222348	WITHOUT_CLASSIFICATION	1.2987776517082713E-7	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999955943707599	WITHOUT_CLASSIFICATION	4.405629240047266E-6	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999985951001161	WITHOUT_CLASSIFICATION	1.40489988383406E-6	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999983552748788	WITHOUT_CLASSIFICATION	1.6447251211290208E-6	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.999999854789706	WITHOUT_CLASSIFICATION	1.45210294115044E-7	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999995536216508	WITHOUT_CLASSIFICATION	4.4637834918343626E-7	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999999900875768	WITHOUT_CLASSIFICATION	9.912423253424398E-9	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999030863183	WITHOUT_CLASSIFICATION	9.691368175528674E-8	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999986550156353	WITHOUT_CLASSIFICATION	1.344984364771994E-6	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9999551711417346	WITHOUT_CLASSIFICATION	4.4828858265371064E-5	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999969918733036	WITHOUT_CLASSIFICATION	3.0081266962774714E-6	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999988248276359	WITHOUT_CLASSIFICATION	1.1751723639937206E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999986785095275	WITHOUT_CLASSIFICATION	1.3214904724302721E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999986785095275	WITHOUT_CLASSIFICATION	1.3214904724302721E-6	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999997758624292	WITHOUT_CLASSIFICATION	2.241375708846249E-7	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999999387344957	WITHOUT_CLASSIFICATION	6.126550430081045E-8	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999746580011	WITHOUT_CLASSIFICATION	2.5341998928186375E-8	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.999996900197424	WITHOUT_CLASSIFICATION	3.099802575908272E-6	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.999999576512546	WITHOUT_CLASSIFICATION	4.234874540798034E-7	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999997005699971	WITHOUT_CLASSIFICATION	2.9943000291911353E-7	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999922097433016	WITHOUT_CLASSIFICATION	7.79025669847843E-6	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999984388040134	WITHOUT_CLASSIFICATION	1.5611959866100556E-6	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999988996797707	WITHOUT_CLASSIFICATION	1.1003202292044751E-6	TEST
// base	WITHOUT_CLASSIFICATION	0.9999939025339944	WITHOUT_CLASSIFICATION	6.097466005561296E-6	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999984525165688	WITHOUT_CLASSIFICATION	1.5474834311475846E-6	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999997595840731	WITHOUT_CLASSIFICATION	2.4041592700806484E-7	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9999869565134765	WITHOUT_CLASSIFICATION	1.3043486523563197E-5	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.999998975102612	WITHOUT_CLASSIFICATION	1.0248973878686635E-6	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999994765005961	WITHOUT_CLASSIFICATION	5.234994038593569E-7	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999057072691789	WITHOUT_CLASSIFICATION	9.429273082107777E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999953255289733	WITHOUT_CLASSIFICATION	4.674471026683108E-6	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999979815939485	WITHOUT_CLASSIFICATION	2.0184060515462E-6	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999952103745459	WITHOUT_CLASSIFICATION	4.789625454104954E-6	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999988247257385	WITHOUT_CLASSIFICATION	1.1752742614691477E-6	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999976114284205	WITHOUT_CLASSIFICATION	2.3885715795774205E-6	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999998903285244	WITHOUT_CLASSIFICATION	1.0967147549814686E-7	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999922586365093	WITHOUT_CLASSIFICATION	7.74136349070271E-6	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999995900896745	WITHOUT_CLASSIFICATION	4.099103254358242E-7	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999998389633797	WITHOUT_CLASSIFICATION	1.6103662029621593E-7	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999968700117136	WITHOUT_CLASSIFICATION	3.1299882864208455E-6	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999994401956263	WITHOUT_CLASSIFICATION	5.598043736552438E-7	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999968497622895	WITHOUT_CLASSIFICATION	3.150237710480132E-6	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.999999871506808	WITHOUT_CLASSIFICATION	1.2849319199198028E-7	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999627897137614	WITHOUT_CLASSIFICATION	3.721028623850365E-5	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999975016417202	WITHOUT_CLASSIFICATION	2.4983582798817524E-6	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999899818612435	WITHOUT_CLASSIFICATION	1.0018138756496159E-5	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999891501010181	WITHOUT_CLASSIFICATION	1.0849898982000955E-5	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999969183068151	WITHOUT_CLASSIFICATION	3.081693184848086E-6	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999979849168513	WITHOUT_CLASSIFICATION	2.0150831487290775E-6	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999952924147842	WITHOUT_CLASSIFICATION	4.707585215750775E-6	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999898424418396	WITHOUT_CLASSIFICATION	1.0157558160368047E-5	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999987137720571	WITHOUT_CLASSIFICATION	1.2862279428717462E-6	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999994716435371	WITHOUT_CLASSIFICATION	5.283564628343163E-7	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.999999712692484	WITHOUT_CLASSIFICATION	2.873075159696796E-7	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.999999779916637	WITHOUT_CLASSIFICATION	2.2008336296218987E-7	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999956657686168	WITHOUT_CLASSIFICATION	4.33423138323619E-6	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999974385132292	WITHOUT_CLASSIFICATION	2.561486770856403E-6	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999936296519553	WITHOUT_CLASSIFICATION	6.370348044748902E-6	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999936296519553	WITHOUT_CLASSIFICATION	6.370348044748902E-6	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999992156645571	WITHOUT_CLASSIFICATION	7.843354428450869E-7	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999988698388023	WITHOUT_CLASSIFICATION	1.1301611976768534E-6	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999986477572211	WITHOUT_CLASSIFICATION	1.352242778920032E-6	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999935077806987	WITHOUT_CLASSIFICATION	6.492219301232715E-6	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999997348384824	WITHOUT_CLASSIFICATION	2.651615176112495E-7	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999825483730158	WITHOUT_CLASSIFICATION	1.7451626984261384E-5	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.999999755283708	WITHOUT_CLASSIFICATION	2.447162920411347E-7	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999992108755337	WITHOUT_CLASSIFICATION	7.891244664498858E-7	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999993479199939	WITHOUT_CLASSIFICATION	6.520800060702398E-7	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999989485369979	WITHOUT_CLASSIFICATION	1.0514630020640677E-6	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999992720034769	WITHOUT_CLASSIFICATION	7.279965231505892E-7	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999982659990029	WITHOUT_CLASSIFICATION	1.734000997165952E-6	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999973425575069	WITHOUT_CLASSIFICATION	2.6574424930184336E-6	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999969186659033	WITHOUT_CLASSIFICATION	3.0813340967371097E-6	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9999954211392714	WITHOUT_CLASSIFICATION	4.5788607285989E-6	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999551614458347	WITHOUT_CLASSIFICATION	4.483855416526395E-5	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999996331642516	WITHOUT_CLASSIFICATION	3.668357484060672E-7	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999944073431545	WITHOUT_CLASSIFICATION	5.5926568455963644E-6	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999477793651	WITHOUT_CLASSIFICATION	5.2220634882477693E-8	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999965218157271	WITHOUT_CLASSIFICATION	3.47818427300768E-6	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999979891213865	WITHOUT_CLASSIFICATION	2.0108786135345044E-6	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999979891213865	WITHOUT_CLASSIFICATION	2.0108786135345044E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999982257344802	WITHOUT_CLASSIFICATION	1.7742655197870872E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999982257344802	WITHOUT_CLASSIFICATION	1.7742655197870872E-6	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999997823075598	WITHOUT_CLASSIFICATION	2.1769244022061547E-7	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999980509505528	WITHOUT_CLASSIFICATION	1.949049447213366E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999999454012416	WITHOUT_CLASSIFICATION	5.4598758480285456E-8	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999994641202273	WITHOUT_CLASSIFICATION	5.358797726422344E-7	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999997798266612	WITHOUT_CLASSIFICATION	2.2017333871182468E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999999102353527	WITHOUT_CLASSIFICATION	8.976464729958199E-7	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999999163914995	WITHOUT_CLASSIFICATION	8.3608500427822E-8	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999950379158543	WITHOUT_CLASSIFICATION	4.962084145677812E-6	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999973810381836	WITHOUT_CLASSIFICATION	2.618961816487622E-6	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999956658068201	WITHOUT_CLASSIFICATION	4.334193179897597E-6	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.999999312975714	WITHOUT_CLASSIFICATION	6.870242859716593E-7	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999972927018955	WITHOUT_CLASSIFICATION	2.7072981045070303E-6	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999931315734683	WITHOUT_CLASSIFICATION	6.868426531688691E-6	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999968961428319	WITHOUT_CLASSIFICATION	3.1038571680284947E-6	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999998203320806	WITHOUT_CLASSIFICATION	1.7966791945444796E-7	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999917542031072	WITHOUT_CLASSIFICATION	8.245796892805546E-6	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999998139418792	WITHOUT_CLASSIFICATION	1.8605812071222193E-7	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999975624195638	WITHOUT_CLASSIFICATION	2.4375804361709896E-6	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9998866780517738	WITHOUT_CLASSIFICATION	1.133219482262168E-4	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999988768716419	WITHOUT_CLASSIFICATION	1.1231283580456166E-6	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999917982796925	WITHOUT_CLASSIFICATION	8.201720307441628E-6	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999977970147361	WITHOUT_CLASSIFICATION	2.2029852639189803E-6	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999876051044584	WITHOUT_CLASSIFICATION	1.2394895541513676E-5	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999984643295785	WITHOUT_CLASSIFICATION	1.5356704214626104E-6	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999967410687156	WITHOUT_CLASSIFICATION	3.258931284443705E-6	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999881448142427	WITHOUT_CLASSIFICATION	1.1855185757325355E-5	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999771274354	WITHOUT_CLASSIFICATION	2.2872564665765874E-8	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999872404370996	WITHOUT_CLASSIFICATION	1.2759562900275499E-5	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999977029606363	WITHOUT_CLASSIFICATION	2.2970393636472542E-6	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999988618943126	WITHOUT_CLASSIFICATION	1.1381056873194135E-6	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999988618943126	WITHOUT_CLASSIFICATION	1.1381056873194135E-6	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999963887506073	WITHOUT_CLASSIFICATION	3.61124939265935E-6	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999961739572305	WITHOUT_CLASSIFICATION	3.82604276946749E-6	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999967376956602	WITHOUT_CLASSIFICATION	3.2623043397203247E-6	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999931063717918	WITHOUT_CLASSIFICATION	6.893628208203679E-6	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999618941985642	WITHOUT_CLASSIFICATION	3.810580143586627E-5	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999993873008177	WITHOUT_CLASSIFICATION	6.126991822820683E-7	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999993248451865	WITHOUT_CLASSIFICATION	6.751548134430331E-7	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999995259431672	WITHOUT_CLASSIFICATION	4.740568327828101E-7	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999998352427512	WITHOUT_CLASSIFICATION	1.6475724880311267E-7	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999958821417104	WITHOUT_CLASSIFICATION	4.1178582895464165E-6	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999986374667813	WITHOUT_CLASSIFICATION	1.362533218800609E-6	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999957834386047	WITHOUT_CLASSIFICATION	4.2165613953326775E-6	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999970993210491	WITHOUT_CLASSIFICATION	2.9006789508683736E-6	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999995399422587	WITHOUT_CLASSIFICATION	4.600577413730305E-7	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999989455533191	WITHOUT_CLASSIFICATION	1.054446680860715E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999947656776862	WITHOUT_CLASSIFICATION	5.2343223138580714E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999990178778465	WITHOUT_CLASSIFICATION	9.821221535120222E-7	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999999639392655	WITHOUT_CLASSIFICATION	3.606073449806532E-7	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999986441948695	WITHOUT_CLASSIFICATION	1.3558051304889351E-6	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999985327375658	WITHOUT_CLASSIFICATION	1.4672624341972933E-6	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999955991385693	WITHOUT_CLASSIFICATION	4.400861430714561E-6	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999896288706923	WITHOUT_CLASSIFICATION	1.0371129307721204E-5	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999813954399579	WITHOUT_CLASSIFICATION	1.8604560042084556E-5	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999921430720189	WITHOUT_CLASSIFICATION	7.856927981146875E-6	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999983890604507	WITHOUT_CLASSIFICATION	1.6109395493327773E-6	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999990887042389	WITHOUT_CLASSIFICATION	9.112957611019067E-7	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999956918292456	WITHOUT_CLASSIFICATION	4.308170754467219E-6	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999991344175305	WITHOUT_CLASSIFICATION	8.65582469472187E-7	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999990691790217	WITHOUT_CLASSIFICATION	9.308209782355073E-7	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999979849039673	WITHOUT_CLASSIFICATION	2.0150960327284377E-6	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999992053084101	WITHOUT_CLASSIFICATION	7.946915899513846E-7	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999942815793936	WITHOUT_CLASSIFICATION	5.718420606263678E-6	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999948723050454	WITHOUT_CLASSIFICATION	5.127694954686499E-6	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.999997670220189	WITHOUT_CLASSIFICATION	2.329779810937163E-6	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999993625512705	WITHOUT_CLASSIFICATION	6.374487294504235E-7	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.999997712096808	WITHOUT_CLASSIFICATION	2.2879031919607776E-6	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999790877231116	WITHOUT_CLASSIFICATION	2.091227688834046E-5	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999898641444954	WITHOUT_CLASSIFICATION	1.0135855504583796E-5	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999916852641252	WITHOUT_CLASSIFICATION	8.314735874760584E-6	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999986182528444	WITHOUT_CLASSIFICATION	1.3817471554995842E-6	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999165038465	WITHOUT_CLASSIFICATION	8.349615347451403E-8	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999963058288269	WITHOUT_CLASSIFICATION	3.6941711730151556E-6	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999952012623535	WITHOUT_CLASSIFICATION	4.798737646438635E-6	TEST
// while	WITHOUT_CLASSIFICATION	0.9999928440704663	WITHOUT_CLASSIFICATION	7.1559295337242875E-6	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999565524052737	WITHOUT_CLASSIFICATION	4.344759472639208E-5	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999997908805871	WITHOUT_CLASSIFICATION	2.0911941279581204E-7	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999979096659137	WITHOUT_CLASSIFICATION	2.090334086271035E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999994512018819	WITHOUT_CLASSIFICATION	5.487981181242374E-7	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.999999600087322	WITHOUT_CLASSIFICATION	3.9991267806099777E-7	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999946632317708	WITHOUT_CLASSIFICATION	5.336768229201884E-6	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999707466761142	WITHOUT_CLASSIFICATION	2.9253323885876126E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999623515251193	WITHOUT_CLASSIFICATION	3.7648474880814985E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999596145088553	WITHOUT_CLASSIFICATION	4.038549114473944E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999677929494271	WITHOUT_CLASSIFICATION	3.220705057289381E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999879295095178	WITHOUT_CLASSIFICATION	1.2070490482250904E-5	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999722636882341	WITHOUT_CLASSIFICATION	2.7736311765907873E-5	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999825405527943	WITHOUT_CLASSIFICATION	1.7459447205623583E-5	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999988101938377	WITHOUT_CLASSIFICATION	1.1898061622436015E-6	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999886444853945	WITHOUT_CLASSIFICATION	1.135551460552785E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999944619870115	WITHOUT_CLASSIFICATION	5.538012988503581E-6	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999434851906108	WITHOUT_CLASSIFICATION	5.6514809389154266E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999707466761142	WITHOUT_CLASSIFICATION	2.9253323885876126E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999596145088553	WITHOUT_CLASSIFICATION	4.038549114473944E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999623515251193	WITHOUT_CLASSIFICATION	3.7648474880814985E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999426762187775	WITHOUT_CLASSIFICATION	5.73237812225784E-5	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999524696387475	WITHOUT_CLASSIFICATION	4.753036125248118E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999908105298081	WITHOUT_CLASSIFICATION	9.189470191879168E-6	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999973723240546	WITHOUT_CLASSIFICATION	2.627675945436119E-6	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999991085299448	WITHOUT_CLASSIFICATION	8.914700552962993E-7	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999957051356007	WITHOUT_CLASSIFICATION	4.294864399409898E-6	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999921539455242	WITHOUT_CLASSIFICATION	7.846054475785198E-6	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999980115793858	WITHOUT_CLASSIFICATION	1.9884206141351593E-6	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999948381040286	WITHOUT_CLASSIFICATION	5.161895971404873E-6	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999976016450738	WITHOUT_CLASSIFICATION	2.3983549261681063E-6	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999984432975199	WITHOUT_CLASSIFICATION	1.5567024802032874E-6	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999988972277255	WITHOUT_CLASSIFICATION	1.1027722743951047E-6	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999948602867488	WITHOUT_CLASSIFICATION	5.139713251250203E-6	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999936180818574	WITHOUT_CLASSIFICATION	6.381918142596676E-6	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999997223133144	WITHOUT_CLASSIFICATION	2.776866856362599E-7	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999963855234625	WITHOUT_CLASSIFICATION	3.6144765375517613E-6	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999968227145251	WITHOUT_CLASSIFICATION	3.177285475023605E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999987144629102	WITHOUT_CLASSIFICATION	1.2855370898350394E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999987144629102	WITHOUT_CLASSIFICATION	1.2855370898350394E-6	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999980908118016	WITHOUT_CLASSIFICATION	1.90918819838287E-6	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999989144897338	WITHOUT_CLASSIFICATION	1.0855102662669575E-6	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999833978690705	WITHOUT_CLASSIFICATION	1.6602130929449036E-5	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999850745276073	WITHOUT_CLASSIFICATION	1.4925472392654889E-5	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999959932910233	WITHOUT_CLASSIFICATION	4.0067089767300785E-6	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999997454837684	WITHOUT_CLASSIFICATION	2.545162316459199E-7	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999998370950779	WITHOUT_CLASSIFICATION	1.6290492207711734E-7	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999989705318093	WITHOUT_CLASSIFICATION	1.0294681906301909E-6	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999995002774648	WITHOUT_CLASSIFICATION	4.997225352017347E-7	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999994793743877	WITHOUT_CLASSIFICATION	5.206256123379459E-7	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999995771093672	WITHOUT_CLASSIFICATION	4.228906328089969E-7	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999664128490777	WITHOUT_CLASSIFICATION	3.358715092216037E-5	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999987545466785	WITHOUT_CLASSIFICATION	1.245453321476229E-6	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999944330855666	WITHOUT_CLASSIFICATION	5.5669144334513705E-6	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.999999889877175	WITHOUT_CLASSIFICATION	1.101228248439935E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999983252296466	WITHOUT_CLASSIFICATION	1.6747703532963355E-6	TEST
// element set	WITHOUT_CLASSIFICATION	0.99999742621763	WITHOUT_CLASSIFICATION	2.57378237005144E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999992010827168	WITHOUT_CLASSIFICATION	7.989172832495203E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999992010827168	WITHOUT_CLASSIFICATION	7.989172832495203E-7	TEST
// colon3	WITHOUT_CLASSIFICATION	0.999994084694133	WITHOUT_CLASSIFICATION	5.9153058670565345E-6	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999907145695305	WITHOUT_CLASSIFICATION	9.285430469533815E-6	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999980280137929	WITHOUT_CLASSIFICATION	1.9719862071991336E-6	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999791569310289	WITHOUT_CLASSIFICATION	2.0843068971108478E-5	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999979239449258	WITHOUT_CLASSIFICATION	2.076055074131983E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999992010827168	WITHOUT_CLASSIFICATION	7.989172832495203E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999992010827168	WITHOUT_CLASSIFICATION	7.989172832495203E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999714602683	WITHOUT_CLASSIFICATION	2.8539731610113398E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999714602683	WITHOUT_CLASSIFICATION	2.8539731610113398E-8	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999983973976273	WITHOUT_CLASSIFICATION	1.6026023726718327E-6	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999815175036667	WITHOUT_CLASSIFICATION	1.848249633334339E-5	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999998291476107	WITHOUT_CLASSIFICATION	1.70852389355215E-7	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999995183393479	WITHOUT_CLASSIFICATION	4.816606522482956E-7	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999998689861627	WITHOUT_CLASSIFICATION	1.310138372216866E-7	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999998689861627	WITHOUT_CLASSIFICATION	1.310138372216866E-7	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999980723762601	WITHOUT_CLASSIFICATION	1.927623739777693E-6	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999991365494806	WITHOUT_CLASSIFICATION	8.634505194735187E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999995316439045	WITHOUT_CLASSIFICATION	4.683560954879142E-7	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999866815026837	WITHOUT_CLASSIFICATION	1.3318497316278692E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999711986909	WITHOUT_CLASSIFICATION	2.8801309031863173E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999991134810806	WITHOUT_CLASSIFICATION	8.865189195067092E-7	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999997316558779	WITHOUT_CLASSIFICATION	2.6834412209460596E-7	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999984688998657	WITHOUT_CLASSIFICATION	1.5311001343387241E-6	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999891989781876	WITHOUT_CLASSIFICATION	1.0801021812462076E-5	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999998573158652	WITHOUT_CLASSIFICATION	1.4268413477114932E-7	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999995331993933	WITHOUT_CLASSIFICATION	4.6680060680843874E-7	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.999999663893702	WITHOUT_CLASSIFICATION	3.3610629798523344E-7	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999993405082421	WITHOUT_CLASSIFICATION	6.594917579412987E-7	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999990548419855	WITHOUT_CLASSIFICATION	9.451580144237266E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999983252296466	WITHOUT_CLASSIFICATION	1.6747703532963355E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999992010827168	WITHOUT_CLASSIFICATION	7.989172832495203E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999714602683	WITHOUT_CLASSIFICATION	2.8539731610113398E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999991134810806	WITHOUT_CLASSIFICATION	8.865189195067092E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999283584446	WITHOUT_CLASSIFICATION	7.164155533835464E-8	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999283584446	WITHOUT_CLASSIFICATION	7.164155533835464E-8	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999997354520004	WITHOUT_CLASSIFICATION	2.64547999697674E-7	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999992229642296	WITHOUT_CLASSIFICATION	7.770357703680809E-7	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999421877075	WITHOUT_CLASSIFICATION	5.781229256688632E-8	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999994437277755	WITHOUT_CLASSIFICATION	5.562722244115263E-7	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999990065027957	WITHOUT_CLASSIFICATION	9.93497204257911E-7	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.999999624510897	WITHOUT_CLASSIFICATION	3.7548910308162704E-7	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999986223252847	WITHOUT_CLASSIFICATION	1.3776747153836052E-6	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999962818309084	WITHOUT_CLASSIFICATION	3.7181690916317032E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999942231720953	WITHOUT_CLASSIFICATION	5.7768279046970555E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999968576684105	WITHOUT_CLASSIFICATION	3.142331589466217E-6	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999916233825695	WITHOUT_CLASSIFICATION	8.376617430442437E-6	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999992366891256	WITHOUT_CLASSIFICATION	7.633108744057995E-7	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999974285684314	WITHOUT_CLASSIFICATION	2.5714315684575416E-6	TEST
// element set	WITHOUT_CLASSIFICATION	0.99999742621763	WITHOUT_CLASSIFICATION	2.57378237005144E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999714602683	WITHOUT_CLASSIFICATION	2.8539731610113398E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999991365494806	WITHOUT_CLASSIFICATION	8.634505194735187E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999995316439045	WITHOUT_CLASSIFICATION	4.683560954879142E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999995316439045	WITHOUT_CLASSIFICATION	4.683560954879142E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999711986909	WITHOUT_CLASSIFICATION	2.8801309031863173E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999991134810806	WITHOUT_CLASSIFICATION	8.865189195067092E-7	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999991134810806	WITHOUT_CLASSIFICATION	8.865189195067092E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999283584446	WITHOUT_CLASSIFICATION	7.164155533835464E-8	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999999547839535	WITHOUT_CLASSIFICATION	4.5216046475121176E-8	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.999998045348864	WITHOUT_CLASSIFICATION	1.954651135866454E-6	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999880020273	WITHOUT_CLASSIFICATION	1.199797267836153E-8	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.99999946721931	WITHOUT_CLASSIFICATION	5.327806899643947E-7	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999991311603564	WITHOUT_CLASSIFICATION	8.688396435271002E-7	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999973876718893	WITHOUT_CLASSIFICATION	2.6123281106684234E-6	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999982996894828	WITHOUT_CLASSIFICATION	1.7003105171366294E-6	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.99999997712585	WITHOUT_CLASSIFICATION	2.287415004263797E-8	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.999999190823039	WITHOUT_CLASSIFICATION	8.091769608682673E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999991365494806	WITHOUT_CLASSIFICATION	8.634505194735187E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999995316439045	WITHOUT_CLASSIFICATION	4.683560954879142E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999995316439045	WITHOUT_CLASSIFICATION	4.683560954879142E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999711986909	WITHOUT_CLASSIFICATION	2.8801309031863173E-8	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999962818309084	WITHOUT_CLASSIFICATION	3.7181690916317032E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999968576684105	WITHOUT_CLASSIFICATION	3.142331589466217E-6	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999901182522648	WITHOUT_CLASSIFICATION	9.881747735281116E-6	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999993844054276	WITHOUT_CLASSIFICATION	6.15594572332004E-7	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999772565940167	WITHOUT_CLASSIFICATION	2.2743405983297313E-5	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999772565940167	WITHOUT_CLASSIFICATION	2.2743405983297313E-5	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999908615705657	WITHOUT_CLASSIFICATION	9.13842943437139E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999985625379273	WITHOUT_CLASSIFICATION	1.4374620727537766E-6	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999998195104121	WITHOUT_CLASSIFICATION	1.8048958786569913E-7	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999976667984514	WITHOUT_CLASSIFICATION	2.333201548631895E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999920958088447	WITHOUT_CLASSIFICATION	7.904191155176638E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999920958088447	WITHOUT_CLASSIFICATION	7.904191155176638E-6	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999989327391282	WITHOUT_CLASSIFICATION	1.0672608718757802E-6	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999989327391282	WITHOUT_CLASSIFICATION	1.0672608718757802E-6	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999986093629835	WITHOUT_CLASSIFICATION	1.3906370165512148E-6	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999986093629835	WITHOUT_CLASSIFICATION	1.3906370165512148E-6	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999968467367722	WITHOUT_CLASSIFICATION	3.153263227701145E-6	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.99999905360313	WITHOUT_CLASSIFICATION	9.463968700116261E-7	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999941751895594	WITHOUT_CLASSIFICATION	5.824810440652321E-6	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999985916454912	WITHOUT_CLASSIFICATION	1.4083545087633839E-6	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999992876141172	WITHOUT_CLASSIFICATION	7.123858829054967E-7	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999953227816658	WITHOUT_CLASSIFICATION	4.677218334174075E-6	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999987644658606	WITHOUT_CLASSIFICATION	1.235534139326773E-6	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999998437871023	WITHOUT_CLASSIFICATION	1.5621289765411367E-7	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999991269446865	WITHOUT_CLASSIFICATION	8.73055313490971E-7	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.999999496057407	WITHOUT_CLASSIFICATION	5.039425929147023E-7	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999986385475887	WITHOUT_CLASSIFICATION	1.3614524111611392E-6	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999988125586292	WITHOUT_CLASSIFICATION	1.1874413707862E-6	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999990603009978	WITHOUT_CLASSIFICATION	9.396990022227729E-7	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999937723605984	WITHOUT_CLASSIFICATION	6.227639401629237E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999937723605984	WITHOUT_CLASSIFICATION	6.227639401629237E-6	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999986504105455	WITHOUT_CLASSIFICATION	1.349589454497767E-6	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999999102353527	WITHOUT_CLASSIFICATION	8.976464729958199E-7	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999996209291401	WITHOUT_CLASSIFICATION	3.790708598769232E-7	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999302053694	WITHOUT_CLASSIFICATION	6.979463060292675E-8	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999989075551895	WITHOUT_CLASSIFICATION	1.0924448104635263E-6	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.99999657440576	WITHOUT_CLASSIFICATION	3.4255942401002956E-6	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999982005419243	WITHOUT_CLASSIFICATION	1.7994580757653277E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999990833783942	WITHOUT_CLASSIFICATION	9.166216059077416E-7	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999993750507611	WITHOUT_CLASSIFICATION	6.249492388571562E-7	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999974608537003	WITHOUT_CLASSIFICATION	2.5391462996175466E-6	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999990498555035	WITHOUT_CLASSIFICATION	9.501444964644104E-7	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999964517981573	WITHOUT_CLASSIFICATION	3.5482018426804265E-6	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999997965113014	WITHOUT_CLASSIFICATION	2.0348869844577154E-7	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999999946687151	WITHOUT_CLASSIFICATION	5.331284787411693E-9	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.999991415312998	WITHOUT_CLASSIFICATION	8.584687001968525E-6	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999996590373985	WITHOUT_CLASSIFICATION	3.4096260146359084E-7	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999966726738216	WITHOUT_CLASSIFICATION	3.327326178311698E-6	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999997309573332	WITHOUT_CLASSIFICATION	2.690426668107472E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999990331435181	WITHOUT_CLASSIFICATION	9.668564819175912E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999990331435181	WITHOUT_CLASSIFICATION	9.668564819175912E-7	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999996203522014	WITHOUT_CLASSIFICATION	3.796477985947365E-7	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999920120093091	WITHOUT_CLASSIFICATION	7.98799069087702E-6	TEST
//[]	WITHOUT_CLASSIFICATION	0.999781307164905	WITHOUT_CLASSIFICATION	2.186928350949999E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.999781307164905	WITHOUT_CLASSIFICATION	2.186928350949999E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.999999752427375	WITHOUT_CLASSIFICATION	2.475726250227772E-7	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999658792248549	WITHOUT_CLASSIFICATION	3.412077514521727E-5	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.999924454484645	WITHOUT_CLASSIFICATION	7.554551535503115E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999474495027763	WITHOUT_CLASSIFICATION	5.255049722368657E-5	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999990630544949	WITHOUT_CLASSIFICATION	9.369455051830374E-7	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999979478614242	WITHOUT_CLASSIFICATION	2.0521385758997697E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999979478614242	WITHOUT_CLASSIFICATION	2.0521385758997697E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999999847358645	WITHOUT_CLASSIFICATION	1.5264135502752194E-7	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999989270116691	WITHOUT_CLASSIFICATION	1.0729883307699523E-6	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999992323465869	WITHOUT_CLASSIFICATION	7.676534131270859E-7	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999924075965165	WITHOUT_CLASSIFICATION	7.592403483567831E-6	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999920120093091	WITHOUT_CLASSIFICATION	7.98799069087702E-6	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999664231374787	WITHOUT_CLASSIFICATION	3.357686252124813E-5	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999991231489732	WITHOUT_CLASSIFICATION	8.768510267983183E-6	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999991231489732	WITHOUT_CLASSIFICATION	8.768510267983183E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999948716414804	WITHOUT_CLASSIFICATION	5.128358519581507E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999959623306764	WITHOUT_CLASSIFICATION	4.037669323584134E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999959623306764	WITHOUT_CLASSIFICATION	4.037669323584134E-6	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999997474697082	WITHOUT_CLASSIFICATION	2.5253029182574055E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999997474697082	WITHOUT_CLASSIFICATION	2.5253029182574055E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999997474697082	WITHOUT_CLASSIFICATION	2.5253029182574055E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999959623306764	WITHOUT_CLASSIFICATION	4.037669323584134E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999959623306764	WITHOUT_CLASSIFICATION	4.037669323584134E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999948716414804	WITHOUT_CLASSIFICATION	5.128358519581507E-6	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999993275788429	WITHOUT_CLASSIFICATION	6.724211570042838E-7	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999967974122274	WITHOUT_CLASSIFICATION	3.2025877726806653E-6	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999998699115958	WITHOUT_CLASSIFICATION	1.3008840410959418E-7	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999976162687838	WITHOUT_CLASSIFICATION	2.3837312162540437E-6	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999998403805852	WITHOUT_CLASSIFICATION	1.596194147125035E-7	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999977821980277	WITHOUT_CLASSIFICATION	2.217801972342235E-6	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999961057041185	WITHOUT_CLASSIFICATION	3.894295881578298E-6	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999993199411538	WITHOUT_CLASSIFICATION	6.800588462944893E-7	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999990498555035	WITHOUT_CLASSIFICATION	9.501444964644104E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999959623306764	WITHOUT_CLASSIFICATION	4.037669323584134E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999959623306764	WITHOUT_CLASSIFICATION	4.037669323584134E-6	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.999999095453169	WITHOUT_CLASSIFICATION	9.045468309399473E-7	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999975855805203	WITHOUT_CLASSIFICATION	2.4144194797358854E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999969923622869	WITHOUT_CLASSIFICATION	3.00763771311598E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999999679274579	WITHOUT_CLASSIFICATION	3.2072542106475615E-7	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.99999890445822	WITHOUT_CLASSIFICATION	1.0955417799517488E-6	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999995544564229	WITHOUT_CLASSIFICATION	4.4554357702688875E-7	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999999918208687	WITHOUT_CLASSIFICATION	8.17913129781271E-8	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999992999159354	WITHOUT_CLASSIFICATION	7.000840645718318E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999973923749088	WITHOUT_CLASSIFICATION	2.6076250912013333E-6	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999998089841166	WITHOUT_CLASSIFICATION	1.910158834543591E-7	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999491998410807	WITHOUT_CLASSIFICATION	5.0800158919416074E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999987886776288	WITHOUT_CLASSIFICATION	1.2113223711223697E-6	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999992468456921	WITHOUT_CLASSIFICATION	7.531543078887618E-7	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999989558883273	WITHOUT_CLASSIFICATION	1.04411167269754E-6	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999998842500295	WITHOUT_CLASSIFICATION	1.1574997041941978E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999947276639418	WITHOUT_CLASSIFICATION	5.272336058180309E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999947276639418	WITHOUT_CLASSIFICATION	5.272336058180309E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999947276639418	WITHOUT_CLASSIFICATION	5.272336058180309E-6	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999995831462413	WITHOUT_CLASSIFICATION	4.168537587021496E-7	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999997071001517	WITHOUT_CLASSIFICATION	2.9289984831170713E-7	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.999999227009158	WITHOUT_CLASSIFICATION	7.729908420988984E-7	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999992330368573	WITHOUT_CLASSIFICATION	7.669631425961269E-7	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999998371860883	WITHOUT_CLASSIFICATION	1.6281391167431823E-7	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999987889093275	WITHOUT_CLASSIFICATION	1.211090672504124E-6	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999998442043067	WITHOUT_CLASSIFICATION	1.5579569342767503E-7	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999993573795025	WITHOUT_CLASSIFICATION	6.426204974390323E-7	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999997759605931	WITHOUT_CLASSIFICATION	2.2403940697490245E-7	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999993206241952	WITHOUT_CLASSIFICATION	6.79375804889818E-7	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999974868795236	WITHOUT_CLASSIFICATION	2.5131204764573155E-6	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999929847915922	WITHOUT_CLASSIFICATION	7.015208407908785E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999999847358645	WITHOUT_CLASSIFICATION	1.5264135502752194E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999959623306764	WITHOUT_CLASSIFICATION	4.037669323584134E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999959623306764	WITHOUT_CLASSIFICATION	4.037669323584134E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999948716414804	WITHOUT_CLASSIFICATION	5.128358519581507E-6	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999977821980277	WITHOUT_CLASSIFICATION	2.217801972342235E-6	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999975855805203	WITHOUT_CLASSIFICATION	2.4144194797358854E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999999679274579	WITHOUT_CLASSIFICATION	3.2072542106475615E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999995544564229	WITHOUT_CLASSIFICATION	4.4554357702688875E-7	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999969923622869	WITHOUT_CLASSIFICATION	3.00763771311598E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999999918208687	WITHOUT_CLASSIFICATION	8.17913129781271E-8	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999998089841166	WITHOUT_CLASSIFICATION	1.910158834543591E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999973923749088	WITHOUT_CLASSIFICATION	2.6076250912013333E-6	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999987886776288	WITHOUT_CLASSIFICATION	1.2113223711223697E-6	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.999998557563144	WITHOUT_CLASSIFICATION	1.4424368560140584E-6	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999979512444281	WITHOUT_CLASSIFICATION	2.048755571849379E-6	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999900920071403	WITHOUT_CLASSIFICATION	9.907992859651331E-6	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999973206221344	WITHOUT_CLASSIFICATION	2.679377865586876E-6	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999997883530134	WITHOUT_CLASSIFICATION	2.116469865612417E-7	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999988799025522	WITHOUT_CLASSIFICATION	1.1200974478331846E-6	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999994370569247	WITHOUT_CLASSIFICATION	5.629430751387584E-7	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999999674025617	WITHOUT_CLASSIFICATION	3.259743822514203E-8	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999997854405274	WITHOUT_CLASSIFICATION	2.145594726934628E-7	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999989738601283	WITHOUT_CLASSIFICATION	1.0261398717235907E-6	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999995409134556	WITHOUT_CLASSIFICATION	4.5908654450252186E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999995187530925	WITHOUT_CLASSIFICATION	4.812469075276963E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999971732805094	WITHOUT_CLASSIFICATION	2.826719490508887E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999990366663457	WITHOUT_CLASSIFICATION	9.63333654233865E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999997968842649	WITHOUT_CLASSIFICATION	2.0311573522142754E-7	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.999999399634948	WITHOUT_CLASSIFICATION	6.003650519517874E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999999007578931	WITHOUT_CLASSIFICATION	9.9242106900443E-7	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999957324075853	WITHOUT_CLASSIFICATION	4.267592414663695E-6	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999997308369196	WITHOUT_CLASSIFICATION	2.6916308038306076E-7	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999995712368231	WITHOUT_CLASSIFICATION	4.287631768402081E-7	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999999739095037	WITHOUT_CLASSIFICATION	2.6090496293192694E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999698022338	WITHOUT_CLASSIFICATION	3.0197766178748756E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999698022338	WITHOUT_CLASSIFICATION	3.0197766178748756E-8	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999971307423557	WITHOUT_CLASSIFICATION	2.8692576442359536E-6	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999992929540112	WITHOUT_CLASSIFICATION	7.070459886995914E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999964859433851	WITHOUT_CLASSIFICATION	3.51405661489498E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999964859433851	WITHOUT_CLASSIFICATION	3.51405661489498E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999964859433851	WITHOUT_CLASSIFICATION	3.51405661489498E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999395146090042	WITHOUT_CLASSIFICATION	6.0485390995869106E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999395146090042	WITHOUT_CLASSIFICATION	6.0485390995869106E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999395146090042	WITHOUT_CLASSIFICATION	6.0485390995869106E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999395146090042	WITHOUT_CLASSIFICATION	6.0485390995869106E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999639810400569	WITHOUT_CLASSIFICATION	3.6018959943124054E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999639810400569	WITHOUT_CLASSIFICATION	3.6018959943124054E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999639810400569	WITHOUT_CLASSIFICATION	3.6018959943124054E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.999968326204762	WITHOUT_CLASSIFICATION	3.167379523813378E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.999968326204762	WITHOUT_CLASSIFICATION	3.167379523813378E-5	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999631692180372	WITHOUT_CLASSIFICATION	3.683078196287211E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999661974117473	WITHOUT_CLASSIFICATION	3.3802588252731844E-5	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999992929540112	WITHOUT_CLASSIFICATION	7.070459886995914E-7	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999994070570698	WITHOUT_CLASSIFICATION	5.929429302104153E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999964859433851	WITHOUT_CLASSIFICATION	3.51405661489498E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999964859433851	WITHOUT_CLASSIFICATION	3.51405661489498E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999395146090042	WITHOUT_CLASSIFICATION	6.0485390995869106E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999395146090042	WITHOUT_CLASSIFICATION	6.0485390995869106E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999395146090042	WITHOUT_CLASSIFICATION	6.0485390995869106E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999639810400569	WITHOUT_CLASSIFICATION	3.6018959943124054E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999639810400569	WITHOUT_CLASSIFICATION	3.6018959943124054E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.999968326204762	WITHOUT_CLASSIFICATION	3.167379523813378E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999661974117473	WITHOUT_CLASSIFICATION	3.3802588252731844E-5	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999987808065202	WITHOUT_CLASSIFICATION	1.2191934799297983E-6	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999987808065202	WITHOUT_CLASSIFICATION	1.2191934799297983E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999984609379406	WITHOUT_CLASSIFICATION	1.5390620594282674E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999984609379406	WITHOUT_CLASSIFICATION	1.5390620594282674E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999948674107633	WITHOUT_CLASSIFICATION	5.132589236663352E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999948674107633	WITHOUT_CLASSIFICATION	5.132589236663352E-6	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999990709616903	WITHOUT_CLASSIFICATION	9.290383096720232E-7	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999983432373526	WITHOUT_CLASSIFICATION	1.6567626473418238E-6	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999983432373526	WITHOUT_CLASSIFICATION	1.6567626473418238E-6	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999989349080539	WITHOUT_CLASSIFICATION	1.065091946149555E-6	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999989349080539	WITHOUT_CLASSIFICATION	1.065091946149555E-6	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999990270231	WITHOUT_CLASSIFICATION	9.72976900001453E-7	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999968467098233	WITHOUT_CLASSIFICATION	3.1532901767632426E-6	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999968467098233	WITHOUT_CLASSIFICATION	3.1532901767632426E-6	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999999970984545	WITHOUT_CLASSIFICATION	2.9015455037059116E-8	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999991663933259	WITHOUT_CLASSIFICATION	8.336066740288547E-7	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999981091737634	WITHOUT_CLASSIFICATION	1.890826236678943E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999395146090042	WITHOUT_CLASSIFICATION	6.0485390995869106E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999395146090042	WITHOUT_CLASSIFICATION	6.0485390995869106E-5	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999999970984545	WITHOUT_CLASSIFICATION	2.9015455037059116E-8	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999989105464783	WITHOUT_CLASSIFICATION	1.089453521698553E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999940602603061	WITHOUT_CLASSIFICATION	5.939739693830833E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999940602603061	WITHOUT_CLASSIFICATION	5.939739693830833E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999940602603061	WITHOUT_CLASSIFICATION	5.939739693830833E-6	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999996131416794	WITHOUT_CLASSIFICATION	3.8685832060238586E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.999994264923828	WITHOUT_CLASSIFICATION	5.735076171993866E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999898693230264	WITHOUT_CLASSIFICATION	1.0130676973629853E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999898693230264	WITHOUT_CLASSIFICATION	1.0130676973629853E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.999998696437396	WITHOUT_CLASSIFICATION	1.3035626039318943E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999993450470384	WITHOUT_CLASSIFICATION	6.549529615682582E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999992955513566	WITHOUT_CLASSIFICATION	7.044486435464237E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999983654596556	WITHOUT_CLASSIFICATION	1.6345403444514446E-6	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999984457706161	WITHOUT_CLASSIFICATION	1.554229383878936E-6	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999985551494346	WITHOUT_CLASSIFICATION	1.4448505653771754E-6	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999985551494346	WITHOUT_CLASSIFICATION	1.4448505653771754E-6	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999989083750033	WITHOUT_CLASSIFICATION	1.0916249967371782E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999601208469905	WITHOUT_CLASSIFICATION	3.9879153009542626E-5	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999601208469905	WITHOUT_CLASSIFICATION	3.9879153009542626E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999395146090042	WITHOUT_CLASSIFICATION	6.0485390995869106E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999940602603061	WITHOUT_CLASSIFICATION	5.939739693830833E-6	TEST
// args	WITHOUT_CLASSIFICATION	0.999994264923828	WITHOUT_CLASSIFICATION	5.735076171993866E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999898693230264	WITHOUT_CLASSIFICATION	1.0130676973629853E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.999998696437396	WITHOUT_CLASSIFICATION	1.3035626039318943E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999993450470384	WITHOUT_CLASSIFICATION	6.549529615682582E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999992955513566	WITHOUT_CLASSIFICATION	7.044486435464237E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999983654596556	WITHOUT_CLASSIFICATION	1.6345403444514446E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999601208469905	WITHOUT_CLASSIFICATION	3.9879153009542626E-5	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999990128480946	WITHOUT_CLASSIFICATION	9.871519053751926E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999990524254273	WITHOUT_CLASSIFICATION	9.475745727249687E-7	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999983897557139	WITHOUT_CLASSIFICATION	1.6102442860747187E-6	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999988722838149	WITHOUT_CLASSIFICATION	1.1277161850914903E-6	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999982170945131	WITHOUT_CLASSIFICATION	1.7829054868961559E-6	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999992271627532	WITHOUT_CLASSIFICATION	7.728372467811575E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999964953902354	WITHOUT_CLASSIFICATION	3.504609764656664E-6	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999964953902354	WITHOUT_CLASSIFICATION	3.504609764656664E-6	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999994743239115	WITHOUT_CLASSIFICATION	5.256760885202188E-7	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999997788277488	WITHOUT_CLASSIFICATION	2.211722510786474E-7	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999997245977058	WITHOUT_CLASSIFICATION	2.754022942862192E-7	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999995661167185	WITHOUT_CLASSIFICATION	4.338832815396411E-7	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999997813066597	WITHOUT_CLASSIFICATION	2.18693340393441E-7	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999997813066597	WITHOUT_CLASSIFICATION	2.18693340393441E-7	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999999099557582	WITHOUT_CLASSIFICATION	9.00442419092245E-8	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.999999860060288	WITHOUT_CLASSIFICATION	1.399397120935169E-7	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999996318499366	WITHOUT_CLASSIFICATION	3.681500634010299E-7	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999996318499366	WITHOUT_CLASSIFICATION	3.681500634010299E-7	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999992627438539	WITHOUT_CLASSIFICATION	7.372561460593488E-7	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999997896000297	WITHOUT_CLASSIFICATION	2.1039997037673418E-7	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999984457706161	WITHOUT_CLASSIFICATION	1.554229383878936E-6	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999976459597625	WITHOUT_CLASSIFICATION	2.354040237518405E-6	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.99999969052075	WITHOUT_CLASSIFICATION	3.094792499468629E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999990971085054	WITHOUT_CLASSIFICATION	9.028914946371941E-7	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999992739285429	WITHOUT_CLASSIFICATION	7.26071457062341E-7	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999969168048805	WITHOUT_CLASSIFICATION	3.0831951194451935E-6	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999981542362398	WITHOUT_CLASSIFICATION	1.8457637600668343E-6	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999989847002088	WITHOUT_CLASSIFICATION	1.0152997912957257E-6	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999990661239255	WITHOUT_CLASSIFICATION	9.338760744465152E-7	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999998348237915	WITHOUT_CLASSIFICATION	1.6517620840285788E-7	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999998348237915	WITHOUT_CLASSIFICATION	1.6517620840285788E-7	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999984264230911	WITHOUT_CLASSIFICATION	1.573576908830875E-6	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999984264230911	WITHOUT_CLASSIFICATION	1.573576908830875E-6	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999994128536887	WITHOUT_CLASSIFICATION	5.871463114434776E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999976302053348	WITHOUT_CLASSIFICATION	2.3697946652080387E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999976302053348	WITHOUT_CLASSIFICATION	2.3697946652080387E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999976302053348	WITHOUT_CLASSIFICATION	2.3697946652080387E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999993305826139	WITHOUT_CLASSIFICATION	6.6941738610331615E-6	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999991714013079	WITHOUT_CLASSIFICATION	8.285986920320633E-7	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999991714013079	WITHOUT_CLASSIFICATION	8.285986920320633E-7	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999984001919017	WITHOUT_CLASSIFICATION	1.5998080982842222E-6	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999969018936662	WITHOUT_CLASSIFICATION	3.098106333930463E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999954399774675	WITHOUT_CLASSIFICATION	4.560022532445702E-6	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999976388729113	WITHOUT_CLASSIFICATION	2.361127088803292E-6	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999993206020039	WITHOUT_CLASSIFICATION	6.793979960362469E-7	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999966231452457	WITHOUT_CLASSIFICATION	3.3768547542031043E-6	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999993837451376	WITHOUT_CLASSIFICATION	6.162548624422658E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999971732805094	WITHOUT_CLASSIFICATION	2.826719490508887E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999971732805094	WITHOUT_CLASSIFICATION	2.826719490508887E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999993305826139	WITHOUT_CLASSIFICATION	6.6941738610331615E-6	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999984001919017	WITHOUT_CLASSIFICATION	1.5998080982842222E-6	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998583175245	WITHOUT_CLASSIFICATION	1.4168247541678353E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999969018936662	WITHOUT_CLASSIFICATION	3.098106333930463E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999954399774675	WITHOUT_CLASSIFICATION	4.560022532445702E-6	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999996579753302	WITHOUT_CLASSIFICATION	3.4202466980577004E-7	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999967690592825	WITHOUT_CLASSIFICATION	3.230940717531289E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998233055462	WITHOUT_CLASSIFICATION	1.7669445393352608E-7	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9999261535876341	WITHOUT_CLASSIFICATION	7.384641236586136E-5	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999991450208088	WITHOUT_CLASSIFICATION	8.549791913186422E-7	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999993997836394	WITHOUT_CLASSIFICATION	6.002163605332997E-7	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999997089570737	WITHOUT_CLASSIFICATION	2.9104292631171243E-7	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999996579753302	WITHOUT_CLASSIFICATION	3.4202466980577004E-7	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999997396264089	WITHOUT_CLASSIFICATION	2.6037359119171415E-7	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999997396264089	WITHOUT_CLASSIFICATION	2.6037359119171415E-7	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999993522628214	WITHOUT_CLASSIFICATION	6.477371786036722E-7	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999988198281754	WITHOUT_CLASSIFICATION	1.1801718246142694E-6	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999997816057191	WITHOUT_CLASSIFICATION	2.1839428091349584E-7	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999996110889854	WITHOUT_CLASSIFICATION	3.8891101471565044E-7	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999980273913583	WITHOUT_CLASSIFICATION	1.9726086416000147E-6	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999998021255889	WITHOUT_CLASSIFICATION	1.9787441108266133E-7	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.999990724938229	WITHOUT_CLASSIFICATION	9.275061770993626E-6	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999995191292297	WITHOUT_CLASSIFICATION	4.8087077031733E-7	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999601215802	WITHOUT_CLASSIFICATION	3.987841988322983E-8	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999959990901255	WITHOUT_CLASSIFICATION	4.000909874589309E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999983440780628	WITHOUT_CLASSIFICATION	1.6559219372350889E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999996110889854	WITHOUT_CLASSIFICATION	3.8891101471565044E-7	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999980273913583	WITHOUT_CLASSIFICATION	1.9726086416000147E-6	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999987368206297	WITHOUT_CLASSIFICATION	1.2631793702523018E-6	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999928724285555	WITHOUT_CLASSIFICATION	7.127571444562045E-6	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999996667219806	WITHOUT_CLASSIFICATION	3.332780193374336E-7	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999938106904158	WITHOUT_CLASSIFICATION	6.189309584096534E-6	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999941108572156	WITHOUT_CLASSIFICATION	5.8891427844218345E-6	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999843831861105	WITHOUT_CLASSIFICATION	1.561681388953411E-5	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9998087250981509	WITHOUT_CLASSIFICATION	1.912749018490754E-4	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999934035527331	WITHOUT_CLASSIFICATION	6.596447266766699E-6	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999933869889975	WITHOUT_CLASSIFICATION	6.613011002456611E-6	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999659730087329	WITHOUT_CLASSIFICATION	3.4026991267024175E-5	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999875839343789	WITHOUT_CLASSIFICATION	1.241606562112171E-5	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9999341988499517	WITHOUT_CLASSIFICATION	6.580115004826166E-5	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999988813974049	WITHOUT_CLASSIFICATION	1.1186025950700297E-6	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999971576865975	WITHOUT_CLASSIFICATION	2.842313402525119E-6	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999994012618392	WITHOUT_CLASSIFICATION	5.987381608934605E-7	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999962727028242	WITHOUT_CLASSIFICATION	3.7272971756734466E-6	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999711421497692	WITHOUT_CLASSIFICATION	2.8857850230716583E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999974024592115	WITHOUT_CLASSIFICATION	2.5975407885484626E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999980429618931	WITHOUT_CLASSIFICATION	1.9570381070002045E-6	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.999999286074794	WITHOUT_CLASSIFICATION	7.13925205912024E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999711421497692	WITHOUT_CLASSIFICATION	2.8857850230716583E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999974024592115	WITHOUT_CLASSIFICATION	2.5975407885484626E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999980429618931	WITHOUT_CLASSIFICATION	1.9570381070002045E-6	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999977521619366	WITHOUT_CLASSIFICATION	2.247838063334113E-6	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999996203257091	WITHOUT_CLASSIFICATION	3.796742908741763E-7	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999989523607301	WITHOUT_CLASSIFICATION	1.0476392699175529E-6	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999990210109158	WITHOUT_CLASSIFICATION	9.78989084296587E-7	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999991348991978	WITHOUT_CLASSIFICATION	8.651008021711387E-7	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999992657588481	WITHOUT_CLASSIFICATION	7.342411519369526E-7	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999970480821107	WITHOUT_CLASSIFICATION	2.951917889411586E-6	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999996311321981	WITHOUT_CLASSIFICATION	3.6886780180112986E-7	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999974749992472	WITHOUT_CLASSIFICATION	2.525000752760806E-6	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999965637412954	WITHOUT_CLASSIFICATION	3.436258704492272E-6	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9999791172003206	WITHOUT_CLASSIFICATION	2.0882799679462664E-5	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999998550831319	WITHOUT_CLASSIFICATION	1.449168681144187E-7	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999991305187996	WITHOUT_CLASSIFICATION	8.69481200359453E-7	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999983047826638	WITHOUT_CLASSIFICATION	1.6952173362036037E-6	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999433908146136	WITHOUT_CLASSIFICATION	5.660918538644158E-5	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999997784302588	WITHOUT_CLASSIFICATION	2.2156974122466962E-7	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999995870466819	WITHOUT_CLASSIFICATION	4.1295331810714635E-7	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999992085081199	WITHOUT_CLASSIFICATION	7.914918800587559E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999987129141239	WITHOUT_CLASSIFICATION	1.2870858761545966E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999990913669433	WITHOUT_CLASSIFICATION	9.086330566502044E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999987702393492	WITHOUT_CLASSIFICATION	1.2297606507595377E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999895208001891	WITHOUT_CLASSIFICATION	1.04791998108664E-5	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999895208001891	WITHOUT_CLASSIFICATION	1.04791998108664E-5	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999961731384961	WITHOUT_CLASSIFICATION	3.826861503933206E-6	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999961731384961	WITHOUT_CLASSIFICATION	3.826861503933206E-6	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999997880346505	WITHOUT_CLASSIFICATION	2.1196534950174944E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999997880346505	WITHOUT_CLASSIFICATION	2.1196534950174944E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999995491854409	WITHOUT_CLASSIFICATION	4.508145590216808E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999997336217366	WITHOUT_CLASSIFICATION	2.663782634530119E-7	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999997548427229	WITHOUT_CLASSIFICATION	2.451572771483813E-7	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999937061676923	WITHOUT_CLASSIFICATION	6.293832307656829E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999982063435905	WITHOUT_CLASSIFICATION	1.7936564095359184E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999994888680215	WITHOUT_CLASSIFICATION	5.111319784567167E-7	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999953021665854	WITHOUT_CLASSIFICATION	4.697833414556228E-6	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999969490956228	WITHOUT_CLASSIFICATION	3.0509043772323458E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999971732805094	WITHOUT_CLASSIFICATION	2.826719490508887E-6	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999995491854409	WITHOUT_CLASSIFICATION	4.508145590216808E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999997336217366	WITHOUT_CLASSIFICATION	2.663782634530119E-7	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999997548427229	WITHOUT_CLASSIFICATION	2.451572771483813E-7	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999982063435905	WITHOUT_CLASSIFICATION	1.7936564095359184E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999994888680215	WITHOUT_CLASSIFICATION	5.111319784567167E-7	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999982804047877	WITHOUT_CLASSIFICATION	1.7195952124413076E-6	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999885472590355	WITHOUT_CLASSIFICATION	1.1452740964540665E-5	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999996941758127	WITHOUT_CLASSIFICATION	3.058241873744518E-7	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999996941758127	WITHOUT_CLASSIFICATION	3.058241873744518E-7	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999977483480076	WITHOUT_CLASSIFICATION	2.251651992352812E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998077653535	WITHOUT_CLASSIFICATION	1.9223464657355802E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999987051567755	WITHOUT_CLASSIFICATION	1.2948432244654702E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999992025731642	WITHOUT_CLASSIFICATION	7.9742683580163E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999992025731642	WITHOUT_CLASSIFICATION	7.9742683580163E-6	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999992428438107	WITHOUT_CLASSIFICATION	7.571561893451058E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999996406081735	WITHOUT_CLASSIFICATION	3.5939182650880374E-7	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.999999322748871	WITHOUT_CLASSIFICATION	6.772511289183822E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999997279479605	WITHOUT_CLASSIFICATION	2.720520393816243E-7	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999992712962928	WITHOUT_CLASSIFICATION	7.287037072381662E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999990366663457	WITHOUT_CLASSIFICATION	9.63333654233865E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999997968842649	WITHOUT_CLASSIFICATION	2.0311573522142754E-7	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.999999399634948	WITHOUT_CLASSIFICATION	6.003650519517874E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999999007578931	WITHOUT_CLASSIFICATION	9.9242106900443E-7	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999995712368231	WITHOUT_CLASSIFICATION	4.287631768402081E-7	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999999739095037	WITHOUT_CLASSIFICATION	2.6090496293192694E-7	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999992428438107	WITHOUT_CLASSIFICATION	7.571561893451058E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999996406081735	WITHOUT_CLASSIFICATION	3.5939182650880374E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999997279479605	WITHOUT_CLASSIFICATION	2.720520393816243E-7	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999998163779326	WITHOUT_CLASSIFICATION	1.8362206741147593E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999987051567755	WITHOUT_CLASSIFICATION	1.2948432244654702E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999987051567755	WITHOUT_CLASSIFICATION	1.2948432244654702E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999983440780628	WITHOUT_CLASSIFICATION	1.6559219372350889E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999983440780628	WITHOUT_CLASSIFICATION	1.6559219372350889E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999417516071	WITHOUT_CLASSIFICATION	5.8248392952582814E-8	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999417516071	WITHOUT_CLASSIFICATION	5.8248392952582814E-8	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999996916106192	WITHOUT_CLASSIFICATION	3.0838938087864935E-7	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999990403684726	WITHOUT_CLASSIFICATION	9.596315273171188E-7	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999998133121352	WITHOUT_CLASSIFICATION	1.8668786485881154E-7	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999971698638027	WITHOUT_CLASSIFICATION	2.8301361973327392E-6	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999998544169312	WITHOUT_CLASSIFICATION	1.455830689412912E-7	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.999999604146242	WITHOUT_CLASSIFICATION	3.958537579134223E-7	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999388095219	WITHOUT_CLASSIFICATION	6.119047818360504E-8	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999840289442	WITHOUT_CLASSIFICATION	1.5971055845353544E-8	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999996906788258	WITHOUT_CLASSIFICATION	3.0932117420648973E-7	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999994143905815	WITHOUT_CLASSIFICATION	5.85609418531755E-7	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999967267292298	WITHOUT_CLASSIFICATION	3.2732707702302665E-6	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999974911574194	WITHOUT_CLASSIFICATION	2.5088425806798772E-6	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999990272764968	WITHOUT_CLASSIFICATION	9.727235032085855E-7	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999997325830493	WITHOUT_CLASSIFICATION	2.674169507662346E-7	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999989958474252	WITHOUT_CLASSIFICATION	1.0041525747686364E-6	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999975062797888	WITHOUT_CLASSIFICATION	2.49372021127085E-6	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999978006497012	WITHOUT_CLASSIFICATION	2.1993502987956413E-6	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999998651278078	WITHOUT_CLASSIFICATION	1.3487219219038318E-7	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999999670232183	WITHOUT_CLASSIFICATION	3.297678178034614E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999997968842649	WITHOUT_CLASSIFICATION	2.0311573522142754E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999999007578931	WITHOUT_CLASSIFICATION	9.9242106900443E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999698022338	WITHOUT_CLASSIFICATION	3.0197766178748756E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999898693230264	WITHOUT_CLASSIFICATION	1.0130676973629853E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999898693230264	WITHOUT_CLASSIFICATION	1.0130676973629853E-5	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999998163779326	WITHOUT_CLASSIFICATION	1.8362206741147593E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999987051567755	WITHOUT_CLASSIFICATION	1.2948432244654702E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999983440780628	WITHOUT_CLASSIFICATION	1.6559219372350889E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999417516071	WITHOUT_CLASSIFICATION	5.8248392952582814E-8	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.999999678395656	WITHOUT_CLASSIFICATION	3.216043441051332E-7	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999999428863482	WITHOUT_CLASSIFICATION	5.7113651751278006E-8	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999996208875602	WITHOUT_CLASSIFICATION	3.7911243968422714E-7	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999999747280893	WITHOUT_CLASSIFICATION	2.527191069194352E-8	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999997098134554	WITHOUT_CLASSIFICATION	2.9018654460293054E-7	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999997098134554	WITHOUT_CLASSIFICATION	2.9018654460293054E-7	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999992742189501	WITHOUT_CLASSIFICATION	7.257810498321029E-7	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999941652621525	WITHOUT_CLASSIFICATION	5.834737847527701E-6	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999984852361044	WITHOUT_CLASSIFICATION	1.514763895643999E-6	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999980834704647	WITHOUT_CLASSIFICATION	1.91652953529108E-6	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999895200444576	WITHOUT_CLASSIFICATION	1.047995554234248E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999895200444576	WITHOUT_CLASSIFICATION	1.047995554234248E-5	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999998199100357	WITHOUT_CLASSIFICATION	1.8008996418803813E-7	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999991815532285	WITHOUT_CLASSIFICATION	8.184467715859853E-7	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999988825082541	WITHOUT_CLASSIFICATION	1.1174917459249313E-6	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999999151045735	WITHOUT_CLASSIFICATION	8.489542655803048E-8	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999949048519785	WITHOUT_CLASSIFICATION	5.095148021418211E-6	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999985894385486	WITHOUT_CLASSIFICATION	1.41056145144053E-6	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999970762663091	WITHOUT_CLASSIFICATION	2.923733690828183E-6	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.999999422217758	WITHOUT_CLASSIFICATION	5.777822420589013E-7	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999992510066884	WITHOUT_CLASSIFICATION	7.489933115635514E-7	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.999999837210956	WITHOUT_CLASSIFICATION	1.6278904389998684E-7	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999995891710292	WITHOUT_CLASSIFICATION	4.108289709118332E-7	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999985866937917	WITHOUT_CLASSIFICATION	1.4133062082625482E-6	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999997808412678	WITHOUT_CLASSIFICATION	2.191587322272725E-7	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999997931808315	WITHOUT_CLASSIFICATION	2.0681916854397027E-7	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999934309468483	WITHOUT_CLASSIFICATION	6.56905315165328E-6	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999999310175283	WITHOUT_CLASSIFICATION	6.898247172210967E-8	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999976493511727	WITHOUT_CLASSIFICATION	2.350648827259064E-6	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999995445689589	WITHOUT_CLASSIFICATION	4.5543104109508703E-7	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999999933827106	WITHOUT_CLASSIFICATION	6.617289371397387E-9	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999895480088112	WITHOUT_CLASSIFICATION	1.0451991188640144E-5	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999975954597036	WITHOUT_CLASSIFICATION	2.4045402964383502E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999987038943392	WITHOUT_CLASSIFICATION	1.2961056607947854E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999987038943392	WITHOUT_CLASSIFICATION	1.2961056607947854E-6	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999950191318986	WITHOUT_CLASSIFICATION	4.980868101430172E-6	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999908292726704	WITHOUT_CLASSIFICATION	9.170727329641458E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999990833783942	WITHOUT_CLASSIFICATION	9.166216059077416E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999990833783942	WITHOUT_CLASSIFICATION	9.166216059077416E-7	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999959342434601	WITHOUT_CLASSIFICATION	4.065756539855493E-6	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999898452696429	WITHOUT_CLASSIFICATION	1.0154730357119441E-5	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999872743224344	WITHOUT_CLASSIFICATION	1.2725677565573519E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999969499879315	WITHOUT_CLASSIFICATION	3.0500120684774726E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999969499879315	WITHOUT_CLASSIFICATION	3.0500120684774726E-6	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999874213705786	WITHOUT_CLASSIFICATION	1.2578629421447265E-5	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999975541621325	WITHOUT_CLASSIFICATION	2.445837867385099E-6	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999963933165035	WITHOUT_CLASSIFICATION	3.6066834964501734E-6	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999996715239127	WITHOUT_CLASSIFICATION	3.284760872533258E-7	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999996011576486	WITHOUT_CLASSIFICATION	3.988423513193809E-7	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999995529356503	WITHOUT_CLASSIFICATION	4.4706434968088514E-7	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999973603153958	WITHOUT_CLASSIFICATION	2.639684604185342E-6	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999870726849246	WITHOUT_CLASSIFICATION	1.2927315075309848E-5	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999949278289234	WITHOUT_CLASSIFICATION	5.072171076583928E-6	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999988744183645	WITHOUT_CLASSIFICATION	1.1255816354277932E-6	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999864750319736	WITHOUT_CLASSIFICATION	1.35249680264426E-5	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999954273481136	WITHOUT_CLASSIFICATION	4.572651886293119E-6	TEST
// close it out	WITHOUT_CLASSIFICATION	0.999997341370182	WITHOUT_CLASSIFICATION	2.6586298180284398E-6	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999874164467859	WITHOUT_CLASSIFICATION	1.258355321398685E-5	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999996970526998	WITHOUT_CLASSIFICATION	3.0294730028127375E-7	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999997937638748	WITHOUT_CLASSIFICATION	2.0623612518598247E-7	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999997940648002	WITHOUT_CLASSIFICATION	2.0593519979199185E-7	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999886837466221	WITHOUT_CLASSIFICATION	1.1316253377981033E-5	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999763740107924	WITHOUT_CLASSIFICATION	2.3625989207538034E-5	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999965410308616	WITHOUT_CLASSIFICATION	3.458969138393919E-6	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999986656782649	WITHOUT_CLASSIFICATION	1.3343217351205726E-6	TEST
// Class method	WITHOUT_CLASSIFICATION	0.999996644811657	WITHOUT_CLASSIFICATION	3.3551883431287374E-6	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999982460383239	WITHOUT_CLASSIFICATION	1.7539616761312663E-6	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999974888081872	WITHOUT_CLASSIFICATION	2.511191812743475E-6	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9998829642544466	WITHOUT_CLASSIFICATION	1.170357455534645E-4	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999974773881587	WITHOUT_CLASSIFICATION	2.5226118413281675E-6	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999989780156434	WITHOUT_CLASSIFICATION	1.0219843565329298E-6	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999996634811376	WITHOUT_CLASSIFICATION	3.365188623787655E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.999990700463428	WITHOUT_CLASSIFICATION	9.299536572001923E-6	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999975682950524	WITHOUT_CLASSIFICATION	2.431704947620684E-6	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999998073209133	WITHOUT_CLASSIFICATION	1.9267908669016588E-7	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999874164467859	WITHOUT_CLASSIFICATION	1.258355321398685E-5	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999996634811376	WITHOUT_CLASSIFICATION	3.365188623787655E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.999990700463428	WITHOUT_CLASSIFICATION	9.299536572001923E-6	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999998073209133	WITHOUT_CLASSIFICATION	1.9267908669016588E-7	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999956607327009	WITHOUT_CLASSIFICATION	4.339267299116591E-6	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999926396794309	WITHOUT_CLASSIFICATION	7.360320569110437E-6	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999865335561018	WITHOUT_CLASSIFICATION	1.3466443898296589E-5	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999981796575397	WITHOUT_CLASSIFICATION	1.8203424602343126E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999971335357883	WITHOUT_CLASSIFICATION	2.8664642116258945E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999504221173	WITHOUT_CLASSIFICATION	4.957788261278751E-8	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999943296775072	WITHOUT_CLASSIFICATION	5.670322492762147E-6	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999983070727502	WITHOUT_CLASSIFICATION	1.6929272498193644E-6	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999963134115367	WITHOUT_CLASSIFICATION	3.68658846328195E-6	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999999385046646	WITHOUT_CLASSIFICATION	6.149533548519355E-8	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999989576820416	WITHOUT_CLASSIFICATION	1.042317958396563E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999989576820416	WITHOUT_CLASSIFICATION	1.042317958396563E-5	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999971079528079	WITHOUT_CLASSIFICATION	2.892047192121072E-6	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999958659429015	WITHOUT_CLASSIFICATION	4.134057098444841E-6	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999988092980965	WITHOUT_CLASSIFICATION	1.1907019035458805E-6	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.999997797600907	WITHOUT_CLASSIFICATION	2.2023990929703685E-6	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999979344411531	WITHOUT_CLASSIFICATION	2.0655588467731473E-6	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999961954032633	WITHOUT_CLASSIFICATION	3.8045967366494036E-6	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999968022871293	WITHOUT_CLASSIFICATION	3.197712870821472E-6	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999998759786204	WITHOUT_CLASSIFICATION	1.2402137961290345E-7	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999996226330211	WITHOUT_CLASSIFICATION	3.773669789038172E-7	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999572526731	WITHOUT_CLASSIFICATION	4.274732680407244E-8	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.999996829981674	WITHOUT_CLASSIFICATION	3.1700183259062783E-6	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999998981160039	WITHOUT_CLASSIFICATION	1.0188399619135472E-7	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.999998065301327	WITHOUT_CLASSIFICATION	1.934698673154372E-6	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999996792605252	WITHOUT_CLASSIFICATION	3.2073947480315134E-7	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999993065694014	WITHOUT_CLASSIFICATION	6.934305985520105E-7	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.99999988305016	WITHOUT_CLASSIFICATION	1.1694984005875228E-7	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999987512196671	WITHOUT_CLASSIFICATION	1.2487803329808542E-6	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999993204621764	WITHOUT_CLASSIFICATION	6.795378235953945E-7	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.99999846674995	WITHOUT_CLASSIFICATION	1.5332500499527865E-6	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999988927418741	WITHOUT_CLASSIFICATION	1.1072581258656734E-6	TEST
// Loads	WITHOUT_CLASSIFICATION	0.999991386838284	WITHOUT_CLASSIFICATION	8.613161715974176E-6	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999932139483418	WITHOUT_CLASSIFICATION	6.786051658033621E-6	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999992154857906	WITHOUT_CLASSIFICATION	7.845142095179252E-7	TEST
// others	WITHOUT_CLASSIFICATION	0.9999928216671733	WITHOUT_CLASSIFICATION	7.178332826804426E-6	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999976411221156	WITHOUT_CLASSIFICATION	2.3588778843682694E-6	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999988807095755	WITHOUT_CLASSIFICATION	1.1192904245614154E-6	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999999440181125	WITHOUT_CLASSIFICATION	5.598188739243918E-8	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999721824143	WITHOUT_CLASSIFICATION	2.7817585604806503E-8	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999958718913223	WITHOUT_CLASSIFICATION	4.128108677693221E-6	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999973758053762	WITHOUT_CLASSIFICATION	2.624194623758517E-6	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999985945694668	WITHOUT_CLASSIFICATION	1.4054305331197754E-6	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999975699934792	WITHOUT_CLASSIFICATION	2.4300065208423907E-6	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.999999647941093	WITHOUT_CLASSIFICATION	3.5205890697731677E-7	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999997214741713	WITHOUT_CLASSIFICATION	2.785258287890993E-7	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999996496145934	WITHOUT_CLASSIFICATION	3.5038540649041314E-7	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999860162436862	WITHOUT_CLASSIFICATION	1.3983756313834414E-5	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999988461537076	WITHOUT_CLASSIFICATION	1.153846292486117E-6	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999988242031087	WITHOUT_CLASSIFICATION	1.175796891326776E-6	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.999999158603521	WITHOUT_CLASSIFICATION	8.413964789345255E-7	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999995734270786	WITHOUT_CLASSIFICATION	4.2657292134026197E-7	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999898208500738	WITHOUT_CLASSIFICATION	1.0179149926219855E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999431097322202	WITHOUT_CLASSIFICATION	5.68902677798862E-5	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999962512048269	WITHOUT_CLASSIFICATION	3.7487951731452125E-6	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999984951389708	WITHOUT_CLASSIFICATION	1.5048610292527313E-6	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.999999534362011	WITHOUT_CLASSIFICATION	4.6563798891824813E-7	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999998101579494	WITHOUT_CLASSIFICATION	1.8984205070336373E-7	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999996927490371	WITHOUT_CLASSIFICATION	3.072509629103279E-7	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999998398822547	WITHOUT_CLASSIFICATION	1.6011774532263756E-7	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999986399623706	WITHOUT_CLASSIFICATION	1.3600376293610539E-6	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999985869610662	WITHOUT_CLASSIFICATION	1.4130389337018042E-6	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999999092202122	WITHOUT_CLASSIFICATION	9.077978780369988E-8	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999998962863336	WITHOUT_CLASSIFICATION	1.0371366642041994E-7	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.999997733706103	WITHOUT_CLASSIFICATION	2.2662938969656867E-6	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999534439347579	WITHOUT_CLASSIFICATION	4.655606524211196E-5	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999979275352351	WITHOUT_CLASSIFICATION	2.0724647648875018E-6	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999848203327446	WITHOUT_CLASSIFICATION	1.517966725543502E-5	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999643337397	WITHOUT_CLASSIFICATION	3.566626022527189E-8	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999994737252881	WITHOUT_CLASSIFICATION	5.262747119403292E-7	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999994833498432	WITHOUT_CLASSIFICATION	5.166501567421937E-7	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999901731640488	WITHOUT_CLASSIFICATION	9.826835951276568E-6	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999901731640488	WITHOUT_CLASSIFICATION	9.826835951276568E-6	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999883219093036	WITHOUT_CLASSIFICATION	1.1678090696259746E-5	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999939830314167	WITHOUT_CLASSIFICATION	6.016968583169497E-6	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999972571117274	WITHOUT_CLASSIFICATION	2.742888272601975E-5	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999866257111881	WITHOUT_CLASSIFICATION	1.337428881187794E-5	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999988877253868	WITHOUT_CLASSIFICATION	1.1122746131727287E-6	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999992441838875	WITHOUT_CLASSIFICATION	7.55816112567032E-7	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999670221128568	WITHOUT_CLASSIFICATION	3.297788714323733E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.999993502217266	WITHOUT_CLASSIFICATION	6.497782733962939E-6	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999995043956539	WITHOUT_CLASSIFICATION	4.956043461647542E-7	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.999999458113098	WITHOUT_CLASSIFICATION	5.418869020743579E-7	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999967050343679	WITHOUT_CLASSIFICATION	3.294965632090732E-6	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999981833479492	WITHOUT_CLASSIFICATION	1.8166520507721663E-6	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999814591869327	WITHOUT_CLASSIFICATION	1.8540813067217353E-5	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999985857446991	WITHOUT_CLASSIFICATION	1.4142553008507984E-6	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999953706056193	WITHOUT_CLASSIFICATION	4.62939438082131E-6	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.999985242806329	WITHOUT_CLASSIFICATION	1.4757193670875411E-5	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999860675044455	WITHOUT_CLASSIFICATION	1.3932495554536538E-5	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999951748318892	WITHOUT_CLASSIFICATION	4.825168110751643E-6	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.999999795325577	WITHOUT_CLASSIFICATION	2.0467442289799306E-7	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999996339234675	WITHOUT_CLASSIFICATION	3.6607653258156814E-7	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999925840264211	WITHOUT_CLASSIFICATION	7.415973578802634E-6	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999998554034286	WITHOUT_CLASSIFICATION	1.4459657136264388E-7	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999973019197717	WITHOUT_CLASSIFICATION	2.698080228415404E-6	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999993245271742	WITHOUT_CLASSIFICATION	6.754728257373546E-7	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999993811068062	WITHOUT_CLASSIFICATION	6.188931937271596E-7	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.999994019201908	WITHOUT_CLASSIFICATION	5.9807980919771545E-6	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.999997450631202	WITHOUT_CLASSIFICATION	2.5493687978487095E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999913996144	WITHOUT_CLASSIFICATION	8.600385676386953E-9	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999997299676461	WITHOUT_CLASSIFICATION	2.7003235402497673E-7	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999664043342	WITHOUT_CLASSIFICATION	3.359566581866076E-8	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.999998714867275	WITHOUT_CLASSIFICATION	1.285132725070088E-6	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999991506142674	WITHOUT_CLASSIFICATION	8.493857326302155E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999514707811	WITHOUT_CLASSIFICATION	4.8529218848296066E-8	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999988207046928	WITHOUT_CLASSIFICATION	1.1792953072256294E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999514707811	WITHOUT_CLASSIFICATION	4.8529218848296066E-8	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999996354129936	WITHOUT_CLASSIFICATION	3.6458700639592046E-7	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999971614404584	WITHOUT_CLASSIFICATION	2.8385595416862105E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999971614404584	WITHOUT_CLASSIFICATION	2.8385595416862105E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999971614404584	WITHOUT_CLASSIFICATION	2.8385595416862105E-6	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999998576422763	WITHOUT_CLASSIFICATION	1.4235772380184875E-7	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999998576422763	WITHOUT_CLASSIFICATION	1.4235772380184875E-7	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999975041441634	WITHOUT_CLASSIFICATION	2.4958558365867207E-6	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999998651674693	WITHOUT_CLASSIFICATION	1.3483253076507908E-7	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999978820097818	WITHOUT_CLASSIFICATION	2.11799021824945E-6	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999997280065849	WITHOUT_CLASSIFICATION	2.7199341517454897E-7	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999939290989912	WITHOUT_CLASSIFICATION	6.070901008782573E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999998400722326	WITHOUT_CLASSIFICATION	1.5992776731269908E-7	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999989510217304	WITHOUT_CLASSIFICATION	1.0489782695191017E-6	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999965700177808	WITHOUT_CLASSIFICATION	3.4299822191952946E-6	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999999002714266	WITHOUT_CLASSIFICATION	9.972857341464065E-8	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999997450136971	WITHOUT_CLASSIFICATION	2.549863028207874E-7	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999816862040194	WITHOUT_CLASSIFICATION	1.8313795980640486E-5	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999985457416088	WITHOUT_CLASSIFICATION	1.4542583911543355E-6	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999991494289866	WITHOUT_CLASSIFICATION	8.505710135263806E-7	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999970681367284	WITHOUT_CLASSIFICATION	2.9318632716080664E-6	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.999996822973759	WITHOUT_CLASSIFICATION	3.1770262409860807E-6	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.999997218816534	WITHOUT_CLASSIFICATION	2.78118346601607E-6	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.999999885921248	WITHOUT_CLASSIFICATION	1.1407875206145471E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999967641134622	WITHOUT_CLASSIFICATION	3.235886537854184E-6	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999967641134622	WITHOUT_CLASSIFICATION	3.235886537854184E-6	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999937005731578	WITHOUT_CLASSIFICATION	6.29942684209458E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.999998702673509	WITHOUT_CLASSIFICATION	1.2973264909579079E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.999998702673509	WITHOUT_CLASSIFICATION	1.2973264909579079E-6	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999931774622437	WITHOUT_CLASSIFICATION	6.822537756308365E-6	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999976635384362	WITHOUT_CLASSIFICATION	2.3364615638412143E-6	TEST
// load handle	WITHOUT_CLASSIFICATION	0.999992045131817	WITHOUT_CLASSIFICATION	7.954868182946436E-6	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999928781575257	WITHOUT_CLASSIFICATION	7.121842474237781E-6	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999988669998133	WITHOUT_CLASSIFICATION	1.1330001866853052E-6	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999996142215926	WITHOUT_CLASSIFICATION	3.857784074407946E-7	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999969455640055	WITHOUT_CLASSIFICATION	3.054435994561638E-6	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999994220237728	WITHOUT_CLASSIFICATION	5.779762272378337E-7	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999954567355352	WITHOUT_CLASSIFICATION	4.543264464765897E-6	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999955026104024	WITHOUT_CLASSIFICATION	4.497389597605783E-6	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999965815440466	WITHOUT_CLASSIFICATION	3.4184559533515125E-6	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999957298173722	WITHOUT_CLASSIFICATION	4.270182627770428E-6	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999881448142427	WITHOUT_CLASSIFICATION	1.1855185757325355E-5	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999996746169423	WITHOUT_CLASSIFICATION	3.2538305765329183E-7	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999965700177808	WITHOUT_CLASSIFICATION	3.4299822191952946E-6	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9998113963245925	WITHOUT_CLASSIFICATION	1.8860367540757101E-4	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999973589547768	WITHOUT_CLASSIFICATION	2.6410452230679617E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.999997543511963	WITHOUT_CLASSIFICATION	2.456488037033717E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.999997543511963	WITHOUT_CLASSIFICATION	2.456488037033717E-6	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999980246678862	WITHOUT_CLASSIFICATION	1.975332113754537E-6	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999462192745693	WITHOUT_CLASSIFICATION	5.378072543067798E-5	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999998194816382	WITHOUT_CLASSIFICATION	1.8051836179925697E-7	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999931745040379	WITHOUT_CLASSIFICATION	6.825495962003811E-6	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999395313414	WITHOUT_CLASSIFICATION	6.046865858672989E-8	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.999997843912622	WITHOUT_CLASSIFICATION	2.156087378016254E-6	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.999999969469135	WITHOUT_CLASSIFICATION	3.0530865039031315E-8	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999998650046547	WITHOUT_CLASSIFICATION	1.349953453873289E-7	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999992204801637	WITHOUT_CLASSIFICATION	7.795198362880651E-7	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999999074866021	WITHOUT_CLASSIFICATION	9.25133980059737E-8	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999982842305664	WITHOUT_CLASSIFICATION	1.7157694336716896E-6	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999993195261949	WITHOUT_CLASSIFICATION	6.804738050568329E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999889020576997	WITHOUT_CLASSIFICATION	1.109794230026879E-5	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999997396131052	WITHOUT_CLASSIFICATION	2.603868948695748E-7	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999998896606046	WITHOUT_CLASSIFICATION	1.1033939549270026E-7	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999988756103187	WITHOUT_CLASSIFICATION	1.1243896812561025E-6	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999963120485731	WITHOUT_CLASSIFICATION	3.6879514270451695E-6	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999918430952924	WITHOUT_CLASSIFICATION	8.156904707547553E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999871636203211	WITHOUT_CLASSIFICATION	1.2836379678915854E-5	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.99999941824907	WITHOUT_CLASSIFICATION	5.817509300675914E-7	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999996037954981	WITHOUT_CLASSIFICATION	3.9620450180277684E-7	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999997116213223	WITHOUT_CLASSIFICATION	2.883786777034629E-7	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.999991167468568	WITHOUT_CLASSIFICATION	8.832531431934443E-6	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999567799772	WITHOUT_CLASSIFICATION	4.322002279811892E-8	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999997153053155	WITHOUT_CLASSIFICATION	2.846946844612821E-7	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999694790943797	WITHOUT_CLASSIFICATION	3.0520905620189936E-5	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999961038142451	WITHOUT_CLASSIFICATION	3.896185754909756E-6	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999998495762519	WITHOUT_CLASSIFICATION	1.5042374803996046E-7	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999899628830325	WITHOUT_CLASSIFICATION	1.0037116967430307E-5	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999990666240998	WITHOUT_CLASSIFICATION	9.333759002917823E-7	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999978603172245	WITHOUT_CLASSIFICATION	2.1396827755760607E-6	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999990950095865	WITHOUT_CLASSIFICATION	9.049904136531494E-7	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9992101018345172	WITHOUT_CLASSIFICATION	7.898981654827738E-4	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999994583762509	WITHOUT_CLASSIFICATION	5.416237491311025E-7	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999976180681043	WITHOUT_CLASSIFICATION	2.3819318956217004E-6	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999913203784815	WITHOUT_CLASSIFICATION	8.679621518468416E-6	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999998495762519	WITHOUT_CLASSIFICATION	1.5042374803996046E-7	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999958430230116	WITHOUT_CLASSIFICATION	4.156976988475255E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999976180681043	WITHOUT_CLASSIFICATION	2.3819318956217004E-6	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.999998795789527	WITHOUT_CLASSIFICATION	1.2042104729759697E-6	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999976807612778	WITHOUT_CLASSIFICATION	2.319238722182256E-6	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999864209283208	WITHOUT_CLASSIFICATION	1.3579071679285982E-5	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999993761998257	WITHOUT_CLASSIFICATION	6.238001742274682E-7	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999955606778617	WITHOUT_CLASSIFICATION	4.439322138256811E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999972009532447	WITHOUT_CLASSIFICATION	2.7990467552453127E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999972009532447	WITHOUT_CLASSIFICATION	2.7990467552453127E-6	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999932570563189	WITHOUT_CLASSIFICATION	6.742943681047287E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999999790836854	WITHOUT_CLASSIFICATION	2.0916314599041646E-7	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999992786018004	WITHOUT_CLASSIFICATION	7.213981997415777E-7	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999992786018004	WITHOUT_CLASSIFICATION	7.213981997415777E-7	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999992647568061	WITHOUT_CLASSIFICATION	7.352431939401786E-7	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9997121754391483	WITHOUT_CLASSIFICATION	2.87824560851833E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.999854565736132	WITHOUT_CLASSIFICATION	1.4543426386809714E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.999854565736132	WITHOUT_CLASSIFICATION	1.4543426386809714E-4	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999927850586727	WITHOUT_CLASSIFICATION	7.214941327259659E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999944371108149	WITHOUT_CLASSIFICATION	5.562889185034425E-6	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999968709591691	WITHOUT_CLASSIFICATION	3.129040830855245E-6	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999994926006427	WITHOUT_CLASSIFICATION	5.073993572719371E-7	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999987943579938	WITHOUT_CLASSIFICATION	1.2056420062893605E-6	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9998814519153548	WITHOUT_CLASSIFICATION	1.1854808464511608E-4	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999998727996872	WITHOUT_CLASSIFICATION	1.2720031285525618E-7	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999996963851278	WITHOUT_CLASSIFICATION	3.036148722385549E-7	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999961914441376	WITHOUT_CLASSIFICATION	3.8085558623683103E-6	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.999994839205777	WITHOUT_CLASSIFICATION	5.160794222914082E-6	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999952651568003	WITHOUT_CLASSIFICATION	4.734843199762339E-6	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999943593831861	WITHOUT_CLASSIFICATION	5.640616813773295E-6	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999992330894175	WITHOUT_CLASSIFICATION	7.669105823944878E-7	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999915846591644	WITHOUT_CLASSIFICATION	8.415340835697085E-6	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999998545007157	WITHOUT_CLASSIFICATION	1.4549928424881656E-7	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999991381329079	WITHOUT_CLASSIFICATION	8.618670920843131E-7	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999964609873643	WITHOUT_CLASSIFICATION	3.5390126358329367E-6	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999979175422562	WITHOUT_CLASSIFICATION	2.082457743707747E-6	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999998612532103	WITHOUT_CLASSIFICATION	1.3874678970029364E-7	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999988986864654	WITHOUT_CLASSIFICATION	1.1013135346348458E-6	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999992287725091	WITHOUT_CLASSIFICATION	7.712274909131812E-7	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999968225307511	WITHOUT_CLASSIFICATION	3.1774692489810085E-6	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999997590708105	WITHOUT_CLASSIFICATION	2.4092918948082624E-7	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999861439547573	WITHOUT_CLASSIFICATION	1.3856045242681354E-5	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999694301548181	WITHOUT_CLASSIFICATION	3.056984518200434E-5	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999826069946804	WITHOUT_CLASSIFICATION	1.739300531964291E-5	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999987578435989	WITHOUT_CLASSIFICATION	1.2421564010389837E-6	TEST
// line 323	WITHOUT_CLASSIFICATION	0.99999294987183	WITHOUT_CLASSIFICATION	7.050128170132915E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999999076241924	WITHOUT_CLASSIFICATION	9.237580761240536E-7	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999999076241924	WITHOUT_CLASSIFICATION	9.237580761240536E-7	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999790431309	WITHOUT_CLASSIFICATION	2.0956869166206312E-8	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999997661407196	WITHOUT_CLASSIFICATION	2.3385928051196113E-7	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999883257054905	WITHOUT_CLASSIFICATION	1.1674294509548077E-5	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999974894338683	WITHOUT_CLASSIFICATION	2.510566131583569E-6	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999980836812454	WITHOUT_CLASSIFICATION	1.9163187546703938E-6	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.999994844230526	WITHOUT_CLASSIFICATION	5.155769473963244E-6	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999958466866479	WITHOUT_CLASSIFICATION	4.153313352123153E-6	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999985145294914	WITHOUT_CLASSIFICATION	1.4854705086573356E-6	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999986661712732	WITHOUT_CLASSIFICATION	1.3338287267275688E-6	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999997957147758	WITHOUT_CLASSIFICATION	2.042852242121984E-6	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999996633375382	WITHOUT_CLASSIFICATION	3.3666246172560874E-7	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999981248597154	WITHOUT_CLASSIFICATION	1.875140284653496E-6	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999925703269545	WITHOUT_CLASSIFICATION	7.429673045376496E-6	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999986628097518	WITHOUT_CLASSIFICATION	1.3371902482138088E-6	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999998685478413	WITHOUT_CLASSIFICATION	1.314521586941845E-7	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999979708793335	WITHOUT_CLASSIFICATION	2.029120666503966E-6	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999997603942182	WITHOUT_CLASSIFICATION	2.3960578174912124E-7	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999997115109022	WITHOUT_CLASSIFICATION	2.884890978839224E-7	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999937658478559	WITHOUT_CLASSIFICATION	6.234152144068948E-6	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999985245246563	WITHOUT_CLASSIFICATION	1.4754753436919564E-6	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999990027405462	WITHOUT_CLASSIFICATION	9.97259453831536E-7	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999938155515466	WITHOUT_CLASSIFICATION	6.184448453446628E-6	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999986773256636	WITHOUT_CLASSIFICATION	1.3226743363861743E-6	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999987088109323	WITHOUT_CLASSIFICATION	1.2911890676306116E-6	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999967491320607	WITHOUT_CLASSIFICATION	3.250867939234421E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999935679188989	WITHOUT_CLASSIFICATION	6.432081101123431E-6	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999998255025088	WITHOUT_CLASSIFICATION	1.7449749125243015E-7	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999980183307616	WITHOUT_CLASSIFICATION	1.9816692383445773E-6	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999948256888135	WITHOUT_CLASSIFICATION	5.174311186438039E-6	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999990466267059	WITHOUT_CLASSIFICATION	9.533732940041845E-7	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999839557718694	WITHOUT_CLASSIFICATION	1.6044228130641064E-5	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999980585288978	WITHOUT_CLASSIFICATION	1.941471102225934E-6	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999978535099496	WITHOUT_CLASSIFICATION	2.1464900503912803E-6	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999948663932388	WITHOUT_CLASSIFICATION	5.133606761205685E-6	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999988133822666	WITHOUT_CLASSIFICATION	1.1866177333616444E-6	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.999993830456714	WITHOUT_CLASSIFICATION	6.16954328603175E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999969442005651	WITHOUT_CLASSIFICATION	3.055799434999446E-6	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999969197656781	WITHOUT_CLASSIFICATION	3.080234321906314E-6	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999988558706462	WITHOUT_CLASSIFICATION	1.144129353788999E-6	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999987910171161	WITHOUT_CLASSIFICATION	1.20898288389116E-6	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999986662825362	WITHOUT_CLASSIFICATION	1.3337174638520884E-6	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.999999348676186	WITHOUT_CLASSIFICATION	6.513238140310545E-7	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999179921766	WITHOUT_CLASSIFICATION	8.20078233619271E-8	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999179921766	WITHOUT_CLASSIFICATION	8.20078233619271E-8	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999969145752956	WITHOUT_CLASSIFICATION	3.0854247044701596E-6	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999393643451	WITHOUT_CLASSIFICATION	6.063565495532628E-8	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.999995511189165	WITHOUT_CLASSIFICATION	4.488810835039617E-6	TEST
// return	WITHOUT_CLASSIFICATION	0.9999963407998355	WITHOUT_CLASSIFICATION	3.659200164557271E-6	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999987129141239	WITHOUT_CLASSIFICATION	1.2870858761545966E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999990913669433	WITHOUT_CLASSIFICATION	9.086330566502044E-7	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999985811737186	WITHOUT_CLASSIFICATION	1.4188262814052557E-6	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999991965885345	WITHOUT_CLASSIFICATION	8.034114654777485E-7	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999997627684885	WITHOUT_CLASSIFICATION	2.3723151144880434E-7	TEST
// tc	WITHOUT_CLASSIFICATION	0.9999843727401757	WITHOUT_CLASSIFICATION	1.562725982428033E-5	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999981623085353	WITHOUT_CLASSIFICATION	1.8376914647042882E-6	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999977804036888	WITHOUT_CLASSIFICATION	2.2195963111642496E-6	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999994919407332	WITHOUT_CLASSIFICATION	5.080592667555043E-7	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999997012009323	WITHOUT_CLASSIFICATION	2.987990676547595E-7	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999985877545559	WITHOUT_CLASSIFICATION	1.4122454441884393E-6	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999994284010658	WITHOUT_CLASSIFICATION	5.715989341063285E-7	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999989940890117	WITHOUT_CLASSIFICATION	1.0059109882794491E-6	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999979597424682	WITHOUT_CLASSIFICATION	2.0402575317730124E-6	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999980168448674	WITHOUT_CLASSIFICATION	1.98315513255533E-6	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999982577959422	WITHOUT_CLASSIFICATION	1.742204057825508E-6	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999985180717234	WITHOUT_CLASSIFICATION	1.4819282766637331E-6	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999958053980235	WITHOUT_CLASSIFICATION	4.194601976457165E-6	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999983671336682	WITHOUT_CLASSIFICATION	1.6328663318716194E-6	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999988398238411	WITHOUT_CLASSIFICATION	1.1601761588345107E-6	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999995572737805	WITHOUT_CLASSIFICATION	4.427262194091145E-7	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999988305596151	WITHOUT_CLASSIFICATION	1.1694403848759334E-6	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999990557477212	WITHOUT_CLASSIFICATION	9.442522788735217E-7	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999973175375474	WITHOUT_CLASSIFICATION	2.682462452682335E-6	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999996977849984	WITHOUT_CLASSIFICATION	3.0221500152422534E-7	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.999998237851083	WITHOUT_CLASSIFICATION	1.7621489170530771E-6	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999989001426394	WITHOUT_CLASSIFICATION	1.0998573605415676E-6	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999991285738999	WITHOUT_CLASSIFICATION	8.714261000304223E-7	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999956898573541	WITHOUT_CLASSIFICATION	4.310142645916587E-6	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999969509790007	WITHOUT_CLASSIFICATION	3.049020999267671E-6	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999969197656781	WITHOUT_CLASSIFICATION	3.080234321906314E-6	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999994652054824	WITHOUT_CLASSIFICATION	5.347945174729483E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999994772195883	WITHOUT_CLASSIFICATION	5.227804116875482E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999994772195883	WITHOUT_CLASSIFICATION	5.227804116875482E-7	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999996070075455	WITHOUT_CLASSIFICATION	3.929924545178404E-7	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999996429104095	WITHOUT_CLASSIFICATION	3.570895903819062E-7	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999992401373303	WITHOUT_CLASSIFICATION	7.598626696487246E-7	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999958474626648	WITHOUT_CLASSIFICATION	4.1525373351949455E-6	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.999998428553939	WITHOUT_CLASSIFICATION	1.57144606116491E-6	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999986302610365	WITHOUT_CLASSIFICATION	1.3697389634790573E-6	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999990696068872	WITHOUT_CLASSIFICATION	9.303931126539349E-7	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999985701046087	WITHOUT_CLASSIFICATION	1.429895391275552E-6	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999991208371579	WITHOUT_CLASSIFICATION	8.791628420547142E-7	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999994310247446	WITHOUT_CLASSIFICATION	5.689752552495208E-7	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999990822259156	WITHOUT_CLASSIFICATION	9.177740844332218E-7	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.999998852366559	WITHOUT_CLASSIFICATION	1.1476334408956215E-6	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999963372451914	WITHOUT_CLASSIFICATION	3.662754808651578E-6	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999996977039632	WITHOUT_CLASSIFICATION	3.0229603683349135E-7	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999989269464887	WITHOUT_CLASSIFICATION	1.0730535112059643E-6	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999999834172179	WITHOUT_CLASSIFICATION	1.6582782151712042E-8	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999955324635369	WITHOUT_CLASSIFICATION	4.46753646305823E-6	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.999994573157253	WITHOUT_CLASSIFICATION	5.426842746985848E-6	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999973481410016	WITHOUT_CLASSIFICATION	2.651858998353047E-6	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999982837729008	WITHOUT_CLASSIFICATION	1.7162270992335006E-6	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999973607093053	WITHOUT_CLASSIFICATION	2.6392906946328935E-6	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999975379383362	WITHOUT_CLASSIFICATION	2.4620616637225624E-6	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999984413447864	WITHOUT_CLASSIFICATION	1.5586552135553875E-6	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999988527239593	WITHOUT_CLASSIFICATION	1.1472760406400218E-6	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999995929358384	WITHOUT_CLASSIFICATION	4.0706416152970767E-7	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999997470080887	WITHOUT_CLASSIFICATION	2.5299191127139305E-7	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999830751556352	WITHOUT_CLASSIFICATION	1.6924844364797878E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999988137277049	WITHOUT_CLASSIFICATION	1.1862722950552043E-6	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999953580192324	WITHOUT_CLASSIFICATION	4.641980767594169E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999970879504958	WITHOUT_CLASSIFICATION	2.912049504153887E-6	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999981463905852	WITHOUT_CLASSIFICATION	1.8536094148901444E-6	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999972914487036	WITHOUT_CLASSIFICATION	2.7085512963175778E-6	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999939053292897	WITHOUT_CLASSIFICATION	6.094670710445709E-6	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999197826788	WITHOUT_CLASSIFICATION	8.021732124565944E-8	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999998075330558	WITHOUT_CLASSIFICATION	1.924669440558339E-7	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999983167664903	WITHOUT_CLASSIFICATION	1.6832335096846493E-6	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999981387016894	WITHOUT_CLASSIFICATION	1.861298310526777E-6	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999997470080887	WITHOUT_CLASSIFICATION	2.5299191127139305E-7	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999830751556352	WITHOUT_CLASSIFICATION	1.6924844364797878E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999988137277049	WITHOUT_CLASSIFICATION	1.1862722950552043E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999970879504958	WITHOUT_CLASSIFICATION	2.912049504153887E-6	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999178118227	WITHOUT_CLASSIFICATION	8.218817728634208E-8	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999994056382496	WITHOUT_CLASSIFICATION	5.943617503803347E-7	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999984475506718	WITHOUT_CLASSIFICATION	1.5524493281809628E-6	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999969605008074	WITHOUT_CLASSIFICATION	3.039499192462817E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999973428003701	WITHOUT_CLASSIFICATION	2.6571996297979414E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999997589382279	WITHOUT_CLASSIFICATION	2.410617720226507E-7	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999974971680393	WITHOUT_CLASSIFICATION	2.502831960691544E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999942428727358	WITHOUT_CLASSIFICATION	5.757127264245354E-6	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.999999262641296	WITHOUT_CLASSIFICATION	7.373587039401592E-7	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999967373663556	WITHOUT_CLASSIFICATION	3.2626336442340542E-6	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.999997125189665	WITHOUT_CLASSIFICATION	2.8748103349142683E-6	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999982309957175	WITHOUT_CLASSIFICATION	1.7690042825242507E-6	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999465724386835	WITHOUT_CLASSIFICATION	5.342756131663727E-5	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.999994109323047	WITHOUT_CLASSIFICATION	5.890676952991334E-6	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999946534218702	WITHOUT_CLASSIFICATION	5.346578129740893E-6	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999967774956142	WITHOUT_CLASSIFICATION	3.2225043859048563E-6	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999969938805375	WITHOUT_CLASSIFICATION	3.0061194625067734E-6	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999997075701542	WITHOUT_CLASSIFICATION	2.9242984573883407E-7	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999998305469926	WITHOUT_CLASSIFICATION	1.694530074118041E-7	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999981387016894	WITHOUT_CLASSIFICATION	1.861298310526777E-6	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999994056382496	WITHOUT_CLASSIFICATION	5.943617503803347E-7	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999984475506718	WITHOUT_CLASSIFICATION	1.5524493281809628E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999973428003701	WITHOUT_CLASSIFICATION	2.6571996297979414E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999997589382279	WITHOUT_CLASSIFICATION	2.410617720226507E-7	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999974971680393	WITHOUT_CLASSIFICATION	2.502831960691544E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999942428727358	WITHOUT_CLASSIFICATION	5.757127264245354E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999968772486907	WITHOUT_CLASSIFICATION	3.122751309274457E-6	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999995385922407	WITHOUT_CLASSIFICATION	4.614077593670858E-7	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999965531138587	WITHOUT_CLASSIFICATION	3.4468861413511574E-6	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999994577605781	WITHOUT_CLASSIFICATION	5.422394219857926E-7	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999918334876317	WITHOUT_CLASSIFICATION	8.166512368348765E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999918334876317	WITHOUT_CLASSIFICATION	8.166512368348765E-6	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999977015321326	WITHOUT_CLASSIFICATION	2.2984678673758375E-6	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999986734332782	WITHOUT_CLASSIFICATION	1.3265667217654448E-6	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999995350980481	WITHOUT_CLASSIFICATION	4.649019519478667E-7	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999982528062773	WITHOUT_CLASSIFICATION	1.7471937227350335E-6	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999978895825623	WITHOUT_CLASSIFICATION	2.1104174375827762E-6	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999962565377883	WITHOUT_CLASSIFICATION	3.7434622117183496E-6	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999984194259605	WITHOUT_CLASSIFICATION	1.5805740395480398E-6	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999977361765392	WITHOUT_CLASSIFICATION	2.2638234607754127E-6	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999992257859164	WITHOUT_CLASSIFICATION	7.742140836638828E-7	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999995535143281	WITHOUT_CLASSIFICATION	4.4648567196451207E-7	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999994827092541	WITHOUT_CLASSIFICATION	5.172907458102999E-7	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999989899891182	WITHOUT_CLASSIFICATION	1.0100108818531899E-6	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999967448698098	WITHOUT_CLASSIFICATION	3.255130190259868E-6	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999993960366288	WITHOUT_CLASSIFICATION	6.039633712201835E-7	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999990007507851	WITHOUT_CLASSIFICATION	9.992492149044162E-7	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999991247730323	WITHOUT_CLASSIFICATION	8.752269677799516E-7	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999983708353628	WITHOUT_CLASSIFICATION	1.6291646372473344E-6	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999979701911414	WITHOUT_CLASSIFICATION	2.029808858509355E-6	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999999474315546	WITHOUT_CLASSIFICATION	5.2568445393711E-8	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999999628868439	WITHOUT_CLASSIFICATION	3.711315606339611E-8	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9999998279377857	WITHOUT_CLASSIFICATION	1.7206221423174795E-7	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.999999606986514	WITHOUT_CLASSIFICATION	3.930134859698641E-7	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999983951670596	WITHOUT_CLASSIFICATION	1.604832940372503E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999822639467942	WITHOUT_CLASSIFICATION	1.7736053205792847E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999998526206492	WITHOUT_CLASSIFICATION	1.4737935080467494E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999976151919264	WITHOUT_CLASSIFICATION	2.38480807358225E-6	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999998888544126	WITHOUT_CLASSIFICATION	1.1114558741247382E-7	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.999997811891958	WITHOUT_CLASSIFICATION	2.1881080420594478E-6	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999930274636307	WITHOUT_CLASSIFICATION	6.972536369204265E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999998526206492	WITHOUT_CLASSIFICATION	1.4737935080467494E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999976151919264	WITHOUT_CLASSIFICATION	2.38480807358225E-6	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999993960366288	WITHOUT_CLASSIFICATION	6.039633712201835E-7	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999996267866703	WITHOUT_CLASSIFICATION	3.7321332962834735E-7	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999965399159978	WITHOUT_CLASSIFICATION	3.460084002235022E-6	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999873178013455	WITHOUT_CLASSIFICATION	1.2682198654411045E-5	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999997965418245	WITHOUT_CLASSIFICATION	2.034581756303662E-7	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999979773756373	WITHOUT_CLASSIFICATION	2.0226243627191966E-6	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.999994608240393	WITHOUT_CLASSIFICATION	5.3917596070227745E-6	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999816197412617	WITHOUT_CLASSIFICATION	1.8380258738368587E-5	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999965231001743	WITHOUT_CLASSIFICATION	3.4768998257422167E-6	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999992330056713	WITHOUT_CLASSIFICATION	7.669943287989696E-7	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999973923293135	WITHOUT_CLASSIFICATION	2.607670686541173E-6	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999998794514783	WITHOUT_CLASSIFICATION	1.2054852172482466E-7	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999989203226811	WITHOUT_CLASSIFICATION	1.0796773189719154E-6	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999991790205841	WITHOUT_CLASSIFICATION	8.209794158064202E-7	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999996876028749	WITHOUT_CLASSIFICATION	3.123971250331329E-7	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999997311583814	WITHOUT_CLASSIFICATION	2.688416185989555E-7	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999868031277968	WITHOUT_CLASSIFICATION	1.3196872203287337E-5	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999963588985342	WITHOUT_CLASSIFICATION	3.641101465747472E-6	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.999997167643885	WITHOUT_CLASSIFICATION	2.8323561150890023E-6	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999518042095	WITHOUT_CLASSIFICATION	4.8195790472350996E-8	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999995246416631	WITHOUT_CLASSIFICATION	4.7535833691046824E-7	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999995784712974	WITHOUT_CLASSIFICATION	4.215287026257337E-7	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999134446581	WITHOUT_CLASSIFICATION	8.655534184236138E-8	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.999998627545704	WITHOUT_CLASSIFICATION	1.3724542959184752E-6	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999158342576	WITHOUT_CLASSIFICATION	8.416574237925853E-8	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999996118944323	WITHOUT_CLASSIFICATION	3.8810556766424367E-7	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999996872658122	WITHOUT_CLASSIFICATION	3.127341878328695E-7	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9994780893793686	WITHOUT_CLASSIFICATION	5.219106206315256E-4	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999991133005915	WITHOUT_CLASSIFICATION	8.866994084182187E-7	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999999164319989	WITHOUT_CLASSIFICATION	8.356800109226891E-8	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.999999878576161	WITHOUT_CLASSIFICATION	1.2142383901161622E-7	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.999998538368973	WITHOUT_CLASSIFICATION	1.461631026973793E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998900585454776	WITHOUT_CLASSIFICATION	1.0994145452236652E-4	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998900585454776	WITHOUT_CLASSIFICATION	1.0994145452236652E-4	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999967448698098	WITHOUT_CLASSIFICATION	3.255130190259868E-6	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999998967903806	WITHOUT_CLASSIFICATION	1.0320961940765158E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999934734501503	WITHOUT_CLASSIFICATION	6.526549849667265E-6	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999960319870689	WITHOUT_CLASSIFICATION	3.968012931081893E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999997945868818	WITHOUT_CLASSIFICATION	2.054131182660106E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999997945868818	WITHOUT_CLASSIFICATION	2.054131182660106E-7	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999995714779063	WITHOUT_CLASSIFICATION	4.2852209378157816E-7	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999997950428291	WITHOUT_CLASSIFICATION	2.0495717104743807E-7	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999995454020646	WITHOUT_CLASSIFICATION	4.545979354184508E-7	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999979303260879	WITHOUT_CLASSIFICATION	2.0696739121471145E-6	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999972091467859	WITHOUT_CLASSIFICATION	2.790853214026718E-6	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999622721132	WITHOUT_CLASSIFICATION	3.772788685983237E-8	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999998333707654	WITHOUT_CLASSIFICATION	1.6662923460782772E-7	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999920346674323	WITHOUT_CLASSIFICATION	7.965332567753575E-6	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998589276955	WITHOUT_CLASSIFICATION	1.4107230456039946E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999991072529432	WITHOUT_CLASSIFICATION	8.927470568133876E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999926636845131	WITHOUT_CLASSIFICATION	7.336315486883681E-6	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999907969807393	WITHOUT_CLASSIFICATION	9.20301926067636E-6	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999767416378581	WITHOUT_CLASSIFICATION	2.3258362141833712E-5	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999981074315337	WITHOUT_CLASSIFICATION	1.8925684663275308E-6	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999983592260822	WITHOUT_CLASSIFICATION	1.6407739178422633E-6	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999972555528509	WITHOUT_CLASSIFICATION	2.744447149083436E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999980166423944	WITHOUT_CLASSIFICATION	1.9833576055257137E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999980166423944	WITHOUT_CLASSIFICATION	1.9833576055257137E-6	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999997820932416	WITHOUT_CLASSIFICATION	2.179067584200531E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999997820932416	WITHOUT_CLASSIFICATION	2.179067584200531E-7	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999375972978	WITHOUT_CLASSIFICATION	6.240270223647626E-8	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999981139614342	WITHOUT_CLASSIFICATION	1.8860385657027261E-6	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999998464652425	WITHOUT_CLASSIFICATION	1.535347573323553E-7	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999993502753636	WITHOUT_CLASSIFICATION	6.497246364346818E-7	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999962122318876	WITHOUT_CLASSIFICATION	3.7877681124802308E-6	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.999996932175607	WITHOUT_CLASSIFICATION	3.0678243929250142E-6	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999997576327335	WITHOUT_CLASSIFICATION	2.4236726646563106E-7	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999907969807393	WITHOUT_CLASSIFICATION	9.20301926067636E-6	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999767416378581	WITHOUT_CLASSIFICATION	2.3258362141833712E-5	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999983592260822	WITHOUT_CLASSIFICATION	1.6407739178422633E-6	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999310088314	WITHOUT_CLASSIFICATION	6.899116859139905E-8	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999998176814232	WITHOUT_CLASSIFICATION	1.8231857670447545E-7	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999880065216	WITHOUT_CLASSIFICATION	1.1993478384504057E-8	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999993078363777	WITHOUT_CLASSIFICATION	6.921636222809433E-7	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999997371163103	WITHOUT_CLASSIFICATION	2.6288368966420313E-7	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.999998819649725	WITHOUT_CLASSIFICATION	1.1803502748928178E-6	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999992309785699	WITHOUT_CLASSIFICATION	7.690214300039116E-7	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999992406113927	WITHOUT_CLASSIFICATION	7.593886072681642E-7	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999999138889089	WITHOUT_CLASSIFICATION	8.61110910998379E-8	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.999999990665191	WITHOUT_CLASSIFICATION	9.334809023743208E-9	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999998239827567	WITHOUT_CLASSIFICATION	1.7601724327592396E-7	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999991169223369	WITHOUT_CLASSIFICATION	8.830776630504816E-7	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999973255435434	WITHOUT_CLASSIFICATION	2.674456456667749E-6	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999987588587606	WITHOUT_CLASSIFICATION	1.2411412394147874E-6	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999998438553539	WITHOUT_CLASSIFICATION	1.5614464604622604E-7	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999987725665802	WITHOUT_CLASSIFICATION	1.227433419874656E-6	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999953590294899	WITHOUT_CLASSIFICATION	4.640970510090366E-6	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999999239339739	WITHOUT_CLASSIFICATION	7.606602616906452E-8	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999997926013401	WITHOUT_CLASSIFICATION	2.0739865981953775E-7	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999994225391332	WITHOUT_CLASSIFICATION	5.774608667575203E-7	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999995500086041	WITHOUT_CLASSIFICATION	4.4999139598095664E-7	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.999993880284167	WITHOUT_CLASSIFICATION	6.1197158330832635E-6	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999935510848329	WITHOUT_CLASSIFICATION	6.4489151671018064E-6	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999991585400471	WITHOUT_CLASSIFICATION	8.414599529023839E-7	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999964611164344	WITHOUT_CLASSIFICATION	3.5388835656798753E-6	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.999994268386212	WITHOUT_CLASSIFICATION	5.731613787940343E-6	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999989737733868	WITHOUT_CLASSIFICATION	1.0262266131998488E-6	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999996442227358	WITHOUT_CLASSIFICATION	3.5577726428202285E-7	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.999997518119902	WITHOUT_CLASSIFICATION	2.48188009797884E-6	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999988138544949	WITHOUT_CLASSIFICATION	1.1861455051376674E-6	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999988235241533	WITHOUT_CLASSIFICATION	1.1764758467141774E-6	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999968592642936	WITHOUT_CLASSIFICATION	3.140735706337567E-6	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999971472312867	WITHOUT_CLASSIFICATION	2.852768713310536E-6	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999985167060979	WITHOUT_CLASSIFICATION	1.4832939021745057E-6	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999989961325594	WITHOUT_CLASSIFICATION	1.0038674405838826E-6	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999973440454358	WITHOUT_CLASSIFICATION	2.655954564128624E-6	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.999994402628555	WITHOUT_CLASSIFICATION	5.597371445021238E-6	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999995326211999	WITHOUT_CLASSIFICATION	4.673788000401004E-7	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.999986489218024	WITHOUT_CLASSIFICATION	1.3510781976075937E-5	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999996892998684	WITHOUT_CLASSIFICATION	3.1070013155086745E-7	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999995592498556	WITHOUT_CLASSIFICATION	4.407501443557394E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999934734501503	WITHOUT_CLASSIFICATION	6.526549849667265E-6	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.999994402628555	WITHOUT_CLASSIFICATION	5.597371445021238E-6	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999995003930268	WITHOUT_CLASSIFICATION	4.996069732332819E-7	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999802532329	WITHOUT_CLASSIFICATION	1.974676715614778E-8	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999971258969977	WITHOUT_CLASSIFICATION	2.874103002328148E-6	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999980724959849	WITHOUT_CLASSIFICATION	1.9275040149749067E-6	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999980724959849	WITHOUT_CLASSIFICATION	1.9275040149749067E-6	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999995319896278	WITHOUT_CLASSIFICATION	4.680103721790696E-7	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999984424179672	WITHOUT_CLASSIFICATION	1.5575820327900424E-6	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999997709303167	WITHOUT_CLASSIFICATION	2.2906968327496554E-7	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999998646887852	WITHOUT_CLASSIFICATION	1.3531121475205903E-7	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999995851700393	WITHOUT_CLASSIFICATION	4.148299607609814E-7	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999995414234959	WITHOUT_CLASSIFICATION	4.5857650416830914E-7	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999619549051	WITHOUT_CLASSIFICATION	3.804509493043744E-8	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999997874304477	WITHOUT_CLASSIFICATION	2.1256955230091504E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999991209369142	WITHOUT_CLASSIFICATION	8.790630858044938E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999991209369142	WITHOUT_CLASSIFICATION	8.790630858044938E-7	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999987999679295	WITHOUT_CLASSIFICATION	1.2000320705789885E-6	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999997064714042	WITHOUT_CLASSIFICATION	2.935285958462881E-7	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999935732631956	WITHOUT_CLASSIFICATION	6.426736804406158E-6	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999979805647091	WITHOUT_CLASSIFICATION	2.0194352909527113E-6	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999974100717661	WITHOUT_CLASSIFICATION	2.589928233870627E-6	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999986902264236	WITHOUT_CLASSIFICATION	1.309773576306543E-6	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999977880931	WITHOUT_CLASSIFICATION	2.2119068823745392E-9	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999981501585437	WITHOUT_CLASSIFICATION	1.8498414563424303E-6	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999989596798038	WITHOUT_CLASSIFICATION	1.0403201962154833E-6	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.99976736505033	WITHOUT_CLASSIFICATION	2.3263494966997984E-4	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999448770499489	WITHOUT_CLASSIFICATION	5.5122950050969554E-5	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999986795646701	WITHOUT_CLASSIFICATION	1.3204353298990537E-6	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999992661645807	WITHOUT_CLASSIFICATION	7.338354194637763E-7	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999865634635486	WITHOUT_CLASSIFICATION	1.3436536451393616E-5	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999865634635486	WITHOUT_CLASSIFICATION	1.3436536451393616E-5	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999985625379273	WITHOUT_CLASSIFICATION	1.4374620727537766E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999942428727358	WITHOUT_CLASSIFICATION	5.757127264245354E-6	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999250981445879	WITHOUT_CLASSIFICATION	7.490185541218078E-5	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999999362798039	WITHOUT_CLASSIFICATION	6.372019609482094E-8	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999856992999	WITHOUT_CLASSIFICATION	1.430070018159213E-8	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.999999425028213	WITHOUT_CLASSIFICATION	5.749717869060147E-7	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999982571343785	WITHOUT_CLASSIFICATION	1.742865621542812E-6	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999989709512056	WITHOUT_CLASSIFICATION	1.0290487943933678E-6	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999924209675435	WITHOUT_CLASSIFICATION	7.5790324564749074E-6	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999957860681098	WITHOUT_CLASSIFICATION	4.213931890200093E-6	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999951329837605	WITHOUT_CLASSIFICATION	4.867016239497488E-6	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999991765356853	WITHOUT_CLASSIFICATION	8.234643148050647E-7	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999981964050918	WITHOUT_CLASSIFICATION	1.8035949083170325E-6	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999991897917893	WITHOUT_CLASSIFICATION	8.102082106490862E-7	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999992409856083	WITHOUT_CLASSIFICATION	7.590143916079002E-7	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999957818938215	WITHOUT_CLASSIFICATION	4.218106178400104E-6	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999990848485131	WITHOUT_CLASSIFICATION	9.151514869824444E-7	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999692058263533	WITHOUT_CLASSIFICATION	3.079417364675734E-5	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999974568730624	WITHOUT_CLASSIFICATION	2.5431269375390857E-6	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999973064582028	WITHOUT_CLASSIFICATION	2.6935417971213926E-6	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9999968618575931	WITHOUT_CLASSIFICATION	3.138142406789293E-6	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999955425269361	WITHOUT_CLASSIFICATION	4.457473063799974E-6	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.999978630706103	WITHOUT_CLASSIFICATION	2.1369293896879867E-5	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999882712247339	WITHOUT_CLASSIFICATION	1.1728775266045075E-5	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9999992492868515	WITHOUT_CLASSIFICATION	7.507131485247009E-7	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.999999854085081	WITHOUT_CLASSIFICATION	1.45914919069555E-7	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999956055333628	WITHOUT_CLASSIFICATION	4.394466637258891E-6	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999990043076922	WITHOUT_CLASSIFICATION	9.956923077716443E-7	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999988097774155	WITHOUT_CLASSIFICATION	1.1902225845027793E-6	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999839066918385	WITHOUT_CLASSIFICATION	1.6093308161620137E-5	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.999999354328771	WITHOUT_CLASSIFICATION	6.456712289625826E-7	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999983683176619	WITHOUT_CLASSIFICATION	1.6316823381296114E-6	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.999998693601488	WITHOUT_CLASSIFICATION	1.306398512036432E-6	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999996529633381	WITHOUT_CLASSIFICATION	3.470366618596547E-7	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999999363119202	WITHOUT_CLASSIFICATION	6.36880798660638E-8	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.999999704873321	WITHOUT_CLASSIFICATION	2.9512667898449786E-7	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.999997758189691	WITHOUT_CLASSIFICATION	2.2418103089985866E-6	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999956098909201	WITHOUT_CLASSIFICATION	4.390109079971094E-6	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999976697371051	WITHOUT_CLASSIFICATION	2.3302628947867088E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999936863077366	WITHOUT_CLASSIFICATION	6.313692263461596E-6	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999964884947674	WITHOUT_CLASSIFICATION	3.511505232461691E-6	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.999999713612831	WITHOUT_CLASSIFICATION	2.8638716888703197E-7	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999982733345218	WITHOUT_CLASSIFICATION	1.7266654782578648E-6	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999994609579383	WITHOUT_CLASSIFICATION	5.390420616872816E-7	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9999525535940068	WITHOUT_CLASSIFICATION	4.7446405993243106E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999999454012416	WITHOUT_CLASSIFICATION	5.4598758480285456E-8	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999994641202273	WITHOUT_CLASSIFICATION	5.358797726422344E-7	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999942231720953	WITHOUT_CLASSIFICATION	5.7768279046970555E-6	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.99999946721931	WITHOUT_CLASSIFICATION	5.327806899643947E-7	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999998526206492	WITHOUT_CLASSIFICATION	1.4737935080467494E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999998526206492	WITHOUT_CLASSIFICATION	1.4737935080467494E-6	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999996999796658	WITHOUT_CLASSIFICATION	3.0002033423520946E-7	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999860870807429	WITHOUT_CLASSIFICATION	1.3912919257180108E-5	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999980639404996	WITHOUT_CLASSIFICATION	1.9360595003460816E-6	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999999844709143	WITHOUT_CLASSIFICATION	1.5529085696431022E-8	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999999233861306	WITHOUT_CLASSIFICATION	7.661386938192525E-8	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999998664320441	WITHOUT_CLASSIFICATION	1.3356795590647927E-7	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999996565638863	WITHOUT_CLASSIFICATION	3.4343611361995373E-7	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999735583502	WITHOUT_CLASSIFICATION	2.644164972450158E-8	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999084066479	WITHOUT_CLASSIFICATION	9.159335220017693E-8	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999973444636061	WITHOUT_CLASSIFICATION	2.6555363938006215E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999951119769322	WITHOUT_CLASSIFICATION	4.888023067743343E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999951119769322	WITHOUT_CLASSIFICATION	4.888023067743343E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999951119769322	WITHOUT_CLASSIFICATION	4.888023067743343E-6	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999996842332693	WITHOUT_CLASSIFICATION	3.1576673065980566E-7	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999989197355371	WITHOUT_CLASSIFICATION	1.0802644628686614E-6	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999979083766819	WITHOUT_CLASSIFICATION	2.0916233181328212E-6	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999987838608096	WITHOUT_CLASSIFICATION	1.2161391904336234E-6	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999987838608096	WITHOUT_CLASSIFICATION	1.2161391904336234E-6	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999979500081981	WITHOUT_CLASSIFICATION	2.0499918018637454E-6	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999990663372729	WITHOUT_CLASSIFICATION	9.336627271137429E-7	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999981174025638	WITHOUT_CLASSIFICATION	1.8825974361598207E-6	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999960587650066	WITHOUT_CLASSIFICATION	3.9412349932783145E-6	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999989771068795	WITHOUT_CLASSIFICATION	1.0228931205398116E-6	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999911965454966	WITHOUT_CLASSIFICATION	8.803454503429169E-6	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999968980508578	WITHOUT_CLASSIFICATION	3.10194914229527E-6	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999998210885396	WITHOUT_CLASSIFICATION	1.7891146037163275E-7	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999975829745843	WITHOUT_CLASSIFICATION	2.417025415675148E-6	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999999756437091	WITHOUT_CLASSIFICATION	2.435629089454093E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999999756437091	WITHOUT_CLASSIFICATION	2.435629089454093E-7	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999960568126548	WITHOUT_CLASSIFICATION	3.943187345143184E-6	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.999991952032431	WITHOUT_CLASSIFICATION	8.047967569015034E-6	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999951775330268	WITHOUT_CLASSIFICATION	4.82246697321217E-6	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999984577058864	WITHOUT_CLASSIFICATION	1.5422941135960355E-6	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999985402990696	WITHOUT_CLASSIFICATION	1.45970093039788E-6	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999952659755742	WITHOUT_CLASSIFICATION	4.7340244257907306E-6	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999945734260957	WITHOUT_CLASSIFICATION	5.426573904261589E-6	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999969667286078	WITHOUT_CLASSIFICATION	3.033271392115573E-6	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999871798664339	WITHOUT_CLASSIFICATION	1.2820133566037314E-5	TEST
// POP	WITHOUT_CLASSIFICATION	0.9999782304596228	WITHOUT_CLASSIFICATION	2.176954037732259E-5	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999998809771163	WITHOUT_CLASSIFICATION	1.1902288370221552E-7	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999851822624831	WITHOUT_CLASSIFICATION	1.4817737517010288E-5	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.999983272463236	WITHOUT_CLASSIFICATION	1.672753676403219E-5	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999993717583977	WITHOUT_CLASSIFICATION	6.28241602257613E-7	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999836723793166	WITHOUT_CLASSIFICATION	1.632762068344833E-5	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999995924778519	WITHOUT_CLASSIFICATION	4.075221481077616E-7	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.999997791932554	WITHOUT_CLASSIFICATION	2.208067445980233E-6	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999988200807592	WITHOUT_CLASSIFICATION	1.179919240706653E-6	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999995711481681	WITHOUT_CLASSIFICATION	4.288518318583762E-7	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999993199029446	WITHOUT_CLASSIFICATION	6.800970553810917E-7	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999989542677248	WITHOUT_CLASSIFICATION	1.0457322752035933E-6	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.999998430965376	WITHOUT_CLASSIFICATION	1.5690346240691786E-6	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999997208129147	WITHOUT_CLASSIFICATION	2.791870853371292E-7	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999850873618072	WITHOUT_CLASSIFICATION	1.4912638192837168E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.999989600936925	WITHOUT_CLASSIFICATION	1.0399063074987287E-5	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999981304774647	WITHOUT_CLASSIFICATION	1.869522535250442E-6	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999933395026807	WITHOUT_CLASSIFICATION	6.6604973193088165E-6	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999951789503554	WITHOUT_CLASSIFICATION	4.821049644626937E-6	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999995081992322	WITHOUT_CLASSIFICATION	4.918007678741049E-7	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999805195057573	WITHOUT_CLASSIFICATION	1.948049424277646E-5	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999713545258926	WITHOUT_CLASSIFICATION	2.8645474107295718E-5	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999963883228863	WITHOUT_CLASSIFICATION	3.6116771137394754E-6	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999949505309159	WITHOUT_CLASSIFICATION	5.049469084016201E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999713545258926	WITHOUT_CLASSIFICATION	2.8645474107295718E-5	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999982134964697	WITHOUT_CLASSIFICATION	1.78650353022302E-6	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999998816963154	WITHOUT_CLASSIFICATION	1.1830368461864709E-7	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999973269456034	WITHOUT_CLASSIFICATION	2.6730543965446833E-6	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999911392447818	WITHOUT_CLASSIFICATION	8.860755218126268E-6	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999992820384334	WITHOUT_CLASSIFICATION	7.179615667291433E-7	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999989480867437	WITHOUT_CLASSIFICATION	1.0519132562111999E-6	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999958364322231	WITHOUT_CLASSIFICATION	4.163567776865872E-6	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999984205479546	WITHOUT_CLASSIFICATION	1.5794520453866537E-6	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.999993808419435	WITHOUT_CLASSIFICATION	6.1915805649832904E-6	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999877481815479	WITHOUT_CLASSIFICATION	1.2251818452037467E-5	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999437468727764	WITHOUT_CLASSIFICATION	5.625312722365823E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999889612614056	WITHOUT_CLASSIFICATION	1.1038738594496995E-5	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999951753052004	WITHOUT_CLASSIFICATION	4.824694799499709E-6	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999955236094283	WITHOUT_CLASSIFICATION	4.476390571717148E-6	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999980744251827	WITHOUT_CLASSIFICATION	1.925574817304513E-6	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999714867547017	WITHOUT_CLASSIFICATION	2.8513245298261093E-5	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999548039741668	WITHOUT_CLASSIFICATION	4.519602583315708E-5	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999979516469274	WITHOUT_CLASSIFICATION	2.04835307253562E-6	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999982739631986	WITHOUT_CLASSIFICATION	1.726036801397159E-6	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999841116184631	WITHOUT_CLASSIFICATION	1.588838153684873E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999981491612066	WITHOUT_CLASSIFICATION	1.8508387933946074E-6	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999879918653337	WITHOUT_CLASSIFICATION	1.2008134666286991E-5	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.999994519429794	WITHOUT_CLASSIFICATION	5.480570205887848E-6	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999989445216032	WITHOUT_CLASSIFICATION	1.0554783967529054E-6	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999939765256916	WITHOUT_CLASSIFICATION	6.023474308402203E-6	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999960241424026	WITHOUT_CLASSIFICATION	3.975857597392452E-6	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999814543325698	WITHOUT_CLASSIFICATION	1.8545667430217745E-5	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999977051808823	WITHOUT_CLASSIFICATION	2.29481911775065E-6	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999982148988857	WITHOUT_CLASSIFICATION	1.7851011141580899E-6	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999966527816313	WITHOUT_CLASSIFICATION	3.347218368586396E-6	TEST
// hash	WITHOUT_CLASSIFICATION	0.9999898217449726	WITHOUT_CLASSIFICATION	1.0178255027380993E-5	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.999996462412234	WITHOUT_CLASSIFICATION	3.537587765991096E-6	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999926838116163	WITHOUT_CLASSIFICATION	7.316188383623728E-6	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999996026528051	WITHOUT_CLASSIFICATION	3.973471948690788E-7	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999972377051035	WITHOUT_CLASSIFICATION	2.7622948965047058E-6	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999953906206168	WITHOUT_CLASSIFICATION	4.6093793831137274E-6	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999976187959786	WITHOUT_CLASSIFICATION	2.381204021424792E-6	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9999141066582703	WITHOUT_CLASSIFICATION	8.589334172976288E-5	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999970348106105	WITHOUT_CLASSIFICATION	2.9651893895219514E-6	TEST
// backslash	WITHOUT_CLASSIFICATION	0.999993866203975	WITHOUT_CLASSIFICATION	6.133796024888102E-6	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999956562036778	WITHOUT_CLASSIFICATION	4.343796322149813E-6	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999964317392969	WITHOUT_CLASSIFICATION	3.568260703120587E-6	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999609262557327	WITHOUT_CLASSIFICATION	3.9073744267277206E-5	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999978525006554	WITHOUT_CLASSIFICATION	2.1474993445337734E-6	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999959254301846	WITHOUT_CLASSIFICATION	4.074569815423432E-6	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999955566013716	WITHOUT_CLASSIFICATION	4.443398628416731E-6	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999981286969335	WITHOUT_CLASSIFICATION	1.871303066594335E-6	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.999996295906795	WITHOUT_CLASSIFICATION	3.7040932050634267E-6	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.999980807148764	WITHOUT_CLASSIFICATION	1.9192851236011172E-5	TEST
// space	WITHOUT_CLASSIFICATION	0.9999968449922617	WITHOUT_CLASSIFICATION	3.1550077383947485E-6	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999720927375407	WITHOUT_CLASSIFICATION	2.790726245924003E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999992334827317	WITHOUT_CLASSIFICATION	7.665172683420651E-7	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999955003915344	WITHOUT_CLASSIFICATION	4.499608465516654E-6	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.999980807148764	WITHOUT_CLASSIFICATION	1.9192851236011172E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999968482227958	WITHOUT_CLASSIFICATION	3.151777204277971E-6	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999968482227958	WITHOUT_CLASSIFICATION	3.151777204277971E-6	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999954428545677	WITHOUT_CLASSIFICATION	4.557145432257619E-6	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999972890767029	WITHOUT_CLASSIFICATION	2.7109232970877554E-6	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999986185823541	WITHOUT_CLASSIFICATION	1.3814176459726348E-6	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999924893258723	WITHOUT_CLASSIFICATION	7.510674127773992E-6	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.999996249374218	WITHOUT_CLASSIFICATION	3.7506257818994215E-6	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999869931580565	WITHOUT_CLASSIFICATION	1.3006841943384525E-5	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.999998215773782	WITHOUT_CLASSIFICATION	1.7842262180531408E-6	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9999966673465752	WITHOUT_CLASSIFICATION	3.3326534247910855E-6	TEST
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999998726042132	WITHOUT_CLASSIFICATION	1.273957868039785E-7	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.999930973433465	WITHOUT_CLASSIFICATION	6.902656653499042E-5	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999522157542	WITHOUT_CLASSIFICATION	4.7784245795568484E-8	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999776196565	WITHOUT_CLASSIFICATION	2.238034344245481E-8	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999790150441831	WITHOUT_CLASSIFICATION	2.0984955816929654E-5	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999908539597088	WITHOUT_CLASSIFICATION	9.146040291287825E-6	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999995215594096	WITHOUT_CLASSIFICATION	4.784405903937484E-7	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999991793985042	WITHOUT_CLASSIFICATION	8.206014958604917E-7	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999993390142298	WITHOUT_CLASSIFICATION	6.609857702613489E-7	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998759930313631	WITHOUT_CLASSIFICATION	1.2400696863691633E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998759930313631	WITHOUT_CLASSIFICATION	1.2400696863691633E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998759930313631	WITHOUT_CLASSIFICATION	1.2400696863691633E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998759930313631	WITHOUT_CLASSIFICATION	1.2400696863691633E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998759930313631	WITHOUT_CLASSIFICATION	1.2400696863691633E-4	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999930771692923	WITHOUT_CLASSIFICATION	6.922830707755455E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999997771421699	WITHOUT_CLASSIFICATION	2.2285783009522774E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999556774165754	WITHOUT_CLASSIFICATION	4.432258342449823E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999974357005315	WITHOUT_CLASSIFICATION	2.564299468539516E-6	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999978016172366	WITHOUT_CLASSIFICATION	2.198382763386676E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999981777746715	WITHOUT_CLASSIFICATION	1.822225328523683E-6	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999791468669155	WITHOUT_CLASSIFICATION	2.0853133084586847E-5	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999920258348596	WITHOUT_CLASSIFICATION	7.974165140445684E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999990824749541	WITHOUT_CLASSIFICATION	9.175250459022743E-7	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999942767167094	WITHOUT_CLASSIFICATION	5.723283290674172E-6	TEST
// line 274	WITHOUT_CLASSIFICATION	0.999992943439134	WITHOUT_CLASSIFICATION	7.056560865932107E-6	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999931723046269	WITHOUT_CLASSIFICATION	6.827695373069723E-6	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999940133939254	WITHOUT_CLASSIFICATION	5.986606074586638E-6	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999940805253653	WITHOUT_CLASSIFICATION	5.919474634656034E-6	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999940665331059	WITHOUT_CLASSIFICATION	5.9334668940845E-6	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999929899807544	WITHOUT_CLASSIFICATION	7.010019245541769E-6	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999932537853563	WITHOUT_CLASSIFICATION	6.746214643661604E-6	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999940862102837	WITHOUT_CLASSIFICATION	5.913789716293562E-6	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999925493455079	WITHOUT_CLASSIFICATION	7.450654492183822E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999940247297517	WITHOUT_CLASSIFICATION	5.9752702483283335E-6	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999933075435021	WITHOUT_CLASSIFICATION	6.692456497952528E-6	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999926360821069	WITHOUT_CLASSIFICATION	7.363917893132416E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.999993118870784	WITHOUT_CLASSIFICATION	6.881129215893798E-6	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999933692924333	WITHOUT_CLASSIFICATION	6.630707566736524E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999938621935974	WITHOUT_CLASSIFICATION	6.137806402659704E-6	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999929997458034	WITHOUT_CLASSIFICATION	7.000254196740239E-6	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999937174849666	WITHOUT_CLASSIFICATION	6.282515033481172E-6	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999936326887869	WITHOUT_CLASSIFICATION	6.367311213070796E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999937732507207	WITHOUT_CLASSIFICATION	6.226749279346034E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999934134803475	WITHOUT_CLASSIFICATION	6.586519652449098E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999926841216757	WITHOUT_CLASSIFICATION	7.315878324236616E-6	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999924005779205	WITHOUT_CLASSIFICATION	7.5994220793990895E-6	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999924326409411	WITHOUT_CLASSIFICATION	7.567359058955741E-6	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999921152561749	WITHOUT_CLASSIFICATION	7.884743825067864E-6	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999927305234058	WITHOUT_CLASSIFICATION	7.269476594206132E-6	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999922951189252	WITHOUT_CLASSIFICATION	7.70488107483279E-6	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999920910381498	WITHOUT_CLASSIFICATION	7.90896185017902E-6	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999922820451557	WITHOUT_CLASSIFICATION	7.717954844327062E-6	TEST
// line 470	WITHOUT_CLASSIFICATION	0.999993001949923	WITHOUT_CLASSIFICATION	6.998050076981443E-6	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999923256988558	WITHOUT_CLASSIFICATION	7.674301144198347E-6	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999929043097382	WITHOUT_CLASSIFICATION	7.095690261797624E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999929947256028	WITHOUT_CLASSIFICATION	7.005274397311693E-6	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999928017830649	WITHOUT_CLASSIFICATION	7.198216935020852E-6	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999930694975177	WITHOUT_CLASSIFICATION	6.930502482341703E-6	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999942941811378	WITHOUT_CLASSIFICATION	5.70581886218593E-6	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999929004000332	WITHOUT_CLASSIFICATION	7.0995999667592175E-6	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999929109257831	WITHOUT_CLASSIFICATION	7.089074216885172E-6	TEST
// line 510	WITHOUT_CLASSIFICATION	0.999994331929879	WITHOUT_CLASSIFICATION	5.668070121002797E-6	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999937365695355	WITHOUT_CLASSIFICATION	6.2634304644984116E-6	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999925167841162	WITHOUT_CLASSIFICATION	7.483215883778014E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999556774165754	WITHOUT_CLASSIFICATION	4.432258342449823E-5	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999925168856867	WITHOUT_CLASSIFICATION	7.4831143132919715E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.999992962401295	WITHOUT_CLASSIFICATION	7.037598705052756E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999925213461309	WITHOUT_CLASSIFICATION	7.478653869104582E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999922076817455	WITHOUT_CLASSIFICATION	7.792318254522407E-6	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999920437078358	WITHOUT_CLASSIFICATION	7.956292164109339E-6	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999920785744727	WITHOUT_CLASSIFICATION	7.921425527313936E-6	TEST
// line 563	WITHOUT_CLASSIFICATION	0.999992453174584	WITHOUT_CLASSIFICATION	7.546825416106256E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999920251330064	WITHOUT_CLASSIFICATION	7.974866993495092E-6	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999922020807861	WITHOUT_CLASSIFICATION	7.797919213993601E-6	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999920687865634	WITHOUT_CLASSIFICATION	7.931213436543037E-6	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999929956475018	WITHOUT_CLASSIFICATION	7.004352498328336E-6	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999930267993105	WITHOUT_CLASSIFICATION	6.973200689525141E-6	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999921885610771	WITHOUT_CLASSIFICATION	7.811438923010126E-6	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999928729842376	WITHOUT_CLASSIFICATION	7.127015762490518E-6	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999928835530992	WITHOUT_CLASSIFICATION	7.11644690083206E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.999994318818997	WITHOUT_CLASSIFICATION	5.681181002892951E-6	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999938934559606	WITHOUT_CLASSIFICATION	6.106544039513552E-6	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999935523692499	WITHOUT_CLASSIFICATION	6.447630750178281E-6	TEST
// line 634	WITHOUT_CLASSIFICATION	0.999992492278767	WITHOUT_CLASSIFICATION	7.507721232993531E-6	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999931887882775	WITHOUT_CLASSIFICATION	6.81121172255195E-6	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999925093788454	WITHOUT_CLASSIFICATION	7.490621154570135E-6	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999920807822248	WITHOUT_CLASSIFICATION	7.919217775186607E-6	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999920007085871	WITHOUT_CLASSIFICATION	7.9992914128675E-6	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999927361106097	WITHOUT_CLASSIFICATION	7.263889390416264E-6	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999920741021655	WITHOUT_CLASSIFICATION	7.925897834420749E-6	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999929252860723	WITHOUT_CLASSIFICATION	7.074713927617229E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.999992712796234	WITHOUT_CLASSIFICATION	7.287203766038019E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999920507492921	WITHOUT_CLASSIFICATION	7.949250708015322E-6	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999943367450843	WITHOUT_CLASSIFICATION	5.663254915654523E-6	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999936098437648	WITHOUT_CLASSIFICATION	6.390156235153478E-6	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999934107337721	WITHOUT_CLASSIFICATION	6.589266227780411E-6	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999926811524128	WITHOUT_CLASSIFICATION	7.318847587257952E-6	TEST
// line 729	WITHOUT_CLASSIFICATION	0.999992733324314	WITHOUT_CLASSIFICATION	7.2666756859973E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999929987710389	WITHOUT_CLASSIFICATION	7.0012289611945375E-6	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999924672456666	WITHOUT_CLASSIFICATION	7.5327543335165134E-6	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999932577877949	WITHOUT_CLASSIFICATION	6.742212205139876E-6	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999937387095706	WITHOUT_CLASSIFICATION	6.261290429405636E-6	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999922717028253	WITHOUT_CLASSIFICATION	7.728297174635873E-6	TEST
// line 757	WITHOUT_CLASSIFICATION	0.999992085774659	WITHOUT_CLASSIFICATION	7.914225340914406E-6	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999929055436084	WITHOUT_CLASSIFICATION	7.094456391539993E-6	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999924873992043	WITHOUT_CLASSIFICATION	7.512600795644214E-6	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999922374441004	WITHOUT_CLASSIFICATION	7.762555899743045E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999926016007483	WITHOUT_CLASSIFICATION	7.398399251736132E-6	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999920556283419	WITHOUT_CLASSIFICATION	7.94437165797472E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999935022167366	WITHOUT_CLASSIFICATION	6.497783263448193E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999928708397804	WITHOUT_CLASSIFICATION	7.1291602195880095E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999937737153031	WITHOUT_CLASSIFICATION	6.22628469702037E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999923173372312	WITHOUT_CLASSIFICATION	7.682662768777733E-6	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999921774722624	WITHOUT_CLASSIFICATION	7.822527737592835E-6	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999938502814542	WITHOUT_CLASSIFICATION	6.149718545859266E-6	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999935770604165	WITHOUT_CLASSIFICATION	6.422939583534663E-6	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999936472777357	WITHOUT_CLASSIFICATION	6.352722264299797E-6	TEST
// line 815	WITHOUT_CLASSIFICATION	0.999994279455333	WITHOUT_CLASSIFICATION	5.720544666852771E-6	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999947561325041	WITHOUT_CLASSIFICATION	5.243867495958638E-6	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999947201551117	WITHOUT_CLASSIFICATION	5.279844888265009E-6	TEST
// line 824	WITHOUT_CLASSIFICATION	0.999993469281148	WITHOUT_CLASSIFICATION	6.530718852018544E-6	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999938520648408	WITHOUT_CLASSIFICATION	6.147935159071931E-6	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999931271958493	WITHOUT_CLASSIFICATION	6.872804150646833E-6	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999931945603782	WITHOUT_CLASSIFICATION	6.805439621941379E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999932305222727	WITHOUT_CLASSIFICATION	6.7694777272495684E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999934547087701	WITHOUT_CLASSIFICATION	6.5452912298834555E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999928790965227	WITHOUT_CLASSIFICATION	7.120903477402431E-6	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999933949684768	WITHOUT_CLASSIFICATION	6.605031523175714E-6	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999928185510161	WITHOUT_CLASSIFICATION	7.181448983953387E-6	TEST
// line 861	WITHOUT_CLASSIFICATION	0.999994314761377	WITHOUT_CLASSIFICATION	5.685238623024191E-6	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999927963014361	WITHOUT_CLASSIFICATION	7.2036985639460055E-6	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999943765885076	WITHOUT_CLASSIFICATION	5.623411492260253E-6	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999929836239212	WITHOUT_CLASSIFICATION	7.016376078767203E-6	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999930390275844	WITHOUT_CLASSIFICATION	6.960972415511246E-6	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999930946076158	WITHOUT_CLASSIFICATION	6.905392384231081E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999932742892065	WITHOUT_CLASSIFICATION	6.725710793566477E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999929617328125	WITHOUT_CLASSIFICATION	7.038267187386866E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999928614148195	WITHOUT_CLASSIFICATION	7.138585180473532E-6	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999931591177718	WITHOUT_CLASSIFICATION	6.840882228210986E-6	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999929497788643	WITHOUT_CLASSIFICATION	7.050221135635744E-6	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999936722831589	WITHOUT_CLASSIFICATION	6.327716840952423E-6	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999933853957043	WITHOUT_CLASSIFICATION	6.614604295723035E-6	TEST
// line 923	WITHOUT_CLASSIFICATION	0.999992951318511	WITHOUT_CLASSIFICATION	7.0486814890760365E-6	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999926530063203	WITHOUT_CLASSIFICATION	7.346993679679352E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999929886778098	WITHOUT_CLASSIFICATION	7.0113221901276685E-6	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999924895887958	WITHOUT_CLASSIFICATION	7.510411204224321E-6	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999929953950093	WITHOUT_CLASSIFICATION	7.004604990790148E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999921587342226	WITHOUT_CLASSIFICATION	7.841265777406896E-6	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999930241154605	WITHOUT_CLASSIFICATION	6.975884539450846E-6	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999922050427683	WITHOUT_CLASSIFICATION	7.794957231688395E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999928895704004	WITHOUT_CLASSIFICATION	7.11042959964783E-6	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999922433865277	WITHOUT_CLASSIFICATION	7.756613472292014E-6	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999922415476993	WITHOUT_CLASSIFICATION	7.75845230080249E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.999992802355499	WITHOUT_CLASSIFICATION	7.197644500993658E-6	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999930537159503	WITHOUT_CLASSIFICATION	6.9462840497232865E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.999993677300308	WITHOUT_CLASSIFICATION	6.322699692070127E-6	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999930465042102	WITHOUT_CLASSIFICATION	6.953495789826648E-6	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999929635477102	WITHOUT_CLASSIFICATION	7.036452289843105E-6	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999920427402119	WITHOUT_CLASSIFICATION	7.957259788037437E-6	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999948581902323	WITHOUT_CLASSIFICATION	5.1418097677324675E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999948793065667	WITHOUT_CLASSIFICATION	5.120693433271801E-6	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999953401050669	WITHOUT_CLASSIFICATION	4.659894933183935E-6	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999946315515201	WITHOUT_CLASSIFICATION	5.368448479868958E-6	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999949600542403	WITHOUT_CLASSIFICATION	5.03994575976951E-6	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.999995164759641	WITHOUT_CLASSIFICATION	4.8352403589082285E-6	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999948722954028	WITHOUT_CLASSIFICATION	5.127704597132282E-6	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999946399573201	WITHOUT_CLASSIFICATION	5.3600426799030174E-6	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999951833324998	WITHOUT_CLASSIFICATION	4.81666750012809E-6	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999945460141506	WITHOUT_CLASSIFICATION	5.453985849383053E-6	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999951448048577	WITHOUT_CLASSIFICATION	4.855195142231194E-6	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.999994642139147	WITHOUT_CLASSIFICATION	5.357860853075547E-6	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999948617170146	WITHOUT_CLASSIFICATION	5.1382829854548525E-6	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.999994642617641	WITHOUT_CLASSIFICATION	5.3573823589519036E-6	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999946848924001	WITHOUT_CLASSIFICATION	5.315107599910295E-6	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999954864543662	WITHOUT_CLASSIFICATION	4.513545633862737E-6	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999951652808128	WITHOUT_CLASSIFICATION	4.8347191872458605E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999947268576427	WITHOUT_CLASSIFICATION	5.273142357297729E-6	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999948994502507	WITHOUT_CLASSIFICATION	5.100549749225643E-6	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999948212199924	WITHOUT_CLASSIFICATION	5.17878000766288E-6	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999946548208118	WITHOUT_CLASSIFICATION	5.345179188095564E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999939066367647	WITHOUT_CLASSIFICATION	6.093363235331398E-6	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999941673619431	WITHOUT_CLASSIFICATION	5.832638056780685E-6	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999939137448141	WITHOUT_CLASSIFICATION	6.086255185865543E-6	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999940019500881	WITHOUT_CLASSIFICATION	5.99804991185904E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999947567524992	WITHOUT_CLASSIFICATION	5.2432475008629995E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999941351031013	WITHOUT_CLASSIFICATION	5.864896898765206E-6	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.999994170558668	WITHOUT_CLASSIFICATION	5.829441332013899E-6	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999942493126084	WITHOUT_CLASSIFICATION	5.7506873916261585E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.999994608457216	WITHOUT_CLASSIFICATION	5.391542783933515E-6	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999939072926839	WITHOUT_CLASSIFICATION	6.092707316012967E-6	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999940183129297	WITHOUT_CLASSIFICATION	5.981687070357671E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999945721005398	WITHOUT_CLASSIFICATION	5.427899460243118E-6	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999940276793757	WITHOUT_CLASSIFICATION	5.972320624203126E-6	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999940010501015	WITHOUT_CLASSIFICATION	5.998949898402355E-6	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999946198121594	WITHOUT_CLASSIFICATION	5.380187840515597E-6	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999951527047309	WITHOUT_CLASSIFICATION	4.847295269081628E-6	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999951324116966	WITHOUT_CLASSIFICATION	4.867588303344816E-6	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999942803615426	WITHOUT_CLASSIFICATION	5.719638457381511E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999949183595352	WITHOUT_CLASSIFICATION	5.0816404648080135E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999949324699849	WITHOUT_CLASSIFICATION	5.0675300149719856E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999948861758082	WITHOUT_CLASSIFICATION	5.113824191771977E-6	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999943462843488	WITHOUT_CLASSIFICATION	5.653715651206406E-6	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999946099240847	WITHOUT_CLASSIFICATION	5.390075915325887E-6	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.999994587716682	WITHOUT_CLASSIFICATION	5.412283317933812E-6	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999946320735177	WITHOUT_CLASSIFICATION	5.3679264822385525E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999944554369248	WITHOUT_CLASSIFICATION	5.5445630753129594E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.99999431143509	WITHOUT_CLASSIFICATION	5.688564910003909E-6	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999945529832903	WITHOUT_CLASSIFICATION	5.4470167096140956E-6	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999943717527723	WITHOUT_CLASSIFICATION	5.628247227728868E-6	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999954250716403	WITHOUT_CLASSIFICATION	4.574928359642735E-6	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999951140373489	WITHOUT_CLASSIFICATION	4.88596265123991E-6	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999949027656067	WITHOUT_CLASSIFICATION	5.097234393384502E-6	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999943645393983	WITHOUT_CLASSIFICATION	5.635460601801038E-6	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999942842158062	WITHOUT_CLASSIFICATION	5.7157841938172844E-6	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999950681445408	WITHOUT_CLASSIFICATION	4.931855459211707E-6	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999947726253889	WITHOUT_CLASSIFICATION	5.227374611113218E-6	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999940335870965	WITHOUT_CLASSIFICATION	5.966412903490494E-6	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999941000472857	WITHOUT_CLASSIFICATION	5.899952714281775E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999950988601288	WITHOUT_CLASSIFICATION	4.901139871127167E-6	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999951009426642	WITHOUT_CLASSIFICATION	4.899057335884804E-6	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999940975701892	WITHOUT_CLASSIFICATION	5.902429810893705E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999948207287325	WITHOUT_CLASSIFICATION	5.179271267497236E-6	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999945642012154	WITHOUT_CLASSIFICATION	5.435798784667468E-6	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999947706620913	WITHOUT_CLASSIFICATION	5.22933790861924E-6	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999943013939008	WITHOUT_CLASSIFICATION	5.698606099200262E-6	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999947421885188	WITHOUT_CLASSIFICATION	5.257811481187366E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999948464937349	WITHOUT_CLASSIFICATION	5.153506264995057E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999945965514164	WITHOUT_CLASSIFICATION	5.403448583571446E-6	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999939248384495	WITHOUT_CLASSIFICATION	6.075161550562554E-6	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999942140506204	WITHOUT_CLASSIFICATION	5.785949379636383E-6	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999941714528255	WITHOUT_CLASSIFICATION	5.828547174506471E-6	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999945426619932	WITHOUT_CLASSIFICATION	5.45733800682063E-6	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999941958664957	WITHOUT_CLASSIFICATION	5.804133504201672E-6	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999942723119915	WITHOUT_CLASSIFICATION	5.727688008549286E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999940528609902	WITHOUT_CLASSIFICATION	5.947139009791469E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999944136285691	WITHOUT_CLASSIFICATION	5.586371430888204E-6	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999940255233148	WITHOUT_CLASSIFICATION	5.974476685045699E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.999994632993918	WITHOUT_CLASSIFICATION	5.367006081986796E-6	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999939864517826	WITHOUT_CLASSIFICATION	6.0135482174517735E-6	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999951688746321	WITHOUT_CLASSIFICATION	4.831125367859665E-6	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999946247614815	WITHOUT_CLASSIFICATION	5.3752385184812705E-6	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999945397517929	WITHOUT_CLASSIFICATION	5.460248207164613E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999940968657909	WITHOUT_CLASSIFICATION	5.903134209118793E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.999994854877301	WITHOUT_CLASSIFICATION	5.1451226990202275E-6	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.999994523293629	WITHOUT_CLASSIFICATION	5.4767063709808985E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999941146939317	WITHOUT_CLASSIFICATION	5.885306068230931E-6	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999938731975125	WITHOUT_CLASSIFICATION	6.12680248742089E-6	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999941389183966	WITHOUT_CLASSIFICATION	5.8610816034037645E-6	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999944392243908	WITHOUT_CLASSIFICATION	5.560775609303531E-6	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999941107458944	WITHOUT_CLASSIFICATION	5.889254105699794E-6	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999938851046772	WITHOUT_CLASSIFICATION	6.11489532277139E-6	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999938708804224	WITHOUT_CLASSIFICATION	6.129119577617008E-6	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999945701789439	WITHOUT_CLASSIFICATION	5.4298210560951635E-6	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999939594252905	WITHOUT_CLASSIFICATION	6.040574709550257E-6	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999940759377627	WITHOUT_CLASSIFICATION	5.92406223725269E-6	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999939232110671	WITHOUT_CLASSIFICATION	6.076788933001964E-6	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999946391389418	WITHOUT_CLASSIFICATION	5.360861058283427E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999938946558445	WITHOUT_CLASSIFICATION	6.105344155501206E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999946049645375	WITHOUT_CLASSIFICATION	5.395035462535175E-6	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999947361533936	WITHOUT_CLASSIFICATION	5.2638466063330205E-6	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999945319011799	WITHOUT_CLASSIFICATION	5.468098820032865E-6	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999945576701853	WITHOUT_CLASSIFICATION	5.44232981468323E-6	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999942465742521	WITHOUT_CLASSIFICATION	5.753425747881595E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999943678605264	WITHOUT_CLASSIFICATION	5.6321394735661265E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999945743010846	WITHOUT_CLASSIFICATION	5.425698915371988E-6	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999947784858604	WITHOUT_CLASSIFICATION	5.221514139619573E-6	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.999993964056836	WITHOUT_CLASSIFICATION	6.0359431639395705E-6	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999939512278658	WITHOUT_CLASSIFICATION	6.048772134222454E-6	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999940872070003	WITHOUT_CLASSIFICATION	5.912792999741976E-6	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999938715929507	WITHOUT_CLASSIFICATION	6.128407049259604E-6	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999945894245238	WITHOUT_CLASSIFICATION	5.41057547611985E-6	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.999993809696595	WITHOUT_CLASSIFICATION	6.190303405056838E-6	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999944174216974	WITHOUT_CLASSIFICATION	5.582578302612121E-6	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.999993927426485	WITHOUT_CLASSIFICATION	6.0725735150230756E-6	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999946375886971	WITHOUT_CLASSIFICATION	5.362411302878604E-6	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.999994060245353	WITHOUT_CLASSIFICATION	5.939754647009643E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999945290135858	WITHOUT_CLASSIFICATION	5.4709864141677835E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999950778455728	WITHOUT_CLASSIFICATION	4.922154427206868E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999943970304561	WITHOUT_CLASSIFICATION	5.602969543903787E-6	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999941859615379	WITHOUT_CLASSIFICATION	5.814038462118557E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999944592232539	WITHOUT_CLASSIFICATION	5.540776746036541E-6	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999940643243924	WITHOUT_CLASSIFICATION	5.935675607613076E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999941391493292	WITHOUT_CLASSIFICATION	5.860850670762454E-6	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999939286802686	WITHOUT_CLASSIFICATION	6.071319731446587E-6	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999940449202656	WITHOUT_CLASSIFICATION	5.955079734410876E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999943242851602	WITHOUT_CLASSIFICATION	5.675714839843264E-6	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999939054392295	WITHOUT_CLASSIFICATION	6.094560770564759E-6	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999946849535	WITHOUT_CLASSIFICATION	5.315046500010406E-6	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999954774835859	WITHOUT_CLASSIFICATION	4.52251641406851E-6	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999950848435172	WITHOUT_CLASSIFICATION	4.915156482838727E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.99999493248113	WITHOUT_CLASSIFICATION	5.067518869925825E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999953704331819	WITHOUT_CLASSIFICATION	4.629566818114184E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.999991522943918	WITHOUT_CLASSIFICATION	8.477056082059066E-6	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999601313764551	WITHOUT_CLASSIFICATION	3.986862354487842E-5	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999359723771585	WITHOUT_CLASSIFICATION	6.402762284152375E-5	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.999914692555908	WITHOUT_CLASSIFICATION	8.530744409188473E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999988194947855	WITHOUT_CLASSIFICATION	1.180505214519106E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999986407698791	WITHOUT_CLASSIFICATION	1.3592301208615126E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999976602914534	WITHOUT_CLASSIFICATION	2.3397085465798314E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999974100721998	WITHOUT_CLASSIFICATION	2.5899278001932574E-6	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.999954989498604	WITHOUT_CLASSIFICATION	4.5010501396107146E-5	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999874290178703	WITHOUT_CLASSIFICATION	1.257098212962615E-5	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999992099311813	WITHOUT_CLASSIFICATION	7.90068818639572E-7	TEST
// line 529	WITHOUT_CLASSIFICATION	0.999992672925963	WITHOUT_CLASSIFICATION	7.327074036872726E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999950405061868	WITHOUT_CLASSIFICATION	4.959493813196938E-6	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999554621566498	WITHOUT_CLASSIFICATION	4.45378433502022E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999972880538323	WITHOUT_CLASSIFICATION	2.7119461676472345E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999953201553996	WITHOUT_CLASSIFICATION	4.6798446003537375E-6	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999881681966403	WITHOUT_CLASSIFICATION	1.1831803359862512E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.999998004264319	WITHOUT_CLASSIFICATION	1.9957356809722838E-6	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999992978410868	WITHOUT_CLASSIFICATION	7.02158913170371E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999985513976741	WITHOUT_CLASSIFICATION	1.4486023259094343E-6	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999985950992009	WITHOUT_CLASSIFICATION	1.4049007991394751E-6	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999951587215841	WITHOUT_CLASSIFICATION	4.841278415886494E-6	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999997295635488	WITHOUT_CLASSIFICATION	2.7043645123129386E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999721974078	WITHOUT_CLASSIFICATION	2.7802592199769823E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999721974078	WITHOUT_CLASSIFICATION	2.7802592199769823E-7	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.999999617180138	WITHOUT_CLASSIFICATION	3.828198619659268E-7	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.999999896385381	WITHOUT_CLASSIFICATION	1.0361461904414257E-7	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999819198405842	WITHOUT_CLASSIFICATION	1.8080159415824033E-5	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999992420059564	WITHOUT_CLASSIFICATION	7.579940435530546E-7	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999983841978293	WITHOUT_CLASSIFICATION	1.6158021707404706E-6	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999996535039178	WITHOUT_CLASSIFICATION	3.464960821508532E-7	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999999180567081	WITHOUT_CLASSIFICATION	8.194329185455069E-8	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999986497119522	WITHOUT_CLASSIFICATION	1.3502880478558412E-6	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999998877183837	WITHOUT_CLASSIFICATION	1.1228161642443296E-7	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999992829988189	WITHOUT_CLASSIFICATION	7.170011811227412E-7	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999887589809425	WITHOUT_CLASSIFICATION	1.1241019057419662E-5	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999962791027336	WITHOUT_CLASSIFICATION	3.7208972663113857E-6	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999995811067194	WITHOUT_CLASSIFICATION	4.188932806036427E-7	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.999978985561652	WITHOUT_CLASSIFICATION	2.1014438347998245E-5	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999706004301018	WITHOUT_CLASSIFICATION	2.9399569898167446E-5	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999879894721025	WITHOUT_CLASSIFICATION	1.201052789750034E-5	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999973846643138	WITHOUT_CLASSIFICATION	2.615335686180991E-6	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.999993390278714	WITHOUT_CLASSIFICATION	6.6097212859647456E-6	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999999047681337	WITHOUT_CLASSIFICATION	9.523186623452984E-8	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999991519006749	WITHOUT_CLASSIFICATION	8.480993251805066E-7	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999293980953	WITHOUT_CLASSIFICATION	7.060190463461968E-8	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999754137187986	WITHOUT_CLASSIFICATION	2.4586281201365373E-5	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999964186727593	WITHOUT_CLASSIFICATION	3.5813272407642626E-6	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999988858881205	WITHOUT_CLASSIFICATION	1.1141118795851186E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999964186727593	WITHOUT_CLASSIFICATION	3.5813272407642626E-6	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999989319486375	WITHOUT_CLASSIFICATION	1.0680513625610045E-6	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999981333642876	WITHOUT_CLASSIFICATION	1.8666357124428422E-6	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999997173713153	WITHOUT_CLASSIFICATION	2.826286845989096E-7	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999937090908554	WITHOUT_CLASSIFICATION	6.290909144686728E-6	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999963665613625	WITHOUT_CLASSIFICATION	3.633438637524853E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999794865353058	WITHOUT_CLASSIFICATION	2.051346469430806E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999794865353058	WITHOUT_CLASSIFICATION	2.051346469430806E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999794865353058	WITHOUT_CLASSIFICATION	2.051346469430806E-5	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999936261553234	WITHOUT_CLASSIFICATION	6.373844676705309E-6	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999938708062068	WITHOUT_CLASSIFICATION	6.12919379319259E-6	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999997722673726	WITHOUT_CLASSIFICATION	2.2773262740913755E-7	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998830027158626	WITHOUT_CLASSIFICATION	1.1699728413744756E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998830027158626	WITHOUT_CLASSIFICATION	1.1699728413744756E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998830027158626	WITHOUT_CLASSIFICATION	1.1699728413744756E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998830027158626	WITHOUT_CLASSIFICATION	1.1699728413744756E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998830027158626	WITHOUT_CLASSIFICATION	1.1699728413744756E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998830027158626	WITHOUT_CLASSIFICATION	1.1699728413744756E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999240488310094	WITHOUT_CLASSIFICATION	7.595116899061534E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999240488310094	WITHOUT_CLASSIFICATION	7.595116899061534E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999240488310094	WITHOUT_CLASSIFICATION	7.595116899061534E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999240488310094	WITHOUT_CLASSIFICATION	7.595116899061534E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999240488310094	WITHOUT_CLASSIFICATION	7.595116899061534E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997359059287617	WITHOUT_CLASSIFICATION	2.640940712382971E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997359059287617	WITHOUT_CLASSIFICATION	2.640940712382971E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997359059287617	WITHOUT_CLASSIFICATION	2.640940712382971E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997359059287617	WITHOUT_CLASSIFICATION	2.640940712382971E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997359059287617	WITHOUT_CLASSIFICATION	2.640940712382971E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998982826099708	WITHOUT_CLASSIFICATION	1.0171739002917033E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998982826099708	WITHOUT_CLASSIFICATION	1.0171739002917033E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998982826099708	WITHOUT_CLASSIFICATION	1.0171739002917033E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998982826099708	WITHOUT_CLASSIFICATION	1.0171739002917033E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998982826099708	WITHOUT_CLASSIFICATION	1.0171739002917033E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998982826099708	WITHOUT_CLASSIFICATION	1.0171739002917033E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999375592976336	WITHOUT_CLASSIFICATION	6.244070236638962E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999375592976336	WITHOUT_CLASSIFICATION	6.244070236638962E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999375592976336	WITHOUT_CLASSIFICATION	6.244070236638962E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999375592976336	WITHOUT_CLASSIFICATION	6.244070236638962E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999375592976336	WITHOUT_CLASSIFICATION	6.244070236638962E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999433091569213	WITHOUT_CLASSIFICATION	5.669084307876009E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999433091569213	WITHOUT_CLASSIFICATION	5.669084307876009E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999433091569213	WITHOUT_CLASSIFICATION	5.669084307876009E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999433091569213	WITHOUT_CLASSIFICATION	5.669084307876009E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999433091569213	WITHOUT_CLASSIFICATION	5.669084307876009E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999556774165754	WITHOUT_CLASSIFICATION	4.432258342449823E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999556774165754	WITHOUT_CLASSIFICATION	4.432258342449823E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999556774165754	WITHOUT_CLASSIFICATION	4.432258342449823E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999556774165754	WITHOUT_CLASSIFICATION	4.432258342449823E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999556774165754	WITHOUT_CLASSIFICATION	4.432258342449823E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999974357005315	WITHOUT_CLASSIFICATION	2.564299468539516E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999981777746715	WITHOUT_CLASSIFICATION	1.822225328523683E-6	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999791468669155	WITHOUT_CLASSIFICATION	2.0853133084586847E-5	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999920258348596	WITHOUT_CLASSIFICATION	7.974165140445684E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999990824749541	WITHOUT_CLASSIFICATION	9.175250459022743E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999944371108149	WITHOUT_CLASSIFICATION	5.562889185034425E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999940247297517	WITHOUT_CLASSIFICATION	5.9752702483283335E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999938621935974	WITHOUT_CLASSIFICATION	6.137806402659704E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999937732507207	WITHOUT_CLASSIFICATION	6.226749279346034E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999934134803475	WITHOUT_CLASSIFICATION	6.586519652449098E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999929811704892	WITHOUT_CLASSIFICATION	7.018829510886416E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999926841216757	WITHOUT_CLASSIFICATION	7.315878324236616E-6	TEST
// line 280	WITHOUT_CLASSIFICATION	0.99999418218562	WITHOUT_CLASSIFICATION	5.8178143800248186E-6	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999937866499787	WITHOUT_CLASSIFICATION	6.213350021170197E-6	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999928322341188	WITHOUT_CLASSIFICATION	7.167765881174862E-6	TEST
// line 324	WITHOUT_CLASSIFICATION	0.999993119177515	WITHOUT_CLASSIFICATION	6.880822485008563E-6	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999931036558315	WITHOUT_CLASSIFICATION	6.896344168531978E-6	TEST
// line 331	WITHOUT_CLASSIFICATION	0.999993981727804	WITHOUT_CLASSIFICATION	6.018272196000619E-6	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999923891858552	WITHOUT_CLASSIFICATION	7.610814144810533E-6	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999924909818857	WITHOUT_CLASSIFICATION	7.509018114338223E-6	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999931144718244	WITHOUT_CLASSIFICATION	6.885528175568211E-6	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999926238560602	WITHOUT_CLASSIFICATION	7.376143939832591E-6	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999933716182162	WITHOUT_CLASSIFICATION	6.628381783713643E-6	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999926247389749	WITHOUT_CLASSIFICATION	7.375261025200866E-6	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999933094344727	WITHOUT_CLASSIFICATION	6.6905655273492655E-6	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999925148997466	WITHOUT_CLASSIFICATION	7.485100253347478E-6	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999932147608854	WITHOUT_CLASSIFICATION	6.785239114520341E-6	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999930851297891	WITHOUT_CLASSIFICATION	6.914870210841883E-6	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999927146988244	WITHOUT_CLASSIFICATION	7.285301175561473E-6	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999927362749279	WITHOUT_CLASSIFICATION	7.2637250721105445E-6	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999930106632421	WITHOUT_CLASSIFICATION	6.9893367579046485E-6	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999925131392118	WITHOUT_CLASSIFICATION	7.486860788215995E-6	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999921080760976	WITHOUT_CLASSIFICATION	7.891923902286363E-6	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999929081254657	WITHOUT_CLASSIFICATION	7.091874534213064E-6	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999921005223809	WITHOUT_CLASSIFICATION	7.899477619104077E-6	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999922796508136	WITHOUT_CLASSIFICATION	7.720349186466697E-6	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999920852864329	WITHOUT_CLASSIFICATION	7.914713567175988E-6	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999922605767779	WITHOUT_CLASSIFICATION	7.739423221989757E-6	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999930540216181	WITHOUT_CLASSIFICATION	6.945978381886907E-6	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999943848040571	WITHOUT_CLASSIFICATION	5.615195942815328E-6	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999928808233978	WITHOUT_CLASSIFICATION	7.119176602289123E-6	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999921800444688	WITHOUT_CLASSIFICATION	7.819955531335162E-6	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999924482695999	WITHOUT_CLASSIFICATION	7.551730400130043E-6	TEST
// line 503	WITHOUT_CLASSIFICATION	0.999993121418329	WITHOUT_CLASSIFICATION	6.878581671088612E-6	TEST
// line 506	WITHOUT_CLASSIFICATION	0.999992815820926	WITHOUT_CLASSIFICATION	7.184179073992702E-6	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999928943523686	WITHOUT_CLASSIFICATION	7.105647631329457E-6	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999940808716383	WITHOUT_CLASSIFICATION	5.9191283615821425E-6	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999941122757441	WITHOUT_CLASSIFICATION	5.8877242559381965E-6	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999926203178713	WITHOUT_CLASSIFICATION	7.3796821286460644E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.999992962401295	WITHOUT_CLASSIFICATION	7.037598705052756E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999925213461309	WITHOUT_CLASSIFICATION	7.478653869104582E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999922076817455	WITHOUT_CLASSIFICATION	7.792318254522407E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999920251330064	WITHOUT_CLASSIFICATION	7.974866993495092E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.999994318818997	WITHOUT_CLASSIFICATION	5.681181002892951E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.999992712796234	WITHOUT_CLASSIFICATION	7.287203766038019E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.999993716260736	WITHOUT_CLASSIFICATION	6.2837392641387395E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999920507492921	WITHOUT_CLASSIFICATION	7.949250708015322E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999926016007483	WITHOUT_CLASSIFICATION	7.398399251736132E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999935022167366	WITHOUT_CLASSIFICATION	6.497783263448193E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999929818612945	WITHOUT_CLASSIFICATION	7.018138705533952E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999928708397804	WITHOUT_CLASSIFICATION	7.1291602195880095E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999937737153031	WITHOUT_CLASSIFICATION	6.22628469702037E-6	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999925204639993	WITHOUT_CLASSIFICATION	7.47953600059546E-6	TEST
// line 549	WITHOUT_CLASSIFICATION	0.999992298910705	WITHOUT_CLASSIFICATION	7.701089295110336E-6	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999925411899451	WITHOUT_CLASSIFICATION	7.458810054954185E-6	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999928244876759	WITHOUT_CLASSIFICATION	7.175512324078813E-6	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999936996325751	WITHOUT_CLASSIFICATION	6.300367424868246E-6	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999937482240552	WITHOUT_CLASSIFICATION	6.2517759448208384E-6	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999922918314885	WITHOUT_CLASSIFICATION	7.708168511467124E-6	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999922612068944	WITHOUT_CLASSIFICATION	7.738793105533414E-6	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999929402700652	WITHOUT_CLASSIFICATION	7.05972993473253E-6	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999929956025804	WITHOUT_CLASSIFICATION	7.004397419745831E-6	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999927090156359	WITHOUT_CLASSIFICATION	7.290984364144585E-6	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999920559546612	WITHOUT_CLASSIFICATION	7.944045338659614E-6	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999929801802496	WITHOUT_CLASSIFICATION	7.019819750488247E-6	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999929003153447	WITHOUT_CLASSIFICATION	7.09968465529501E-6	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999926807095908	WITHOUT_CLASSIFICATION	7.3192904092509545E-6	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999931513566476	WITHOUT_CLASSIFICATION	6.8486433524551715E-6	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999923438716655	WITHOUT_CLASSIFICATION	7.65612833454509E-6	TEST
// line 639	WITHOUT_CLASSIFICATION	0.999992458974574	WITHOUT_CLASSIFICATION	7.541025426011869E-6	TEST
// line 648	WITHOUT_CLASSIFICATION	0.999992977104445	WITHOUT_CLASSIFICATION	7.022895554941677E-6	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999922191525631	WITHOUT_CLASSIFICATION	7.780847436848192E-6	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999935768524089	WITHOUT_CLASSIFICATION	6.4231475911575895E-6	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999918709658346	WITHOUT_CLASSIFICATION	8.129034165345884E-6	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999929779958564	WITHOUT_CLASSIFICATION	7.022004143489187E-6	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999934362343476	WITHOUT_CLASSIFICATION	6.563765652448305E-6	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999927984508489	WITHOUT_CLASSIFICATION	7.201549151128261E-6	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999920506292368	WITHOUT_CLASSIFICATION	7.949370763205812E-6	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999928694100019	WITHOUT_CLASSIFICATION	7.130589998132542E-6	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999935839844567	WITHOUT_CLASSIFICATION	6.4160155433408615E-6	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999925850084516	WITHOUT_CLASSIFICATION	7.414991548496025E-6	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999923841584711	WITHOUT_CLASSIFICATION	7.6158415289191255E-6	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999925110471259	WITHOUT_CLASSIFICATION	7.488952874086913E-6	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999921233178509	WITHOUT_CLASSIFICATION	7.876682149067817E-6	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999948987757139	WITHOUT_CLASSIFICATION	5.1012242860667316E-6	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999934686874473	WITHOUT_CLASSIFICATION	6.531312552751207E-6	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999942955682444	WITHOUT_CLASSIFICATION	5.704431755640401E-6	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999943462047214	WITHOUT_CLASSIFICATION	5.653795278506494E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999934547087701	WITHOUT_CLASSIFICATION	6.5452912298834555E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999929883357995	WITHOUT_CLASSIFICATION	7.0116642005018804E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999928790965227	WITHOUT_CLASSIFICATION	7.120903477402431E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999932742892065	WITHOUT_CLASSIFICATION	6.725710793566477E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999928614148195	WITHOUT_CLASSIFICATION	7.138585180473532E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999929886778098	WITHOUT_CLASSIFICATION	7.0113221901276685E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999921587342226	WITHOUT_CLASSIFICATION	7.841265777406896E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999928895704004	WITHOUT_CLASSIFICATION	7.11042959964783E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.999993677300308	WITHOUT_CLASSIFICATION	6.322699692070127E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999948793065667	WITHOUT_CLASSIFICATION	5.120693433271801E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999953413948451	WITHOUT_CLASSIFICATION	4.658605154757359E-6	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999940419300875	WITHOUT_CLASSIFICATION	5.958069912554978E-6	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999933822337337	WITHOUT_CLASSIFICATION	6.617766266234999E-6	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999934302419078	WITHOUT_CLASSIFICATION	6.569758092298753E-6	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999936465689234	WITHOUT_CLASSIFICATION	6.353431076602628E-6	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999943267721357	WITHOUT_CLASSIFICATION	5.673227864281788E-6	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999929993605803	WITHOUT_CLASSIFICATION	7.000639419826673E-6	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999935706281698	WITHOUT_CLASSIFICATION	6.429371830150361E-6	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999931916809561	WITHOUT_CLASSIFICATION	6.8083190438980085E-6	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999928055257535	WITHOUT_CLASSIFICATION	7.194474246451092E-6	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999929660336352	WITHOUT_CLASSIFICATION	7.033966364905765E-6	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999929792073161	WITHOUT_CLASSIFICATION	7.020792683814961E-6	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999928897352186	WITHOUT_CLASSIFICATION	7.1102647814638475E-6	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999928930967737	WITHOUT_CLASSIFICATION	7.1069032262962414E-6	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999936339382904	WITHOUT_CLASSIFICATION	6.36606170955244E-6	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999933387058664	WITHOUT_CLASSIFICATION	6.661294133630505E-6	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999927791186083	WITHOUT_CLASSIFICATION	7.220881391812023E-6	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999941070213991	WITHOUT_CLASSIFICATION	5.8929786009094165E-6	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999936871316287	WITHOUT_CLASSIFICATION	6.312868371275582E-6	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999925844691296	WITHOUT_CLASSIFICATION	7.4155308704079615E-6	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999933961804427	WITHOUT_CLASSIFICATION	6.603819557286224E-6	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999937761708448	WITHOUT_CLASSIFICATION	6.2238291551563305E-6	TEST
// line 947	WITHOUT_CLASSIFICATION	0.999992316869083	WITHOUT_CLASSIFICATION	7.683130917041247E-6	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999937233496972	WITHOUT_CLASSIFICATION	6.2766503028767815E-6	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999920373069908	WITHOUT_CLASSIFICATION	7.962693009143236E-6	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999921694670768	WITHOUT_CLASSIFICATION	7.830532923281444E-6	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999920502260675	WITHOUT_CLASSIFICATION	7.949773932459888E-6	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999921586603144	WITHOUT_CLASSIFICATION	7.841339685525047E-6	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999932468595574	WITHOUT_CLASSIFICATION	6.753140442692462E-6	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999947822085228	WITHOUT_CLASSIFICATION	5.217791477301717E-6	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999951299695095	WITHOUT_CLASSIFICATION	4.870030490467116E-6	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999947951598565	WITHOUT_CLASSIFICATION	5.204840143454781E-6	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999945972908141	WITHOUT_CLASSIFICATION	5.402709185994294E-6	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999948603915896	WITHOUT_CLASSIFICATION	5.139608410361793E-6	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999946453957879	WITHOUT_CLASSIFICATION	5.354604212108226E-6	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999946467813418	WITHOUT_CLASSIFICATION	5.3532186582889775E-6	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999945589395997	WITHOUT_CLASSIFICATION	5.441060400237772E-6	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999946188284097	WITHOUT_CLASSIFICATION	5.381171590342062E-6	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999946392123524	WITHOUT_CLASSIFICATION	5.360787647597912E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999945822302434	WITHOUT_CLASSIFICATION	5.417769756588928E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999939066367647	WITHOUT_CLASSIFICATION	6.093363235331398E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999942798286027	WITHOUT_CLASSIFICATION	5.720171397332819E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999947567524992	WITHOUT_CLASSIFICATION	5.2432475008629995E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.999994608457216	WITHOUT_CLASSIFICATION	5.391542783933515E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999945721005398	WITHOUT_CLASSIFICATION	5.427899460243118E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999949183595352	WITHOUT_CLASSIFICATION	5.0816404648080135E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999949324699849	WITHOUT_CLASSIFICATION	5.0675300149719856E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999944554369248	WITHOUT_CLASSIFICATION	5.5445630753129594E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.99999431143509	WITHOUT_CLASSIFICATION	5.688564910003909E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999942816066385	WITHOUT_CLASSIFICATION	5.718393361519865E-6	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999951928056481	WITHOUT_CLASSIFICATION	4.8071943519192966E-6	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999951845374724	WITHOUT_CLASSIFICATION	4.815462527580595E-6	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999951868472545	WITHOUT_CLASSIFICATION	4.813152745495467E-6	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999946300227883	WITHOUT_CLASSIFICATION	5.369977211710797E-6	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999948718281898	WITHOUT_CLASSIFICATION	5.128171810155108E-6	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999939989444321	WITHOUT_CLASSIFICATION	6.001055568017892E-6	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.999993930566209	WITHOUT_CLASSIFICATION	6.069433790912595E-6	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999950635989451	WITHOUT_CLASSIFICATION	4.936401054864618E-6	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999944072676584	WITHOUT_CLASSIFICATION	5.592732341457288E-6	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999943326947536	WITHOUT_CLASSIFICATION	5.66730524637607E-6	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999947823436512	WITHOUT_CLASSIFICATION	5.217656348771901E-6	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999939607045233	WITHOUT_CLASSIFICATION	6.039295476672318E-6	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999941089208875	WITHOUT_CLASSIFICATION	5.891079112546292E-6	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999938519705741	WITHOUT_CLASSIFICATION	6.1480294259246065E-6	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.999994357807445	WITHOUT_CLASSIFICATION	5.642192555094194E-6	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.999994250004799	WITHOUT_CLASSIFICATION	5.749995200988689E-6	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999940538267242	WITHOUT_CLASSIFICATION	5.946173275863137E-6	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999954544494912	WITHOUT_CLASSIFICATION	4.54555050878109E-6	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999945936104988	WITHOUT_CLASSIFICATION	5.406389501191398E-6	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999940145589372	WITHOUT_CLASSIFICATION	5.9854410628200655E-6	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999945012303333	WITHOUT_CLASSIFICATION	5.498769666649987E-6	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999943290800959	WITHOUT_CLASSIFICATION	5.670919904150875E-6	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999945156001734	WITHOUT_CLASSIFICATION	5.484399826599865E-6	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999945570546223	WITHOUT_CLASSIFICATION	5.442945377788435E-6	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999943459769433	WITHOUT_CLASSIFICATION	5.6540230567393625E-6	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999944134953807	WITHOUT_CLASSIFICATION	5.586504619387484E-6	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999949343032367	WITHOUT_CLASSIFICATION	5.065696763342994E-6	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999943886933016	WITHOUT_CLASSIFICATION	5.611306698492203E-6	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.99999492208793	WITHOUT_CLASSIFICATION	5.07791207008748E-6	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999946164550797	WITHOUT_CLASSIFICATION	5.383544920228386E-6	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999943831459391	WITHOUT_CLASSIFICATION	5.616854060894719E-6	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999944274985678	WITHOUT_CLASSIFICATION	5.5725014321956076E-6	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.999994897025898	WITHOUT_CLASSIFICATION	5.10297410201908E-6	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999949489615213	WITHOUT_CLASSIFICATION	5.051038478708396E-6	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999943079844328	WITHOUT_CLASSIFICATION	5.692015567210086E-6	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999943598594885	WITHOUT_CLASSIFICATION	5.6401405114956495E-6	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999949356438292	WITHOUT_CLASSIFICATION	5.064356170722199E-6	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999947096455791	WITHOUT_CLASSIFICATION	5.290354420914609E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999948207287325	WITHOUT_CLASSIFICATION	5.179271267497236E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999948464937349	WITHOUT_CLASSIFICATION	5.153506264995057E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999945965514164	WITHOUT_CLASSIFICATION	5.403448583571446E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999945605617877	WITHOUT_CLASSIFICATION	5.4394382122678006E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999944136285691	WITHOUT_CLASSIFICATION	5.586371430888204E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.999994632993918	WITHOUT_CLASSIFICATION	5.367006081986796E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999940968657909	WITHOUT_CLASSIFICATION	5.903134209118793E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.999994854877301	WITHOUT_CLASSIFICATION	5.1451226990202275E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999938946558445	WITHOUT_CLASSIFICATION	6.105344155501206E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999946049645375	WITHOUT_CLASSIFICATION	5.395035462535175E-6	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999952403572242	WITHOUT_CLASSIFICATION	4.75964277577207E-6	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.999994116665528	WITHOUT_CLASSIFICATION	5.883334472003955E-6	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999941688880395	WITHOUT_CLASSIFICATION	5.831111960522967E-6	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999944889632734	WITHOUT_CLASSIFICATION	5.511036726676059E-6	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.999994549616343	WITHOUT_CLASSIFICATION	5.450383656947137E-6	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.999994588470975	WITHOUT_CLASSIFICATION	5.411529025015504E-6	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999941739941045	WITHOUT_CLASSIFICATION	5.826005895526727E-6	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999946197999136	WITHOUT_CLASSIFICATION	5.3802000865042585E-6	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999942364429413	WITHOUT_CLASSIFICATION	5.7635570587892704E-6	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999942371328324	WITHOUT_CLASSIFICATION	5.762867167552802E-6	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999942270576218	WITHOUT_CLASSIFICATION	5.7729423781756005E-6	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.999994098688041	WITHOUT_CLASSIFICATION	5.901311958975369E-6	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999942296296744	WITHOUT_CLASSIFICATION	5.77037032562645E-6	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999941708662813	WITHOUT_CLASSIFICATION	5.829133718795763E-6	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999941544795967	WITHOUT_CLASSIFICATION	5.8455204033268325E-6	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999947226148092	WITHOUT_CLASSIFICATION	5.277385190871679E-6	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999941282649529	WITHOUT_CLASSIFICATION	5.871735047063627E-6	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.999994568503319	WITHOUT_CLASSIFICATION	5.4314966809716885E-6	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999945603321607	WITHOUT_CLASSIFICATION	5.43966783929456E-6	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999939957235308	WITHOUT_CLASSIFICATION	6.004276469244212E-6	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999943243436225	WITHOUT_CLASSIFICATION	5.675656377512788E-6	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999944502329164	WITHOUT_CLASSIFICATION	5.549767083630919E-6	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999948127569754	WITHOUT_CLASSIFICATION	5.1872430244979625E-6	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.999994201157217	WITHOUT_CLASSIFICATION	5.7988427829750576E-6	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999942577843824	WITHOUT_CLASSIFICATION	5.7422156175215835E-6	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999943495398999	WITHOUT_CLASSIFICATION	5.650460100140693E-6	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999939469261282	WITHOUT_CLASSIFICATION	6.053073871755302E-6	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999946364763933	WITHOUT_CLASSIFICATION	5.363523606688157E-6	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999939340209719	WITHOUT_CLASSIFICATION	6.065979028033238E-6	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999946692238721	WITHOUT_CLASSIFICATION	5.330776127818323E-6	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999943843346016	WITHOUT_CLASSIFICATION	5.615665398274459E-6	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999945545732659	WITHOUT_CLASSIFICATION	5.4454267340841385E-6	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999939479109937	WITHOUT_CLASSIFICATION	6.052089006236752E-6	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999945818367091	WITHOUT_CLASSIFICATION	5.418163290890411E-6	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999947857378989	WITHOUT_CLASSIFICATION	5.214262101049404E-6	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999944045084905	WITHOUT_CLASSIFICATION	5.595491509424908E-6	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999939240996948	WITHOUT_CLASSIFICATION	6.075900305119353E-6	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999942502717715	WITHOUT_CLASSIFICATION	5.749728228560964E-6	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999939488532019	WITHOUT_CLASSIFICATION	6.051146798045777E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999938591055925	WITHOUT_CLASSIFICATION	6.140894407551837E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999943678605264	WITHOUT_CLASSIFICATION	5.6321394735661265E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999945743010846	WITHOUT_CLASSIFICATION	5.425698915371988E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999945290135858	WITHOUT_CLASSIFICATION	5.4709864141677835E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999939263558044	WITHOUT_CLASSIFICATION	6.073644195565912E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999943970304561	WITHOUT_CLASSIFICATION	5.602969543903787E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999944592232539	WITHOUT_CLASSIFICATION	5.540776746036541E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999941391493292	WITHOUT_CLASSIFICATION	5.860850670762454E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.99999493248113	WITHOUT_CLASSIFICATION	5.067518869925825E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999953704331819	WITHOUT_CLASSIFICATION	4.629566818114184E-6	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999945446589305	WITHOUT_CLASSIFICATION	5.455341069544908E-6	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999945249306278	WITHOUT_CLASSIFICATION	5.475069372212387E-6	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999942744230699	WITHOUT_CLASSIFICATION	5.72557693014149E-6	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999943390787556	WITHOUT_CLASSIFICATION	5.660921244373795E-6	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999941053316518	WITHOUT_CLASSIFICATION	5.894668348278015E-6	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999942190054869	WITHOUT_CLASSIFICATION	5.7809945131843035E-6	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999940734293093	WITHOUT_CLASSIFICATION	5.926570690702305E-6	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999939267384927	WITHOUT_CLASSIFICATION	6.073261507254614E-6	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999940389472787	WITHOUT_CLASSIFICATION	5.961052721280697E-6	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999944316469119	WITHOUT_CLASSIFICATION	5.568353088047887E-6	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999941034498919	WITHOUT_CLASSIFICATION	5.896550108107328E-6	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999946205860576	WITHOUT_CLASSIFICATION	5.379413942440123E-6	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999948997529471	WITHOUT_CLASSIFICATION	5.100247052936966E-6	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999939292177191	WITHOUT_CLASSIFICATION	6.070782280812385E-6	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999940002995555	WITHOUT_CLASSIFICATION	5.99970044451796E-6	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999943330458605	WITHOUT_CLASSIFICATION	5.6669541395349884E-6	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999941988887278	WITHOUT_CLASSIFICATION	5.801111272231269E-6	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999942986637712	WITHOUT_CLASSIFICATION	5.701336228822073E-6	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999948275894619	WITHOUT_CLASSIFICATION	5.172410538026548E-6	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999940697267392	WITHOUT_CLASSIFICATION	5.930273260883942E-6	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999940347705366	WITHOUT_CLASSIFICATION	5.9652294634777655E-6	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999946201612152	WITHOUT_CLASSIFICATION	5.379838784800243E-6	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999939495393744	WITHOUT_CLASSIFICATION	6.050460625563919E-6	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999939169568733	WITHOUT_CLASSIFICATION	6.083043126681448E-6	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999939092731687	WITHOUT_CLASSIFICATION	6.090726831294441E-6	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999950181703664	WITHOUT_CLASSIFICATION	4.981829633598907E-6	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.999994619214861	WITHOUT_CLASSIFICATION	5.380785139016809E-6	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999945340948696	WITHOUT_CLASSIFICATION	5.4659051304569025E-6	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999939983586034	WITHOUT_CLASSIFICATION	6.001641396611876E-6	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.999994002339223	WITHOUT_CLASSIFICATION	5.997660777090903E-6	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999957678155095	WITHOUT_CLASSIFICATION	4.232184490477173E-6	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999957417135412	WITHOUT_CLASSIFICATION	4.258286458768075E-6	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999955525250874	WITHOUT_CLASSIFICATION	4.447474912627168E-6	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999956011461855	WITHOUT_CLASSIFICATION	4.398853814476627E-6	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.999995015060808	WITHOUT_CLASSIFICATION	4.984939191972654E-6	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999954227138913	WITHOUT_CLASSIFICATION	4.577286108734225E-6	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999953404177442	WITHOUT_CLASSIFICATION	4.659582255780889E-6	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999952470473644	WITHOUT_CLASSIFICATION	4.752952635591221E-6	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999951878197652	WITHOUT_CLASSIFICATION	4.812180234895892E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999976602914534	WITHOUT_CLASSIFICATION	2.3397085465798314E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999974100721998	WITHOUT_CLASSIFICATION	2.5899278001932574E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999950405061868	WITHOUT_CLASSIFICATION	4.959493813196938E-6	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999972880538323	WITHOUT_CLASSIFICATION	2.7119461676472345E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999953201553996	WITHOUT_CLASSIFICATION	4.6798446003537375E-6	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999881681966403	WITHOUT_CLASSIFICATION	1.1831803359862512E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.999998004264319	WITHOUT_CLASSIFICATION	1.9957356809722838E-6	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999870852724222	WITHOUT_CLASSIFICATION	1.2914727577770834E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999951465920881	WITHOUT_CLASSIFICATION	4.8534079118806496E-6	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999951247523345	WITHOUT_CLASSIFICATION	4.87524766551404E-6	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999954683004002	WITHOUT_CLASSIFICATION	4.531699599831101E-6	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.999995070542675	WITHOUT_CLASSIFICATION	4.929457325017051E-6	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999950130761245	WITHOUT_CLASSIFICATION	4.986923875548505E-6	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999950467066525	WITHOUT_CLASSIFICATION	4.953293347449831E-6	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999949143163739	WITHOUT_CLASSIFICATION	5.085683626111773E-6	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999945445353383	WITHOUT_CLASSIFICATION	5.45546466167851E-6	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999939351872604	WITHOUT_CLASSIFICATION	6.064812739608193E-6	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999950670959987	WITHOUT_CLASSIFICATION	4.932904001177419E-6	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999942365109602	WITHOUT_CLASSIFICATION	5.763489039845385E-6	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999948413744544	WITHOUT_CLASSIFICATION	5.158625545562005E-6	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999944602575879	WITHOUT_CLASSIFICATION	5.539742412177076E-6	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999946671427908	WITHOUT_CLASSIFICATION	5.332857209074713E-6	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999945642887869	WITHOUT_CLASSIFICATION	5.4357112131308795E-6	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999942439095931	WITHOUT_CLASSIFICATION	5.756090406839312E-6	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999946112314657	WITHOUT_CLASSIFICATION	5.388768534295567E-6	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999945143641433	WITHOUT_CLASSIFICATION	5.4856358565804404E-6	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999950177589155	WITHOUT_CLASSIFICATION	4.982241084565345E-6	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999939118859643	WITHOUT_CLASSIFICATION	6.0881140357610536E-6	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999939472703189	WITHOUT_CLASSIFICATION	6.052729681126648E-6	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999938078424405	WITHOUT_CLASSIFICATION	6.192157559575265E-6	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999949306533339	WITHOUT_CLASSIFICATION	5.0693466660553955E-6	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999984719796005	WITHOUT_CLASSIFICATION	1.528020399496358E-6	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999987752058906	WITHOUT_CLASSIFICATION	1.2247941093883058E-6	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999994322264762	WITHOUT_CLASSIFICATION	5.677735237225286E-7	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999903982137625	WITHOUT_CLASSIFICATION	9.601786237657962E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999135995368	WITHOUT_CLASSIFICATION	8.640046317524031E-8	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.999994910450448	WITHOUT_CLASSIFICATION	5.0895495519979226E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999985513976741	WITHOUT_CLASSIFICATION	1.4486023259094343E-6	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999985950992009	WITHOUT_CLASSIFICATION	1.4049007991394751E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999721974078	WITHOUT_CLASSIFICATION	2.7802592199769823E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999721974078	WITHOUT_CLASSIFICATION	2.7802592199769823E-7	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999970032606444	WITHOUT_CLASSIFICATION	2.9967393555089823E-6	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999940534628866	WITHOUT_CLASSIFICATION	5.946537113425164E-6	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999992470126476	WITHOUT_CLASSIFICATION	7.529873523782195E-7	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999957327567729	WITHOUT_CLASSIFICATION	4.267243227116887E-6	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999999781273446	WITHOUT_CLASSIFICATION	2.1872655291602728E-8	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999953957994624	WITHOUT_CLASSIFICATION	4.60420053760703E-6	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999998199730071	WITHOUT_CLASSIFICATION	1.8002699276618548E-7	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999987224463437	WITHOUT_CLASSIFICATION	1.2775536563794935E-6	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.999995125698496	WITHOUT_CLASSIFICATION	4.874301504051624E-6	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999992763020914	WITHOUT_CLASSIFICATION	7.236979086821171E-7	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999996405776153	WITHOUT_CLASSIFICATION	3.594223848253846E-7	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999998619049449	WITHOUT_CLASSIFICATION	1.3809505493193832E-7	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999992185412314	WITHOUT_CLASSIFICATION	7.814587685186886E-7	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.999998802712981	WITHOUT_CLASSIFICATION	1.197287018928184E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999986408752938	WITHOUT_CLASSIFICATION	1.3591247061321324E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999986408752938	WITHOUT_CLASSIFICATION	1.3591247061321324E-6	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999986873972735	WITHOUT_CLASSIFICATION	1.3126027264282978E-6	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999991085732829	WITHOUT_CLASSIFICATION	8.914267172570049E-7	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999912608144175	WITHOUT_CLASSIFICATION	8.739185582616417E-6	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999949486519258	WITHOUT_CLASSIFICATION	5.051348074050747E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999973504389484	WITHOUT_CLASSIFICATION	2.6495610515389513E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999967367702041	WITHOUT_CLASSIFICATION	3.2632297959283694E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999992834998412	WITHOUT_CLASSIFICATION	7.165001587485757E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999967367702041	WITHOUT_CLASSIFICATION	3.2632297959283694E-6	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999994590840419	WITHOUT_CLASSIFICATION	5.40915958214388E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999985047544693	WITHOUT_CLASSIFICATION	1.495245530682777E-6	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999986463553802	WITHOUT_CLASSIFICATION	1.3536446198351764E-6	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999986429705578	WITHOUT_CLASSIFICATION	1.3570294422107161E-6	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999940346037275	WITHOUT_CLASSIFICATION	5.9653962725134355E-6	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999953136183216	WITHOUT_CLASSIFICATION	4.686381678377636E-6	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999998946325487	WITHOUT_CLASSIFICATION	1.0536745125430337E-7	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999990866152593	WITHOUT_CLASSIFICATION	9.133847407528514E-7	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999989458082175	WITHOUT_CLASSIFICATION	1.054191782518051E-6	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999999594638492	WITHOUT_CLASSIFICATION	4.0536150689252826E-8	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999993112421943	WITHOUT_CLASSIFICATION	6.887578057863382E-7	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999725014672898	WITHOUT_CLASSIFICATION	2.7498532710190684E-5	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999747744375499	WITHOUT_CLASSIFICATION	2.5225562450059783E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999992451856756	WITHOUT_CLASSIFICATION	7.548143244400296E-7	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999978672316907	WITHOUT_CLASSIFICATION	2.1327683093876546E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999978672316907	WITHOUT_CLASSIFICATION	2.1327683093876546E-6	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999997701384702	WITHOUT_CLASSIFICATION	2.298615297492207E-7	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999996625083771	WITHOUT_CLASSIFICATION	3.374916229175229E-7	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999984392003473	WITHOUT_CLASSIFICATION	1.5607996526563277E-6	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999998548557189	WITHOUT_CLASSIFICATION	1.4514428117832453E-7	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999977015626366	WITHOUT_CLASSIFICATION	2.2984373635328434E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999967367702041	WITHOUT_CLASSIFICATION	3.2632297959283694E-6	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999994480245641	WITHOUT_CLASSIFICATION	5.519754359139074E-7	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999311387853	WITHOUT_CLASSIFICATION	6.886121470542992E-8	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.999999077125191	WITHOUT_CLASSIFICATION	9.228748088839255E-7	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999995992786342	WITHOUT_CLASSIFICATION	4.0072136570332685E-7	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999491485136	WITHOUT_CLASSIFICATION	5.0851486417887396E-8	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999997939732586	WITHOUT_CLASSIFICATION	2.0602674152421385E-7	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999990498785626	WITHOUT_CLASSIFICATION	9.501214372830208E-7	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999997102964614	WITHOUT_CLASSIFICATION	2.8970353864002E-7	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999999904070102	WITHOUT_CLASSIFICATION	9.59298991241332E-9	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999986352075392	WITHOUT_CLASSIFICATION	1.3647924607746534E-6	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999981409829993	WITHOUT_CLASSIFICATION	1.8590170007735748E-6	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999997127736845	WITHOUT_CLASSIFICATION	2.872263154515672E-7	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9995783563095445	WITHOUT_CLASSIFICATION	4.2164369045555013E-4	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999863637002206	WITHOUT_CLASSIFICATION	1.3636299779239699E-5	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999862302793808	WITHOUT_CLASSIFICATION	1.3769720619078349E-5	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.999962026151537	WITHOUT_CLASSIFICATION	3.797384846311447E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.999996555816556	WITHOUT_CLASSIFICATION	3.4441834439543768E-6	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999973227367029	WITHOUT_CLASSIFICATION	2.677263297009765E-6	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999938191432378	WITHOUT_CLASSIFICATION	6.180856762228081E-6	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999933216757004	WITHOUT_CLASSIFICATION	6.678324299503241E-6	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999983240286902	WITHOUT_CLASSIFICATION	1.675971309921526E-6	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999932489176879	WITHOUT_CLASSIFICATION	6.7510823121455565E-6	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999999212216323	WITHOUT_CLASSIFICATION	7.8778367702175E-8	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999991507906842	WITHOUT_CLASSIFICATION	8.492093157843368E-7	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999985961078748	WITHOUT_CLASSIFICATION	1.403892125217498E-6	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999970191495422	WITHOUT_CLASSIFICATION	2.9808504577733884E-6	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999997264883095	WITHOUT_CLASSIFICATION	2.735116905841513E-7	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999967848711236	WITHOUT_CLASSIFICATION	3.215128876296742E-6	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999979094313041	WITHOUT_CLASSIFICATION	2.0905686959358943E-6	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.999998702066305	WITHOUT_CLASSIFICATION	1.2979336948555538E-6	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999947766783264	WITHOUT_CLASSIFICATION	5.223321673601167E-6	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999957900076754	WITHOUT_CLASSIFICATION	4.209992324545422E-6	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999993575009298	WITHOUT_CLASSIFICATION	6.424990702701857E-7	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999996876911144	WITHOUT_CLASSIFICATION	3.123088856978712E-7	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999999184388049	WITHOUT_CLASSIFICATION	8.156119518170562E-8	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.999998490129418	WITHOUT_CLASSIFICATION	1.5098705820230373E-6	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999989522544641	WITHOUT_CLASSIFICATION	1.0477455358673444E-6	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999979039942428	WITHOUT_CLASSIFICATION	2.096005757171301E-6	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999966693428258	WITHOUT_CLASSIFICATION	3.330657174161604E-6	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999993967389491	WITHOUT_CLASSIFICATION	6.032610509010958E-7	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999870852724222	WITHOUT_CLASSIFICATION	1.2914727577770834E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999997336978333	WITHOUT_CLASSIFICATION	2.6630216667476663E-7	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999980509505528	WITHOUT_CLASSIFICATION	1.949049447213366E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999999454012416	WITHOUT_CLASSIFICATION	5.4598758480285456E-8	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999994641202273	WITHOUT_CLASSIFICATION	5.358797726422344E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999985047544693	WITHOUT_CLASSIFICATION	1.495245530682777E-6	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999996773691698	WITHOUT_CLASSIFICATION	3.2263083017666E-7	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999996957428543	WITHOUT_CLASSIFICATION	3.0425714578689336E-7	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999999726959132	WITHOUT_CLASSIFICATION	2.7304086864496072E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999635573232	WITHOUT_CLASSIFICATION	3.6442676789079693E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999635573232	WITHOUT_CLASSIFICATION	3.6442676789079693E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999996128541796	WITHOUT_CLASSIFICATION	3.87145820433638E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999996128541796	WITHOUT_CLASSIFICATION	3.87145820433638E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999996128541796	WITHOUT_CLASSIFICATION	3.87145820433638E-7	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999959861681433	WITHOUT_CLASSIFICATION	4.013831856575111E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999959861681433	WITHOUT_CLASSIFICATION	4.013831856575111E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999901304749064	WITHOUT_CLASSIFICATION	9.869525093662638E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999901304749064	WITHOUT_CLASSIFICATION	9.869525093662638E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999885135044618	WITHOUT_CLASSIFICATION	1.1486495538128221E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999821410837976	WITHOUT_CLASSIFICATION	1.7858916202532977E-5	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999879242755904	WITHOUT_CLASSIFICATION	1.2075724409693236E-5	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999879242755904	WITHOUT_CLASSIFICATION	1.2075724409693236E-5	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999992379495247	WITHOUT_CLASSIFICATION	7.620504752176336E-7	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999993815663528	WITHOUT_CLASSIFICATION	6.184336472562122E-7	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999935540275121	WITHOUT_CLASSIFICATION	6.445972487822404E-6	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999985847057812	WITHOUT_CLASSIFICATION	1.4152942189008206E-6	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999996550552849	WITHOUT_CLASSIFICATION	3.449447151645093E-7	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.999999930408904	WITHOUT_CLASSIFICATION	6.959109601085103E-8	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999986753550854	WITHOUT_CLASSIFICATION	1.3246449146386966E-6	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.999998595597698	WITHOUT_CLASSIFICATION	1.4044023020790457E-6	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999965026593006	WITHOUT_CLASSIFICATION	3.4973406993189133E-6	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999981599385666	WITHOUT_CLASSIFICATION	1.8400614335252777E-6	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999998445888453	WITHOUT_CLASSIFICATION	1.5541115481432135E-7	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.99999622325973	WITHOUT_CLASSIFICATION	3.7767402700081696E-6	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999836271771892	WITHOUT_CLASSIFICATION	1.6372822810752507E-5	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999938149245786	WITHOUT_CLASSIFICATION	6.185075421369662E-6	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999993615339042	WITHOUT_CLASSIFICATION	6.384660957780728E-7	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999919938472163	WITHOUT_CLASSIFICATION	8.006152783835433E-6	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999985890921872	WITHOUT_CLASSIFICATION	1.4109078128807454E-6	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999983054651906	WITHOUT_CLASSIFICATION	1.6945348093301645E-6	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.999998347748905	WITHOUT_CLASSIFICATION	1.6522510950046644E-6	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999938146115066	WITHOUT_CLASSIFICATION	6.1853884933579525E-6	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999993471095501	WITHOUT_CLASSIFICATION	6.528904499663339E-7	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999992798649096	WITHOUT_CLASSIFICATION	7.201350905126573E-7	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999976262228714	WITHOUT_CLASSIFICATION	2.373777128630119E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999120743103	WITHOUT_CLASSIFICATION	8.792568977784698E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999998555264863	WITHOUT_CLASSIFICATION	1.4447351372175421E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999997574462998	WITHOUT_CLASSIFICATION	2.4255370017134416E-7	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998582746084	WITHOUT_CLASSIFICATION	1.417253917391371E-7	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998708696837	WITHOUT_CLASSIFICATION	1.2913031625429832E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999159190736	WITHOUT_CLASSIFICATION	8.408092642297524E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998618439395	WITHOUT_CLASSIFICATION	1.381560603964125E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999997680525451	WITHOUT_CLASSIFICATION	2.319474548013172E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999273734435	WITHOUT_CLASSIFICATION	7.262655646375466E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998806649805	WITHOUT_CLASSIFICATION	1.1933501951001214E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998272576612	WITHOUT_CLASSIFICATION	1.7274233886250573E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998806649805	WITHOUT_CLASSIFICATION	1.1933501951001214E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998806649805	WITHOUT_CLASSIFICATION	1.1933501951001214E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998806649805	WITHOUT_CLASSIFICATION	1.1933501951001214E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998806649805	WITHOUT_CLASSIFICATION	1.1933501951001214E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998806649805	WITHOUT_CLASSIFICATION	1.1933501951001214E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998806649805	WITHOUT_CLASSIFICATION	1.1933501951001214E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998272576612	WITHOUT_CLASSIFICATION	1.7274233886250573E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998272576612	WITHOUT_CLASSIFICATION	1.7274233886250573E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998272576612	WITHOUT_CLASSIFICATION	1.7274233886250573E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998272576612	WITHOUT_CLASSIFICATION	1.7274233886250573E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998272576612	WITHOUT_CLASSIFICATION	1.7274233886250573E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998272576612	WITHOUT_CLASSIFICATION	1.7274233886250573E-7	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999998689411299	WITHOUT_CLASSIFICATION	1.310588701079485E-7	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999991450097383	WITHOUT_CLASSIFICATION	8.549902616353025E-7	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999978162929425	WITHOUT_CLASSIFICATION	2.1837070575417708E-6	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999997653630182	WITHOUT_CLASSIFICATION	2.346369818039664E-7	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.999999653988502	WITHOUT_CLASSIFICATION	3.4601149805961004E-7	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999997463133548	WITHOUT_CLASSIFICATION	2.536866451884672E-7	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.999983620481184	WITHOUT_CLASSIFICATION	1.637951881600774E-5	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999995494550658	WITHOUT_CLASSIFICATION	4.5054493421409823E-7	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999998288175834	WITHOUT_CLASSIFICATION	1.7118241649103795E-7	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999913297356261	WITHOUT_CLASSIFICATION	8.670264373872754E-6	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999919791706186	WITHOUT_CLASSIFICATION	8.0208293813749E-6	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999996433735272	WITHOUT_CLASSIFICATION	3.566264727934855E-7	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999895584191081	WITHOUT_CLASSIFICATION	1.0441580891832998E-5	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999585680761	WITHOUT_CLASSIFICATION	4.14319239014181E-8	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999993142638651	WITHOUT_CLASSIFICATION	6.857361348381691E-7	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999998940931304	WITHOUT_CLASSIFICATION	1.0590686964979678E-7	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999983130883047	WITHOUT_CLASSIFICATION	1.6869116954056122E-6	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.999993164087107	WITHOUT_CLASSIFICATION	6.8359128928814155E-6	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999995816949827	WITHOUT_CLASSIFICATION	4.1830501727760247E-7	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999997661444455	WITHOUT_CLASSIFICATION	2.3385555450365288E-7	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999982257079454	WITHOUT_CLASSIFICATION	1.7742920546342226E-6	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999975876015831	WITHOUT_CLASSIFICATION	2.412398416942747E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999992834998412	WITHOUT_CLASSIFICATION	7.165001587485757E-7	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999999742741534	WITHOUT_CLASSIFICATION	2.572584651978503E-8	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999982606976737	WITHOUT_CLASSIFICATION	1.7393023263209124E-6	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999489240394	WITHOUT_CLASSIFICATION	5.107596058339349E-8	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999389902602	WITHOUT_CLASSIFICATION	6.100973985304866E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999997519062925	WITHOUT_CLASSIFICATION	2.480937074975392E-6	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999953433873687	WITHOUT_CLASSIFICATION	4.6566126313076316E-6	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.999999611438504	WITHOUT_CLASSIFICATION	3.885614960858053E-7	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999982647666947	WITHOUT_CLASSIFICATION	1.7352333052024895E-6	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999993391359167	WITHOUT_CLASSIFICATION	6.608640834270441E-7	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999993010204428	WITHOUT_CLASSIFICATION	6.989795572612398E-7	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999986231272818	WITHOUT_CLASSIFICATION	1.3768727181151489E-6	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999942605126587	WITHOUT_CLASSIFICATION	5.739487341389714E-6	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999961124253475	WITHOUT_CLASSIFICATION	3.887574652536037E-6	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999986741472855	WITHOUT_CLASSIFICATION	1.325852714522932E-6	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999995730939005	WITHOUT_CLASSIFICATION	4.2690609942635857E-7	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999998263648137	WITHOUT_CLASSIFICATION	1.736351863014049E-7	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999998931603339	WITHOUT_CLASSIFICATION	1.0683966605313651E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999977995856673	WITHOUT_CLASSIFICATION	2.200414332732691E-6	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999991274622128	WITHOUT_CLASSIFICATION	8.725377872609888E-7	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999996236158007	WITHOUT_CLASSIFICATION	3.763841993379838E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999999387280358	WITHOUT_CLASSIFICATION	6.127196419432095E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999999387280358	WITHOUT_CLASSIFICATION	6.127196419432095E-7	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999970691780252	WITHOUT_CLASSIFICATION	2.930821974780232E-6	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999970691780252	WITHOUT_CLASSIFICATION	2.930821974780232E-6	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999996204717982	WITHOUT_CLASSIFICATION	3.7952820168159005E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999996204717982	WITHOUT_CLASSIFICATION	3.7952820168159005E-7	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999500467692	WITHOUT_CLASSIFICATION	4.9953230738371714E-8	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999996215289573	WITHOUT_CLASSIFICATION	3.7847104274266874E-7	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999982220716023	WITHOUT_CLASSIFICATION	1.7779283977608045E-6	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.999999960804168	WITHOUT_CLASSIFICATION	3.9195832080115594E-8	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999995332222332	WITHOUT_CLASSIFICATION	4.6677776672465844E-7	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999993961824262	WITHOUT_CLASSIFICATION	6.03817573795314E-7	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.999998533065659	WITHOUT_CLASSIFICATION	1.4669343409485566E-6	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.999999977296263	WITHOUT_CLASSIFICATION	2.2703736997703867E-8	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999968153887135	WITHOUT_CLASSIFICATION	3.18461128642784E-6	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999588375298	WITHOUT_CLASSIFICATION	4.1162470330707285E-8	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.999999981390274	WITHOUT_CLASSIFICATION	1.860972595663512E-8	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999994898700361	WITHOUT_CLASSIFICATION	5.101299640057556E-7	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999176800312	WITHOUT_CLASSIFICATION	8.231996888064479E-8	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999994929716345	WITHOUT_CLASSIFICATION	5.070283655531971E-7	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999960295957824	WITHOUT_CLASSIFICATION	3.970404217596638E-6	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999926839058544	WITHOUT_CLASSIFICATION	7.316094145666358E-6	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999855666217	WITHOUT_CLASSIFICATION	1.4433378231047103E-8	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999990927797469	WITHOUT_CLASSIFICATION	9.072202531867889E-7	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999989441493636	WITHOUT_CLASSIFICATION	1.0558506363994269E-6	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999870102013795	WITHOUT_CLASSIFICATION	1.2989798620518577E-5	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999882849928109	WITHOUT_CLASSIFICATION	1.171500718906109E-5	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999934557568001	WITHOUT_CLASSIFICATION	6.544243199805883E-6	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999932322933904	WITHOUT_CLASSIFICATION	6.7677066095306155E-6	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.999999595067359	WITHOUT_CLASSIFICATION	4.049326409951588E-7	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999991400207098	WITHOUT_CLASSIFICATION	8.599792902880712E-7	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999998798392318	WITHOUT_CLASSIFICATION	1.201607682021026E-7	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999909470024062	WITHOUT_CLASSIFICATION	9.05299759376101E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999995207433773	WITHOUT_CLASSIFICATION	4.792566228017549E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999995207433773	WITHOUT_CLASSIFICATION	4.792566228017549E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999995207433773	WITHOUT_CLASSIFICATION	4.792566228017549E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999993912657966	WITHOUT_CLASSIFICATION	6.087342034077264E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999993912657966	WITHOUT_CLASSIFICATION	6.087342034077264E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999863637002206	WITHOUT_CLASSIFICATION	1.3636299779239699E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999863637002206	WITHOUT_CLASSIFICATION	1.3636299779239699E-5	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999997904651582	WITHOUT_CLASSIFICATION	2.0953484192157662E-7	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999878907087093	WITHOUT_CLASSIFICATION	1.2109291290715683E-5	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999983188858536	WITHOUT_CLASSIFICATION	1.681114146479345E-6	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.999999153401529	WITHOUT_CLASSIFICATION	8.46598471058773E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999995207433773	WITHOUT_CLASSIFICATION	4.792566228017549E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999995207433773	WITHOUT_CLASSIFICATION	4.792566228017549E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999995207433773	WITHOUT_CLASSIFICATION	4.792566228017549E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999993912657966	WITHOUT_CLASSIFICATION	6.087342034077264E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999993912657966	WITHOUT_CLASSIFICATION	6.087342034077264E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999993912657966	WITHOUT_CLASSIFICATION	6.087342034077264E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999863637002206	WITHOUT_CLASSIFICATION	1.3636299779239699E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999863637002206	WITHOUT_CLASSIFICATION	1.3636299779239699E-5	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999994063191882	WITHOUT_CLASSIFICATION	5.936808119176914E-7	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999098333157	WITHOUT_CLASSIFICATION	9.016668445604452E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999858096603	WITHOUT_CLASSIFICATION	1.4190339681465658E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999858096603	WITHOUT_CLASSIFICATION	1.4190339681465658E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999858096603	WITHOUT_CLASSIFICATION	1.4190339681465658E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999858096603	WITHOUT_CLASSIFICATION	1.4190339681465658E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999858096603	WITHOUT_CLASSIFICATION	1.4190339681465658E-8	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999975990945171	WITHOUT_CLASSIFICATION	2.4009054829291176E-6	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999948853359425	WITHOUT_CLASSIFICATION	5.114664057550313E-6	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999981656700386	WITHOUT_CLASSIFICATION	1.8343299613814576E-6	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999977050323928	WITHOUT_CLASSIFICATION	2.2949676071421456E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.999998914931018	WITHOUT_CLASSIFICATION	1.0850689819312422E-6	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999985880152461	WITHOUT_CLASSIFICATION	1.4119847538432245E-6	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999904905695013	WITHOUT_CLASSIFICATION	9.509430498817656E-6	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999981875941655	WITHOUT_CLASSIFICATION	1.8124058344701283E-6	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999975458506979	WITHOUT_CLASSIFICATION	2.4541493022261564E-6	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999995573257942	WITHOUT_CLASSIFICATION	4.4267420586051526E-7	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999993499455471	WITHOUT_CLASSIFICATION	6.50054452892158E-7	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999968683172383	WITHOUT_CLASSIFICATION	3.1316827616816464E-6	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999995446910703	WITHOUT_CLASSIFICATION	4.553089296422957E-7	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999994438200789	WITHOUT_CLASSIFICATION	5.561799211492819E-7	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999995981045109	WITHOUT_CLASSIFICATION	4.01895489152872E-7	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997885143874935	WITHOUT_CLASSIFICATION	2.1148561250660734E-4	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997885143874935	WITHOUT_CLASSIFICATION	2.1148561250660734E-4	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9997885143874935	WITHOUT_CLASSIFICATION	2.1148561250660734E-4	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999986476208829	WITHOUT_CLASSIFICATION	1.3523791171523534E-6	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999986475505469	WITHOUT_CLASSIFICATION	1.3524494530411445E-6	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999959346627718	WITHOUT_CLASSIFICATION	4.065337228183359E-6	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999690986316	WITHOUT_CLASSIFICATION	3.090136837604932E-8	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.999999204060961	WITHOUT_CLASSIFICATION	7.959390390433253E-7	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999993754712979	WITHOUT_CLASSIFICATION	6.24528702050492E-7	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999990287595851	WITHOUT_CLASSIFICATION	9.71240414894029E-7	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999996753402786	WITHOUT_CLASSIFICATION	3.246597213806406E-7	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999996597353529	WITHOUT_CLASSIFICATION	3.402646471829363E-7	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999992995813047	WITHOUT_CLASSIFICATION	7.004186952411458E-7	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999990405653321	WITHOUT_CLASSIFICATION	9.594346679415967E-7	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999996383619697	WITHOUT_CLASSIFICATION	3.6163803036028594E-7	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999983984469639	WITHOUT_CLASSIFICATION	1.6015530360971265E-6	TEST
// signed char	WITHOUT_CLASSIFICATION	0.999996088202633	WITHOUT_CLASSIFICATION	3.9117973670614944E-6	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999945918711243	WITHOUT_CLASSIFICATION	5.4081288756526505E-6	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.999997130930224	WITHOUT_CLASSIFICATION	2.8690697760869397E-6	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999967669445757	WITHOUT_CLASSIFICATION	3.2330554242237773E-6	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999962722919521	WITHOUT_CLASSIFICATION	3.727708047884937E-6	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999977731330453	WITHOUT_CLASSIFICATION	2.226866954729569E-6	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.999998913471146	WITHOUT_CLASSIFICATION	1.0865288539956411E-6	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999995446043665	WITHOUT_CLASSIFICATION	4.5539563356528565E-7	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999976321547044	WITHOUT_CLASSIFICATION	2.3678452956473416E-6	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.999997005897144	WITHOUT_CLASSIFICATION	2.9941028560740756E-6	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999986495464663	WITHOUT_CLASSIFICATION	1.3504535336384315E-6	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999935515458978	WITHOUT_CLASSIFICATION	6.448454102257109E-6	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.999992106247915	WITHOUT_CLASSIFICATION	7.89375208504607E-6	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999952086138427	WITHOUT_CLASSIFICATION	4.791386157269762E-6	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999930101425709	WITHOUT_CLASSIFICATION	6.989857429001006E-6	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999955011364107	WITHOUT_CLASSIFICATION	4.498863589310892E-6	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9999723599646126	WITHOUT_CLASSIFICATION	2.7640035387305502E-5	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9999674677649205	WITHOUT_CLASSIFICATION	3.2532235079412404E-5	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9999662716363752	WITHOUT_CLASSIFICATION	3.372836362475017E-5	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9999645547355612	WITHOUT_CLASSIFICATION	3.5445264438713735E-5	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9999642214968356	WITHOUT_CLASSIFICATION	3.577850316443179E-5	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9999641119684095	WITHOUT_CLASSIFICATION	3.5888031590436395E-5	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.9999645453857277	WITHOUT_CLASSIFICATION	3.545461427237282E-5	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999988389758308	WITHOUT_CLASSIFICATION	1.161024169293052E-6	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999990139557638	WITHOUT_CLASSIFICATION	9.860442360988868E-7	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999936231953666	WITHOUT_CLASSIFICATION	6.376804633484102E-6	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999563854507544	WITHOUT_CLASSIFICATION	4.3614549245696605E-5	TEST
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.999999230931117	WITHOUT_CLASSIFICATION	7.690688830158679E-7	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999999233397454	WITHOUT_CLASSIFICATION	7.666025459740869E-8	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999995022045036	WITHOUT_CLASSIFICATION	4.977954963979559E-7	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999993352062395	WITHOUT_CLASSIFICATION	6.647937605060706E-7	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999746492342195	WITHOUT_CLASSIFICATION	2.5350765780476363E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999985127021146	WITHOUT_CLASSIFICATION	1.4872978853852748E-6	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999808868090627	WITHOUT_CLASSIFICATION	1.9113190937290255E-5	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999808868090627	WITHOUT_CLASSIFICATION	1.9113190937290255E-5	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999909176574202	WITHOUT_CLASSIFICATION	9.08234257987941E-6	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999995019802685	WITHOUT_CLASSIFICATION	4.98019731563681E-7	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999984588700386	WITHOUT_CLASSIFICATION	1.5411299614182629E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9995498871608004	WITHOUT_CLASSIFICATION	4.5011283919960116E-4	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999993865462286	WITHOUT_CLASSIFICATION	6.134537713373212E-7	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999993655967075	WITHOUT_CLASSIFICATION	6.344032924034341E-7	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999993239373797	WITHOUT_CLASSIFICATION	6.760626203278539E-7	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997762921068	WITHOUT_CLASSIFICATION	2.2370789327194452E-7	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.999988772002204	WITHOUT_CLASSIFICATION	1.1227997795997E-5	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999931811065137	WITHOUT_CLASSIFICATION	6.818893486246994E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.99999899239048	WITHOUT_CLASSIFICATION	1.0076095200132975E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.99999899239048	WITHOUT_CLASSIFICATION	1.0076095200132975E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.99999899239048	WITHOUT_CLASSIFICATION	1.0076095200132975E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.99999899239048	WITHOUT_CLASSIFICATION	1.0076095200132975E-6	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999799391225626	WITHOUT_CLASSIFICATION	2.0060877437434062E-5	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999797355167227	WITHOUT_CLASSIFICATION	2.0264483277306145E-5	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9998848678735279	WITHOUT_CLASSIFICATION	1.1513212647203236E-4	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999968628575233	WITHOUT_CLASSIFICATION	3.1371424767733334E-6	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999993862432038	WITHOUT_CLASSIFICATION	6.137567961908981E-7	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999990427659938	WITHOUT_CLASSIFICATION	9.572340061921185E-7	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999994583867643	WITHOUT_CLASSIFICATION	5.41613235681401E-7	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999997174269626	WITHOUT_CLASSIFICATION	2.825730374264996E-7	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999997174269626	WITHOUT_CLASSIFICATION	2.825730374264996E-7	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999998988265854	WITHOUT_CLASSIFICATION	1.0117341462881163E-7	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999986794377769	WITHOUT_CLASSIFICATION	1.3205622231417613E-6	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999999942798941	WITHOUT_CLASSIFICATION	5.720105898501407E-8	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999583597492	WITHOUT_CLASSIFICATION	4.164025079938337E-7	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999583597492	WITHOUT_CLASSIFICATION	4.164025079938337E-7	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.999999502711116	WITHOUT_CLASSIFICATION	4.972888839380514E-7	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999684541917604	WITHOUT_CLASSIFICATION	3.154580823965863E-5	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999684541917604	WITHOUT_CLASSIFICATION	3.154580823965863E-5	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999995274754145	WITHOUT_CLASSIFICATION	4.7252458534029856E-7	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999982779671416	WITHOUT_CLASSIFICATION	1.7220328584596352E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999565102184	WITHOUT_CLASSIFICATION	4.348978148111961E-8	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.99999995018412	WITHOUT_CLASSIFICATION	4.981588005565771E-8	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999991711422316	WITHOUT_CLASSIFICATION	8.288577684233262E-7	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999185296878	WITHOUT_CLASSIFICATION	8.14703121935916E-8	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999994536402921	WITHOUT_CLASSIFICATION	5.463597079314482E-7	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9999728526076093	WITHOUT_CLASSIFICATION	2.7147392390755287E-5	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999989425825552	WITHOUT_CLASSIFICATION	1.0574174448516959E-6	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999988687446114	WITHOUT_CLASSIFICATION	1.1312553886580237E-6	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999971672049581	WITHOUT_CLASSIFICATION	2.832795041935079E-6	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999973994895557	WITHOUT_CLASSIFICATION	2.6005104443516835E-6	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9993947148879964	WITHOUT_CLASSIFICATION	6.052851120036424E-4	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9992687377642985	WITHOUT_CLASSIFICATION	7.312622357014653E-4	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999985306756255	WITHOUT_CLASSIFICATION	1.4693243745255975E-6	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999998716017618	WITHOUT_CLASSIFICATION	1.2839823813056092E-7	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999895589954441	WITHOUT_CLASSIFICATION	1.0441004555971284E-5	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999989966045706	WITHOUT_CLASSIFICATION	1.003395429437027E-6	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999981879329424	WITHOUT_CLASSIFICATION	1.8120670577424587E-6	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.999999403921181	WITHOUT_CLASSIFICATION	5.960788190042503E-7	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999981559967561	WITHOUT_CLASSIFICATION	1.8440032438379151E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999997141444008	WITHOUT_CLASSIFICATION	2.8585559916116265E-7	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999998768804	WITHOUT_CLASSIFICATION	1.2311959998818038E-7	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999998542097509	WITHOUT_CLASSIFICATION	1.4579024909883184E-7	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999998807254211	WITHOUT_CLASSIFICATION	1.1927457888613336E-7	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999997488076184	WITHOUT_CLASSIFICATION	2.511923815567297E-7	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999965420380749	WITHOUT_CLASSIFICATION	3.4579619251293115E-6	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999976456568077	WITHOUT_CLASSIFICATION	2.3543431922521905E-6	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999955757142	WITHOUT_CLASSIFICATION	4.424285817588564E-9	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999994894190448	WITHOUT_CLASSIFICATION	5.105809551380549E-7	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999836840285599	WITHOUT_CLASSIFICATION	1.6315971440137095E-5	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999758950811285	WITHOUT_CLASSIFICATION	2.4104918871544593E-5	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9999979102187094	WITHOUT_CLASSIFICATION	2.0897812905677115E-6	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999981560181512	WITHOUT_CLASSIFICATION	1.8439818486949377E-6	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999999396964635	WITHOUT_CLASSIFICATION	6.030353641993648E-8	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999961618416466	WITHOUT_CLASSIFICATION	3.838158353369081E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999903656948743	WITHOUT_CLASSIFICATION	9.634305125626205E-6	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999990403266555	WITHOUT_CLASSIFICATION	9.59673344524397E-7	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999939220019223	WITHOUT_CLASSIFICATION	6.077998077817367E-6	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999961618416466	WITHOUT_CLASSIFICATION	3.838158353369081E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999903656948743	WITHOUT_CLASSIFICATION	9.634305125626205E-6	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999967029692223	WITHOUT_CLASSIFICATION	3.2970307776544313E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999983443555128	WITHOUT_CLASSIFICATION	1.6556444870820817E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999983443555128	WITHOUT_CLASSIFICATION	1.6556444870820817E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999649478374475	WITHOUT_CLASSIFICATION	3.505216255254495E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999999971577375	WITHOUT_CLASSIFICATION	2.8422625026302208E-8	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999844684114431	WITHOUT_CLASSIFICATION	1.553158855696622E-5	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999884312173669	WITHOUT_CLASSIFICATION	1.1568782633042976E-5	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999746259492741	WITHOUT_CLASSIFICATION	2.5374050725883405E-5	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999995506174695	WITHOUT_CLASSIFICATION	4.493825304868372E-7	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999542446949078	WITHOUT_CLASSIFICATION	4.575530509218691E-5	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999979092927427	WITHOUT_CLASSIFICATION	2.0907072573466018E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999993189743561	WITHOUT_CLASSIFICATION	6.810256439141457E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999804647979557	WITHOUT_CLASSIFICATION	1.9535202044357114E-5	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999997204288186	WITHOUT_CLASSIFICATION	2.7957118142369335E-7	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999888119999156	WITHOUT_CLASSIFICATION	1.118800008431306E-5	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999994718780529	WITHOUT_CLASSIFICATION	5.281219470947187E-7	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999988918326567	WITHOUT_CLASSIFICATION	1.1081673433834339E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999988918326567	WITHOUT_CLASSIFICATION	1.1081673433834339E-6	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999927131638504	WITHOUT_CLASSIFICATION	7.2868361495439705E-6	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999927131638504	WITHOUT_CLASSIFICATION	7.2868361495439705E-6	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.999986284939493	WITHOUT_CLASSIFICATION	1.3715060507032966E-5	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999984879851802	WITHOUT_CLASSIFICATION	1.5120148197643153E-6	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999948408091189	WITHOUT_CLASSIFICATION	5.159190881056698E-6	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999995285978516	WITHOUT_CLASSIFICATION	4.714021484106672E-7	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999759149764338	WITHOUT_CLASSIFICATION	2.4085023566197E-5	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999916210021822	WITHOUT_CLASSIFICATION	8.378997817764514E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999844684114431	WITHOUT_CLASSIFICATION	1.553158855696622E-5	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999884312173669	WITHOUT_CLASSIFICATION	1.1568782633042976E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999993189743561	WITHOUT_CLASSIFICATION	6.810256439141457E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999804647979557	WITHOUT_CLASSIFICATION	1.9535202044357114E-5	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999988606385797	WITHOUT_CLASSIFICATION	1.13936142033196E-6	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999946582485322	WITHOUT_CLASSIFICATION	5.341751467813888E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999791615842065	WITHOUT_CLASSIFICATION	2.083841579347394E-5	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999977939150239	WITHOUT_CLASSIFICATION	2.2060849760479472E-6	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999992342459358	WITHOUT_CLASSIFICATION	7.657540642496568E-7	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.999997548371336	WITHOUT_CLASSIFICATION	2.451628664087079E-6	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999980455705775	WITHOUT_CLASSIFICATION	1.9544294225287528E-6	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999707201220903	WITHOUT_CLASSIFICATION	2.9279877909785476E-5	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999987003896116	WITHOUT_CLASSIFICATION	1.2996103883740438E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999988078443848	WITHOUT_CLASSIFICATION	1.1921556151221615E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999961303065	WITHOUT_CLASSIFICATION	3.869693508152748E-9	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999343136320363	WITHOUT_CLASSIFICATION	6.568636796362931E-5	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999983297412146	WITHOUT_CLASSIFICATION	1.6702587854000768E-6	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999990610569954	WITHOUT_CLASSIFICATION	9.389430045051306E-7	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.999998815394379	WITHOUT_CLASSIFICATION	1.1846056210989527E-6	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999999279899424	WITHOUT_CLASSIFICATION	7.201005749125375E-8	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999973792758629	WITHOUT_CLASSIFICATION	2.62072413715112E-6	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999954271202428	WITHOUT_CLASSIFICATION	4.572879757172733E-6	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999966506819213	WITHOUT_CLASSIFICATION	3.349318078524505E-6	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999935954832117	WITHOUT_CLASSIFICATION	6.404516788322172E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999938287817239	WITHOUT_CLASSIFICATION	6.171218276002695E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999938287817239	WITHOUT_CLASSIFICATION	6.171218276002695E-6	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.999999063706639	WITHOUT_CLASSIFICATION	9.362933609182353E-7	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999959480097962	WITHOUT_CLASSIFICATION	4.051990203759616E-6	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999697307975	WITHOUT_CLASSIFICATION	3.0269202456033065E-8	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999909748016688	WITHOUT_CLASSIFICATION	9.025198331222507E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999909748016688	WITHOUT_CLASSIFICATION	9.025198331222507E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999791615842065	WITHOUT_CLASSIFICATION	2.083841579347394E-5	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999619845108254	WITHOUT_CLASSIFICATION	3.801548917460696E-5	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999859839526393	WITHOUT_CLASSIFICATION	1.4016047360609167E-5	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999946906291712	WITHOUT_CLASSIFICATION	5.3093708288440065E-6	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999933176087724	WITHOUT_CLASSIFICATION	6.682391227640433E-6	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999997951217007	WITHOUT_CLASSIFICATION	2.0487829930204213E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999333313651848	WITHOUT_CLASSIFICATION	6.666863481514418E-5	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999967213015925	WITHOUT_CLASSIFICATION	3.278698407491783E-6	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999966055960883	WITHOUT_CLASSIFICATION	3.3944039116869644E-6	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.999998514155706	WITHOUT_CLASSIFICATION	1.485844294055515E-6	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999988642779677	WITHOUT_CLASSIFICATION	1.1357220323326524E-6	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999865615288978	WITHOUT_CLASSIFICATION	1.343847110223211E-5	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999992650455802	WITHOUT_CLASSIFICATION	7.349544198409969E-7	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999968397531697	WITHOUT_CLASSIFICATION	3.1602468303063384E-6	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999972692752992	WITHOUT_CLASSIFICATION	2.7307247008014327E-6	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.999993109634765	WITHOUT_CLASSIFICATION	6.8903652349262085E-6	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999872147470081	WITHOUT_CLASSIFICATION	1.2785252991868878E-5	TEST
// states	WITHOUT_CLASSIFICATION	0.9999847612335531	WITHOUT_CLASSIFICATION	1.523876644681229E-5	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999999053250836	WITHOUT_CLASSIFICATION	9.46749163072086E-8	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999901377772	WITHOUT_CLASSIFICATION	9.862222834930318E-9	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999998830897759	WITHOUT_CLASSIFICATION	1.1691022412885335E-7	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999935730856415	WITHOUT_CLASSIFICATION	6.4269143584866366E-6	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999981838669162	WITHOUT_CLASSIFICATION	1.8161330838302125E-6	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999962296662162	WITHOUT_CLASSIFICATION	3.7703337839109555E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999993164682309	WITHOUT_CLASSIFICATION	6.835317691393821E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999996250453121	WITHOUT_CLASSIFICATION	3.7495468778474983E-7	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999998039426938	WITHOUT_CLASSIFICATION	1.9605730610192765E-7	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999986257904231	WITHOUT_CLASSIFICATION	1.3742095769432302E-6	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999855493642	WITHOUT_CLASSIFICATION	1.4450635894564204E-8	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999977725066606	WITHOUT_CLASSIFICATION	2.2274933394757318E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999987788034219	WITHOUT_CLASSIFICATION	1.221196578082113E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999987788034219	WITHOUT_CLASSIFICATION	1.221196578082113E-6	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999999292611573	WITHOUT_CLASSIFICATION	7.07388427323325E-8	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999990701119131	WITHOUT_CLASSIFICATION	9.298880867767036E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999990701119131	WITHOUT_CLASSIFICATION	9.298880867767036E-7	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999242249521	WITHOUT_CLASSIFICATION	7.577504790826406E-7	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999242249521	WITHOUT_CLASSIFICATION	7.577504790826406E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999942546180164	WITHOUT_CLASSIFICATION	5.7453819836768315E-6	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999993865751301	WITHOUT_CLASSIFICATION	6.134248699573819E-7	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999997584845363	WITHOUT_CLASSIFICATION	2.4151546367079013E-7	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999937912520156	WITHOUT_CLASSIFICATION	6.208747984433374E-6	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999994343125507	WITHOUT_CLASSIFICATION	5.656874492124361E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999898693230264	WITHOUT_CLASSIFICATION	1.0130676973629853E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999898693230264	WITHOUT_CLASSIFICATION	1.0130676973629853E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999993164682309	WITHOUT_CLASSIFICATION	6.835317691393821E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999993164682309	WITHOUT_CLASSIFICATION	6.835317691393821E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999993164682309	WITHOUT_CLASSIFICATION	6.835317691393821E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999996250453121	WITHOUT_CLASSIFICATION	3.7495468778474983E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999987788034219	WITHOUT_CLASSIFICATION	1.221196578082113E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999987788034219	WITHOUT_CLASSIFICATION	1.221196578082113E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999987788034219	WITHOUT_CLASSIFICATION	1.221196578082113E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999942546180164	WITHOUT_CLASSIFICATION	5.7453819836768315E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999942546180164	WITHOUT_CLASSIFICATION	5.7453819836768315E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999942546180164	WITHOUT_CLASSIFICATION	5.7453819836768315E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999937912520156	WITHOUT_CLASSIFICATION	6.208747984433374E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999937912520156	WITHOUT_CLASSIFICATION	6.208747984433374E-6	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999952792829283	WITHOUT_CLASSIFICATION	4.720717071763217E-6	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999999343186649	WITHOUT_CLASSIFICATION	6.568133513807237E-8	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999994404723054	WITHOUT_CLASSIFICATION	5.595276945356407E-7	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999999588793401	WITHOUT_CLASSIFICATION	4.1120659925890234E-8	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999986175243155	WITHOUT_CLASSIFICATION	1.3824756845046362E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999777003680204	WITHOUT_CLASSIFICATION	2.22996319796539E-5	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999777003680204	WITHOUT_CLASSIFICATION	2.22996319796539E-5	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999990525438414	WITHOUT_CLASSIFICATION	9.474561586544925E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999333313651848	WITHOUT_CLASSIFICATION	6.666863481514418E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999333313651848	WITHOUT_CLASSIFICATION	6.666863481514418E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999333313651848	WITHOUT_CLASSIFICATION	6.666863481514418E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999333313651848	WITHOUT_CLASSIFICATION	6.666863481514418E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999333313651848	WITHOUT_CLASSIFICATION	6.666863481514418E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999794448088365	WITHOUT_CLASSIFICATION	2.0555191163433406E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999794448088365	WITHOUT_CLASSIFICATION	2.0555191163433406E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999794448088365	WITHOUT_CLASSIFICATION	2.0555191163433406E-5	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999978557016911	WITHOUT_CLASSIFICATION	2.144298308978863E-6	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999931981800038	WITHOUT_CLASSIFICATION	6.8018199962770864E-6	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999996250453121	WITHOUT_CLASSIFICATION	3.7495468778474983E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999942546180164	WITHOUT_CLASSIFICATION	5.7453819836768315E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999942546180164	WITHOUT_CLASSIFICATION	5.7453819836768315E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999333313651848	WITHOUT_CLASSIFICATION	6.666863481514418E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999333313651848	WITHOUT_CLASSIFICATION	6.666863481514418E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999794448088365	WITHOUT_CLASSIFICATION	2.0555191163433406E-5	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999990525438414	WITHOUT_CLASSIFICATION	9.474561586544925E-7	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999948049027075	WITHOUT_CLASSIFICATION	5.195097292427619E-6	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999969373527027	WITHOUT_CLASSIFICATION	3.0626472972543276E-6	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999999008035234	WITHOUT_CLASSIFICATION	9.919647664702878E-8	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999998829946152	WITHOUT_CLASSIFICATION	1.170053849202286E-7	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999958120282955	WITHOUT_CLASSIFICATION	4.1879717045492435E-6	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999972714143057	WITHOUT_CLASSIFICATION	2.7285856942818566E-6	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999784623021419	WITHOUT_CLASSIFICATION	2.1537697858131922E-5	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999992233599185	WITHOUT_CLASSIFICATION	7.766400814710334E-7	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999980811258076	WITHOUT_CLASSIFICATION	1.9188741924321197E-6	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999992164007889	WITHOUT_CLASSIFICATION	7.835992110457073E-7	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999991898993283	WITHOUT_CLASSIFICATION	8.10100671728042E-7	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999806692833209	WITHOUT_CLASSIFICATION	1.9330716679157646E-5	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999981675479082	WITHOUT_CLASSIFICATION	1.8324520918737943E-6	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999739574116427	WITHOUT_CLASSIFICATION	2.6042588357263868E-5	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999967835993245	WITHOUT_CLASSIFICATION	3.2164006754393893E-6	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999978956683951	WITHOUT_CLASSIFICATION	2.1043316048663116E-6	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999981257997808	WITHOUT_CLASSIFICATION	1.874200219193952E-6	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.99999997353423	WITHOUT_CLASSIFICATION	2.646576996398322E-8	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999703067801182	WITHOUT_CLASSIFICATION	2.9693219881829963E-5	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999991578293816	WITHOUT_CLASSIFICATION	8.421706183485998E-7	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999979269833853	WITHOUT_CLASSIFICATION	2.07301661472021E-6	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999987924850705	WITHOUT_CLASSIFICATION	1.207514929458743E-6	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999989202320302	WITHOUT_CLASSIFICATION	1.0797679698008953E-6	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999993736346584	WITHOUT_CLASSIFICATION	6.263653415768346E-7	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999994175573443	WITHOUT_CLASSIFICATION	5.824426557046214E-7	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999941993043143	WITHOUT_CLASSIFICATION	5.800695685666069E-6	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999948718936692	WITHOUT_CLASSIFICATION	5.128106330804111E-6	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999986730697484	WITHOUT_CLASSIFICATION	1.3269302515631345E-6	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999959934587416	WITHOUT_CLASSIFICATION	4.006541258385451E-6	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999999413795279	WITHOUT_CLASSIFICATION	5.862047211286825E-8	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999540793486	WITHOUT_CLASSIFICATION	4.592065144867605E-8	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999997812899922	WITHOUT_CLASSIFICATION	2.1871000779104217E-7	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999995705391386	WITHOUT_CLASSIFICATION	4.294608614180509E-7	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999978825261274	WITHOUT_CLASSIFICATION	2.1174738725658165E-6	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999948049027075	WITHOUT_CLASSIFICATION	5.195097292427619E-6	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999978065037304	WITHOUT_CLASSIFICATION	2.1934962695877953E-6	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999992398476327	WITHOUT_CLASSIFICATION	7.601523673654385E-7	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.999999863606801	WITHOUT_CLASSIFICATION	1.3639319906069328E-7	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999976562311974	WITHOUT_CLASSIFICATION	2.3437688026860666E-6	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999976562311974	WITHOUT_CLASSIFICATION	2.3437688026860666E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999929246791341	WITHOUT_CLASSIFICATION	7.075320865840968E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999929246791341	WITHOUT_CLASSIFICATION	7.075320865840968E-6	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999994646381356	WITHOUT_CLASSIFICATION	5.353618643552927E-7	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999999932500566	WITHOUT_CLASSIFICATION	6.749943401190312E-8	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999773575444577	WITHOUT_CLASSIFICATION	2.2642455542276814E-5	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999862163795427	WITHOUT_CLASSIFICATION	1.378362045741077E-5	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999997400665676	WITHOUT_CLASSIFICATION	2.5993343239352514E-7	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999974762337117	WITHOUT_CLASSIFICATION	2.5237662882079034E-6	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999951927617994	WITHOUT_CLASSIFICATION	4.807238200607584E-6	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.999999975770198	WITHOUT_CLASSIFICATION	2.4229802115721753E-8	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999995450674544	WITHOUT_CLASSIFICATION	4.549325456604192E-7	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999995943594179	WITHOUT_CLASSIFICATION	4.0564058201118657E-7	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999070969332	WITHOUT_CLASSIFICATION	9.290306686833684E-8	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999982444028289	WITHOUT_CLASSIFICATION	1.7555971711791684E-6	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999982444028289	WITHOUT_CLASSIFICATION	1.7555971711791684E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999997936163996	WITHOUT_CLASSIFICATION	2.0638360048661887E-7	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999998304251275	WITHOUT_CLASSIFICATION	1.6957487252157588E-7	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999973003823108	WITHOUT_CLASSIFICATION	2.6996176890869137E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999973003823108	WITHOUT_CLASSIFICATION	2.6996176890869137E-6	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999989842813016	WITHOUT_CLASSIFICATION	1.0157186983772025E-6	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999995952375447	WITHOUT_CLASSIFICATION	4.0476245528932056E-7	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.99999726915339	WITHOUT_CLASSIFICATION	2.730846609951196E-6	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.999989554507869	WITHOUT_CLASSIFICATION	1.0445492130931876E-5	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999997881765774	WITHOUT_CLASSIFICATION	2.1182342263147598E-7	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999999141934347	WITHOUT_CLASSIFICATION	8.580656533016275E-8	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999936034592481	WITHOUT_CLASSIFICATION	6.396540751834169E-6	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999991717081823	WITHOUT_CLASSIFICATION	8.282918177030973E-7	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999968705192643	WITHOUT_CLASSIFICATION	3.129480735591594E-6	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999877336765312	WITHOUT_CLASSIFICATION	1.2266323468891582E-5	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999967624441751	WITHOUT_CLASSIFICATION	3.2375558249197054E-6	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999977753594069	WITHOUT_CLASSIFICATION	2.2246405930904517E-6	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999943636460642	WITHOUT_CLASSIFICATION	5.6363539357408136E-6	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999954656277478	WITHOUT_CLASSIFICATION	4.534372252216007E-6	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999672147384	WITHOUT_CLASSIFICATION	3.278526161992846E-8	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999997238998511	WITHOUT_CLASSIFICATION	2.7610014892690847E-7	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999957759866142	WITHOUT_CLASSIFICATION	4.224013385870412E-6	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999974159963421	WITHOUT_CLASSIFICATION	2.584003658001448E-6	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999995042421312	WITHOUT_CLASSIFICATION	4.957578687624617E-7	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999110557772	WITHOUT_CLASSIFICATION	8.894422272165647E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9999941258944498	WITHOUT_CLASSIFICATION	5.8741055501591755E-6	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999973244787802	WITHOUT_CLASSIFICATION	2.6755212198647063E-6	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999983807715799	WITHOUT_CLASSIFICATION	1.619228420160429E-6	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999961955418306	WITHOUT_CLASSIFICATION	3.8044581694773953E-6	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999876116708362	WITHOUT_CLASSIFICATION	1.238832916377131E-5	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.999998986439423	WITHOUT_CLASSIFICATION	1.0135605769973625E-6	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999988821781758	WITHOUT_CLASSIFICATION	1.1178218242398904E-6	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999964877694933	WITHOUT_CLASSIFICATION	3.5122305065678923E-6	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999993404927995	WITHOUT_CLASSIFICATION	6.595072004852584E-7	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999996656247699	WITHOUT_CLASSIFICATION	3.3437523004449587E-7	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999983956639028	WITHOUT_CLASSIFICATION	1.604336097257431E-6	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999976291818892	WITHOUT_CLASSIFICATION	2.370818110771101E-6	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999995903176173	WITHOUT_CLASSIFICATION	4.09682382775221E-7	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999988186692264	WITHOUT_CLASSIFICATION	1.1813307737145396E-6	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999988186692264	WITHOUT_CLASSIFICATION	1.1813307737145396E-6	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.999999743798113	WITHOUT_CLASSIFICATION	2.562018869769014E-7	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999998445018483	WITHOUT_CLASSIFICATION	1.5549815170744385E-7	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999997961896737	WITHOUT_CLASSIFICATION	2.0381032630347424E-6	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999927640440537	WITHOUT_CLASSIFICATION	7.235955946331849E-6	TEST
// Block	WITHOUT_CLASSIFICATION	0.9999902754634405	WITHOUT_CLASSIFICATION	9.724536559424367E-6	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999975712063609	WITHOUT_CLASSIFICATION	2.428793639063961E-6	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999858596640819	WITHOUT_CLASSIFICATION	1.4140335918148307E-5	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999928926269515	WITHOUT_CLASSIFICATION	7.1073730485896954E-6	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999998268462666	WITHOUT_CLASSIFICATION	1.7315373340876754E-7	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999816625376216	WITHOUT_CLASSIFICATION	1.8337462378457636E-5	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999835056181	WITHOUT_CLASSIFICATION	1.6494381839156647E-8	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999967489316205	WITHOUT_CLASSIFICATION	3.2510683796582368E-6	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999316978210526	WITHOUT_CLASSIFICATION	6.830217894731764E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999967446766116	WITHOUT_CLASSIFICATION	3.2553233884711774E-6	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999994517952454	WITHOUT_CLASSIFICATION	5.482047546093221E-7	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999920405059832	WITHOUT_CLASSIFICATION	7.959494016718481E-6	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999997633918805	WITHOUT_CLASSIFICATION	2.3660811950498257E-7	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999932256540922	WITHOUT_CLASSIFICATION	6.774345907855515E-6	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.999994916654444	WITHOUT_CLASSIFICATION	5.083345556107718E-6	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999950926631155	WITHOUT_CLASSIFICATION	4.907336884468685E-6	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999998224350184	WITHOUT_CLASSIFICATION	1.7756498154294317E-7	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999996518551766	WITHOUT_CLASSIFICATION	3.481448234906815E-7	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999999403415263	WITHOUT_CLASSIFICATION	5.965847368583655E-8	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999996812770899	WITHOUT_CLASSIFICATION	3.187229100706976E-7	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999974934882537	WITHOUT_CLASSIFICATION	2.5065117462383145E-6	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999998053173507	WITHOUT_CLASSIFICATION	1.9468264935458614E-7	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999437362299	WITHOUT_CLASSIFICATION	5.626377015345897E-8	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999991435689766	WITHOUT_CLASSIFICATION	8.564310234281009E-7	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.999998009711284	WITHOUT_CLASSIFICATION	1.990288716017416E-6	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.999999719286386	WITHOUT_CLASSIFICATION	2.807136139885923E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999993205418232	WITHOUT_CLASSIFICATION	6.794581767613832E-7	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999986855817343	WITHOUT_CLASSIFICATION	1.3144182656236519E-6	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999991448104601	WITHOUT_CLASSIFICATION	8.551895397992486E-7	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999994945939051	WITHOUT_CLASSIFICATION	5.054060949125436E-7	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999930623225503	WITHOUT_CLASSIFICATION	6.937677449859097E-6	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999958431415003	WITHOUT_CLASSIFICATION	4.156858499700604E-6	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.999992053243355	WITHOUT_CLASSIFICATION	7.946756644918055E-6	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999979540184356	WITHOUT_CLASSIFICATION	2.045981564462332E-6	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.999997940039101	WITHOUT_CLASSIFICATION	2.059960898950154E-6	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999972803716118	WITHOUT_CLASSIFICATION	2.7196283882067885E-6	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999911701601284	WITHOUT_CLASSIFICATION	8.8298398716053E-6	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999824334004475	WITHOUT_CLASSIFICATION	1.7566599552482647E-5	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999824334004475	WITHOUT_CLASSIFICATION	1.7566599552482647E-5	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999872556141467	WITHOUT_CLASSIFICATION	1.2744385853438285E-5	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.99999886660483	WITHOUT_CLASSIFICATION	1.1333951699771715E-6	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999930213135194	WITHOUT_CLASSIFICATION	6.978686480548151E-6	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999849203927779	WITHOUT_CLASSIFICATION	1.5079607222042568E-5	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999993328423057	WITHOUT_CLASSIFICATION	6.671576944001073E-7	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999996427084618	WITHOUT_CLASSIFICATION	3.572915382788008E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999698022338	WITHOUT_CLASSIFICATION	3.0197766178748756E-8	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999999898173402	WITHOUT_CLASSIFICATION	1.0182659710085434E-8	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999998602181954	WITHOUT_CLASSIFICATION	1.3978180458054847E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999945808091	WITHOUT_CLASSIFICATION	5.419190910732793E-9	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999924075965165	WITHOUT_CLASSIFICATION	7.592403483567831E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999994070570698	WITHOUT_CLASSIFICATION	5.929429302104153E-7	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999999214627171	WITHOUT_CLASSIFICATION	7.853728299233788E-8	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999993636258612	WITHOUT_CLASSIFICATION	6.363741387543819E-7	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999381549008	WITHOUT_CLASSIFICATION	6.184509918268258E-8	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999983391320361	WITHOUT_CLASSIFICATION	1.6608679638632013E-6	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999802532329	WITHOUT_CLASSIFICATION	1.974676715614778E-8	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999694413140932	WITHOUT_CLASSIFICATION	3.055868590682331E-5	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999996133061326	WITHOUT_CLASSIFICATION	3.866938673477102E-7	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999958881062663	WITHOUT_CLASSIFICATION	4.111893733797807E-6	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999997260970188	WITHOUT_CLASSIFICATION	2.7390298121107764E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999988940589821	WITHOUT_CLASSIFICATION	1.1059410178781245E-6	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999254915322	WITHOUT_CLASSIFICATION	7.450846783787625E-8	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999999623003402	WITHOUT_CLASSIFICATION	3.769965988827385E-8	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998589276955	WITHOUT_CLASSIFICATION	1.4107230456039946E-7	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999999483578982	WITHOUT_CLASSIFICATION	5.164210177508853E-8	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999999696294548	WITHOUT_CLASSIFICATION	3.0370545077202446E-8	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999981243982509	WITHOUT_CLASSIFICATION	1.8756017491383236E-6	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999990355441328	WITHOUT_CLASSIFICATION	9.644558671618135E-7	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999928735838373	WITHOUT_CLASSIFICATION	7.126416162671915E-6	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999999093749885	WITHOUT_CLASSIFICATION	9.062501150257585E-7	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.999999774609814	WITHOUT_CLASSIFICATION	2.253901860141426E-7	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999928735838373	WITHOUT_CLASSIFICATION	7.126416162671915E-6	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999996536653109	WITHOUT_CLASSIFICATION	3.4633468913680696E-7	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999998807254211	WITHOUT_CLASSIFICATION	1.1927457888613336E-7	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999999910841324	WITHOUT_CLASSIFICATION	8.915867534271938E-9	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9999932489408967	WITHOUT_CLASSIFICATION	6.751059103273782E-6	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999989518776148	WITHOUT_CLASSIFICATION	1.048122385245678E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999858096603	WITHOUT_CLASSIFICATION	1.4190339681465658E-8	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999981569689473	WITHOUT_CLASSIFICATION	1.8430310526882913E-6	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999965808332797	WITHOUT_CLASSIFICATION	3.419166720243835E-6	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999999971577375	WITHOUT_CLASSIFICATION	2.8422625026302208E-8	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999110557772	WITHOUT_CLASSIFICATION	8.894422272165647E-8	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999994404723054	WITHOUT_CLASSIFICATION	5.595276945356407E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999283584446	WITHOUT_CLASSIFICATION	7.164155533835464E-8	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999992296131703	WITHOUT_CLASSIFICATION	7.703868295682366E-7	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999997858633021	WITHOUT_CLASSIFICATION	2.1413669801565195E-7	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999873146927621	WITHOUT_CLASSIFICATION	1.2685307237960431E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999975942914635	WITHOUT_CLASSIFICATION	2.405708536489546E-6	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999999608669601	WITHOUT_CLASSIFICATION	3.9133040032567454E-8	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999985922525023	WITHOUT_CLASSIFICATION	1.4077474976920874E-6	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999824407251	WITHOUT_CLASSIFICATION	1.7559274919650005E-8	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999998119408904	WITHOUT_CLASSIFICATION	1.8805910961987404E-7	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999896524536822	WITHOUT_CLASSIFICATION	1.0347546317777278E-5	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999936425245928	WITHOUT_CLASSIFICATION	6.3574754071722644E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999963954740461	WITHOUT_CLASSIFICATION	3.6045259540445072E-6	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999966531617273	WITHOUT_CLASSIFICATION	3.346838272829716E-6	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999956233071206	WITHOUT_CLASSIFICATION	4.376692879483326E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999929811704892	WITHOUT_CLASSIFICATION	7.018829510886416E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999929947256028	WITHOUT_CLASSIFICATION	7.005274397311693E-6	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.999999796572108	WITHOUT_CLASSIFICATION	2.0342789205196377E-7	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999996304719733	WITHOUT_CLASSIFICATION	3.6952802666339206E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999983001608743	WITHOUT_CLASSIFICATION	1.6998391256317807E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999983001608743	WITHOUT_CLASSIFICATION	1.6998391256317807E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999990331435181	WITHOUT_CLASSIFICATION	9.668564819175912E-7	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999996155924556	WITHOUT_CLASSIFICATION	3.8440754430607437E-7	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999999790836854	WITHOUT_CLASSIFICATION	2.0916314599041646E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999822639467942	WITHOUT_CLASSIFICATION	1.7736053205792847E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999822639467942	WITHOUT_CLASSIFICATION	1.7736053205792847E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999822639467942	WITHOUT_CLASSIFICATION	1.7736053205792847E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999822639467942	WITHOUT_CLASSIFICATION	1.7736053205792847E-5	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999985661420133	WITHOUT_CLASSIFICATION	1.4338579866558432E-6	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999989558883273	WITHOUT_CLASSIFICATION	1.04411167269754E-6	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999889750067701	WITHOUT_CLASSIFICATION	1.1024993229868E-5	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999998317550705	WITHOUT_CLASSIFICATION	1.682449294695322E-7	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999998526206492	WITHOUT_CLASSIFICATION	1.4737935080467494E-6	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999990157815494	WITHOUT_CLASSIFICATION	9.84218450615234E-7	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999824329618029	WITHOUT_CLASSIFICATION	1.7567038197172608E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999824329618029	WITHOUT_CLASSIFICATION	1.7567038197172608E-5	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999998856065326	WITHOUT_CLASSIFICATION	1.143934674185215E-7	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.999975483619289	WITHOUT_CLASSIFICATION	2.4516380711021424E-5	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999998755131378	WITHOUT_CLASSIFICATION	1.244868622327005E-7	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999999522511576	WITHOUT_CLASSIFICATION	4.774884245593718E-8	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999992468456921	WITHOUT_CLASSIFICATION	7.531543078887618E-7	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999933981081953	WITHOUT_CLASSIFICATION	6.6018918047740405E-6	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999960603810367	WITHOUT_CLASSIFICATION	3.939618963240043E-6	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999902574603572	WITHOUT_CLASSIFICATION	9.742539642786861E-6	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998759930313631	WITHOUT_CLASSIFICATION	1.2400696863691633E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998759930313631	WITHOUT_CLASSIFICATION	1.2400696863691633E-4	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.999999774609814	WITHOUT_CLASSIFICATION	2.253901860141426E-7	TEST
// line 449	WITHOUT_CLASSIFICATION	0.999992225068619	WITHOUT_CLASSIFICATION	7.774931381035097E-6	TEST
// line 495	WITHOUT_CLASSIFICATION	0.999992281548797	WITHOUT_CLASSIFICATION	7.718451202884898E-6	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999988206677287	WITHOUT_CLASSIFICATION	1.1793322712308528E-6	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999372462973	WITHOUT_CLASSIFICATION	6.275370267226128E-8	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9999729680277337	WITHOUT_CLASSIFICATION	2.7031972266267214E-5	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999974504746799	WITHOUT_CLASSIFICATION	2.5495253200792847E-6	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999910555681608	WITHOUT_CLASSIFICATION	8.944431839211059E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999987702393492	WITHOUT_CLASSIFICATION	1.2297606507595377E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999987702393492	WITHOUT_CLASSIFICATION	1.2297606507595377E-6	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999999320002801	WITHOUT_CLASSIFICATION	6.799971978733596E-8	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999998236275661	WITHOUT_CLASSIFICATION	1.7637243388526235E-7	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999999874699101	WITHOUT_CLASSIFICATION	1.2530089756861867E-8	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999895208001891	WITHOUT_CLASSIFICATION	1.04791998108664E-5	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999980552513703	WITHOUT_CLASSIFICATION	1.944748629613753E-6	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9999778173846752	WITHOUT_CLASSIFICATION	2.2182615324768747E-5	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.999999889877175	WITHOUT_CLASSIFICATION	1.101228248439935E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999995187530925	WITHOUT_CLASSIFICATION	4.812469075276963E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999995187530925	WITHOUT_CLASSIFICATION	4.812469075276963E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999995187530925	WITHOUT_CLASSIFICATION	4.812469075276963E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999995187530925	WITHOUT_CLASSIFICATION	4.812469075276963E-7	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999969499879315	WITHOUT_CLASSIFICATION	3.0500120684774726E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999991217958	WITHOUT_CLASSIFICATION	8.78204076031902E-10	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999964609873643	WITHOUT_CLASSIFICATION	3.5390126358329367E-6	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999998276472748	WITHOUT_CLASSIFICATION	1.7235272516411059E-7	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999993884445889	WITHOUT_CLASSIFICATION	6.115554110697646E-7	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.9999674624230548	WITHOUT_CLASSIFICATION	3.253757694529478E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999983252296466	WITHOUT_CLASSIFICATION	1.6747703532963355E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999971732805094	WITHOUT_CLASSIFICATION	2.826719490508887E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999971732805094	WITHOUT_CLASSIFICATION	2.826719490508887E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999971732805094	WITHOUT_CLASSIFICATION	2.826719490508887E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998077653535	WITHOUT_CLASSIFICATION	1.9223464657355802E-7	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999996112763788	WITHOUT_CLASSIFICATION	3.88723621138671E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999514707811	WITHOUT_CLASSIFICATION	4.8529218848296066E-8	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999514707811	WITHOUT_CLASSIFICATION	4.8529218848296066E-8	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999861439547573	WITHOUT_CLASSIFICATION	1.3856045242681354E-5	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999995138757	WITHOUT_CLASSIFICATION	4.861241600296387E-10	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999999928459316	WITHOUT_CLASSIFICATION	7.15406835337795E-9	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9999852820770598	WITHOUT_CLASSIFICATION	1.4717922940150791E-5	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999679610692	WITHOUT_CLASSIFICATION	3.203893085256235E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.99999742621763	WITHOUT_CLASSIFICATION	2.57378237005144E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999990366663457	WITHOUT_CLASSIFICATION	9.63333654233865E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999990366663457	WITHOUT_CLASSIFICATION	9.63333654233865E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999992025731642	WITHOUT_CLASSIFICATION	7.9742683580163E-6	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999998759937329	WITHOUT_CLASSIFICATION	1.2400626715712328E-7	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999890091652	WITHOUT_CLASSIFICATION	1.0990834760385716E-8	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999925920605237	WITHOUT_CLASSIFICATION	7.407939476348932E-6	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999982106572183	WITHOUT_CLASSIFICATION	1.7893427817824507E-6	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999602259246	WITHOUT_CLASSIFICATION	3.977407539025432E-8	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999991097686539	WITHOUT_CLASSIFICATION	8.902313461477947E-7	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998952955146054	WITHOUT_CLASSIFICATION	1.0470448539466609E-4	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999978016172366	WITHOUT_CLASSIFICATION	2.198382763386676E-6	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999969981334428	WITHOUT_CLASSIFICATION	3.0018665572842716E-6	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999998733903575	WITHOUT_CLASSIFICATION	1.2660964251937158E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999997968842649	WITHOUT_CLASSIFICATION	2.0311573522142754E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999417516071	WITHOUT_CLASSIFICATION	5.8248392952582814E-8	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999999420568193	WITHOUT_CLASSIFICATION	5.7943180781321265E-8	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999997957147758	WITHOUT_CLASSIFICATION	2.042852242121984E-6	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999998677499936	WITHOUT_CLASSIFICATION	1.322500063768672E-7	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999992752137393	WITHOUT_CLASSIFICATION	7.247862606262985E-7	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999365860462	WITHOUT_CLASSIFICATION	6.341395375318035E-8	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999997308369196	WITHOUT_CLASSIFICATION	2.6916308038306076E-7	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999998899391409	WITHOUT_CLASSIFICATION	1.1006085915007206E-7	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999975682950524	WITHOUT_CLASSIFICATION	2.431704947620684E-6	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999178118227	WITHOUT_CLASSIFICATION	8.218817728634208E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998900585454776	WITHOUT_CLASSIFICATION	1.0994145452236652E-4	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998900585454776	WITHOUT_CLASSIFICATION	1.0994145452236652E-4	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998900585454776	WITHOUT_CLASSIFICATION	1.0994145452236652E-4	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998900585454776	WITHOUT_CLASSIFICATION	1.0994145452236652E-4	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998900585454776	WITHOUT_CLASSIFICATION	1.0994145452236652E-4	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998900585454776	WITHOUT_CLASSIFICATION	1.0994145452236652E-4	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998900585454776	WITHOUT_CLASSIFICATION	1.0994145452236652E-4	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998900585454776	WITHOUT_CLASSIFICATION	1.0994145452236652E-4	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999998464652425	WITHOUT_CLASSIFICATION	1.535347573323553E-7	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999905052475478	WITHOUT_CLASSIFICATION	9.494752452160144E-6	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999994725936852	WITHOUT_CLASSIFICATION	5.274063147923973E-7	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999998523647792	WITHOUT_CLASSIFICATION	1.4763522087730057E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999698022338	WITHOUT_CLASSIFICATION	3.0197766178748756E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999698022338	WITHOUT_CLASSIFICATION	3.0197766178748756E-8	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999998566773673	WITHOUT_CLASSIFICATION	1.433226326241804E-7	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999990767493191	WITHOUT_CLASSIFICATION	9.232506809551185E-7	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999982422881661	WITHOUT_CLASSIFICATION	1.7577118339221268E-6	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999998059257849	WITHOUT_CLASSIFICATION	1.9407421523157797E-7	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999983167664903	WITHOUT_CLASSIFICATION	1.6832335096846493E-6	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999966624956537	WITHOUT_CLASSIFICATION	3.3375043461990478E-6	TEST
// read	WITHOUT_CLASSIFICATION	0.9999947891007093	WITHOUT_CLASSIFICATION	5.210899290731464E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.999915315949484	WITHOUT_CLASSIFICATION	8.468405051597034E-5	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999986550156353	WITHOUT_CLASSIFICATION	1.344984364771994E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999992010827168	WITHOUT_CLASSIFICATION	7.989172832495203E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999992010827168	WITHOUT_CLASSIFICATION	7.989172832495203E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999992010827168	WITHOUT_CLASSIFICATION	7.989172832495203E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999964859433851	WITHOUT_CLASSIFICATION	3.51405661489498E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999964859433851	WITHOUT_CLASSIFICATION	3.51405661489498E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999964859433851	WITHOUT_CLASSIFICATION	3.51405661489498E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999964859433851	WITHOUT_CLASSIFICATION	3.51405661489498E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999964859433851	WITHOUT_CLASSIFICATION	3.51405661489498E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999964859433851	WITHOUT_CLASSIFICATION	3.51405661489498E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999964859433851	WITHOUT_CLASSIFICATION	3.51405661489498E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999964859433851	WITHOUT_CLASSIFICATION	3.51405661489498E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999964859433851	WITHOUT_CLASSIFICATION	3.51405661489498E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999997098134554	WITHOUT_CLASSIFICATION	2.9018654460293054E-7	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999957298173722	WITHOUT_CLASSIFICATION	4.270182627770428E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999994641758684	WITHOUT_CLASSIFICATION	5.35824131554736E-7	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999987632111519	WITHOUT_CLASSIFICATION	1.236788848142036E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999964859433851	WITHOUT_CLASSIFICATION	3.51405661489498E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999964859433851	WITHOUT_CLASSIFICATION	3.51405661489498E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.999964859433851	WITHOUT_CLASSIFICATION	3.51405661489498E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999984852361044	WITHOUT_CLASSIFICATION	1.514763895643999E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999971335357883	WITHOUT_CLASSIFICATION	2.8664642116258945E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999999307610548	WITHOUT_CLASSIFICATION	6.923894525808391E-8	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999935679188989	WITHOUT_CLASSIFICATION	6.432081101123431E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999935679188989	WITHOUT_CLASSIFICATION	6.432081101123431E-6	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999969605008074	WITHOUT_CLASSIFICATION	3.039499192462817E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999934734501503	WITHOUT_CLASSIFICATION	6.526549849667265E-6	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999677841711	WITHOUT_CLASSIFICATION	3.221582882192118E-8	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999829451327	WITHOUT_CLASSIFICATION	1.705486730814592E-8	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999960342465444	WITHOUT_CLASSIFICATION	3.965753455592094E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999960342465444	WITHOUT_CLASSIFICATION	3.965753455592094E-6	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999994213516841	WITHOUT_CLASSIFICATION	5.786483159202288E-7	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999584507318	WITHOUT_CLASSIFICATION	4.154926833458769E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999991365494806	WITHOUT_CLASSIFICATION	8.634505194735187E-7	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999395146090042	WITHOUT_CLASSIFICATION	6.0485390995869106E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999395146090042	WITHOUT_CLASSIFICATION	6.0485390995869106E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999395146090042	WITHOUT_CLASSIFICATION	6.0485390995869106E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999895200444576	WITHOUT_CLASSIFICATION	1.047995554234248E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999973589547768	WITHOUT_CLASSIFICATION	2.6410452230679617E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999973589547768	WITHOUT_CLASSIFICATION	2.6410452230679617E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999984017890754	WITHOUT_CLASSIFICATION	1.598210924644713E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999984017890754	WITHOUT_CLASSIFICATION	1.598210924644713E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999968772486907	WITHOUT_CLASSIFICATION	3.122751309274457E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999997945868818	WITHOUT_CLASSIFICATION	2.054131182660106E-7	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.999962307330339	WITHOUT_CLASSIFICATION	3.7692669661063856E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999859179668396	WITHOUT_CLASSIFICATION	1.4082033160458906E-5	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999922775827788	WITHOUT_CLASSIFICATION	7.722417221267704E-6	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999996230077816	WITHOUT_CLASSIFICATION	3.769922183813194E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999711986909	WITHOUT_CLASSIFICATION	2.8801309031863173E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999898693230264	WITHOUT_CLASSIFICATION	1.0130676973629853E-5	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999972577871323	WITHOUT_CLASSIFICATION	2.742212867689779E-6	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999503625215	WITHOUT_CLASSIFICATION	4.963747860628872E-8	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999889020576997	WITHOUT_CLASSIFICATION	1.109794230026879E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999980183307616	WITHOUT_CLASSIFICATION	1.9816692383445773E-6	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999996722327488	WITHOUT_CLASSIFICATION	3.277672512674102E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999998333707654	WITHOUT_CLASSIFICATION	1.6662923460782772E-7	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999308775279	WITHOUT_CLASSIFICATION	6.912247203439415E-8	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999978707643901	WITHOUT_CLASSIFICATION	2.129235609944556E-6	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999999045834155	WITHOUT_CLASSIFICATION	9.541658451387247E-8	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999992978135384	WITHOUT_CLASSIFICATION	7.021864616896797E-7	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999997540951485	WITHOUT_CLASSIFICATION	2.4590485143977243E-7	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999995221099159	WITHOUT_CLASSIFICATION	4.778900839916431E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999283584446	WITHOUT_CLASSIFICATION	7.164155533835464E-8	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999601208469905	WITHOUT_CLASSIFICATION	3.9879153009542626E-5	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999988893664351	WITHOUT_CLASSIFICATION	1.1106335649320308E-6	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999973867258636	WITHOUT_CLASSIFICATION	2.6132741365125754E-6	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999994393242241	WITHOUT_CLASSIFICATION	5.606757757959814E-7	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999908313642025	WITHOUT_CLASSIFICATION	9.168635797561667E-6	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.999986489218024	WITHOUT_CLASSIFICATION	1.3510781976075937E-5	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999998670246598	WITHOUT_CLASSIFICATION	1.3297534021340318E-7	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999977472542435	WITHOUT_CLASSIFICATION	2.2527457565614435E-6	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999076470965	WITHOUT_CLASSIFICATION	9.235290357857092E-8	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999977508284053	WITHOUT_CLASSIFICATION	2.2491715946655566E-6	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999993944566589	WITHOUT_CLASSIFICATION	6.055433411566613E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999990524254273	WITHOUT_CLASSIFICATION	9.475745727249687E-7	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999994229522412	WITHOUT_CLASSIFICATION	5.770477587502585E-7	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999992861552598	WITHOUT_CLASSIFICATION	7.138447401056531E-7	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.999999987259567	WITHOUT_CLASSIFICATION	1.2740433039554845E-8	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999995821268085	WITHOUT_CLASSIFICATION	4.17873191597596E-7	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999995234153398	WITHOUT_CLASSIFICATION	4.7658466010640323E-7	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999992271627532	WITHOUT_CLASSIFICATION	7.728372467811575E-7	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999998759786204	WITHOUT_CLASSIFICATION	1.2402137961290345E-7	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999999761707385	WITHOUT_CLASSIFICATION	2.382926148915749E-8	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999839557718694	WITHOUT_CLASSIFICATION	1.6044228130641064E-5	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999998833369176	WITHOUT_CLASSIFICATION	1.1666308242357545E-7	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999978477024429	WITHOUT_CLASSIFICATION	2.1522975569564486E-6	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999999563106339	WITHOUT_CLASSIFICATION	4.3689366213016444E-8	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.99999946721931	WITHOUT_CLASSIFICATION	5.327806899643947E-7	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999986275478776	WITHOUT_CLASSIFICATION	1.3724521223435597E-6	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999997709222104	WITHOUT_CLASSIFICATION	2.2907778954965872E-7	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999980204694165	WITHOUT_CLASSIFICATION	1.9795305834361783E-6	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999881457346514	WITHOUT_CLASSIFICATION	1.18542653486262E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999999455386401	WITHOUT_CLASSIFICATION	5.446135978639819E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999976667984514	WITHOUT_CLASSIFICATION	2.333201548631895E-6	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999976667984514	WITHOUT_CLASSIFICATION	2.333201548631895E-6	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.99999969052075	WITHOUT_CLASSIFICATION	3.094792499468629E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.99999969052075	WITHOUT_CLASSIFICATION	3.094792499468629E-7	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999431097322202	WITHOUT_CLASSIFICATION	5.68902677798862E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999431097322202	WITHOUT_CLASSIFICATION	5.68902677798862E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999880376916492	WITHOUT_CLASSIFICATION	1.196230835080693E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999880376916492	WITHOUT_CLASSIFICATION	1.196230835080693E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999982257344802	WITHOUT_CLASSIFICATION	1.7742655197870872E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999982257344802	WITHOUT_CLASSIFICATION	1.7742655197870872E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999982257344802	WITHOUT_CLASSIFICATION	1.7742655197870872E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999982257344802	WITHOUT_CLASSIFICATION	1.7742655197870872E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999982257344802	WITHOUT_CLASSIFICATION	1.7742655197870872E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999982257344802	WITHOUT_CLASSIFICATION	1.7742655197870872E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999982257344802	WITHOUT_CLASSIFICATION	1.7742655197870872E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999982257344802	WITHOUT_CLASSIFICATION	1.7742655197870872E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999982257344802	WITHOUT_CLASSIFICATION	1.7742655197870872E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999990971085054	WITHOUT_CLASSIFICATION	9.028914946371941E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999990971085054	WITHOUT_CLASSIFICATION	9.028914946371941E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999990971085054	WITHOUT_CLASSIFICATION	9.028914946371941E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999991072529432	WITHOUT_CLASSIFICATION	8.927470568133876E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999959534802535	WITHOUT_CLASSIFICATION	4.046519746435585E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999959534802535	WITHOUT_CLASSIFICATION	4.046519746435585E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999959534802535	WITHOUT_CLASSIFICATION	4.046519746435585E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998458466898	WITHOUT_CLASSIFICATION	1.5415331018238173E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998458466898	WITHOUT_CLASSIFICATION	1.5415331018238173E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998458466898	WITHOUT_CLASSIFICATION	1.5415331018238173E-7	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999860335931665	WITHOUT_CLASSIFICATION	1.396640683348842E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.999995012175298	WITHOUT_CLASSIFICATION	4.987824701981979E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999425950595472	WITHOUT_CLASSIFICATION	5.7404940452763755E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999954375735454	WITHOUT_CLASSIFICATION	4.5624264545959956E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999954375735454	WITHOUT_CLASSIFICATION	4.5624264545959956E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999954375735454	WITHOUT_CLASSIFICATION	4.5624264545959956E-5	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999962288233364	WITHOUT_CLASSIFICATION	3.771176663508618E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999939845573774	WITHOUT_CLASSIFICATION	6.0154426225855825E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999939845573774	WITHOUT_CLASSIFICATION	6.0154426225855825E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999998633121117	WITHOUT_CLASSIFICATION	1.366878883231619E-7	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999476459475	WITHOUT_CLASSIFICATION	5.235405261524056E-8	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999476459475	WITHOUT_CLASSIFICATION	5.235405261524056E-8	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9999994546313953	WITHOUT_CLASSIFICATION	5.453686048366282E-7	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999997336978333	WITHOUT_CLASSIFICATION	2.6630216667476663E-7	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999990445848406	WITHOUT_CLASSIFICATION	9.55415159423968E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999993305826139	WITHOUT_CLASSIFICATION	6.6941738610331615E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999993305826139	WITHOUT_CLASSIFICATION	6.6941738610331615E-6	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999921970154478	WITHOUT_CLASSIFICATION	7.802984552143844E-6	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999946025939522	WITHOUT_CLASSIFICATION	5.3974060478001E-6	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999997376348676	WITHOUT_CLASSIFICATION	2.623651324007405E-7	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.999999993620031	WITHOUT_CLASSIFICATION	6.3799690719097884E-9	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999998124970959	WITHOUT_CLASSIFICATION	1.8750290407289735E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999993305826139	WITHOUT_CLASSIFICATION	6.6941738610331615E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999993305826139	WITHOUT_CLASSIFICATION	6.6941738610331615E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999993305826139	WITHOUT_CLASSIFICATION	6.6941738610331615E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999993305826139	WITHOUT_CLASSIFICATION	6.6941738610331615E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999993305826139	WITHOUT_CLASSIFICATION	6.6941738610331615E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999871636203211	WITHOUT_CLASSIFICATION	1.2836379678915854E-5	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999969442005651	WITHOUT_CLASSIFICATION	3.055799434999446E-6	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999620064518	WITHOUT_CLASSIFICATION	3.799354825646561E-8	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999926636845131	WITHOUT_CLASSIFICATION	7.336315486883681E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999995371961675	WITHOUT_CLASSIFICATION	4.6280383244373363E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999961012349107	WITHOUT_CLASSIFICATION	3.8987650893665244E-6	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999999872836809	WITHOUT_CLASSIFICATION	1.2716319041386955E-8	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999977029606363	WITHOUT_CLASSIFICATION	2.2970393636472542E-6	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998583175245	WITHOUT_CLASSIFICATION	1.4168247541678353E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999895480088112	WITHOUT_CLASSIFICATION	1.0451991188640144E-5	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.99999941824907	WITHOUT_CLASSIFICATION	5.817509300675914E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999988940589821	WITHOUT_CLASSIFICATION	1.1059410178781245E-6	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999978769328935	WITHOUT_CLASSIFICATION	2.123067106446481E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999957541034379	WITHOUT_CLASSIFICATION	4.245896562060822E-6	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999989250754208	WITHOUT_CLASSIFICATION	1.0749245792154644E-6	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999999912539378	WITHOUT_CLASSIFICATION	8.746062201200343E-9	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999998252483548	WITHOUT_CLASSIFICATION	1.7475164510946155E-7	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999993345785	WITHOUT_CLASSIFICATION	6.654215488754109E-10	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999996713137561	WITHOUT_CLASSIFICATION	3.286862439082742E-7	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999977988744514	WITHOUT_CLASSIFICATION	2.201125548488168E-6	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.999999664530838	WITHOUT_CLASSIFICATION	3.3546916211386823E-7	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999958821417104	WITHOUT_CLASSIFICATION	4.1178582895464165E-6	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999945808091	WITHOUT_CLASSIFICATION	5.419190910732793E-9	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998233055462	WITHOUT_CLASSIFICATION	1.7669445393352608E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998233055462	WITHOUT_CLASSIFICATION	1.7669445393352608E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998233055462	WITHOUT_CLASSIFICATION	1.7669445393352608E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998233055462	WITHOUT_CLASSIFICATION	1.7669445393352608E-7	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999997739859499	WITHOUT_CLASSIFICATION	2.2601405001348394E-7	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999999821755514	WITHOUT_CLASSIFICATION	1.782444863876382E-8	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.99999888192044	WITHOUT_CLASSIFICATION	1.1180795600892558E-6	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.99999888192044	WITHOUT_CLASSIFICATION	1.1180795600892558E-6	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999962727028242	WITHOUT_CLASSIFICATION	3.7272971756734466E-6	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999875339537936	WITHOUT_CLASSIFICATION	1.2466046206416848E-5	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999958430230116	WITHOUT_CLASSIFICATION	4.156976988475255E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.99999937843583	WITHOUT_CLASSIFICATION	6.215641700986599E-7	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999981139614342	WITHOUT_CLASSIFICATION	1.8860385657027261E-6	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999987664848627	WITHOUT_CLASSIFICATION	1.233515137315457E-6	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999986158396141	WITHOUT_CLASSIFICATION	1.3841603859313652E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999943843809747	WITHOUT_CLASSIFICATION	5.615619025408089E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999943843809747	WITHOUT_CLASSIFICATION	5.615619025408089E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999943843809747	WITHOUT_CLASSIFICATION	5.615619025408089E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999943843809747	WITHOUT_CLASSIFICATION	5.615619025408089E-6	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999940360347	WITHOUT_CLASSIFICATION	5.963965277161863E-9	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999997691338784	WITHOUT_CLASSIFICATION	2.3086612156560343E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999997691338784	WITHOUT_CLASSIFICATION	2.3086612156560343E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999997691338784	WITHOUT_CLASSIFICATION	2.3086612156560343E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999982005419243	WITHOUT_CLASSIFICATION	1.7994580757653277E-6	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.999998709209158	WITHOUT_CLASSIFICATION	1.29079084201438E-6	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999933064177488	WITHOUT_CLASSIFICATION	6.6935822512615806E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999822639467942	WITHOUT_CLASSIFICATION	1.7736053205792847E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999822639467942	WITHOUT_CLASSIFICATION	1.7736053205792847E-5	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999934417908	WITHOUT_CLASSIFICATION	6.5582091634657886E-9	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999626809224	WITHOUT_CLASSIFICATION	3.731907765402302E-8	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.999994310198339	WITHOUT_CLASSIFICATION	5.689801661070584E-6	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.999994310198339	WITHOUT_CLASSIFICATION	5.689801661070584E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999990178778465	WITHOUT_CLASSIFICATION	9.821221535120222E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999990178778465	WITHOUT_CLASSIFICATION	9.821221535120222E-7	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999991085107982	WITHOUT_CLASSIFICATION	8.91489201744091E-7	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999999577320368	WITHOUT_CLASSIFICATION	4.226796323382865E-8	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999984081724972	WITHOUT_CLASSIFICATION	1.5918275028825336E-6	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999999191347243	WITHOUT_CLASSIFICATION	8.086527564178845E-8	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999801653909867	WITHOUT_CLASSIFICATION	1.983460901334829E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999974186999543	WITHOUT_CLASSIFICATION	2.5813000456296316E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999979077938944	WITHOUT_CLASSIFICATION	2.0922061055735807E-6	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999995456862942	WITHOUT_CLASSIFICATION	4.543137057449995E-7	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.999999357134469	WITHOUT_CLASSIFICATION	6.428655309067095E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999994512018819	WITHOUT_CLASSIFICATION	5.487981181242374E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999994512018819	WITHOUT_CLASSIFICATION	5.487981181242374E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999913926329445	WITHOUT_CLASSIFICATION	8.60736705560687E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999913926329445	WITHOUT_CLASSIFICATION	8.60736705560687E-6	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999990081801969	WITHOUT_CLASSIFICATION	9.91819803070422E-7	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999992986423135	WITHOUT_CLASSIFICATION	7.013576864869803E-7	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999677929494271	WITHOUT_CLASSIFICATION	3.220705057289381E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999997771421699	WITHOUT_CLASSIFICATION	2.2285783009522774E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999997771421699	WITHOUT_CLASSIFICATION	2.2285783009522774E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999997771421699	WITHOUT_CLASSIFICATION	2.2285783009522774E-6	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999935259836005	WITHOUT_CLASSIFICATION	6.474016399502028E-6	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999922646177215	WITHOUT_CLASSIFICATION	7.73538227844593E-6	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999939090532262	WITHOUT_CLASSIFICATION	6.090946773920385E-6	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999931821887847	WITHOUT_CLASSIFICATION	6.817811215352722E-6	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999923726140385	WITHOUT_CLASSIFICATION	7.627385961489795E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999925168856867	WITHOUT_CLASSIFICATION	7.4831143132919715E-6	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999935934394882	WITHOUT_CLASSIFICATION	6.406560511705787E-6	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999869328295642	WITHOUT_CLASSIFICATION	1.306717043583232E-5	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999996518437123	WITHOUT_CLASSIFICATION	3.48156287689936E-7	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999996203257091	WITHOUT_CLASSIFICATION	3.796742908741763E-7	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999995978678532	WITHOUT_CLASSIFICATION	4.0213214677997644E-7	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999965231013191	WITHOUT_CLASSIFICATION	3.4768986808499815E-6	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999987852422718	WITHOUT_CLASSIFICATION	1.2147577282136054E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9999822639467942	WITHOUT_CLASSIFICATION	1.7736053205792847E-5	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999959160434202	WITHOUT_CLASSIFICATION	4.083956579730754E-6	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999960679089243	WITHOUT_CLASSIFICATION	3.932091075685955E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999983001608743	WITHOUT_CLASSIFICATION	1.6998391256317807E-6	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999754375815965	WITHOUT_CLASSIFICATION	2.4562418403558768E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999754375815965	WITHOUT_CLASSIFICATION	2.4562418403558768E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999754375815965	WITHOUT_CLASSIFICATION	2.4562418403558768E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999754375815965	WITHOUT_CLASSIFICATION	2.4562418403558768E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999754375815965	WITHOUT_CLASSIFICATION	2.4562418403558768E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998830027158626	WITHOUT_CLASSIFICATION	1.1699728413744756E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999754375815965	WITHOUT_CLASSIFICATION	2.4562418403558768E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999754375815965	WITHOUT_CLASSIFICATION	2.4562418403558768E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999754375815965	WITHOUT_CLASSIFICATION	2.4562418403558768E-5	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999999564603256	WITHOUT_CLASSIFICATION	4.353967446662793E-8	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999939900829532	WITHOUT_CLASSIFICATION	6.009917046759342E-6	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999998722664698	WITHOUT_CLASSIFICATION	1.2773353016708584E-7	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999980549797234	WITHOUT_CLASSIFICATION	1.945020276574109E-6	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999945307462988	WITHOUT_CLASSIFICATION	5.469253701195921E-6	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999992334827317	WITHOUT_CLASSIFICATION	7.665172683420651E-7	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999779688172	WITHOUT_CLASSIFICATION	2.2031182760127634E-8	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999927311145229	WITHOUT_CLASSIFICATION	7.268885477065664E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999942721455478	WITHOUT_CLASSIFICATION	5.727854452197089E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999942721455478	WITHOUT_CLASSIFICATION	5.727854452197089E-6	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999926151566725	WITHOUT_CLASSIFICATION	7.384843327513679E-6	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999922833541968	WITHOUT_CLASSIFICATION	7.716645803266873E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.999993716260736	WITHOUT_CLASSIFICATION	6.2837392641387395E-6	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999929783193542	WITHOUT_CLASSIFICATION	7.021680645902107E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999929987710389	WITHOUT_CLASSIFICATION	7.0012289611945375E-6	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999922626068918	WITHOUT_CLASSIFICATION	7.737393108259387E-6	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999920612987669	WITHOUT_CLASSIFICATION	7.938701233093935E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999929818612945	WITHOUT_CLASSIFICATION	7.018138705533952E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999923173372312	WITHOUT_CLASSIFICATION	7.682662768777733E-6	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999938851736613	WITHOUT_CLASSIFICATION	6.114826338689812E-6	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999946724787552	WITHOUT_CLASSIFICATION	5.3275212447669085E-6	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999934545517094	WITHOUT_CLASSIFICATION	6.5454482905972545E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999932305222727	WITHOUT_CLASSIFICATION	6.7694777272495684E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999929883357995	WITHOUT_CLASSIFICATION	7.0116642005018804E-6	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999929863323862	WITHOUT_CLASSIFICATION	7.0136676137716364E-6	TEST
// line 886	WITHOUT_CLASSIFICATION	0.99999280491348	WITHOUT_CLASSIFICATION	7.195086519915357E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999929617328125	WITHOUT_CLASSIFICATION	7.038267187386866E-6	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999936901084521	WITHOUT_CLASSIFICATION	6.309891547870576E-6	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999925462312184	WITHOUT_CLASSIFICATION	7.4537687817018505E-6	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999926924397136	WITHOUT_CLASSIFICATION	7.307560286358081E-6	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999930015745455	WITHOUT_CLASSIFICATION	6.998425454542123E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.999992802355499	WITHOUT_CLASSIFICATION	7.197644500993658E-6	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999936203748327	WITHOUT_CLASSIFICATION	6.379625167259527E-6	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.999994593652335	WITHOUT_CLASSIFICATION	5.406347664977925E-6	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999949238593082	WITHOUT_CLASSIFICATION	5.0761406918120936E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999953413948451	WITHOUT_CLASSIFICATION	4.658605154757359E-6	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999946337552708	WITHOUT_CLASSIFICATION	5.366244729213111E-6	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999951249558628	WITHOUT_CLASSIFICATION	4.875044137237884E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999947268576427	WITHOUT_CLASSIFICATION	5.273142357297729E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999945822302434	WITHOUT_CLASSIFICATION	5.417769756588928E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999942798286027	WITHOUT_CLASSIFICATION	5.720171397332819E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999941351031013	WITHOUT_CLASSIFICATION	5.864896898765206E-6	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999940212109334	WITHOUT_CLASSIFICATION	5.978789066603098E-6	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999940084536977	WITHOUT_CLASSIFICATION	5.991546302384086E-6	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999948656336394	WITHOUT_CLASSIFICATION	5.134366360640181E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999948861758082	WITHOUT_CLASSIFICATION	5.113824191771977E-6	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999942933025558	WITHOUT_CLASSIFICATION	5.706697444133061E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999942816066385	WITHOUT_CLASSIFICATION	5.718393361519865E-6	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999949714565308	WITHOUT_CLASSIFICATION	5.0285434691979315E-6	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999946148000884	WITHOUT_CLASSIFICATION	5.385199911561385E-6	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999947803876722	WITHOUT_CLASSIFICATION	5.219612327830503E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999950988601288	WITHOUT_CLASSIFICATION	4.901139871127167E-6	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999945608940349	WITHOUT_CLASSIFICATION	5.439105965058834E-6	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999941143095634	WITHOUT_CLASSIFICATION	5.885690436525294E-6	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999947974666049	WITHOUT_CLASSIFICATION	5.202533395004768E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999945605617877	WITHOUT_CLASSIFICATION	5.4394382122678006E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999940528609902	WITHOUT_CLASSIFICATION	5.947139009791469E-6	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999943101088086	WITHOUT_CLASSIFICATION	5.689891191420102E-6	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999944901740788	WITHOUT_CLASSIFICATION	5.509825921111807E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999941146939317	WITHOUT_CLASSIFICATION	5.885306068230931E-6	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999945585525811	WITHOUT_CLASSIFICATION	5.4414474188659954E-6	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999943600162454	WITHOUT_CLASSIFICATION	5.639983754569111E-6	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999949728513364	WITHOUT_CLASSIFICATION	5.027148663517523E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999947066438974	WITHOUT_CLASSIFICATION	5.293356102554668E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999947066438974	WITHOUT_CLASSIFICATION	5.293356102554668E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999938591055925	WITHOUT_CLASSIFICATION	6.140894407551837E-6	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999948928243296	WITHOUT_CLASSIFICATION	5.107175670453562E-6	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999941662485429	WITHOUT_CLASSIFICATION	5.833751457124844E-6	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999943758081997	WITHOUT_CLASSIFICATION	5.62419180036499E-6	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.999994529055337	WITHOUT_CLASSIFICATION	5.470944662941861E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999950778455728	WITHOUT_CLASSIFICATION	4.922154427206868E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999939263558044	WITHOUT_CLASSIFICATION	6.073644195565912E-6	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999939064075138	WITHOUT_CLASSIFICATION	6.093592486162381E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999943242851602	WITHOUT_CLASSIFICATION	5.675714839843264E-6	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999946636990535	WITHOUT_CLASSIFICATION	5.3363009464176684E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999759133995093	WITHOUT_CLASSIFICATION	2.4086600490637344E-5	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999759133995093	WITHOUT_CLASSIFICATION	2.4086600490637344E-5	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.999991522943918	WITHOUT_CLASSIFICATION	8.477056082059066E-6	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999988194947855	WITHOUT_CLASSIFICATION	1.180505214519106E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999986407698791	WITHOUT_CLASSIFICATION	1.3592301208615126E-6	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999908419597	WITHOUT_CLASSIFICATION	9.158040266212522E-9	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999985513976741	WITHOUT_CLASSIFICATION	1.4486023259094343E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999985513976741	WITHOUT_CLASSIFICATION	1.4486023259094343E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999985513976741	WITHOUT_CLASSIFICATION	1.4486023259094343E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999985513976741	WITHOUT_CLASSIFICATION	1.4486023259094343E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999964186727593	WITHOUT_CLASSIFICATION	3.5813272407642626E-6	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999994455662472	WITHOUT_CLASSIFICATION	5.544337527739879E-7	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999939399823469	WITHOUT_CLASSIFICATION	6.0600176531216746E-6	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999925309359651	WITHOUT_CLASSIFICATION	7.4690640349714764E-6	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999940322628005	WITHOUT_CLASSIFICATION	5.96773719956273E-6	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999939622739845	WITHOUT_CLASSIFICATION	6.037726015451374E-6	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999937560629508	WITHOUT_CLASSIFICATION	6.2439370492231175E-6	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999927916904929	WITHOUT_CLASSIFICATION	7.208309506989377E-6	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999931542702886	WITHOUT_CLASSIFICATION	6.84572971142315E-6	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999935416718484	WITHOUT_CLASSIFICATION	6.458328151526248E-6	TEST
// line 555	WITHOUT_CLASSIFICATION	0.999991871263152	WITHOUT_CLASSIFICATION	8.128736847856242E-6	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999934608788282	WITHOUT_CLASSIFICATION	6.5391211717869356E-6	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999937202762632	WITHOUT_CLASSIFICATION	6.279723736820566E-6	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999923106928656	WITHOUT_CLASSIFICATION	7.689307134350232E-6	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999920520581291	WITHOUT_CLASSIFICATION	7.947941870811828E-6	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999931727330914	WITHOUT_CLASSIFICATION	6.827266908577772E-6	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999920606259429	WITHOUT_CLASSIFICATION	7.939374057111062E-6	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999943595355106	WITHOUT_CLASSIFICATION	5.640464489410155E-6	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999936509392727	WITHOUT_CLASSIFICATION	6.349060727320993E-6	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999929975486335	WITHOUT_CLASSIFICATION	7.002451366492907E-6	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999934617054342	WITHOUT_CLASSIFICATION	6.5382945657759985E-6	TEST
// line 905	WITHOUT_CLASSIFICATION	0.999992854362706	WITHOUT_CLASSIFICATION	7.1456372939111266E-6	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999926682083647	WITHOUT_CLASSIFICATION	7.331791635306612E-6	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999929699903369	WITHOUT_CLASSIFICATION	7.030009663094371E-6	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999925729134069	WITHOUT_CLASSIFICATION	7.4270865930930216E-6	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999946951062955	WITHOUT_CLASSIFICATION	5.304893704580541E-6	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999950076366875	WITHOUT_CLASSIFICATION	4.992363312477725E-6	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999950897037495	WITHOUT_CLASSIFICATION	4.910296250475058E-6	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999951257237303	WITHOUT_CLASSIFICATION	4.8742762697344964E-6	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999941923833462	WITHOUT_CLASSIFICATION	5.8076166537995985E-6	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999945714181455	WITHOUT_CLASSIFICATION	5.42858185444097E-6	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999944133552938	WITHOUT_CLASSIFICATION	5.586644706123128E-6	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999943533769108	WITHOUT_CLASSIFICATION	5.646623089254991E-6	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999943877463128	WITHOUT_CLASSIFICATION	5.612253687267561E-6	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.999994909058079	WITHOUT_CLASSIFICATION	5.090941921058521E-6	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.999994718218507	WITHOUT_CLASSIFICATION	5.281781492941873E-6	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999941826389277	WITHOUT_CLASSIFICATION	5.817361072366671E-6	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999940399429944	WITHOUT_CLASSIFICATION	5.960057005506498E-6	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999945694672954	WITHOUT_CLASSIFICATION	5.430532704630306E-6	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999942059725041	WITHOUT_CLASSIFICATION	5.794027495979643E-6	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.999994948312254	WITHOUT_CLASSIFICATION	5.051687745987821E-6	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999942883376903	WITHOUT_CLASSIFICATION	5.7116623097222526E-6	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999940674521977	WITHOUT_CLASSIFICATION	5.93254780236866E-6	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999940803707991	WITHOUT_CLASSIFICATION	5.91962920094186E-6	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999944843701962	WITHOUT_CLASSIFICATION	5.5156298037727075E-6	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999950192807363	WITHOUT_CLASSIFICATION	4.98071926370237E-6	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.999994262796668	WITHOUT_CLASSIFICATION	5.737203331953345E-6	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999939072670283	WITHOUT_CLASSIFICATION	6.0927329716526274E-6	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999949533490119	WITHOUT_CLASSIFICATION	5.0466509881842915E-6	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999942548890763	WITHOUT_CLASSIFICATION	5.745110923548524E-6	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999939573676386	WITHOUT_CLASSIFICATION	6.042632361378424E-6	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.99999410957823	WITHOUT_CLASSIFICATION	5.890421770045564E-6	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999953575455393	WITHOUT_CLASSIFICATION	4.642454460814103E-6	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999953265551073	WITHOUT_CLASSIFICATION	4.673444892708407E-6	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999951190335657	WITHOUT_CLASSIFICATION	4.880966434239758E-6	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999943948135922	WITHOUT_CLASSIFICATION	5.6051864077616085E-6	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999945809767921	WITHOUT_CLASSIFICATION	5.419023207958406E-6	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999943222358474	WITHOUT_CLASSIFICATION	5.677764152671789E-6	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999949157194532	WITHOUT_CLASSIFICATION	5.084280546770335E-6	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.999985160687689	WITHOUT_CLASSIFICATION	1.4839312310991577E-5	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999991085732829	WITHOUT_CLASSIFICATION	8.914267172570049E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999973504389484	WITHOUT_CLASSIFICATION	2.6495610515389513E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999973504389484	WITHOUT_CLASSIFICATION	2.6495610515389513E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999973504389484	WITHOUT_CLASSIFICATION	2.6495610515389513E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999973504389484	WITHOUT_CLASSIFICATION	2.6495610515389513E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999973504389484	WITHOUT_CLASSIFICATION	2.6495610515389513E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999973504389484	WITHOUT_CLASSIFICATION	2.6495610515389513E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999973504389484	WITHOUT_CLASSIFICATION	2.6495610515389513E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999985047544693	WITHOUT_CLASSIFICATION	1.495245530682777E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999985047544693	WITHOUT_CLASSIFICATION	1.495245530682777E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999985047544693	WITHOUT_CLASSIFICATION	1.495245530682777E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999985047544693	WITHOUT_CLASSIFICATION	1.495245530682777E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999992451856756	WITHOUT_CLASSIFICATION	7.548143244400296E-7	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999992451856756	WITHOUT_CLASSIFICATION	7.548143244400296E-7	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999997057651	WITHOUT_CLASSIFICATION	2.9423489425968484E-10	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999635573232	WITHOUT_CLASSIFICATION	3.6442676789079693E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999635573232	WITHOUT_CLASSIFICATION	3.6442676789079693E-7	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999992587796589	WITHOUT_CLASSIFICATION	7.412203411108861E-7	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999932435855116	WITHOUT_CLASSIFICATION	6.7564144883503416E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999273734435	WITHOUT_CLASSIFICATION	7.262655646375466E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999273734435	WITHOUT_CLASSIFICATION	7.262655646375466E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999273734435	WITHOUT_CLASSIFICATION	7.262655646375466E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999273734435	WITHOUT_CLASSIFICATION	7.262655646375466E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999273734435	WITHOUT_CLASSIFICATION	7.262655646375466E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999273734435	WITHOUT_CLASSIFICATION	7.262655646375466E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999273734435	WITHOUT_CLASSIFICATION	7.262655646375466E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998806649805	WITHOUT_CLASSIFICATION	1.1933501951001214E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998272576612	WITHOUT_CLASSIFICATION	1.7274233886250573E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999997519062925	WITHOUT_CLASSIFICATION	2.480937074975392E-6	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999997519062925	WITHOUT_CLASSIFICATION	2.480937074975392E-6	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999987783670833	WITHOUT_CLASSIFICATION	1.2216329166806787E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999977995856673	WITHOUT_CLASSIFICATION	2.200414332732691E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999977995856673	WITHOUT_CLASSIFICATION	2.200414332732691E-6	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999428788243	WITHOUT_CLASSIFICATION	5.7121175629932313E-8	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999999968826697	WITHOUT_CLASSIFICATION	3.1173301646630515E-9	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999946288429895	WITHOUT_CLASSIFICATION	5.371157010469077E-6	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999999211266055	WITHOUT_CLASSIFICATION	7.887339448163894E-8	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999996209796643	WITHOUT_CLASSIFICATION	3.790203357117183E-7	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999992105408174	WITHOUT_CLASSIFICATION	7.894591825540916E-7	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.999996485400273	WITHOUT_CLASSIFICATION	3.5145997271146812E-6	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999971658055543	WITHOUT_CLASSIFICATION	2.8341944457038196E-6	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999999942798941	WITHOUT_CLASSIFICATION	5.720105898501407E-8	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999986333801993	WITHOUT_CLASSIFICATION	1.3666198007701632E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9995498871608004	WITHOUT_CLASSIFICATION	4.5011283919960116E-4	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999702089142	WITHOUT_CLASSIFICATION	2.9791085797097512E-8	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997762921068	WITHOUT_CLASSIFICATION	2.2370789327194452E-7	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999999924890008	WITHOUT_CLASSIFICATION	7.51099905365402E-9	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999649478374475	WITHOUT_CLASSIFICATION	3.505216255254495E-5	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999998444449811	WITHOUT_CLASSIFICATION	1.5555501887022162E-7	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999995545406386	WITHOUT_CLASSIFICATION	4.4545936152527687E-7	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999746259492741	WITHOUT_CLASSIFICATION	2.5374050725883405E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999993189743561	WITHOUT_CLASSIFICATION	6.810256439141457E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999993189743561	WITHOUT_CLASSIFICATION	6.810256439141457E-7	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999980173775372	WITHOUT_CLASSIFICATION	1.9826224627259265E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999987788034219	WITHOUT_CLASSIFICATION	1.221196578082113E-6	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.999999799473475	WITHOUT_CLASSIFICATION	2.0052652495857054E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999333313651848	WITHOUT_CLASSIFICATION	6.666863481514418E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999784623021419	WITHOUT_CLASSIFICATION	2.1537697858131922E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999784623021419	WITHOUT_CLASSIFICATION	2.1537697858131922E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999784623021419	WITHOUT_CLASSIFICATION	2.1537697858131922E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999991898993283	WITHOUT_CLASSIFICATION	8.10100671728042E-7	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999979269833853	WITHOUT_CLASSIFICATION	2.07301661472021E-6	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999956406002267	WITHOUT_CLASSIFICATION	4.3593997733524115E-6	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999982698921748	WITHOUT_CLASSIFICATION	1.7301078252967206E-6	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999999053591382	WITHOUT_CLASSIFICATION	9.464086182997244E-8	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999986886643274	WITHOUT_CLASSIFICATION	1.311335672555015E-6	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999983677982793	WITHOUT_CLASSIFICATION	1.6322017206958148E-6	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999995943594179	WITHOUT_CLASSIFICATION	4.0564058201118657E-7	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999995450674544	WITHOUT_CLASSIFICATION	4.549325456604192E-7	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999988885437726	WITHOUT_CLASSIFICATION	1.1114562274414736E-6	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999916449921545	WITHOUT_CLASSIFICATION	8.355007845552469E-6	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999999608313479	WITHOUT_CLASSIFICATION	3.916865207299437E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9999941258944498	WITHOUT_CLASSIFICATION	5.8741055501591755E-6	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999987776040845	WITHOUT_CLASSIFICATION	1.2223959154911347E-6	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999330204006	WITHOUT_CLASSIFICATION	6.697959934391603E-8	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999998534965019	WITHOUT_CLASSIFICATION	1.4650349806960525E-7	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999997328169391	WITHOUT_CLASSIFICATION	2.671830609092111E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999993205418232	WITHOUT_CLASSIFICATION	6.794581767613832E-7	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999983719440699	WITHOUT_CLASSIFICATION	1.6280559300929745E-6	TEST
