// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9995084464418164	WITHOUT_CLASSIFICATION	4.915535581837634E-4	TEST
// TODO make an assert here	TEST	0.9998358944135219	WITHOUT_CLASSIFICATION	1.6410558647802655E-4	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.9894743875265097	WITHOUT_CLASSIFICATION	0.01052561247349015	TEST
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9998730816121173	WITHOUT_CLASSIFICATION	1.2691838788263636E-4	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9999765506642534	WITHOUT_CLASSIFICATION	2.3449335746700182E-5	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.99953920398698	WITHOUT_CLASSIFICATION	4.6079601301998675E-4	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999999790312841	WITHOUT_CLASSIFICATION	2.096871588200804E-8	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999962429007953	WITHOUT_CLASSIFICATION	3.7570992047633445E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999843448103258	WITHOUT_CLASSIFICATION	1.565518967413012E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999843448103258	WITHOUT_CLASSIFICATION	1.565518967413012E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999634183827876	WITHOUT_CLASSIFICATION	3.658161721250139E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999634183827876	WITHOUT_CLASSIFICATION	3.658161721250139E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999547268486942	WITHOUT_CLASSIFICATION	4.527315130579977E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999969378480021	WITHOUT_CLASSIFICATION	3.0621519978721017E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999964241263261	WITHOUT_CLASSIFICATION	3.5758736739715845E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999963471989834	WITHOUT_CLASSIFICATION	3.652801016522143E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999871836807818	WITHOUT_CLASSIFICATION	1.2816319218206231E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999871836807818	WITHOUT_CLASSIFICATION	1.2816319218206231E-5	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999963850865338	WITHOUT_CLASSIFICATION	3.6149134662653613E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999879429847099	WITHOUT_CLASSIFICATION	1.2057015290076097E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999879429847099	WITHOUT_CLASSIFICATION	1.2057015290076097E-5	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9999814903951578	WITHOUT_CLASSIFICATION	1.850960484214684E-5	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999855616187965	WITHOUT_CLASSIFICATION	1.443838120351719E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999855237331629	WITHOUT_CLASSIFICATION	1.4476266837113854E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999855237331629	WITHOUT_CLASSIFICATION	1.4476266837113854E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999855237331629	WITHOUT_CLASSIFICATION	1.4476266837113854E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999855237331629	WITHOUT_CLASSIFICATION	1.4476266837113854E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999855237331629	WITHOUT_CLASSIFICATION	1.4476266837113854E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999855237331629	WITHOUT_CLASSIFICATION	1.4476266837113854E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999855237331629	WITHOUT_CLASSIFICATION	1.4476266837113854E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.99996161906382	WITHOUT_CLASSIFICATION	3.838093618000523E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.99996161906382	WITHOUT_CLASSIFICATION	3.838093618000523E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.99996161906382	WITHOUT_CLASSIFICATION	3.838093618000523E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.99996161906382	WITHOUT_CLASSIFICATION	3.838093618000523E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.99996161906382	WITHOUT_CLASSIFICATION	3.838093618000523E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.99996161906382	WITHOUT_CLASSIFICATION	3.838093618000523E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.99996161906382	WITHOUT_CLASSIFICATION	3.838093618000523E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999505518014945	WITHOUT_CLASSIFICATION	4.944819850556048E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999505518014945	WITHOUT_CLASSIFICATION	4.944819850556048E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999505518014945	WITHOUT_CLASSIFICATION	4.944819850556048E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999505518014945	WITHOUT_CLASSIFICATION	4.944819850556048E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999505518014945	WITHOUT_CLASSIFICATION	4.944819850556048E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999505518014945	WITHOUT_CLASSIFICATION	4.944819850556048E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999865290168042	WITHOUT_CLASSIFICATION	1.3470983195829361E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999865290168042	WITHOUT_CLASSIFICATION	1.3470983195829361E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999865290168042	WITHOUT_CLASSIFICATION	1.3470983195829361E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999865290168042	WITHOUT_CLASSIFICATION	1.3470983195829361E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999865290168042	WITHOUT_CLASSIFICATION	1.3470983195829361E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999865290168042	WITHOUT_CLASSIFICATION	1.3470983195829361E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999873271058641	WITHOUT_CLASSIFICATION	1.2672894135890697E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999873271058641	WITHOUT_CLASSIFICATION	1.2672894135890697E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999873271058641	WITHOUT_CLASSIFICATION	1.2672894135890697E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999873271058641	WITHOUT_CLASSIFICATION	1.2672894135890697E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999873271058641	WITHOUT_CLASSIFICATION	1.2672894135890697E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999873271058641	WITHOUT_CLASSIFICATION	1.2672894135890697E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999873271058641	WITHOUT_CLASSIFICATION	1.2672894135890697E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999869981868199	WITHOUT_CLASSIFICATION	1.3001813180180371E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999869981868199	WITHOUT_CLASSIFICATION	1.3001813180180371E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999869981868199	WITHOUT_CLASSIFICATION	1.3001813180180371E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999869981868199	WITHOUT_CLASSIFICATION	1.3001813180180371E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999664437518245	WITHOUT_CLASSIFICATION	3.355624817550393E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999664437518245	WITHOUT_CLASSIFICATION	3.355624817550393E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999978136364048	WITHOUT_CLASSIFICATION	2.186363595049615E-6	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999982878498119	WITHOUT_CLASSIFICATION	1.7121501881295993E-6	TEST
// name	WITHOUT_CLASSIFICATION	0.9999984360425404	WITHOUT_CLASSIFICATION	1.5639574596531998E-6	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999959423799125	WITHOUT_CLASSIFICATION	4.057620087435307E-6	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999995554840275	WITHOUT_CLASSIFICATION	4.4451597246996343E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999966388418896	WITHOUT_CLASSIFICATION	3.361158110396791E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999966388418896	WITHOUT_CLASSIFICATION	3.361158110396791E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999966388418896	WITHOUT_CLASSIFICATION	3.361158110396791E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999966388418896	WITHOUT_CLASSIFICATION	3.361158110396791E-6	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999975929429112	WITHOUT_CLASSIFICATION	2.4070570887436233E-6	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999994812636069	WITHOUT_CLASSIFICATION	5.187363929907936E-7	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999983851471889	WITHOUT_CLASSIFICATION	1.6148528110522243E-6	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999990827190542	WITHOUT_CLASSIFICATION	9.172809458729462E-7	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999989799891948	WITHOUT_CLASSIFICATION	1.0200108051956317E-6	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999974317355481	WITHOUT_CLASSIFICATION	2.568264451765456E-6	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999994004884345	WITHOUT_CLASSIFICATION	5.995115655717315E-7	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999397109529	WITHOUT_CLASSIFICATION	6.028904705584592E-8	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999998584907477	WITHOUT_CLASSIFICATION	1.415092522524575E-7	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999972837720918	WITHOUT_CLASSIFICATION	2.7162279081276474E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999418899099	WITHOUT_CLASSIFICATION	5.81100901099199E-8	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999978004949515	WITHOUT_CLASSIFICATION	2.1995050485360384E-6	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.999957510515677	WITHOUT_CLASSIFICATION	4.2489484322991555E-5	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999997358031746	WITHOUT_CLASSIFICATION	2.641968255209632E-7	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999998794166518	WITHOUT_CLASSIFICATION	1.205833481943123E-6	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.999985905516685	WITHOUT_CLASSIFICATION	1.4094483315068711E-5	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999992928201468	WITHOUT_CLASSIFICATION	7.071798532412886E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999966388418896	WITHOUT_CLASSIFICATION	3.361158110396791E-6	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999996490796622	WITHOUT_CLASSIFICATION	3.509203377911786E-7	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.99999513035656	WITHOUT_CLASSIFICATION	4.869643440016155E-6	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999982709475227	WITHOUT_CLASSIFICATION	1.7290524773206727E-6	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999704478031528	WITHOUT_CLASSIFICATION	2.955219684724117E-5	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999981488005494	WITHOUT_CLASSIFICATION	1.8511994506749744E-6	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999991287445874	WITHOUT_CLASSIFICATION	8.712554126121772E-7	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999990162893414	WITHOUT_CLASSIFICATION	9.837106586122933E-7	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999997093876666	WITHOUT_CLASSIFICATION	2.9061233338628903E-7	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999994958739289	WITHOUT_CLASSIFICATION	5.04126071015452E-7	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999995008922962	WITHOUT_CLASSIFICATION	4.991077038708436E-7	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999107542264457	WITHOUT_CLASSIFICATION	8.924577355419618E-5	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999985797687552	WITHOUT_CLASSIFICATION	1.4202312448733581E-6	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999873952752112	WITHOUT_CLASSIFICATION	1.2604724788773124E-5	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999910970549977	WITHOUT_CLASSIFICATION	8.90294500229118E-6	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.999971797947331	WITHOUT_CLASSIFICATION	2.8202052668957437E-5	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999932831033732	WITHOUT_CLASSIFICATION	6.716896626679103E-6	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999981305455513	WITHOUT_CLASSIFICATION	1.8694544487414238E-6	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999996499841222	WITHOUT_CLASSIFICATION	3.500158778734558E-7	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9990763954009871	WITHOUT_CLASSIFICATION	9.236045990128054E-4	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999976254975932	WITHOUT_CLASSIFICATION	2.374502406700047E-6	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999976322590292	WITHOUT_CLASSIFICATION	2.3677409708800973E-6	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999944167376	WITHOUT_CLASSIFICATION	5.583262400026201E-6	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999962601313358	WITHOUT_CLASSIFICATION	3.739868664203773E-6	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9999514216603749	WITHOUT_CLASSIFICATION	4.8578339625148386E-5	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999994565346279	WITHOUT_CLASSIFICATION	5.434653720373315E-7	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.999992212505321	WITHOUT_CLASSIFICATION	7.78749467896017E-6	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999749572422337	WITHOUT_CLASSIFICATION	2.504275776635238E-5	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999991626608771	WITHOUT_CLASSIFICATION	8.373391229303617E-7	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999996023034615	WITHOUT_CLASSIFICATION	3.9769653850450903E-7	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.999999881824997	WITHOUT_CLASSIFICATION	1.1817500301195674E-7	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999981558782783	WITHOUT_CLASSIFICATION	1.8441217215647418E-6	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999992418015196	WITHOUT_CLASSIFICATION	7.581984804507818E-7	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999993007863707	WITHOUT_CLASSIFICATION	6.992136293831526E-7	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999995905845019	WITHOUT_CLASSIFICATION	4.0941549804111026E-7	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999994005650046	WITHOUT_CLASSIFICATION	5.994349953764732E-7	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999987870728143	WITHOUT_CLASSIFICATION	1.2129271857455807E-6	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999995406280111	WITHOUT_CLASSIFICATION	4.593719889878384E-7	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999983945940748	WITHOUT_CLASSIFICATION	1.605405925162265E-6	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999955178041732	WITHOUT_CLASSIFICATION	4.482195826865855E-6	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999982149079653	WITHOUT_CLASSIFICATION	1.7850920346402616E-6	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999995219510872	WITHOUT_CLASSIFICATION	4.780489128224091E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996528900051	WITHOUT_CLASSIFICATION	3.4710999480976744E-7	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999920908401851	WITHOUT_CLASSIFICATION	7.909159814924022E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999923343714239	WITHOUT_CLASSIFICATION	7.665628576071329E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999923343714239	WITHOUT_CLASSIFICATION	7.665628576071329E-6	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999937259933134	WITHOUT_CLASSIFICATION	6.27400668657651E-6	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.999999909110847	WITHOUT_CLASSIFICATION	9.088915300493737E-8	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999965785030213	WITHOUT_CLASSIFICATION	3.421496978724896E-6	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999998229772308	WITHOUT_CLASSIFICATION	1.7702276913641166E-7	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.99999630931671	WITHOUT_CLASSIFICATION	3.6906832900690504E-6	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999968950891861	WITHOUT_CLASSIFICATION	3.104910813912201E-6	TEST
// ???	WITHOUT_CLASSIFICATION	0.9999863224717577	WITHOUT_CLASSIFICATION	1.3677528242348267E-5	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999908917349554	WITHOUT_CLASSIFICATION	9.108265044688191E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996528900051	WITHOUT_CLASSIFICATION	3.4710999480976744E-7	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999994018974954	WITHOUT_CLASSIFICATION	5.981025046395074E-7	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999944570618328	WITHOUT_CLASSIFICATION	5.542938167225989E-6	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999087075643	WITHOUT_CLASSIFICATION	9.129243571041655E-8	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999365152732	WITHOUT_CLASSIFICATION	6.348472675931565E-8	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999989142763301	WITHOUT_CLASSIFICATION	1.0857236698686425E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999982967650026	WITHOUT_CLASSIFICATION	1.7032349973113368E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999982967650026	WITHOUT_CLASSIFICATION	1.7032349973113368E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999982967650026	WITHOUT_CLASSIFICATION	1.7032349973113368E-6	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999994150770846	WITHOUT_CLASSIFICATION	5.849229154593276E-7	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999929749909529	WITHOUT_CLASSIFICATION	7.025009047119379E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999999313597802	WITHOUT_CLASSIFICATION	6.864021985536485E-8	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999829076290172	WITHOUT_CLASSIFICATION	1.7092370982726244E-5	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999964594119429	WITHOUT_CLASSIFICATION	3.540588056985121E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999981767606553	WITHOUT_CLASSIFICATION	1.823239344765405E-6	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999993626061009	WITHOUT_CLASSIFICATION	6.373938991719726E-7	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999993731677085	WITHOUT_CLASSIFICATION	6.268322915452657E-7	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999982816848815	WITHOUT_CLASSIFICATION	1.7183151185716953E-6	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999982816848815	WITHOUT_CLASSIFICATION	1.7183151185716953E-6	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999906773740275	WITHOUT_CLASSIFICATION	9.322625972548198E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999948081902085	WITHOUT_CLASSIFICATION	5.191809791469331E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999986823178428	WITHOUT_CLASSIFICATION	1.3176821571691195E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999986823178428	WITHOUT_CLASSIFICATION	1.3176821571691195E-6	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999997585005169	WITHOUT_CLASSIFICATION	2.4149948308181006E-7	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999975814863634	WITHOUT_CLASSIFICATION	2.4185136365900704E-6	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.999982020308393	WITHOUT_CLASSIFICATION	1.797969160694107E-5	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999995636894874	WITHOUT_CLASSIFICATION	4.3631051265986114E-7	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999946895687086	WITHOUT_CLASSIFICATION	5.310431291297866E-6	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999994639327344	WITHOUT_CLASSIFICATION	5.360672657042432E-7	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999884732438272	WITHOUT_CLASSIFICATION	1.1526756172655909E-5	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999948686901605	WITHOUT_CLASSIFICATION	5.131309839450293E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999992541841507	WITHOUT_CLASSIFICATION	7.458158493905215E-7	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.999999782479746	WITHOUT_CLASSIFICATION	2.1752025409843624E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996528900051	WITHOUT_CLASSIFICATION	3.4710999480976744E-7	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999905018239167	WITHOUT_CLASSIFICATION	9.498176083358556E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999992065774315	WITHOUT_CLASSIFICATION	7.934225685342639E-7	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999990397231209	WITHOUT_CLASSIFICATION	9.602768792126407E-7	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999887764009019	WITHOUT_CLASSIFICATION	1.1223599098045606E-5	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999996485462126	WITHOUT_CLASSIFICATION	3.514537874135422E-7	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999924930181789	WITHOUT_CLASSIFICATION	7.506981821033974E-6	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999876821470599	WITHOUT_CLASSIFICATION	1.2317852940068656E-5	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.999989500708709	WITHOUT_CLASSIFICATION	1.0499291290996358E-5	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999998166516243	WITHOUT_CLASSIFICATION	1.833483756437651E-7	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.999998178251482	WITHOUT_CLASSIFICATION	1.8217485180613412E-6	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999997333557308	WITHOUT_CLASSIFICATION	2.66644269139935E-7	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.999999901637475	WITHOUT_CLASSIFICATION	9.836252502323934E-8	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999987201142455	WITHOUT_CLASSIFICATION	1.27988575452707E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999995472622872	WITHOUT_CLASSIFICATION	4.527377128150054E-7	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999784331397122	WITHOUT_CLASSIFICATION	2.156686028774313E-5	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.999999857105813	WITHOUT_CLASSIFICATION	1.4289418707841243E-7	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999999061881258	WITHOUT_CLASSIFICATION	9.381187420122317E-8	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999992139449959	WITHOUT_CLASSIFICATION	7.860550041770018E-7	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999992711941026	WITHOUT_CLASSIFICATION	7.288058975177284E-7	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.999999983264463	WITHOUT_CLASSIFICATION	1.673553688472298E-8	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999998597568016	WITHOUT_CLASSIFICATION	1.40243198465254E-7	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999389823604	WITHOUT_CLASSIFICATION	6.101763958650837E-8	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999636872506	WITHOUT_CLASSIFICATION	3.6312749389564685E-8	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999982124038626	WITHOUT_CLASSIFICATION	1.7875961374297029E-6	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999995632810846	WITHOUT_CLASSIFICATION	4.367189154075982E-7	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999998245178168	WITHOUT_CLASSIFICATION	1.7548218315070443E-7	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999956869411089	WITHOUT_CLASSIFICATION	4.313058891102664E-6	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.999999803262717	WITHOUT_CLASSIFICATION	1.967372831442585E-7	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.999999971240471	WITHOUT_CLASSIFICATION	2.8759528891897784E-8	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.999997719741318	WITHOUT_CLASSIFICATION	2.2802586820129933E-6	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999998164546996	WITHOUT_CLASSIFICATION	1.835453003657088E-7	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999995652836972	WITHOUT_CLASSIFICATION	4.347163028444778E-7	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999989804814539	WITHOUT_CLASSIFICATION	1.0195185460868522E-5	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999989443609574	WITHOUT_CLASSIFICATION	1.055639042674867E-6	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999948506872868	WITHOUT_CLASSIFICATION	5.149312713244635E-6	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999913834176851	WITHOUT_CLASSIFICATION	8.616582314856033E-6	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999994918668093	WITHOUT_CLASSIFICATION	5.081331907639584E-7	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999901370460929	WITHOUT_CLASSIFICATION	9.862953907122137E-6	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999991499013228	WITHOUT_CLASSIFICATION	8.50098677130716E-7	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999978270690146	WITHOUT_CLASSIFICATION	2.172930985351608E-6	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999999372176722	WITHOUT_CLASSIFICATION	6.278232777293393E-8	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999994795738409	WITHOUT_CLASSIFICATION	5.204261590153483E-7	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999994246280781	WITHOUT_CLASSIFICATION	5.753719219585562E-7	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.999999759236261	WITHOUT_CLASSIFICATION	2.407637388743538E-7	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999987963634416	WITHOUT_CLASSIFICATION	1.2036365584369024E-6	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999992787725558	WITHOUT_CLASSIFICATION	7.212274442695664E-7	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999995492974584	WITHOUT_CLASSIFICATION	4.507025416729936E-7	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999990896290268	WITHOUT_CLASSIFICATION	9.103709731558392E-7	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999995675007703	WITHOUT_CLASSIFICATION	4.324992296634394E-7	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999999577281571	WITHOUT_CLASSIFICATION	4.227184280543853E-8	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.999999935957242	WITHOUT_CLASSIFICATION	6.404275803177699E-8	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999995788080984	WITHOUT_CLASSIFICATION	4.211919015548932E-7	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999995379334988	WITHOUT_CLASSIFICATION	4.6206650105974835E-7	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999997224426636	WITHOUT_CLASSIFICATION	2.775573364265345E-7	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.999999602442345	WITHOUT_CLASSIFICATION	3.9755765509529506E-7	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999998771378503	WITHOUT_CLASSIFICATION	1.228621497015169E-7	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999821984013493	WITHOUT_CLASSIFICATION	1.7801598650710375E-5	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999999613171991	WITHOUT_CLASSIFICATION	3.8682800889687024E-8	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.99999974223097	WITHOUT_CLASSIFICATION	2.5776903002268734E-7	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999998160046406	WITHOUT_CLASSIFICATION	1.8399535942987677E-7	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999942018082597	WITHOUT_CLASSIFICATION	5.798191740240915E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999942018082597	WITHOUT_CLASSIFICATION	5.798191740240915E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999951201255944	WITHOUT_CLASSIFICATION	4.879874405511522E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999951201255944	WITHOUT_CLASSIFICATION	4.879874405511522E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999951710242706	WITHOUT_CLASSIFICATION	4.828975729363673E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999951710242706	WITHOUT_CLASSIFICATION	4.828975729363673E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999912159722261	WITHOUT_CLASSIFICATION	8.784027774027259E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999912159722261	WITHOUT_CLASSIFICATION	8.784027774027259E-6	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999995358214424	WITHOUT_CLASSIFICATION	4.6417855766883434E-7	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999992563369523	WITHOUT_CLASSIFICATION	7.436630477907741E-7	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999985880056647	WITHOUT_CLASSIFICATION	1.4119943353250996E-6	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999965755431212	WITHOUT_CLASSIFICATION	3.42445687884215E-6	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999985931840885	WITHOUT_CLASSIFICATION	1.4068159115255927E-6	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.999984779329218	WITHOUT_CLASSIFICATION	1.5220670781943315E-5	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999912375324685	WITHOUT_CLASSIFICATION	8.762467531480944E-6	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999997141432911	WITHOUT_CLASSIFICATION	2.858567088977958E-7	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999996682785119	WITHOUT_CLASSIFICATION	3.317214881130024E-7	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999982927136917	WITHOUT_CLASSIFICATION	1.7072863082948046E-6	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999998102896798	WITHOUT_CLASSIFICATION	1.897103202297284E-7	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.999999007804042	WITHOUT_CLASSIFICATION	9.921959579508244E-7	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999968615655498	WITHOUT_CLASSIFICATION	3.1384344502154603E-6	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999995826437877	WITHOUT_CLASSIFICATION	4.1735621220029396E-7	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999998695528666	WITHOUT_CLASSIFICATION	1.304471334747716E-7	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999958409157512	WITHOUT_CLASSIFICATION	4.159084248780202E-6	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999599920358	WITHOUT_CLASSIFICATION	4.000796424097675E-8	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999991285916542	WITHOUT_CLASSIFICATION	8.714083457346598E-7	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999816961692723	WITHOUT_CLASSIFICATION	1.830383072756625E-5	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999868533888999	WITHOUT_CLASSIFICATION	1.3146611100094944E-5	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999994977156347	WITHOUT_CLASSIFICATION	5.022843653197969E-7	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.999997638480726	WITHOUT_CLASSIFICATION	2.3615192740297885E-6	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999974862558707	WITHOUT_CLASSIFICATION	2.513744129238766E-6	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999982319525471	WITHOUT_CLASSIFICATION	1.7680474529272085E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999982652159685	WITHOUT_CLASSIFICATION	1.7347840315294952E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999944506853992	WITHOUT_CLASSIFICATION	5.549314600868404E-6	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999979958920705	WITHOUT_CLASSIFICATION	2.004107929544454E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999983056935609	WITHOUT_CLASSIFICATION	1.694306439137462E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999983056935609	WITHOUT_CLASSIFICATION	1.694306439137462E-6	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999985951174696	WITHOUT_CLASSIFICATION	1.4048825303510952E-6	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999984419441668	WITHOUT_CLASSIFICATION	1.5580558333178766E-6	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999945734423357	WITHOUT_CLASSIFICATION	5.426557664314295E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999961451792739	WITHOUT_CLASSIFICATION	3.854820726007688E-6	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999973118221549	WITHOUT_CLASSIFICATION	2.6881778450300946E-6	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999931360671059	WITHOUT_CLASSIFICATION	6.863932894111095E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999961289385029	WITHOUT_CLASSIFICATION	3.871061497048202E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999961289385029	WITHOUT_CLASSIFICATION	3.871061497048202E-6	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.999998403366393	WITHOUT_CLASSIFICATION	1.596633606925872E-6	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9988341186066576	WITHOUT_CLASSIFICATION	0.0011658813933423905	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.999993166061771	WITHOUT_CLASSIFICATION	6.833938228936219E-6	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.999993166061771	WITHOUT_CLASSIFICATION	6.833938228936219E-6	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999998679671672	WITHOUT_CLASSIFICATION	1.320328327772406E-7	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999961418564257	WITHOUT_CLASSIFICATION	3.858143574307431E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999961418564257	WITHOUT_CLASSIFICATION	3.858143574307431E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999938847366101	WITHOUT_CLASSIFICATION	6.115263389952999E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999938847366101	WITHOUT_CLASSIFICATION	6.115263389952999E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999901049916275	WITHOUT_CLASSIFICATION	9.895008372371289E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999901049916275	WITHOUT_CLASSIFICATION	9.895008372371289E-6	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9999912163313962	WITHOUT_CLASSIFICATION	8.783668603723827E-6	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999983142406051	WITHOUT_CLASSIFICATION	1.6857593948233718E-6	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999998863650118	WITHOUT_CLASSIFICATION	1.1363498822779021E-7	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999996457693782	WITHOUT_CLASSIFICATION	3.5423062179246734E-7	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.999999926824017	WITHOUT_CLASSIFICATION	7.317598307213434E-8	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999998854630783	WITHOUT_CLASSIFICATION	1.145369216882753E-7	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999993273428368	WITHOUT_CLASSIFICATION	6.726571631810777E-7	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.999999789730399	WITHOUT_CLASSIFICATION	2.1026960094491033E-7	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999993273428368	WITHOUT_CLASSIFICATION	6.726571631810777E-7	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9997043125894182	WITHOUT_CLASSIFICATION	2.9568741058182596E-4	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999982722222424	WITHOUT_CLASSIFICATION	1.7277777576439912E-6	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999987583698005	WITHOUT_CLASSIFICATION	1.2416301995430225E-6	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999870360620446	WITHOUT_CLASSIFICATION	1.296393795522962E-5	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999991942071035	WITHOUT_CLASSIFICATION	8.057928965572214E-7	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999978514432774	WITHOUT_CLASSIFICATION	2.148556722563783E-6	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999957769235244	WITHOUT_CLASSIFICATION	4.223076475545732E-6	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999928782650529	WITHOUT_CLASSIFICATION	7.121734947078672E-6	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999368678363	WITHOUT_CLASSIFICATION	6.313216373025202E-8	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.99999972894003	WITHOUT_CLASSIFICATION	2.710599700068498E-7	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.99999907287902	WITHOUT_CLASSIFICATION	9.27120980070515E-7	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999835072427063	WITHOUT_CLASSIFICATION	1.6492757293631125E-5	TEST
// file not given	WITHOUT_CLASSIFICATION	0.999998763511115	WITHOUT_CLASSIFICATION	1.236488884933286E-6	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999995796115053	WITHOUT_CLASSIFICATION	4.2038849469609693E-7	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999939158004144	WITHOUT_CLASSIFICATION	6.084199585579701E-6	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999995021266804	WITHOUT_CLASSIFICATION	4.978733196052026E-7	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999972414496181	WITHOUT_CLASSIFICATION	2.758550381981238E-6	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999992912757125	WITHOUT_CLASSIFICATION	7.087242875287759E-7	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999935527594418	WITHOUT_CLASSIFICATION	6.447240558148329E-6	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999767116560319	WITHOUT_CLASSIFICATION	2.328834396817705E-5	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999968100443601	WITHOUT_CLASSIFICATION	3.189955639878185E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999995914383316	WITHOUT_CLASSIFICATION	4.085616683311819E-7	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999981799284146	WITHOUT_CLASSIFICATION	1.8200715854340386E-6	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999992764327592	WITHOUT_CLASSIFICATION	7.23567240854632E-7	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999910010047083	WITHOUT_CLASSIFICATION	8.998995291719486E-6	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999996418231555	WITHOUT_CLASSIFICATION	3.581768445731031E-7	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999986982035685	WITHOUT_CLASSIFICATION	1.3017964315338352E-6	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.999994420230276	WITHOUT_CLASSIFICATION	5.579769724153038E-6	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999997765266302	WITHOUT_CLASSIFICATION	2.2347336984318506E-7	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999996440768475	WITHOUT_CLASSIFICATION	3.5592315248787523E-7	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999993681830456	WITHOUT_CLASSIFICATION	6.318169544690697E-7	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999083283071	WITHOUT_CLASSIFICATION	9.167169284401933E-8	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999998043409111	WITHOUT_CLASSIFICATION	1.9565908884149006E-7	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999986583768199	WITHOUT_CLASSIFICATION	1.3416231800374346E-6	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999992973001871	WITHOUT_CLASSIFICATION	7.026998129397308E-7	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999983281184726	WITHOUT_CLASSIFICATION	1.6718815274099293E-6	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999991327834468	WITHOUT_CLASSIFICATION	8.672165533469972E-7	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999998047576648	WITHOUT_CLASSIFICATION	1.952423352183403E-7	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.999999886681958	WITHOUT_CLASSIFICATION	1.133180419314053E-7	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999995109553144	WITHOUT_CLASSIFICATION	4.890446856615936E-7	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999993407575202	WITHOUT_CLASSIFICATION	6.592424798642476E-7	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999996650698211	WITHOUT_CLASSIFICATION	3.349301788823288E-7	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.999999299227953	WITHOUT_CLASSIFICATION	7.007720469354733E-7	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999994415487282	WITHOUT_CLASSIFICATION	5.584512718472532E-7	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999422634892	WITHOUT_CLASSIFICATION	5.7736510833168016E-8	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999996911040139	WITHOUT_CLASSIFICATION	3.088959860933287E-7	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999977922580354	WITHOUT_CLASSIFICATION	2.207741964519116E-6	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999219941608	WITHOUT_CLASSIFICATION	7.800583915625798E-8	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999994546245199	WITHOUT_CLASSIFICATION	5.453754800990077E-7	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.999997800582496	WITHOUT_CLASSIFICATION	2.199417504073942E-6	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999994479431569	WITHOUT_CLASSIFICATION	5.520568431277811E-7	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999597335512	WITHOUT_CLASSIFICATION	4.026644882898941E-8	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999790392506436	WITHOUT_CLASSIFICATION	2.0960749356411787E-5	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999981296222302	WITHOUT_CLASSIFICATION	1.8703777697417945E-6	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999997535077128	WITHOUT_CLASSIFICATION	2.4649228728599937E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999997535077128	WITHOUT_CLASSIFICATION	2.4649228728599937E-7	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999960130268962	WITHOUT_CLASSIFICATION	3.986973103759968E-6	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999974126877303	WITHOUT_CLASSIFICATION	2.5873122695363024E-6	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999989565845329	WITHOUT_CLASSIFICATION	1.0434154671953981E-6	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999997867021628	WITHOUT_CLASSIFICATION	2.132978371788119E-7	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999994955781262	WITHOUT_CLASSIFICATION	5.044218737954008E-7	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999947966184786	WITHOUT_CLASSIFICATION	5.203381521452779E-6	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.999989869345078	WITHOUT_CLASSIFICATION	1.0130654921944718E-5	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999999657206292	WITHOUT_CLASSIFICATION	3.427937087460448E-8	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999992236024345	WITHOUT_CLASSIFICATION	7.763975654860213E-7	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999966933307916	WITHOUT_CLASSIFICATION	3.306669208337757E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999997225635268	WITHOUT_CLASSIFICATION	2.7743647324788175E-7	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999997225635268	WITHOUT_CLASSIFICATION	2.7743647324788175E-7	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999974177855409	WITHOUT_CLASSIFICATION	2.582214459078601E-6	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999997981430138	WITHOUT_CLASSIFICATION	2.0185698627666715E-7	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997717442787842	WITHOUT_CLASSIFICATION	2.282557212159001E-4	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999998867227605	WITHOUT_CLASSIFICATION	1.1327723942355337E-7	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999995358211284	WITHOUT_CLASSIFICATION	4.641788715910078E-7	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999200566567	WITHOUT_CLASSIFICATION	7.994334325833952E-8	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999995795467774	WITHOUT_CLASSIFICATION	4.2045322264080205E-7	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999991829177582	WITHOUT_CLASSIFICATION	8.170822417504085E-7	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999993352549148	WITHOUT_CLASSIFICATION	6.647450852740175E-7	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999991982922996	WITHOUT_CLASSIFICATION	8.017077003237606E-7	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999998051661643	WITHOUT_CLASSIFICATION	1.9483383576186732E-7	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999983698729582	WITHOUT_CLASSIFICATION	1.6301270417802745E-6	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999993335574847	WITHOUT_CLASSIFICATION	6.664425152200498E-7	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999993335574847	WITHOUT_CLASSIFICATION	6.664425152200498E-7	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999994388711735	WITHOUT_CLASSIFICATION	5.611288264515439E-7	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999990943239846	WITHOUT_CLASSIFICATION	9.056760154158742E-7	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999996590108488	WITHOUT_CLASSIFICATION	3.4098915133822267E-7	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999824729265258	WITHOUT_CLASSIFICATION	1.7527073474265253E-5	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999996224632239	WITHOUT_CLASSIFICATION	3.7753677608566884E-7	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999980331438927	WITHOUT_CLASSIFICATION	1.9668561073857027E-6	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999993976945508	WITHOUT_CLASSIFICATION	6.02305449164711E-7	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999994288976438	WITHOUT_CLASSIFICATION	5.711023561243186E-7	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999983380898859	WITHOUT_CLASSIFICATION	1.6619101139979582E-6	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999996697215989	WITHOUT_CLASSIFICATION	3.302784010498958E-7	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9997717442787842	WITHOUT_CLASSIFICATION	2.282557212159001E-4	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999998403313168	WITHOUT_CLASSIFICATION	1.5966868310727925E-7	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999875313068085	WITHOUT_CLASSIFICATION	1.2468693191480904E-5	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999905763418431	WITHOUT_CLASSIFICATION	9.423658156943382E-6	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999996330669634	WITHOUT_CLASSIFICATION	3.669330365490547E-7	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999997262179521	WITHOUT_CLASSIFICATION	2.7378204786804754E-7	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999997112073461	WITHOUT_CLASSIFICATION	2.887926538777276E-7	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.999997669129076	WITHOUT_CLASSIFICATION	2.3308709241063047E-6	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999987200829947	WITHOUT_CLASSIFICATION	1.2799170053614321E-6	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.999999953834377	WITHOUT_CLASSIFICATION	4.616562298894855E-8	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999995169753775	WITHOUT_CLASSIFICATION	4.830246225935678E-7	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999993097681834	WITHOUT_CLASSIFICATION	6.902318166034952E-7	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999997867848943	WITHOUT_CLASSIFICATION	2.1321510557829415E-7	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.999999081579625	WITHOUT_CLASSIFICATION	9.184203750008696E-7	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999907523338699	WITHOUT_CLASSIFICATION	9.247666130008361E-6	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999852703639142	WITHOUT_CLASSIFICATION	1.472963608593238E-5	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999996094256907	WITHOUT_CLASSIFICATION	3.90574309313984E-7	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999977218193482	WITHOUT_CLASSIFICATION	2.2781806517270815E-6	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999992353620101	WITHOUT_CLASSIFICATION	7.64637990034875E-7	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999988792402682	WITHOUT_CLASSIFICATION	1.1207597317260348E-6	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999961767721847	WITHOUT_CLASSIFICATION	3.823227815356182E-6	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999996241112041	WITHOUT_CLASSIFICATION	3.75888795842488E-7	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.999999137816936	WITHOUT_CLASSIFICATION	8.621830640202602E-7	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999984325589896	WITHOUT_CLASSIFICATION	1.5674410105046543E-6	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.999998617686054	WITHOUT_CLASSIFICATION	1.3823139460193111E-6	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999994404195759	WITHOUT_CLASSIFICATION	5.595804242001732E-7	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999977787168461	WITHOUT_CLASSIFICATION	2.221283153887076E-6	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.999988314474686	WITHOUT_CLASSIFICATION	1.1685525314175266E-5	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999991046653272	WITHOUT_CLASSIFICATION	8.953346728510767E-7	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999979934613009	WITHOUT_CLASSIFICATION	2.006538699211358E-6	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999989962642056	WITHOUT_CLASSIFICATION	1.003735794395292E-6	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.999979746360425	WITHOUT_CLASSIFICATION	2.0253639575117436E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.999979746360425	WITHOUT_CLASSIFICATION	2.0253639575117436E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999962007585487	WITHOUT_CLASSIFICATION	3.7992414513186005E-6	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999976942861156	WITHOUT_CLASSIFICATION	2.3057138844265787E-6	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.999999303333501	WITHOUT_CLASSIFICATION	6.966664990452809E-7	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.999998400005221	WITHOUT_CLASSIFICATION	1.5999947789828672E-6	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999912727888055	WITHOUT_CLASSIFICATION	8.727211194436164E-6	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999986285611027	WITHOUT_CLASSIFICATION	1.3714388973453456E-6	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999996528900051	WITHOUT_CLASSIFICATION	3.4710999480976744E-7	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999964398133757	WITHOUT_CLASSIFICATION	3.56018662432894E-6	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999939973903581	WITHOUT_CLASSIFICATION	6.002609641977028E-6	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999977900744935	WITHOUT_CLASSIFICATION	2.2099255064861336E-6	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999998396066755	WITHOUT_CLASSIFICATION	1.6039332445243625E-7	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.999998081288896	WITHOUT_CLASSIFICATION	1.9187111041005043E-6	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999826618954313	WITHOUT_CLASSIFICATION	1.7338104568702573E-5	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999978270690146	WITHOUT_CLASSIFICATION	2.172930985351608E-6	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999037362135	WITHOUT_CLASSIFICATION	9.62637863967466E-8	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999032574307019	WITHOUT_CLASSIFICATION	9.674256929821796E-5	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999878414001	WITHOUT_CLASSIFICATION	1.2158599840133048E-8	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999989567202562	WITHOUT_CLASSIFICATION	1.0432797437587411E-6	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999998485007566	WITHOUT_CLASSIFICATION	1.5149924332253244E-7	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999949267364858	WITHOUT_CLASSIFICATION	5.073263514105383E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999928036803507	WITHOUT_CLASSIFICATION	7.196319649285526E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999928036803507	WITHOUT_CLASSIFICATION	7.196319649285526E-6	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.999999649506996	WITHOUT_CLASSIFICATION	3.50493003964134E-7	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.999999890710844	WITHOUT_CLASSIFICATION	1.0928915597157146E-7	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999979446718424	WITHOUT_CLASSIFICATION	2.0553281574959425E-6	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999983993422763	WITHOUT_CLASSIFICATION	1.6006577237563357E-6	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999992919125688	WITHOUT_CLASSIFICATION	7.080874312629459E-7	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999998258850503	WITHOUT_CLASSIFICATION	1.7411494975226168E-7	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.999999956118718	WITHOUT_CLASSIFICATION	4.388128201681913E-8	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999998812197518	WITHOUT_CLASSIFICATION	1.1878024811440511E-7	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999966937666354	WITHOUT_CLASSIFICATION	3.3062333645995127E-6	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999973285206146	WITHOUT_CLASSIFICATION	2.671479385281765E-6	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999951418852022	WITHOUT_CLASSIFICATION	4.858114797767327E-6	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999957558722248	WITHOUT_CLASSIFICATION	4.2441277751577745E-6	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999955849171294	WITHOUT_CLASSIFICATION	4.4150828705860835E-6	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999995970633048	WITHOUT_CLASSIFICATION	4.0293669528027924E-7	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999990237672977	WITHOUT_CLASSIFICATION	9.762327023570232E-7	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999902948646079	WITHOUT_CLASSIFICATION	9.705135392219415E-6	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999993735022783	WITHOUT_CLASSIFICATION	6.264977217597608E-7	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999990767280078	WITHOUT_CLASSIFICATION	9.232719922702415E-7	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999994751383305	WITHOUT_CLASSIFICATION	5.248616693879306E-7	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999994460397704	WITHOUT_CLASSIFICATION	5.539602295264777E-7	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999992492365583	WITHOUT_CLASSIFICATION	7.507634416613385E-7	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999982983357222	WITHOUT_CLASSIFICATION	1.7016642778025138E-6	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999993807365347	WITHOUT_CLASSIFICATION	6.19263465258296E-7	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999855093354814	WITHOUT_CLASSIFICATION	1.4490664518729834E-5	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999998420180072	WITHOUT_CLASSIFICATION	1.5798199282382794E-7	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999995103239941	WITHOUT_CLASSIFICATION	4.896760057892085E-7	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999844566487642	WITHOUT_CLASSIFICATION	1.554335123580034E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999993318043586	WITHOUT_CLASSIFICATION	6.681956413891325E-7	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999994329989574	WITHOUT_CLASSIFICATION	5.670010425652456E-7	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999755294493086	WITHOUT_CLASSIFICATION	2.447055069142134E-5	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999988498842787	WITHOUT_CLASSIFICATION	1.150115721263978E-6	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.999998082868214	WITHOUT_CLASSIFICATION	1.9171317860375517E-6	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999983730234803	WITHOUT_CLASSIFICATION	1.6269765197011416E-6	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.9999881508013211	WITHOUT_CLASSIFICATION	1.1849198679001012E-5	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999952628568246	WITHOUT_CLASSIFICATION	4.737143175409752E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999995273251301	WITHOUT_CLASSIFICATION	4.7267487001913987E-7	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999997920525671	WITHOUT_CLASSIFICATION	2.0794743290865222E-7	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999992797651893	WITHOUT_CLASSIFICATION	7.202348107232855E-7	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999996386003105	WITHOUT_CLASSIFICATION	3.6139968953818894E-7	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999985040771717	WITHOUT_CLASSIFICATION	1.4959228282240571E-6	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.99999925591272	WITHOUT_CLASSIFICATION	7.440872799628117E-7	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999975764887589	WITHOUT_CLASSIFICATION	2.4235112410299636E-6	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999959896100011	WITHOUT_CLASSIFICATION	4.010389998921482E-6	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999958992832273	WITHOUT_CLASSIFICATION	4.1007167726887545E-6	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999988490755173	WITHOUT_CLASSIFICATION	1.1509244826911293E-6	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999958992832273	WITHOUT_CLASSIFICATION	4.1007167726887545E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999997746493468	WITHOUT_CLASSIFICATION	2.2535065316956785E-7	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9999922044097367	WITHOUT_CLASSIFICATION	7.795590263230474E-6	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999993516316157	WITHOUT_CLASSIFICATION	6.483683843103438E-7	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9984692093294886	WITHOUT_CLASSIFICATION	0.0015307906705113918	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999977674672437	WITHOUT_CLASSIFICATION	2.2325327562549603E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.999999463980047	WITHOUT_CLASSIFICATION	5.360199529751975E-7	TEST
// write	WITHOUT_CLASSIFICATION	0.999998230109259	WITHOUT_CLASSIFICATION	1.7698907409695036E-6	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999922724595203	WITHOUT_CLASSIFICATION	7.727540479701563E-6	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999998817404717	WITHOUT_CLASSIFICATION	1.1825952821604942E-7	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999811081118202	WITHOUT_CLASSIFICATION	1.8891888179858137E-5	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999989504658643	WITHOUT_CLASSIFICATION	1.0495341357794077E-6	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999938899312161	WITHOUT_CLASSIFICATION	6.110068783940151E-6	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999995365024038	WITHOUT_CLASSIFICATION	4.6349759630965026E-7	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999999302863612	WITHOUT_CLASSIFICATION	6.971363881447607E-8	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999888819887893	WITHOUT_CLASSIFICATION	1.111801121058379E-5	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9998389526319355	WITHOUT_CLASSIFICATION	1.6104736806442965E-4	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999344785864	WITHOUT_CLASSIFICATION	6.552141355469142E-8	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999969530458267	WITHOUT_CLASSIFICATION	3.046954173415597E-6	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999894176591194	WITHOUT_CLASSIFICATION	1.0582340880500613E-5	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999965731987551	WITHOUT_CLASSIFICATION	3.426801244805958E-6	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999998810032293	WITHOUT_CLASSIFICATION	1.1899677065277549E-7	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999991281394455	WITHOUT_CLASSIFICATION	8.718605546747625E-7	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999974862789032	WITHOUT_CLASSIFICATION	2.513721096716954E-6	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999990701845963	WITHOUT_CLASSIFICATION	9.298154037979077E-7	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999991157114564	WITHOUT_CLASSIFICATION	8.842885435829726E-7	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999991153961244	WITHOUT_CLASSIFICATION	8.846038756318732E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999994364521207	WITHOUT_CLASSIFICATION	5.635478792147329E-7	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.999999599077012	WITHOUT_CLASSIFICATION	4.009229880236584E-7	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999418899099	WITHOUT_CLASSIFICATION	5.81100901099199E-8	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999973648279973	WITHOUT_CLASSIFICATION	2.635172002808853E-6	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999893780154538	WITHOUT_CLASSIFICATION	1.062198454624976E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999805875586093	WITHOUT_CLASSIFICATION	1.9412441390656416E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.999986884230775	WITHOUT_CLASSIFICATION	1.3115769225025743E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.999999802910039	WITHOUT_CLASSIFICATION	1.97089961102709E-7	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999998118237646	WITHOUT_CLASSIFICATION	1.88176235324788E-7	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999994825122516	WITHOUT_CLASSIFICATION	5.174877484515834E-7	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.999999699914722	WITHOUT_CLASSIFICATION	3.000852779967728E-7	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.999999567023205	WITHOUT_CLASSIFICATION	4.3297679487688283E-7	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999959642267273	WITHOUT_CLASSIFICATION	4.035773272717973E-6	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.999982849722388	WITHOUT_CLASSIFICATION	1.715027761201853E-5	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999998986842337	WITHOUT_CLASSIFICATION	1.0131576632751395E-7	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999990384856249	WITHOUT_CLASSIFICATION	9.615143750577746E-7	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999989446977076	WITHOUT_CLASSIFICATION	1.0553022925315627E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999961103027636	WITHOUT_CLASSIFICATION	3.889697236421751E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999961103027636	WITHOUT_CLASSIFICATION	3.889697236421751E-6	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999925050473868	WITHOUT_CLASSIFICATION	7.494952613147093E-6	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999974430147381	WITHOUT_CLASSIFICATION	2.5569852619306555E-6	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999995691258621	WITHOUT_CLASSIFICATION	4.308741379870838E-7	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999991459712495	WITHOUT_CLASSIFICATION	8.540287504979215E-7	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999113149425	WITHOUT_CLASSIFICATION	8.868505753633099E-8	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999996552747256	WITHOUT_CLASSIFICATION	3.447252743976291E-7	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999997481250926	WITHOUT_CLASSIFICATION	2.518749073088874E-7	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999985708807876	WITHOUT_CLASSIFICATION	1.4291192124683768E-6	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999982774388324	WITHOUT_CLASSIFICATION	1.7225611676312417E-6	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999023178506	WITHOUT_CLASSIFICATION	9.768214931259454E-8	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999997456624422	WITHOUT_CLASSIFICATION	2.543375577404999E-7	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999306601312	WITHOUT_CLASSIFICATION	6.933986888388565E-8	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.999997950369474	WITHOUT_CLASSIFICATION	2.049630526014818E-6	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999974263558563	WITHOUT_CLASSIFICATION	2.5736441436478887E-6	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999989253812093	WITHOUT_CLASSIFICATION	1.074618790738998E-6	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999996024268194	WITHOUT_CLASSIFICATION	3.9757318057455275E-7	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999995881819795	WITHOUT_CLASSIFICATION	4.118180204166662E-7	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.999999857997558	WITHOUT_CLASSIFICATION	1.420024420180873E-7	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999981309693147	WITHOUT_CLASSIFICATION	1.869030685372358E-6	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999997014836367	WITHOUT_CLASSIFICATION	2.985163633100701E-7	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.999911505248737	WITHOUT_CLASSIFICATION	8.849475126293059E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999509487135837	WITHOUT_CLASSIFICATION	4.905128641623229E-5	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999999054696955	WITHOUT_CLASSIFICATION	9.453030442650252E-8	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999999115543542	WITHOUT_CLASSIFICATION	8.844564576805606E-8	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999917074169142	WITHOUT_CLASSIFICATION	8.292583085722905E-6	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999998183547101	WITHOUT_CLASSIFICATION	1.81645290028345E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999996077736113	WITHOUT_CLASSIFICATION	3.922263886757519E-7	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999982412877448	WITHOUT_CLASSIFICATION	1.75871225519327E-6	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999985188742225	WITHOUT_CLASSIFICATION	1.4811257774526895E-6	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999994385249668	WITHOUT_CLASSIFICATION	5.614750332162333E-7	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999989978233496	WITHOUT_CLASSIFICATION	1.0021766504392327E-6	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999999221538908	WITHOUT_CLASSIFICATION	7.784610929928396E-8	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999901503953	WITHOUT_CLASSIFICATION	9.849604705122826E-9	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999998107916082	WITHOUT_CLASSIFICATION	1.892083917948084E-7	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999998973859524	WITHOUT_CLASSIFICATION	1.0261404752637701E-7	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999910144785	WITHOUT_CLASSIFICATION	8.985521527975261E-9	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999915523311093	WITHOUT_CLASSIFICATION	8.447668890782627E-6	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999853542963074	WITHOUT_CLASSIFICATION	1.4645703692440313E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999901650349537	WITHOUT_CLASSIFICATION	9.834965046281962E-6	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999929224756657	WITHOUT_CLASSIFICATION	7.077524334274346E-6	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999937063441371	WITHOUT_CLASSIFICATION	6.2936558629383556E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999943591789553	WITHOUT_CLASSIFICATION	5.64082104469491E-6	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999918011738268	WITHOUT_CLASSIFICATION	8.198826173239554E-6	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999916231131	WITHOUT_CLASSIFICATION	8.376886925543274E-9	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999993501888915	WITHOUT_CLASSIFICATION	6.498111085222849E-7	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999957035810725	WITHOUT_CLASSIFICATION	4.296418927515168E-6	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999977979143161	WITHOUT_CLASSIFICATION	2.202085683787599E-6	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999991695254976	WITHOUT_CLASSIFICATION	8.304745023464584E-7	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9999764855857868	WITHOUT_CLASSIFICATION	2.3514414213247854E-5	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999996071495716	WITHOUT_CLASSIFICATION	3.928504284304333E-7	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999256337231	WITHOUT_CLASSIFICATION	7.436627694441384E-8	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999996101048959	WITHOUT_CLASSIFICATION	3.898951040683444E-7	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999998473633084	WITHOUT_CLASSIFICATION	1.5263669155554388E-7	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999998163997678	WITHOUT_CLASSIFICATION	1.8360023222600176E-7	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.999999719390774	WITHOUT_CLASSIFICATION	2.806092259486782E-7	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999995713333023	WITHOUT_CLASSIFICATION	4.286666977070591E-7	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999998338625324	WITHOUT_CLASSIFICATION	1.6613746758923987E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999988339015676	WITHOUT_CLASSIFICATION	1.1660984323912987E-6	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999998825232176	WITHOUT_CLASSIFICATION	1.1747678246102868E-7	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999997387286068	WITHOUT_CLASSIFICATION	2.612713931918723E-7	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999991898484537	WITHOUT_CLASSIFICATION	8.101515463108846E-7	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999977923564062	WITHOUT_CLASSIFICATION	2.2076435938366275E-6	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999989294273051	WITHOUT_CLASSIFICATION	1.0705726948980934E-6	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999994653498318	WITHOUT_CLASSIFICATION	5.346501681726723E-7	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999984886038565	WITHOUT_CLASSIFICATION	1.5113961435494151E-6	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999858062883816	WITHOUT_CLASSIFICATION	1.4193711618301984E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999883070796268	WITHOUT_CLASSIFICATION	1.1692920373201166E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999994005371304	WITHOUT_CLASSIFICATION	5.9946286960761E-7	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999930335846356	WITHOUT_CLASSIFICATION	6.966415364273328E-6	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999984586742787	WITHOUT_CLASSIFICATION	1.541325721211284E-6	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999958487917511	WITHOUT_CLASSIFICATION	4.151208248856212E-6	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999998406864177	WITHOUT_CLASSIFICATION	1.5931358228231136E-7	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999990913072159	WITHOUT_CLASSIFICATION	9.086927841489244E-7	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999534082999543	WITHOUT_CLASSIFICATION	4.659170004565034E-5	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9999871097986588	WITHOUT_CLASSIFICATION	1.2890201341257421E-5	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.999987367872896	WITHOUT_CLASSIFICATION	1.2632127104081582E-5	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9999854998074891	WITHOUT_CLASSIFICATION	1.4500192510832193E-5	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9999835100151391	WITHOUT_CLASSIFICATION	1.6489984860960913E-5	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9999869131478977	WITHOUT_CLASSIFICATION	1.3086852102288289E-5	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9999858300108392	WITHOUT_CLASSIFICATION	1.416998916087797E-5	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9999861024698096	WITHOUT_CLASSIFICATION	1.3897530190483912E-5	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9999859074592875	WITHOUT_CLASSIFICATION	1.4092540712399295E-5	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9999861098346301	WITHOUT_CLASSIFICATION	1.3890165369891531E-5	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9999863658891702	WITHOUT_CLASSIFICATION	1.3634110829883152E-5	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.9999873218656424	WITHOUT_CLASSIFICATION	1.2678134357582392E-5	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9999874385884318	WITHOUT_CLASSIFICATION	1.2561411568137668E-5	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9999860062390585	WITHOUT_CLASSIFICATION	1.3993760941409967E-5	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.9999873675484765	WITHOUT_CLASSIFICATION	1.263245152360918E-5	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9999876334073673	WITHOUT_CLASSIFICATION	1.2366592632685664E-5	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9999874388563866	WITHOUT_CLASSIFICATION	1.2561143613369608E-5	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.9999879145069669	WITHOUT_CLASSIFICATION	1.2085493033138237E-5	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.999984185710066	WITHOUT_CLASSIFICATION	1.581428993402218E-5	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9999876359961354	WITHOUT_CLASSIFICATION	1.2364003864618836E-5	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999998900889178	WITHOUT_CLASSIFICATION	1.0991108227642955E-7	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.999998514793965	WITHOUT_CLASSIFICATION	1.4852060350616644E-6	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999961107109137	WITHOUT_CLASSIFICATION	3.889289086346401E-6	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999988424418352	WITHOUT_CLASSIFICATION	1.1575581647269002E-6	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999979634566264	WITHOUT_CLASSIFICATION	2.036543373650475E-6	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999999611734186	WITHOUT_CLASSIFICATION	3.8826581325299837E-8	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999999505165935	WITHOUT_CLASSIFICATION	4.9483406551097765E-8	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999984889317478	WITHOUT_CLASSIFICATION	1.5110682521901357E-6	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999176418604	WITHOUT_CLASSIFICATION	8.235813972265993E-8	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999966457521599	WITHOUT_CLASSIFICATION	3.3542478400652854E-6	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9832410170716444	WITHOUT_CLASSIFICATION	0.016758982928355686	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999992570341601	WITHOUT_CLASSIFICATION	7.429658399218575E-7	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999838419755979	WITHOUT_CLASSIFICATION	1.615802440224096E-5	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999989506174999	WITHOUT_CLASSIFICATION	1.0493825001321409E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999989506174999	WITHOUT_CLASSIFICATION	1.0493825001321409E-6	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999999062012139	WITHOUT_CLASSIFICATION	9.379878612307736E-8	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999994580878818	WITHOUT_CLASSIFICATION	5.41912118213396E-7	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999995682846837	WITHOUT_CLASSIFICATION	4.317153162940327E-7	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999990132853773	WITHOUT_CLASSIFICATION	9.867146226516929E-7	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999979675261988	WITHOUT_CLASSIFICATION	2.0324738011784264E-6	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999997895626831	WITHOUT_CLASSIFICATION	2.104373168413349E-7	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999971807741678	WITHOUT_CLASSIFICATION	2.8192258321217506E-6	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999997109420438	WITHOUT_CLASSIFICATION	2.890579562319935E-7	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999997098700893	WITHOUT_CLASSIFICATION	2.901299106932822E-7	TEST
// base	WITHOUT_CLASSIFICATION	0.999998066261518	WITHOUT_CLASSIFICATION	1.9337384820266204E-6	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9998833284124937	WITHOUT_CLASSIFICATION	1.166715875061831E-4	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999421431822	WITHOUT_CLASSIFICATION	5.7856817842475186E-8	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9999939028090379	WITHOUT_CLASSIFICATION	6.0971909621652695E-6	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999880686615961	WITHOUT_CLASSIFICATION	1.1931338403880674E-5	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999996984147248	WITHOUT_CLASSIFICATION	3.0158527518194406E-7	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999862990022816	WITHOUT_CLASSIFICATION	1.3700997718446917E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999991287445874	WITHOUT_CLASSIFICATION	8.712554126121772E-7	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999981508101125	WITHOUT_CLASSIFICATION	1.8491898875720548E-6	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999964742984645	WITHOUT_CLASSIFICATION	3.525701535475742E-6	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.999999251144282	WITHOUT_CLASSIFICATION	7.488557178758644E-7	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.999999086618566	WITHOUT_CLASSIFICATION	9.133814339318817E-7	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.999999813314819	WITHOUT_CLASSIFICATION	1.8668518092816353E-7	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.999997643934775	WITHOUT_CLASSIFICATION	2.3560652248984824E-6	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999941212874582	WITHOUT_CLASSIFICATION	5.878712541817376E-6	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999998416082736	WITHOUT_CLASSIFICATION	1.5839172628759806E-7	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999993952709361	WITHOUT_CLASSIFICATION	6.047290639174606E-7	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999998496131766	WITHOUT_CLASSIFICATION	1.5038682345812907E-7	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999953335831137	WITHOUT_CLASSIFICATION	4.666416886406625E-6	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999998336296537	WITHOUT_CLASSIFICATION	1.6637034639441593E-7	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999915552170672	WITHOUT_CLASSIFICATION	8.44478293277369E-6	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999988983814351	WITHOUT_CLASSIFICATION	1.1016185649200459E-6	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999979301276999	WITHOUT_CLASSIFICATION	2.0698723000748004E-6	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999889074915286	WITHOUT_CLASSIFICATION	1.1092508471461896E-5	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999972045752131	WITHOUT_CLASSIFICATION	2.7954247869208284E-6	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999994662787285	WITHOUT_CLASSIFICATION	5.337212715121898E-7	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999985734812439	WITHOUT_CLASSIFICATION	1.4265187560692471E-6	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999981850920753	WITHOUT_CLASSIFICATION	1.8149079246861646E-6	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.999999582215697	WITHOUT_CLASSIFICATION	4.177843030392535E-7	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.999998707985991	WITHOUT_CLASSIFICATION	1.2920140090779626E-6	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999043387531	WITHOUT_CLASSIFICATION	9.566124684043896E-8	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999998957840126	WITHOUT_CLASSIFICATION	1.0421598737667311E-7	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999992978520493	WITHOUT_CLASSIFICATION	7.021479506419079E-7	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999984367573136	WITHOUT_CLASSIFICATION	1.5632426864560433E-6	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.999998011737679	WITHOUT_CLASSIFICATION	1.98826232104659E-6	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.999998011737679	WITHOUT_CLASSIFICATION	1.98826232104659E-6	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999990541059804	WITHOUT_CLASSIFICATION	9.458940194226664E-7	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999986162434594	WITHOUT_CLASSIFICATION	1.3837565406113525E-6	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999993489599852	WITHOUT_CLASSIFICATION	6.510400147393783E-7	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999997397207662	WITHOUT_CLASSIFICATION	2.6027923383002296E-7	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999988399399173	WITHOUT_CLASSIFICATION	1.1600600827413598E-6	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.999997014279157	WITHOUT_CLASSIFICATION	2.9857208430531187E-6	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.999999453668441	WITHOUT_CLASSIFICATION	5.463315589500805E-7	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999908848702245	WITHOUT_CLASSIFICATION	9.115129775587493E-6	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999985761663555	WITHOUT_CLASSIFICATION	1.4238336446160143E-6	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999985837539889	WITHOUT_CLASSIFICATION	1.416246011086534E-6	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999988337967777	WITHOUT_CLASSIFICATION	1.166203222350145E-6	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999993483026436	WITHOUT_CLASSIFICATION	6.516973564279055E-7	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999944683918928	WITHOUT_CLASSIFICATION	5.531608107143128E-6	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999989194018816	WITHOUT_CLASSIFICATION	1.0805981185417373E-6	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9998106167453815	WITHOUT_CLASSIFICATION	1.893832546184423E-4	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999670787518048	WITHOUT_CLASSIFICATION	3.292124819531293E-5	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999998626476235	WITHOUT_CLASSIFICATION	1.3735237648246238E-7	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999970282606753	WITHOUT_CLASSIFICATION	2.971739324834593E-6	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999989635565201	WITHOUT_CLASSIFICATION	1.0364434799004092E-6	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999901370460929	WITHOUT_CLASSIFICATION	9.862953907122137E-6	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999993962587062	WITHOUT_CLASSIFICATION	6.037412937649397E-7	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999993962587062	WITHOUT_CLASSIFICATION	6.037412937649397E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996939264821	WITHOUT_CLASSIFICATION	3.0607351787176344E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996939264821	WITHOUT_CLASSIFICATION	3.0607351787176344E-7	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.999999844300979	WITHOUT_CLASSIFICATION	1.5569902106518355E-7	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999990624588015	WITHOUT_CLASSIFICATION	9.375411984266997E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999999961792697	WITHOUT_CLASSIFICATION	3.820730292160474E-8	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999997750829213	WITHOUT_CLASSIFICATION	2.2491707882133952E-7	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999998863650118	WITHOUT_CLASSIFICATION	1.1363498822779021E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999997967551012	WITHOUT_CLASSIFICATION	2.032448987774963E-7	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999971409257838	WITHOUT_CLASSIFICATION	2.8590742162224354E-6	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999988056009584	WITHOUT_CLASSIFICATION	1.1943990416634476E-6	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999978568354301	WITHOUT_CLASSIFICATION	2.1431645698428496E-6	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999993442917313	WITHOUT_CLASSIFICATION	6.557082686010131E-7	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999996584191798	WITHOUT_CLASSIFICATION	3.415808202484244E-7	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999992850477413	WITHOUT_CLASSIFICATION	7.149522587407792E-7	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999978739052725	WITHOUT_CLASSIFICATION	2.126094727465439E-6	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999870017370668	WITHOUT_CLASSIFICATION	1.2998262933214592E-5	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999995063216566	WITHOUT_CLASSIFICATION	4.93678343469168E-7	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999986817513615	WITHOUT_CLASSIFICATION	1.3182486384956432E-6	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999979552614521	WITHOUT_CLASSIFICATION	2.044738547953678E-6	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999992658107137	WITHOUT_CLASSIFICATION	7.341892861770674E-7	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9999551992232025	WITHOUT_CLASSIFICATION	4.480077679743217E-5	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999981867507098	WITHOUT_CLASSIFICATION	1.8132492901445467E-6	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999967913396361	WITHOUT_CLASSIFICATION	3.2086603639793782E-6	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999996799624294	WITHOUT_CLASSIFICATION	3.2003757049785423E-7	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999972011016327	WITHOUT_CLASSIFICATION	2.7988983671995115E-6	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999994364521207	WITHOUT_CLASSIFICATION	5.635478792147329E-7	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999996552747256	WITHOUT_CLASSIFICATION	3.447252743976291E-7	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999980999252076	WITHOUT_CLASSIFICATION	1.9000747924466003E-6	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999998757444944	WITHOUT_CLASSIFICATION	1.24255505496747E-7	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999987281897377	WITHOUT_CLASSIFICATION	1.2718102623853915E-6	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999918745488939	WITHOUT_CLASSIFICATION	8.125451106123477E-6	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999999562109094	WITHOUT_CLASSIFICATION	4.3789090591618055E-7	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999999562109094	WITHOUT_CLASSIFICATION	4.3789090591618055E-7	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.999998383845402	WITHOUT_CLASSIFICATION	1.616154598072808E-6	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.999996792426367	WITHOUT_CLASSIFICATION	3.2075736331573423E-6	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999995288484644	WITHOUT_CLASSIFICATION	4.7115153563070755E-7	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999990930040843	WITHOUT_CLASSIFICATION	9.069959156482294E-7	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999973103987887	WITHOUT_CLASSIFICATION	2.6896012113882523E-6	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999998924703393	WITHOUT_CLASSIFICATION	1.0752966073953853E-7	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999998988664324	WITHOUT_CLASSIFICATION	1.0113356755961635E-7	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.999999911953235	WITHOUT_CLASSIFICATION	8.804676507923263E-8	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999990808766015	WITHOUT_CLASSIFICATION	9.191233985206726E-7	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999966903675638	WITHOUT_CLASSIFICATION	3.3096324361440527E-6	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.999999853240932	WITHOUT_CLASSIFICATION	1.4675906812583999E-7	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999997598515051	WITHOUT_CLASSIFICATION	2.401484948978105E-7	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999979569470089	WITHOUT_CLASSIFICATION	2.0430529911372374E-6	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.99999919905226	WITHOUT_CLASSIFICATION	8.009477399334944E-7	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.999999644640093	WITHOUT_CLASSIFICATION	3.5535990693249037E-7	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999985880056647	WITHOUT_CLASSIFICATION	1.4119943353250996E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999992029178393	WITHOUT_CLASSIFICATION	7.97082160844224E-7	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999994906209397	WITHOUT_CLASSIFICATION	5.093790603618203E-7	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999993288849721	WITHOUT_CLASSIFICATION	6.711150278952722E-7	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9996899414765184	WITHOUT_CLASSIFICATION	3.1005852348159547E-4	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999977890704719	WITHOUT_CLASSIFICATION	2.2109295281841423E-6	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999911522557058	WITHOUT_CLASSIFICATION	8.847744294242944E-6	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999912491104022	WITHOUT_CLASSIFICATION	8.750889597802177E-6	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999964773180404	WITHOUT_CLASSIFICATION	3.5226819596752242E-6	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999996663025728	WITHOUT_CLASSIFICATION	3.336974272389006E-7	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999966537062177	WITHOUT_CLASSIFICATION	3.3462937822516354E-6	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.99999906665098	WITHOUT_CLASSIFICATION	9.333490200170956E-7	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999995659189115	WITHOUT_CLASSIFICATION	4.340810885355067E-7	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999996867583	WITHOUT_CLASSIFICATION	3.132417001097746E-7	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999976374840763	WITHOUT_CLASSIFICATION	2.3625159235906607E-6	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999989971282688	WITHOUT_CLASSIFICATION	1.002871731268326E-6	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999965348105583	WITHOUT_CLASSIFICATION	3.4651894416549915E-6	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999973435136874	WITHOUT_CLASSIFICATION	2.6564863126148737E-6	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9999994715741961	WITHOUT_CLASSIFICATION	5.284258039281363E-7	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999891694933555	WITHOUT_CLASSIFICATION	1.0830506644642533E-5	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999995146497759	WITHOUT_CLASSIFICATION	4.85350224163736E-7	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999826992371609	WITHOUT_CLASSIFICATION	1.73007628392347E-5	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999931612170645	WITHOUT_CLASSIFICATION	6.838782935470153E-6	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999992309361403	WITHOUT_CLASSIFICATION	7.69063859711118E-7	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999998673610938	WITHOUT_CLASSIFICATION	1.3263890631371853E-7	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999561952613	WITHOUT_CLASSIFICATION	4.380473878020416E-8	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999983753634386	WITHOUT_CLASSIFICATION	1.6246365613377123E-6	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999984931156197	WITHOUT_CLASSIFICATION	1.5068843801990163E-6	TEST
// while	WITHOUT_CLASSIFICATION	0.9999962531653259	WITHOUT_CLASSIFICATION	3.7468346740052754E-6	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999775205034896	WITHOUT_CLASSIFICATION	2.2479496510419685E-5	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999995345090876	WITHOUT_CLASSIFICATION	4.6549091236777296E-7	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999994729060047	WITHOUT_CLASSIFICATION	5.270939953290326E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999996837396945	WITHOUT_CLASSIFICATION	3.1626030550242786E-7	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999998451898584	WITHOUT_CLASSIFICATION	1.5481014156607194E-7	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999984982935897	WITHOUT_CLASSIFICATION	1.5017064103956924E-6	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999893153878039	WITHOUT_CLASSIFICATION	1.0684612196065922E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999844794423876	WITHOUT_CLASSIFICATION	1.5520557612494363E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999824421008202	WITHOUT_CLASSIFICATION	1.7557899179894027E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999868216712972	WITHOUT_CLASSIFICATION	1.31783287027331E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999936495161862	WITHOUT_CLASSIFICATION	6.350483813811713E-6	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999867066090992	WITHOUT_CLASSIFICATION	1.3293390900890197E-5	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999936080536459	WITHOUT_CLASSIFICATION	6.39194635401959E-6	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999997811334548	WITHOUT_CLASSIFICATION	2.1886654535707236E-7	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999720136875976	WITHOUT_CLASSIFICATION	2.7986312402432553E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999997295637965	WITHOUT_CLASSIFICATION	2.704362035057672E-7	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999756517260016	WITHOUT_CLASSIFICATION	2.4348273998493583E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999893153878039	WITHOUT_CLASSIFICATION	1.0684612196065922E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999824421008202	WITHOUT_CLASSIFICATION	1.7557899179894027E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999844794423876	WITHOUT_CLASSIFICATION	1.5520557612494363E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999799531196665	WITHOUT_CLASSIFICATION	2.0046880333436296E-5	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999868343152387	WITHOUT_CLASSIFICATION	1.3165684761188338E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999975114838111	WITHOUT_CLASSIFICATION	2.4885161890097076E-6	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999995787735295	WITHOUT_CLASSIFICATION	4.212264704319309E-7	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999995279389421	WITHOUT_CLASSIFICATION	4.7206105789588507E-7	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999989342858782	WITHOUT_CLASSIFICATION	1.0657141218412641E-6	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999985826418981	WITHOUT_CLASSIFICATION	1.4173581018941321E-6	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999996590038538	WITHOUT_CLASSIFICATION	3.4099614622607864E-7	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.99999853391045	WITHOUT_CLASSIFICATION	1.4660895499957433E-6	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999995814594653	WITHOUT_CLASSIFICATION	4.185405346232362E-7	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999997791511527	WITHOUT_CLASSIFICATION	2.2084884739452163E-7	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999983056902091	WITHOUT_CLASSIFICATION	1.6943097909863281E-6	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999986049242895	WITHOUT_CLASSIFICATION	1.3950757105897206E-6	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999982773388701	WITHOUT_CLASSIFICATION	1.7226611298094556E-6	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999993250781561	WITHOUT_CLASSIFICATION	6.749218439143802E-7	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999987048086934	WITHOUT_CLASSIFICATION	1.2951913066170255E-6	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999994514004774	WITHOUT_CLASSIFICATION	5.485995226030122E-7	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999979553988378	WITHOUT_CLASSIFICATION	2.0446011620822254E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999979553988378	WITHOUT_CLASSIFICATION	2.0446011620822254E-6	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999990030230024	WITHOUT_CLASSIFICATION	9.969769975401036E-7	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999994042263474	WITHOUT_CLASSIFICATION	5.957736525685603E-7	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999926202777606	WITHOUT_CLASSIFICATION	7.379722239447901E-6	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999943065185147	WITHOUT_CLASSIFICATION	5.693481485182557E-6	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999994197068535	WITHOUT_CLASSIFICATION	5.802931465846426E-7	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.999999974356947	WITHOUT_CLASSIFICATION	2.5643052954048556E-8	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999998900574486	WITHOUT_CLASSIFICATION	1.0994255140777607E-7	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.999999571132108	WITHOUT_CLASSIFICATION	4.2886789191502743E-7	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999996176673317	WITHOUT_CLASSIFICATION	3.823326682464946E-7	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999998941098667	WITHOUT_CLASSIFICATION	1.0589013329567166E-7	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.999998981499858	WITHOUT_CLASSIFICATION	1.018500142027653E-6	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999934144987409	WITHOUT_CLASSIFICATION	6.585501259076012E-6	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999998372209629	WITHOUT_CLASSIFICATION	1.6277903723271797E-7	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999988350656644	WITHOUT_CLASSIFICATION	1.1649343356274377E-6	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999997317873852	WITHOUT_CLASSIFICATION	2.682126147434311E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999995592251801	WITHOUT_CLASSIFICATION	4.4077481982966025E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999985565385341	WITHOUT_CLASSIFICATION	1.443461465912932E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997069199014	WITHOUT_CLASSIFICATION	2.9308009867494E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997069199014	WITHOUT_CLASSIFICATION	2.9308009867494E-7	TEST
// colon3	WITHOUT_CLASSIFICATION	0.999998349419021	WITHOUT_CLASSIFICATION	1.6505809789724008E-6	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999975419193983	WITHOUT_CLASSIFICATION	2.4580806016712046E-6	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999743854686935	WITHOUT_CLASSIFICATION	2.5614531306369257E-5	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999873634384797	WITHOUT_CLASSIFICATION	1.2636561520298755E-5	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999998674002362	WITHOUT_CLASSIFICATION	1.325997637843512E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997069199014	WITHOUT_CLASSIFICATION	2.9308009867494E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997069199014	WITHOUT_CLASSIFICATION	2.9308009867494E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999619020157	WITHOUT_CLASSIFICATION	3.8097984267052226E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999619020157	WITHOUT_CLASSIFICATION	3.8097984267052226E-8	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999987763919114	WITHOUT_CLASSIFICATION	1.2236080887037744E-6	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999853488580517	WITHOUT_CLASSIFICATION	1.4651141948376296E-5	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.99999982861969	WITHOUT_CLASSIFICATION	1.7138031009469945E-7	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999986304097946	WITHOUT_CLASSIFICATION	1.3695902052935314E-6	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999010293478	WITHOUT_CLASSIFICATION	9.897065231755087E-8	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999010293478	WITHOUT_CLASSIFICATION	9.897065231755087E-8	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999992704558938	WITHOUT_CLASSIFICATION	7.295441063127759E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999988450408468	WITHOUT_CLASSIFICATION	1.1549591531452872E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993513205125	WITHOUT_CLASSIFICATION	6.486794874922186E-7	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999968139882459	WITHOUT_CLASSIFICATION	3.186011754189318E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999611598783	WITHOUT_CLASSIFICATION	3.884012177006452E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999996907902108	WITHOUT_CLASSIFICATION	3.092097892157814E-7	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999967042984544	WITHOUT_CLASSIFICATION	3.2957015455059434E-6	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999997001731706	WITHOUT_CLASSIFICATION	2.9982682940631767E-7	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999975799574632	WITHOUT_CLASSIFICATION	2.420042536811905E-6	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999998725122112	WITHOUT_CLASSIFICATION	1.2748778867851734E-7	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.999998354789572	WITHOUT_CLASSIFICATION	1.6452104280636256E-6	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999998223253137	WITHOUT_CLASSIFICATION	1.776746862102822E-7	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999986484353782	WITHOUT_CLASSIFICATION	1.3515646217351617E-6	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999992902077645	WITHOUT_CLASSIFICATION	7.097922355952165E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999995592251801	WITHOUT_CLASSIFICATION	4.4077481982966025E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997069199014	WITHOUT_CLASSIFICATION	2.9308009867494E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999619020157	WITHOUT_CLASSIFICATION	3.8097984267052226E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999996907902108	WITHOUT_CLASSIFICATION	3.092097892157814E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999223133402	WITHOUT_CLASSIFICATION	7.768665978907099E-8	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999223133402	WITHOUT_CLASSIFICATION	7.768665978907099E-8	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999962167097541	WITHOUT_CLASSIFICATION	3.7832902459137346E-6	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999997856619097	WITHOUT_CLASSIFICATION	2.1433809024531525E-7	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999784845366	WITHOUT_CLASSIFICATION	2.1515463462882932E-8	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999998902643099	WITHOUT_CLASSIFICATION	1.0973569019059243E-7	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999960908347674	WITHOUT_CLASSIFICATION	3.9091652325751784E-6	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999994145004061	WITHOUT_CLASSIFICATION	5.85499593892949E-7	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999977683159423	WITHOUT_CLASSIFICATION	2.2316840577374585E-6	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999947586647201	WITHOUT_CLASSIFICATION	5.241335280002727E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999995145475334	WITHOUT_CLASSIFICATION	4.854524665375647E-7	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999996167576851	WITHOUT_CLASSIFICATION	3.8324231487830976E-7	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999959083419527	WITHOUT_CLASSIFICATION	4.091658047242622E-6	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.99999971219657	WITHOUT_CLASSIFICATION	2.878034299701931E-7	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999994384518158	WITHOUT_CLASSIFICATION	5.61548184061268E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999985565385341	WITHOUT_CLASSIFICATION	1.443461465912932E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999619020157	WITHOUT_CLASSIFICATION	3.8097984267052226E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999988450408468	WITHOUT_CLASSIFICATION	1.1549591531452872E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993513205125	WITHOUT_CLASSIFICATION	6.486794874922186E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993513205125	WITHOUT_CLASSIFICATION	6.486794874922186E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999611598783	WITHOUT_CLASSIFICATION	3.884012177006452E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999996907902108	WITHOUT_CLASSIFICATION	3.092097892157814E-7	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999996907902108	WITHOUT_CLASSIFICATION	3.092097892157814E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999223133402	WITHOUT_CLASSIFICATION	7.768665978907099E-8	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999997727073492	WITHOUT_CLASSIFICATION	2.2729265082297004E-7	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999927429761575	WITHOUT_CLASSIFICATION	7.25702384245004E-6	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999998349433207	WITHOUT_CLASSIFICATION	1.6505667944803974E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999995045572803	WITHOUT_CLASSIFICATION	4.954427197854217E-7	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999992819321627	WITHOUT_CLASSIFICATION	7.180678372576961E-7	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999816570246528	WITHOUT_CLASSIFICATION	1.8342975347164512E-5	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999996098268481	WITHOUT_CLASSIFICATION	3.9017315182305096E-7	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999930213447	WITHOUT_CLASSIFICATION	6.9786552540468464E-9	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999997367243872	WITHOUT_CLASSIFICATION	2.632756128056218E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999988450408468	WITHOUT_CLASSIFICATION	1.1549591531452872E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993513205125	WITHOUT_CLASSIFICATION	6.486794874922186E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993513205125	WITHOUT_CLASSIFICATION	6.486794874922186E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999611598783	WITHOUT_CLASSIFICATION	3.884012177006452E-8	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999947586647201	WITHOUT_CLASSIFICATION	5.241335280002727E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999996167576851	WITHOUT_CLASSIFICATION	3.8324231487830976E-7	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9996997913484207	WITHOUT_CLASSIFICATION	3.0020865157937693E-4	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999994510451189	WITHOUT_CLASSIFICATION	5.48954881148686E-7	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.999984434377019	WITHOUT_CLASSIFICATION	1.5565622980971678E-5	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.999984434377019	WITHOUT_CLASSIFICATION	1.5565622980971678E-5	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999977631971402	WITHOUT_CLASSIFICATION	2.236802859878568E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999989428742647	WITHOUT_CLASSIFICATION	1.057125735342205E-6	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999998873046511	WITHOUT_CLASSIFICATION	1.1269534895336681E-7	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999996375652529	WITHOUT_CLASSIFICATION	3.6243474708024415E-7	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999972685746465	WITHOUT_CLASSIFICATION	2.73142535347101E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999972685746465	WITHOUT_CLASSIFICATION	2.73142535347101E-6	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999995396396061	WITHOUT_CLASSIFICATION	4.6036039395095105E-7	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999995396396061	WITHOUT_CLASSIFICATION	4.6036039395095105E-7	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999997175707729	WITHOUT_CLASSIFICATION	2.824292271207675E-7	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999997175707729	WITHOUT_CLASSIFICATION	2.824292271207675E-7	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999986813167768	WITHOUT_CLASSIFICATION	1.318683223179304E-6	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999995270745127	WITHOUT_CLASSIFICATION	4.7292548744069544E-7	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999992417091349	WITHOUT_CLASSIFICATION	7.582908650648554E-7	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999997709117665	WITHOUT_CLASSIFICATION	2.2908823347272394E-7	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999995113623755	WITHOUT_CLASSIFICATION	4.886376244825539E-7	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999972413801036	WITHOUT_CLASSIFICATION	2.7586198964307915E-6	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999994691662035	WITHOUT_CLASSIFICATION	5.308337964986173E-7	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999999359526497	WITHOUT_CLASSIFICATION	6.404735030733097E-8	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.999997362199588	WITHOUT_CLASSIFICATION	2.637800411900344E-6	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999904413666177	WITHOUT_CLASSIFICATION	9.558633382298096E-6	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.999999901315214	WITHOUT_CLASSIFICATION	9.86847859199426E-8	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999996310375149	WITHOUT_CLASSIFICATION	3.689624850778141E-7	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999982035731949	WITHOUT_CLASSIFICATION	1.7964268050867184E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999932105203608	WITHOUT_CLASSIFICATION	6.789479639146224E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999932105203608	WITHOUT_CLASSIFICATION	6.789479639146224E-6	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999948801092838	WITHOUT_CLASSIFICATION	5.119890716259433E-6	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999997967551012	WITHOUT_CLASSIFICATION	2.032448987774963E-7	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.999999808504448	WITHOUT_CLASSIFICATION	1.9149555192483827E-7	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999481462657	WITHOUT_CLASSIFICATION	5.185373441608107E-8	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999997730083497	WITHOUT_CLASSIFICATION	2.2699165024904158E-7	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999940384371107	WITHOUT_CLASSIFICATION	5.9615628893184244E-6	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999978468988471	WITHOUT_CLASSIFICATION	2.1531011528427395E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999984524709622	WITHOUT_CLASSIFICATION	1.547529037865557E-6	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999459437572	WITHOUT_CLASSIFICATION	5.405624283741442E-8	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999985940385839	WITHOUT_CLASSIFICATION	1.4059614160816527E-6	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999998201935452	WITHOUT_CLASSIFICATION	1.798064548139202E-7	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999968248947383	WITHOUT_CLASSIFICATION	3.175105261687249E-6	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999997255307371	WITHOUT_CLASSIFICATION	2.7446926290530306E-7	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999975352686293	WITHOUT_CLASSIFICATION	2.464731370789787E-6	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999774924547935	WITHOUT_CLASSIFICATION	2.2507545206576347E-5	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999987392461696	WITHOUT_CLASSIFICATION	1.2607538304343126E-6	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999985507770066	WITHOUT_CLASSIFICATION	1.4492229933055236E-6	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999995253946549	WITHOUT_CLASSIFICATION	4.7460534516119285E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998370642339	WITHOUT_CLASSIFICATION	1.6293576621848338E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998370642339	WITHOUT_CLASSIFICATION	1.6293576621848338E-7	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999988701397433	WITHOUT_CLASSIFICATION	1.1298602566189236E-6	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999955753131405	WITHOUT_CLASSIFICATION	4.424686859428835E-6	TEST
//[]	WITHOUT_CLASSIFICATION	0.9998889995364793	WITHOUT_CLASSIFICATION	1.1100046352079015E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9998889995364793	WITHOUT_CLASSIFICATION	1.1100046352079015E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999995900504913	WITHOUT_CLASSIFICATION	4.0994950872041915E-7	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999853964844063	WITHOUT_CLASSIFICATION	1.4603515593639022E-5	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999735273962468	WITHOUT_CLASSIFICATION	2.6472603753268863E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999731277308131	WITHOUT_CLASSIFICATION	2.687226918686121E-5	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999995024598235	WITHOUT_CLASSIFICATION	4.975401765119086E-7	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.999999761814464	WITHOUT_CLASSIFICATION	2.3818553601360364E-7	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.999999761814464	WITHOUT_CLASSIFICATION	2.3818553601360364E-7	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999613519508	WITHOUT_CLASSIFICATION	3.8648049160493674E-8	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999991073617581	WITHOUT_CLASSIFICATION	8.926382418104956E-7	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999998552824994	WITHOUT_CLASSIFICATION	1.4471750064255358E-7	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999959474811408	WITHOUT_CLASSIFICATION	4.0525188592103315E-6	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999955753131405	WITHOUT_CLASSIFICATION	4.424686859428835E-6	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999988803085629	WITHOUT_CLASSIFICATION	1.1196914371029597E-5	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999970814561605	WITHOUT_CLASSIFICATION	2.918543839446397E-6	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999970814561605	WITHOUT_CLASSIFICATION	2.918543839446397E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999973260006275	WITHOUT_CLASSIFICATION	2.673999372532243E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999782273623	WITHOUT_CLASSIFICATION	2.177263771252221E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999782273623	WITHOUT_CLASSIFICATION	2.177263771252221E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998883944563	WITHOUT_CLASSIFICATION	1.1160554374542388E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998883944563	WITHOUT_CLASSIFICATION	1.1160554374542388E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998883944563	WITHOUT_CLASSIFICATION	1.1160554374542388E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999782273623	WITHOUT_CLASSIFICATION	2.177263771252221E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999782273623	WITHOUT_CLASSIFICATION	2.177263771252221E-7	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999973260006275	WITHOUT_CLASSIFICATION	2.673999372532243E-6	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999993913289569	WITHOUT_CLASSIFICATION	6.086710432529044E-7	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.999997818928382	WITHOUT_CLASSIFICATION	2.1810716180675474E-6	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999995419037898	WITHOUT_CLASSIFICATION	4.580962102185646E-7	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999989642128667	WITHOUT_CLASSIFICATION	1.0357871332635402E-6	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999449216365	WITHOUT_CLASSIFICATION	5.5078363467536027E-8	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.999999028031017	WITHOUT_CLASSIFICATION	9.719689829938772E-7	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.999998046864019	WITHOUT_CLASSIFICATION	1.9531359809297703E-6	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.999999577930552	WITHOUT_CLASSIFICATION	4.2206944797291694E-7	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999998201935452	WITHOUT_CLASSIFICATION	1.798064548139202E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999782273623	WITHOUT_CLASSIFICATION	2.177263771252221E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999782273623	WITHOUT_CLASSIFICATION	2.177263771252221E-7	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999991268521183	WITHOUT_CLASSIFICATION	8.73147881561018E-7	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.999998953479795	WITHOUT_CLASSIFICATION	1.0465202050276628E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999981694835502	WITHOUT_CLASSIFICATION	1.8305164497990171E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999997149772826	WITHOUT_CLASSIFICATION	2.8502271743369734E-7	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999996644871453	WITHOUT_CLASSIFICATION	3.3551285470273347E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999991751917392	WITHOUT_CLASSIFICATION	8.248082608889588E-7	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999998576415016	WITHOUT_CLASSIFICATION	1.42358498520893E-7	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999991755638562	WITHOUT_CLASSIFICATION	8.24436143802531E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999992638439869	WITHOUT_CLASSIFICATION	7.361560131746395E-7	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.999999136784682	WITHOUT_CLASSIFICATION	8.632153179503921E-7	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.999979715840684	WITHOUT_CLASSIFICATION	2.0284159316025312E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999951968252556	WITHOUT_CLASSIFICATION	4.803174744402876E-6	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999999057153219	WITHOUT_CLASSIFICATION	9.428467811464084E-8	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999997335721352	WITHOUT_CLASSIFICATION	2.664278647588084E-7	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999998222855003	WITHOUT_CLASSIFICATION	1.7771449970679315E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999984237855781	WITHOUT_CLASSIFICATION	1.57621442182275E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999984237855781	WITHOUT_CLASSIFICATION	1.57621442182275E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999984237855781	WITHOUT_CLASSIFICATION	1.57621442182275E-6	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999999346674162	WITHOUT_CLASSIFICATION	6.533258378409802E-8	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999505809904	WITHOUT_CLASSIFICATION	4.9419009490699646E-8	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999995302882002	WITHOUT_CLASSIFICATION	4.697117998444273E-7	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999990842075723	WITHOUT_CLASSIFICATION	9.157924276166558E-7	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999998923707543	WITHOUT_CLASSIFICATION	1.0762924579814147E-7	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999993338538395	WITHOUT_CLASSIFICATION	6.661461604172542E-7	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999414702756	WITHOUT_CLASSIFICATION	5.85297244618706E-8	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999998032475937	WITHOUT_CLASSIFICATION	1.9675240619674675E-7	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999987270192945	WITHOUT_CLASSIFICATION	1.2729807055114676E-6	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999993496802992	WITHOUT_CLASSIFICATION	6.503197008851751E-7	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.999997021529241	WITHOUT_CLASSIFICATION	2.978470758995698E-6	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.999992408806383	WITHOUT_CLASSIFICATION	7.591193616924769E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999613519508	WITHOUT_CLASSIFICATION	3.8648049160493674E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999782273623	WITHOUT_CLASSIFICATION	2.177263771252221E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999782273623	WITHOUT_CLASSIFICATION	2.177263771252221E-7	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999973260006275	WITHOUT_CLASSIFICATION	2.673999372532243E-6	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.999999028031017	WITHOUT_CLASSIFICATION	9.719689829938772E-7	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.999998953479795	WITHOUT_CLASSIFICATION	1.0465202050276628E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999997149772826	WITHOUT_CLASSIFICATION	2.8502271743369734E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999991751917392	WITHOUT_CLASSIFICATION	8.248082608889588E-7	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999981694835502	WITHOUT_CLASSIFICATION	1.8305164497990171E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999998576415016	WITHOUT_CLASSIFICATION	1.42358498520893E-7	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.999999136784682	WITHOUT_CLASSIFICATION	8.632153179503921E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999992638439869	WITHOUT_CLASSIFICATION	7.361560131746395E-7	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999951968252556	WITHOUT_CLASSIFICATION	4.803174744402876E-6	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999998310131766	WITHOUT_CLASSIFICATION	1.6898682345738791E-7	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999991522272051	WITHOUT_CLASSIFICATION	8.477727948145E-7	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999936495138627	WITHOUT_CLASSIFICATION	6.3504861372891334E-6	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.999999780773667	WITHOUT_CLASSIFICATION	2.1922633286886773E-7	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999999691110615	WITHOUT_CLASSIFICATION	3.088893848608838E-8	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999996433515117	WITHOUT_CLASSIFICATION	3.566484883454833E-7	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999994076064792	WITHOUT_CLASSIFICATION	5.923935208761752E-7	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999996234364089	WITHOUT_CLASSIFICATION	3.765635911117043E-7	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999998577782773	WITHOUT_CLASSIFICATION	1.4222172277142423E-7	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999990018678346	WITHOUT_CLASSIFICATION	9.981321654223543E-7	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999996881508371	WITHOUT_CLASSIFICATION	3.1184916297842433E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998864893563	WITHOUT_CLASSIFICATION	1.1351064364282874E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999992159677833	WITHOUT_CLASSIFICATION	7.84032216736512E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999996366861253	WITHOUT_CLASSIFICATION	3.633138746225339E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999998104856742	WITHOUT_CLASSIFICATION	1.8951432566506896E-7	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999446243744	WITHOUT_CLASSIFICATION	5.537562573711097E-8	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999996584400254	WITHOUT_CLASSIFICATION	3.415599745901685E-7	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999996334212731	WITHOUT_CLASSIFICATION	3.6657872688169113E-7	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999705394542	WITHOUT_CLASSIFICATION	2.9460545776139326E-8	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999998198241733	WITHOUT_CLASSIFICATION	1.8017582656586443E-7	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999996395799531	WITHOUT_CLASSIFICATION	3.604200469057438E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999790347564	WITHOUT_CLASSIFICATION	2.0965243593583257E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999790347564	WITHOUT_CLASSIFICATION	2.0965243593583257E-7	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999963198165519	WITHOUT_CLASSIFICATION	3.6801834480567157E-6	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999997473379245	WITHOUT_CLASSIFICATION	2.5266207552527906E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999788627518923	WITHOUT_CLASSIFICATION	2.1137248107659097E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999788627518923	WITHOUT_CLASSIFICATION	2.1137248107659097E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999788627518923	WITHOUT_CLASSIFICATION	2.1137248107659097E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999672508180454	WITHOUT_CLASSIFICATION	3.274918195456162E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999672508180454	WITHOUT_CLASSIFICATION	3.274918195456162E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999672508180454	WITHOUT_CLASSIFICATION	3.274918195456162E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999672508180454	WITHOUT_CLASSIFICATION	3.274918195456162E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999578324913608	WITHOUT_CLASSIFICATION	4.216750863917159E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999578324913608	WITHOUT_CLASSIFICATION	4.216750863917159E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999578324913608	WITHOUT_CLASSIFICATION	4.216750863917159E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999605744740866	WITHOUT_CLASSIFICATION	3.942552591339277E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999605744740866	WITHOUT_CLASSIFICATION	3.942552591339277E-5	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999541641235965	WITHOUT_CLASSIFICATION	4.583587640359627E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999636164973839	WITHOUT_CLASSIFICATION	3.638350261602961E-5	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999997473379245	WITHOUT_CLASSIFICATION	2.5266207552527906E-7	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999996941009458	WITHOUT_CLASSIFICATION	3.0589905420987403E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999788627518923	WITHOUT_CLASSIFICATION	2.1137248107659097E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999788627518923	WITHOUT_CLASSIFICATION	2.1137248107659097E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999672508180454	WITHOUT_CLASSIFICATION	3.274918195456162E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999672508180454	WITHOUT_CLASSIFICATION	3.274918195456162E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999672508180454	WITHOUT_CLASSIFICATION	3.274918195456162E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999578324913608	WITHOUT_CLASSIFICATION	4.216750863917159E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999578324913608	WITHOUT_CLASSIFICATION	4.216750863917159E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999605744740866	WITHOUT_CLASSIFICATION	3.942552591339277E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999636164973839	WITHOUT_CLASSIFICATION	3.638350261602961E-5	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999998421170568	WITHOUT_CLASSIFICATION	1.5788294303959878E-7	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999998421170568	WITHOUT_CLASSIFICATION	1.5788294303959878E-7	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999994327568661	WITHOUT_CLASSIFICATION	5.672431339182551E-7	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999994327568661	WITHOUT_CLASSIFICATION	5.672431339182551E-7	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999983915719357	WITHOUT_CLASSIFICATION	1.608428064236439E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999983915719357	WITHOUT_CLASSIFICATION	1.608428064236439E-6	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999990888357412	WITHOUT_CLASSIFICATION	9.111642588749051E-7	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999977844248779	WITHOUT_CLASSIFICATION	2.2155751222082297E-6	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999977844248779	WITHOUT_CLASSIFICATION	2.2155751222082297E-6	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999997347680547	WITHOUT_CLASSIFICATION	2.652319452956005E-7	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999997347680547	WITHOUT_CLASSIFICATION	2.652319452956005E-7	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999987396392062	WITHOUT_CLASSIFICATION	1.2603607938082401E-6	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999994013660697	WITHOUT_CLASSIFICATION	5.986339303488729E-7	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999994013660697	WITHOUT_CLASSIFICATION	5.986339303488729E-7	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999029625058	WITHOUT_CLASSIFICATION	9.703749418029633E-8	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999987808829774	WITHOUT_CLASSIFICATION	1.2191170225356166E-6	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999994674213809	WITHOUT_CLASSIFICATION	5.32578618985333E-7	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999672508180454	WITHOUT_CLASSIFICATION	3.274918195456162E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999672508180454	WITHOUT_CLASSIFICATION	3.274918195456162E-5	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999029625058	WITHOUT_CLASSIFICATION	9.703749418029633E-8	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999973112469172	WITHOUT_CLASSIFICATION	2.6887530828216163E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999985282805278	WITHOUT_CLASSIFICATION	1.4717194721562233E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999985282805278	WITHOUT_CLASSIFICATION	1.4717194721562233E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999985282805278	WITHOUT_CLASSIFICATION	1.4717194721562233E-6	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999995940971914	WITHOUT_CLASSIFICATION	4.059028086304276E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.9999976868660636	WITHOUT_CLASSIFICATION	2.3131339362909344E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999970096145199	WITHOUT_CLASSIFICATION	2.9903854801830947E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999970096145199	WITHOUT_CLASSIFICATION	2.9903854801830947E-6	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999997822928208	WITHOUT_CLASSIFICATION	2.1770717919796676E-7	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999995211065218	WITHOUT_CLASSIFICATION	4.788934782331492E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999995129372312	WITHOUT_CLASSIFICATION	4.870627688568805E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999984301694755	WITHOUT_CLASSIFICATION	1.5698305243858133E-6	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999995115179781	WITHOUT_CLASSIFICATION	4.884820219005807E-7	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999995979641629	WITHOUT_CLASSIFICATION	4.0203583709291057E-7	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999995979641629	WITHOUT_CLASSIFICATION	4.0203583709291057E-7	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999998065329885	WITHOUT_CLASSIFICATION	1.9346701142914877E-7	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999530941127933	WITHOUT_CLASSIFICATION	4.690588720672182E-5	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999530941127933	WITHOUT_CLASSIFICATION	4.690588720672182E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999672508180454	WITHOUT_CLASSIFICATION	3.274918195456162E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999985282805278	WITHOUT_CLASSIFICATION	1.4717194721562233E-6	TEST
// args	WITHOUT_CLASSIFICATION	0.9999976868660636	WITHOUT_CLASSIFICATION	2.3131339362909344E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999970096145199	WITHOUT_CLASSIFICATION	2.9903854801830947E-6	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999997822928208	WITHOUT_CLASSIFICATION	2.1770717919796676E-7	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999995211065218	WITHOUT_CLASSIFICATION	4.788934782331492E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999995129372312	WITHOUT_CLASSIFICATION	4.870627688568805E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999984301694755	WITHOUT_CLASSIFICATION	1.5698305243858133E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999530941127933	WITHOUT_CLASSIFICATION	4.690588720672182E-5	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999987200547381	WITHOUT_CLASSIFICATION	1.2799452618745609E-6	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999998369882842	WITHOUT_CLASSIFICATION	1.6301171585469696E-7	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999979750904067	WITHOUT_CLASSIFICATION	2.0249095932463814E-6	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999998250375018	WITHOUT_CLASSIFICATION	1.7496249822294819E-7	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999988294092832	WITHOUT_CLASSIFICATION	1.170590716813728E-6	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999997121954776	WITHOUT_CLASSIFICATION	2.878045224440297E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999991219736607	WITHOUT_CLASSIFICATION	8.78026339288429E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999991219736607	WITHOUT_CLASSIFICATION	8.78026339288429E-7	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999998090132157	WITHOUT_CLASSIFICATION	1.909867842977221E-7	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999998967018199	WITHOUT_CLASSIFICATION	1.0329818013571824E-7	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999998989148933	WITHOUT_CLASSIFICATION	1.0108510679808679E-7	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999567902167	WITHOUT_CLASSIFICATION	4.320978327433064E-8	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999045936578	WITHOUT_CLASSIFICATION	9.540634212405407E-8	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999045936578	WITHOUT_CLASSIFICATION	9.540634212405407E-8	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999999696722972	WITHOUT_CLASSIFICATION	3.032770283529556E-8	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999999471422182	WITHOUT_CLASSIFICATION	5.2857781773494303E-8	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999998604924489	WITHOUT_CLASSIFICATION	1.395075511271449E-7	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999998604924489	WITHOUT_CLASSIFICATION	1.395075511271449E-7	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.999999726780122	WITHOUT_CLASSIFICATION	2.7321987805019934E-7	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999999574456924	WITHOUT_CLASSIFICATION	4.255430769855932E-8	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999995115179781	WITHOUT_CLASSIFICATION	4.884820219005807E-7	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999993484460596	WITHOUT_CLASSIFICATION	6.515539404330754E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999995337104258	WITHOUT_CLASSIFICATION	4.6628957418401173E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996620215402	WITHOUT_CLASSIFICATION	3.3797845978026894E-7	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999989043586455	WITHOUT_CLASSIFICATION	1.0956413546114898E-6	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999990187152458	WITHOUT_CLASSIFICATION	9.812847542759134E-7	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999987088611906	WITHOUT_CLASSIFICATION	1.2911388094181885E-6	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999992303513254	WITHOUT_CLASSIFICATION	7.696486745863635E-7	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999949408543245	WITHOUT_CLASSIFICATION	5.0591456755032775E-6	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999999977347282	WITHOUT_CLASSIFICATION	2.2652717954827393E-8	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999999977347282	WITHOUT_CLASSIFICATION	2.2652717954827393E-8	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.99999982506496	WITHOUT_CLASSIFICATION	1.7493504002917892E-7	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.99999982506496	WITHOUT_CLASSIFICATION	1.7493504002917892E-7	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999995850094993	WITHOUT_CLASSIFICATION	4.149905007574074E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999981905224061	WITHOUT_CLASSIFICATION	1.809477593934485E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999981905224061	WITHOUT_CLASSIFICATION	1.809477593934485E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999981905224061	WITHOUT_CLASSIFICATION	1.809477593934485E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999969832623609	WITHOUT_CLASSIFICATION	3.0167376392230057E-6	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999997636159799	WITHOUT_CLASSIFICATION	2.3638402027783038E-7	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999997636159799	WITHOUT_CLASSIFICATION	2.3638402027783038E-7	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999964229057998	WITHOUT_CLASSIFICATION	3.577094200094294E-6	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999998323985931	WITHOUT_CLASSIFICATION	1.67601406925633E-7	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999970666835559	WITHOUT_CLASSIFICATION	2.9333164441031782E-6	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999994359797583	WITHOUT_CLASSIFICATION	5.640202418461754E-7	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999995012700957	WITHOUT_CLASSIFICATION	4.987299042605749E-7	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999991447527833	WITHOUT_CLASSIFICATION	8.552472166747109E-7	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999871059348758	WITHOUT_CLASSIFICATION	1.289406512407635E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999992159677833	WITHOUT_CLASSIFICATION	7.84032216736512E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999992159677833	WITHOUT_CLASSIFICATION	7.84032216736512E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999969832623609	WITHOUT_CLASSIFICATION	3.0167376392230057E-6	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999964229057998	WITHOUT_CLASSIFICATION	3.577094200094294E-6	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999996203624557	WITHOUT_CLASSIFICATION	3.7963754434225305E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999998323985931	WITHOUT_CLASSIFICATION	1.67601406925633E-7	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999970666835559	WITHOUT_CLASSIFICATION	2.9333164441031782E-6	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999132081527	WITHOUT_CLASSIFICATION	8.679184729913253E-8	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999987558054866	WITHOUT_CLASSIFICATION	1.244194513406489E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999998999587011	WITHOUT_CLASSIFICATION	1.0004129890831678E-6	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9999618877034758	WITHOUT_CLASSIFICATION	3.811229652414028E-5	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999986449493795	WITHOUT_CLASSIFICATION	1.3550506205121358E-6	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999269622096	WITHOUT_CLASSIFICATION	7.303779040106532E-8	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999999767863724	WITHOUT_CLASSIFICATION	2.3213627569646683E-8	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999132081527	WITHOUT_CLASSIFICATION	8.679184729913253E-8	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999999170156178	WITHOUT_CLASSIFICATION	8.298438219901713E-7	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999999170156178	WITHOUT_CLASSIFICATION	8.298438219901713E-7	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999989781516713	WITHOUT_CLASSIFICATION	1.0218483288037907E-6	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999996305041843	WITHOUT_CLASSIFICATION	3.694958157703449E-7	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.999999627815988	WITHOUT_CLASSIFICATION	3.7218401208185995E-7	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999996119419181	WITHOUT_CLASSIFICATION	3.8805808180615643E-7	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999981512078248	WITHOUT_CLASSIFICATION	1.8487921751448357E-6	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999998478431251	WITHOUT_CLASSIFICATION	1.521568748859607E-7	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999955165724608	WITHOUT_CLASSIFICATION	4.483427539222804E-6	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999998785999663	WITHOUT_CLASSIFICATION	1.2140003367378287E-7	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999478021383	WITHOUT_CLASSIFICATION	5.219786168456858E-8	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.999997462473876	WITHOUT_CLASSIFICATION	2.5375261238828187E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999994457367166	WITHOUT_CLASSIFICATION	5.542632834259017E-7	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999996119419181	WITHOUT_CLASSIFICATION	3.8805808180615643E-7	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999981512078248	WITHOUT_CLASSIFICATION	1.8487921751448357E-6	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999996784631131	WITHOUT_CLASSIFICATION	3.215368869303744E-7	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999965821169617	WITHOUT_CLASSIFICATION	3.417883038310202E-6	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999997358470197	WITHOUT_CLASSIFICATION	2.641529802436432E-7	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999966449999119	WITHOUT_CLASSIFICATION	3.355000088094397E-6	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.999995204110195	WITHOUT_CLASSIFICATION	4.795889804920558E-6	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999943996206981	WITHOUT_CLASSIFICATION	5.600379301908967E-6	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9999073478507992	WITHOUT_CLASSIFICATION	9.265214920083919E-5	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999965059693605	WITHOUT_CLASSIFICATION	3.4940306395107454E-6	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999945895599885	WITHOUT_CLASSIFICATION	5.410440011500645E-6	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999870586003394	WITHOUT_CLASSIFICATION	1.2941399660650508E-5	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999938920007343	WITHOUT_CLASSIFICATION	6.10799926561248E-6	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9999814655613577	WITHOUT_CLASSIFICATION	1.853443864231211E-5	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999990354482925	WITHOUT_CLASSIFICATION	9.64551707582335E-7	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999985523619438	WITHOUT_CLASSIFICATION	1.4476380561882663E-6	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999958084469507	WITHOUT_CLASSIFICATION	4.191553049282612E-6	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.999999837937018	WITHOUT_CLASSIFICATION	1.620629820419559E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999901705681313	WITHOUT_CLASSIFICATION	9.829431868629759E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999994643770674	WITHOUT_CLASSIFICATION	5.356229324462784E-7	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.999999694838583	WITHOUT_CLASSIFICATION	3.051614170744471E-7	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999997470927303	WITHOUT_CLASSIFICATION	2.529072696945607E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999901705681313	WITHOUT_CLASSIFICATION	9.829431868629759E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999994643770674	WITHOUT_CLASSIFICATION	5.356229324462784E-7	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.999999694838583	WITHOUT_CLASSIFICATION	3.051614170744471E-7	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999981911011625	WITHOUT_CLASSIFICATION	1.8088988374339232E-6	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999574947429	WITHOUT_CLASSIFICATION	4.250525703214035E-8	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999997630459632	WITHOUT_CLASSIFICATION	2.3695403682157743E-7	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999988773091947	WITHOUT_CLASSIFICATION	1.122690805367028E-6	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.999998826559266	WITHOUT_CLASSIFICATION	1.173440734082269E-6	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999988509156432	WITHOUT_CLASSIFICATION	1.149084356849836E-6	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999996936324462	WITHOUT_CLASSIFICATION	3.0636755370692727E-7	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.999999930720151	WITHOUT_CLASSIFICATION	6.927984894827877E-8	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999995707205865	WITHOUT_CLASSIFICATION	4.2927941357494683E-7	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999992766163922	WITHOUT_CLASSIFICATION	7.233836077910248E-7	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9986514397142667	WITHOUT_CLASSIFICATION	0.001348560285733222	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999993194653	WITHOUT_CLASSIFICATION	6.805347000730163E-7	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999987640884725	WITHOUT_CLASSIFICATION	1.2359115274440385E-6	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999982546209258	WITHOUT_CLASSIFICATION	1.745379074142244E-6	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9998650284359955	WITHOUT_CLASSIFICATION	1.3497156400454278E-4	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999995885342418	WITHOUT_CLASSIFICATION	4.114657582535502E-7	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999994945219064	WITHOUT_CLASSIFICATION	5.054780936181367E-7	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999986814512966	WITHOUT_CLASSIFICATION	1.3185487034628704E-6	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999988847781615	WITHOUT_CLASSIFICATION	1.1152218384992066E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999989226341717	WITHOUT_CLASSIFICATION	1.077365828349415E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999991194211065	WITHOUT_CLASSIFICATION	8.805788935228427E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999987582977767	WITHOUT_CLASSIFICATION	1.2417022232485582E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999987582977767	WITHOUT_CLASSIFICATION	1.2417022232485582E-6	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999964851088969	WITHOUT_CLASSIFICATION	3.514891103103694E-6	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999964851088969	WITHOUT_CLASSIFICATION	3.514891103103694E-6	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999998210919108	WITHOUT_CLASSIFICATION	1.7890808922212895E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999998210919108	WITHOUT_CLASSIFICATION	1.7890808922212895E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999994146269293	WITHOUT_CLASSIFICATION	5.853730706214797E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999304344896	WITHOUT_CLASSIFICATION	6.956551040617972E-8	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.999999681454314	WITHOUT_CLASSIFICATION	3.185456859958362E-7	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999944555251088	WITHOUT_CLASSIFICATION	5.544474891242531E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999822906812338	WITHOUT_CLASSIFICATION	1.770931876614291E-5	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999997636783418	WITHOUT_CLASSIFICATION	2.3632165826726626E-7	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999969033195882	WITHOUT_CLASSIFICATION	3.096680411733012E-6	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999996154256836	WITHOUT_CLASSIFICATION	3.8457431635529183E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999992159677833	WITHOUT_CLASSIFICATION	7.84032216736512E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999994146269293	WITHOUT_CLASSIFICATION	5.853730706214797E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999304344896	WITHOUT_CLASSIFICATION	6.956551040617972E-8	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.999999681454314	WITHOUT_CLASSIFICATION	3.185456859958362E-7	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999822906812338	WITHOUT_CLASSIFICATION	1.770931876614291E-5	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999997636783418	WITHOUT_CLASSIFICATION	2.3632165826726626E-7	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999984292504639	WITHOUT_CLASSIFICATION	1.5707495361278024E-6	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999965338378595	WITHOUT_CLASSIFICATION	3.466162140460816E-6	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999975702493972	WITHOUT_CLASSIFICATION	2.429750602840671E-6	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999975702493972	WITHOUT_CLASSIFICATION	2.429750602840671E-6	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999992959247348	WITHOUT_CLASSIFICATION	7.040752652097744E-7	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999999125990548	WITHOUT_CLASSIFICATION	8.740094520474276E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998649186136	WITHOUT_CLASSIFICATION	1.3508138627542646E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999932737308238	WITHOUT_CLASSIFICATION	6.726269176250041E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999932737308238	WITHOUT_CLASSIFICATION	6.726269176250041E-6	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999976319221147	WITHOUT_CLASSIFICATION	2.368077885255962E-6	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999996769662597	WITHOUT_CLASSIFICATION	3.230337403048983E-7	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999649503195	WITHOUT_CLASSIFICATION	3.5049680501655974E-8	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999996717202335	WITHOUT_CLASSIFICATION	3.2827976645461457E-7	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999997289763033	WITHOUT_CLASSIFICATION	2.7102369667609975E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999996366861253	WITHOUT_CLASSIFICATION	3.633138746225339E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999998104856742	WITHOUT_CLASSIFICATION	1.8951432566506896E-7	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999446243744	WITHOUT_CLASSIFICATION	5.537562573711097E-8	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999996584400254	WITHOUT_CLASSIFICATION	3.415599745901685E-7	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999998198241733	WITHOUT_CLASSIFICATION	1.8017582656586443E-7	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999996395799531	WITHOUT_CLASSIFICATION	3.604200469057438E-7	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999976319221147	WITHOUT_CLASSIFICATION	2.368077885255962E-6	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999996769662597	WITHOUT_CLASSIFICATION	3.230337403048983E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999996717202335	WITHOUT_CLASSIFICATION	3.2827976645461457E-7	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999998857194323	WITHOUT_CLASSIFICATION	1.1428056765486577E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998649186136	WITHOUT_CLASSIFICATION	1.3508138627542646E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998649186136	WITHOUT_CLASSIFICATION	1.3508138627542646E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999994457367166	WITHOUT_CLASSIFICATION	5.542632834259017E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999994457367166	WITHOUT_CLASSIFICATION	5.542632834259017E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999874889014	WITHOUT_CLASSIFICATION	1.2511098643434507E-8	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999874889014	WITHOUT_CLASSIFICATION	1.2511098643434507E-8	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999654921353	WITHOUT_CLASSIFICATION	3.4507864679926975E-8	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999998012235485	WITHOUT_CLASSIFICATION	1.9877645138497007E-7	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999996232505675	WITHOUT_CLASSIFICATION	3.767494324509697E-7	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999842771784683	WITHOUT_CLASSIFICATION	1.572282153177721E-5	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999999562817138	WITHOUT_CLASSIFICATION	4.371828622241589E-8	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999661261917	WITHOUT_CLASSIFICATION	3.387380840021172E-8	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999998879154434	WITHOUT_CLASSIFICATION	1.1208455667784482E-7	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999773748564	WITHOUT_CLASSIFICATION	2.2625143646092454E-8	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.999999677540136	WITHOUT_CLASSIFICATION	3.224598639903029E-7	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999998862615227	WITHOUT_CLASSIFICATION	1.1373847733731773E-7	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999991821349988	WITHOUT_CLASSIFICATION	8.178650010265472E-7	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.999999787992042	WITHOUT_CLASSIFICATION	2.1200795804147386E-7	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999998245287255	WITHOUT_CLASSIFICATION	1.7547127459770987E-7	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.999999975628349	WITHOUT_CLASSIFICATION	2.437165100424274E-8	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999995593985009	WITHOUT_CLASSIFICATION	4.406014989654189E-7	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999998166738264	WITHOUT_CLASSIFICATION	1.8332617362276086E-7	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999987748832451	WITHOUT_CLASSIFICATION	1.225116754969332E-6	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999999465052256	WITHOUT_CLASSIFICATION	5.349477434280706E-8	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999997871567126	WITHOUT_CLASSIFICATION	2.1284328741036878E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999998104856742	WITHOUT_CLASSIFICATION	1.8951432566506896E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999996584400254	WITHOUT_CLASSIFICATION	3.415599745901685E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999790347564	WITHOUT_CLASSIFICATION	2.0965243593583257E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999970096145199	WITHOUT_CLASSIFICATION	2.9903854801830947E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999970096145199	WITHOUT_CLASSIFICATION	2.9903854801830947E-6	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999998857194323	WITHOUT_CLASSIFICATION	1.1428056765486577E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998649186136	WITHOUT_CLASSIFICATION	1.3508138627542646E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999994457367166	WITHOUT_CLASSIFICATION	5.542632834259017E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999874889014	WITHOUT_CLASSIFICATION	1.2511098643434507E-8	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999998822042644	WITHOUT_CLASSIFICATION	1.1779573569321132E-7	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999998305339831	WITHOUT_CLASSIFICATION	1.694660168942315E-7	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999998656646196	WITHOUT_CLASSIFICATION	1.3433538040823734E-7	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999996989835742	WITHOUT_CLASSIFICATION	3.0101642585766933E-7	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999997439812967	WITHOUT_CLASSIFICATION	2.5601870336042156E-7	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999997439812967	WITHOUT_CLASSIFICATION	2.5601870336042156E-7	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999998925280226	WITHOUT_CLASSIFICATION	1.074719774395318E-7	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999990216342496	WITHOUT_CLASSIFICATION	9.783657504418351E-7	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999998342510266	WITHOUT_CLASSIFICATION	1.6574897341734583E-7	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999994199740238	WITHOUT_CLASSIFICATION	5.800259762246491E-7	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999995329226246	WITHOUT_CLASSIFICATION	4.6707737543396614E-7	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999995329226246	WITHOUT_CLASSIFICATION	4.6707737543396614E-7	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999997399641872	WITHOUT_CLASSIFICATION	2.6003581278784455E-7	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999996746140798	WITHOUT_CLASSIFICATION	3.253859203030005E-7	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999979873090866	WITHOUT_CLASSIFICATION	2.01269091344158E-6	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999994723010822	WITHOUT_CLASSIFICATION	5.276989178137348E-7	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999898494708738	WITHOUT_CLASSIFICATION	1.0150529126222212E-5	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999995071633151	WITHOUT_CLASSIFICATION	4.928366849115667E-7	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999986281241668	WITHOUT_CLASSIFICATION	1.3718758331549681E-6	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.99999992266303	WITHOUT_CLASSIFICATION	7.733697008548827E-8	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999901537419162	WITHOUT_CLASSIFICATION	9.846258083722047E-6	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999969056696144	WITHOUT_CLASSIFICATION	3.09433038555774E-6	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999944349728602	WITHOUT_CLASSIFICATION	5.5650271398176955E-6	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999998206573286	WITHOUT_CLASSIFICATION	1.7934267150514926E-7	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999871636704643	WITHOUT_CLASSIFICATION	1.2836329535770974E-5	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999999324604981	WITHOUT_CLASSIFICATION	6.7539501862447E-8	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999977803414162	WITHOUT_CLASSIFICATION	2.2196585837795497E-6	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999980034888204	WITHOUT_CLASSIFICATION	1.9965111795984524E-6	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.999999867000103	WITHOUT_CLASSIFICATION	1.3299989691568614E-7	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.999999846090123	WITHOUT_CLASSIFICATION	1.539098769058521E-7	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.999999670446306	WITHOUT_CLASSIFICATION	3.295536940002283E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999974486364357	WITHOUT_CLASSIFICATION	2.5513635644055456E-6	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999983049777353	WITHOUT_CLASSIFICATION	1.695022264668678E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999998405825682	WITHOUT_CLASSIFICATION	1.5941743172693035E-7	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999998405825682	WITHOUT_CLASSIFICATION	1.5941743172693035E-7	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999982404645277	WITHOUT_CLASSIFICATION	1.7595354722532141E-6	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999993581609081	WITHOUT_CLASSIFICATION	6.418390918935183E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999984524709622	WITHOUT_CLASSIFICATION	1.547529037865557E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999984524709622	WITHOUT_CLASSIFICATION	1.547529037865557E-6	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999773211833476	WITHOUT_CLASSIFICATION	2.2678816652410364E-5	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999994674206678	WITHOUT_CLASSIFICATION	5.325793322191172E-7	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999852852411785	WITHOUT_CLASSIFICATION	1.4714758821673037E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999986365893603	WITHOUT_CLASSIFICATION	1.3634106397530528E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999986365893603	WITHOUT_CLASSIFICATION	1.3634106397530528E-6	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999979504105051	WITHOUT_CLASSIFICATION	2.0495894949064655E-6	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999993600393274	WITHOUT_CLASSIFICATION	6.399606725778948E-7	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999996267182696	WITHOUT_CLASSIFICATION	3.73281730338469E-7	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999998948697304	WITHOUT_CLASSIFICATION	1.0513026961182638E-7	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999995475717769	WITHOUT_CLASSIFICATION	4.5242822307548297E-7	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999988867388503	WITHOUT_CLASSIFICATION	1.1132611497120394E-6	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999998706925005	WITHOUT_CLASSIFICATION	1.2930749942051556E-7	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999907339937743	WITHOUT_CLASSIFICATION	9.26600622582047E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999990901579373	WITHOUT_CLASSIFICATION	9.098420627420688E-7	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999985414440128	WITHOUT_CLASSIFICATION	1.4585559873182756E-6	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999991674474042	WITHOUT_CLASSIFICATION	8.325525956619087E-7	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999988331626448	WITHOUT_CLASSIFICATION	1.1668373552223894E-6	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999994339612905	WITHOUT_CLASSIFICATION	5.660387094604687E-7	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999966398476379	WITHOUT_CLASSIFICATION	3.3601523620297413E-6	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999994614842154	WITHOUT_CLASSIFICATION	5.385157845473691E-7	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999999626496969	WITHOUT_CLASSIFICATION	3.735030306811611E-8	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999453706793	WITHOUT_CLASSIFICATION	5.4629320713003624E-8	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999972469906424	WITHOUT_CLASSIFICATION	2.7530093575473325E-6	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999928005207502	WITHOUT_CLASSIFICATION	7.199479249774173E-6	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.999999062534919	WITHOUT_CLASSIFICATION	9.374650810125809E-7	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999998624792782	WITHOUT_CLASSIFICATION	1.3752072186354111E-7	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999995491737506	WITHOUT_CLASSIFICATION	4.5082624936075543E-7	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999994620966282	WITHOUT_CLASSIFICATION	5.379033717973274E-7	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.999999612343893	WITHOUT_CLASSIFICATION	3.876561069965482E-7	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999326744201976	WITHOUT_CLASSIFICATION	6.732557980239433E-5	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.999996971185493	WITHOUT_CLASSIFICATION	3.0288145069945857E-6	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999878770028006	WITHOUT_CLASSIFICATION	1.212299719947581E-5	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999998161894601	WITHOUT_CLASSIFICATION	1.8381053983945184E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999984299938165	WITHOUT_CLASSIFICATION	1.5700061834672338E-6	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.999998944039555	WITHOUT_CLASSIFICATION	1.0559604449213343E-6	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999924594634	WITHOUT_CLASSIFICATION	7.540536768687204E-9	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999966398476379	WITHOUT_CLASSIFICATION	3.3601523620297413E-6	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999998161894601	WITHOUT_CLASSIFICATION	1.8381053983945184E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999984299938165	WITHOUT_CLASSIFICATION	1.5700061834672338E-6	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999924594634	WITHOUT_CLASSIFICATION	7.540536768687204E-9	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999984423876269	WITHOUT_CLASSIFICATION	1.5576123730224127E-6	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.999998815914482	WITHOUT_CLASSIFICATION	1.184085517986963E-6	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.999997413723096	WITHOUT_CLASSIFICATION	2.586276903927554E-6	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999874807103731	WITHOUT_CLASSIFICATION	1.2519289626749643E-5	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999960914102412	WITHOUT_CLASSIFICATION	3.908589758922827E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999453657048	WITHOUT_CLASSIFICATION	5.463429515958489E-8	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999985741168325	WITHOUT_CLASSIFICATION	1.4258831674746288E-6	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999992549704417	WITHOUT_CLASSIFICATION	7.450295582483046E-7	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999995287828741	WITHOUT_CLASSIFICATION	4.712171258057848E-7	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.999999828068747	WITHOUT_CLASSIFICATION	1.719312530351421E-7	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999989700099718	WITHOUT_CLASSIFICATION	1.0299900282029716E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999989700099718	WITHOUT_CLASSIFICATION	1.0299900282029716E-5	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.999998827132577	WITHOUT_CLASSIFICATION	1.1728674229924789E-6	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999994785890358	WITHOUT_CLASSIFICATION	5.214109641148246E-7	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999998501096093	WITHOUT_CLASSIFICATION	1.4989039052104262E-7	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.999998913009735	WITHOUT_CLASSIFICATION	1.0869902650199663E-6	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999998372262038	WITHOUT_CLASSIFICATION	1.6277379616454978E-7	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.999998630619023	WITHOUT_CLASSIFICATION	1.3693809768293615E-6	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999988455209424	WITHOUT_CLASSIFICATION	1.1544790575730988E-6	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999998232721798	WITHOUT_CLASSIFICATION	1.767278202351553E-7	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999993926590632	WITHOUT_CLASSIFICATION	6.073409368038105E-7	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999947845832	WITHOUT_CLASSIFICATION	5.215416715320662E-9	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999992697256223	WITHOUT_CLASSIFICATION	7.302743776710634E-7	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999921247744	WITHOUT_CLASSIFICATION	7.875225677625704E-9	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999994921185773	WITHOUT_CLASSIFICATION	5.078814226411205E-7	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999998270570899	WITHOUT_CLASSIFICATION	1.7294291020833035E-7	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999998391279832	WITHOUT_CLASSIFICATION	1.6087201688181547E-7	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999999626368855	WITHOUT_CLASSIFICATION	3.736311442888535E-8	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999997965554329	WITHOUT_CLASSIFICATION	2.034445671912718E-7	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999999201537394	WITHOUT_CLASSIFICATION	7.98462605939642E-8	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999998933825563	WITHOUT_CLASSIFICATION	1.0661744361992332E-7	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.999999913381343	WITHOUT_CLASSIFICATION	8.66186570423651E-8	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9999978341208425	WITHOUT_CLASSIFICATION	2.1658791574520894E-6	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999986492747227	WITHOUT_CLASSIFICATION	1.3507252772642787E-6	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999998833029641	WITHOUT_CLASSIFICATION	1.1669703582874153E-7	TEST
// others	WITHOUT_CLASSIFICATION	0.9999975945843106	WITHOUT_CLASSIFICATION	2.405415689393902E-6	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999993302174977	WITHOUT_CLASSIFICATION	6.697825024097242E-7	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999993751690804	WITHOUT_CLASSIFICATION	6.248309196589089E-7	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999988708287351	WITHOUT_CLASSIFICATION	1.1291712649575092E-6	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999482480392	WITHOUT_CLASSIFICATION	5.1751960888545145E-8	TEST
// scripts	WITHOUT_CLASSIFICATION	0.999999287166395	WITHOUT_CLASSIFICATION	7.128336049706731E-7	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999997548114796	WITHOUT_CLASSIFICATION	2.451885203201671E-7	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999998340200783	WITHOUT_CLASSIFICATION	1.659799217029201E-7	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999998089215366	WITHOUT_CLASSIFICATION	1.9107846346932454E-7	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999995823882916	WITHOUT_CLASSIFICATION	4.176117084650989E-7	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999996906945026	WITHOUT_CLASSIFICATION	3.093054975043951E-7	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999996828326018	WITHOUT_CLASSIFICATION	3.1716739822423896E-7	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999978602470188	WITHOUT_CLASSIFICATION	2.1397529813087645E-6	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999997653279145	WITHOUT_CLASSIFICATION	2.346720855909379E-7	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999985913602071	WITHOUT_CLASSIFICATION	1.4086397929600105E-6	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999997295908318	WITHOUT_CLASSIFICATION	2.7040916819871446E-7	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999963844507835	WITHOUT_CLASSIFICATION	3.6155492164804817E-6	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999991652089579	WITHOUT_CLASSIFICATION	8.347910421339047E-7	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999653791088132	WITHOUT_CLASSIFICATION	3.4620891186692514E-5	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999992549107464	WITHOUT_CLASSIFICATION	7.45089253590943E-7	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999994383900424	WITHOUT_CLASSIFICATION	5.616099577396467E-7	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999998211518268	WITHOUT_CLASSIFICATION	1.7884817328461766E-7	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999974802998706	WITHOUT_CLASSIFICATION	2.5197001294069486E-6	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999999070636931	WITHOUT_CLASSIFICATION	9.293630693029037E-8	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999998577593049	WITHOUT_CLASSIFICATION	1.4224069503726192E-7	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999992405695964	WITHOUT_CLASSIFICATION	7.594304035616825E-7	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.999999594024874	WITHOUT_CLASSIFICATION	4.0597512584329805E-7	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.999999697015313	WITHOUT_CLASSIFICATION	3.0298468700820345E-7	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999998830641293	WITHOUT_CLASSIFICATION	1.1693587075629689E-7	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999552245508345	WITHOUT_CLASSIFICATION	4.477544916544963E-5	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999932351478715	WITHOUT_CLASSIFICATION	6.764852128536827E-6	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999972653069866	WITHOUT_CLASSIFICATION	2.734693013265613E-6	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999988011790337	WITHOUT_CLASSIFICATION	1.1988209663379086E-6	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999285418562	WITHOUT_CLASSIFICATION	7.145814381778772E-8	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999993449580477	WITHOUT_CLASSIFICATION	6.550419522615399E-7	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999983087968171	WITHOUT_CLASSIFICATION	1.6912031829147633E-6	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.999996922503565	WITHOUT_CLASSIFICATION	3.0774964349809782E-6	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.999996922503565	WITHOUT_CLASSIFICATION	3.0774964349809782E-6	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999983605723566	WITHOUT_CLASSIFICATION	1.6394276433629112E-6	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999981301405901	WITHOUT_CLASSIFICATION	1.8698594098882395E-6	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999980295944795	WITHOUT_CLASSIFICATION	1.970405520432353E-6	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999988278684793	WITHOUT_CLASSIFICATION	1.1721315207059092E-6	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999995896193197	WITHOUT_CLASSIFICATION	4.103806802938179E-7	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999990252092149	WITHOUT_CLASSIFICATION	9.7479078510585E-7	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999344046726524	WITHOUT_CLASSIFICATION	6.559532734760158E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999992161804154	WITHOUT_CLASSIFICATION	7.838195845996296E-7	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999988389635293	WITHOUT_CLASSIFICATION	1.161036470740074E-6	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999999606488539	WITHOUT_CLASSIFICATION	3.935114621786012E-8	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999990574129626	WITHOUT_CLASSIFICATION	9.425870375212797E-7	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999991692550333	WITHOUT_CLASSIFICATION	8.307449668345617E-7	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999893973685905	WITHOUT_CLASSIFICATION	1.060263140953365E-5	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999998387274818	WITHOUT_CLASSIFICATION	1.612725181554717E-7	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999967511449147	WITHOUT_CLASSIFICATION	3.248855085244099E-6	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999950672061432	WITHOUT_CLASSIFICATION	4.932793856818804E-6	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999961366154082	WITHOUT_CLASSIFICATION	3.863384591845231E-6	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999984694056605	WITHOUT_CLASSIFICATION	1.530594339560604E-6	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.999999810052696	WITHOUT_CLASSIFICATION	1.8994730391368445E-7	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999997246674203	WITHOUT_CLASSIFICATION	2.7533257970703423E-7	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999976951478683	WITHOUT_CLASSIFICATION	2.304852131806495E-6	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999999359939916	WITHOUT_CLASSIFICATION	6.400600828889663E-8	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999937792881853	WITHOUT_CLASSIFICATION	6.2207118147061784E-6	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999988934085403	WITHOUT_CLASSIFICATION	1.10659145972639E-6	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999997633141129	WITHOUT_CLASSIFICATION	2.3668588715723967E-7	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999978096070997	WITHOUT_CLASSIFICATION	2.19039290020476E-6	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999995935963201	WITHOUT_CLASSIFICATION	4.0640367989261464E-7	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999996719939903	WITHOUT_CLASSIFICATION	3.280060096534171E-7	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999998190800838	WITHOUT_CLASSIFICATION	1.8091991616353323E-7	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999993125350705	WITHOUT_CLASSIFICATION	6.874649294684995E-7	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999996377471326	WITHOUT_CLASSIFICATION	3.6225286735703733E-7	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999916374849956	WITHOUT_CLASSIFICATION	8.362515004350913E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999695895391	WITHOUT_CLASSIFICATION	3.0410460853368145E-8	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999966680572988	WITHOUT_CLASSIFICATION	3.331942701070583E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999695895391	WITHOUT_CLASSIFICATION	3.0410460853368145E-8	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999998050997495	WITHOUT_CLASSIFICATION	1.9490025054557984E-7	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999729017793088	WITHOUT_CLASSIFICATION	2.7098220691133198E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999729017793088	WITHOUT_CLASSIFICATION	2.7098220691133198E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999729017793088	WITHOUT_CLASSIFICATION	2.7098220691133198E-5	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999995564908836	WITHOUT_CLASSIFICATION	4.43509116417835E-7	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999995564908836	WITHOUT_CLASSIFICATION	4.43509116417835E-7	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999971169552992	WITHOUT_CLASSIFICATION	2.883044700752698E-6	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999395679043	WITHOUT_CLASSIFICATION	6.043209570849659E-8	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999995876081508	WITHOUT_CLASSIFICATION	4.123918492019438E-7	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999992804885244	WITHOUT_CLASSIFICATION	7.195114756675059E-7	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999881240583484	WITHOUT_CLASSIFICATION	1.1875941651652853E-5	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999983849915881	WITHOUT_CLASSIFICATION	1.6150084117990417E-6	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999991426014163	WITHOUT_CLASSIFICATION	8.57398583798959E-7	TEST
// ignore	WITHOUT_CLASSIFICATION	0.999999185951783	WITHOUT_CLASSIFICATION	8.140482168561246E-7	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999995580013689	WITHOUT_CLASSIFICATION	4.419986312012025E-7	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.999999875132556	WITHOUT_CLASSIFICATION	1.2486744414483358E-7	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999956151278931	WITHOUT_CLASSIFICATION	4.384872106892792E-6	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.999999628335243	WITHOUT_CLASSIFICATION	3.7166475691112727E-7	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999996750349477	WITHOUT_CLASSIFICATION	3.2496505228246805E-7	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999989620021436	WITHOUT_CLASSIFICATION	1.0379978564056186E-6	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999993911920538	WITHOUT_CLASSIFICATION	6.088079462650299E-7	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999992972939776	WITHOUT_CLASSIFICATION	7.027060223992218E-7	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999995152423625	WITHOUT_CLASSIFICATION	4.847576374759187E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999992839604166	WITHOUT_CLASSIFICATION	7.160395833834437E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999992839604166	WITHOUT_CLASSIFICATION	7.160395833834437E-7	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999977661330951	WITHOUT_CLASSIFICATION	2.2338669048619027E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999998397531801	WITHOUT_CLASSIFICATION	1.6024681993349357E-7	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999998397531801	WITHOUT_CLASSIFICATION	1.6024681993349357E-7	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999890506944902	WITHOUT_CLASSIFICATION	1.0949305509928106E-5	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999995176177379	WITHOUT_CLASSIFICATION	4.823822621685448E-7	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999988603260559	WITHOUT_CLASSIFICATION	1.1396739441412332E-6	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999965950643517	WITHOUT_CLASSIFICATION	3.404935648320043E-6	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999992525849448	WITHOUT_CLASSIFICATION	7.474150552329833E-7	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999998521056344	WITHOUT_CLASSIFICATION	1.4789436559044453E-7	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999991771340108	WITHOUT_CLASSIFICATION	8.228659892746096E-7	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.999999836163326	WITHOUT_CLASSIFICATION	1.6383667395639895E-7	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999979805303333	WITHOUT_CLASSIFICATION	2.0194696667250714E-6	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999989287855015	WITHOUT_CLASSIFICATION	1.0712144984467907E-6	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999984165185305	WITHOUT_CLASSIFICATION	1.5834814694584718E-6	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999993862501855	WITHOUT_CLASSIFICATION	6.137498145593038E-7	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999980999252076	WITHOUT_CLASSIFICATION	1.9000747924466003E-6	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999999011784501	WITHOUT_CLASSIFICATION	9.882154985623116E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.999999185951783	WITHOUT_CLASSIFICATION	8.140482168561246E-7	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999228916276713	WITHOUT_CLASSIFICATION	7.710837232870053E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999994136407517	WITHOUT_CLASSIFICATION	5.863592482891811E-7	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999992627494906	WITHOUT_CLASSIFICATION	7.372505093698308E-7	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999992627494906	WITHOUT_CLASSIFICATION	7.372505093698308E-7	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999981379042595	WITHOUT_CLASSIFICATION	1.8620957404527708E-6	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.999993800980401	WITHOUT_CLASSIFICATION	6.19901959899744E-6	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999998671238794	WITHOUT_CLASSIFICATION	1.3287612051665584E-7	TEST
// restore position	WITHOUT_CLASSIFICATION	0.999994712228411	WITHOUT_CLASSIFICATION	5.287771589035404E-6	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999998968611534	WITHOUT_CLASSIFICATION	1.0313884659736218E-7	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999968968785271	WITHOUT_CLASSIFICATION	3.1031214729840883E-6	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999123525072	WITHOUT_CLASSIFICATION	8.764749276461806E-8	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999859222526877	WITHOUT_CLASSIFICATION	1.4077747312264753E-5	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999991903139884	WITHOUT_CLASSIFICATION	8.096860115748781E-7	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999996911953651	WITHOUT_CLASSIFICATION	3.088046348938789E-7	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999982306949488	WITHOUT_CLASSIFICATION	1.7693050513381613E-6	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999929589959833	WITHOUT_CLASSIFICATION	7.041004016730934E-6	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9998884740540986	WITHOUT_CLASSIFICATION	1.1152594590131683E-4	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999994761945793	WITHOUT_CLASSIFICATION	5.238054207103479E-7	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999998307372864	WITHOUT_CLASSIFICATION	1.6926271363156755E-7	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999971361946703	WITHOUT_CLASSIFICATION	2.8638053296070115E-6	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999988988373834	WITHOUT_CLASSIFICATION	1.101162616649335E-6	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999951607575305	WITHOUT_CLASSIFICATION	4.8392424695320925E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999983102276346	WITHOUT_CLASSIFICATION	1.6897723653307716E-6	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999997955558023	WITHOUT_CLASSIFICATION	2.0444419766057074E-7	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.999999903072715	WITHOUT_CLASSIFICATION	9.692728495662277E-8	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999999070733937	WITHOUT_CLASSIFICATION	9.292660629380723E-8	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999940113620986	WITHOUT_CLASSIFICATION	5.988637901374024E-6	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999980064366	WITHOUT_CLASSIFICATION	1.9935633789354686E-9	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999997848418306	WITHOUT_CLASSIFICATION	2.151581693243008E-7	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999950023040729	WITHOUT_CLASSIFICATION	4.9976959270406175E-6	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.999970792438657	WITHOUT_CLASSIFICATION	2.920756134299451E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999989167197264	WITHOUT_CLASSIFICATION	1.083280273598703E-6	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999998388456122	WITHOUT_CLASSIFICATION	1.6115438779349077E-7	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999951590940442	WITHOUT_CLASSIFICATION	4.840905955761393E-6	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999994573894092	WITHOUT_CLASSIFICATION	5.426105907464411E-7	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999997956075812	WITHOUT_CLASSIFICATION	2.043924187268218E-7	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.999910711430774	WITHOUT_CLASSIFICATION	8.928856922607742E-5	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999812988882456	WITHOUT_CLASSIFICATION	1.870111175439705E-5	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999811273519013	WITHOUT_CLASSIFICATION	1.8872648098796562E-5	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999970215351025	WITHOUT_CLASSIFICATION	2.9784648975718866E-6	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999989167197264	WITHOUT_CLASSIFICATION	1.083280273598703E-6	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999963850003701	WITHOUT_CLASSIFICATION	3.6149996298118446E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999811273519013	WITHOUT_CLASSIFICATION	1.8872648098796562E-5	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999997201507653	WITHOUT_CLASSIFICATION	2.798492347493497E-7	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.999999843254403	WITHOUT_CLASSIFICATION	1.5674559692065436E-7	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.999990736495454	WITHOUT_CLASSIFICATION	9.263504546025134E-6	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.99999959504835	WITHOUT_CLASSIFICATION	4.0495165005040517E-7	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999959047833642	WITHOUT_CLASSIFICATION	4.095216635908266E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999993900305107	WITHOUT_CLASSIFICATION	6.099694892207998E-7	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999993900305107	WITHOUT_CLASSIFICATION	6.099694892207998E-7	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999983829325652	WITHOUT_CLASSIFICATION	1.617067434809044E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999266065812	WITHOUT_CLASSIFICATION	7.339341877462442E-8	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999996550075554	WITHOUT_CLASSIFICATION	3.4499244462082067E-7	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999996550075554	WITHOUT_CLASSIFICATION	3.4499244462082067E-7	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999991838183392	WITHOUT_CLASSIFICATION	8.161816608691846E-7	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9997255237466234	WITHOUT_CLASSIFICATION	2.744762533766629E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9999000691302017	WITHOUT_CLASSIFICATION	9.993086979833901E-5	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9999000691302017	WITHOUT_CLASSIFICATION	9.993086979833901E-5	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999950562993614	WITHOUT_CLASSIFICATION	4.943700638598764E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999963674743365	WITHOUT_CLASSIFICATION	3.632525663402741E-6	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999985988132888	WITHOUT_CLASSIFICATION	1.4011867112393704E-6	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999997787777091	WITHOUT_CLASSIFICATION	2.2122229095725807E-7	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999993270064068	WITHOUT_CLASSIFICATION	6.729935931892336E-7	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999866891887456	WITHOUT_CLASSIFICATION	1.3310811254471997E-5	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.999998589754384	WITHOUT_CLASSIFICATION	1.4102456159939553E-6	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999989514611204	WITHOUT_CLASSIFICATION	1.048538879618564E-6	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999985302806176	WITHOUT_CLASSIFICATION	1.4697193823159487E-6	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999976318814573	WITHOUT_CLASSIFICATION	2.3681185427418136E-6	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999944956446212	WITHOUT_CLASSIFICATION	5.50435537876178E-6	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999980317654987	WITHOUT_CLASSIFICATION	1.968234501208935E-6	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999982124459196	WITHOUT_CLASSIFICATION	1.7875540804980275E-6	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999835772266557	WITHOUT_CLASSIFICATION	1.642277334440054E-5	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999997972073641	WITHOUT_CLASSIFICATION	2.027926358231446E-7	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.999999845436492	WITHOUT_CLASSIFICATION	1.545635080162936E-7	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.999864587402652	WITHOUT_CLASSIFICATION	1.354125973479947E-4	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999992633125623	WITHOUT_CLASSIFICATION	7.366874377051646E-7	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999989680623502	WITHOUT_CLASSIFICATION	1.031937649715195E-6	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999971592427578	WITHOUT_CLASSIFICATION	2.8407572422978084E-6	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999997312953528	WITHOUT_CLASSIFICATION	2.687046472243466E-7	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999990275835333	WITHOUT_CLASSIFICATION	9.72416466673429E-7	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999989697650405	WITHOUT_CLASSIFICATION	1.0302349594563428E-6	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999931395395385	WITHOUT_CLASSIFICATION	6.860460461546399E-6	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999882196245307	WITHOUT_CLASSIFICATION	1.1780375469399073E-5	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999916476062941	WITHOUT_CLASSIFICATION	8.35239370582546E-6	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999979772304484	WITHOUT_CLASSIFICATION	2.0227695516192096E-6	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999962772883176	WITHOUT_CLASSIFICATION	3.7227116824345357E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999997387286068	WITHOUT_CLASSIFICATION	2.612713931918723E-7	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999997387286068	WITHOUT_CLASSIFICATION	2.612713931918723E-7	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.999997925892664	WITHOUT_CLASSIFICATION	2.0741073359712874E-6	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999995134150901	WITHOUT_CLASSIFICATION	4.865849098792109E-7	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999886596831005	WITHOUT_CLASSIFICATION	1.134031689946934E-5	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999973028874362	WITHOUT_CLASSIFICATION	2.6971125637134956E-6	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999808749012068	WITHOUT_CLASSIFICATION	1.912509879314779E-5	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999982213048897	WITHOUT_CLASSIFICATION	1.7786951104069213E-6	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999950853286994	WITHOUT_CLASSIFICATION	4.914671300607847E-6	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999991997452893	WITHOUT_CLASSIFICATION	8.002547107198538E-7	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999984059489976	WITHOUT_CLASSIFICATION	1.5940510023624162E-6	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999985441565827	WITHOUT_CLASSIFICATION	1.4558434171954708E-6	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999997066173878	WITHOUT_CLASSIFICATION	2.933826121371323E-7	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999990971391665	WITHOUT_CLASSIFICATION	9.028608336134613E-7	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999961020297693	WITHOUT_CLASSIFICATION	3.897970230736065E-6	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999995144874432	WITHOUT_CLASSIFICATION	4.855125568367944E-7	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999999404630909	WITHOUT_CLASSIFICATION	5.9536909111499394E-8	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999998693380027	WITHOUT_CLASSIFICATION	1.3066199735570233E-7	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999999853334247	WITHOUT_CLASSIFICATION	1.466657525839928E-8	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999996611021508	WITHOUT_CLASSIFICATION	3.3889784920846823E-7	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999979010687723	WITHOUT_CLASSIFICATION	2.0989312276875458E-6	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999998923690234	WITHOUT_CLASSIFICATION	1.0763097659039526E-7	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999995397684495	WITHOUT_CLASSIFICATION	4.602315505760104E-7	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999970287069988	WITHOUT_CLASSIFICATION	2.9712930010765025E-6	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999944007698344	WITHOUT_CLASSIFICATION	5.599230165722293E-6	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999997611749843	WITHOUT_CLASSIFICATION	2.388250156817103E-7	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999993936067803	WITHOUT_CLASSIFICATION	6.063932197590016E-7	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999990089485025	WITHOUT_CLASSIFICATION	9.9105149761969E-7	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999957627767603	WITHOUT_CLASSIFICATION	4.237223239734788E-6	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999995511065984	WITHOUT_CLASSIFICATION	4.488934015335734E-7	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999981176879981	WITHOUT_CLASSIFICATION	1.8823120019415133E-6	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999995641844232	WITHOUT_CLASSIFICATION	4.35815576879479E-7	TEST
// finally	WITHOUT_CLASSIFICATION	0.999995325943719	WITHOUT_CLASSIFICATION	4.674056280995969E-6	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999982295809536	WITHOUT_CLASSIFICATION	1.7704190463228327E-6	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.999998925739766	WITHOUT_CLASSIFICATION	1.0742602339711437E-6	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999992116211286	WITHOUT_CLASSIFICATION	7.883788714476556E-7	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999987490937736	WITHOUT_CLASSIFICATION	1.2509062263235654E-6	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999965882693436	WITHOUT_CLASSIFICATION	3.411730656373845E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999964981313315	WITHOUT_CLASSIFICATION	3.5018686685126486E-6	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999993377126096	WITHOUT_CLASSIFICATION	6.622873903875308E-7	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999994005219197	WITHOUT_CLASSIFICATION	5.994780802758538E-7	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999994208393174	WITHOUT_CLASSIFICATION	5.791606825106677E-7	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.999982605717668	WITHOUT_CLASSIFICATION	1.7394282332036158E-5	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999997507251284	WITHOUT_CLASSIFICATION	2.4927487165584855E-7	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999487436612	WITHOUT_CLASSIFICATION	5.125633886749294E-8	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999487436612	WITHOUT_CLASSIFICATION	5.125633886749294E-8	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999990365883795	WITHOUT_CLASSIFICATION	9.63411620520974E-7	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999998423569619	WITHOUT_CLASSIFICATION	1.5764303804552544E-7	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999860205815874	WITHOUT_CLASSIFICATION	1.3979418412668976E-5	TEST
// return	WITHOUT_CLASSIFICATION	0.9999990860859037	WITHOUT_CLASSIFICATION	9.13914096248316E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999988847781615	WITHOUT_CLASSIFICATION	1.1152218384992066E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999989226341717	WITHOUT_CLASSIFICATION	1.077365828349415E-6	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999990633805794	WITHOUT_CLASSIFICATION	9.366194206934801E-7	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999995322854021	WITHOUT_CLASSIFICATION	4.677145978970879E-7	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.999999460168558	WITHOUT_CLASSIFICATION	5.398314419586847E-7	TEST
// tc	WITHOUT_CLASSIFICATION	0.9999958451886252	WITHOUT_CLASSIFICATION	4.154811374748011E-6	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999994712055874	WITHOUT_CLASSIFICATION	5.287944126579988E-7	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999994212210576	WITHOUT_CLASSIFICATION	5.787789425263456E-7	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.999999650609919	WITHOUT_CLASSIFICATION	3.493900810549959E-7	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999999196405039	WITHOUT_CLASSIFICATION	8.03594959664365E-8	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999997122977675	WITHOUT_CLASSIFICATION	2.8770223256638945E-7	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999991608631164	WITHOUT_CLASSIFICATION	8.391368836844522E-7	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999996849168483	WITHOUT_CLASSIFICATION	3.150831517189038E-7	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999988012485407	WITHOUT_CLASSIFICATION	1.198751459277484E-6	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999997537961479	WITHOUT_CLASSIFICATION	2.462038520234933E-7	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999986671166569	WITHOUT_CLASSIFICATION	1.3328833431533109E-6	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999997699449023	WITHOUT_CLASSIFICATION	2.3005509781716147E-7	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999993761235777	WITHOUT_CLASSIFICATION	6.238764221909444E-7	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999922131492989	WITHOUT_CLASSIFICATION	7.786850701087762E-6	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.999995470795511	WITHOUT_CLASSIFICATION	4.529204488983448E-6	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999996975831601	WITHOUT_CLASSIFICATION	3.024168399124352E-7	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999996334544825	WITHOUT_CLASSIFICATION	3.665455175621168E-7	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999996742971994	WITHOUT_CLASSIFICATION	3.2570280059098024E-7	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.999999795626621	WITHOUT_CLASSIFICATION	2.0437337892050056E-7	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999996268253968	WITHOUT_CLASSIFICATION	3.731746031348069E-7	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999996489421549	WITHOUT_CLASSIFICATION	3.510578452076458E-7	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999995567160165	WITHOUT_CLASSIFICATION	4.4328398347866846E-7	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999997753293303	WITHOUT_CLASSIFICATION	2.2467066977215058E-7	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999994440346781	WITHOUT_CLASSIFICATION	5.559653217822093E-7	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999883950400187	WITHOUT_CLASSIFICATION	1.1604959981238846E-5	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999993377126096	WITHOUT_CLASSIFICATION	6.622873903875308E-7	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.999999880405085	WITHOUT_CLASSIFICATION	1.1959491492188743E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999999561424109	WITHOUT_CLASSIFICATION	4.385758903958764E-8	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999999561424109	WITHOUT_CLASSIFICATION	4.385758903958764E-8	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999959615846811	WITHOUT_CLASSIFICATION	4.038415318972972E-6	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999998004850503	WITHOUT_CLASSIFICATION	1.995149496485331E-7	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999996144262584	WITHOUT_CLASSIFICATION	3.8557374155893544E-7	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999992057476702	WITHOUT_CLASSIFICATION	7.942523298161262E-7	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999843147212895	WITHOUT_CLASSIFICATION	1.5685278710522394E-5	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999849716280713	WITHOUT_CLASSIFICATION	1.5028371928709091E-5	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999875242531027	WITHOUT_CLASSIFICATION	1.2475746897418918E-5	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999830212406289	WITHOUT_CLASSIFICATION	1.6978759371101054E-5	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.999990587325609	WITHOUT_CLASSIFICATION	9.412674391050127E-6	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.999992506363009	WITHOUT_CLASSIFICATION	7.4936369911137546E-6	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999893657376356	WITHOUT_CLASSIFICATION	1.0634262364469135E-5	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999828809956508	WITHOUT_CLASSIFICATION	1.711900434924072E-5	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999924652747942	WITHOUT_CLASSIFICATION	7.5347252058045355E-6	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999995251972184	WITHOUT_CLASSIFICATION	4.7480278164638865E-7	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999979687192607	WITHOUT_CLASSIFICATION	2.0312807393083658E-6	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999997352545953	WITHOUT_CLASSIFICATION	2.6474540478782343E-7	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999836255054069	WITHOUT_CLASSIFICATION	1.6374494593112294E-5	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999755919358091	WITHOUT_CLASSIFICATION	2.440806419086256E-5	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999926968306717	WITHOUT_CLASSIFICATION	7.303169328271534E-6	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999941857888609	WITHOUT_CLASSIFICATION	5.814211139112301E-6	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999914455780679	WITHOUT_CLASSIFICATION	8.554421932044018E-6	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999931407710186	WITHOUT_CLASSIFICATION	6.859228981372959E-6	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999996813226121	WITHOUT_CLASSIFICATION	3.186773879120229E-7	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.999999909406947	WITHOUT_CLASSIFICATION	9.059305288987005E-8	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.999999951235856	WITHOUT_CLASSIFICATION	4.876414380336404E-8	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.99999939077964	WITHOUT_CLASSIFICATION	6.092203600776025E-7	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999964375907507	WITHOUT_CLASSIFICATION	3.562409249281329E-6	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999998044218895	WITHOUT_CLASSIFICATION	1.9557811055340538E-7	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.999999384725268	WITHOUT_CLASSIFICATION	6.15274732067009E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999998200544893	WITHOUT_CLASSIFICATION	1.7994551076010938E-7	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999994527068498	WITHOUT_CLASSIFICATION	5.472931501392135E-7	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999995877020931	WITHOUT_CLASSIFICATION	4.122979068797432E-7	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999985808362404	WITHOUT_CLASSIFICATION	1.4191637595210005E-6	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999993544433551	WITHOUT_CLASSIFICATION	6.455566448805561E-7	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999998211296452	WITHOUT_CLASSIFICATION	1.7887035480074943E-7	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999994019023596	WITHOUT_CLASSIFICATION	5.980976405172987E-7	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999998818997645	WITHOUT_CLASSIFICATION	1.1810023555405768E-7	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.99999939077964	WITHOUT_CLASSIFICATION	6.092203600776025E-7	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999964375907507	WITHOUT_CLASSIFICATION	3.562409249281329E-6	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999998044218895	WITHOUT_CLASSIFICATION	1.9557811055340538E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999998200544893	WITHOUT_CLASSIFICATION	1.7994551076010938E-7	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999997054865349	WITHOUT_CLASSIFICATION	2.9451346509626866E-7	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999998767688599	WITHOUT_CLASSIFICATION	1.2323114007514228E-7	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999999142172575	WITHOUT_CLASSIFICATION	8.57827424980833E-7	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999993895764143	WITHOUT_CLASSIFICATION	6.104235856628097E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999996384051365	WITHOUT_CLASSIFICATION	3.6159486351228464E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999998852863498	WITHOUT_CLASSIFICATION	1.1471365025630815E-7	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.99999980988749	WITHOUT_CLASSIFICATION	1.9011251001408584E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999996260264179	WITHOUT_CLASSIFICATION	3.7397358215568675E-7	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999997208458586	WITHOUT_CLASSIFICATION	2.791541414181648E-7	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.999998999877308	WITHOUT_CLASSIFICATION	1.0001226919367255E-6	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999987013839444	WITHOUT_CLASSIFICATION	1.2986160555253608E-6	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999947350589289	WITHOUT_CLASSIFICATION	5.264941071063322E-6	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999932748176469	WITHOUT_CLASSIFICATION	6.725182353023735E-6	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999993475867773	WITHOUT_CLASSIFICATION	6.524132226358784E-7	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999976398931256	WITHOUT_CLASSIFICATION	2.3601068744564383E-6	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.999999684864416	WITHOUT_CLASSIFICATION	3.151355839198028E-7	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999985365144067	WITHOUT_CLASSIFICATION	1.4634855932119647E-6	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999994393276955	WITHOUT_CLASSIFICATION	5.606723044837711E-7	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999999043128185	WITHOUT_CLASSIFICATION	9.568718154287175E-8	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999998818997645	WITHOUT_CLASSIFICATION	1.1810023555405768E-7	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999998767688599	WITHOUT_CLASSIFICATION	1.2323114007514228E-7	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999999142172575	WITHOUT_CLASSIFICATION	8.57827424980833E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999996384051365	WITHOUT_CLASSIFICATION	3.6159486351228464E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999998852863498	WITHOUT_CLASSIFICATION	1.1471365025630815E-7	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.99999980988749	WITHOUT_CLASSIFICATION	1.9011251001408584E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999996260264179	WITHOUT_CLASSIFICATION	3.7397358215568675E-7	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999998329150831	WITHOUT_CLASSIFICATION	1.6708491687321495E-7	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999996132189349	WITHOUT_CLASSIFICATION	3.867810650222315E-7	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999993119833325	WITHOUT_CLASSIFICATION	6.880166675023656E-7	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999914284426	WITHOUT_CLASSIFICATION	8.571557412384272E-9	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.999990130824385	WITHOUT_CLASSIFICATION	9.86917561484586E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.999990130824385	WITHOUT_CLASSIFICATION	9.86917561484586E-6	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999998460672455	WITHOUT_CLASSIFICATION	1.5393275453205354E-7	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999998726308944	WITHOUT_CLASSIFICATION	1.2736910556962067E-7	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999995242836218	WITHOUT_CLASSIFICATION	4.757163781859857E-7	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999991949098197	WITHOUT_CLASSIFICATION	8.050901802885457E-7	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999996060762766	WITHOUT_CLASSIFICATION	3.939237233089361E-7	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999992170208452	WITHOUT_CLASSIFICATION	7.829791549077537E-7	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999992641621939	WITHOUT_CLASSIFICATION	7.358378061529277E-7	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999999279947444	WITHOUT_CLASSIFICATION	7.200525559340792E-8	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999998274622078	WITHOUT_CLASSIFICATION	1.725377921563373E-7	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999999345156215	WITHOUT_CLASSIFICATION	6.548437838295678E-8	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999995571029352	WITHOUT_CLASSIFICATION	4.428970648062903E-7	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999999723782883	WITHOUT_CLASSIFICATION	2.7621711692463276E-8	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999865686373907	WITHOUT_CLASSIFICATION	1.3431362609354865E-5	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999997357045066	WITHOUT_CLASSIFICATION	2.642954933383562E-7	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999999587308658	WITHOUT_CLASSIFICATION	4.126913422856167E-8	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999998982811757	WITHOUT_CLASSIFICATION	1.0171882435933418E-7	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999999105526729	WITHOUT_CLASSIFICATION	8.944732714126653E-8	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999998927383947	WITHOUT_CLASSIFICATION	1.072616053624289E-7	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999998733290304	WITHOUT_CLASSIFICATION	1.2667096969770382E-7	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999999441744473	WITHOUT_CLASSIFICATION	5.582555267723824E-8	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9999813357283361	WITHOUT_CLASSIFICATION	1.8664271663926654E-5	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999994986976598	WITHOUT_CLASSIFICATION	5.013023401401676E-7	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999995140507563	WITHOUT_CLASSIFICATION	4.859492437038791E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9990116257770567	WITHOUT_CLASSIFICATION	9.883742229432999E-4	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998616903488	WITHOUT_CLASSIFICATION	1.3830965114994776E-7	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999997730819721	WITHOUT_CLASSIFICATION	2.2691802789520875E-7	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999885238918	WITHOUT_CLASSIFICATION	1.1476108140962384E-8	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.999999072283718	WITHOUT_CLASSIFICATION	9.277162821056392E-7	TEST
// line 326	WITHOUT_CLASSIFICATION	0.999996379776235	WITHOUT_CLASSIFICATION	3.6202237648756753E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998616903488	WITHOUT_CLASSIFICATION	1.3830965114994776E-7	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999997730819721	WITHOUT_CLASSIFICATION	2.2691802789520875E-7	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999997357045066	WITHOUT_CLASSIFICATION	2.642954933383562E-7	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999997779876365	WITHOUT_CLASSIFICATION	2.220123635601884E-7	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999980798364408	WITHOUT_CLASSIFICATION	1.9201635591685345E-6	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999966156037401	WITHOUT_CLASSIFICATION	3.3843962599621695E-6	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999999227100468	WITHOUT_CLASSIFICATION	7.728995318540188E-8	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999993089857584	WITHOUT_CLASSIFICATION	6.910142415288267E-7	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.999969172000544	WITHOUT_CLASSIFICATION	3.082799945595919E-5	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.999994557936919	WITHOUT_CLASSIFICATION	5.442063080972515E-6	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999992880728096	WITHOUT_CLASSIFICATION	7.11927190382133E-7	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999925884308021	WITHOUT_CLASSIFICATION	7.411569197940297E-6	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999989260911747	WITHOUT_CLASSIFICATION	1.0739088252397986E-6	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999998397296831	WITHOUT_CLASSIFICATION	1.6027031691731071E-7	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999964591497786	WITHOUT_CLASSIFICATION	3.5408502212980285E-6	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999993067975479	WITHOUT_CLASSIFICATION	6.932024521494964E-7	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999992624423862	WITHOUT_CLASSIFICATION	7.37557613720696E-7	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.999999943898392	WITHOUT_CLASSIFICATION	5.610160803962306E-8	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999847657509824	WITHOUT_CLASSIFICATION	1.5234249017587565E-5	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999998569728333	WITHOUT_CLASSIFICATION	1.4302716668349018E-7	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999990340585645	WITHOUT_CLASSIFICATION	9.659414354925607E-7	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999996455599687	WITHOUT_CLASSIFICATION	3.544400313194222E-7	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.99999961146644	WITHOUT_CLASSIFICATION	3.885335600521611E-7	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999999487867154	WITHOUT_CLASSIFICATION	5.1213284700941206E-8	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.999999937685457	WITHOUT_CLASSIFICATION	6.231454304170123E-8	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999997857559236	WITHOUT_CLASSIFICATION	2.1424407635570421E-7	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999986840619	WITHOUT_CLASSIFICATION	1.3159380454550738E-9	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999544437805	WITHOUT_CLASSIFICATION	4.5556219394109225E-8	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999998946545183	WITHOUT_CLASSIFICATION	1.0534548164039076E-7	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9960460216317272	WITHOUT_CLASSIFICATION	0.003953978368272802	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999998353896175	WITHOUT_CLASSIFICATION	1.6461038264176973E-7	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999996920570052	WITHOUT_CLASSIFICATION	3.079429947944961E-7	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.999999858246309	WITHOUT_CLASSIFICATION	1.4175369091286083E-7	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999999103743499	WITHOUT_CLASSIFICATION	8.962565003691199E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999946074918442	WITHOUT_CLASSIFICATION	5.3925081557731646E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999946074918442	WITHOUT_CLASSIFICATION	5.3925081557731646E-6	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999865686373907	WITHOUT_CLASSIFICATION	1.3431362609354865E-5	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999656370284	WITHOUT_CLASSIFICATION	3.436297153099718E-8	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999990356381276	WITHOUT_CLASSIFICATION	9.64361872392263E-7	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999987314206151	WITHOUT_CLASSIFICATION	1.2685793848881227E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999716311301	WITHOUT_CLASSIFICATION	2.8368869961057676E-8	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999716311301	WITHOUT_CLASSIFICATION	2.8368869961057676E-8	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999642783556	WITHOUT_CLASSIFICATION	3.5721644361587075E-8	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999999032696667	WITHOUT_CLASSIFICATION	9.673033330504275E-8	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999084941982	WITHOUT_CLASSIFICATION	9.150580183936843E-8	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999992114104763	WITHOUT_CLASSIFICATION	7.885895235881662E-7	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999968249412123	WITHOUT_CLASSIFICATION	3.175058787622409E-6	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999998629472565	WITHOUT_CLASSIFICATION	1.370527435356752E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999993805537795	WITHOUT_CLASSIFICATION	6.194462204846594E-7	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999984585919904	WITHOUT_CLASSIFICATION	1.541408009626629E-6	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999997305582935	WITHOUT_CLASSIFICATION	2.694417065290558E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999995448095979	WITHOUT_CLASSIFICATION	4.551904022220078E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999969779232533	WITHOUT_CLASSIFICATION	3.0220767467595797E-6	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999984320801301	WITHOUT_CLASSIFICATION	1.5679198699380297E-6	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999885435290498	WITHOUT_CLASSIFICATION	1.14564709503204E-5	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.999999544498789	WITHOUT_CLASSIFICATION	4.55501210968006E-7	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999998837102224	WITHOUT_CLASSIFICATION	1.1628977759634521E-6	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999981864556493	WITHOUT_CLASSIFICATION	1.8135443506268942E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999994849544681	WITHOUT_CLASSIFICATION	5.150455318563002E-7	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999994849544681	WITHOUT_CLASSIFICATION	5.150455318563002E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999998742671559	WITHOUT_CLASSIFICATION	1.2573284421179738E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999998742671559	WITHOUT_CLASSIFICATION	1.2573284421179738E-7	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999803285105	WITHOUT_CLASSIFICATION	1.9671489609881965E-8	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999244473052	WITHOUT_CLASSIFICATION	7.555269480340968E-8	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.999999945209378	WITHOUT_CLASSIFICATION	5.479062196017264E-8	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999988770369466	WITHOUT_CLASSIFICATION	1.1229630533724383E-6	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999996861246444	WITHOUT_CLASSIFICATION	3.138753556745203E-7	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999987560515411	WITHOUT_CLASSIFICATION	1.243948458899124E-6	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.999999964107999	WITHOUT_CLASSIFICATION	3.589200101622642E-8	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999984320801301	WITHOUT_CLASSIFICATION	1.5679198699380297E-6	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999885435290498	WITHOUT_CLASSIFICATION	1.14564709503204E-5	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999998837102224	WITHOUT_CLASSIFICATION	1.1628977759634521E-6	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999994767678824	WITHOUT_CLASSIFICATION	5.232321176870878E-7	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999960470008563	WITHOUT_CLASSIFICATION	3.952999143657905E-6	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999997394327648	WITHOUT_CLASSIFICATION	2.605672351669763E-7	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.999999267902785	WITHOUT_CLASSIFICATION	7.320972148831169E-7	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.999999876049688	WITHOUT_CLASSIFICATION	1.2395031191809238E-7	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999876886185125	WITHOUT_CLASSIFICATION	1.2311381487449011E-5	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999994355808948	WITHOUT_CLASSIFICATION	5.64419105177335E-7	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.999999562643702	WITHOUT_CLASSIFICATION	4.3735629787722534E-7	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999994921805408	WITHOUT_CLASSIFICATION	5.078194592148008E-7	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999703040248	WITHOUT_CLASSIFICATION	2.9695975167703837E-8	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999998162886187	WITHOUT_CLASSIFICATION	1.8371138138935987E-7	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999984721692683	WITHOUT_CLASSIFICATION	1.5278307317149799E-6	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999973973513561	WITHOUT_CLASSIFICATION	2.6026486438967E-6	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999959034500455	WITHOUT_CLASSIFICATION	4.096549954440311E-6	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.999998806085152	WITHOUT_CLASSIFICATION	1.1939148479395674E-6	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999992018181986	WITHOUT_CLASSIFICATION	7.981818014878273E-7	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999980935964712	WITHOUT_CLASSIFICATION	1.9064035287986057E-6	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999999116960897	WITHOUT_CLASSIFICATION	8.830391032898324E-8	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999996752931328	WITHOUT_CLASSIFICATION	3.247068672092647E-7	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999998542155861	WITHOUT_CLASSIFICATION	1.4578441373687088E-7	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999998559776343	WITHOUT_CLASSIFICATION	1.4402236574682518E-7	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999963147451998	WITHOUT_CLASSIFICATION	3.6852548002032007E-6	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999961506461711	WITHOUT_CLASSIFICATION	3.849353828957777E-6	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999998726679128	WITHOUT_CLASSIFICATION	1.2733208715316321E-7	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.999998369563961	WITHOUT_CLASSIFICATION	1.6304360389911234E-6	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999997114622843	WITHOUT_CLASSIFICATION	2.8853771567754937E-7	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999995453763469	WITHOUT_CLASSIFICATION	4.5462365312690146E-7	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999996370293721	WITHOUT_CLASSIFICATION	3.6297062789954044E-7	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999996605793231	WITHOUT_CLASSIFICATION	3.3942067686010915E-7	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.999999039996506	WITHOUT_CLASSIFICATION	9.600034940245348E-7	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999999240632589	WITHOUT_CLASSIFICATION	7.59367411479819E-8	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999990647146021	WITHOUT_CLASSIFICATION	9.352853980488106E-7	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.999998785981678	WITHOUT_CLASSIFICATION	1.2140183219256696E-6	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999998794908287	WITHOUT_CLASSIFICATION	1.2050917130958133E-7	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999995732213998	WITHOUT_CLASSIFICATION	4.267786001721342E-7	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999997040151164	WITHOUT_CLASSIFICATION	2.9598488359834975E-7	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999992854429943	WITHOUT_CLASSIFICATION	7.145570056664321E-7	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999996726282251	WITHOUT_CLASSIFICATION	3.2737177488002856E-7	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999980533476689	WITHOUT_CLASSIFICATION	1.9466523311063563E-6	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999996581989975	WITHOUT_CLASSIFICATION	3.418010024643522E-7	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999991777950374	WITHOUT_CLASSIFICATION	8.222049625403213E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999990356381276	WITHOUT_CLASSIFICATION	9.64361872392263E-7	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999992854429943	WITHOUT_CLASSIFICATION	7.145570056664321E-7	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999864425458166	WITHOUT_CLASSIFICATION	1.3557454183420742E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999735767664	WITHOUT_CLASSIFICATION	2.642323354265913E-8	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999990644753756	WITHOUT_CLASSIFICATION	9.355246243991218E-7	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999969242268004	WITHOUT_CLASSIFICATION	3.0757731994506886E-6	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999969242268004	WITHOUT_CLASSIFICATION	3.0757731994506886E-6	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.999996595963537	WITHOUT_CLASSIFICATION	3.404036463063293E-6	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999996061010387	WITHOUT_CLASSIFICATION	3.9389896128327634E-7	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999971993150357	WITHOUT_CLASSIFICATION	2.800684964255501E-6	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999995532724638	WITHOUT_CLASSIFICATION	4.4672753615964876E-7	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999970965735057	WITHOUT_CLASSIFICATION	2.9034264942803054E-6	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999998100917714	WITHOUT_CLASSIFICATION	1.8990822858928616E-7	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999995731829847	WITHOUT_CLASSIFICATION	4.2681701528493085E-7	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999998400224238	WITHOUT_CLASSIFICATION	1.5997757628052355E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999991482940059	WITHOUT_CLASSIFICATION	8.517059939535219E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999991482940059	WITHOUT_CLASSIFICATION	8.517059939535219E-7	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999986392063639	WITHOUT_CLASSIFICATION	1.3607936361435983E-6	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999989426753434	WITHOUT_CLASSIFICATION	1.0573246566038304E-6	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999998151395326	WITHOUT_CLASSIFICATION	1.8486046728117325E-7	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.999999592034405	WITHOUT_CLASSIFICATION	4.0796559492007257E-7	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999990814898106	WITHOUT_CLASSIFICATION	9.185101894603792E-7	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999991588364272	WITHOUT_CLASSIFICATION	8.411635728676337E-7	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999900563865	WITHOUT_CLASSIFICATION	9.943613412668104E-9	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999998447700481	WITHOUT_CLASSIFICATION	1.5522995187565215E-7	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999997147912401	WITHOUT_CLASSIFICATION	2.8520875998697385E-7	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9994982090395443	WITHOUT_CLASSIFICATION	5.017909604556373E-4	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999800791906116	WITHOUT_CLASSIFICATION	1.992080938836023E-5	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999987246506506	WITHOUT_CLASSIFICATION	1.275349349363931E-6	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999993696961952	WITHOUT_CLASSIFICATION	6.303038048525452E-7	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999931195738999	WITHOUT_CLASSIFICATION	6.880426100024482E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999931195738999	WITHOUT_CLASSIFICATION	6.880426100024482E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999989428742647	WITHOUT_CLASSIFICATION	1.057125735342205E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999996260264179	WITHOUT_CLASSIFICATION	3.7397358215568675E-7	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.999805444101507	WITHOUT_CLASSIFICATION	1.9455589849304354E-4	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.999999845487768	WITHOUT_CLASSIFICATION	1.545122320538841E-7	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999611452156	WITHOUT_CLASSIFICATION	3.8854784390012294E-8	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999998834140773	WITHOUT_CLASSIFICATION	1.1658592277702576E-7	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999984013034893	WITHOUT_CLASSIFICATION	1.5986965107157232E-6	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999947382639363	WITHOUT_CLASSIFICATION	5.261736063738474E-6	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999911063701834	WITHOUT_CLASSIFICATION	8.8936298165029E-6	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999983178231202	WITHOUT_CLASSIFICATION	1.682176879917939E-6	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999992404109206	WITHOUT_CLASSIFICATION	7.59589079438003E-7	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999997792770623	WITHOUT_CLASSIFICATION	2.207229377324537E-7	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999956299603104	WITHOUT_CLASSIFICATION	4.370039689629967E-6	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999070873702	WITHOUT_CLASSIFICATION	9.291262984734715E-8	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999995177700487	WITHOUT_CLASSIFICATION	4.822299513474544E-7	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999997974488228	WITHOUT_CLASSIFICATION	2.0255117712088058E-7	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999998969267931	WITHOUT_CLASSIFICATION	1.0307320689330004E-7	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999986062264326	WITHOUT_CLASSIFICATION	1.3937735674164116E-6	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999997359514728	WITHOUT_CLASSIFICATION	2.6404852712148077E-7	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999998902550785	WITHOUT_CLASSIFICATION	1.0974492140722562E-7	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9999988821322223	WITHOUT_CLASSIFICATION	1.1178677776606307E-6	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999989420974239	WITHOUT_CLASSIFICATION	1.0579025760480843E-6	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999844179482592	WITHOUT_CLASSIFICATION	1.5582051740821718E-5	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.999989975119558	WITHOUT_CLASSIFICATION	1.0024880442001948E-5	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9999653621150434	WITHOUT_CLASSIFICATION	3.4637884956604505E-5	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999998981234388	WITHOUT_CLASSIFICATION	1.0187656110882408E-7	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999991782879555	WITHOUT_CLASSIFICATION	8.217120444442969E-7	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999998457750159	WITHOUT_CLASSIFICATION	1.5422498401982178E-7	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999997135255916	WITHOUT_CLASSIFICATION	2.864744085181337E-7	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.999982391691717	WITHOUT_CLASSIFICATION	1.7608308283071202E-5	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999998818188179	WITHOUT_CLASSIFICATION	1.1818118200867357E-7	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999998421970444	WITHOUT_CLASSIFICATION	1.5780295566458506E-7	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999997220761022	WITHOUT_CLASSIFICATION	2.779238978654713E-7	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.999996784865616	WITHOUT_CLASSIFICATION	3.215134383920085E-6	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.999999491583875	WITHOUT_CLASSIFICATION	5.084161249950774E-7	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999593016248	WITHOUT_CLASSIFICATION	4.069837511221645E-8	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999976871437019	WITHOUT_CLASSIFICATION	2.3128562980379907E-6	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999958236151234	WITHOUT_CLASSIFICATION	4.1763848766742655E-6	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999971435170775	WITHOUT_CLASSIFICATION	2.8564829224721457E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999962509498406	WITHOUT_CLASSIFICATION	3.7490501594706187E-6	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999985268400531	WITHOUT_CLASSIFICATION	1.4731599469548303E-6	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999999334189649	WITHOUT_CLASSIFICATION	6.658103514966438E-8	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999909931491335	WITHOUT_CLASSIFICATION	9.006850866508557E-6	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999998433901568	WITHOUT_CLASSIFICATION	1.5660984328605937E-7	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9999805021741095	WITHOUT_CLASSIFICATION	1.9497825890424375E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999999961792697	WITHOUT_CLASSIFICATION	3.820730292160474E-8	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999997750829213	WITHOUT_CLASSIFICATION	2.2491707882133952E-7	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999995145475334	WITHOUT_CLASSIFICATION	4.854524665375647E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999995045572803	WITHOUT_CLASSIFICATION	4.954427197854217E-7	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998616903488	WITHOUT_CLASSIFICATION	1.3830965114994776E-7	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998616903488	WITHOUT_CLASSIFICATION	1.3830965114994776E-7	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999998082678112	WITHOUT_CLASSIFICATION	1.9173218881392802E-7	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999890716033288	WITHOUT_CLASSIFICATION	1.09283966711638E-5	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999960461790875	WITHOUT_CLASSIFICATION	3.953820912461445E-6	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999995745034859	WITHOUT_CLASSIFICATION	4.2549651411329357E-7	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999999065334507	WITHOUT_CLASSIFICATION	9.34665492325775E-8	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999997500050016	WITHOUT_CLASSIFICATION	2.4999499844921456E-7	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999961985736098	WITHOUT_CLASSIFICATION	3.8014263901817847E-6	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999987659595747	WITHOUT_CLASSIFICATION	1.2340404252908903E-6	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999997045624004	WITHOUT_CLASSIFICATION	2.9543759952594724E-7	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999985952352554	WITHOUT_CLASSIFICATION	1.4047647446950258E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999994464153471	WITHOUT_CLASSIFICATION	5.535846528791019E-7	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999994464153471	WITHOUT_CLASSIFICATION	5.535846528791019E-7	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999994464153471	WITHOUT_CLASSIFICATION	5.535846528791019E-7	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999992284471986	WITHOUT_CLASSIFICATION	7.715528013698293E-7	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999996295454021	WITHOUT_CLASSIFICATION	3.7045459799163554E-7	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999994863339565	WITHOUT_CLASSIFICATION	5.136660435281363E-7	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.99999991489704	WITHOUT_CLASSIFICATION	8.510295999376166E-8	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.99999991489704	WITHOUT_CLASSIFICATION	8.510295999376166E-8	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.999998691098295	WITHOUT_CLASSIFICATION	1.308901704974477E-6	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999942290454047	WITHOUT_CLASSIFICATION	5.7709545953283464E-6	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.999997055046199	WITHOUT_CLASSIFICATION	2.944953800982099E-6	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999953504401353	WITHOUT_CLASSIFICATION	4.6495598646828725E-6	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999996322152761	WITHOUT_CLASSIFICATION	3.6778472397644376E-7	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999942756128859	WITHOUT_CLASSIFICATION	5.724387114096797E-6	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999955536173435	WITHOUT_CLASSIFICATION	4.4463826565175796E-6	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999948167770613	WITHOUT_CLASSIFICATION	5.183222938683031E-6	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999984270563532	WITHOUT_CLASSIFICATION	1.5729436466809452E-6	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999998895680893	WITHOUT_CLASSIFICATION	1.1043191067193828E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999998895680893	WITHOUT_CLASSIFICATION	1.1043191067193828E-7	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999972971664929	WITHOUT_CLASSIFICATION	2.7028335071697055E-6	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999966992476732	WITHOUT_CLASSIFICATION	3.3007523268472416E-6	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999958877359991	WITHOUT_CLASSIFICATION	4.112264000883556E-6	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999989372845269	WITHOUT_CLASSIFICATION	1.0627154730942688E-6	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999988203413475	WITHOUT_CLASSIFICATION	1.179658652587826E-6	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999985443062812	WITHOUT_CLASSIFICATION	1.4556937187507905E-6	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999993495838989	WITHOUT_CLASSIFICATION	6.504161011083838E-7	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999995928211712	WITHOUT_CLASSIFICATION	4.07178828860132E-7	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999944910734632	WITHOUT_CLASSIFICATION	5.508926536880878E-6	TEST
// POP	WITHOUT_CLASSIFICATION	0.9999905409136299	WITHOUT_CLASSIFICATION	9.459086370072875E-6	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999995900460387	WITHOUT_CLASSIFICATION	4.0995396140712004E-7	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999909995712063	WITHOUT_CLASSIFICATION	9.000428793792697E-6	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9999934679809337	WITHOUT_CLASSIFICATION	6.532019066320337E-6	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999972877404985	WITHOUT_CLASSIFICATION	2.712259501495829E-6	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999818073066808	WITHOUT_CLASSIFICATION	1.8192693319173643E-5	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999982316922945	WITHOUT_CLASSIFICATION	1.768307705502955E-6	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999988336998811	WITHOUT_CLASSIFICATION	1.1663001189524144E-6	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.99998698653444	WITHOUT_CLASSIFICATION	1.3013465559964236E-5	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999997589620242	WITHOUT_CLASSIFICATION	2.4103797581674845E-7	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999996877301246	WITHOUT_CLASSIFICATION	3.122698754575857E-7	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999984348068766	WITHOUT_CLASSIFICATION	1.565193123412201E-6	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999987426138367	WITHOUT_CLASSIFICATION	1.2573861633456025E-6	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999991947583289	WITHOUT_CLASSIFICATION	8.052416710506481E-7	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999961538470215	WITHOUT_CLASSIFICATION	3.846152978513463E-6	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999969950607306	WITHOUT_CLASSIFICATION	3.004939269465484E-6	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.999998203966578	WITHOUT_CLASSIFICATION	1.7960334219740424E-6	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999978920969491	WITHOUT_CLASSIFICATION	2.107903050892893E-6	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999978137927089	WITHOUT_CLASSIFICATION	2.186207291166066E-6	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999936258055951	WITHOUT_CLASSIFICATION	6.3741944048343405E-6	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999941221370963	WITHOUT_CLASSIFICATION	5.877862903658938E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999825444614909	WITHOUT_CLASSIFICATION	1.74555385089872E-5	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999995042547817	WITHOUT_CLASSIFICATION	4.957452183661909E-7	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999967652630604	WITHOUT_CLASSIFICATION	3.2347369395505388E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999825444614909	WITHOUT_CLASSIFICATION	1.74555385089872E-5	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999993963662633	WITHOUT_CLASSIFICATION	6.036337367744486E-7	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999983596811127	WITHOUT_CLASSIFICATION	1.6403188873355229E-6	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999982310982517	WITHOUT_CLASSIFICATION	1.7689017482921284E-6	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999868505451486	WITHOUT_CLASSIFICATION	1.3149454851406638E-5	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.999999864820099	WITHOUT_CLASSIFICATION	1.351799010336879E-7	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999976664353991	WITHOUT_CLASSIFICATION	2.333564600831633E-6	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999991775854457	WITHOUT_CLASSIFICATION	8.224145542766987E-7	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999987264571375	WITHOUT_CLASSIFICATION	1.273542862397714E-6	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999971322546272	WITHOUT_CLASSIFICATION	2.867745372853398E-6	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999911900187177	WITHOUT_CLASSIFICATION	8.809981282213645E-6	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999769187457587	WITHOUT_CLASSIFICATION	2.308125424131418E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999909419750949	WITHOUT_CLASSIFICATION	9.058024905092075E-6	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999931160760152	WITHOUT_CLASSIFICATION	6.883923984868596E-6	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999951882272174	WITHOUT_CLASSIFICATION	4.811772782552612E-6	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999987762285732	WITHOUT_CLASSIFICATION	1.2237714267346693E-6	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999888896190362	WITHOUT_CLASSIFICATION	1.1110380963764468E-5	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.999976441967019	WITHOUT_CLASSIFICATION	2.3558032981084305E-5	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999979834162549	WITHOUT_CLASSIFICATION	2.016583745103833E-6	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.99999870580548	WITHOUT_CLASSIFICATION	1.2941945198854801E-6	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999906451904074	WITHOUT_CLASSIFICATION	9.354809592678894E-6	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999980112024924	WITHOUT_CLASSIFICATION	1.9887975076067253E-6	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999982026333399	WITHOUT_CLASSIFICATION	1.797366660021138E-6	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999949863261173	WITHOUT_CLASSIFICATION	5.013673882626259E-6	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.999998046904816	WITHOUT_CLASSIFICATION	1.9530951839946183E-6	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999906382159945	WITHOUT_CLASSIFICATION	9.361784005421284E-6	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999981109747731	WITHOUT_CLASSIFICATION	1.8890252268945778E-6	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999885266819196	WITHOUT_CLASSIFICATION	1.1473318080431852E-5	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.999999172330351	WITHOUT_CLASSIFICATION	8.276696490953303E-7	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999992746204515	WITHOUT_CLASSIFICATION	7.253795486417835E-7	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999991126706771	WITHOUT_CLASSIFICATION	8.873293229600786E-7	TEST
// hash	WITHOUT_CLASSIFICATION	0.9999922947401634	WITHOUT_CLASSIFICATION	7.705259836590364E-6	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999744817924274	WITHOUT_CLASSIFICATION	2.551820757264248E-5	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9995504466297475	WITHOUT_CLASSIFICATION	4.4955337025255306E-4	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999996929296789	WITHOUT_CLASSIFICATION	3.0707032107708975E-7	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999991824595025	WITHOUT_CLASSIFICATION	8.175404975199317E-7	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999972045453955	WITHOUT_CLASSIFICATION	2.7954546044452656E-6	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999993053330778	WITHOUT_CLASSIFICATION	6.946669222703707E-7	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9999666633161152	WITHOUT_CLASSIFICATION	3.3336683884797277E-5	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999994301762735	WITHOUT_CLASSIFICATION	5.698237265675947E-7	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999983336117363	WITHOUT_CLASSIFICATION	1.6663882636424757E-6	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999971149424944	WITHOUT_CLASSIFICATION	2.885057505611529E-6	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999980002673452	WITHOUT_CLASSIFICATION	1.999732654821344E-6	TEST
// form feed	WITHOUT_CLASSIFICATION	0.999991019385432	WITHOUT_CLASSIFICATION	8.980614568005834E-6	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999994229457341	WITHOUT_CLASSIFICATION	5.770542659976707E-7	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999987259884802	WITHOUT_CLASSIFICATION	1.2740115198689882E-6	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999982895755463	WITHOUT_CLASSIFICATION	1.710424453678956E-6	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999996548485215	WITHOUT_CLASSIFICATION	3.451514785394264E-7	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999981782881885	WITHOUT_CLASSIFICATION	1.8217118115149459E-6	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.999994115410737	WITHOUT_CLASSIFICATION	5.884589262928906E-6	TEST
// space	WITHOUT_CLASSIFICATION	0.9999991035511809	WITHOUT_CLASSIFICATION	8.964488189801442E-7	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999731673095795	WITHOUT_CLASSIFICATION	2.6832690420396794E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999911325911228	WITHOUT_CLASSIFICATION	8.867408877211094E-6	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999872667766988	WITHOUT_CLASSIFICATION	1.2733223301126437E-5	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.999994115410737	WITHOUT_CLASSIFICATION	5.884589262928906E-6	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9998005440871979	WITHOUT_CLASSIFICATION	1.9945591280199875E-4	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9998005440871979	WITHOUT_CLASSIFICATION	1.9945591280199875E-4	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999688285289436	WITHOUT_CLASSIFICATION	3.117147105633228E-5	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999977293037886	WITHOUT_CLASSIFICATION	2.2706962113689557E-6	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999992698268116	WITHOUT_CLASSIFICATION	7.301731883787277E-7	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999944161996518	WITHOUT_CLASSIFICATION	5.583800348236426E-6	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999935007359987	WITHOUT_CLASSIFICATION	6.499264001285574E-6	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999961070863633	WITHOUT_CLASSIFICATION	3.892913636761919E-6	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999993947380548	WITHOUT_CLASSIFICATION	6.052619452637727E-7	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9984054382685785	WITHOUT_CLASSIFICATION	0.0015945617314215193	TEST
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999997283991885	WITHOUT_CLASSIFICATION	2.716008114800492E-7	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999769737456544	WITHOUT_CLASSIFICATION	2.3026254345620723E-5	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999988787806441	WITHOUT_CLASSIFICATION	1.1212193559291282E-6	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999998716161618	WITHOUT_CLASSIFICATION	1.2838383821399582E-7	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999968904106892	WITHOUT_CLASSIFICATION	3.109589310820369E-6	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999952577638995	WITHOUT_CLASSIFICATION	4.742236100516386E-6	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999901450214087	WITHOUT_CLASSIFICATION	9.854978591251538E-6	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999858417446291	WITHOUT_CLASSIFICATION	1.4158255370803142E-5	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999987035964655	WITHOUT_CLASSIFICATION	1.2964035344807044E-6	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999594241409675	WITHOUT_CLASSIFICATION	4.0575859032504896E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999594241409675	WITHOUT_CLASSIFICATION	4.0575859032504896E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999594241409675	WITHOUT_CLASSIFICATION	4.0575859032504896E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999594241409675	WITHOUT_CLASSIFICATION	4.0575859032504896E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999594241409675	WITHOUT_CLASSIFICATION	4.0575859032504896E-5	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999964580698725	WITHOUT_CLASSIFICATION	3.541930127498821E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999982173578298	WITHOUT_CLASSIFICATION	1.782642170212214E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999880941230465	WITHOUT_CLASSIFICATION	1.1905876953435488E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999996636293287	WITHOUT_CLASSIFICATION	3.3637067122629744E-7	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999918603668407	WITHOUT_CLASSIFICATION	8.139633159287664E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999995753543284	WITHOUT_CLASSIFICATION	4.246456717017406E-7	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999941260896551	WITHOUT_CLASSIFICATION	5.873910344911456E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999983931658298	WITHOUT_CLASSIFICATION	1.6068341701616269E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999995776427255	WITHOUT_CLASSIFICATION	4.2235727454072724E-7	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999971577892381	WITHOUT_CLASSIFICATION	2.84221076192393E-6	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999973160356992	WITHOUT_CLASSIFICATION	2.6839643008932476E-6	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999963793632767	WITHOUT_CLASSIFICATION	3.620636723412693E-6	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999962405184066	WITHOUT_CLASSIFICATION	3.7594815933773445E-6	TEST
// line 314	WITHOUT_CLASSIFICATION	0.999996998840864	WITHOUT_CLASSIFICATION	3.0011591359034867E-6	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999968447763389	WITHOUT_CLASSIFICATION	3.1552236611791945E-6	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999963460182282	WITHOUT_CLASSIFICATION	3.6539817718486924E-6	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999963785320316	WITHOUT_CLASSIFICATION	3.6214679682729558E-6	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999964731084259	WITHOUT_CLASSIFICATION	3.526891574220703E-6	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999964264174419	WITHOUT_CLASSIFICATION	3.573582558185698E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999962417282146	WITHOUT_CLASSIFICATION	3.758271785361484E-6	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999963088526239	WITHOUT_CLASSIFICATION	3.691147376122718E-6	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999963938124046	WITHOUT_CLASSIFICATION	3.606187595484644E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999963471989834	WITHOUT_CLASSIFICATION	3.652801016522143E-6	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999963573861237	WITHOUT_CLASSIFICATION	3.6426138762312726E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999966165380696	WITHOUT_CLASSIFICATION	3.3834619304431783E-6	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999977110970201	WITHOUT_CLASSIFICATION	2.288902979997499E-6	TEST
// line 411	WITHOUT_CLASSIFICATION	0.999997380636695	WITHOUT_CLASSIFICATION	2.6193633049543975E-6	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999977407010355	WITHOUT_CLASSIFICATION	2.2592989644988086E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999978016350868	WITHOUT_CLASSIFICATION	2.1983649131747714E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999974446457661	WITHOUT_CLASSIFICATION	2.5553542339607764E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999974627400465	WITHOUT_CLASSIFICATION	2.5372599534681764E-6	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999970741972679	WITHOUT_CLASSIFICATION	2.9258027320727294E-6	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999971248097186	WITHOUT_CLASSIFICATION	2.8751902814047215E-6	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999974273934655	WITHOUT_CLASSIFICATION	2.5726065345246598E-6	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999974319583795	WITHOUT_CLASSIFICATION	2.568041620432353E-6	TEST
// line 457	WITHOUT_CLASSIFICATION	0.999997426686836	WITHOUT_CLASSIFICATION	2.5733131641074905E-6	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999974019906153	WITHOUT_CLASSIFICATION	2.5980093847528925E-6	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999974818208244	WITHOUT_CLASSIFICATION	2.5181791756666486E-6	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999976420432666	WITHOUT_CLASSIFICATION	2.3579567334903963E-6	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999975204143565	WITHOUT_CLASSIFICATION	2.4795856433743323E-6	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999973999764411	WITHOUT_CLASSIFICATION	2.600023558969581E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999975046961735	WITHOUT_CLASSIFICATION	2.4953038265280655E-6	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999975563186403	WITHOUT_CLASSIFICATION	2.4436813596403152E-6	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999975660808735	WITHOUT_CLASSIFICATION	2.433919126514501E-6	TEST
// line 501	WITHOUT_CLASSIFICATION	0.999997438885281	WITHOUT_CLASSIFICATION	2.5611147189372324E-6	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999975973974768	WITHOUT_CLASSIFICATION	2.4026025231037146E-6	TEST
// line 507	WITHOUT_CLASSIFICATION	0.999997448980155	WITHOUT_CLASSIFICATION	2.55101984505282E-6	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999978358634753	WITHOUT_CLASSIFICATION	2.16413652457567E-6	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999977293527772	WITHOUT_CLASSIFICATION	2.2706472228194357E-6	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999971459134539	WITHOUT_CLASSIFICATION	2.8540865461801406E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999880941230465	WITHOUT_CLASSIFICATION	1.1905876953435488E-5	TEST
// line 537	WITHOUT_CLASSIFICATION	0.999996941576075	WITHOUT_CLASSIFICATION	3.058423925153632E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999976013295532	WITHOUT_CLASSIFICATION	2.398670446805091E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999970949628605	WITHOUT_CLASSIFICATION	2.905037139526755E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999974006876693	WITHOUT_CLASSIFICATION	2.5993123307327575E-6	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999972336281345	WITHOUT_CLASSIFICATION	2.7663718654083895E-6	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999972675787856	WITHOUT_CLASSIFICATION	2.732421214301584E-6	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999970014551679	WITHOUT_CLASSIFICATION	2.9985448320583747E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999972134167031	WITHOUT_CLASSIFICATION	2.786583296914593E-6	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999973670546543	WITHOUT_CLASSIFICATION	2.632945345665856E-6	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999971379849125	WITHOUT_CLASSIFICATION	2.862015087519367E-6	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999972533510608	WITHOUT_CLASSIFICATION	2.7466489392069986E-6	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999973003151094	WITHOUT_CLASSIFICATION	2.699684890644963E-6	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999973512964052	WITHOUT_CLASSIFICATION	2.6487035948335103E-6	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999976457050264	WITHOUT_CLASSIFICATION	2.3542949736637663E-6	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999975025576229	WITHOUT_CLASSIFICATION	2.4974423772422395E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999978799062328	WITHOUT_CLASSIFICATION	2.1200937671972733E-6	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999974174620864	WITHOUT_CLASSIFICATION	2.5825379136067484E-6	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999976074911482	WITHOUT_CLASSIFICATION	2.3925088518568725E-6	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999971278934848	WITHOUT_CLASSIFICATION	2.872106515223622E-6	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999970474471872	WITHOUT_CLASSIFICATION	2.952552812737812E-6	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999971653096152	WITHOUT_CLASSIFICATION	2.8346903848311947E-6	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999973616180137	WITHOUT_CLASSIFICATION	2.6383819862926093E-6	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999972037123724	WITHOUT_CLASSIFICATION	2.7962876275731422E-6	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999974175923745	WITHOUT_CLASSIFICATION	2.5824076255492023E-6	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999972233758225	WITHOUT_CLASSIFICATION	2.776624177492591E-6	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999974963803803	WITHOUT_CLASSIFICATION	2.503619619824005E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999973007178697	WITHOUT_CLASSIFICATION	2.6992821302457966E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999972932738842	WITHOUT_CLASSIFICATION	2.706726115888767E-6	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999974657612054	WITHOUT_CLASSIFICATION	2.53423879447012E-6	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999975732880643	WITHOUT_CLASSIFICATION	2.4267119357563515E-6	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999972547011358	WITHOUT_CLASSIFICATION	2.745298864146443E-6	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999972749315554	WITHOUT_CLASSIFICATION	2.7250684444964475E-6	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999973338771277	WITHOUT_CLASSIFICATION	2.6661228723647978E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999969765725101	WITHOUT_CLASSIFICATION	3.023427489885934E-6	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999968903574382	WITHOUT_CLASSIFICATION	3.109642561830636E-6	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999970029363392	WITHOUT_CLASSIFICATION	2.9970636608508628E-6	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999971934568296	WITHOUT_CLASSIFICATION	2.8065431703671975E-6	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999973453603074	WITHOUT_CLASSIFICATION	2.6546396925890245E-6	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999971553516946	WITHOUT_CLASSIFICATION	2.8446483052873526E-6	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999974762096813	WITHOUT_CLASSIFICATION	2.5237903187199214E-6	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999969969135332	WITHOUT_CLASSIFICATION	3.003086466814009E-6	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999973630667598	WITHOUT_CLASSIFICATION	2.6369332401745955E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999971893613175	WITHOUT_CLASSIFICATION	2.8106386824517787E-6	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999971291702734	WITHOUT_CLASSIFICATION	2.8708297267290833E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999973687420302	WITHOUT_CLASSIFICATION	2.63125796979107E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999972023667887	WITHOUT_CLASSIFICATION	2.797633211210398E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999972959936886	WITHOUT_CLASSIFICATION	2.7040063113986027E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999974433458223	WITHOUT_CLASSIFICATION	2.556654177694196E-6	TEST
// line 797	WITHOUT_CLASSIFICATION	0.999997299196745	WITHOUT_CLASSIFICATION	2.700803255109901E-6	TEST
// line 803	WITHOUT_CLASSIFICATION	0.99999699736075	WITHOUT_CLASSIFICATION	3.0026392501013015E-6	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999975479244914	WITHOUT_CLASSIFICATION	2.4520755086287452E-6	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999975855930385	WITHOUT_CLASSIFICATION	2.4144069614139165E-6	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999976414481169	WITHOUT_CLASSIFICATION	2.3585518831357754E-6	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999977886968437	WITHOUT_CLASSIFICATION	2.211303156267223E-6	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999973364757136	WITHOUT_CLASSIFICATION	2.663524286398159E-6	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999974444119746	WITHOUT_CLASSIFICATION	2.555588025466444E-6	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999972779746386	WITHOUT_CLASSIFICATION	2.7220253615031705E-6	TEST
// line 833	WITHOUT_CLASSIFICATION	0.99999697510156	WITHOUT_CLASSIFICATION	3.024898439956308E-6	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999970375749129	WITHOUT_CLASSIFICATION	2.9624250871320497E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999970780384156	WITHOUT_CLASSIFICATION	2.9219615842656034E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.999997436493526	WITHOUT_CLASSIFICATION	2.56350647399127E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999973424688668	WITHOUT_CLASSIFICATION	2.657531133032931E-6	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999972744932183	WITHOUT_CLASSIFICATION	2.7255067816989355E-6	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999971753576915	WITHOUT_CLASSIFICATION	2.824642308443736E-6	TEST
// line 861	WITHOUT_CLASSIFICATION	0.999997290940535	WITHOUT_CLASSIFICATION	2.709059464902409E-6	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999972311987084	WITHOUT_CLASSIFICATION	2.7688012916494136E-6	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999972730878622	WITHOUT_CLASSIFICATION	2.726912137782018E-6	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999973302964976	WITHOUT_CLASSIFICATION	2.6697035024311925E-6	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999973818582807	WITHOUT_CLASSIFICATION	2.6181417193466866E-6	TEST
// line 883	WITHOUT_CLASSIFICATION	0.999996926753749	WITHOUT_CLASSIFICATION	3.0732462510110972E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.999997120263589	WITHOUT_CLASSIFICATION	2.879736411111103E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999973967121502	WITHOUT_CLASSIFICATION	2.6032878498030304E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999973008101084	WITHOUT_CLASSIFICATION	2.699189891665634E-6	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999970249617034	WITHOUT_CLASSIFICATION	2.975038296645573E-6	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999975527410881	WITHOUT_CLASSIFICATION	2.447258911791871E-6	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999976793037996	WITHOUT_CLASSIFICATION	2.3206962003939993E-6	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999973419609991	WITHOUT_CLASSIFICATION	2.6580390007937705E-6	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999970558161242	WITHOUT_CLASSIFICATION	2.94418387567666E-6	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999973617925602	WITHOUT_CLASSIFICATION	2.638207439893953E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999970889762477	WITHOUT_CLASSIFICATION	2.91102375229938E-6	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999971056784726	WITHOUT_CLASSIFICATION	2.8943215274037207E-6	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999976945577387	WITHOUT_CLASSIFICATION	2.3054422613070595E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999974099795703	WITHOUT_CLASSIFICATION	2.590020429723616E-6	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999974886601871	WITHOUT_CLASSIFICATION	2.5113398128594907E-6	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999973922278773	WITHOUT_CLASSIFICATION	2.607772122633911E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999975618974292	WITHOUT_CLASSIFICATION	2.438102570797688E-6	TEST
// line 964	WITHOUT_CLASSIFICATION	0.999997496686253	WITHOUT_CLASSIFICATION	2.503313747058692E-6	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999973785336785	WITHOUT_CLASSIFICATION	2.6214663214969885E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.99999737713258	WITHOUT_CLASSIFICATION	2.6228674199456593E-6	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999973811647231	WITHOUT_CLASSIFICATION	2.618835276833005E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999975981554834	WITHOUT_CLASSIFICATION	2.401844516703903E-6	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999975015680524	WITHOUT_CLASSIFICATION	2.4984319476180656E-6	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999974094106224	WITHOUT_CLASSIFICATION	2.590589377562615E-6	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999973008835378	WITHOUT_CLASSIFICATION	2.699116462114789E-6	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999973426736822	WITHOUT_CLASSIFICATION	2.657326317736375E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999979015389439	WITHOUT_CLASSIFICATION	2.098461056155423E-6	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999975415427139	WITHOUT_CLASSIFICATION	2.4584572861206E-6	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999979460479212	WITHOUT_CLASSIFICATION	2.0539520786608015E-6	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999979192472712	WITHOUT_CLASSIFICATION	2.080752728895401E-6	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999974294344767	WITHOUT_CLASSIFICATION	2.570565523300597E-6	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999975230194806	WITHOUT_CLASSIFICATION	2.4769805193500685E-6	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999979776135831	WITHOUT_CLASSIFICATION	2.0223864169379934E-6	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.999998020562925	WITHOUT_CLASSIFICATION	1.979437074971883E-6	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999971384024354	WITHOUT_CLASSIFICATION	2.8615975644944367E-6	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999976380938617	WITHOUT_CLASSIFICATION	2.361906138415286E-6	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999978464862429	WITHOUT_CLASSIFICATION	2.153513757175399E-6	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999976407423156	WITHOUT_CLASSIFICATION	2.3592576843414807E-6	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999978877920757	WITHOUT_CLASSIFICATION	2.1122079243990955E-6	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999979287776469	WITHOUT_CLASSIFICATION	2.071222353068426E-6	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999977390138698	WITHOUT_CLASSIFICATION	2.260986130231801E-6	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999977425103254	WITHOUT_CLASSIFICATION	2.257489674589547E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999979490095311	WITHOUT_CLASSIFICATION	2.0509904688674224E-6	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999977347131669	WITHOUT_CLASSIFICATION	2.265286833114197E-6	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999973858493448	WITHOUT_CLASSIFICATION	2.6141506552148683E-6	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.999997844735638	WITHOUT_CLASSIFICATION	2.155264361879759E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999970605392178	WITHOUT_CLASSIFICATION	2.939460782234342E-6	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.999997289380936	WITHOUT_CLASSIFICATION	2.7106190639067375E-6	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999975184199021	WITHOUT_CLASSIFICATION	2.481580097957964E-6	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999976642297889	WITHOUT_CLASSIFICATION	2.3357702112384527E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999975825955273	WITHOUT_CLASSIFICATION	2.4174044726210234E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999973122182596	WITHOUT_CLASSIFICATION	2.6877817404281093E-6	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999972773906305	WITHOUT_CLASSIFICATION	2.7226093695104695E-6	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999973365911615	WITHOUT_CLASSIFICATION	2.663408838369703E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999979298873025	WITHOUT_CLASSIFICATION	2.070112697474066E-6	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999970910278615	WITHOUT_CLASSIFICATION	2.9089721385979523E-6	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999976865149416	WITHOUT_CLASSIFICATION	2.3134850584063062E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999975973618284	WITHOUT_CLASSIFICATION	2.4026381716593005E-6	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999977502422586	WITHOUT_CLASSIFICATION	2.2497577413984197E-6	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999975544793598	WITHOUT_CLASSIFICATION	2.4455206402205903E-6	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999976139176394	WITHOUT_CLASSIFICATION	2.3860823606095604E-6	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999978408046101	WITHOUT_CLASSIFICATION	2.159195389928685E-6	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999978861818113	WITHOUT_CLASSIFICATION	2.1138181886796193E-6	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999974714158031	WITHOUT_CLASSIFICATION	2.5285841969106355E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999977796564293	WITHOUT_CLASSIFICATION	2.2203435707089475E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.999997647409879	WITHOUT_CLASSIFICATION	2.352590121072991E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999978097343916	WITHOUT_CLASSIFICATION	2.190265608512566E-6	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999977105241146	WITHOUT_CLASSIFICATION	2.289475885353688E-6	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999974784014968	WITHOUT_CLASSIFICATION	2.521598503236638E-6	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.999997437560245	WITHOUT_CLASSIFICATION	2.5624397549524634E-6	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999975089291174	WITHOUT_CLASSIFICATION	2.491070882614128E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999977478139093	WITHOUT_CLASSIFICATION	2.252186090724522E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999971247027547	WITHOUT_CLASSIFICATION	2.8752972452978404E-6	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999973976959103	WITHOUT_CLASSIFICATION	2.602304089675267E-6	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999977149836026	WITHOUT_CLASSIFICATION	2.2850163975015356E-6	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999978457496664	WITHOUT_CLASSIFICATION	2.1542503336563756E-6	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.999997406751766	WITHOUT_CLASSIFICATION	2.59324823398694E-6	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999978562442285	WITHOUT_CLASSIFICATION	2.1437557714820417E-6	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.999997714975099	WITHOUT_CLASSIFICATION	2.285024900851259E-6	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999976307974597	WITHOUT_CLASSIFICATION	2.369202540303718E-6	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999976086871576	WITHOUT_CLASSIFICATION	2.3913128423781723E-6	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999976725533527	WITHOUT_CLASSIFICATION	2.3274466472829834E-6	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999972255539744	WITHOUT_CLASSIFICATION	2.77444602559124E-6	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999972504714724	WITHOUT_CLASSIFICATION	2.7495285277816847E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999973694948998	WITHOUT_CLASSIFICATION	2.6305051001290445E-6	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999973724197401	WITHOUT_CLASSIFICATION	2.627580259891827E-6	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999972585127366	WITHOUT_CLASSIFICATION	2.7414872635157588E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.999997497939802	WITHOUT_CLASSIFICATION	2.5020601980440398E-6	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999973248249264	WITHOUT_CLASSIFICATION	2.6751750734951106E-6	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999973346573885	WITHOUT_CLASSIFICATION	2.665342611549586E-6	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999974714342768	WITHOUT_CLASSIFICATION	2.5285657232521394E-6	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999968977065108	WITHOUT_CLASSIFICATION	3.1022934891819557E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.999997439103393	WITHOUT_CLASSIFICATION	2.560896606980208E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999974275911049	WITHOUT_CLASSIFICATION	2.572408895204012E-6	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999976608795301	WITHOUT_CLASSIFICATION	2.339120469948378E-6	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999969950852383	WITHOUT_CLASSIFICATION	3.0049147615798943E-6	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999974186717059	WITHOUT_CLASSIFICATION	2.581328294109713E-6	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999979065068781	WITHOUT_CLASSIFICATION	2.0934931219011985E-6	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999974628894659	WITHOUT_CLASSIFICATION	2.5371105340725303E-6	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999974884317064	WITHOUT_CLASSIFICATION	2.5115682935371115E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999977816882948	WITHOUT_CLASSIFICATION	2.2183117052595157E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999977961913579	WITHOUT_CLASSIFICATION	2.2038086422071565E-6	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999977570097065	WITHOUT_CLASSIFICATION	2.242990293379904E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999979193142468	WITHOUT_CLASSIFICATION	2.080685753363049E-6	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999976884437182	WITHOUT_CLASSIFICATION	2.3115562818567464E-6	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999979577557582	WITHOUT_CLASSIFICATION	2.0422442418137488E-6	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999977412681335	WITHOUT_CLASSIFICATION	2.2587318665542592E-6	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999977012256096	WITHOUT_CLASSIFICATION	2.2987743903888012E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999978730725261	WITHOUT_CLASSIFICATION	2.1269274738056384E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999977806619773	WITHOUT_CLASSIFICATION	2.2193380226228184E-6	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999977671832246	WITHOUT_CLASSIFICATION	2.232816775287365E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.999997280752633	WITHOUT_CLASSIFICATION	2.719247366915124E-6	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999975746220091	WITHOUT_CLASSIFICATION	2.4253779908994788E-6	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.999997323187739	WITHOUT_CLASSIFICATION	2.6768122609328454E-6	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999977162869887	WITHOUT_CLASSIFICATION	2.2837130113659433E-6	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.999997284457818	WITHOUT_CLASSIFICATION	2.715542181883335E-6	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999975994941027	WITHOUT_CLASSIFICATION	2.4005058973389257E-6	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999975866979762	WITHOUT_CLASSIFICATION	2.413302023892749E-6	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999976619295928	WITHOUT_CLASSIFICATION	2.3380704072077776E-6	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999971137302458	WITHOUT_CLASSIFICATION	2.8862697542531087E-6	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999977079030603	WITHOUT_CLASSIFICATION	2.292096939662762E-6	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999975380560785	WITHOUT_CLASSIFICATION	2.4619439215452902E-6	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999976567566992	WITHOUT_CLASSIFICATION	2.3432433008064107E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.999997633321774	WITHOUT_CLASSIFICATION	2.3666782259092393E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999977013480684	WITHOUT_CLASSIFICATION	2.298651931531326E-6	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999976965563317	WITHOUT_CLASSIFICATION	2.3034436682365236E-6	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999978814426537	WITHOUT_CLASSIFICATION	2.1185573463144174E-6	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999974152545191	WITHOUT_CLASSIFICATION	2.584745480942135E-6	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999975940580487	WITHOUT_CLASSIFICATION	2.4059419514032583E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999977413694835	WITHOUT_CLASSIFICATION	2.2586305164790742E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999974157637794	WITHOUT_CLASSIFICATION	2.5842362205157087E-6	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999974387415992	WITHOUT_CLASSIFICATION	2.561258400779945E-6	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999973256211628	WITHOUT_CLASSIFICATION	2.6743788372395896E-6	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.999997721232831	WITHOUT_CLASSIFICATION	2.27876716907167E-6	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999978689118205	WITHOUT_CLASSIFICATION	2.131088179453869E-6	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999975764826954	WITHOUT_CLASSIFICATION	2.4235173045569905E-6	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999976663052267	WITHOUT_CLASSIFICATION	2.3336947733375056E-6	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.999997103102497	WITHOUT_CLASSIFICATION	2.8968975029270824E-6	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.999997662132614	WITHOUT_CLASSIFICATION	2.3378673860130898E-6	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999975911013355	WITHOUT_CLASSIFICATION	2.40889866445384E-6	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999977065505055	WITHOUT_CLASSIFICATION	2.293449494457078E-6	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999978168943732	WITHOUT_CLASSIFICATION	2.1831056268098924E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999975338022694	WITHOUT_CLASSIFICATION	2.466197730618769E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999975884797065	WITHOUT_CLASSIFICATION	2.4115202935157143E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999975847965862	WITHOUT_CLASSIFICATION	2.4152034138287618E-6	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999973349666672	WITHOUT_CLASSIFICATION	2.665033332821535E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999977450426506	WITHOUT_CLASSIFICATION	2.254957349316353E-6	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.999997701944377	WITHOUT_CLASSIFICATION	2.298055623135693E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999978310263296	WITHOUT_CLASSIFICATION	2.1689736703394217E-6	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999975307250957	WITHOUT_CLASSIFICATION	2.469274904292834E-6	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999977110516345	WITHOUT_CLASSIFICATION	2.288948365474173E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999975602930987	WITHOUT_CLASSIFICATION	2.4397069013450186E-6	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999975080335479	WITHOUT_CLASSIFICATION	2.491966452085092E-6	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999977560419464	WITHOUT_CLASSIFICATION	2.243958053560919E-6	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999977506578287	WITHOUT_CLASSIFICATION	2.2493421713587015E-6	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999979010542062	WITHOUT_CLASSIFICATION	2.0989457939068537E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999977084607337	WITHOUT_CLASSIFICATION	2.291539266246008E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999978239041237	WITHOUT_CLASSIFICATION	2.1760958763255432E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999977672747755	WITHOUT_CLASSIFICATION	2.2327252244033006E-6	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999672080145359	WITHOUT_CLASSIFICATION	3.27919854640956E-5	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.999967888613537	WITHOUT_CLASSIFICATION	3.211138646307685E-5	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999757270034363	WITHOUT_CLASSIFICATION	2.4272996563689424E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999993583591523	WITHOUT_CLASSIFICATION	6.416408477130144E-7	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999994265674172	WITHOUT_CLASSIFICATION	5.734325828696625E-7	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999853311034027	WITHOUT_CLASSIFICATION	1.4668896597357638E-5	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999844981061684	WITHOUT_CLASSIFICATION	1.550189383166152E-5	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999492422763068	WITHOUT_CLASSIFICATION	5.0757723693170313E-5	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999859443790098	WITHOUT_CLASSIFICATION	1.4055620990239157E-5	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.999998911550441	WITHOUT_CLASSIFICATION	1.088449558935641E-6	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999973133760129	WITHOUT_CLASSIFICATION	2.686623986993502E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999967255778387	WITHOUT_CLASSIFICATION	3.2744221612218546E-6	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.999970291240442	WITHOUT_CLASSIFICATION	2.9708759558032045E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999966575036082	WITHOUT_CLASSIFICATION	3.342496391885688E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.999994995552091	WITHOUT_CLASSIFICATION	5.004447908925564E-6	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999944841007185	WITHOUT_CLASSIFICATION	5.515899281460845E-6	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999983979086616	WITHOUT_CLASSIFICATION	1.602091338399269E-6	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999989933464632	WITHOUT_CLASSIFICATION	1.0066535367874502E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996366684688	WITHOUT_CLASSIFICATION	3.633315311668992E-7	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999977275408232	WITHOUT_CLASSIFICATION	2.272459176904989E-6	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999977048392898	WITHOUT_CLASSIFICATION	2.2951607102341534E-6	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999995321403377	WITHOUT_CLASSIFICATION	4.6785966236717115E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998363915027	WITHOUT_CLASSIFICATION	1.6360849726365395E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998363915027	WITHOUT_CLASSIFICATION	1.6360849726365395E-7	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999992054081966	WITHOUT_CLASSIFICATION	7.945918032274113E-7	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999887452164177	WITHOUT_CLASSIFICATION	1.1254783582374407E-5	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.999989026046441	WITHOUT_CLASSIFICATION	1.0973953559072821E-5	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999982616976305	WITHOUT_CLASSIFICATION	1.7383023695820715E-6	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999982931767654	WITHOUT_CLASSIFICATION	1.7068232347032355E-6	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999996070004792	WITHOUT_CLASSIFICATION	3.9299952082309896E-7	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999999585900592	WITHOUT_CLASSIFICATION	4.140994072996855E-8	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999987374918017	WITHOUT_CLASSIFICATION	1.2625081982812862E-6	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999996461431355	WITHOUT_CLASSIFICATION	3.5385686444681525E-7	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999982707756566	WITHOUT_CLASSIFICATION	1.7292243434115507E-6	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999952370860131	WITHOUT_CLASSIFICATION	4.762913986890285E-6	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9997518602419413	WITHOUT_CLASSIFICATION	2.4813975805879665E-4	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999996581102337	WITHOUT_CLASSIFICATION	3.418897663149455E-7	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999941461244188	WITHOUT_CLASSIFICATION	5.8538755811457365E-6	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999920501667847	WITHOUT_CLASSIFICATION	7.949833215256859E-6	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.999993512317541	WITHOUT_CLASSIFICATION	6.487682458953341E-6	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999987579259517	WITHOUT_CLASSIFICATION	1.2420740482560907E-6	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999978573337471	WITHOUT_CLASSIFICATION	2.1426662528096837E-6	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999999009510806	WITHOUT_CLASSIFICATION	9.90489194039292E-8	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999987714799081	WITHOUT_CLASSIFICATION	1.2285200919811863E-6	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999079947305	WITHOUT_CLASSIFICATION	9.200526952000174E-8	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999929521495289	WITHOUT_CLASSIFICATION	7.047850471047924E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9968347612899175	WITHOUT_CLASSIFICATION	0.0031652387100824103	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.999997590418294	WITHOUT_CLASSIFICATION	2.409581705983757E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9968347612899175	WITHOUT_CLASSIFICATION	0.0031652387100824103	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999952695861777	WITHOUT_CLASSIFICATION	4.7304138223414864E-6	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999924305684107	WITHOUT_CLASSIFICATION	7.569431589277217E-6	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.999992923557465	WITHOUT_CLASSIFICATION	7.076442535003985E-6	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999949841421435	WITHOUT_CLASSIFICATION	5.015857856474487E-6	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999994560692792	WITHOUT_CLASSIFICATION	5.439307208296487E-7	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999918979245178	WITHOUT_CLASSIFICATION	8.102075482137494E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999918979245178	WITHOUT_CLASSIFICATION	8.102075482137494E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999918979245178	WITHOUT_CLASSIFICATION	8.102075482137494E-6	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999981076095164	WITHOUT_CLASSIFICATION	1.892390483696247E-6	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999979324772812	WITHOUT_CLASSIFICATION	2.0675227188734758E-6	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.99999992435048	WITHOUT_CLASSIFICATION	7.56495199645803E-8	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999561385675696	WITHOUT_CLASSIFICATION	4.386143243026617E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999561385675696	WITHOUT_CLASSIFICATION	4.386143243026617E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999561385675696	WITHOUT_CLASSIFICATION	4.386143243026617E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999561385675696	WITHOUT_CLASSIFICATION	4.386143243026617E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999561385675696	WITHOUT_CLASSIFICATION	4.386143243026617E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999561385675696	WITHOUT_CLASSIFICATION	4.386143243026617E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999843448103258	WITHOUT_CLASSIFICATION	1.565518967413012E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999843448103258	WITHOUT_CLASSIFICATION	1.565518967413012E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999843448103258	WITHOUT_CLASSIFICATION	1.565518967413012E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999843448103258	WITHOUT_CLASSIFICATION	1.565518967413012E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999843448103258	WITHOUT_CLASSIFICATION	1.565518967413012E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999634183827876	WITHOUT_CLASSIFICATION	3.658161721250139E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999634183827876	WITHOUT_CLASSIFICATION	3.658161721250139E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999634183827876	WITHOUT_CLASSIFICATION	3.658161721250139E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999634183827876	WITHOUT_CLASSIFICATION	3.658161721250139E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999634183827876	WITHOUT_CLASSIFICATION	3.658161721250139E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999547268486942	WITHOUT_CLASSIFICATION	4.527315130579977E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999547268486942	WITHOUT_CLASSIFICATION	4.527315130579977E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999547268486942	WITHOUT_CLASSIFICATION	4.527315130579977E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999547268486942	WITHOUT_CLASSIFICATION	4.527315130579977E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999547268486942	WITHOUT_CLASSIFICATION	4.527315130579977E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999547268486942	WITHOUT_CLASSIFICATION	4.527315130579977E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999871836807818	WITHOUT_CLASSIFICATION	1.2816319218206231E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999871836807818	WITHOUT_CLASSIFICATION	1.2816319218206231E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999871836807818	WITHOUT_CLASSIFICATION	1.2816319218206231E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999871836807818	WITHOUT_CLASSIFICATION	1.2816319218206231E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999871836807818	WITHOUT_CLASSIFICATION	1.2816319218206231E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999879429847099	WITHOUT_CLASSIFICATION	1.2057015290076097E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999879429847099	WITHOUT_CLASSIFICATION	1.2057015290076097E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999879429847099	WITHOUT_CLASSIFICATION	1.2057015290076097E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999879429847099	WITHOUT_CLASSIFICATION	1.2057015290076097E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999879429847099	WITHOUT_CLASSIFICATION	1.2057015290076097E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999880941230465	WITHOUT_CLASSIFICATION	1.1905876953435488E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999880941230465	WITHOUT_CLASSIFICATION	1.1905876953435488E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999880941230465	WITHOUT_CLASSIFICATION	1.1905876953435488E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999880941230465	WITHOUT_CLASSIFICATION	1.1905876953435488E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999880941230465	WITHOUT_CLASSIFICATION	1.1905876953435488E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999996636293287	WITHOUT_CLASSIFICATION	3.3637067122629744E-7	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999995753543284	WITHOUT_CLASSIFICATION	4.246456717017406E-7	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999941260896551	WITHOUT_CLASSIFICATION	5.873910344911456E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999983931658298	WITHOUT_CLASSIFICATION	1.6068341701616269E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999995776427255	WITHOUT_CLASSIFICATION	4.2235727454072724E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999963674743365	WITHOUT_CLASSIFICATION	3.632525663402741E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999962417282146	WITHOUT_CLASSIFICATION	3.758271785361484E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999966165380696	WITHOUT_CLASSIFICATION	3.3834619304431783E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999978016350868	WITHOUT_CLASSIFICATION	2.1983649131747714E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999974446457661	WITHOUT_CLASSIFICATION	2.5553542339607764E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999971687215262	WITHOUT_CLASSIFICATION	2.831278473880779E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999974627400465	WITHOUT_CLASSIFICATION	2.5372599534681764E-6	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999974447317034	WITHOUT_CLASSIFICATION	2.5552682966433542E-6	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999969240266185	WITHOUT_CLASSIFICATION	3.07597338144368E-6	TEST
// line 296	WITHOUT_CLASSIFICATION	0.999997292678026	WITHOUT_CLASSIFICATION	2.707321974108745E-6	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999965145647605	WITHOUT_CLASSIFICATION	3.4854352395940608E-6	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999963648472088	WITHOUT_CLASSIFICATION	3.6351527911407475E-6	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999962740412401	WITHOUT_CLASSIFICATION	3.7259587598391784E-6	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999962457611989	WITHOUT_CLASSIFICATION	3.7542388010549187E-6	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999963669872116	WITHOUT_CLASSIFICATION	3.6330127883411108E-6	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999965239924895	WITHOUT_CLASSIFICATION	3.4760075105602413E-6	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999964599866442	WITHOUT_CLASSIFICATION	3.5400133557901892E-6	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999965349769763	WITHOUT_CLASSIFICATION	3.4650230237832747E-6	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999964451286937	WITHOUT_CLASSIFICATION	3.554871306273211E-6	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999964130572115	WITHOUT_CLASSIFICATION	3.5869427883762437E-6	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999962362163093	WITHOUT_CLASSIFICATION	3.7637836907756147E-6	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999963106672354	WITHOUT_CLASSIFICATION	3.689332764681759E-6	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999964391357251	WITHOUT_CLASSIFICATION	3.5608642748582687E-6	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999964814874543	WITHOUT_CLASSIFICATION	3.5185125456230587E-6	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999975176127655	WITHOUT_CLASSIFICATION	2.4823872345121434E-6	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999971912043465	WITHOUT_CLASSIFICATION	2.8087956535427363E-6	TEST
// line 436	WITHOUT_CLASSIFICATION	0.999997207208854	WITHOUT_CLASSIFICATION	2.7927911460824536E-6	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999973573974391	WITHOUT_CLASSIFICATION	2.642602560883345E-6	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999974139512123	WITHOUT_CLASSIFICATION	2.5860487877053895E-6	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999973376165181	WITHOUT_CLASSIFICATION	2.6623834818834607E-6	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999975157979141	WITHOUT_CLASSIFICATION	2.484202085871664E-6	TEST
// line 466	WITHOUT_CLASSIFICATION	0.999997410754955	WITHOUT_CLASSIFICATION	2.5892450450907057E-6	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999975529649888	WITHOUT_CLASSIFICATION	2.4470350111306617E-6	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999974670888884	WITHOUT_CLASSIFICATION	2.5329111116932885E-6	TEST
// line 481	WITHOUT_CLASSIFICATION	0.999997457223743	WITHOUT_CLASSIFICATION	2.542776257004026E-6	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999973949104786	WITHOUT_CLASSIFICATION	2.6050895214232537E-6	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999974659798895	WITHOUT_CLASSIFICATION	2.5340201105753028E-6	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999976158808871	WITHOUT_CLASSIFICATION	2.3841191130277856E-6	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999968985234629	WITHOUT_CLASSIFICATION	3.1014765372240726E-6	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999974680127698	WITHOUT_CLASSIFICATION	2.5319872302599647E-6	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999975068624102	WITHOUT_CLASSIFICATION	2.4931375898709538E-6	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999976319823277	WITHOUT_CLASSIFICATION	2.368017672202559E-6	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999972442696504	WITHOUT_CLASSIFICATION	2.7557303496289457E-6	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999972536793491	WITHOUT_CLASSIFICATION	2.746320650840776E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999976013295532	WITHOUT_CLASSIFICATION	2.398670446805091E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999970949628605	WITHOUT_CLASSIFICATION	2.905037139526755E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999974006876693	WITHOUT_CLASSIFICATION	2.5993123307327575E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999972134167031	WITHOUT_CLASSIFICATION	2.786583296914593E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999978799062328	WITHOUT_CLASSIFICATION	2.1200937671972733E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999973007178697	WITHOUT_CLASSIFICATION	2.6992821302457966E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999973340438222	WITHOUT_CLASSIFICATION	2.665956177738405E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999972932738842	WITHOUT_CLASSIFICATION	2.706726115888767E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999971893613175	WITHOUT_CLASSIFICATION	2.8106386824517787E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999973687420302	WITHOUT_CLASSIFICATION	2.63125796979107E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999972486269446	WITHOUT_CLASSIFICATION	2.75137305549287E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999972023667887	WITHOUT_CLASSIFICATION	2.797633211210398E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999972959936886	WITHOUT_CLASSIFICATION	2.7040063113986027E-6	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999970700543994	WITHOUT_CLASSIFICATION	2.9299456006220897E-6	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999974800108874	WITHOUT_CLASSIFICATION	2.519989112699822E-6	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999971749116413	WITHOUT_CLASSIFICATION	2.825088358734317E-6	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999971856486274	WITHOUT_CLASSIFICATION	2.8143513725135505E-6	TEST
// line 561	WITHOUT_CLASSIFICATION	0.999997257388171	WITHOUT_CLASSIFICATION	2.7426118290458396E-6	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999972019912575	WITHOUT_CLASSIFICATION	2.7980087425412476E-6	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999973577766783	WITHOUT_CLASSIFICATION	2.642223321609878E-6	TEST
// line 579	WITHOUT_CLASSIFICATION	0.999997313606104	WITHOUT_CLASSIFICATION	2.686393896088744E-6	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999973010417083	WITHOUT_CLASSIFICATION	2.698958291829918E-6	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999973559549162	WITHOUT_CLASSIFICATION	2.644045083713971E-6	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999973308582708	WITHOUT_CLASSIFICATION	2.669141729256418E-6	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999972536376398	WITHOUT_CLASSIFICATION	2.746362360244508E-6	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999973413247877	WITHOUT_CLASSIFICATION	2.6586752123460404E-6	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999970163320036	WITHOUT_CLASSIFICATION	2.9836679965079676E-6	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999973208456784	WITHOUT_CLASSIFICATION	2.6791543216634164E-6	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999972785215459	WITHOUT_CLASSIFICATION	2.721478454066278E-6	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999969757186704	WITHOUT_CLASSIFICATION	3.0242813296233514E-6	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999970786345259	WITHOUT_CLASSIFICATION	2.921365474046527E-6	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999974465562206	WITHOUT_CLASSIFICATION	2.553443779510634E-6	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999972907494171	WITHOUT_CLASSIFICATION	2.709250582849846E-6	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999971888320472	WITHOUT_CLASSIFICATION	2.8111679528278914E-6	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999971396848669	WITHOUT_CLASSIFICATION	2.860315133106508E-6	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999973082902537	WITHOUT_CLASSIFICATION	2.691709746203244E-6	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999974025895271	WITHOUT_CLASSIFICATION	2.597410472879362E-6	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999972361965752	WITHOUT_CLASSIFICATION	2.763803424739644E-6	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999972980368134	WITHOUT_CLASSIFICATION	2.7019631867192692E-6	TEST
// line 706	WITHOUT_CLASSIFICATION	0.999997501484496	WITHOUT_CLASSIFICATION	2.4985155040226753E-6	TEST
// line 708	WITHOUT_CLASSIFICATION	0.999997222073329	WITHOUT_CLASSIFICATION	2.777926670998096E-6	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999971901912708	WITHOUT_CLASSIFICATION	2.8098087293591707E-6	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999968763436679	WITHOUT_CLASSIFICATION	3.123656332051734E-6	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999969336309894	WITHOUT_CLASSIFICATION	3.0663690105087936E-6	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999972586847832	WITHOUT_CLASSIFICATION	2.741315216807512E-6	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999975198588681	WITHOUT_CLASSIFICATION	2.480141131896016E-6	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999971781455954	WITHOUT_CLASSIFICATION	2.8218544045781333E-6	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999972291607864	WITHOUT_CLASSIFICATION	2.7708392136789097E-6	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999976744710959	WITHOUT_CLASSIFICATION	2.325528904110225E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.999997436493526	WITHOUT_CLASSIFICATION	2.56350647399127E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999973889916821	WITHOUT_CLASSIFICATION	2.6110083178496406E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999973424688668	WITHOUT_CLASSIFICATION	2.657531133032931E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.999997120263589	WITHOUT_CLASSIFICATION	2.879736411111103E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999973008101084	WITHOUT_CLASSIFICATION	2.699189891665634E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999970889762477	WITHOUT_CLASSIFICATION	2.91102375229938E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999974099795703	WITHOUT_CLASSIFICATION	2.590020429723616E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999975618974292	WITHOUT_CLASSIFICATION	2.438102570797688E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999975981554834	WITHOUT_CLASSIFICATION	2.401844516703903E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999979015389439	WITHOUT_CLASSIFICATION	2.098461056155423E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999974476589696	WITHOUT_CLASSIFICATION	2.5523410304189256E-6	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999973258652147	WITHOUT_CLASSIFICATION	2.674134785230346E-6	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999973455823449	WITHOUT_CLASSIFICATION	2.654417655107379E-6	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999974030804241	WITHOUT_CLASSIFICATION	2.5969195758407895E-6	TEST
// line 832	WITHOUT_CLASSIFICATION	0.999997020360291	WITHOUT_CLASSIFICATION	2.979639708894498E-6	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999972354402213	WITHOUT_CLASSIFICATION	2.7645597786492454E-6	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999972693339192	WITHOUT_CLASSIFICATION	2.7306660808756014E-6	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999975114897638	WITHOUT_CLASSIFICATION	2.4885102363112163E-6	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999970389060906	WITHOUT_CLASSIFICATION	2.961093909437784E-6	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999972482202972	WITHOUT_CLASSIFICATION	2.751779702798889E-6	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999974000297	WITHOUT_CLASSIFICATION	2.5999703000078617E-6	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999972581631349	WITHOUT_CLASSIFICATION	2.7418368651465455E-6	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999973443016733	WITHOUT_CLASSIFICATION	2.6556983267104865E-6	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999972456019903	WITHOUT_CLASSIFICATION	2.754398009658042E-6	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999975575847811	WITHOUT_CLASSIFICATION	2.4424152188646187E-6	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999975452386861	WITHOUT_CLASSIFICATION	2.4547613139005887E-6	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999974752477284	WITHOUT_CLASSIFICATION	2.5247522715543345E-6	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999977217459342	WITHOUT_CLASSIFICATION	2.278254065825448E-6	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999977390591767	WITHOUT_CLASSIFICATION	2.2609408233317047E-6	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999972884406708	WITHOUT_CLASSIFICATION	2.7115593291439865E-6	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999973512843054	WITHOUT_CLASSIFICATION	2.6487156945949633E-6	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999974438197622	WITHOUT_CLASSIFICATION	2.5561802377668524E-6	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999974773887058	WITHOUT_CLASSIFICATION	2.5226112941272878E-6	TEST
// line 951	WITHOUT_CLASSIFICATION	0.999997298893614	WITHOUT_CLASSIFICATION	2.701106385977313E-6	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999972435247287	WITHOUT_CLASSIFICATION	2.7564752712558556E-6	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999973544334757	WITHOUT_CLASSIFICATION	2.645566524308643E-6	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999973111949609	WITHOUT_CLASSIFICATION	2.6888050390154128E-6	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999972940503237	WITHOUT_CLASSIFICATION	2.7059496763480878E-6	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999971087466039	WITHOUT_CLASSIFICATION	2.8912533961614026E-6	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999976078430951	WITHOUT_CLASSIFICATION	2.3921569047932825E-6	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999976267542897	WITHOUT_CLASSIFICATION	2.3732457102802023E-6	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.99999735178517	WITHOUT_CLASSIFICATION	2.6482148299882954E-6	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.999997604198848	WITHOUT_CLASSIFICATION	2.3958011520438826E-6	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999977992454536	WITHOUT_CLASSIFICATION	2.2007545463467904E-6	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999977234125904	WITHOUT_CLASSIFICATION	2.2765874095014836E-6	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999976226601476	WITHOUT_CLASSIFICATION	2.3773398523283445E-6	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999978499295046	WITHOUT_CLASSIFICATION	2.1500704953997794E-6	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999979511076311	WITHOUT_CLASSIFICATION	2.0488923689089136E-6	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999978306909446	WITHOUT_CLASSIFICATION	2.169309055322197E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999975750417661	WITHOUT_CLASSIFICATION	2.4249582338497965E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999970605392178	WITHOUT_CLASSIFICATION	2.939460782234342E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999975516470673	WITHOUT_CLASSIFICATION	2.448352932790484E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999975825955273	WITHOUT_CLASSIFICATION	2.4174044726210234E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999979298873025	WITHOUT_CLASSIFICATION	2.070112697474066E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999975973618284	WITHOUT_CLASSIFICATION	2.4026381716593005E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999977796564293	WITHOUT_CLASSIFICATION	2.2203435707089475E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.999997647409879	WITHOUT_CLASSIFICATION	2.352590121072991E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999977478139093	WITHOUT_CLASSIFICATION	2.252186090724522E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999971247027547	WITHOUT_CLASSIFICATION	2.8752972452978404E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999971689419513	WITHOUT_CLASSIFICATION	2.8310580486860397E-6	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999978859485208	WITHOUT_CLASSIFICATION	2.114051479201849E-6	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999977776298095	WITHOUT_CLASSIFICATION	2.2223701906734507E-6	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999976950798147	WITHOUT_CLASSIFICATION	2.3049201852617205E-6	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999978788628616	WITHOUT_CLASSIFICATION	2.1211371383076082E-6	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999977200223158	WITHOUT_CLASSIFICATION	2.279977684323594E-6	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999976724887369	WITHOUT_CLASSIFICATION	2.327511263150919E-6	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999975859366971	WITHOUT_CLASSIFICATION	2.41406330299456E-6	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999977635011259	WITHOUT_CLASSIFICATION	2.236498874132159E-6	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999977069306877	WITHOUT_CLASSIFICATION	2.293069312361071E-6	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999976178250207	WITHOUT_CLASSIFICATION	2.3821749792075987E-6	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.999997375957742	WITHOUT_CLASSIFICATION	2.6240422580638065E-6	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999976729353957	WITHOUT_CLASSIFICATION	2.327064604339138E-6	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999978375131647	WITHOUT_CLASSIFICATION	2.162486835302806E-6	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999975036846407	WITHOUT_CLASSIFICATION	2.4963153592739864E-6	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999976574918462	WITHOUT_CLASSIFICATION	2.3425081537641057E-6	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999973403185407	WITHOUT_CLASSIFICATION	2.6596814592858515E-6	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.999997665781525	WITHOUT_CLASSIFICATION	2.3342184749734665E-6	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999978819824668	WITHOUT_CLASSIFICATION	2.118017533208106E-6	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999978582954474	WITHOUT_CLASSIFICATION	2.1417045526141E-6	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999977141817027	WITHOUT_CLASSIFICATION	2.285818297325366E-6	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999973317801881	WITHOUT_CLASSIFICATION	2.668219811962301E-6	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999975910345408	WITHOUT_CLASSIFICATION	2.4089654591394334E-6	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999968269821946	WITHOUT_CLASSIFICATION	3.1730178054860216E-6	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999973982344627	WITHOUT_CLASSIFICATION	2.601765537440676E-6	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999976891546122	WITHOUT_CLASSIFICATION	2.3108453878436685E-6	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999977119732317	WITHOUT_CLASSIFICATION	2.2880267682342233E-6	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.999997625703537	WITHOUT_CLASSIFICATION	2.374296462939201E-6	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999977545419585	WITHOUT_CLASSIFICATION	2.2454580414588565E-6	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.999997811055544	WITHOUT_CLASSIFICATION	2.1889444560459573E-6	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.999997379226461	WITHOUT_CLASSIFICATION	2.620773539048299E-6	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999976526826422	WITHOUT_CLASSIFICATION	2.347317357797961E-6	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999976964714681	WITHOUT_CLASSIFICATION	2.3035285318754593E-6	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999976676838586	WITHOUT_CLASSIFICATION	2.332316141422386E-6	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999977235933911	WITHOUT_CLASSIFICATION	2.276406608833521E-6	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999976442868947	WITHOUT_CLASSIFICATION	2.3557131052873235E-6	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999976635235818	WITHOUT_CLASSIFICATION	2.336476418224906E-6	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999977063726256	WITHOUT_CLASSIFICATION	2.2936273744085616E-6	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.999997317881021	WITHOUT_CLASSIFICATION	2.6821189790537993E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.999997497939802	WITHOUT_CLASSIFICATION	2.5020601980440398E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.999997439103393	WITHOUT_CLASSIFICATION	2.560896606980208E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999974275911049	WITHOUT_CLASSIFICATION	2.572408895204012E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999977180322847	WITHOUT_CLASSIFICATION	2.281967715415951E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999977961913579	WITHOUT_CLASSIFICATION	2.2038086422071565E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999979193142468	WITHOUT_CLASSIFICATION	2.080685753363049E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999978730725261	WITHOUT_CLASSIFICATION	2.1269274738056384E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999977806619773	WITHOUT_CLASSIFICATION	2.2193380226228184E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.999997633321774	WITHOUT_CLASSIFICATION	2.3666782259092393E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999977013480684	WITHOUT_CLASSIFICATION	2.298651931531326E-6	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999973772870389	WITHOUT_CLASSIFICATION	2.622712961055409E-6	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999967698058051	WITHOUT_CLASSIFICATION	3.2301941948429955E-6	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999972889860572	WITHOUT_CLASSIFICATION	2.7110139427223712E-6	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999973085687615	WITHOUT_CLASSIFICATION	2.691431238506344E-6	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999973826651415	WITHOUT_CLASSIFICATION	2.6173348584869223E-6	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.999997439269617	WITHOUT_CLASSIFICATION	2.5607303829953287E-6	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999973155276712	WITHOUT_CLASSIFICATION	2.684472328749618E-6	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999974900080008	WITHOUT_CLASSIFICATION	2.509991999224538E-6	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999974437899426	WITHOUT_CLASSIFICATION	2.556210057440854E-6	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999974330611469	WITHOUT_CLASSIFICATION	2.566938853115416E-6	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999974124743873	WITHOUT_CLASSIFICATION	2.587525612693201E-6	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999973205004359	WITHOUT_CLASSIFICATION	2.67949956419341E-6	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999974682237414	WITHOUT_CLASSIFICATION	2.5317762585616063E-6	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999973017683448	WITHOUT_CLASSIFICATION	2.6982316552175846E-6	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999972840647375	WITHOUT_CLASSIFICATION	2.715935262503586E-6	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999973708327458	WITHOUT_CLASSIFICATION	2.62916725429904E-6	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.999997353359802	WITHOUT_CLASSIFICATION	2.6466401979586484E-6	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999975858762638	WITHOUT_CLASSIFICATION	2.4141237363421725E-6	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999979802608849	WITHOUT_CLASSIFICATION	2.0197391150473106E-6	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.999997693299319	WITHOUT_CLASSIFICATION	2.3067006809657957E-6	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999976712872358	WITHOUT_CLASSIFICATION	2.3287127640900963E-6	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999977504806432	WITHOUT_CLASSIFICATION	2.2495193567161945E-6	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999977360716367	WITHOUT_CLASSIFICATION	2.2639283633364353E-6	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999974844679853	WITHOUT_CLASSIFICATION	2.5155320147751573E-6	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999975360229817	WITHOUT_CLASSIFICATION	2.4639770183402132E-6	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.999997710551929	WITHOUT_CLASSIFICATION	2.2894480710589413E-6	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999976681283829	WITHOUT_CLASSIFICATION	2.331871617187538E-6	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999977423024105	WITHOUT_CLASSIFICATION	2.257697589634479E-6	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999977069948366	WITHOUT_CLASSIFICATION	2.2930051634324536E-6	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999978428743969	WITHOUT_CLASSIFICATION	2.1571256030986254E-6	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999976762125873	WITHOUT_CLASSIFICATION	2.323787412789851E-6	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999977877887862	WITHOUT_CLASSIFICATION	2.2122112138398426E-6	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999976570435292	WITHOUT_CLASSIFICATION	2.342956470749227E-6	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999973632302434	WITHOUT_CLASSIFICATION	2.6367697565917744E-6	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999973866798292	WITHOUT_CLASSIFICATION	2.6133201707806088E-6	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999977267967344	WITHOUT_CLASSIFICATION	2.2732032655710387E-6	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.999997543902596	WITHOUT_CLASSIFICATION	2.4560974039355518E-6	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999973457882995	WITHOUT_CLASSIFICATION	2.6542117005240686E-6	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.999997214196327	WITHOUT_CLASSIFICATION	2.7858036729686477E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999975625019023	WITHOUT_CLASSIFICATION	2.4374980976284588E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999977413694835	WITHOUT_CLASSIFICATION	2.2586305164790742E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999974157637794	WITHOUT_CLASSIFICATION	2.5842362205157087E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999975338022694	WITHOUT_CLASSIFICATION	2.466197730618769E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999975878085551	WITHOUT_CLASSIFICATION	2.412191444828326E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999975847965862	WITHOUT_CLASSIFICATION	2.4152034138287618E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999977450426506	WITHOUT_CLASSIFICATION	2.254957349316353E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999978310263296	WITHOUT_CLASSIFICATION	2.1689736703394217E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999977084607337	WITHOUT_CLASSIFICATION	2.291539266246008E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999978239041237	WITHOUT_CLASSIFICATION	2.1760958763255432E-6	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999978336869326	WITHOUT_CLASSIFICATION	2.1663130673727114E-6	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999978142884481	WITHOUT_CLASSIFICATION	2.1857115518547746E-6	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999976192838843	WITHOUT_CLASSIFICATION	2.380716115766414E-6	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999976336927261	WITHOUT_CLASSIFICATION	2.3663072739171166E-6	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999973312326823	WITHOUT_CLASSIFICATION	2.668767317611525E-6	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999974657957686	WITHOUT_CLASSIFICATION	2.5342042313159827E-6	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999977805936433	WITHOUT_CLASSIFICATION	2.2194063566983974E-6	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999971745004077	WITHOUT_CLASSIFICATION	2.825499592215329E-6	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999976529979403	WITHOUT_CLASSIFICATION	2.3470020597303267E-6	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.999997762068771	WITHOUT_CLASSIFICATION	2.2379312288970506E-6	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999973370685655	WITHOUT_CLASSIFICATION	2.662931434571256E-6	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999976686911118	WITHOUT_CLASSIFICATION	2.3313088881556996E-6	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999978014741301	WITHOUT_CLASSIFICATION	2.19852586990799E-6	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999970912172248	WITHOUT_CLASSIFICATION	2.9087827752030286E-6	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999976699713546	WITHOUT_CLASSIFICATION	2.3300286454002914E-6	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999975690832854	WITHOUT_CLASSIFICATION	2.4309167145391595E-6	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999968168668953	WITHOUT_CLASSIFICATION	3.1831331045513438E-6	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999974713520832	WITHOUT_CLASSIFICATION	2.528647916762355E-6	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999973981666832	WITHOUT_CLASSIFICATION	2.60183331686221E-6	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999977628048482	WITHOUT_CLASSIFICATION	2.2371951518055286E-6	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999976481114335	WITHOUT_CLASSIFICATION	2.3518885665555174E-6	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.999997607289623	WITHOUT_CLASSIFICATION	2.392710377058621E-6	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999971640703786	WITHOUT_CLASSIFICATION	2.8359296213799976E-6	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999975828439694	WITHOUT_CLASSIFICATION	2.4171560305221546E-6	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999975735932338	WITHOUT_CLASSIFICATION	2.426406766174749E-6	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999977174251222	WITHOUT_CLASSIFICATION	2.28257487775698E-6	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999976132271378	WITHOUT_CLASSIFICATION	2.386772862209128E-6	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999975730971652	WITHOUT_CLASSIFICATION	2.4269028347626845E-6	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999972113515833	WITHOUT_CLASSIFICATION	2.7886484166396337E-6	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999976576445412	WITHOUT_CLASSIFICATION	2.3423554588971292E-6	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999979118659809	WITHOUT_CLASSIFICATION	2.088134019213618E-6	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999976065514481	WITHOUT_CLASSIFICATION	2.393448551916249E-6	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999980454142404	WITHOUT_CLASSIFICATION	1.95458575969525E-6	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999980754404127	WITHOUT_CLASSIFICATION	1.9245595872624707E-6	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999977621151527	WITHOUT_CLASSIFICATION	2.2378848472712902E-6	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999978365714247	WITHOUT_CLASSIFICATION	2.163428575230967E-6	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999977882660039	WITHOUT_CLASSIFICATION	2.211733996075295E-6	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999971180704555	WITHOUT_CLASSIFICATION	2.8819295443264888E-6	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999979511947423	WITHOUT_CLASSIFICATION	2.048805257654855E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999853311034027	WITHOUT_CLASSIFICATION	1.4668896597357638E-5	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999844981061684	WITHOUT_CLASSIFICATION	1.550189383166152E-5	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999967255778387	WITHOUT_CLASSIFICATION	3.2744221612218546E-6	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999966575036082	WITHOUT_CLASSIFICATION	3.342496391885688E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.999994995552091	WITHOUT_CLASSIFICATION	5.004447908925564E-6	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999944841007185	WITHOUT_CLASSIFICATION	5.515899281460845E-6	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999983979086616	WITHOUT_CLASSIFICATION	1.602091338399269E-6	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999820178782505	WITHOUT_CLASSIFICATION	1.7982121749539437E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999979139589057	WITHOUT_CLASSIFICATION	2.0860410942188435E-6	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999979256983522	WITHOUT_CLASSIFICATION	2.0743016477891737E-6	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.999997858585709	WITHOUT_CLASSIFICATION	2.141414291037297E-6	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999977935232395	WITHOUT_CLASSIFICATION	2.20647676056129E-6	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999978035913564	WITHOUT_CLASSIFICATION	2.196408643641102E-6	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999978321603168	WITHOUT_CLASSIFICATION	2.1678396831552995E-6	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999978806657481	WITHOUT_CLASSIFICATION	2.1193342518880264E-6	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999976223902365	WITHOUT_CLASSIFICATION	2.377609763498652E-6	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999972007170143	WITHOUT_CLASSIFICATION	2.799282985707992E-6	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999978526507827	WITHOUT_CLASSIFICATION	2.1473492173020578E-6	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.999997414610998	WITHOUT_CLASSIFICATION	2.5853890019228653E-6	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999975082103085	WITHOUT_CLASSIFICATION	2.4917896914812464E-6	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999978242333482	WITHOUT_CLASSIFICATION	2.1757666518689523E-6	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999978314068263	WITHOUT_CLASSIFICATION	2.168593173711406E-6	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999978946260717	WITHOUT_CLASSIFICATION	2.1053739283296217E-6	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999974947917	WITHOUT_CLASSIFICATION	2.5052083000959335E-6	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999977483665433	WITHOUT_CLASSIFICATION	2.251633456643542E-6	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999977407392489	WITHOUT_CLASSIFICATION	2.259260751198147E-6	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999978023984936	WITHOUT_CLASSIFICATION	2.197601506353393E-6	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999976165119739	WITHOUT_CLASSIFICATION	2.383488026060838E-6	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999962798303295	WITHOUT_CLASSIFICATION	3.720169670570183E-6	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999963142665286	WITHOUT_CLASSIFICATION	3.6857334714213838E-6	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999974748586944	WITHOUT_CLASSIFICATION	2.5251413056203864E-6	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999989156947064	WITHOUT_CLASSIFICATION	1.0843052935483856E-6	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999970501570433	WITHOUT_CLASSIFICATION	2.9498429566950397E-6	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.99999829037886	WITHOUT_CLASSIFICATION	1.7096211399324209E-6	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.999997290432247	WITHOUT_CLASSIFICATION	2.7095677529160523E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999998699995817	WITHOUT_CLASSIFICATION	1.3000041827538466E-7	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999692344687963	WITHOUT_CLASSIFICATION	3.076553120365479E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996366684688	WITHOUT_CLASSIFICATION	3.633315311668992E-7	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999977275408232	WITHOUT_CLASSIFICATION	2.272459176904989E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998363915027	WITHOUT_CLASSIFICATION	1.6360849726365395E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998363915027	WITHOUT_CLASSIFICATION	1.6360849726365395E-7	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999689660394768	WITHOUT_CLASSIFICATION	3.10339605230584E-5	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999971099021683	WITHOUT_CLASSIFICATION	2.8900978317726596E-6	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999993660718421	WITHOUT_CLASSIFICATION	6.339281577741356E-7	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999979301828926	WITHOUT_CLASSIFICATION	2.069817107384147E-6	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999999475575313	WITHOUT_CLASSIFICATION	5.244246863308203E-8	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999842438823191	WITHOUT_CLASSIFICATION	1.575611768095232E-5	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999992439746661	WITHOUT_CLASSIFICATION	7.560253339206245E-7	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999997273155146	WITHOUT_CLASSIFICATION	2.7268448550383976E-7	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999994887100908	WITHOUT_CLASSIFICATION	5.11289909103442E-7	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.999999720930059	WITHOUT_CLASSIFICATION	2.7906994110863576E-7	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.999999899127434	WITHOUT_CLASSIFICATION	1.0087256601811287E-7	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999998762065381	WITHOUT_CLASSIFICATION	1.2379346201488159E-7	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999998828008219	WITHOUT_CLASSIFICATION	1.1719917817643961E-7	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999990804992682	WITHOUT_CLASSIFICATION	9.195007317586157E-7	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999997940791288	WITHOUT_CLASSIFICATION	2.0592087128213846E-7	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999997940791288	WITHOUT_CLASSIFICATION	2.0592087128213846E-7	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999770868621638	WITHOUT_CLASSIFICATION	2.2913137836124424E-5	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999997723543393	WITHOUT_CLASSIFICATION	2.276456607263703E-7	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999990104540614	WITHOUT_CLASSIFICATION	9.895459385524307E-7	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999984832296265	WITHOUT_CLASSIFICATION	1.5167703735240928E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999902374924372	WITHOUT_CLASSIFICATION	9.762507562684986E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999991209382129	WITHOUT_CLASSIFICATION	8.790617870643525E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999999472608596	WITHOUT_CLASSIFICATION	5.2739140297282E-8	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999991209382129	WITHOUT_CLASSIFICATION	8.790617870643525E-7	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999677252129896	WITHOUT_CLASSIFICATION	3.227478701031202E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999978655016094	WITHOUT_CLASSIFICATION	2.134498390521342E-6	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999956665653341	WITHOUT_CLASSIFICATION	4.333434665889374E-6	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999953720208027	WITHOUT_CLASSIFICATION	4.6279791973276936E-6	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999982014565638	WITHOUT_CLASSIFICATION	1.7985434361705923E-6	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999973777836405	WITHOUT_CLASSIFICATION	2.6222163595771088E-6	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999971248131182	WITHOUT_CLASSIFICATION	2.8751868818508664E-6	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999931620243425	WITHOUT_CLASSIFICATION	6.837975657463318E-6	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.99999390652367	WITHOUT_CLASSIFICATION	6.093476329964821E-6	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999935618657227	WITHOUT_CLASSIFICATION	6.438134277240519E-6	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999981333710721	WITHOUT_CLASSIFICATION	1.86662892789683E-6	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999863634649059	WITHOUT_CLASSIFICATION	1.3636535094087354E-5	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999711396439315	WITHOUT_CLASSIFICATION	2.886035606855881E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999977132101623	WITHOUT_CLASSIFICATION	2.286789837629981E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999982372360585	WITHOUT_CLASSIFICATION	1.762763941432852E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999982372360585	WITHOUT_CLASSIFICATION	1.762763941432852E-6	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999997075343737	WITHOUT_CLASSIFICATION	2.924656262890986E-7	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999994485381102	WITHOUT_CLASSIFICATION	5.514618897698473E-7	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999998056166182	WITHOUT_CLASSIFICATION	1.9438338191030343E-7	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999997504258991	WITHOUT_CLASSIFICATION	2.4957410098759275E-7	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999999011333858	WITHOUT_CLASSIFICATION	9.886661417324062E-8	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999991209382129	WITHOUT_CLASSIFICATION	8.790617870643525E-7	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999997860558432	WITHOUT_CLASSIFICATION	2.1394415681481256E-7	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999770146759	WITHOUT_CLASSIFICATION	2.2985324134121355E-8	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999985811098963	WITHOUT_CLASSIFICATION	1.4188901037255558E-6	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999998702806396	WITHOUT_CLASSIFICATION	1.297193604625343E-7	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999997690376398	WITHOUT_CLASSIFICATION	2.3096236030466937E-7	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999995045808057	WITHOUT_CLASSIFICATION	4.954191942676829E-7	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999985246573501	WITHOUT_CLASSIFICATION	1.475342649929206E-6	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999991448123365	WITHOUT_CLASSIFICATION	8.551876633525721E-7	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999990453852018	WITHOUT_CLASSIFICATION	9.546147981463982E-7	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999996980679479	WITHOUT_CLASSIFICATION	3.019320521564238E-7	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999996076982822	WITHOUT_CLASSIFICATION	3.9230171771498E-7	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999996753611003	WITHOUT_CLASSIFICATION	3.246388996258746E-7	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9984822391787469	WITHOUT_CLASSIFICATION	0.0015177608212531603	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999933390497666	WITHOUT_CLASSIFICATION	6.66095023332656E-6	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999964825123472	WITHOUT_CLASSIFICATION	3.5174876528445904E-6	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999836086443842	WITHOUT_CLASSIFICATION	1.639135561588502E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999995139797855	WITHOUT_CLASSIFICATION	4.860202144878414E-7	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999994351770418	WITHOUT_CLASSIFICATION	5.648229581929533E-7	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999962020794928	WITHOUT_CLASSIFICATION	3.797920507224759E-6	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999989463695407	WITHOUT_CLASSIFICATION	1.0536304594005693E-6	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999960511914022	WITHOUT_CLASSIFICATION	3.9488085977307675E-6	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999887709666248	WITHOUT_CLASSIFICATION	1.1229033375198728E-5	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999997461333956	WITHOUT_CLASSIFICATION	2.5386660436853E-7	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999992812318255	WITHOUT_CLASSIFICATION	7.187681746403345E-7	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999989070704731	WITHOUT_CLASSIFICATION	1.0929295268338064E-6	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999988932246137	WITHOUT_CLASSIFICATION	1.1067753863339902E-6	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999998006428282	WITHOUT_CLASSIFICATION	1.9935717180034787E-7	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999987524876909	WITHOUT_CLASSIFICATION	1.247512309018063E-6	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999978399617627	WITHOUT_CLASSIFICATION	2.160038237340279E-6	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999997415835109	WITHOUT_CLASSIFICATION	2.584164890777047E-7	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.999998074566394	WITHOUT_CLASSIFICATION	1.9254336059989403E-6	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999988575070037	WITHOUT_CLASSIFICATION	1.1424929963737546E-6	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999989898049957	WITHOUT_CLASSIFICATION	1.0101950043791302E-6	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999995520649679	WITHOUT_CLASSIFICATION	4.4793503202016855E-7	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.999999481531654	WITHOUT_CLASSIFICATION	5.184683461126651E-7	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999994091028732	WITHOUT_CLASSIFICATION	5.908971267491389E-7	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999993987668286	WITHOUT_CLASSIFICATION	6.012331714181324E-7	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999996347382648	WITHOUT_CLASSIFICATION	3.6526173523406874E-7	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999981955749427	WITHOUT_CLASSIFICATION	1.8044250572223902E-6	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999998458412186	WITHOUT_CLASSIFICATION	1.5415878142106447E-7	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999820178782505	WITHOUT_CLASSIFICATION	1.7982121749539437E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999986419402326	WITHOUT_CLASSIFICATION	1.3580597674371546E-6	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999990624588015	WITHOUT_CLASSIFICATION	9.375411984266997E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999999961792697	WITHOUT_CLASSIFICATION	3.820730292160474E-8	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999997750829213	WITHOUT_CLASSIFICATION	2.2491707882133952E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999978655016094	WITHOUT_CLASSIFICATION	2.134498390521342E-6	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999951542847615	WITHOUT_CLASSIFICATION	4.845715238498766E-6	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999992050713805	WITHOUT_CLASSIFICATION	7.949286194473545E-7	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999996913606958	WITHOUT_CLASSIFICATION	3.086393042477082E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998047003665	WITHOUT_CLASSIFICATION	1.9529963345654523E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998047003665	WITHOUT_CLASSIFICATION	1.9529963345654523E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999998560333675	WITHOUT_CLASSIFICATION	1.4396663250562798E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999998560333675	WITHOUT_CLASSIFICATION	1.4396663250562798E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999998560333675	WITHOUT_CLASSIFICATION	1.4396663250562798E-7	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999965570868168	WITHOUT_CLASSIFICATION	3.442913183092319E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999965570868168	WITHOUT_CLASSIFICATION	3.442913183092319E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999888298061069	WITHOUT_CLASSIFICATION	1.1170193893127048E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999888298061069	WITHOUT_CLASSIFICATION	1.1170193893127048E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999470637703942	WITHOUT_CLASSIFICATION	5.2936229605717187E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999925261728134	WITHOUT_CLASSIFICATION	7.473827186484493E-6	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999947727370013	WITHOUT_CLASSIFICATION	5.227262998666644E-6	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999947727370013	WITHOUT_CLASSIFICATION	5.227262998666644E-6	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999998163758097	WITHOUT_CLASSIFICATION	1.8362419029859894E-7	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999997913237977	WITHOUT_CLASSIFICATION	2.0867620229092596E-7	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999948751154601	WITHOUT_CLASSIFICATION	5.12488453977584E-6	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999994583930524	WITHOUT_CLASSIFICATION	5.416069477112127E-7	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999996177620281	WITHOUT_CLASSIFICATION	3.822379720019352E-7	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999999802606357	WITHOUT_CLASSIFICATION	1.9739364295073032E-8	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999950009686437	WITHOUT_CLASSIFICATION	4.9990313563545804E-6	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999994041880276	WITHOUT_CLASSIFICATION	5.958119725141372E-7	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999989535881835	WITHOUT_CLASSIFICATION	1.0464118165208115E-6	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999993390517343	WITHOUT_CLASSIFICATION	6.609482656668309E-7	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999998783012055	WITHOUT_CLASSIFICATION	1.2169879440775412E-7	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999992341204507	WITHOUT_CLASSIFICATION	7.658795493350877E-7	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999943792081905	WITHOUT_CLASSIFICATION	5.6207918095595E-6	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999981052632396	WITHOUT_CLASSIFICATION	1.8947367604051325E-6	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999997447083508	WITHOUT_CLASSIFICATION	2.552916490624574E-7	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999961050524758	WITHOUT_CLASSIFICATION	3.894947524153845E-6	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999902856210953	WITHOUT_CLASSIFICATION	9.71437890481506E-6	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999989207474835	WITHOUT_CLASSIFICATION	1.0792525164776136E-6	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999992739691982	WITHOUT_CLASSIFICATION	7.260308017944196E-7	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999864898233418	WITHOUT_CLASSIFICATION	1.3510176658103406E-5	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999988901487445	WITHOUT_CLASSIFICATION	1.1098512554956363E-6	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999983966546796	WITHOUT_CLASSIFICATION	1.603345320391888E-6	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999998498677094	WITHOUT_CLASSIFICATION	1.501322906031921E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999639928843	WITHOUT_CLASSIFICATION	3.6007115825161974E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999624086461	WITHOUT_CLASSIFICATION	3.7591353823440776E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999056892208	WITHOUT_CLASSIFICATION	9.431077920703569E-8	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998320308197	WITHOUT_CLASSIFICATION	1.6796918031205716E-7	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999204150909	WITHOUT_CLASSIFICATION	7.958490911025788E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999612881556	WITHOUT_CLASSIFICATION	3.871184450003567E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999595849152	WITHOUT_CLASSIFICATION	4.041508491409819E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998986049252	WITHOUT_CLASSIFICATION	1.0139507482571282E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999976403422	WITHOUT_CLASSIFICATION	2.359657802823946E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999753652218	WITHOUT_CLASSIFICATION	2.463477826087005E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999523684484	WITHOUT_CLASSIFICATION	4.763155160501819E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999753652218	WITHOUT_CLASSIFICATION	2.463477826087005E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999753652218	WITHOUT_CLASSIFICATION	2.463477826087005E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999753652218	WITHOUT_CLASSIFICATION	2.463477826087005E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999753652218	WITHOUT_CLASSIFICATION	2.463477826087005E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999753652218	WITHOUT_CLASSIFICATION	2.463477826087005E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999753652218	WITHOUT_CLASSIFICATION	2.463477826087005E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999523684484	WITHOUT_CLASSIFICATION	4.763155160501819E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999523684484	WITHOUT_CLASSIFICATION	4.763155160501819E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999523684484	WITHOUT_CLASSIFICATION	4.763155160501819E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999523684484	WITHOUT_CLASSIFICATION	4.763155160501819E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999523684484	WITHOUT_CLASSIFICATION	4.763155160501819E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999523684484	WITHOUT_CLASSIFICATION	4.763155160501819E-8	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999996435170142	WITHOUT_CLASSIFICATION	3.5648298578835416E-7	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999996992704098	WITHOUT_CLASSIFICATION	3.0072959028214754E-7	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999995230690328	WITHOUT_CLASSIFICATION	4.769309672456012E-7	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998618653639	WITHOUT_CLASSIFICATION	1.3813463612039416E-7	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999582248786	WITHOUT_CLASSIFICATION	4.177512139587738E-8	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998720295336	WITHOUT_CLASSIFICATION	1.2797046634820023E-7	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999989781241957	WITHOUT_CLASSIFICATION	1.0218758042888946E-6	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999686769233	WITHOUT_CLASSIFICATION	3.1323076614762186E-8	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999999581986166	WITHOUT_CLASSIFICATION	4.180138338523733E-8	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999987241480647	WITHOUT_CLASSIFICATION	1.2758519353469E-6	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999924344145932	WITHOUT_CLASSIFICATION	7.5655854068950434E-6	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999997293351461	WITHOUT_CLASSIFICATION	2.7066485389076186E-7	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999977773888732	WITHOUT_CLASSIFICATION	2.222611126832819E-6	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999995462722304	WITHOUT_CLASSIFICATION	4.5372776960515303E-7	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999998989492745	WITHOUT_CLASSIFICATION	1.0105072548414736E-7	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999995519851482	WITHOUT_CLASSIFICATION	4.480148517894042E-7	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999986229518975	WITHOUT_CLASSIFICATION	1.3770481025633374E-6	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999996121173093	WITHOUT_CLASSIFICATION	3.878826907255659E-7	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999992587319939	WITHOUT_CLASSIFICATION	7.412680061954009E-7	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999832475359	WITHOUT_CLASSIFICATION	1.675246404951619E-8	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999998156152188	WITHOUT_CLASSIFICATION	1.843847813408958E-7	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.999999364205408	WITHOUT_CLASSIFICATION	6.357945919556128E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999999472608596	WITHOUT_CLASSIFICATION	5.2739140297282E-8	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999986297894445	WITHOUT_CLASSIFICATION	1.3702105553939435E-6	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.999996337332927	WITHOUT_CLASSIFICATION	3.662667072977947E-6	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999997817516393	WITHOUT_CLASSIFICATION	2.1824836069521126E-7	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999797327745	WITHOUT_CLASSIFICATION	2.0267225420508925E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999996121461274	WITHOUT_CLASSIFICATION	3.878538724984225E-7	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999993872716921	WITHOUT_CLASSIFICATION	6.127283078400439E-7	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999997626697343	WITHOUT_CLASSIFICATION	2.3733026564772E-7	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.999999835560968	WITHOUT_CLASSIFICATION	1.6443903182067825E-7	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999780163495	WITHOUT_CLASSIFICATION	2.198365050474445E-8	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999998046380578	WITHOUT_CLASSIFICATION	1.9536194227105128E-7	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999996929062404	WITHOUT_CLASSIFICATION	3.070937596477733E-7	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999997109818817	WITHOUT_CLASSIFICATION	2.8901811832176344E-7	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999991649372268	WITHOUT_CLASSIFICATION	8.350627731899378E-7	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999997750642184	WITHOUT_CLASSIFICATION	2.249357815787336E-7	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.999999586997401	WITHOUT_CLASSIFICATION	4.130025990314968E-7	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999966354487	WITHOUT_CLASSIFICATION	3.3645512897379646E-9	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999297901369	WITHOUT_CLASSIFICATION	7.020986320591649E-8	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.999999439185838	WITHOUT_CLASSIFICATION	5.608141620148285E-7	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999994833767633	WITHOUT_CLASSIFICATION	5.166232367131603E-7	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999997019980662	WITHOUT_CLASSIFICATION	2.98001933860683E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999990099030021	WITHOUT_CLASSIFICATION	9.900969979509265E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999990099030021	WITHOUT_CLASSIFICATION	9.900969979509265E-7	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999991625162179	WITHOUT_CLASSIFICATION	8.374837820812657E-7	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999991625162179	WITHOUT_CLASSIFICATION	8.374837820812657E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999995749920645	WITHOUT_CLASSIFICATION	4.250079355133791E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999995749920645	WITHOUT_CLASSIFICATION	4.250079355133791E-7	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999997616593469	WITHOUT_CLASSIFICATION	2.3834065303955362E-7	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999998980005931	WITHOUT_CLASSIFICATION	1.0199940688102334E-7	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999994479250681	WITHOUT_CLASSIFICATION	5.520749319054287E-7	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.999999977196365	WITHOUT_CLASSIFICATION	2.2803634937232784E-8	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999981738742045	WITHOUT_CLASSIFICATION	1.826125795375542E-6	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.999999061723077	WITHOUT_CLASSIFICATION	9.382769231096687E-7	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999994333185178	WITHOUT_CLASSIFICATION	5.666814821960706E-7	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999637033642	WITHOUT_CLASSIFICATION	3.6296635741497125E-8	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.999997689052092	WITHOUT_CLASSIFICATION	2.3109479079792544E-6	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999998900488225	WITHOUT_CLASSIFICATION	1.0995117742757548E-7	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999984181656932	WITHOUT_CLASSIFICATION	1.5818343067048354E-6	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999999387396049	WITHOUT_CLASSIFICATION	6.126039505845457E-8	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999997931831304	WITHOUT_CLASSIFICATION	2.0681686969624368E-7	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999994057668871	WITHOUT_CLASSIFICATION	5.942331129014883E-7	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999926627484557	WITHOUT_CLASSIFICATION	7.337251544438693E-6	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999964852340826	WITHOUT_CLASSIFICATION	3.514765917415886E-6	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999868223939	WITHOUT_CLASSIFICATION	1.3177606059883632E-8	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999996645517979	WITHOUT_CLASSIFICATION	3.3544820208905984E-7	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999997881987281	WITHOUT_CLASSIFICATION	2.1180127196030487E-7	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.999993855378178	WITHOUT_CLASSIFICATION	6.144621822051469E-6	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999965568103046	WITHOUT_CLASSIFICATION	3.4431896953541575E-6	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999953871041661	WITHOUT_CLASSIFICATION	4.612895833884808E-6	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999959841068718	WITHOUT_CLASSIFICATION	4.015893128138997E-6	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999997268328185	WITHOUT_CLASSIFICATION	2.7316718156938507E-7	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999985568544775	WITHOUT_CLASSIFICATION	1.4431455225221687E-6	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999564735612	WITHOUT_CLASSIFICATION	4.352643881567872E-8	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999970136523985	WITHOUT_CLASSIFICATION	2.9863476015995895E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999993275608624	WITHOUT_CLASSIFICATION	6.724391375568359E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999993275608624	WITHOUT_CLASSIFICATION	6.724391375568359E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999993275608624	WITHOUT_CLASSIFICATION	6.724391375568359E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999438579649	WITHOUT_CLASSIFICATION	5.614203523284272E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999438579649	WITHOUT_CLASSIFICATION	5.614203523284272E-8	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999933390497666	WITHOUT_CLASSIFICATION	6.66095023332656E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999933390497666	WITHOUT_CLASSIFICATION	6.66095023332656E-6	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999996375374267	WITHOUT_CLASSIFICATION	3.6246257335220455E-7	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999861853180927	WITHOUT_CLASSIFICATION	1.3814681907191577E-5	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999994570607785	WITHOUT_CLASSIFICATION	5.429392214268184E-7	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999997453738533	WITHOUT_CLASSIFICATION	2.5462614677915527E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999993275608624	WITHOUT_CLASSIFICATION	6.724391375568359E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999993275608624	WITHOUT_CLASSIFICATION	6.724391375568359E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999993275608624	WITHOUT_CLASSIFICATION	6.724391375568359E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999438579649	WITHOUT_CLASSIFICATION	5.614203523284272E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999438579649	WITHOUT_CLASSIFICATION	5.614203523284272E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999438579649	WITHOUT_CLASSIFICATION	5.614203523284272E-8	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999933390497666	WITHOUT_CLASSIFICATION	6.66095023332656E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999933390497666	WITHOUT_CLASSIFICATION	6.66095023332656E-6	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999958771125669	WITHOUT_CLASSIFICATION	4.122887433141304E-6	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999054608765	WITHOUT_CLASSIFICATION	9.453912363585316E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999995304860682	WITHOUT_CLASSIFICATION	4.6951393185015627E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999995304860682	WITHOUT_CLASSIFICATION	4.6951393185015627E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999995304860682	WITHOUT_CLASSIFICATION	4.6951393185015627E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999995304860682	WITHOUT_CLASSIFICATION	4.6951393185015627E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999995304860682	WITHOUT_CLASSIFICATION	4.6951393185015627E-7	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999995426109823	WITHOUT_CLASSIFICATION	4.5738901762117386E-7	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999985301478406	WITHOUT_CLASSIFICATION	1.4698521594576755E-6	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999993152088282	WITHOUT_CLASSIFICATION	6.847911717129949E-7	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999928974695933	WITHOUT_CLASSIFICATION	7.102530406688711E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999990068588308	WITHOUT_CLASSIFICATION	9.931411692098628E-7	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999784395425445	WITHOUT_CLASSIFICATION	2.1560457455472567E-5	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.999993056680697	WITHOUT_CLASSIFICATION	6.943319302926497E-6	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999995567162012	WITHOUT_CLASSIFICATION	4.4328379883903764E-7	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999994616016868	WITHOUT_CLASSIFICATION	5.3839831310916E-7	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999959222901617	WITHOUT_CLASSIFICATION	4.077709838293984E-6	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999960058867325	WITHOUT_CLASSIFICATION	3.99411326753694E-6	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999964574810993	WITHOUT_CLASSIFICATION	3.5425189006908133E-6	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999985213222963	WITHOUT_CLASSIFICATION	1.4786777037691957E-6	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999995462683267	WITHOUT_CLASSIFICATION	4.537316732549863E-7	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999973284360667	WITHOUT_CLASSIFICATION	2.6715639332763118E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999379417394378	WITHOUT_CLASSIFICATION	6.205826056219582E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999379417394378	WITHOUT_CLASSIFICATION	6.205826056219582E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999379417394378	WITHOUT_CLASSIFICATION	6.205826056219582E-5	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999858087186831	WITHOUT_CLASSIFICATION	1.4191281316909844E-5	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999858073740467	WITHOUT_CLASSIFICATION	1.4192625953175863E-5	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999965213349833	WITHOUT_CLASSIFICATION	3.4786650166953395E-6	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999806502586	WITHOUT_CLASSIFICATION	1.934974131128261E-8	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999995986858173	WITHOUT_CLASSIFICATION	4.013141827061083E-7	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999990833454718	WITHOUT_CLASSIFICATION	9.166545281196168E-7	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999988771684682	WITHOUT_CLASSIFICATION	1.1228315317987425E-6	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.999999556308335	WITHOUT_CLASSIFICATION	4.436916649507089E-7	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999988432260345	WITHOUT_CLASSIFICATION	1.1567739654814774E-6	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999996553074886	WITHOUT_CLASSIFICATION	3.4469251139353786E-7	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999995131788776	WITHOUT_CLASSIFICATION	4.868211224225857E-7	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999998686063402	WITHOUT_CLASSIFICATION	1.3139365990062416E-7	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999993809173585	WITHOUT_CLASSIFICATION	6.19082641470185E-7	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999992454291625	WITHOUT_CLASSIFICATION	7.545708376061331E-7	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999991069797067	WITHOUT_CLASSIFICATION	8.93020293203654E-7	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999992595730546	WITHOUT_CLASSIFICATION	7.404269454074486E-7	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999993533472277	WITHOUT_CLASSIFICATION	6.466527723450331E-7	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999997374383199	WITHOUT_CLASSIFICATION	2.6256168005990677E-7	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999997038727816	WITHOUT_CLASSIFICATION	2.9612721844953564E-7	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999985075499693	WITHOUT_CLASSIFICATION	1.4924500307272099E-6	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999995452496327	WITHOUT_CLASSIFICATION	4.547503671798196E-7	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999992036280065	WITHOUT_CLASSIFICATION	7.963719935069947E-7	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.999998313248515	WITHOUT_CLASSIFICATION	1.6867514850025273E-6	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999994962413941	WITHOUT_CLASSIFICATION	5.037586059750553E-7	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999987120955796	WITHOUT_CLASSIFICATION	1.2879044204502337E-6	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999984202106671	WITHOUT_CLASSIFICATION	1.5797893329509865E-6	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999990517348557	WITHOUT_CLASSIFICATION	9.482651441970232E-7	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999988268355319	WITHOUT_CLASSIFICATION	1.1731644680946793E-6	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999980889958983	WITHOUT_CLASSIFICATION	1.9110041017102515E-6	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9999874625652783	WITHOUT_CLASSIFICATION	1.2537434721808268E-5	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9999855553656942	WITHOUT_CLASSIFICATION	1.4444634305737208E-5	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9999787464411917	WITHOUT_CLASSIFICATION	2.1253558808365898E-5	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.999986973614801	WITHOUT_CLASSIFICATION	1.3026385198901957E-5	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9999834732974185	WITHOUT_CLASSIFICATION	1.6526702581406072E-5	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.999985941255329	WITHOUT_CLASSIFICATION	1.4058744671038532E-5	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.9999858079139624	WITHOUT_CLASSIFICATION	1.4192086037610046E-5	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999991395524802	WITHOUT_CLASSIFICATION	8.604475198265854E-7	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999998242055301	WITHOUT_CLASSIFICATION	1.7579446979260483E-7	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999721796077571	WITHOUT_CLASSIFICATION	2.782039224295822E-5	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9979510474397117	WITHOUT_CLASSIFICATION	0.0020489525602881797	TEST
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999917411061208	WITHOUT_CLASSIFICATION	8.258893879333553E-6	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999991927918768	WITHOUT_CLASSIFICATION	8.072081231542991E-7	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999938796089276	WITHOUT_CLASSIFICATION	6.12039107245112E-6	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999997901599027	WITHOUT_CLASSIFICATION	2.0984009742422535E-7	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999504231154037	WITHOUT_CLASSIFICATION	4.9576884596368914E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999981838041833	WITHOUT_CLASSIFICATION	1.8161958168038088E-6	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999656220992723	WITHOUT_CLASSIFICATION	3.4377900727623E-5	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999656220992723	WITHOUT_CLASSIFICATION	3.4377900727623E-5	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999891232634185	WITHOUT_CLASSIFICATION	1.0876736581395323E-5	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999999704565212	WITHOUT_CLASSIFICATION	2.954347879378379E-8	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999987968372952	WITHOUT_CLASSIFICATION	1.203162704841735E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9953093831178528	WITHOUT_CLASSIFICATION	0.004690616882147256	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999913529796685	WITHOUT_CLASSIFICATION	8.647020331550281E-6	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999981432759151	WITHOUT_CLASSIFICATION	1.8567240849979258E-6	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999991399335355	WITHOUT_CLASSIFICATION	8.600664645869515E-7	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997244746051	WITHOUT_CLASSIFICATION	2.7552539495843594E-7	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999976618035099	WITHOUT_CLASSIFICATION	2.3381964901504632E-6	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999980576300156	WITHOUT_CLASSIFICATION	1.9423699844970027E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999999826532827	WITHOUT_CLASSIFICATION	1.7346717301137025E-7	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999999826532827	WITHOUT_CLASSIFICATION	1.7346717301137025E-7	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999999826532827	WITHOUT_CLASSIFICATION	1.7346717301137025E-7	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999999826532827	WITHOUT_CLASSIFICATION	1.7346717301137025E-7	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999951078986689	WITHOUT_CLASSIFICATION	4.892101331128774E-6	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999952817781477	WITHOUT_CLASSIFICATION	4.718221852359051E-6	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999739712459496	WITHOUT_CLASSIFICATION	2.602875405053827E-5	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999980400666012	WITHOUT_CLASSIFICATION	1.959933398805792E-6	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999871107711966	WITHOUT_CLASSIFICATION	1.288922880332289E-5	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999993164320176	WITHOUT_CLASSIFICATION	6.835679823973994E-7	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999999020586942	WITHOUT_CLASSIFICATION	9.794130594205955E-8	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999999866803704	WITHOUT_CLASSIFICATION	1.331962959605772E-7	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999999866803704	WITHOUT_CLASSIFICATION	1.331962959605772E-7	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999993545802671	WITHOUT_CLASSIFICATION	6.454197329660577E-7	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999987117779943	WITHOUT_CLASSIFICATION	1.2882220057442539E-6	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999995381652175	WITHOUT_CLASSIFICATION	4.618347824998877E-6	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999535447487	WITHOUT_CLASSIFICATION	4.6455251256746855E-8	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999535447487	WITHOUT_CLASSIFICATION	4.6455251256746855E-8	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999998548513507	WITHOUT_CLASSIFICATION	1.451486492626887E-7	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999989252455971	WITHOUT_CLASSIFICATION	1.0747544029074545E-5	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999989252455971	WITHOUT_CLASSIFICATION	1.0747544029074545E-5	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999981882879195	WITHOUT_CLASSIFICATION	1.8117120805015603E-6	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999951752567465	WITHOUT_CLASSIFICATION	4.824743253484884E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.999999992159344	WITHOUT_CLASSIFICATION	7.840655982289206E-9	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999952549618207	WITHOUT_CLASSIFICATION	4.745038179316677E-6	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999956355100795	WITHOUT_CLASSIFICATION	4.364489920433959E-6	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999037174856	WITHOUT_CLASSIFICATION	9.628251443018588E-8	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999899772977887	WITHOUT_CLASSIFICATION	1.0022702211349962E-5	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9999955416271276	WITHOUT_CLASSIFICATION	4.4583728725408985E-6	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999998912859777	WITHOUT_CLASSIFICATION	1.0871402239086668E-7	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999989553494923	WITHOUT_CLASSIFICATION	1.0446505077313516E-6	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999959875715485	WITHOUT_CLASSIFICATION	4.012428451447068E-6	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.999999500605721	WITHOUT_CLASSIFICATION	4.993942789822839E-7	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9988451464399166	WITHOUT_CLASSIFICATION	0.0011548535600832811	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.998455578558275	WITHOUT_CLASSIFICATION	0.001544421441724922	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999937127433851	WITHOUT_CLASSIFICATION	6.287256614913379E-6	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999995683224702	WITHOUT_CLASSIFICATION	4.3167752983478845E-7	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999972611858504	WITHOUT_CLASSIFICATION	2.7388141496840637E-6	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999999107556391	WITHOUT_CLASSIFICATION	8.924436094751505E-8	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999990251317482	WITHOUT_CLASSIFICATION	9.748682517384362E-7	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999913917329466	WITHOUT_CLASSIFICATION	8.608267053423193E-6	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999960636245911	WITHOUT_CLASSIFICATION	3.936375408848366E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.999999954111599	WITHOUT_CLASSIFICATION	4.5888400999550556E-8	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999999452411001	WITHOUT_CLASSIFICATION	5.475889983116479E-8	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999623500669521	WITHOUT_CLASSIFICATION	3.764993304790607E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999178346446	WITHOUT_CLASSIFICATION	8.216535545673688E-8	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999883366375419	WITHOUT_CLASSIFICATION	1.166336245797129E-5	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.999999819505839	WITHOUT_CLASSIFICATION	1.8049416093951478E-7	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999866024674026	WITHOUT_CLASSIFICATION	1.3397532597483659E-5	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999787288762	WITHOUT_CLASSIFICATION	2.1271123756710233E-8	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.999998367079823	WITHOUT_CLASSIFICATION	1.6329201768537167E-6	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999922864677155	WITHOUT_CLASSIFICATION	7.713532284562674E-6	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999967599718568	WITHOUT_CLASSIFICATION	3.240028143193507E-6	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9998125463516435	WITHOUT_CLASSIFICATION	1.8745364835654415E-4	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.999995443521219	WITHOUT_CLASSIFICATION	4.556478780926758E-6	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999999699444371	WITHOUT_CLASSIFICATION	3.005556296103947E-8	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999902714251413	WITHOUT_CLASSIFICATION	9.728574858712926E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999980235421209	WITHOUT_CLASSIFICATION	1.976457879178484E-6	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999994070310583	WITHOUT_CLASSIFICATION	5.9296894177071E-7	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999975651464765	WITHOUT_CLASSIFICATION	2.4348535234885583E-6	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999902714251413	WITHOUT_CLASSIFICATION	9.728574858712926E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999980235421209	WITHOUT_CLASSIFICATION	1.976457879178484E-6	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999993330283546	WITHOUT_CLASSIFICATION	6.669716452524385E-7	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999931259676934	WITHOUT_CLASSIFICATION	6.874032306497644E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999931259676934	WITHOUT_CLASSIFICATION	6.874032306497644E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999925486783799	WITHOUT_CLASSIFICATION	7.451321620009377E-6	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999999896010392	WITHOUT_CLASSIFICATION	1.0398960802772208E-7	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999975192621362	WITHOUT_CLASSIFICATION	2.480737863732053E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999984594297401	WITHOUT_CLASSIFICATION	1.5405702600244856E-6	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999960363978898	WITHOUT_CLASSIFICATION	3.963602110153685E-6	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999957893390665	WITHOUT_CLASSIFICATION	4.21066093349262E-6	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999934925564671	WITHOUT_CLASSIFICATION	6.507443532920209E-6	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.999999696495364	WITHOUT_CLASSIFICATION	3.0350463593611484E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998404439912	WITHOUT_CLASSIFICATION	1.5955600876421105E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999890510006391	WITHOUT_CLASSIFICATION	1.0948999360976032E-5	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999995104465558	WITHOUT_CLASSIFICATION	4.895534441468673E-7	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999972466234319	WITHOUT_CLASSIFICATION	2.753376567989085E-6	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999957485160358	WITHOUT_CLASSIFICATION	4.2514839642412E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999995122986175	WITHOUT_CLASSIFICATION	4.877013825572421E-7	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999995122986175	WITHOUT_CLASSIFICATION	4.877013825572421E-7	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999972385269628	WITHOUT_CLASSIFICATION	2.7614730372135494E-6	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999972385269628	WITHOUT_CLASSIFICATION	2.7614730372135494E-6	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999977837430764	WITHOUT_CLASSIFICATION	2.2162569236401926E-6	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999996990764871	WITHOUT_CLASSIFICATION	3.0092351286374867E-7	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999988492275724	WITHOUT_CLASSIFICATION	1.1507724276347333E-6	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999984219648905	WITHOUT_CLASSIFICATION	1.5780351094830705E-6	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.999870589872998	WITHOUT_CLASSIFICATION	1.2941012700197344E-4	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999916127881061	WITHOUT_CLASSIFICATION	8.38721189386435E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999975192621362	WITHOUT_CLASSIFICATION	2.480737863732053E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999984594297401	WITHOUT_CLASSIFICATION	1.5405702600244856E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998404439912	WITHOUT_CLASSIFICATION	1.5955600876421105E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999890510006391	WITHOUT_CLASSIFICATION	1.0948999360976032E-5	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999981273348918	WITHOUT_CLASSIFICATION	1.872665108265621E-6	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999993988027371	WITHOUT_CLASSIFICATION	6.011972628013223E-7	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999907335878431	WITHOUT_CLASSIFICATION	9.266412157042156E-6	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999973497820955	WITHOUT_CLASSIFICATION	2.6502179044128017E-6	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999991660897888	WITHOUT_CLASSIFICATION	8.339102113569275E-7	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999951736302596	WITHOUT_CLASSIFICATION	4.8263697403894615E-6	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999974354722857	WITHOUT_CLASSIFICATION	2.564527714379412E-6	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999913570012114	WITHOUT_CLASSIFICATION	8.642998788636063E-6	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999953000150624	WITHOUT_CLASSIFICATION	4.699984937633141E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.99999906755725	WITHOUT_CLASSIFICATION	9.324427499344069E-7	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999998385034253	WITHOUT_CLASSIFICATION	1.6149657465909854E-7	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9985843948205836	WITHOUT_CLASSIFICATION	0.0014156051794163415	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999992780303925	WITHOUT_CLASSIFICATION	7.219696075705171E-7	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999983370827416	WITHOUT_CLASSIFICATION	1.6629172583726652E-6	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.999999424279797	WITHOUT_CLASSIFICATION	5.757202028268717E-7	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999987852971367	WITHOUT_CLASSIFICATION	1.2147028632712203E-6	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999997404885722	WITHOUT_CLASSIFICATION	2.5951142782605386E-7	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999953381667401	WITHOUT_CLASSIFICATION	4.661833259891968E-6	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999987972503385	WITHOUT_CLASSIFICATION	1.2027496615041377E-6	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999983767012366	WITHOUT_CLASSIFICATION	1.6232987633254549E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999983496096355	WITHOUT_CLASSIFICATION	1.650390364415969E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999983496096355	WITHOUT_CLASSIFICATION	1.650390364415969E-6	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999980128687896	WITHOUT_CLASSIFICATION	1.9871312103027185E-6	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999929021324266	WITHOUT_CLASSIFICATION	7.097867573287068E-6	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999963113464984	WITHOUT_CLASSIFICATION	3.6886535016576518E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999956763635647	WITHOUT_CLASSIFICATION	4.323636435318798E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999956763635647	WITHOUT_CLASSIFICATION	4.323636435318798E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999907335878431	WITHOUT_CLASSIFICATION	9.266412157042156E-6	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999695427721798	WITHOUT_CLASSIFICATION	3.045722782016494E-5	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999892721288972	WITHOUT_CLASSIFICATION	1.0727871102754692E-5	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999931941155528	WITHOUT_CLASSIFICATION	6.805884447168345E-6	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999952202211727	WITHOUT_CLASSIFICATION	4.7797788272620745E-6	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999989508954306	WITHOUT_CLASSIFICATION	1.0491045694988823E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999667210280928	WITHOUT_CLASSIFICATION	3.327897190712772E-5	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999971788729145	WITHOUT_CLASSIFICATION	2.8211270855448534E-6	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999989064858562	WITHOUT_CLASSIFICATION	1.0935141437935493E-6	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999993007394354	WITHOUT_CLASSIFICATION	6.992605644761813E-7	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999959300048167	WITHOUT_CLASSIFICATION	4.069995183298702E-6	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999982397272349	WITHOUT_CLASSIFICATION	1.7602727650888344E-6	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999995173658562	WITHOUT_CLASSIFICATION	4.826341437236189E-7	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999998590219128	WITHOUT_CLASSIFICATION	1.4097808721874346E-7	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999991904548853	WITHOUT_CLASSIFICATION	8.095451146696911E-7	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999997818373991	WITHOUT_CLASSIFICATION	2.1816260093602996E-7	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999921808757906	WITHOUT_CLASSIFICATION	7.819124209350783E-6	TEST
// states	WITHOUT_CLASSIFICATION	0.9999939293551439	WITHOUT_CLASSIFICATION	6.0706448561403415E-6	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999990302242199	WITHOUT_CLASSIFICATION	9.697757801348297E-7	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999507081029	WITHOUT_CLASSIFICATION	4.929189711868634E-8	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999998691743512	WITHOUT_CLASSIFICATION	1.3082564873285482E-7	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999966900989997	WITHOUT_CLASSIFICATION	3.3099010003291126E-6	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999989438865421	WITHOUT_CLASSIFICATION	1.0561134578306991E-6	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999983242885309	WITHOUT_CLASSIFICATION	1.6757114690718742E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999993571650446	WITHOUT_CLASSIFICATION	6.428349553287888E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999989711460129	WITHOUT_CLASSIFICATION	1.0288539870777912E-6	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999997947380694	WITHOUT_CLASSIFICATION	2.0526193070789896E-7	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999985893554829	WITHOUT_CLASSIFICATION	1.41064451704895E-6	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999194879435	WITHOUT_CLASSIFICATION	8.051205642755947E-8	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999977363070032	WITHOUT_CLASSIFICATION	2.2636929968527932E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996746284977	WITHOUT_CLASSIFICATION	3.2537150239606943E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996746284977	WITHOUT_CLASSIFICATION	3.2537150239606943E-7	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999994378639349	WITHOUT_CLASSIFICATION	5.621360652116291E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999995829761277	WITHOUT_CLASSIFICATION	4.1702387228213585E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999995829761277	WITHOUT_CLASSIFICATION	4.1702387228213585E-7	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999904747518	WITHOUT_CLASSIFICATION	9.525248199266075E-8	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999904747518	WITHOUT_CLASSIFICATION	9.525248199266075E-8	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999973429671185	WITHOUT_CLASSIFICATION	2.657032881543157E-6	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999994833619662	WITHOUT_CLASSIFICATION	5.166380337466463E-7	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999967224502	WITHOUT_CLASSIFICATION	3.2775497991031715E-8	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999980297946452	WITHOUT_CLASSIFICATION	1.970205354654038E-6	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999995326293366	WITHOUT_CLASSIFICATION	4.673706633643392E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999970096145199	WITHOUT_CLASSIFICATION	2.9903854801830947E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999970096145199	WITHOUT_CLASSIFICATION	2.9903854801830947E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999993571650446	WITHOUT_CLASSIFICATION	6.428349553287888E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999993571650446	WITHOUT_CLASSIFICATION	6.428349553287888E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999993571650446	WITHOUT_CLASSIFICATION	6.428349553287888E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999989711460129	WITHOUT_CLASSIFICATION	1.0288539870777912E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996746284977	WITHOUT_CLASSIFICATION	3.2537150239606943E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996746284977	WITHOUT_CLASSIFICATION	3.2537150239606943E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996746284977	WITHOUT_CLASSIFICATION	3.2537150239606943E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999973429671185	WITHOUT_CLASSIFICATION	2.657032881543157E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999973429671185	WITHOUT_CLASSIFICATION	2.657032881543157E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999973429671185	WITHOUT_CLASSIFICATION	2.657032881543157E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999980297946452	WITHOUT_CLASSIFICATION	1.970205354654038E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999980297946452	WITHOUT_CLASSIFICATION	1.970205354654038E-6	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999992665970296	WITHOUT_CLASSIFICATION	7.334029703798819E-7	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999999466690178	WITHOUT_CLASSIFICATION	5.333098214941206E-8	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999993597172951	WITHOUT_CLASSIFICATION	6.402827048927198E-7	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999889379029533	WITHOUT_CLASSIFICATION	1.1062097046718897E-5	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999995050608861	WITHOUT_CLASSIFICATION	4.949391139321867E-7	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999960884160594	WITHOUT_CLASSIFICATION	3.911583940628745E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999960884160594	WITHOUT_CLASSIFICATION	3.911583940628745E-6	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999994718356024	WITHOUT_CLASSIFICATION	5.281643976389134E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999667210280928	WITHOUT_CLASSIFICATION	3.327897190712772E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999667210280928	WITHOUT_CLASSIFICATION	3.327897190712772E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999667210280928	WITHOUT_CLASSIFICATION	3.327897190712772E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999667210280928	WITHOUT_CLASSIFICATION	3.327897190712772E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999667210280928	WITHOUT_CLASSIFICATION	3.327897190712772E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999949321769585	WITHOUT_CLASSIFICATION	5.067823041459272E-6	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999949321769585	WITHOUT_CLASSIFICATION	5.067823041459272E-6	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999949321769585	WITHOUT_CLASSIFICATION	5.067823041459272E-6	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999987425462598	WITHOUT_CLASSIFICATION	1.2574537402185382E-6	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999962489716081	WITHOUT_CLASSIFICATION	3.751028391837246E-6	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999989711460129	WITHOUT_CLASSIFICATION	1.0288539870777912E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999973429671185	WITHOUT_CLASSIFICATION	2.657032881543157E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999973429671185	WITHOUT_CLASSIFICATION	2.657032881543157E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999667210280928	WITHOUT_CLASSIFICATION	3.327897190712772E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999667210280928	WITHOUT_CLASSIFICATION	3.327897190712772E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999949321769585	WITHOUT_CLASSIFICATION	5.067823041459272E-6	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999994718356024	WITHOUT_CLASSIFICATION	5.281643976389134E-7	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999974196313012	WITHOUT_CLASSIFICATION	2.5803686987684656E-6	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.999998312399927	WITHOUT_CLASSIFICATION	1.6876000730795105E-6	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999996887472633	WITHOUT_CLASSIFICATION	3.11252736688398E-7	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999997735430087	WITHOUT_CLASSIFICATION	2.2645699124115332E-7	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999992032335021	WITHOUT_CLASSIFICATION	7.967664977819544E-7	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999995186063153	WITHOUT_CLASSIFICATION	4.813936847877826E-7	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999770056030216	WITHOUT_CLASSIFICATION	2.2994396978346477E-5	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999995796237345	WITHOUT_CLASSIFICATION	4.203762654632966E-7	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999996064522229	WITHOUT_CLASSIFICATION	3.935477771423008E-7	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.999999517817197	WITHOUT_CLASSIFICATION	4.821828030946921E-7	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999992232220677	WITHOUT_CLASSIFICATION	7.767779324518504E-7	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999966358555824	WITHOUT_CLASSIFICATION	3.364144417657667E-6	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999990223860582	WITHOUT_CLASSIFICATION	9.776139418367193E-7	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999982224944505	WITHOUT_CLASSIFICATION	1.77750554957029E-6	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999994104676502	WITHOUT_CLASSIFICATION	5.895323498127648E-7	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999995806548836	WITHOUT_CLASSIFICATION	4.1934511645875524E-7	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999999157617518	WITHOUT_CLASSIFICATION	8.423824815522443E-8	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999939101215138	WITHOUT_CLASSIFICATION	6.0898784860799845E-6	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999803313930301	WITHOUT_CLASSIFICATION	1.966860696995572E-5	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999998747727498	WITHOUT_CLASSIFICATION	1.2522725015009995E-7	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999992545333636	WITHOUT_CLASSIFICATION	7.454666364016054E-7	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999997974150496	WITHOUT_CLASSIFICATION	2.0258495028600254E-7	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999997945218353	WITHOUT_CLASSIFICATION	2.0547816467833058E-7	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999995426070692	WITHOUT_CLASSIFICATION	4.573929307157367E-7	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999985305318668	WITHOUT_CLASSIFICATION	1.469468133179914E-6	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.999989458122465	WITHOUT_CLASSIFICATION	1.0541877534982057E-5	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999993030124827	WITHOUT_CLASSIFICATION	6.969875173000118E-7	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999996053531551	WITHOUT_CLASSIFICATION	3.94646844940819E-7	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999984949681443	WITHOUT_CLASSIFICATION	1.5050318556791485E-6	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999999272566772	WITHOUT_CLASSIFICATION	7.274332284772763E-8	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.999999862623109	WITHOUT_CLASSIFICATION	1.373768909625591E-7	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999429708184	WITHOUT_CLASSIFICATION	5.702918161390429E-8	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999997591693289	WITHOUT_CLASSIFICATION	2.4083067109212417E-7	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999997812555997	WITHOUT_CLASSIFICATION	2.1874440037823778E-7	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999974196313012	WITHOUT_CLASSIFICATION	2.5803686987684656E-6	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999998655624719	WITHOUT_CLASSIFICATION	1.344375281164234E-7	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999984445389888	WITHOUT_CLASSIFICATION	1.5554610111846747E-6	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999989833141009	WITHOUT_CLASSIFICATION	1.0166858991161527E-6	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999995974103827	WITHOUT_CLASSIFICATION	4.0258961723055744E-7	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999995974103827	WITHOUT_CLASSIFICATION	4.0258961723055744E-7	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.999996157920537	WITHOUT_CLASSIFICATION	3.842079462945366E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.999996157920537	WITHOUT_CLASSIFICATION	3.842079462945366E-6	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999981727920293	WITHOUT_CLASSIFICATION	1.8272079706368042E-6	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999999438301583	WITHOUT_CLASSIFICATION	5.616984172336892E-8	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999983921988387	WITHOUT_CLASSIFICATION	1.6078011612950613E-6	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999987440890474	WITHOUT_CLASSIFICATION	1.2559109525564069E-6	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999996268449496	WITHOUT_CLASSIFICATION	3.731550503697007E-7	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999994135517054	WITHOUT_CLASSIFICATION	5.86448294647796E-7	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.99999825740078	WITHOUT_CLASSIFICATION	1.7425992199830297E-6	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999999973166186	WITHOUT_CLASSIFICATION	2.6833814648926234E-9	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.999999992902666	WITHOUT_CLASSIFICATION	7.097334075848775E-9	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999998828017304	WITHOUT_CLASSIFICATION	1.1719826964344185E-7	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999706766873	WITHOUT_CLASSIFICATION	2.932331256704902E-8	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999910610908904	WITHOUT_CLASSIFICATION	8.93890910967049E-6	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999910610908904	WITHOUT_CLASSIFICATION	8.93890910967049E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999997808984731	WITHOUT_CLASSIFICATION	2.191015268501662E-7	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999990483902258	WITHOUT_CLASSIFICATION	9.516097741838729E-7	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999998329937538	WITHOUT_CLASSIFICATION	1.6700624620746193E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999998329937538	WITHOUT_CLASSIFICATION	1.6700624620746193E-6	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999819114380115	WITHOUT_CLASSIFICATION	1.8088561988448155E-5	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999998160407392	WITHOUT_CLASSIFICATION	1.839592607957152E-7	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999971229837866	WITHOUT_CLASSIFICATION	2.877016213323334E-6	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999987732393063	WITHOUT_CLASSIFICATION	1.2267606936259157E-6	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999970284195414	WITHOUT_CLASSIFICATION	2.971580458577673E-6	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999997338071998	WITHOUT_CLASSIFICATION	2.6619280033318657E-7	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.99999892916122	WITHOUT_CLASSIFICATION	1.0708387799389629E-6	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999998095457121	WITHOUT_CLASSIFICATION	1.9045428782536105E-7	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999989341015816	WITHOUT_CLASSIFICATION	1.0658984185107082E-6	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999968584923947	WITHOUT_CLASSIFICATION	3.1415076052133255E-6	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999994075845084	WITHOUT_CLASSIFICATION	5.924154915405321E-7	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999954503000645	WITHOUT_CLASSIFICATION	4.5496999355215725E-6	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999981588860193	WITHOUT_CLASSIFICATION	1.8411139807135867E-6	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999975768800445	WITHOUT_CLASSIFICATION	2.423119955515754E-6	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999998697187303	WITHOUT_CLASSIFICATION	1.302812696544252E-7	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999996758632699	WITHOUT_CLASSIFICATION	3.2413673006284226E-7	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999975390801484	WITHOUT_CLASSIFICATION	2.4609198515765602E-6	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999997151568881	WITHOUT_CLASSIFICATION	2.848431118447938E-7	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999342003386109	WITHOUT_CLASSIFICATION	6.579966138919458E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.99999974054399	WITHOUT_CLASSIFICATION	2.5945601006499914E-7	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9977612350019264	WITHOUT_CLASSIFICATION	0.002238764998073611	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999989875546837	WITHOUT_CLASSIFICATION	1.0124453162532934E-6	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999996692504813	WITHOUT_CLASSIFICATION	3.307495187092881E-7	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999988183140684	WITHOUT_CLASSIFICATION	1.1816859314679255E-6	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999991283212079	WITHOUT_CLASSIFICATION	8.716787922306313E-7	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999997669998508	WITHOUT_CLASSIFICATION	2.3300014919756572E-7	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999993137195992	WITHOUT_CLASSIFICATION	6.862804007982651E-7	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999970785992071	WITHOUT_CLASSIFICATION	2.9214007929770318E-6	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999974819699209	WITHOUT_CLASSIFICATION	2.518030079104662E-6	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999944911220571	WITHOUT_CLASSIFICATION	5.508877942846479E-6	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999937905607339	WITHOUT_CLASSIFICATION	6.2094392661175454E-6	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999919865196125	WITHOUT_CLASSIFICATION	8.013480387476537E-6	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999144089317	WITHOUT_CLASSIFICATION	8.55910683743082E-8	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.999999905294403	WITHOUT_CLASSIFICATION	9.47055970605577E-8	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.999999905294403	WITHOUT_CLASSIFICATION	9.47055970605577E-8	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999998336461983	WITHOUT_CLASSIFICATION	1.663538018649327E-7	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999994576824432	WITHOUT_CLASSIFICATION	5.423175567340221E-7	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999375544458292	WITHOUT_CLASSIFICATION	6.244555417076783E-5	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999961264420478	WITHOUT_CLASSIFICATION	3.873557952125848E-6	TEST
// Block	WITHOUT_CLASSIFICATION	0.999996789048289	WITHOUT_CLASSIFICATION	3.2109517109726435E-6	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.999999504452685	WITHOUT_CLASSIFICATION	4.955473149816445E-7	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999838501637961	WITHOUT_CLASSIFICATION	1.614983620390336E-5	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999910998222722	WITHOUT_CLASSIFICATION	8.9001777278356E-6	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.999996266467901	WITHOUT_CLASSIFICATION	3.733532099030751E-6	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999859698491446	WITHOUT_CLASSIFICATION	1.4030150855339738E-5	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.999999978781386	WITHOUT_CLASSIFICATION	2.1218614064787587E-8	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999971468719465	WITHOUT_CLASSIFICATION	2.853128053453863E-6	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999709673338923	WITHOUT_CLASSIFICATION	2.9032666107616194E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999983092607742	WITHOUT_CLASSIFICATION	1.6907392259191966E-6	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999993183676142	WITHOUT_CLASSIFICATION	6.816323858550621E-7	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999987023101868	WITHOUT_CLASSIFICATION	1.297689813181514E-6	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999999181571585	WITHOUT_CLASSIFICATION	8.184284158498429E-8	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999990869921853	WITHOUT_CLASSIFICATION	9.130078147946892E-7	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999990954507025	WITHOUT_CLASSIFICATION	9.045492975359675E-7	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999952237269761	WITHOUT_CLASSIFICATION	4.776273023931538E-6	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.999999876429827	WITHOUT_CLASSIFICATION	1.2357017302416398E-7	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999944506853992	WITHOUT_CLASSIFICATION	5.549314600868404E-6	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999994752593218	WITHOUT_CLASSIFICATION	5.247406781935084E-7	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999999629675492	WITHOUT_CLASSIFICATION	3.703245073106029E-8	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999985056494786	WITHOUT_CLASSIFICATION	1.4943505214628468E-6	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999998228726473	WITHOUT_CLASSIFICATION	1.7712735254793868E-7	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999221913746	WITHOUT_CLASSIFICATION	7.780862542845189E-8	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999984316379468	WITHOUT_CLASSIFICATION	1.5683620531940904E-6	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999993965674744	WITHOUT_CLASSIFICATION	6.034325255870712E-7	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999998806855784	WITHOUT_CLASSIFICATION	1.1931442154260216E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9996731983814438	WITHOUT_CLASSIFICATION	3.26801618556238E-4	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9998291981216316	WITHOUT_CLASSIFICATION	1.7080187836837025E-4	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999976320750201	WITHOUT_CLASSIFICATION	2.3679249798801353E-6	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999976284477223	WITHOUT_CLASSIFICATION	2.371552277638304E-6	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999990430925002	WITHOUT_CLASSIFICATION	9.569074997148692E-7	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9998990581265798	WITHOUT_CLASSIFICATION	1.0094187342014137E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999977441463925	WITHOUT_CLASSIFICATION	2.2558536074079643E-6	TEST
// value equality	WITHOUT_CLASSIFICATION	0.999998745841614	WITHOUT_CLASSIFICATION	1.2541583860374628E-6	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999997316891198	WITHOUT_CLASSIFICATION	2.6831088025124137E-7	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999992522788643	WITHOUT_CLASSIFICATION	7.477211356394738E-7	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999981249657012	WITHOUT_CLASSIFICATION	1.8750342988609185E-6	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999957516844005	WITHOUT_CLASSIFICATION	4.248315599577173E-6	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999957516844005	WITHOUT_CLASSIFICATION	4.248315599577173E-6	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999977818311323	WITHOUT_CLASSIFICATION	2.218168867750325E-6	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999991706170885	WITHOUT_CLASSIFICATION	8.293829114753889E-7	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999961808575597	WITHOUT_CLASSIFICATION	3.819142440233578E-6	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.999992314385007	WITHOUT_CLASSIFICATION	7.685614992928438E-6	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.999998099684388	WITHOUT_CLASSIFICATION	1.9003156119549524E-6	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999998647367132	WITHOUT_CLASSIFICATION	1.3526328679790603E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999790347564	WITHOUT_CLASSIFICATION	2.0965243593583257E-7	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999996231833106	WITHOUT_CLASSIFICATION	3.768166894068196E-7	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999996663986193	WITHOUT_CLASSIFICATION	3.336013807607219E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999832361575	WITHOUT_CLASSIFICATION	1.6763842489988578E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999959474811408	WITHOUT_CLASSIFICATION	4.0525188592103315E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999996941009458	WITHOUT_CLASSIFICATION	3.0589905420987403E-7	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999997720555464	WITHOUT_CLASSIFICATION	2.2794445362882656E-7	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999998153424071	WITHOUT_CLASSIFICATION	1.8465759289749887E-7	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999997951746592	WITHOUT_CLASSIFICATION	2.0482534082865318E-7	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999472412404992	WITHOUT_CLASSIFICATION	5.275875950082573E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999735767664	WITHOUT_CLASSIFICATION	2.642323354265913E-8	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999918852453707	WITHOUT_CLASSIFICATION	8.114754629242902E-6	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.999999462171093	WITHOUT_CLASSIFICATION	5.378289069216853E-7	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9998924928023434	WITHOUT_CLASSIFICATION	1.0750719765661124E-4	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999997193678601	WITHOUT_CLASSIFICATION	2.806321398660437E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999994067651895	WITHOUT_CLASSIFICATION	5.932348105967028E-7	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999846910866	WITHOUT_CLASSIFICATION	1.5308913363833987E-8	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999999403690439	WITHOUT_CLASSIFICATION	5.963095604454524E-8	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999997305582935	WITHOUT_CLASSIFICATION	2.694417065290558E-7	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999998772437999	WITHOUT_CLASSIFICATION	1.2275620006993514E-7	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999999070542159	WITHOUT_CLASSIFICATION	9.294578413802694E-8	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999996902051211	WITHOUT_CLASSIFICATION	3.097948788997191E-7	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999997755224626	WITHOUT_CLASSIFICATION	2.2447753749791132E-7	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999988667593537	WITHOUT_CLASSIFICATION	1.1332406462607537E-6	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999997665039927	WITHOUT_CLASSIFICATION	2.3349600738021963E-7	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999996387713477	WITHOUT_CLASSIFICATION	3.61228652399E-7	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999988667593537	WITHOUT_CLASSIFICATION	1.1332406462607537E-6	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999985826027177	WITHOUT_CLASSIFICATION	1.4173972823420417E-6	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999178346446	WITHOUT_CLASSIFICATION	8.216535545673688E-8	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.999993739369316	WITHOUT_CLASSIFICATION	6.260630684033459E-6	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9987632300957581	WITHOUT_CLASSIFICATION	0.001236769904241928	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.999999460279608	WITHOUT_CLASSIFICATION	5.397203920466316E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999995304860682	WITHOUT_CLASSIFICATION	4.6951393185015627E-7	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999996993188736	WITHOUT_CLASSIFICATION	3.006811264232271E-7	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9997804883952925	WITHOUT_CLASSIFICATION	2.1951160470738533E-4	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999999896010392	WITHOUT_CLASSIFICATION	1.0398960802772208E-7	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.99999974054399	WITHOUT_CLASSIFICATION	2.5945601006499914E-7	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999993597172951	WITHOUT_CLASSIFICATION	6.402827048927198E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999223133402	WITHOUT_CLASSIFICATION	7.768665978907099E-8	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999987946606186	WITHOUT_CLASSIFICATION	1.2053393814129749E-6	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999999547409747	WITHOUT_CLASSIFICATION	4.5259025390804915E-8	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999843451550415	WITHOUT_CLASSIFICATION	1.5654844958529437E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999988144093411	WITHOUT_CLASSIFICATION	1.1855906588305276E-6	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999372767855986	WITHOUT_CLASSIFICATION	6.272321440139104E-5	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999912198311319	WITHOUT_CLASSIFICATION	8.780168868003315E-6	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999817206565	WITHOUT_CLASSIFICATION	1.827934349595097E-8	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999977024946818	WITHOUT_CLASSIFICATION	2.2975053181811313E-6	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999979589742021	WITHOUT_CLASSIFICATION	2.0410257978223664E-6	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999967043952063	WITHOUT_CLASSIFICATION	3.2956047936806136E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999994984824229	WITHOUT_CLASSIFICATION	5.015175771549625E-7	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999939645022914	WITHOUT_CLASSIFICATION	6.035497708627709E-6	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999969691291712	WITHOUT_CLASSIFICATION	3.0308708287236987E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999971687215262	WITHOUT_CLASSIFICATION	2.831278473880779E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999975046961735	WITHOUT_CLASSIFICATION	2.4953038265280655E-6	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999740025808	WITHOUT_CLASSIFICATION	2.599741920372062E-8	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999998812197518	WITHOUT_CLASSIFICATION	1.1878024811440511E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999988339015676	WITHOUT_CLASSIFICATION	1.1660984323912987E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999988339015676	WITHOUT_CLASSIFICATION	1.1660984323912987E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998370642339	WITHOUT_CLASSIFICATION	1.6293576621848338E-7	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999365478132	WITHOUT_CLASSIFICATION	6.345218682216102E-8	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999266065812	WITHOUT_CLASSIFICATION	7.339341877462442E-8	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9990116257770567	WITHOUT_CLASSIFICATION	9.883742229432999E-4	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9990116257770567	WITHOUT_CLASSIFICATION	9.883742229432999E-4	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9990116257770567	WITHOUT_CLASSIFICATION	9.883742229432999E-4	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9990116257770567	WITHOUT_CLASSIFICATION	9.883742229432999E-4	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999982502290637	WITHOUT_CLASSIFICATION	1.7497709362937735E-6	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999997335721352	WITHOUT_CLASSIFICATION	2.664278647588084E-7	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999970628299671	WITHOUT_CLASSIFICATION	2.9371700329150338E-6	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9939326212371046	WITHOUT_CLASSIFICATION	0.0060673787628954074	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999998616903488	WITHOUT_CLASSIFICATION	1.3830965114994776E-7	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.999997344888119	WITHOUT_CLASSIFICATION	2.655111881028639E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999989804814539	WITHOUT_CLASSIFICATION	1.0195185460868522E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999989804814539	WITHOUT_CLASSIFICATION	1.0195185460868522E-5	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999991523377247	WITHOUT_CLASSIFICATION	8.476622752972698E-7	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9999886742858741	WITHOUT_CLASSIFICATION	1.1325714125766682E-5	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999976540209725	WITHOUT_CLASSIFICATION	2.345979027394844E-6	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.999975191968946	WITHOUT_CLASSIFICATION	2.4808031053936085E-5	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999999057153219	WITHOUT_CLASSIFICATION	9.428467811464084E-8	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999983810785181	WITHOUT_CLASSIFICATION	1.6189214819421615E-6	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999986990274735	WITHOUT_CLASSIFICATION	1.300972526514119E-6	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999471694866207	WITHOUT_CLASSIFICATION	5.283051337921117E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999594241409675	WITHOUT_CLASSIFICATION	4.0575859032504896E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999594241409675	WITHOUT_CLASSIFICATION	4.0575859032504896E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999996387713477	WITHOUT_CLASSIFICATION	3.61228652399E-7	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999975212135924	WITHOUT_CLASSIFICATION	2.4787864075482745E-6	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999975204475234	WITHOUT_CLASSIFICATION	2.4795524765100785E-6	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999991657017787	WITHOUT_CLASSIFICATION	8.342982212655975E-7	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.999999548545275	WITHOUT_CLASSIFICATION	4.514547250561026E-7	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9999881317620053	WITHOUT_CLASSIFICATION	1.186823799478363E-5	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999991525453585	WITHOUT_CLASSIFICATION	8.474546414540855E-7	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999997012504391	WITHOUT_CLASSIFICATION	2.9874956087670667E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999991194211065	WITHOUT_CLASSIFICATION	8.805788935228427E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999991194211065	WITHOUT_CLASSIFICATION	8.805788935228427E-7	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999992742812821	WITHOUT_CLASSIFICATION	7.257187179684701E-7	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999998470798451	WITHOUT_CLASSIFICATION	1.5292015483180213E-7	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999997590917338	WITHOUT_CLASSIFICATION	2.409082662330492E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999987582977767	WITHOUT_CLASSIFICATION	1.2417022232485582E-6	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.999999632597846	WITHOUT_CLASSIFICATION	3.6740215402120446E-7	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9999886246271006	WITHOUT_CLASSIFICATION	1.1375372899412843E-5	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999997317873852	WITHOUT_CLASSIFICATION	2.682126147434311E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998864893563	WITHOUT_CLASSIFICATION	1.1351064364282874E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998864893563	WITHOUT_CLASSIFICATION	1.1351064364282874E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998864893563	WITHOUT_CLASSIFICATION	1.1351064364282874E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998864893563	WITHOUT_CLASSIFICATION	1.1351064364282874E-7	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999986365893603	WITHOUT_CLASSIFICATION	1.3634106397530528E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999991323015976	WITHOUT_CLASSIFICATION	8.676984023115105E-7	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.999864587402652	WITHOUT_CLASSIFICATION	1.354125973479947E-4	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999998510805879	WITHOUT_CLASSIFICATION	1.489194120830397E-7	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999990313475883	WITHOUT_CLASSIFICATION	9.686524117806872E-7	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.9999851626204157	WITHOUT_CLASSIFICATION	1.4837379584154892E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999995592251801	WITHOUT_CLASSIFICATION	4.4077481982966025E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999992159677833	WITHOUT_CLASSIFICATION	7.84032216736512E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999992159677833	WITHOUT_CLASSIFICATION	7.84032216736512E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999992159677833	WITHOUT_CLASSIFICATION	7.84032216736512E-7	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999999125990548	WITHOUT_CLASSIFICATION	8.740094520474276E-7	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999998686044933	WITHOUT_CLASSIFICATION	1.3139550670254318E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999695895391	WITHOUT_CLASSIFICATION	3.0410460853368145E-8	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999695895391	WITHOUT_CLASSIFICATION	3.0410460853368145E-8	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999931395395385	WITHOUT_CLASSIFICATION	6.860460461546399E-6	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999999038695	WITHOUT_CLASSIFICATION	9.613050299330598E-10	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999998860194522	WITHOUT_CLASSIFICATION	1.1398054766186616E-7	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9999950573357913	WITHOUT_CLASSIFICATION	4.942664208648517E-6	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999990286125284	WITHOUT_CLASSIFICATION	9.713874715076441E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999985565385341	WITHOUT_CLASSIFICATION	1.443461465912932E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999996366861253	WITHOUT_CLASSIFICATION	3.633138746225339E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999996366861253	WITHOUT_CLASSIFICATION	3.633138746225339E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999932737308238	WITHOUT_CLASSIFICATION	6.726269176250041E-6	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999975991400193	WITHOUT_CLASSIFICATION	2.400859980653567E-6	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999958390089719	WITHOUT_CLASSIFICATION	4.160991028058203E-6	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999951457339736	WITHOUT_CLASSIFICATION	4.854266026309222E-6	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999750475646977	WITHOUT_CLASSIFICATION	2.4952435302336126E-5	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999998533841328	WITHOUT_CLASSIFICATION	1.4661586730870977E-7	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999997568846768	WITHOUT_CLASSIFICATION	2.4311532324258213E-7	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999505518014945	WITHOUT_CLASSIFICATION	4.944819850556048E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999918603668407	WITHOUT_CLASSIFICATION	8.139633159287664E-6	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999990643656739	WITHOUT_CLASSIFICATION	9.356343261262181E-7	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999999778031952	WITHOUT_CLASSIFICATION	2.2196804758683994E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999998104856742	WITHOUT_CLASSIFICATION	1.8951432566506896E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999874889014	WITHOUT_CLASSIFICATION	1.2511098643434507E-8	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.999999980282134	WITHOUT_CLASSIFICATION	1.9717865987959594E-8	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999985441565827	WITHOUT_CLASSIFICATION	1.4558434171954708E-6	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999999765786084	WITHOUT_CLASSIFICATION	2.342139156881259E-8	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999971978800721	WITHOUT_CLASSIFICATION	2.802119927809649E-6	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.999999981249023	WITHOUT_CLASSIFICATION	1.875097695356732E-8	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999705394542	WITHOUT_CLASSIFICATION	2.9460545776139326E-8	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999999465731089	WITHOUT_CLASSIFICATION	5.34268911086785E-8	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.999998944039555	WITHOUT_CLASSIFICATION	1.0559604449213343E-6	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999997054865349	WITHOUT_CLASSIFICATION	2.9451346509626866E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999946074918442	WITHOUT_CLASSIFICATION	5.3925081557731646E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999946074918442	WITHOUT_CLASSIFICATION	5.3925081557731646E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999946074918442	WITHOUT_CLASSIFICATION	5.3925081557731646E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999946074918442	WITHOUT_CLASSIFICATION	5.3925081557731646E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999946074918442	WITHOUT_CLASSIFICATION	5.3925081557731646E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999946074918442	WITHOUT_CLASSIFICATION	5.3925081557731646E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999946074918442	WITHOUT_CLASSIFICATION	5.3925081557731646E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999946074918442	WITHOUT_CLASSIFICATION	5.3925081557731646E-6	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.999999945209378	WITHOUT_CLASSIFICATION	5.479062196017264E-8	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999942171977373	WITHOUT_CLASSIFICATION	5.78280226263586E-6	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999940341813689	WITHOUT_CLASSIFICATION	5.96581863111274E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999997746493468	WITHOUT_CLASSIFICATION	2.2535065316956785E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999790347564	WITHOUT_CLASSIFICATION	2.0965243593583257E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.999999790347564	WITHOUT_CLASSIFICATION	2.0965243593583257E-7	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999998485532748	WITHOUT_CLASSIFICATION	1.5144672520750187E-7	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999998796544171	WITHOUT_CLASSIFICATION	1.2034558294736575E-7	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.999999288898009	WITHOUT_CLASSIFICATION	7.111019909975601E-7	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.999999306661866	WITHOUT_CLASSIFICATION	6.933381339150362E-7	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999994019023596	WITHOUT_CLASSIFICATION	5.980976405172987E-7	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999995058286868	WITHOUT_CLASSIFICATION	4.941713131949106E-7	TEST
// read	WITHOUT_CLASSIFICATION	0.9999988452483594	WITHOUT_CLASSIFICATION	1.1547516405463806E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999868533888999	WITHOUT_CLASSIFICATION	1.3146611100094944E-5	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999966457521599	WITHOUT_CLASSIFICATION	3.3542478400652854E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997069199014	WITHOUT_CLASSIFICATION	2.9308009867494E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997069199014	WITHOUT_CLASSIFICATION	2.9308009867494E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997069199014	WITHOUT_CLASSIFICATION	2.9308009867494E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999788627518923	WITHOUT_CLASSIFICATION	2.1137248107659097E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999788627518923	WITHOUT_CLASSIFICATION	2.1137248107659097E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999788627518923	WITHOUT_CLASSIFICATION	2.1137248107659097E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999788627518923	WITHOUT_CLASSIFICATION	2.1137248107659097E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999788627518923	WITHOUT_CLASSIFICATION	2.1137248107659097E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999788627518923	WITHOUT_CLASSIFICATION	2.1137248107659097E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999788627518923	WITHOUT_CLASSIFICATION	2.1137248107659097E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999788627518923	WITHOUT_CLASSIFICATION	2.1137248107659097E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999788627518923	WITHOUT_CLASSIFICATION	2.1137248107659097E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999997439812967	WITHOUT_CLASSIFICATION	2.5601870336042156E-7	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999993862501855	WITHOUT_CLASSIFICATION	6.137498145593038E-7	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999982652159685	WITHOUT_CLASSIFICATION	1.7347840315294952E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.999999463980047	WITHOUT_CLASSIFICATION	5.360199529751975E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999788627518923	WITHOUT_CLASSIFICATION	2.1137248107659097E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999788627518923	WITHOUT_CLASSIFICATION	2.1137248107659097E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999788627518923	WITHOUT_CLASSIFICATION	2.1137248107659097E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999998342510266	WITHOUT_CLASSIFICATION	1.6574897341734583E-7	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999960914102412	WITHOUT_CLASSIFICATION	3.908589758922827E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999998733489993	WITHOUT_CLASSIFICATION	1.266510006523924E-7	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999990089485025	WITHOUT_CLASSIFICATION	9.9105149761969E-7	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999990089485025	WITHOUT_CLASSIFICATION	9.9105149761969E-7	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999993895764143	WITHOUT_CLASSIFICATION	6.104235856628097E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999990356381276	WITHOUT_CLASSIFICATION	9.64361872392263E-7	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999275227995	WITHOUT_CLASSIFICATION	7.247720042431399E-8	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.999999801037281	WITHOUT_CLASSIFICATION	1.9896271896620153E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999983056935609	WITHOUT_CLASSIFICATION	1.694306439137462E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999983056935609	WITHOUT_CLASSIFICATION	1.694306439137462E-6	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999829814316993	WITHOUT_CLASSIFICATION	1.7018568300689665E-5	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999525405173	WITHOUT_CLASSIFICATION	4.745948266990461E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999988450408468	WITHOUT_CLASSIFICATION	1.1549591531452872E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999672508180454	WITHOUT_CLASSIFICATION	3.274918195456162E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999672508180454	WITHOUT_CLASSIFICATION	3.274918195456162E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999672508180454	WITHOUT_CLASSIFICATION	3.274918195456162E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999995329226246	WITHOUT_CLASSIFICATION	4.6707737543396614E-7	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999994136407517	WITHOUT_CLASSIFICATION	5.863592482891811E-7	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999994136407517	WITHOUT_CLASSIFICATION	5.863592482891811E-7	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999996947457258	WITHOUT_CLASSIFICATION	3.052542742062128E-7	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999996947457258	WITHOUT_CLASSIFICATION	3.052542742062128E-7	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999998329150831	WITHOUT_CLASSIFICATION	1.6708491687321495E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999716311301	WITHOUT_CLASSIFICATION	2.8368869961057676E-8	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.999979763346096	WITHOUT_CLASSIFICATION	2.023665390410026E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999901049916275	WITHOUT_CLASSIFICATION	9.895008372371289E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999974862789032	WITHOUT_CLASSIFICATION	2.513721096716954E-6	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999999144857016	WITHOUT_CLASSIFICATION	8.551429842724E-8	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999611598783	WITHOUT_CLASSIFICATION	3.884012177006452E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999970096145199	WITHOUT_CLASSIFICATION	2.9903854801830947E-6	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.999999670045304	WITHOUT_CLASSIFICATION	3.299546960201594E-7	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999454673136	WITHOUT_CLASSIFICATION	5.453268627336566E-8	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9998884740540986	WITHOUT_CLASSIFICATION	1.1152594590131683E-4	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999995511065984	WITHOUT_CLASSIFICATION	4.488934015335734E-7	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999973103877835	WITHOUT_CLASSIFICATION	2.689612216555537E-6	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999993805537795	WITHOUT_CLASSIFICATION	6.194462204846594E-7	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999998659309578	WITHOUT_CLASSIFICATION	1.3406904229688108E-7	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.99999985310695	WITHOUT_CLASSIFICATION	1.468930500363228E-7	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999994581188797	WITHOUT_CLASSIFICATION	5.418811202831254E-7	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999368678363	WITHOUT_CLASSIFICATION	6.313216373025202E-8	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999998172709925	WITHOUT_CLASSIFICATION	1.8272900750373632E-6	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.999997474622606	WITHOUT_CLASSIFICATION	2.5253773938934555E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999223133402	WITHOUT_CLASSIFICATION	7.768665978907099E-8	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999530941127933	WITHOUT_CLASSIFICATION	4.690588720672182E-5	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.999999345067439	WITHOUT_CLASSIFICATION	6.549325608940571E-7	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999992405730056	WITHOUT_CLASSIFICATION	7.594269945060165E-7	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999998948834291	WITHOUT_CLASSIFICATION	1.051165708854035E-7	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999828959325688	WITHOUT_CLASSIFICATION	1.710406743112624E-5	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999980533476689	WITHOUT_CLASSIFICATION	1.9466523311063563E-6	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999993695019123	WITHOUT_CLASSIFICATION	6.304980878188584E-7	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999996485399848	WITHOUT_CLASSIFICATION	3.5146001514335223E-7	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999583384397	WITHOUT_CLASSIFICATION	4.1661560266876886E-8	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999966216734892	WITHOUT_CLASSIFICATION	3.378326510915443E-6	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999994404935023	WITHOUT_CLASSIFICATION	5.595064976519971E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999998369882842	WITHOUT_CLASSIFICATION	1.6301171585469696E-7	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.999999907363189	WITHOUT_CLASSIFICATION	9.263681110493368E-8	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999995914383316	WITHOUT_CLASSIFICATION	4.085616683311819E-7	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999718909579499	WITHOUT_CLASSIFICATION	2.810904205010479E-5	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999998714174213	WITHOUT_CLASSIFICATION	1.2858257859331006E-7	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999994343481773	WITHOUT_CLASSIFICATION	5.656518227064575E-7	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999997121954776	WITHOUT_CLASSIFICATION	2.878045224440297E-7	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999998232721798	WITHOUT_CLASSIFICATION	1.767278202351553E-7	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999995164599667	WITHOUT_CLASSIFICATION	4.835400334037538E-7	TEST
// finally	WITHOUT_CLASSIFICATION	0.999995325943719	WITHOUT_CLASSIFICATION	4.674056280995969E-6	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.999998434387527	WITHOUT_CLASSIFICATION	1.565612472992178E-6	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999993779918719	WITHOUT_CLASSIFICATION	6.220081280369257E-7	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999988485336246	WITHOUT_CLASSIFICATION	1.1514663753514456E-6	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999995045572803	WITHOUT_CLASSIFICATION	4.954427197854217E-7	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999998066351643	WITHOUT_CLASSIFICATION	1.9336483567054458E-7	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999990443684365	WITHOUT_CLASSIFICATION	9.556315635401676E-7	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999996571162777	WITHOUT_CLASSIFICATION	3.4288372238918973E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999893780154538	WITHOUT_CLASSIFICATION	1.062198454624976E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999998617884399	WITHOUT_CLASSIFICATION	1.3821156016725572E-7	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999996375652529	WITHOUT_CLASSIFICATION	3.6243474708024415E-7	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999996375652529	WITHOUT_CLASSIFICATION	3.6243474708024415E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999995337104258	WITHOUT_CLASSIFICATION	4.6628957418401173E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999995337104258	WITHOUT_CLASSIFICATION	4.6628957418401173E-7	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999653791088132	WITHOUT_CLASSIFICATION	3.4620891186692514E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999653791088132	WITHOUT_CLASSIFICATION	3.4620891186692514E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999982149079653	WITHOUT_CLASSIFICATION	1.7850920346402616E-6	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999982149079653	WITHOUT_CLASSIFICATION	1.7850920346402616E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996939264821	WITHOUT_CLASSIFICATION	3.0607351787176344E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996939264821	WITHOUT_CLASSIFICATION	3.0607351787176344E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996939264821	WITHOUT_CLASSIFICATION	3.0607351787176344E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996939264821	WITHOUT_CLASSIFICATION	3.0607351787176344E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996939264821	WITHOUT_CLASSIFICATION	3.0607351787176344E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996939264821	WITHOUT_CLASSIFICATION	3.0607351787176344E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996939264821	WITHOUT_CLASSIFICATION	3.0607351787176344E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996939264821	WITHOUT_CLASSIFICATION	3.0607351787176344E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999996939264821	WITHOUT_CLASSIFICATION	3.0607351787176344E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996620215402	WITHOUT_CLASSIFICATION	3.3797845978026894E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996620215402	WITHOUT_CLASSIFICATION	3.3797845978026894E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996620215402	WITHOUT_CLASSIFICATION	3.3797845978026894E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999995448095979	WITHOUT_CLASSIFICATION	4.551904022220078E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996528900051	WITHOUT_CLASSIFICATION	3.4710999480976744E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996528900051	WITHOUT_CLASSIFICATION	3.4710999480976744E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996528900051	WITHOUT_CLASSIFICATION	3.4710999480976744E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999994546245199	WITHOUT_CLASSIFICATION	5.453754800990077E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999994546245199	WITHOUT_CLASSIFICATION	5.453754800990077E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999994546245199	WITHOUT_CLASSIFICATION	5.453754800990077E-7	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999805875586093	WITHOUT_CLASSIFICATION	1.9412441390656416E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999988314995062	WITHOUT_CLASSIFICATION	1.168500493906434E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999865290168042	WITHOUT_CLASSIFICATION	1.3470983195829361E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999869981868199	WITHOUT_CLASSIFICATION	1.3001813180180371E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999869981868199	WITHOUT_CLASSIFICATION	1.3001813180180371E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999869981868199	WITHOUT_CLASSIFICATION	1.3001813180180371E-5	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999983109777897	WITHOUT_CLASSIFICATION	1.6890222102107995E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999971660229668	WITHOUT_CLASSIFICATION	2.8339770330238007E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999971660229668	WITHOUT_CLASSIFICATION	2.8339770330238007E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999920908401851	WITHOUT_CLASSIFICATION	7.909159814924022E-6	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999968521976705	WITHOUT_CLASSIFICATION	3.1478023293701268E-6	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999968521976705	WITHOUT_CLASSIFICATION	3.1478023293701268E-6	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9938850709595142	WITHOUT_CLASSIFICATION	0.006114929040485888	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999986419402326	WITHOUT_CLASSIFICATION	1.3580597674371546E-6	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999993716447982	WITHOUT_CLASSIFICATION	6.283552018558169E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999969832623609	WITHOUT_CLASSIFICATION	3.0167376392230057E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999969832623609	WITHOUT_CLASSIFICATION	3.0167376392230057E-6	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.99999630931671	WITHOUT_CLASSIFICATION	3.6906832900690504E-6	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999423025436585	WITHOUT_CLASSIFICATION	5.7697456341497386E-5	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999987596230987	WITHOUT_CLASSIFICATION	1.2403769013162738E-6	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.999997879628926	WITHOUT_CLASSIFICATION	2.120371074081698E-6	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999998811900074	WITHOUT_CLASSIFICATION	1.1880999266148206E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999969832623609	WITHOUT_CLASSIFICATION	3.0167376392230057E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999969832623609	WITHOUT_CLASSIFICATION	3.0167376392230057E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999969832623609	WITHOUT_CLASSIFICATION	3.0167376392230057E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999969832623609	WITHOUT_CLASSIFICATION	3.0167376392230057E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999969832623609	WITHOUT_CLASSIFICATION	3.0167376392230057E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999983102276346	WITHOUT_CLASSIFICATION	1.6897723653307716E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999964981313315	WITHOUT_CLASSIFICATION	3.5018686685126486E-6	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999726228495	WITHOUT_CLASSIFICATION	2.737715065293279E-8	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999969779232533	WITHOUT_CLASSIFICATION	3.0220767467595797E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999996087202268	WITHOUT_CLASSIFICATION	3.9127977324306015E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994207122012	WITHOUT_CLASSIFICATION	5.792877989093933E-7	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999918255625045	WITHOUT_CLASSIFICATION	8.174437495448584E-6	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999918745488939	WITHOUT_CLASSIFICATION	8.125451106123477E-6	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999996203624557	WITHOUT_CLASSIFICATION	3.7963754434225305E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999974486364357	WITHOUT_CLASSIFICATION	2.5513635644055456E-6	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999997955558023	WITHOUT_CLASSIFICATION	2.0444419766057074E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999994067651895	WITHOUT_CLASSIFICATION	5.932348105967028E-7	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.999999706143797	WITHOUT_CLASSIFICATION	2.93856203105897E-7	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999948081902085	WITHOUT_CLASSIFICATION	5.191809791469331E-6	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999791928341534	WITHOUT_CLASSIFICATION	2.0807165846585535E-5	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999999706124273	WITHOUT_CLASSIFICATION	2.938757278953308E-8	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999997844880754	WITHOUT_CLASSIFICATION	2.1551192469514514E-7	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999971111125	WITHOUT_CLASSIFICATION	2.8888875566199876E-9	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999998059701022	WITHOUT_CLASSIFICATION	1.940298977997824E-7	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999995795467774	WITHOUT_CLASSIFICATION	4.2045322264080205E-7	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999860955168162	WITHOUT_CLASSIFICATION	1.3904483183773441E-5	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999966903675638	WITHOUT_CLASSIFICATION	3.3096324361440527E-6	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999832361575	WITHOUT_CLASSIFICATION	1.6763842489988578E-8	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999998999587011	WITHOUT_CLASSIFICATION	1.0004129890831678E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999998999587011	WITHOUT_CLASSIFICATION	1.0004129890831678E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999998999587011	WITHOUT_CLASSIFICATION	1.0004129890831678E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999998999587011	WITHOUT_CLASSIFICATION	1.0004129890831678E-6	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999998560957317	WITHOUT_CLASSIFICATION	1.4390426834058383E-7	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999999296901991	WITHOUT_CLASSIFICATION	7.030980094921841E-8	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999997240774775	WITHOUT_CLASSIFICATION	2.759225224896381E-7	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999997240774775	WITHOUT_CLASSIFICATION	2.759225224896381E-7	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.999999837937018	WITHOUT_CLASSIFICATION	1.620629820419559E-7	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999969900257354	WITHOUT_CLASSIFICATION	3.0099742647141015E-6	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999963850003701	WITHOUT_CLASSIFICATION	3.6149996298118446E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999997238633693	WITHOUT_CLASSIFICATION	2.7613663072131736E-7	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999244473052	WITHOUT_CLASSIFICATION	7.555269480340968E-8	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.999999434017058	WITHOUT_CLASSIFICATION	5.659829420378066E-7	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999960695079066	WITHOUT_CLASSIFICATION	3.9304920933528704E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999971306437533	WITHOUT_CLASSIFICATION	2.869356246644869E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999971306437533	WITHOUT_CLASSIFICATION	2.869356246644869E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999971306437533	WITHOUT_CLASSIFICATION	2.869356246644869E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999971306437533	WITHOUT_CLASSIFICATION	2.869356246644869E-6	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999440086935	WITHOUT_CLASSIFICATION	5.599130650141893E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999996077736113	WITHOUT_CLASSIFICATION	3.922263886757519E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999996077736113	WITHOUT_CLASSIFICATION	3.922263886757519E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999996077736113	WITHOUT_CLASSIFICATION	3.922263886757519E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999978468988471	WITHOUT_CLASSIFICATION	2.1531011528427395E-6	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999992420337279	WITHOUT_CLASSIFICATION	7.5796627206984E-7	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999928341035264	WITHOUT_CLASSIFICATION	7.165896473687874E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9990116257770567	WITHOUT_CLASSIFICATION	9.883742229432999E-4	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9990116257770567	WITHOUT_CLASSIFICATION	9.883742229432999E-4	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999998638577737	WITHOUT_CLASSIFICATION	1.3614222633558082E-7	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999957124255364	WITHOUT_CLASSIFICATION	4.287574463654841E-6	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999991371575044	WITHOUT_CLASSIFICATION	8.628424956712898E-7	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999991371575044	WITHOUT_CLASSIFICATION	8.628424956712898E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999992029178393	WITHOUT_CLASSIFICATION	7.97082160844224E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999992029178393	WITHOUT_CLASSIFICATION	7.97082160844224E-7	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999236349766	WITHOUT_CLASSIFICATION	7.636502341898076E-8	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999991924666408	WITHOUT_CLASSIFICATION	8.075333592014653E-7	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999983491656332	WITHOUT_CLASSIFICATION	1.6508343667402713E-6	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999998622116995	WITHOUT_CLASSIFICATION	1.3778830044636637E-7	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999855602616635	WITHOUT_CLASSIFICATION	1.4439738336422475E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999993731412274	WITHOUT_CLASSIFICATION	6.268587726315689E-7	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999992065774315	WITHOUT_CLASSIFICATION	7.934225685342639E-7	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999998285485399	WITHOUT_CLASSIFICATION	1.7145146011056863E-7	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999986805714496	WITHOUT_CLASSIFICATION	1.3194285504754125E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999996837396945	WITHOUT_CLASSIFICATION	3.1626030550242786E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999996837396945	WITHOUT_CLASSIFICATION	3.1626030550242786E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999995472622872	WITHOUT_CLASSIFICATION	4.527377128150054E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999995472622872	WITHOUT_CLASSIFICATION	4.527377128150054E-7	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999981875290072	WITHOUT_CLASSIFICATION	1.8124709928037418E-6	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999957035810725	WITHOUT_CLASSIFICATION	4.296418927515168E-6	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999868216712972	WITHOUT_CLASSIFICATION	1.31783287027331E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999982173578298	WITHOUT_CLASSIFICATION	1.782642170212214E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999982173578298	WITHOUT_CLASSIFICATION	1.782642170212214E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999982173578298	WITHOUT_CLASSIFICATION	1.782642170212214E-6	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999972438864626	WITHOUT_CLASSIFICATION	2.7561135374337063E-6	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999974715812954	WITHOUT_CLASSIFICATION	2.5284187047025006E-6	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999973643951894	WITHOUT_CLASSIFICATION	2.6356048106055664E-6	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999972259503905	WITHOUT_CLASSIFICATION	2.774049609408419E-6	TEST
// line 533	WITHOUT_CLASSIFICATION	0.999996914815066	WITHOUT_CLASSIFICATION	3.0851849340026113E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.999996941576075	WITHOUT_CLASSIFICATION	3.058423925153632E-6	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999971344317728	WITHOUT_CLASSIFICATION	2.8655682271590522E-6	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999987004617964	WITHOUT_CLASSIFICATION	1.2995382036193242E-6	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999988122336722	WITHOUT_CLASSIFICATION	1.187766327843708E-6	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999574947429	WITHOUT_CLASSIFICATION	4.250525703214035E-8	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999997071430176	WITHOUT_CLASSIFICATION	2.92856982372015E-7	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999995661307568	WITHOUT_CLASSIFICATION	4.338692431274787E-7	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999991647246051	WITHOUT_CLASSIFICATION	8.352753948221563E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9990116257770567	WITHOUT_CLASSIFICATION	9.883742229432999E-4	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999998027154758	WITHOUT_CLASSIFICATION	1.972845241341559E-7	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999949267364858	WITHOUT_CLASSIFICATION	5.073263514105383E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999988339015676	WITHOUT_CLASSIFICATION	1.1660984323912987E-6	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999529310990926	WITHOUT_CLASSIFICATION	4.706890090754667E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999529310990926	WITHOUT_CLASSIFICATION	4.706890090754667E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999529310990926	WITHOUT_CLASSIFICATION	4.706890090754667E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999529310990926	WITHOUT_CLASSIFICATION	4.706890090754667E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999529310990926	WITHOUT_CLASSIFICATION	4.706890090754667E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999561385675696	WITHOUT_CLASSIFICATION	4.386143243026617E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999529310990926	WITHOUT_CLASSIFICATION	4.706890090754667E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999529310990926	WITHOUT_CLASSIFICATION	4.706890090754667E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999529310990926	WITHOUT_CLASSIFICATION	4.706890090754667E-5	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999999465383436	WITHOUT_CLASSIFICATION	5.3461656363767235E-8	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999882865731619	WITHOUT_CLASSIFICATION	1.171342683818292E-5	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999964214791518	WITHOUT_CLASSIFICATION	3.5785208482932936E-6	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999953923426655	WITHOUT_CLASSIFICATION	4.607657334482369E-6	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999993711545466	WITHOUT_CLASSIFICATION	6.288454534230973E-7	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999911325911228	WITHOUT_CLASSIFICATION	8.867408877211094E-6	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999625948826	WITHOUT_CLASSIFICATION	3.7405117348924506E-8	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999972456696199	WITHOUT_CLASSIFICATION	2.754330380107391E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999974905994353	WITHOUT_CLASSIFICATION	2.5094005646568076E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999974905994353	WITHOUT_CLASSIFICATION	2.5094005646568076E-6	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999972684832711	WITHOUT_CLASSIFICATION	2.7315167288896177E-6	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999975372791375	WITHOUT_CLASSIFICATION	2.4627208624578186E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999973340438222	WITHOUT_CLASSIFICATION	2.665956177738405E-6	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999969591625363	WITHOUT_CLASSIFICATION	3.0408374637817337E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999969765725101	WITHOUT_CLASSIFICATION	3.023427489885934E-6	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999973510401876	WITHOUT_CLASSIFICATION	2.6489598123286944E-6	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999972092047352	WITHOUT_CLASSIFICATION	2.790795264709422E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999972486269446	WITHOUT_CLASSIFICATION	2.75137305549287E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999974433458223	WITHOUT_CLASSIFICATION	2.556654177694196E-6	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999973804411807	WITHOUT_CLASSIFICATION	2.6195588194142212E-6	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999976845897333	WITHOUT_CLASSIFICATION	2.315410266723833E-6	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999973352556247	WITHOUT_CLASSIFICATION	2.6647443753101125E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999970780384156	WITHOUT_CLASSIFICATION	2.9219615842656034E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999973889916821	WITHOUT_CLASSIFICATION	2.6110083178496406E-6	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999974449517703	WITHOUT_CLASSIFICATION	2.555048229748694E-6	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999972463522906	WITHOUT_CLASSIFICATION	2.753647709366403E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999973967121502	WITHOUT_CLASSIFICATION	2.6032878498030304E-6	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999972735938909	WITHOUT_CLASSIFICATION	2.726406109067843E-6	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999972748009374	WITHOUT_CLASSIFICATION	2.725199062665841E-6	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999973368665072	WITHOUT_CLASSIFICATION	2.6631334927815165E-6	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999975642368798	WITHOUT_CLASSIFICATION	2.43576312020895E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.99999737713258	WITHOUT_CLASSIFICATION	2.6228674199456593E-6	TEST
// line 991	WITHOUT_CLASSIFICATION	0.99999723838952	WITHOUT_CLASSIFICATION	2.761610479993579E-6	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999974362923296	WITHOUT_CLASSIFICATION	2.5637076704228983E-6	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999978732166999	WITHOUT_CLASSIFICATION	2.1267833001938635E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999974476589696	WITHOUT_CLASSIFICATION	2.5523410304189256E-6	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999978915388897	WITHOUT_CLASSIFICATION	2.108461110210349E-6	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999976361766626	WITHOUT_CLASSIFICATION	2.36382333739982E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999979490095311	WITHOUT_CLASSIFICATION	2.0509904688674224E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999975750417661	WITHOUT_CLASSIFICATION	2.4249582338497965E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999975516470673	WITHOUT_CLASSIFICATION	2.448352932790484E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999973122182596	WITHOUT_CLASSIFICATION	2.6877817404281093E-6	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999976944843513	WITHOUT_CLASSIFICATION	2.305515648658615E-6	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999977052025204	WITHOUT_CLASSIFICATION	2.294797479533373E-6	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999971856854935	WITHOUT_CLASSIFICATION	2.814314506576521E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999978097343916	WITHOUT_CLASSIFICATION	2.190265608512566E-6	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.999997638336814	WITHOUT_CLASSIFICATION	2.361663186004116E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999971689419513	WITHOUT_CLASSIFICATION	2.8310580486860397E-6	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999976757892632	WITHOUT_CLASSIFICATION	2.324210736693573E-6	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.999997472323458	WITHOUT_CLASSIFICATION	2.5276765418656227E-6	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999976185860375	WITHOUT_CLASSIFICATION	2.3814139624609505E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999973694948998	WITHOUT_CLASSIFICATION	2.6305051001290445E-6	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999973262461789	WITHOUT_CLASSIFICATION	2.6737538211232062E-6	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.999997342956948	WITHOUT_CLASSIFICATION	2.65704305196604E-6	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999974377849261	WITHOUT_CLASSIFICATION	2.5622150739349488E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999977180322847	WITHOUT_CLASSIFICATION	2.281967715415951E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999977816882948	WITHOUT_CLASSIFICATION	2.2183117052595157E-6	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999975079282759	WITHOUT_CLASSIFICATION	2.492071724187729E-6	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999978565111913	WITHOUT_CLASSIFICATION	2.1434888085838682E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.999997280752633	WITHOUT_CLASSIFICATION	2.719247366915124E-6	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999973412708445	WITHOUT_CLASSIFICATION	2.6587291555383915E-6	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999976690903981	WITHOUT_CLASSIFICATION	2.3309096018360495E-6	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999977014541458	WITHOUT_CLASSIFICATION	2.298545854223526E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999973642481974	WITHOUT_CLASSIFICATION	2.6357518024817298E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999973642481974	WITHOUT_CLASSIFICATION	2.6357518024817298E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999975625019023	WITHOUT_CLASSIFICATION	2.4374980976284588E-6	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999976664181188	WITHOUT_CLASSIFICATION	2.3335818812778495E-6	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999973425246207	WITHOUT_CLASSIFICATION	2.657475379360618E-6	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999976574323493	WITHOUT_CLASSIFICATION	2.342567650662084E-6	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999972216856337	WITHOUT_CLASSIFICATION	2.7783143662644314E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999975884797065	WITHOUT_CLASSIFICATION	2.4115202935157143E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999975878085551	WITHOUT_CLASSIFICATION	2.412191444828326E-6	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999975139995122	WITHOUT_CLASSIFICATION	2.4860004878440207E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999975602930987	WITHOUT_CLASSIFICATION	2.4397069013450186E-6	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999977206189699	WITHOUT_CLASSIFICATION	2.2793810302589703E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999910864828916	WITHOUT_CLASSIFICATION	8.91351710834467E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999910864828916	WITHOUT_CLASSIFICATION	8.91351710834467E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999977672747755	WITHOUT_CLASSIFICATION	2.2327252244033006E-6	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999993583591523	WITHOUT_CLASSIFICATION	6.416408477130144E-7	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999994265674172	WITHOUT_CLASSIFICATION	5.734325828696625E-7	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999771246179	WITHOUT_CLASSIFICATION	2.2875382177389628E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996366684688	WITHOUT_CLASSIFICATION	3.633315311668992E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996366684688	WITHOUT_CLASSIFICATION	3.633315311668992E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996366684688	WITHOUT_CLASSIFICATION	3.633315311668992E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996366684688	WITHOUT_CLASSIFICATION	3.633315311668992E-7	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9968347612899175	WITHOUT_CLASSIFICATION	0.0031652387100824103	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9982124212106398	WITHOUT_CLASSIFICATION	0.0017875787893601243	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999967808462302	WITHOUT_CLASSIFICATION	3.2191537697935627E-6	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999964167759219	WITHOUT_CLASSIFICATION	3.583224078091774E-6	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999963487890238	WITHOUT_CLASSIFICATION	3.6512109763373473E-6	TEST
// line 413	WITHOUT_CLASSIFICATION	0.999997564626935	WITHOUT_CLASSIFICATION	2.4353730648900687E-6	TEST
// line 451	WITHOUT_CLASSIFICATION	0.999997394746236	WITHOUT_CLASSIFICATION	2.6052537639364516E-6	TEST
// line 472	WITHOUT_CLASSIFICATION	0.999997457707854	WITHOUT_CLASSIFICATION	2.5422921460946096E-6	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999972868524176	WITHOUT_CLASSIFICATION	2.713147582317674E-6	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999975455965967	WITHOUT_CLASSIFICATION	2.454403403320621E-6	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999970687917987	WITHOUT_CLASSIFICATION	2.9312082011379664E-6	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999973518116736	WITHOUT_CLASSIFICATION	2.6481883264778593E-6	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999977764184518	WITHOUT_CLASSIFICATION	2.223581548139829E-6	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999969235137235	WITHOUT_CLASSIFICATION	3.0764862765648065E-6	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999973018103051	WITHOUT_CLASSIFICATION	2.6981896950142126E-6	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999969309784832	WITHOUT_CLASSIFICATION	3.069021516872457E-6	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999972046972233	WITHOUT_CLASSIFICATION	2.7953027766778106E-6	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999977878787651	WITHOUT_CLASSIFICATION	2.2121212348983247E-6	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999970379751771	WITHOUT_CLASSIFICATION	2.96202482289232E-6	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999973850604041	WITHOUT_CLASSIFICATION	2.6149395957308254E-6	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999973156478281	WITHOUT_CLASSIFICATION	2.6843521718722037E-6	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999972460860181	WITHOUT_CLASSIFICATION	2.7539139818129803E-6	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999973046855378	WITHOUT_CLASSIFICATION	2.69531446219089E-6	TEST
// line 958	WITHOUT_CLASSIFICATION	0.999997346964699	WITHOUT_CLASSIFICATION	2.653035301011722E-6	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999972795048594	WITHOUT_CLASSIFICATION	2.720495140608115E-6	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999980117604468	WITHOUT_CLASSIFICATION	1.988239553174539E-6	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999978772035589	WITHOUT_CLASSIFICATION	2.1227964410213134E-6	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999972140247685	WITHOUT_CLASSIFICATION	2.785975231483498E-6	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999976282437502	WITHOUT_CLASSIFICATION	2.3717562498018966E-6	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999973676606474	WITHOUT_CLASSIFICATION	2.632339352555105E-6	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999976510869383	WITHOUT_CLASSIFICATION	2.3489130616611074E-6	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999976973456753	WITHOUT_CLASSIFICATION	2.302654324709534E-6	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999972872393407	WITHOUT_CLASSIFICATION	2.7127606592916138E-6	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999976485897766	WITHOUT_CLASSIFICATION	2.351410223388683E-6	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999976764148064	WITHOUT_CLASSIFICATION	2.323585193539635E-6	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999971541085086	WITHOUT_CLASSIFICATION	2.8458914914032994E-6	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999974213663393	WITHOUT_CLASSIFICATION	2.5786336607370193E-6	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999972600669804	WITHOUT_CLASSIFICATION	2.7399330197026124E-6	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999974165800484	WITHOUT_CLASSIFICATION	2.583419951763258E-6	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999973897571122	WITHOUT_CLASSIFICATION	2.6102428877146818E-6	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999977452514341	WITHOUT_CLASSIFICATION	2.2547485657704977E-6	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999975697906524	WITHOUT_CLASSIFICATION	2.4302093476974945E-6	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999977688470119	WITHOUT_CLASSIFICATION	2.2311529880590925E-6	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999972417756725	WITHOUT_CLASSIFICATION	2.758224327581646E-6	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999975543195964	WITHOUT_CLASSIFICATION	2.445680403655947E-6	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999978032387979	WITHOUT_CLASSIFICATION	2.1967612020882138E-6	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999975507036586	WITHOUT_CLASSIFICATION	2.4492963413420524E-6	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.999997661721441	WITHOUT_CLASSIFICATION	2.338278558990868E-6	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999976253920967	WITHOUT_CLASSIFICATION	2.374607903221709E-6	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999973382242341	WITHOUT_CLASSIFICATION	2.6617757659460208E-6	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999976204560742	WITHOUT_CLASSIFICATION	2.3795439257546947E-6	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999977826530521	WITHOUT_CLASSIFICATION	2.217346947917586E-6	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999978030495844	WITHOUT_CLASSIFICATION	2.196950415520078E-6	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999976103291764	WITHOUT_CLASSIFICATION	2.3896708236368683E-6	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.999997877106469	WITHOUT_CLASSIFICATION	2.122893531081154E-6	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999976731720185	WITHOUT_CLASSIFICATION	2.3268279814896546E-6	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999978568679648	WITHOUT_CLASSIFICATION	2.143132035147199E-6	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999976509835065	WITHOUT_CLASSIFICATION	2.349016493523839E-6	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999975876916399	WITHOUT_CLASSIFICATION	2.412308360029901E-6	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.999991368205422	WITHOUT_CLASSIFICATION	8.631794577923945E-6	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999997723543393	WITHOUT_CLASSIFICATION	2.276456607263703E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999902374924372	WITHOUT_CLASSIFICATION	9.762507562684986E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999902374924372	WITHOUT_CLASSIFICATION	9.762507562684986E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999902374924372	WITHOUT_CLASSIFICATION	9.762507562684986E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999902374924372	WITHOUT_CLASSIFICATION	9.762507562684986E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999902374924372	WITHOUT_CLASSIFICATION	9.762507562684986E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999902374924372	WITHOUT_CLASSIFICATION	9.762507562684986E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999902374924372	WITHOUT_CLASSIFICATION	9.762507562684986E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999978655016094	WITHOUT_CLASSIFICATION	2.134498390521342E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999978655016094	WITHOUT_CLASSIFICATION	2.134498390521342E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999978655016094	WITHOUT_CLASSIFICATION	2.134498390521342E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999978655016094	WITHOUT_CLASSIFICATION	2.134498390521342E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999977132101623	WITHOUT_CLASSIFICATION	2.286789837629981E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999977132101623	WITHOUT_CLASSIFICATION	2.286789837629981E-6	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999971548845474	WITHOUT_CLASSIFICATION	2.8451154525126894E-6	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998047003665	WITHOUT_CLASSIFICATION	1.9529963345654523E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998047003665	WITHOUT_CLASSIFICATION	1.9529963345654523E-7	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999997749982205	WITHOUT_CLASSIFICATION	2.2500177955991415E-7	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.99999916263688	WITHOUT_CLASSIFICATION	8.373631199702049E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999976403422	WITHOUT_CLASSIFICATION	2.359657802823946E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999976403422	WITHOUT_CLASSIFICATION	2.359657802823946E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999976403422	WITHOUT_CLASSIFICATION	2.359657802823946E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999976403422	WITHOUT_CLASSIFICATION	2.359657802823946E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999976403422	WITHOUT_CLASSIFICATION	2.359657802823946E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999976403422	WITHOUT_CLASSIFICATION	2.359657802823946E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999976403422	WITHOUT_CLASSIFICATION	2.359657802823946E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999753652218	WITHOUT_CLASSIFICATION	2.463477826087005E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999523684484	WITHOUT_CLASSIFICATION	4.763155160501819E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999996121461274	WITHOUT_CLASSIFICATION	3.878538724984225E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999996121461274	WITHOUT_CLASSIFICATION	3.878538724984225E-7	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999998061179631	WITHOUT_CLASSIFICATION	1.9388203689250542E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.999999439185838	WITHOUT_CLASSIFICATION	5.608141620148285E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.999999439185838	WITHOUT_CLASSIFICATION	5.608141620148285E-7	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999993139430529	WITHOUT_CLASSIFICATION	6.860569472555939E-7	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9992360229713794	WITHOUT_CLASSIFICATION	7.639770286206518E-4	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999922999978746	WITHOUT_CLASSIFICATION	7.700002125328163E-6	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999996335842372	WITHOUT_CLASSIFICATION	3.6641576283565587E-7	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999996574358877	WITHOUT_CLASSIFICATION	3.425641121888622E-7	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999992233532355	WITHOUT_CLASSIFICATION	7.766467643660246E-7	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999961786404661	WITHOUT_CLASSIFICATION	3.821359533936488E-6	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999997317553515	WITHOUT_CLASSIFICATION	2.6824464848971257E-7	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999995381652175	WITHOUT_CLASSIFICATION	4.618347824998877E-6	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999968851086478	WITHOUT_CLASSIFICATION	3.1148913522721546E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9953093831178528	WITHOUT_CLASSIFICATION	0.004690616882147256	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999772287697	WITHOUT_CLASSIFICATION	2.2771230371100953E-8	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997244746051	WITHOUT_CLASSIFICATION	2.7552539495843594E-7	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999947814694108	WITHOUT_CLASSIFICATION	5.218530589256885E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999925486783799	WITHOUT_CLASSIFICATION	7.451321620009377E-6	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999997583416961	WITHOUT_CLASSIFICATION	2.4165830391668907E-7	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999988220553159	WITHOUT_CLASSIFICATION	1.1779446841426972E-6	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999960363978898	WITHOUT_CLASSIFICATION	3.963602110153685E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998404439912	WITHOUT_CLASSIFICATION	1.5955600876421105E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998404439912	WITHOUT_CLASSIFICATION	1.5955600876421105E-7	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999993217779483	WITHOUT_CLASSIFICATION	6.782220516810281E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996746284977	WITHOUT_CLASSIFICATION	3.2537150239606943E-7	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999984192601291	WITHOUT_CLASSIFICATION	1.5807398709812355E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999667210280928	WITHOUT_CLASSIFICATION	3.327897190712772E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999770056030216	WITHOUT_CLASSIFICATION	2.2994396978346477E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999770056030216	WITHOUT_CLASSIFICATION	2.2994396978346477E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999770056030216	WITHOUT_CLASSIFICATION	2.2994396978346477E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999992232220677	WITHOUT_CLASSIFICATION	7.767779324518504E-7	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999992545333636	WITHOUT_CLASSIFICATION	7.454666364016054E-7	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999996557552738	WITHOUT_CLASSIFICATION	3.4424472622227E-7	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999997596800824	WITHOUT_CLASSIFICATION	2.4031991758207997E-7	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999993044629432	WITHOUT_CLASSIFICATION	6.955370568670258E-7	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999997851033038	WITHOUT_CLASSIFICATION	2.1489669618307485E-7	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999998532685053	WITHOUT_CLASSIFICATION	1.4673149471820028E-7	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999998828017304	WITHOUT_CLASSIFICATION	1.1719826964344185E-7	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.999999992902666	WITHOUT_CLASSIFICATION	7.097334075848775E-9	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999987294950996	WITHOUT_CLASSIFICATION	1.270504900367687E-6	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.999997874254428	WITHOUT_CLASSIFICATION	2.125745571987231E-6	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999999766267225	WITHOUT_CLASSIFICATION	2.3373277428021196E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9977612350019264	WITHOUT_CLASSIFICATION	0.002238764998073611	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.999991398787439	WITHOUT_CLASSIFICATION	8.601212560976109E-6	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999966138081751	WITHOUT_CLASSIFICATION	3.386191824930432E-6	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9995371950167246	WITHOUT_CLASSIFICATION	4.628049832753463E-4	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999998115699981	WITHOUT_CLASSIFICATION	1.884300019715516E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9996731983814438	WITHOUT_CLASSIFICATION	3.26801618556238E-4	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.999999985385166	WITHOUT_CLASSIFICATION	1.461483407522526E-8	TEST
