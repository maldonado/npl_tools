// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999982823712991	WITHOUT_CLASSIFICATION	1.7176287010011218E-6	TEST
// TODO make an assert here	TEST	0.9999983917757215	WITHOUT_CLASSIFICATION	1.6082242785021502E-6	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.9999972357022876	WITHOUT_CLASSIFICATION	2.76429771240126E-6	TEST
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9999999305805777	WITHOUT_CLASSIFICATION	6.941942234071772E-8	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.999997286094373	WITHOUT_CLASSIFICATION	2.7139056269649216E-6	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999972478805779	WITHOUT_CLASSIFICATION	2.7521194221002885E-6	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999991112901133	WITHOUT_CLASSIFICATION	8.887098866271789E-7	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999839834885419	WITHOUT_CLASSIFICATION	1.6016511458202112E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999127209859768	WITHOUT_CLASSIFICATION	8.727901402311102E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999127209859768	WITHOUT_CLASSIFICATION	8.727901402311102E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999713647820571	WITHOUT_CLASSIFICATION	2.8635217942895517E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999713647820571	WITHOUT_CLASSIFICATION	2.8635217942895517E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999140809638779	WITHOUT_CLASSIFICATION	8.591903612204196E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.999999629536596	WITHOUT_CLASSIFICATION	3.704634039749735E-7	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999847347642817	WITHOUT_CLASSIFICATION	1.5265235718285474E-5	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999847078758414	WITHOUT_CLASSIFICATION	1.5292124158585474E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999209152737856	WITHOUT_CLASSIFICATION	7.90847262144816E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999209152737856	WITHOUT_CLASSIFICATION	7.90847262144816E-5	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999866601606738	WITHOUT_CLASSIFICATION	1.3339839326088549E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999213380589513	WITHOUT_CLASSIFICATION	7.866194104857008E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999213380589513	WITHOUT_CLASSIFICATION	7.866194104857008E-5	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9999530527285583	WITHOUT_CLASSIFICATION	4.694727144175312E-5	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999483962236839	WITHOUT_CLASSIFICATION	5.160377631617113E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999100656732405	WITHOUT_CLASSIFICATION	8.993432675959899E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999100656732405	WITHOUT_CLASSIFICATION	8.993432675959899E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999100656732405	WITHOUT_CLASSIFICATION	8.993432675959899E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999100656732405	WITHOUT_CLASSIFICATION	8.993432675959899E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999100656732405	WITHOUT_CLASSIFICATION	8.993432675959899E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999100656732405	WITHOUT_CLASSIFICATION	8.993432675959899E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999100656732405	WITHOUT_CLASSIFICATION	8.993432675959899E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997443784470899	WITHOUT_CLASSIFICATION	2.5562155291015536E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997443784470899	WITHOUT_CLASSIFICATION	2.5562155291015536E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997443784470899	WITHOUT_CLASSIFICATION	2.5562155291015536E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997443784470899	WITHOUT_CLASSIFICATION	2.5562155291015536E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997443784470899	WITHOUT_CLASSIFICATION	2.5562155291015536E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997443784470899	WITHOUT_CLASSIFICATION	2.5562155291015536E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997443784470899	WITHOUT_CLASSIFICATION	2.5562155291015536E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999128587173325	WITHOUT_CLASSIFICATION	8.714128266741616E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999128587173325	WITHOUT_CLASSIFICATION	8.714128266741616E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999128587173325	WITHOUT_CLASSIFICATION	8.714128266741616E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999128587173325	WITHOUT_CLASSIFICATION	8.714128266741616E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999128587173325	WITHOUT_CLASSIFICATION	8.714128266741616E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999128587173325	WITHOUT_CLASSIFICATION	8.714128266741616E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999293640136313	WITHOUT_CLASSIFICATION	7.063598636869479E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999293640136313	WITHOUT_CLASSIFICATION	7.063598636869479E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999293640136313	WITHOUT_CLASSIFICATION	7.063598636869479E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999293640136313	WITHOUT_CLASSIFICATION	7.063598636869479E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999293640136313	WITHOUT_CLASSIFICATION	7.063598636869479E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999293640136313	WITHOUT_CLASSIFICATION	7.063598636869479E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999297416351979	WITHOUT_CLASSIFICATION	7.025836480219806E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999297416351979	WITHOUT_CLASSIFICATION	7.025836480219806E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999297416351979	WITHOUT_CLASSIFICATION	7.025836480219806E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999297416351979	WITHOUT_CLASSIFICATION	7.025836480219806E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999297416351979	WITHOUT_CLASSIFICATION	7.025836480219806E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999297416351979	WITHOUT_CLASSIFICATION	7.025836480219806E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999297416351979	WITHOUT_CLASSIFICATION	7.025836480219806E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999324630054354	WITHOUT_CLASSIFICATION	6.753699456458718E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999324630054354	WITHOUT_CLASSIFICATION	6.753699456458718E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999324630054354	WITHOUT_CLASSIFICATION	6.753699456458718E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999324630054354	WITHOUT_CLASSIFICATION	6.753699456458718E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999653889230213	WITHOUT_CLASSIFICATION	3.461107697873976E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999653889230213	WITHOUT_CLASSIFICATION	3.461107697873976E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999905881909995	WITHOUT_CLASSIFICATION	9.41180900051734E-6	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999936854959302	WITHOUT_CLASSIFICATION	6.314504069838506E-6	TEST
// name	WITHOUT_CLASSIFICATION	0.9999945784878942	WITHOUT_CLASSIFICATION	5.421512105884191E-6	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999955534829158	WITHOUT_CLASSIFICATION	4.446517084277362E-6	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999949374127889	WITHOUT_CLASSIFICATION	5.0625872111890255E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999879657753805	WITHOUT_CLASSIFICATION	1.2034224619436597E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999879657753805	WITHOUT_CLASSIFICATION	1.2034224619436597E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999879657753805	WITHOUT_CLASSIFICATION	1.2034224619436597E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999879657753805	WITHOUT_CLASSIFICATION	1.2034224619436597E-5	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999983478252586	WITHOUT_CLASSIFICATION	1.6521747413955883E-6	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999975526460863	WITHOUT_CLASSIFICATION	2.447353913721989E-6	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999968316263388	WITHOUT_CLASSIFICATION	3.1683736612175215E-6	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999981515611415	WITHOUT_CLASSIFICATION	1.8484388585238216E-6	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.999996702231339	WITHOUT_CLASSIFICATION	3.2977686610971523E-6	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999991985347103	WITHOUT_CLASSIFICATION	8.014652896832235E-7	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999907010159415	WITHOUT_CLASSIFICATION	9.298984058592518E-6	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999996181573988	WITHOUT_CLASSIFICATION	3.818426011789749E-7	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999978822505	WITHOUT_CLASSIFICATION	2.117749587763349E-9	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999953265527183	WITHOUT_CLASSIFICATION	4.673447281725697E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999995472521719	WITHOUT_CLASSIFICATION	4.5274782816667505E-7	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999860323505593	WITHOUT_CLASSIFICATION	1.3967649440790193E-5	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999993022974445	WITHOUT_CLASSIFICATION	6.977025554211002E-7	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999924372944131	WITHOUT_CLASSIFICATION	7.562705586913286E-6	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999977669835315	WITHOUT_CLASSIFICATION	2.233016468453858E-6	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999994954589875	WITHOUT_CLASSIFICATION	5.045410124040862E-7	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999997315282267	WITHOUT_CLASSIFICATION	2.6847177331522304E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999879657753805	WITHOUT_CLASSIFICATION	1.2034224619436597E-5	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987917820019	WITHOUT_CLASSIFICATION	1.2082179980979522E-6	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999989983235901	WITHOUT_CLASSIFICATION	1.0016764098588996E-6	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999992017440037	WITHOUT_CLASSIFICATION	7.98255996308158E-6	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999830214399795	WITHOUT_CLASSIFICATION	1.6978560020384442E-5	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999958877199308	WITHOUT_CLASSIFICATION	4.1122800693298965E-6	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999917185006506	WITHOUT_CLASSIFICATION	8.28149934940399E-6	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.999997780929689	WITHOUT_CLASSIFICATION	2.219070310848508E-6	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999997209006483	WITHOUT_CLASSIFICATION	2.7909935168437915E-7	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999997308904066	WITHOUT_CLASSIFICATION	2.6910959337820917E-7	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999999788432353	WITHOUT_CLASSIFICATION	2.1156764761799075E-8	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999989736812988	WITHOUT_CLASSIFICATION	1.0263187012923704E-6	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999874928424446	WITHOUT_CLASSIFICATION	1.2507157555491956E-5	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999986931229673	WITHOUT_CLASSIFICATION	1.3068770327136655E-6	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999889395825813	WITHOUT_CLASSIFICATION	1.1060417418648123E-5	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.999960213590732	WITHOUT_CLASSIFICATION	3.978640926801396E-5	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999843612810685	WITHOUT_CLASSIFICATION	1.563871893151953E-5	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999933193625317	WITHOUT_CLASSIFICATION	6.680637468230393E-6	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999997116007737	WITHOUT_CLASSIFICATION	2.8839922620652983E-7	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999208281833959	WITHOUT_CLASSIFICATION	7.917181660413879E-5	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999994121419448	WITHOUT_CLASSIFICATION	5.878580552392286E-7	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999977894920784	WITHOUT_CLASSIFICATION	2.210507921542486E-6	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999502620854546	WITHOUT_CLASSIFICATION	4.973791454545382E-5	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.999989222040521	WITHOUT_CLASSIFICATION	1.0777959479000002E-5	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9998423057294502	WITHOUT_CLASSIFICATION	1.5769427054976762E-4	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999976575599488	WITHOUT_CLASSIFICATION	2.342440051171318E-6	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9999868320072371	WITHOUT_CLASSIFICATION	1.3167992762806381E-5	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999896593288533	WITHOUT_CLASSIFICATION	1.0340671146820146E-5	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999996728581445	WITHOUT_CLASSIFICATION	3.27141855531366E-7	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999984657042412	WITHOUT_CLASSIFICATION	1.5342957588062273E-6	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999980274935106	WITHOUT_CLASSIFICATION	1.9725064894581448E-6	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999969379082345	WITHOUT_CLASSIFICATION	3.0620917654951547E-6	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999960097379683	WITHOUT_CLASSIFICATION	3.99026203172648E-6	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999962520633388	WITHOUT_CLASSIFICATION	3.7479366612342716E-6	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999993360234087	WITHOUT_CLASSIFICATION	6.639765912690806E-7	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999999308071186	WITHOUT_CLASSIFICATION	6.919288143327192E-8	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.999999832175023	WITHOUT_CLASSIFICATION	1.678249769560567E-7	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999985666697009	WITHOUT_CLASSIFICATION	1.4333302991938153E-6	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999995726801564	WITHOUT_CLASSIFICATION	4.2731984371160466E-7	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999997951474306	WITHOUT_CLASSIFICATION	2.0485256931159509E-7	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999885378334581	WITHOUT_CLASSIFICATION	1.1462166541872808E-5	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999994922908931	WITHOUT_CLASSIFICATION	5.077091068255012E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999947967961466	WITHOUT_CLASSIFICATION	5.203203853452739E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999998989250197	WITHOUT_CLASSIFICATION	1.010749802679527E-7	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999937550025418	WITHOUT_CLASSIFICATION	6.24499745813368E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999937550025418	WITHOUT_CLASSIFICATION	6.24499745813368E-6	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999890415410477	WITHOUT_CLASSIFICATION	1.0958458952353724E-5	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999996490678301	WITHOUT_CLASSIFICATION	3.509321698415081E-7	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999877010755249	WITHOUT_CLASSIFICATION	1.2298924475002415E-5	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999993776587188	WITHOUT_CLASSIFICATION	6.223412811621137E-7	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999997764808265	WITHOUT_CLASSIFICATION	2.2351917338878015E-7	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999981958352658	WITHOUT_CLASSIFICATION	1.8041647341917162E-6	TEST
// ???	WITHOUT_CLASSIFICATION	0.9999631908690398	WITHOUT_CLASSIFICATION	3.680913096018649E-5	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999745589424512	WITHOUT_CLASSIFICATION	2.544105754881035E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999947967961466	WITHOUT_CLASSIFICATION	5.203203853452739E-6	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999988176676259	WITHOUT_CLASSIFICATION	1.1823323741949817E-6	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999803812072255	WITHOUT_CLASSIFICATION	1.961879277455178E-5	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999991861765355	WITHOUT_CLASSIFICATION	8.138234645230292E-7	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.999999966416462	WITHOUT_CLASSIFICATION	3.358353786598717E-8	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999969909446594	WITHOUT_CLASSIFICATION	3.0090553405227217E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999972184658495	WITHOUT_CLASSIFICATION	2.7815341505230818E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999972184658495	WITHOUT_CLASSIFICATION	2.7815341505230818E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999972184658495	WITHOUT_CLASSIFICATION	2.7815341505230818E-6	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999995624301812	WITHOUT_CLASSIFICATION	4.3756981879841283E-7	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999960952707829	WITHOUT_CLASSIFICATION	3.904729217086585E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999992933130077	WITHOUT_CLASSIFICATION	7.066869922067199E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999980744322933	WITHOUT_CLASSIFICATION	1.925567706772126E-6	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999999695190349	WITHOUT_CLASSIFICATION	3.0480965040293575E-8	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999930194160143	WITHOUT_CLASSIFICATION	6.980583985707244E-6	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999986740972344	WITHOUT_CLASSIFICATION	1.3259027656582374E-6	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999997355515668	WITHOUT_CLASSIFICATION	2.6444843310316443E-7	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999990231251227	WITHOUT_CLASSIFICATION	9.76874877312537E-6	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999990231251227	WITHOUT_CLASSIFICATION	9.76874877312537E-6	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999723875964027	WITHOUT_CLASSIFICATION	2.7612403597287507E-5	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999989363707797	WITHOUT_CLASSIFICATION	1.063629220211059E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999924318686619	WITHOUT_CLASSIFICATION	7.5681313381218215E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999924318686619	WITHOUT_CLASSIFICATION	7.5681313381218215E-6	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999991475686444	WITHOUT_CLASSIFICATION	8.524313555252272E-7	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999973818835438	WITHOUT_CLASSIFICATION	2.618116456247904E-6	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9998101580459939	WITHOUT_CLASSIFICATION	1.8984195400612114E-4	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999993466262435	WITHOUT_CLASSIFICATION	6.533737565406954E-7	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999917866064556	WITHOUT_CLASSIFICATION	8.213393544493691E-6	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999933664701139	WITHOUT_CLASSIFICATION	6.633529886096223E-6	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999535573130605	WITHOUT_CLASSIFICATION	4.6442686939516155E-5	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999908908295249	WITHOUT_CLASSIFICATION	9.109170475267671E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999948320641143	WITHOUT_CLASSIFICATION	5.167935885592786E-6	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999984370325412	WITHOUT_CLASSIFICATION	1.5629674587575725E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999947967961466	WITHOUT_CLASSIFICATION	5.203203853452739E-6	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999809507859209	WITHOUT_CLASSIFICATION	1.904921407918508E-5	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999980119244284	WITHOUT_CLASSIFICATION	1.9880755716086674E-6	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.999994335650329	WITHOUT_CLASSIFICATION	5.664349671033315E-6	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999990663468064	WITHOUT_CLASSIFICATION	9.336531935778231E-7	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999998004084477	WITHOUT_CLASSIFICATION	1.995915523589424E-7	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999834269784	WITHOUT_CLASSIFICATION	1.657302159994447E-5	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999755616599764	WITHOUT_CLASSIFICATION	2.4438340023738846E-5	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999795561505007	WITHOUT_CLASSIFICATION	2.044384949930413E-5	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999984130986661	WITHOUT_CLASSIFICATION	1.5869013338974353E-6	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999982660916149	WITHOUT_CLASSIFICATION	1.733908385093381E-6	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999992503088772	WITHOUT_CLASSIFICATION	7.496911228880455E-7	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999997073566469	WITHOUT_CLASSIFICATION	2.926433530401808E-7	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999990612455592	WITHOUT_CLASSIFICATION	9.387544408701491E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999789222439162	WITHOUT_CLASSIFICATION	2.107775608382575E-5	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999980371925554	WITHOUT_CLASSIFICATION	1.9628074445782922E-6	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.999997959686132	WITHOUT_CLASSIFICATION	2.0403138679260893E-6	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999976553988348	WITHOUT_CLASSIFICATION	2.344601165155338E-6	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999968602054162	WITHOUT_CLASSIFICATION	3.1397945837318627E-6	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999985408772917	WITHOUT_CLASSIFICATION	1.4591227082855807E-6	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.999999611806204	WITHOUT_CLASSIFICATION	3.8819379596996166E-7	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999984023207013	WITHOUT_CLASSIFICATION	1.5976792987130256E-6	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999991521926708	WITHOUT_CLASSIFICATION	8.478073292764425E-7	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999991482193554	WITHOUT_CLASSIFICATION	8.517806446122725E-7	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.999997659754828	WITHOUT_CLASSIFICATION	2.3402451719799554E-6	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999997387451844	WITHOUT_CLASSIFICATION	2.61254815554329E-7	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999996433652368	WITHOUT_CLASSIFICATION	3.566347632497616E-7	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999954083290314	WITHOUT_CLASSIFICATION	4.591670968555708E-6	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999964376589054	WITHOUT_CLASSIFICATION	3.5623410944263608E-6	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999993870688686	WITHOUT_CLASSIFICATION	6.129311314400215E-7	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999938122280129	WITHOUT_CLASSIFICATION	6.1877719871330185E-6	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999994277496748	WITHOUT_CLASSIFICATION	5.722503252213946E-7	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999980782656529	WITHOUT_CLASSIFICATION	1.92173434707296E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999880074165932	WITHOUT_CLASSIFICATION	1.1992583406859584E-5	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999994251316521	WITHOUT_CLASSIFICATION	5.748683479118551E-7	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999946604711512	WITHOUT_CLASSIFICATION	5.339528848901078E-6	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999825943977944	WITHOUT_CLASSIFICATION	1.7405602205662192E-5	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984318787277	WITHOUT_CLASSIFICATION	1.5681212721960188E-6	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999962456452919	WITHOUT_CLASSIFICATION	3.754354708172964E-6	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999988153899368	WITHOUT_CLASSIFICATION	1.184610063230136E-6	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999975379971074	WITHOUT_CLASSIFICATION	2.462002892534681E-6	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999997086515836	WITHOUT_CLASSIFICATION	2.9134841646468195E-7	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.999995820407269	WITHOUT_CLASSIFICATION	4.179592731057833E-6	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999986023119782	WITHOUT_CLASSIFICATION	1.3976880217710668E-6	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999978028482804	WITHOUT_CLASSIFICATION	2.1971517194436523E-6	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999941561858678	WITHOUT_CLASSIFICATION	5.84381413216486E-6	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999912763598025	WITHOUT_CLASSIFICATION	8.7236401975523E-6	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999960623917626	WITHOUT_CLASSIFICATION	3.937608237366651E-6	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999979087087587	WITHOUT_CLASSIFICATION	2.091291241333122E-6	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999988498347899	WITHOUT_CLASSIFICATION	1.1501652099819773E-6	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999994406841073	WITHOUT_CLASSIFICATION	5.593158926526227E-7	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999993769063821	WITHOUT_CLASSIFICATION	6.230936179684767E-7	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999997178651882	WITHOUT_CLASSIFICATION	2.8213481188082197E-7	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999994289277654	WITHOUT_CLASSIFICATION	5.7107223465912E-7	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999970000604951	WITHOUT_CLASSIFICATION	2.9999395048736603E-6	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999981816211777	WITHOUT_CLASSIFICATION	1.8183788223155484E-6	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999997084429585	WITHOUT_CLASSIFICATION	2.91557041456255E-7	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999489791375028	WITHOUT_CLASSIFICATION	5.102086249714205E-5	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999998205745346	WITHOUT_CLASSIFICATION	1.7942546545254964E-7	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999966221655744	WITHOUT_CLASSIFICATION	3.3778344255511355E-6	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999977451269366	WITHOUT_CLASSIFICATION	2.2548730634345474E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999958483756357	WITHOUT_CLASSIFICATION	4.151624364311787E-5	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999958483756357	WITHOUT_CLASSIFICATION	4.151624364311787E-5	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999710539357185	WITHOUT_CLASSIFICATION	2.89460642814674E-5	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999710539357185	WITHOUT_CLASSIFICATION	2.89460642814674E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999792271045721	WITHOUT_CLASSIFICATION	2.077289542789153E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999792271045721	WITHOUT_CLASSIFICATION	2.077289542789153E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999728071993	WITHOUT_CLASSIFICATION	2.719280069997958E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999728071993	WITHOUT_CLASSIFICATION	2.719280069997958E-5	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999984253418632	WITHOUT_CLASSIFICATION	1.574658136707063E-6	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999949383334142	WITHOUT_CLASSIFICATION	5.061666585698255E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999951424714009	WITHOUT_CLASSIFICATION	4.857528599158002E-6	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999992278630847	WITHOUT_CLASSIFICATION	7.72136915262343E-7	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999989949370806	WITHOUT_CLASSIFICATION	1.005062919423008E-6	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999991935144222	WITHOUT_CLASSIFICATION	8.06485577702008E-7	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999687502067934	WITHOUT_CLASSIFICATION	3.124979320665814E-5	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999973030094338	WITHOUT_CLASSIFICATION	2.6969905662288573E-6	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999971943836274	WITHOUT_CLASSIFICATION	2.8056163726300146E-6	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999916144663478	WITHOUT_CLASSIFICATION	8.385533652272315E-6	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999989218102273	WITHOUT_CLASSIFICATION	1.078189772630405E-6	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999965582676253	WITHOUT_CLASSIFICATION	3.4417323745198723E-6	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999781177955704	WITHOUT_CLASSIFICATION	2.1882204429506595E-5	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999987861896074	WITHOUT_CLASSIFICATION	1.2138103926051518E-6	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999974171340765	WITHOUT_CLASSIFICATION	2.5828659234291882E-6	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999735496067609	WITHOUT_CLASSIFICATION	2.645039323909654E-5	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999996907433785	WITHOUT_CLASSIFICATION	3.0925662157993834E-7	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999941338794893	WITHOUT_CLASSIFICATION	5.8661205106752205E-6	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.999997892963866	WITHOUT_CLASSIFICATION	2.1070361340598263E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999941826545004	WITHOUT_CLASSIFICATION	5.817345499658232E-6	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999979059309051	WITHOUT_CLASSIFICATION	2.094069094909026E-6	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999988031127593	WITHOUT_CLASSIFICATION	1.1968872406086893E-6	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999935673538927	WITHOUT_CLASSIFICATION	6.4326461073771614E-6	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.999998233636079	WITHOUT_CLASSIFICATION	1.7663639210201872E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999991331864934	WITHOUT_CLASSIFICATION	8.66813506620751E-7	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999999055955909	WITHOUT_CLASSIFICATION	9.440440911375035E-7	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999953851895165	WITHOUT_CLASSIFICATION	4.614810483507463E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999922437101185	WITHOUT_CLASSIFICATION	7.756289881426246E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999922437101185	WITHOUT_CLASSIFICATION	7.756289881426246E-6	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999971449678662	WITHOUT_CLASSIFICATION	2.8550321337841706E-6	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999949778522086	WITHOUT_CLASSIFICATION	5.022147791363611E-6	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999935229514354	WITHOUT_CLASSIFICATION	6.477048564603401E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999999774705067	WITHOUT_CLASSIFICATION	2.2529493302043867E-8	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999962976933464	WITHOUT_CLASSIFICATION	3.702306653575017E-6	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999632072299659	WITHOUT_CLASSIFICATION	3.679277003407786E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999950568670146	WITHOUT_CLASSIFICATION	4.943132985422972E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999950568670146	WITHOUT_CLASSIFICATION	4.943132985422972E-6	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999840569561504	WITHOUT_CLASSIFICATION	1.5943043849536784E-5	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9999914310779084	WITHOUT_CLASSIFICATION	8.568922091571125E-6	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999767706560162	WITHOUT_CLASSIFICATION	2.3229343983811386E-5	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999767706560162	WITHOUT_CLASSIFICATION	2.3229343983811386E-5	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999991939353561	WITHOUT_CLASSIFICATION	8.060646439778472E-7	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999989658461094	WITHOUT_CLASSIFICATION	1.034153890599553E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999989658461094	WITHOUT_CLASSIFICATION	1.034153890599553E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999231078141648	WITHOUT_CLASSIFICATION	7.68921858351898E-5	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999231078141648	WITHOUT_CLASSIFICATION	7.68921858351898E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999782407893592	WITHOUT_CLASSIFICATION	2.1759210640871966E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999782407893592	WITHOUT_CLASSIFICATION	2.1759210640871966E-5	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9999710911617008	WITHOUT_CLASSIFICATION	2.8908838299113193E-5	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999913045431273	WITHOUT_CLASSIFICATION	8.695456872646154E-6	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999998354964175	WITHOUT_CLASSIFICATION	1.645035824524913E-7	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999982910192163	WITHOUT_CLASSIFICATION	1.7089807836827373E-6	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999998186364328	WITHOUT_CLASSIFICATION	1.8136356716062225E-7	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999991241248667	WITHOUT_CLASSIFICATION	8.758751333233359E-7	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999989481257648	WITHOUT_CLASSIFICATION	1.0518742350705005E-6	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999974047175	WITHOUT_CLASSIFICATION	2.595282499963831E-6	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999989481257648	WITHOUT_CLASSIFICATION	1.0518742350705005E-6	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999893851816861	WITHOUT_CLASSIFICATION	1.061481831381449E-5	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999985040766054	WITHOUT_CLASSIFICATION	1.4959233946754386E-6	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999839065693913	WITHOUT_CLASSIFICATION	1.6093430608686756E-5	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999987452817303	WITHOUT_CLASSIFICATION	1.254718269772077E-6	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999956282715781	WITHOUT_CLASSIFICATION	4.371728421962421E-6	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999983234118853	WITHOUT_CLASSIFICATION	1.6765881146182445E-6	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999982057744091	WITHOUT_CLASSIFICATION	1.7942255908942673E-6	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999747959707034	WITHOUT_CLASSIFICATION	2.520402929671596E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999998928937761	WITHOUT_CLASSIFICATION	1.0710622390538786E-6	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999992595618351	WITHOUT_CLASSIFICATION	7.404381649250944E-7	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999954162025304	WITHOUT_CLASSIFICATION	4.583797469621271E-6	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999890378904241	WITHOUT_CLASSIFICATION	1.0962109575956908E-5	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999905235521728	WITHOUT_CLASSIFICATION	9.476447827130104E-6	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999985811232548	WITHOUT_CLASSIFICATION	1.418876745223992E-6	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999923024037806	WITHOUT_CLASSIFICATION	7.697596219406358E-6	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999980399495891	WITHOUT_CLASSIFICATION	1.9600504108686894E-6	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999979498475129	WITHOUT_CLASSIFICATION	2.050152487030934E-6	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999997527977131	WITHOUT_CLASSIFICATION	2.47202286864449E-7	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999901045062322	WITHOUT_CLASSIFICATION	9.895493767797648E-6	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999779248456704	WITHOUT_CLASSIFICATION	2.2075154329633872E-5	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999992415380159	WITHOUT_CLASSIFICATION	7.584619841316034E-7	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999978065018282	WITHOUT_CLASSIFICATION	2.193498171727577E-6	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999993795173568	WITHOUT_CLASSIFICATION	6.204826432233105E-7	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999991821481246	WITHOUT_CLASSIFICATION	8.178518755664615E-7	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999914608836064	WITHOUT_CLASSIFICATION	8.539116393677608E-6	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999978111315637	WITHOUT_CLASSIFICATION	2.1888684363655423E-6	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999982158617408	WITHOUT_CLASSIFICATION	1.7841382592801525E-6	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999970405443328	WITHOUT_CLASSIFICATION	2.9594556672213077E-6	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999984196299814	WITHOUT_CLASSIFICATION	1.580370018728355E-6	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999963669565523	WITHOUT_CLASSIFICATION	3.63304344782467E-6	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.999997603618874	WITHOUT_CLASSIFICATION	2.3963811259092243E-6	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999997037886517	WITHOUT_CLASSIFICATION	2.9621134832490876E-7	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999992203334692	WITHOUT_CLASSIFICATION	7.796665307636034E-7	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999970213215633	WITHOUT_CLASSIFICATION	2.9786784366088215E-6	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999970457398358	WITHOUT_CLASSIFICATION	2.9542601640618505E-6	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999964437494794	WITHOUT_CLASSIFICATION	3.5562505207070254E-6	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999942892216467	WITHOUT_CLASSIFICATION	5.710778353372594E-6	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999995529145642	WITHOUT_CLASSIFICATION	4.4708543568474776E-7	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999993231206098	WITHOUT_CLASSIFICATION	6.768793902356598E-7	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999974368429639	WITHOUT_CLASSIFICATION	2.5631570360533155E-6	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.999996202802105	WITHOUT_CLASSIFICATION	3.7971978948933695E-6	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999989229569417	WITHOUT_CLASSIFICATION	1.077043058212784E-6	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999989228433493	WITHOUT_CLASSIFICATION	1.0771566507497443E-6	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.999999093122582	WITHOUT_CLASSIFICATION	9.068774181116866E-7	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999996177611243	WITHOUT_CLASSIFICATION	3.8223887564885356E-7	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999991207821887	WITHOUT_CLASSIFICATION	8.792178113697298E-7	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999975589084493	WITHOUT_CLASSIFICATION	2.4410915505630193E-6	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999989862104443	WITHOUT_CLASSIFICATION	1.0137895557140755E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999997818761059	WITHOUT_CLASSIFICATION	2.181238940931763E-7	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.999993655230096	WITHOUT_CLASSIFICATION	6.344769904085071E-6	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999937782736057	WITHOUT_CLASSIFICATION	6.221726394332171E-6	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999998496441369	WITHOUT_CLASSIFICATION	1.503558632018232E-7	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999968325233212	WITHOUT_CLASSIFICATION	3.1674766788174165E-6	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999998145285621	WITHOUT_CLASSIFICATION	1.8547143782336987E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.999998794505037	WITHOUT_CLASSIFICATION	1.205494962936014E-6	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.999998794505037	WITHOUT_CLASSIFICATION	1.205494962936014E-6	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999998485286162	WITHOUT_CLASSIFICATION	1.5147138381267407E-7	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999998508892096	WITHOUT_CLASSIFICATION	1.4911079040443899E-7	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999987954806274	WITHOUT_CLASSIFICATION	1.2045193725444961E-6	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999996135622347	WITHOUT_CLASSIFICATION	3.8643776525171146E-7	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999999130734075	WITHOUT_CLASSIFICATION	8.692659250508601E-8	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999956926664963	WITHOUT_CLASSIFICATION	4.307333503683829E-6	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999996222198494	WITHOUT_CLASSIFICATION	3.777801505236883E-7	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999988739727089	WITHOUT_CLASSIFICATION	1.1260272910954192E-6	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999918528639222	WITHOUT_CLASSIFICATION	8.147136077760192E-6	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999902841703184	WITHOUT_CLASSIFICATION	9.715829681675875E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999990251120401	WITHOUT_CLASSIFICATION	9.748879599226315E-7	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999990251120401	WITHOUT_CLASSIFICATION	9.748879599226315E-7	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999999987052341	WITHOUT_CLASSIFICATION	1.2947658433208786E-9	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999996958118731	WITHOUT_CLASSIFICATION	3.0418812683616817E-7	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999816314853238	WITHOUT_CLASSIFICATION	1.836851467618442E-5	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999985104556066	WITHOUT_CLASSIFICATION	1.489544393382017E-6	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999977829429126	WITHOUT_CLASSIFICATION	2.2170570872937517E-6	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999993629016314	WITHOUT_CLASSIFICATION	6.370983685825829E-7	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999964229823066	WITHOUT_CLASSIFICATION	3.577017693455554E-6	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999982811110052	WITHOUT_CLASSIFICATION	1.7188889947924602E-6	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999978883150105	WITHOUT_CLASSIFICATION	2.1116849895323523E-6	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999994337673224	WITHOUT_CLASSIFICATION	5.662326776182156E-7	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999979473556033	WITHOUT_CLASSIFICATION	2.0526443967251984E-6	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999998569778616	WITHOUT_CLASSIFICATION	1.4302213842099768E-7	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999975241150824	WITHOUT_CLASSIFICATION	2.4758849176069157E-6	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999975241150824	WITHOUT_CLASSIFICATION	2.4758849176069157E-6	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999987721018527	WITHOUT_CLASSIFICATION	1.2278981472562233E-6	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999981891649959	WITHOUT_CLASSIFICATION	1.8108350041147903E-6	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999973024726441	WITHOUT_CLASSIFICATION	2.6975273558510714E-6	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999890531360018	WITHOUT_CLASSIFICATION	1.094686399819663E-5	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999987481650464	WITHOUT_CLASSIFICATION	1.2518349535588733E-6	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999944081579161	WITHOUT_CLASSIFICATION	5.591842083930808E-6	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999969241364739	WITHOUT_CLASSIFICATION	3.0758635260616887E-6	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999967138633323	WITHOUT_CLASSIFICATION	3.2861366677343372E-6	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999968737279117	WITHOUT_CLASSIFICATION	3.1262720883294247E-6	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999970562715786	WITHOUT_CLASSIFICATION	2.9437284213364914E-6	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999816314853238	WITHOUT_CLASSIFICATION	1.836851467618442E-5	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999999319865958	WITHOUT_CLASSIFICATION	6.801340425608418E-8	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999986641781721	WITHOUT_CLASSIFICATION	1.3358218279816424E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999984397269077	WITHOUT_CLASSIFICATION	1.5602730922932474E-6	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999997345359255	WITHOUT_CLASSIFICATION	2.6546407453119406E-7	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.99999793108575	WITHOUT_CLASSIFICATION	2.0689142500082675E-6	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999769450004	WITHOUT_CLASSIFICATION	2.3054999561951502E-8	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999988777149553	WITHOUT_CLASSIFICATION	1.1222850447388611E-6	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999986887205469	WITHOUT_CLASSIFICATION	1.3112794531264495E-6	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999994640968247	WITHOUT_CLASSIFICATION	5.359031752932278E-7	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999986150159534	WITHOUT_CLASSIFICATION	1.3849840465608277E-6	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999974068097475	WITHOUT_CLASSIFICATION	2.5931902526531312E-6	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999999715357363	WITHOUT_CLASSIFICATION	2.846426375783627E-8	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999977809980488	WITHOUT_CLASSIFICATION	2.219001951105224E-6	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999991351343833	WITHOUT_CLASSIFICATION	8.6486561672063E-7	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.999999317962232	WITHOUT_CLASSIFICATION	6.820377681023083E-7	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999995186387794	WITHOUT_CLASSIFICATION	4.81361220572596E-7	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999928458048337	WITHOUT_CLASSIFICATION	7.154195166370786E-6	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999962522280843	WITHOUT_CLASSIFICATION	3.7477719157527936E-6	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999918675251502	WITHOUT_CLASSIFICATION	8.132474849661017E-6	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.99999659006853	WITHOUT_CLASSIFICATION	3.4099314699530496E-6	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.999999937381531	WITHOUT_CLASSIFICATION	6.261846895336122E-8	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999986811418129	WITHOUT_CLASSIFICATION	1.3188581870856264E-6	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999990039580215	WITHOUT_CLASSIFICATION	9.960419785213461E-7	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999979389624513	WITHOUT_CLASSIFICATION	2.0610375487601118E-6	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999965082749313	WITHOUT_CLASSIFICATION	3.4917250688546154E-6	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999949360932961	WITHOUT_CLASSIFICATION	5.0639067038003E-6	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999699496302868	WITHOUT_CLASSIFICATION	3.0050369713109474E-5	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999976293114095	WITHOUT_CLASSIFICATION	2.370688590518486E-6	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.999981020625959	WITHOUT_CLASSIFICATION	1.8979374040999897E-5	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999997499817185	WITHOUT_CLASSIFICATION	2.5001828157199105E-7	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999396188595683	WITHOUT_CLASSIFICATION	6.038114043178097E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999396188595683	WITHOUT_CLASSIFICATION	6.038114043178097E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999977394514237	WITHOUT_CLASSIFICATION	2.260548576267883E-6	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999978161768216	WITHOUT_CLASSIFICATION	2.1838231783989366E-6	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999906107042034	WITHOUT_CLASSIFICATION	9.389295796657006E-6	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999980611019029	WITHOUT_CLASSIFICATION	1.9388980970011147E-6	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.999999023476688	WITHOUT_CLASSIFICATION	9.76523311984806E-7	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.999994422763498	WITHOUT_CLASSIFICATION	5.577236501967326E-6	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999947967961466	WITHOUT_CLASSIFICATION	5.203203853452739E-6	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999961316764386	WITHOUT_CLASSIFICATION	3.868323561394646E-6	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999982348403665	WITHOUT_CLASSIFICATION	1.7651596333804017E-6	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.99999694770125	WITHOUT_CLASSIFICATION	3.052298750008926E-6	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999991883763619	WITHOUT_CLASSIFICATION	8.116236380785222E-7	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999973406371512	WITHOUT_CLASSIFICATION	2.659362848871799E-6	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.999982923289394	WITHOUT_CLASSIFICATION	1.7076710605961996E-5	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999975379971074	WITHOUT_CLASSIFICATION	2.462002892534681E-6	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999996578650717	WITHOUT_CLASSIFICATION	3.4213492836821077E-7	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999868476820157	WITHOUT_CLASSIFICATION	1.3152317984265733E-5	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999587716133	WITHOUT_CLASSIFICATION	4.1228386640326925E-8	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999951704351933	WITHOUT_CLASSIFICATION	4.8295648067323E-6	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.999998325673435	WITHOUT_CLASSIFICATION	1.674326564913296E-6	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.999997303704756	WITHOUT_CLASSIFICATION	2.6962952440295805E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999386536065487	WITHOUT_CLASSIFICATION	6.134639345132613E-5	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999386536065487	WITHOUT_CLASSIFICATION	6.134639345132613E-5	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999920444316098	WITHOUT_CLASSIFICATION	7.955568390233774E-6	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.999999661149955	WITHOUT_CLASSIFICATION	3.3885004500991187E-7	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.999999496628534	WITHOUT_CLASSIFICATION	5.033714658466453E-7	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999889032389602	WITHOUT_CLASSIFICATION	1.1096761039728102E-5	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999995431750273	WITHOUT_CLASSIFICATION	4.568249727312715E-7	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999995069888089	WITHOUT_CLASSIFICATION	4.930111911088108E-7	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999995949184889	WITHOUT_CLASSIFICATION	4.0508151117265835E-7	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999994871255933	WITHOUT_CLASSIFICATION	5.128744067426486E-7	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999779024970789	WITHOUT_CLASSIFICATION	2.209750292113502E-5	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999998426768085	WITHOUT_CLASSIFICATION	1.573231915370744E-7	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999793272496973	WITHOUT_CLASSIFICATION	2.0672750302736077E-5	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999991826739532	WITHOUT_CLASSIFICATION	8.173260467814342E-7	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999992231753789	WITHOUT_CLASSIFICATION	7.768246210478934E-7	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999991043519406	WITHOUT_CLASSIFICATION	8.956480593449126E-7	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999983306629464	WITHOUT_CLASSIFICATION	1.669337053630777E-6	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999964306961142	WITHOUT_CLASSIFICATION	3.5693038859321545E-6	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999982475476499	WITHOUT_CLASSIFICATION	1.7524523501762226E-6	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.999998175318632	WITHOUT_CLASSIFICATION	1.824681367922575E-6	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999737562189	WITHOUT_CLASSIFICATION	2.624378107709927E-8	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999983522767658	WITHOUT_CLASSIFICATION	1.6477232341047002E-6	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999974582413619	WITHOUT_CLASSIFICATION	2.5417586380650285E-6	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999971565938893	WITHOUT_CLASSIFICATION	2.843406110574481E-6	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999947888728847	WITHOUT_CLASSIFICATION	5.2111271152614005E-6	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999977149720798	WITHOUT_CLASSIFICATION	2.28502792020198E-6	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999979117345758	WITHOUT_CLASSIFICATION	2.0882654242761873E-6	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.999997664139288	WITHOUT_CLASSIFICATION	2.3358607119872214E-6	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999791937046104	WITHOUT_CLASSIFICATION	2.08062953896796E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999957978655151	WITHOUT_CLASSIFICATION	4.202134484920081E-6	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999992536381956	WITHOUT_CLASSIFICATION	7.463618044077401E-7	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.999999208232196	WITHOUT_CLASSIFICATION	7.917678040259972E-7	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999977001949145	WITHOUT_CLASSIFICATION	2.2998050855980698E-6	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999869781266445	WITHOUT_CLASSIFICATION	1.3021873355400164E-5	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999991253400125	WITHOUT_CLASSIFICATION	8.746599875357368E-7	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.9999742885753097	WITHOUT_CLASSIFICATION	2.571142469025347E-5	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999989178826757	WITHOUT_CLASSIFICATION	1.0821173242617753E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.999999983294562	WITHOUT_CLASSIFICATION	1.670543798155717E-8	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999645334955	WITHOUT_CLASSIFICATION	3.5466504570503103E-8	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999977978048759	WITHOUT_CLASSIFICATION	2.2021951241822E-6	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.999996320182307	WITHOUT_CLASSIFICATION	3.6798176929707067E-6	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999923658092534	WITHOUT_CLASSIFICATION	7.634190746530067E-6	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999975407945039	WITHOUT_CLASSIFICATION	2.459205496243754E-6	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999913974790745	WITHOUT_CLASSIFICATION	8.602520925501055E-6	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.999990997277744	WITHOUT_CLASSIFICATION	9.002722255949155E-6	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999895778343655	WITHOUT_CLASSIFICATION	1.0422165634464548E-5	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999932341211265	WITHOUT_CLASSIFICATION	6.765878873510331E-6	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999895778343655	WITHOUT_CLASSIFICATION	1.0422165634464548E-5	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999490394702	WITHOUT_CLASSIFICATION	5.0960529868718136E-8	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9999999221279456	WITHOUT_CLASSIFICATION	7.787205441506901E-8	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999974102525501	WITHOUT_CLASSIFICATION	2.5897474499337852E-6	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9999835299320574	WITHOUT_CLASSIFICATION	1.647006794262493E-5	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999919407686813	WITHOUT_CLASSIFICATION	8.059231318716782E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999978360801611	WITHOUT_CLASSIFICATION	2.163919838792689E-6	TEST
// write	WITHOUT_CLASSIFICATION	0.9999890750653538	WITHOUT_CLASSIFICATION	1.0924934646153425E-5	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999997736138371	WITHOUT_CLASSIFICATION	2.2638616286794585E-7	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999998422867453	WITHOUT_CLASSIFICATION	1.5771325472067845E-7	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.999996575031719	WITHOUT_CLASSIFICATION	3.4249682809703092E-6	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999997094004955	WITHOUT_CLASSIFICATION	2.905995044491275E-7	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999421478434506	WITHOUT_CLASSIFICATION	5.785215654930876E-5	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999998013074342	WITHOUT_CLASSIFICATION	1.98692565872948E-7	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999994155792956	WITHOUT_CLASSIFICATION	5.844207044036257E-7	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999943431134288	WITHOUT_CLASSIFICATION	5.656886571193128E-6	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9999967242715511	WITHOUT_CLASSIFICATION	3.2757284489108913E-6	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999646352411	WITHOUT_CLASSIFICATION	3.536475891985445E-8	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999972910215115	WITHOUT_CLASSIFICATION	2.7089784885981896E-6	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999520805317078	WITHOUT_CLASSIFICATION	4.7919468292253316E-5	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999867923328051	WITHOUT_CLASSIFICATION	1.320766719488797E-5	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999997729481572	WITHOUT_CLASSIFICATION	2.2705184275903183E-7	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999926548698612	WITHOUT_CLASSIFICATION	7.345130138897539E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999896284591668	WITHOUT_CLASSIFICATION	1.0371540833183245E-5	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999971868059908	WITHOUT_CLASSIFICATION	2.8131940092638976E-6	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999913392363918	WITHOUT_CLASSIFICATION	8.660763608204195E-6	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999990551084798	WITHOUT_CLASSIFICATION	9.448915201530505E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999983010443211	WITHOUT_CLASSIFICATION	1.698955678875187E-6	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999975778327528	WITHOUT_CLASSIFICATION	2.4221672471985006E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999995472521719	WITHOUT_CLASSIFICATION	4.5274782816667505E-7	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999999228837017	WITHOUT_CLASSIFICATION	7.711629834590508E-8	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999900507048444	WITHOUT_CLASSIFICATION	9.949295155570192E-6	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999897145463272	WITHOUT_CLASSIFICATION	1.0285453672735649E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999911024053459	WITHOUT_CLASSIFICATION	8.897594654066336E-6	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999951267977698	WITHOUT_CLASSIFICATION	4.8732022302383805E-6	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999995828469284	WITHOUT_CLASSIFICATION	4.1715307155823555E-7	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999982752115435	WITHOUT_CLASSIFICATION	1.724788456450521E-6	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999995645259367	WITHOUT_CLASSIFICATION	4.3547406320826125E-7	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999994845342163	WITHOUT_CLASSIFICATION	5.154657836441289E-7	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999986136823235	WITHOUT_CLASSIFICATION	1.3863176766081613E-6	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999304287189122	WITHOUT_CLASSIFICATION	6.95712810876966E-5	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999658473885	WITHOUT_CLASSIFICATION	3.415261138493869E-8	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999987854123586	WITHOUT_CLASSIFICATION	1.2145876412930083E-6	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999994138316549	WITHOUT_CLASSIFICATION	5.861683450733194E-7	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999823495941258	WITHOUT_CLASSIFICATION	1.7650405874216877E-5	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999823495941258	WITHOUT_CLASSIFICATION	1.7650405874216877E-5	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999494930541375	WITHOUT_CLASSIFICATION	5.050694586237425E-5	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999986720286168	WITHOUT_CLASSIFICATION	1.327971383264532E-6	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999998098474238	WITHOUT_CLASSIFICATION	1.9015257625991242E-7	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999998650831143	WITHOUT_CLASSIFICATION	1.3491688569984813E-7	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999670010621	WITHOUT_CLASSIFICATION	3.299893784907958E-8	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999991555375071	WITHOUT_CLASSIFICATION	8.444624927941769E-7	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999996661443369	WITHOUT_CLASSIFICATION	3.338556631415708E-7	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999972568247469	WITHOUT_CLASSIFICATION	2.743175253103564E-6	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999969813303087	WITHOUT_CLASSIFICATION	3.0186696914108955E-6	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999995823933403	WITHOUT_CLASSIFICATION	4.1760665960267347E-7	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999998606620617	WITHOUT_CLASSIFICATION	1.3933793838601995E-7	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999727254202	WITHOUT_CLASSIFICATION	2.727457977002043E-8	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999996989068564	WITHOUT_CLASSIFICATION	3.010931435335552E-7	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999994075791602	WITHOUT_CLASSIFICATION	5.92420839916963E-7	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999997625229964	WITHOUT_CLASSIFICATION	2.3747700357590256E-7	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999975819974238	WITHOUT_CLASSIFICATION	2.4180025761603476E-6	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999976267953391	WITHOUT_CLASSIFICATION	2.3732046609717746E-6	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999982569266723	WITHOUT_CLASSIFICATION	1.7430733277095807E-6	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999978907821404	WITHOUT_CLASSIFICATION	2.1092178596203645E-6	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999986484694866	WITHOUT_CLASSIFICATION	1.3515305133881888E-6	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999736817847661	WITHOUT_CLASSIFICATION	2.631821523392305E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999938796533878	WITHOUT_CLASSIFICATION	6.120346612082154E-6	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999998651221436	WITHOUT_CLASSIFICATION	1.3487785649436163E-7	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999994384749732	WITHOUT_CLASSIFICATION	5.61525026853929E-7	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999986176337096	WITHOUT_CLASSIFICATION	1.3823662904094513E-6	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999998979688844	WITHOUT_CLASSIFICATION	1.0203111552073264E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999996682768847	WITHOUT_CLASSIFICATION	3.3172311534659236E-7	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999995850450889	WITHOUT_CLASSIFICATION	4.1495491105341773E-7	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999979008804724	WITHOUT_CLASSIFICATION	2.0991195276286934E-6	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999976106551496	WITHOUT_CLASSIFICATION	2.389344850534311E-6	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999997175663976	WITHOUT_CLASSIFICATION	2.824336024199498E-7	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999999193190985	WITHOUT_CLASSIFICATION	8.068090156415637E-8	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999998926509345	WITHOUT_CLASSIFICATION	1.0734906562061196E-7	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999984471769289	WITHOUT_CLASSIFICATION	1.5528230710529393E-6	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.999999420207066	WITHOUT_CLASSIFICATION	5.797929340071971E-7	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999881324001	WITHOUT_CLASSIFICATION	1.1867599963951863E-8	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999993120077801	WITHOUT_CLASSIFICATION	6.879922199090428E-6	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999843774058282	WITHOUT_CLASSIFICATION	1.5622594171809444E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999889854349728	WITHOUT_CLASSIFICATION	1.1014565027137838E-5	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999931359016299	WITHOUT_CLASSIFICATION	6.864098370153131E-6	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999925908256371	WITHOUT_CLASSIFICATION	7.409174362870408E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999991926012257	WITHOUT_CLASSIFICATION	8.073987742945318E-7	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999966986588751	WITHOUT_CLASSIFICATION	3.301341124920647E-6	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999293205089	WITHOUT_CLASSIFICATION	7.067949118099502E-8	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999983893249214	WITHOUT_CLASSIFICATION	1.6106750786799812E-6	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999993262742152	WITHOUT_CLASSIFICATION	6.737257849306083E-7	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999997261882609	WITHOUT_CLASSIFICATION	2.738117389984348E-7	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999941348653802	WITHOUT_CLASSIFICATION	5.8651346198057E-6	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9999409140162919	WITHOUT_CLASSIFICATION	5.908598370812768E-5	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999897608632599	WITHOUT_CLASSIFICATION	1.0239136740203448E-5	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999998464548696	WITHOUT_CLASSIFICATION	1.5354513030489415E-7	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999980768807544	WITHOUT_CLASSIFICATION	1.9231192456548616E-6	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.999998942771656	WITHOUT_CLASSIFICATION	1.0572283439625873E-6	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999991413376832	WITHOUT_CLASSIFICATION	8.586623167564033E-7	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999981105876392	WITHOUT_CLASSIFICATION	1.889412360819585E-6	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999998522616875	WITHOUT_CLASSIFICATION	1.4773831257687784E-7	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999990391700411	WITHOUT_CLASSIFICATION	9.608299589706108E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999995015728265	WITHOUT_CLASSIFICATION	4.984271735221556E-7	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999989797784621	WITHOUT_CLASSIFICATION	1.0202215379145132E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999980961043502	WITHOUT_CLASSIFICATION	1.9038956498117884E-6	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.999996762074649	WITHOUT_CLASSIFICATION	3.237925350914741E-6	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999893903376449	WITHOUT_CLASSIFICATION	1.0609662354981422E-5	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999987041478503	WITHOUT_CLASSIFICATION	1.2958521496501633E-6	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999991310114867	WITHOUT_CLASSIFICATION	8.68988513309591E-7	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999917220141067	WITHOUT_CLASSIFICATION	8.277985893350611E-6	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999833585640981	WITHOUT_CLASSIFICATION	1.664143590189154E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999923804440058	WITHOUT_CLASSIFICATION	7.619555994192107E-6	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999997669641582	WITHOUT_CLASSIFICATION	2.3303584192910062E-7	TEST
// odd	WITHOUT_CLASSIFICATION	0.999969886505225	WITHOUT_CLASSIFICATION	3.0113494775018175E-5	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999927034931572	WITHOUT_CLASSIFICATION	7.296506842880896E-6	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.99999921405844	WITHOUT_CLASSIFICATION	7.859415599318444E-7	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999998355096633	WITHOUT_CLASSIFICATION	1.6449033670903038E-7	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999996846331728	WITHOUT_CLASSIFICATION	3.1536682717358455E-7	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999578994752345	WITHOUT_CLASSIFICATION	4.210052476548352E-5	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9999529820871691	WITHOUT_CLASSIFICATION	4.70179128309905E-5	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9999597731258492	WITHOUT_CLASSIFICATION	4.0226874150877976E-5	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9999538081542498	WITHOUT_CLASSIFICATION	4.619184575015233E-5	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9999527944786315	WITHOUT_CLASSIFICATION	4.7205521368524524E-5	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9999513727268449	WITHOUT_CLASSIFICATION	4.862727315507455E-5	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9999511737737338	WITHOUT_CLASSIFICATION	4.882622626622502E-5	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9999511844518664	WITHOUT_CLASSIFICATION	4.881554813366861E-5	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9999511362270146	WITHOUT_CLASSIFICATION	4.886377298547102E-5	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9999566997309973	WITHOUT_CLASSIFICATION	4.330026900270841E-5	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9999512526782836	WITHOUT_CLASSIFICATION	4.8747321716458737E-5	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.9999585351014514	WITHOUT_CLASSIFICATION	4.1464898548653684E-5	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9999595954176442	WITHOUT_CLASSIFICATION	4.040458235569474E-5	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9999590612306223	WITHOUT_CLASSIFICATION	4.0938769377714573E-5	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.999958209914548	WITHOUT_CLASSIFICATION	4.179008545194313E-5	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9999582575275323	WITHOUT_CLASSIFICATION	4.17424724676926E-5	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9999582376446461	WITHOUT_CLASSIFICATION	4.17623553539781E-5	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.999958317857595	WITHOUT_CLASSIFICATION	4.168214240506779E-5	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.9999535204968479	WITHOUT_CLASSIFICATION	4.647950315205755E-5	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9999593276722409	WITHOUT_CLASSIFICATION	4.0672327759030094E-5	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999961620976345	WITHOUT_CLASSIFICATION	3.8379023655088924E-6	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999999278166952	WITHOUT_CLASSIFICATION	7.218330479811152E-8	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.999998332304726	WITHOUT_CLASSIFICATION	1.6676952739957605E-6	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999988350944402	WITHOUT_CLASSIFICATION	1.1649055598113328E-6	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999988803729102	WITHOUT_CLASSIFICATION	1.1196270897710045E-6	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999998033449484	WITHOUT_CLASSIFICATION	1.966550514475001E-7	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999995336954227	WITHOUT_CLASSIFICATION	4.6630457729040426E-7	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999999657993509	WITHOUT_CLASSIFICATION	3.4200648998929364E-8	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999998249070223	WITHOUT_CLASSIFICATION	1.7509297768880549E-7	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.999998166687367	WITHOUT_CLASSIFICATION	1.833312633066797E-6	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9999951038824728	WITHOUT_CLASSIFICATION	4.896117527156307E-6	TEST
// integer division	WITHOUT_CLASSIFICATION	0.999995891238338	WITHOUT_CLASSIFICATION	4.108761662034902E-6	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999992523849236	WITHOUT_CLASSIFICATION	7.476150763025108E-7	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999985368017426	WITHOUT_CLASSIFICATION	1.4631982574162925E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999985368017426	WITHOUT_CLASSIFICATION	1.4631982574162925E-6	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999996147187808	WITHOUT_CLASSIFICATION	3.8528121913419087E-7	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999999456237221	WITHOUT_CLASSIFICATION	5.437627788203523E-8	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.999999961373457	WITHOUT_CLASSIFICATION	3.862654286821792E-8	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999978182546314	WITHOUT_CLASSIFICATION	2.1817453684893763E-6	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999998385053807	WITHOUT_CLASSIFICATION	1.61494619282791E-7	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999998817472087	WITHOUT_CLASSIFICATION	1.1825279138190671E-7	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999886542714044	WITHOUT_CLASSIFICATION	1.1345728595588796E-5	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.999998389271902	WITHOUT_CLASSIFICATION	1.6107280980162437E-6	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999981572289371	WITHOUT_CLASSIFICATION	1.8427710627744336E-6	TEST
// base	WITHOUT_CLASSIFICATION	0.999989964566143	WITHOUT_CLASSIFICATION	1.0035433856968661E-5	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999983743316238	WITHOUT_CLASSIFICATION	1.6256683762783045E-6	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999992871900576	WITHOUT_CLASSIFICATION	7.128099423578167E-7	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9999791821793019	WITHOUT_CLASSIFICATION	2.081782069803058E-5	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999989073829163	WITHOUT_CLASSIFICATION	1.0926170836121674E-6	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999995913158022	WITHOUT_CLASSIFICATION	4.08684197737188E-7	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999397541206747	WITHOUT_CLASSIFICATION	6.024587932516718E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999917185006506	WITHOUT_CLASSIFICATION	8.28149934940399E-6	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999989851767126	WITHOUT_CLASSIFICATION	1.0148232874485472E-6	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999985055917542	WITHOUT_CLASSIFICATION	1.4944082458063258E-6	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.999997450158612	WITHOUT_CLASSIFICATION	2.5498413879142607E-6	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999974671212445	WITHOUT_CLASSIFICATION	2.532878755411637E-6	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999999023223026	WITHOUT_CLASSIFICATION	9.767769748068497E-8	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999795345302709	WITHOUT_CLASSIFICATION	2.046546972907667E-5	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999992003264616	WITHOUT_CLASSIFICATION	7.996735383914926E-7	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999996433882747	WITHOUT_CLASSIFICATION	3.5661172524110425E-7	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999977689256374	WITHOUT_CLASSIFICATION	2.231074362620049E-6	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.99999896975195	WITHOUT_CLASSIFICATION	1.0302480500148738E-6	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999954344575094	WITHOUT_CLASSIFICATION	4.5655424905979844E-6	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999997224650555	WITHOUT_CLASSIFICATION	2.7753494441300327E-7	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999124978008871	WITHOUT_CLASSIFICATION	8.750219911289135E-5	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999934025462183	WITHOUT_CLASSIFICATION	6.597453781810555E-6	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999901412651725	WITHOUT_CLASSIFICATION	9.85873482756235E-6	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999726479236012	WITHOUT_CLASSIFICATION	2.7352076398808258E-5	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999918592197379	WITHOUT_CLASSIFICATION	8.140780262089155E-6	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999971099388145	WITHOUT_CLASSIFICATION	2.8900611855476023E-6	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999919571470168	WITHOUT_CLASSIFICATION	8.042852983178666E-6	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.99998753506865	WITHOUT_CLASSIFICATION	1.2464931350057675E-5	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999968723873999	WITHOUT_CLASSIFICATION	3.1276126001236976E-6	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999999080295143	WITHOUT_CLASSIFICATION	9.197048574455265E-8	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999996603644664	WITHOUT_CLASSIFICATION	3.3963553363999246E-7	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999997770217554	WITHOUT_CLASSIFICATION	2.2297824456250392E-7	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999987538026085	WITHOUT_CLASSIFICATION	1.246197391476474E-6	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999939890427988	WITHOUT_CLASSIFICATION	6.010957201245495E-6	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.999988642717598	WITHOUT_CLASSIFICATION	1.135728240211512E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.999988642717598	WITHOUT_CLASSIFICATION	1.135728240211512E-5	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999987408034869	WITHOUT_CLASSIFICATION	1.2591965130406175E-6	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.999998140379741	WITHOUT_CLASSIFICATION	1.8596202589880806E-6	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999988534473065	WITHOUT_CLASSIFICATION	1.146552693492794E-6	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999898505030316	WITHOUT_CLASSIFICATION	1.014949696831582E-5	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999995528277557	WITHOUT_CLASSIFICATION	4.471722443910569E-7	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999575137884668	WITHOUT_CLASSIFICATION	4.2486211533347594E-5	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999997536218368	WITHOUT_CLASSIFICATION	2.463781632143697E-7	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999999440380168	WITHOUT_CLASSIFICATION	5.5961983150839825E-8	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999988218786906	WITHOUT_CLASSIFICATION	1.1781213093329997E-6	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999983478073222	WITHOUT_CLASSIFICATION	1.652192677694893E-6	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999987487739735	WITHOUT_CLASSIFICATION	1.2512260264217675E-6	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999974186750957	WITHOUT_CLASSIFICATION	2.5813249042186144E-6	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999978896894902	WITHOUT_CLASSIFICATION	2.1103105098178394E-6	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999969216634986	WITHOUT_CLASSIFICATION	3.0783365013135915E-6	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9999978200511459	WITHOUT_CLASSIFICATION	2.1799488540839546E-6	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999936046271565	WITHOUT_CLASSIFICATION	6.39537284351491E-6	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999993010588166	WITHOUT_CLASSIFICATION	6.989411833296612E-7	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999874145740558	WITHOUT_CLASSIFICATION	1.2585425944196923E-5	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999627285804	WITHOUT_CLASSIFICATION	3.7271419531229916E-8	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999962456452919	WITHOUT_CLASSIFICATION	3.754354708172964E-6	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999984695419398	WITHOUT_CLASSIFICATION	1.5304580601234418E-6	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999984695419398	WITHOUT_CLASSIFICATION	1.5304580601234418E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999961197695657	WITHOUT_CLASSIFICATION	3.880230434278728E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999961197695657	WITHOUT_CLASSIFICATION	3.880230434278728E-6	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999995443119473	WITHOUT_CLASSIFICATION	4.556880526885969E-7	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999973287968316	WITHOUT_CLASSIFICATION	2.671203168480171E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999998127591369	WITHOUT_CLASSIFICATION	1.8724086308868992E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999990581822528	WITHOUT_CLASSIFICATION	9.418177472487127E-7	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999998354964175	WITHOUT_CLASSIFICATION	1.645035824524913E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999972130433776	WITHOUT_CLASSIFICATION	2.7869566224295035E-6	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999999704328754	WITHOUT_CLASSIFICATION	2.9567124646310328E-8	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999915356983347	WITHOUT_CLASSIFICATION	8.46430166540495E-6	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999951530558913	WITHOUT_CLASSIFICATION	4.846944108722477E-6	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.999993136481292	WITHOUT_CLASSIFICATION	6.86351870807789E-6	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.999999426546869	WITHOUT_CLASSIFICATION	5.734531310067355E-7	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999964004693918	WITHOUT_CLASSIFICATION	3.599530608218801E-6	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999923233758988	WITHOUT_CLASSIFICATION	7.67662410115442E-6	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999991684533485	WITHOUT_CLASSIFICATION	8.315466515056031E-7	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999994010388839	WITHOUT_CLASSIFICATION	5.989611162110057E-7	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999904085842548	WITHOUT_CLASSIFICATION	9.591415745098496E-6	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999995403834528	WITHOUT_CLASSIFICATION	4.5961654708380004E-7	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.999995669955064	WITHOUT_CLASSIFICATION	4.3300449360696E-6	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.999887782788944	WITHOUT_CLASSIFICATION	1.122172110559578E-4	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999990177159905	WITHOUT_CLASSIFICATION	9.822840095360901E-7	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999848278796644	WITHOUT_CLASSIFICATION	1.5172120335696514E-5	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999984164524295	WITHOUT_CLASSIFICATION	1.583547570505347E-6	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999911159326218	WITHOUT_CLASSIFICATION	8.884067378144403E-6	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999983010443211	WITHOUT_CLASSIFICATION	1.698955678875187E-6	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999991555375071	WITHOUT_CLASSIFICATION	8.444624927941769E-7	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999910253109737	WITHOUT_CLASSIFICATION	8.974689026373442E-6	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.999999991340345	WITHOUT_CLASSIFICATION	8.659655067840982E-9	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.999995518285387	WITHOUT_CLASSIFICATION	4.4817146130185095E-6	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999996306120633	WITHOUT_CLASSIFICATION	3.6938793676332034E-7	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999985758924929	WITHOUT_CLASSIFICATION	1.4241075072182123E-6	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999985758924929	WITHOUT_CLASSIFICATION	1.4241075072182123E-6	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999966250004463	WITHOUT_CLASSIFICATION	3.3749995537093476E-6	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999981413198977	WITHOUT_CLASSIFICATION	1.8586801023090632E-6	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.999999202079049	WITHOUT_CLASSIFICATION	7.979209510668758E-7	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999975676681195	WITHOUT_CLASSIFICATION	2.432331880533775E-6	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999950475669012	WITHOUT_CLASSIFICATION	4.952433098795914E-6	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999988407814695	WITHOUT_CLASSIFICATION	1.1592185305509947E-6	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.999999294586671	WITHOUT_CLASSIFICATION	7.054133289618557E-7	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999998934542216	WITHOUT_CLASSIFICATION	1.065457784724793E-7	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999995861368767	WITHOUT_CLASSIFICATION	4.138631232468859E-7	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999905230958628	WITHOUT_CLASSIFICATION	9.476904137322067E-6	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999969356497344	WITHOUT_CLASSIFICATION	3.0643502657389657E-6	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999942269458558	WITHOUT_CLASSIFICATION	5.773054144160822E-6	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.999997429600404	WITHOUT_CLASSIFICATION	2.5703995959560943E-6	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999992216581948	WITHOUT_CLASSIFICATION	7.783418053530724E-7	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999986117984183	WITHOUT_CLASSIFICATION	1.388201581711805E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999951424714009	WITHOUT_CLASSIFICATION	4.857528599158002E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999998281792238	WITHOUT_CLASSIFICATION	1.7182077619573202E-6	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999995500570524	WITHOUT_CLASSIFICATION	4.4994294751015155E-7	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999982653417192	WITHOUT_CLASSIFICATION	1.7346582808265586E-6	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999998736978163	WITHOUT_CLASSIFICATION	1.2630218372265555E-7	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999994877468737	WITHOUT_CLASSIFICATION	5.122531262927955E-6	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999909943384395	WITHOUT_CLASSIFICATION	9.005661560381305E-6	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.999952846456203	WITHOUT_CLASSIFICATION	4.7153543796947936E-5	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999892197566749	WITHOUT_CLASSIFICATION	1.0780243325097044E-5	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999986581515434	WITHOUT_CLASSIFICATION	1.3418484566191974E-6	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.999998637465033	WITHOUT_CLASSIFICATION	1.362534967080605E-6	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999915475027953	WITHOUT_CLASSIFICATION	8.452497204706367E-6	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999988226228841	WITHOUT_CLASSIFICATION	1.1773771158879826E-6	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999987179496093	WITHOUT_CLASSIFICATION	1.2820503907232308E-6	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999944067877645	WITHOUT_CLASSIFICATION	5.5932122354530945E-6	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999995239784708	WITHOUT_CLASSIFICATION	4.760215292293603E-7	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.999987997285845	WITHOUT_CLASSIFICATION	1.200271415504873E-5	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999904044256153	WITHOUT_CLASSIFICATION	9.595574384837342E-6	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9999967809354735	WITHOUT_CLASSIFICATION	3.2190645264627914E-6	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.999999330356035	WITHOUT_CLASSIFICATION	6.696439648905102E-7	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999974714199319	WITHOUT_CLASSIFICATION	2.528580068133405E-6	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999822906527557	WITHOUT_CLASSIFICATION	1.7709347244330782E-5	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999793406717394	WITHOUT_CLASSIFICATION	2.0659328260502815E-5	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999960353952168	WITHOUT_CLASSIFICATION	3.964604783208684E-6	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999986629707134	WITHOUT_CLASSIFICATION	1.3370292865425343E-6	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999309436496	WITHOUT_CLASSIFICATION	6.90563503797546E-8	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999997271671803	WITHOUT_CLASSIFICATION	2.728328197019475E-7	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999909409063988	WITHOUT_CLASSIFICATION	9.059093601057487E-6	TEST
// while	WITHOUT_CLASSIFICATION	0.9999904651278851	WITHOUT_CLASSIFICATION	9.534872114793172E-6	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999473216471071	WITHOUT_CLASSIFICATION	5.2678352892910165E-5	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999999690414922	WITHOUT_CLASSIFICATION	3.0958507789377126E-8	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999959330097552	WITHOUT_CLASSIFICATION	4.066990244787664E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999993292332681	WITHOUT_CLASSIFICATION	6.707667319073964E-7	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999993600200439	WITHOUT_CLASSIFICATION	6.399799560912311E-7	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.999991743243212	WITHOUT_CLASSIFICATION	8.256756787948579E-6	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999574847740085	WITHOUT_CLASSIFICATION	4.251522599147252E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999367657325898	WITHOUT_CLASSIFICATION	6.323426741018003E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999301201811033	WITHOUT_CLASSIFICATION	6.987981889682417E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999944044843508	WITHOUT_CLASSIFICATION	5.5955156492104054E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999814047357026	WITHOUT_CLASSIFICATION	1.8595264297427708E-5	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999628476194548	WITHOUT_CLASSIFICATION	3.715238054527317E-5	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999698450060607	WITHOUT_CLASSIFICATION	3.015499393928374E-5	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.999999276898746	WITHOUT_CLASSIFICATION	7.231012539753461E-7	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999886566712834	WITHOUT_CLASSIFICATION	1.134332871659007E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999946635416005	WITHOUT_CLASSIFICATION	5.336458399464834E-6	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999075015959432	WITHOUT_CLASSIFICATION	9.249840405673643E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999574847740085	WITHOUT_CLASSIFICATION	4.251522599147252E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999301201811033	WITHOUT_CLASSIFICATION	6.987981889682417E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999367657325898	WITHOUT_CLASSIFICATION	6.323426741018003E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999261429271428	WITHOUT_CLASSIFICATION	7.385707285724105E-5	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999277811381756	WITHOUT_CLASSIFICATION	7.221886182437322E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999842316152944	WITHOUT_CLASSIFICATION	1.576838470571676E-5	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999936318034659	WITHOUT_CLASSIFICATION	6.368196534181376E-6	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999978944833028	WITHOUT_CLASSIFICATION	2.1055166972104825E-6	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.999992275264838	WITHOUT_CLASSIFICATION	7.724735161901911E-6	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999857388814235	WITHOUT_CLASSIFICATION	1.4261118576491541E-5	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999966378370118	WITHOUT_CLASSIFICATION	3.3621629883426928E-6	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.999991966451805	WITHOUT_CLASSIFICATION	8.033548194997418E-6	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999961694042305	WITHOUT_CLASSIFICATION	3.830595769455121E-6	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999969602194385	WITHOUT_CLASSIFICATION	3.0397805615460718E-6	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999996004248661	WITHOUT_CLASSIFICATION	3.9957513387746373E-7	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999889144308647	WITHOUT_CLASSIFICATION	1.1085569135370264E-5	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999896069554647	WITHOUT_CLASSIFICATION	1.039304453530326E-5	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999998294080941	WITHOUT_CLASSIFICATION	1.705919059282222E-7	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999918233329854	WITHOUT_CLASSIFICATION	8.176667014621075E-6	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999941957410834	WITHOUT_CLASSIFICATION	5.804258916699458E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999965637309447	WITHOUT_CLASSIFICATION	3.4362690552056373E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999965637309447	WITHOUT_CLASSIFICATION	3.4362690552056373E-6	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999989695758376	WITHOUT_CLASSIFICATION	1.0304241624232925E-6	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999982266696839	WITHOUT_CLASSIFICATION	1.7733303161249612E-6	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.999964000248237	WITHOUT_CLASSIFICATION	3.599975176299224E-5	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999965289639671	WITHOUT_CLASSIFICATION	3.471036032841375E-6	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999951858570124	WITHOUT_CLASSIFICATION	4.814142987595192E-6	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999993679067516	WITHOUT_CLASSIFICATION	6.320932484209595E-7	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.99999965312579	WITHOUT_CLASSIFICATION	3.468742100040636E-7	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999978046433523	WITHOUT_CLASSIFICATION	2.1953566476867304E-6	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999983564553703	WITHOUT_CLASSIFICATION	1.6435446298121422E-6	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999993778255464	WITHOUT_CLASSIFICATION	6.221744537038928E-7	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.99999966047416	WITHOUT_CLASSIFICATION	3.395258399755985E-7	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999334784093553	WITHOUT_CLASSIFICATION	6.65215906446778E-5	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999982143459409	WITHOUT_CLASSIFICATION	1.7856540589571537E-6	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999985958854399	WITHOUT_CLASSIFICATION	1.4041145600093264E-6	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.999999860654412	WITHOUT_CLASSIFICATION	1.3934558800490434E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999967552711607	WITHOUT_CLASSIFICATION	3.2447288393087233E-6	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999938828503266	WITHOUT_CLASSIFICATION	6.117149673301506E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999371952424	WITHOUT_CLASSIFICATION	6.280475759611839E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999371952424	WITHOUT_CLASSIFICATION	6.280475759611839E-7	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9999911492769219	WITHOUT_CLASSIFICATION	8.850723078171166E-6	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999865655250509	WITHOUT_CLASSIFICATION	1.343447494893013E-5	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999978953661208	WITHOUT_CLASSIFICATION	2.1046338791352838E-6	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999462114013832	WITHOUT_CLASSIFICATION	5.378859861686353E-5	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999949844383974	WITHOUT_CLASSIFICATION	5.0155616025190475E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999371952424	WITHOUT_CLASSIFICATION	6.280475759611839E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999371952424	WITHOUT_CLASSIFICATION	6.280475759611839E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999487616816	WITHOUT_CLASSIFICATION	5.1238318433952906E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999487616816	WITHOUT_CLASSIFICATION	5.1238318433952906E-8	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999986112387652	WITHOUT_CLASSIFICATION	1.3887612347368928E-6	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999517370036634	WITHOUT_CLASSIFICATION	4.8262996336531E-5	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999997689297978	WITHOUT_CLASSIFICATION	2.310702022041641E-7	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999997957872633	WITHOUT_CLASSIFICATION	2.042127368077589E-7	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999998164682785	WITHOUT_CLASSIFICATION	1.8353172159827327E-7	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999998164682785	WITHOUT_CLASSIFICATION	1.8353172159827327E-7	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999991862517367	WITHOUT_CLASSIFICATION	8.137482632978455E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999987022483815	WITHOUT_CLASSIFICATION	1.2977516184152172E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999999536496378	WITHOUT_CLASSIFICATION	4.635036219898007E-7	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999708304085191	WITHOUT_CLASSIFICATION	2.916959148088035E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999948453348	WITHOUT_CLASSIFICATION	5.154665204796021E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999983762674356	WITHOUT_CLASSIFICATION	1.623732564410765E-6	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999998806049467	WITHOUT_CLASSIFICATION	1.193950532367159E-7	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999983177485338	WITHOUT_CLASSIFICATION	1.6822514662499743E-6	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999979738316613	WITHOUT_CLASSIFICATION	2.0261683386721358E-6	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999997218568015	WITHOUT_CLASSIFICATION	2.781431984547431E-7	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999997660171798	WITHOUT_CLASSIFICATION	2.3398282030876817E-7	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999996497576567	WITHOUT_CLASSIFICATION	3.5024234331292814E-7	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999995634947046	WITHOUT_CLASSIFICATION	4.365052953453326E-7	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999970732558812	WITHOUT_CLASSIFICATION	2.926744118860077E-6	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999967552711607	WITHOUT_CLASSIFICATION	3.2447288393087233E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999371952424	WITHOUT_CLASSIFICATION	6.280475759611839E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999487616816	WITHOUT_CLASSIFICATION	5.1238318433952906E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999983762674356	WITHOUT_CLASSIFICATION	1.623732564410765E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999784837251	WITHOUT_CLASSIFICATION	2.1516274762906284E-8	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999784837251	WITHOUT_CLASSIFICATION	2.1516274762906284E-8	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999998861523444	WITHOUT_CLASSIFICATION	1.1384765566780822E-7	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999997724915358	WITHOUT_CLASSIFICATION	2.2750846417534155E-7	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999516725422	WITHOUT_CLASSIFICATION	4.8327457722025856E-8	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999996407117052	WITHOUT_CLASSIFICATION	3.592882947985023E-7	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.99999920618274	WITHOUT_CLASSIFICATION	7.938172601633785E-7	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999998983341711	WITHOUT_CLASSIFICATION	1.0166582890588583E-7	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999995058241355	WITHOUT_CLASSIFICATION	4.941758644879705E-7	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999990826904774	WITHOUT_CLASSIFICATION	9.173095224673365E-7	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999984691754069	WITHOUT_CLASSIFICATION	1.530824593054102E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999971872581311	WITHOUT_CLASSIFICATION	2.8127418688851867E-6	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999874310262049	WITHOUT_CLASSIFICATION	1.2568973795022218E-5	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999998512729331	WITHOUT_CLASSIFICATION	1.4872706686504196E-7	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.999998351916867	WITHOUT_CLASSIFICATION	1.6480831328739453E-6	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999938828503266	WITHOUT_CLASSIFICATION	6.117149673301506E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999487616816	WITHOUT_CLASSIFICATION	5.1238318433952906E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999987022483815	WITHOUT_CLASSIFICATION	1.2977516184152172E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999999536496378	WITHOUT_CLASSIFICATION	4.635036219898007E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999999536496378	WITHOUT_CLASSIFICATION	4.635036219898007E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999948453348	WITHOUT_CLASSIFICATION	5.154665204796021E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999983762674356	WITHOUT_CLASSIFICATION	1.623732564410765E-6	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999983762674356	WITHOUT_CLASSIFICATION	1.623732564410765E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999784837251	WITHOUT_CLASSIFICATION	2.1516274762906284E-8	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999999858651967	WITHOUT_CLASSIFICATION	1.4134803341823174E-8	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999974296722741	WITHOUT_CLASSIFICATION	2.570327725798898E-6	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999929517136	WITHOUT_CLASSIFICATION	7.048286335852969E-9	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999991553087407	WITHOUT_CLASSIFICATION	8.446912593473388E-7	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999997642072178	WITHOUT_CLASSIFICATION	2.3579278212951044E-7	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999988417416182	WITHOUT_CLASSIFICATION	1.1582583818392848E-6	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999969198076523	WITHOUT_CLASSIFICATION	3.080192347670033E-6	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999038763316	WITHOUT_CLASSIFICATION	9.612366842006609E-8	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999981587212593	WITHOUT_CLASSIFICATION	1.8412787406686525E-6	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999987022483815	WITHOUT_CLASSIFICATION	1.2977516184152172E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999999536496378	WITHOUT_CLASSIFICATION	4.635036219898007E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999999536496378	WITHOUT_CLASSIFICATION	4.635036219898007E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999948453348	WITHOUT_CLASSIFICATION	5.154665204796021E-8	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999990826904774	WITHOUT_CLASSIFICATION	9.173095224673365E-7	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999971872581311	WITHOUT_CLASSIFICATION	2.8127418688851867E-6	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999930722991857	WITHOUT_CLASSIFICATION	6.927700814320057E-6	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999995308190098	WITHOUT_CLASSIFICATION	4.691809901289466E-7	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999400795946911	WITHOUT_CLASSIFICATION	5.992040530879268E-5	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999400795946911	WITHOUT_CLASSIFICATION	5.992040530879268E-5	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999919020739385	WITHOUT_CLASSIFICATION	8.097926061502143E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999972094358401	WITHOUT_CLASSIFICATION	2.790564159898652E-6	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999998232011559	WITHOUT_CLASSIFICATION	1.767988441403686E-7	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999964116557843	WITHOUT_CLASSIFICATION	3.5883442156462387E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999862283375429	WITHOUT_CLASSIFICATION	1.3771662457164881E-5	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999862283375429	WITHOUT_CLASSIFICATION	1.3771662457164881E-5	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999984612528161	WITHOUT_CLASSIFICATION	1.5387471839074354E-6	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999984612528161	WITHOUT_CLASSIFICATION	1.5387471839074354E-6	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999981949387099	WITHOUT_CLASSIFICATION	1.805061290084477E-6	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999981949387099	WITHOUT_CLASSIFICATION	1.805061290084477E-6	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999952046607551	WITHOUT_CLASSIFICATION	4.7953392449232686E-6	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.999998519932576	WITHOUT_CLASSIFICATION	1.4800674239930541E-6	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.999996796590794	WITHOUT_CLASSIFICATION	3.203409205995864E-6	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999982945578592	WITHOUT_CLASSIFICATION	1.7054421408236682E-6	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999991822114949	WITHOUT_CLASSIFICATION	8.177885052224424E-7	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999916452134329	WITHOUT_CLASSIFICATION	8.354786567034172E-6	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999972123828899	WITHOUT_CLASSIFICATION	2.787617110117738E-6	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999989851011278	WITHOUT_CLASSIFICATION	1.0148988721677925E-6	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999974887180292	WITHOUT_CLASSIFICATION	2.51128197073499E-6	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999988321131364	WITHOUT_CLASSIFICATION	1.1678868635159262E-6	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999992479512724	WITHOUT_CLASSIFICATION	7.520487275148651E-7	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999993685115064	WITHOUT_CLASSIFICATION	6.314884935847895E-7	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999986505139585	WITHOUT_CLASSIFICATION	1.3494860414923993E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999874928241511	WITHOUT_CLASSIFICATION	1.2507175848913736E-5	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999874928241511	WITHOUT_CLASSIFICATION	1.2507175848913736E-5	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999967429205037	WITHOUT_CLASSIFICATION	3.257079496470506E-6	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999972130433776	WITHOUT_CLASSIFICATION	2.7869566224295035E-6	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999998420278122	WITHOUT_CLASSIFICATION	1.5797218769652244E-7	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999450791371	WITHOUT_CLASSIFICATION	5.492086274794537E-8	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999988955927878	WITHOUT_CLASSIFICATION	1.1044072122988058E-6	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999956919327672	WITHOUT_CLASSIFICATION	4.3080672327932565E-6	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999977397871798	WITHOUT_CLASSIFICATION	2.260212820307128E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999996196833215	WITHOUT_CLASSIFICATION	3.803166783977429E-7	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999994635657597	WITHOUT_CLASSIFICATION	5.364342402383205E-7	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999975364730168	WITHOUT_CLASSIFICATION	2.4635269831785524E-6	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999973262431296	WITHOUT_CLASSIFICATION	2.6737568703274957E-6	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999931348045139	WITHOUT_CLASSIFICATION	6.8651954861242715E-6	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.999999655285197	WITHOUT_CLASSIFICATION	3.447148029915292E-7	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999999970629001	WITHOUT_CLASSIFICATION	2.9370997971479057E-9	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999994167511125	WITHOUT_CLASSIFICATION	5.832488875122485E-7	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999993267844336	WITHOUT_CLASSIFICATION	6.732155663979851E-7	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999930889468038	WITHOUT_CLASSIFICATION	6.911053196210014E-6	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999995886665234	WITHOUT_CLASSIFICATION	4.113334767008816E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999998691991638	WITHOUT_CLASSIFICATION	1.308008361979368E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999998691991638	WITHOUT_CLASSIFICATION	1.308008361979368E-6	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999991083984452	WITHOUT_CLASSIFICATION	8.916015547240864E-7	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999925996322531	WITHOUT_CLASSIFICATION	7.400367746924267E-6	TEST
//[]	WITHOUT_CLASSIFICATION	0.9997198577622218	WITHOUT_CLASSIFICATION	2.801422377781866E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9997198577622218	WITHOUT_CLASSIFICATION	2.801422377781866E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.999999593178233	WITHOUT_CLASSIFICATION	4.0682176695032765E-7	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999628860984872	WITHOUT_CLASSIFICATION	3.711390151284381E-5	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999126822293878	WITHOUT_CLASSIFICATION	8.731777061221299E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999511680642434	WITHOUT_CLASSIFICATION	4.883193575653264E-5	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999983882251926	WITHOUT_CLASSIFICATION	1.6117748073286138E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999981138951562	WITHOUT_CLASSIFICATION	1.8861048436474088E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999981138951562	WITHOUT_CLASSIFICATION	1.8861048436474088E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999996810104457	WITHOUT_CLASSIFICATION	3.189895542749852E-7	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999981647005349	WITHOUT_CLASSIFICATION	1.835299464951952E-6	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999995775531287	WITHOUT_CLASSIFICATION	4.2244687123267175E-7	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999928373830538	WITHOUT_CLASSIFICATION	7.1626169462091105E-6	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999925996322531	WITHOUT_CLASSIFICATION	7.400367746924267E-6	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999642061634905	WITHOUT_CLASSIFICATION	3.579383650964404E-5	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999914738917398	WITHOUT_CLASSIFICATION	8.526108260251755E-6	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999914738917398	WITHOUT_CLASSIFICATION	8.526108260251755E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999970165040526	WITHOUT_CLASSIFICATION	2.9834959472939824E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999988133261196	WITHOUT_CLASSIFICATION	1.186673880416234E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999988133261196	WITHOUT_CLASSIFICATION	1.186673880416234E-6	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999997022595373	WITHOUT_CLASSIFICATION	2.977404627103441E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999997022595373	WITHOUT_CLASSIFICATION	2.977404627103441E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999997022595373	WITHOUT_CLASSIFICATION	2.977404627103441E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999988133261196	WITHOUT_CLASSIFICATION	1.186673880416234E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999988133261196	WITHOUT_CLASSIFICATION	1.186673880416234E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999970165040526	WITHOUT_CLASSIFICATION	2.9834959472939824E-6	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999983354718102	WITHOUT_CLASSIFICATION	1.6645281898471375E-6	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999947121308561	WITHOUT_CLASSIFICATION	5.287869143895171E-6	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999994730044999	WITHOUT_CLASSIFICATION	5.269955001664485E-7	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999961901360996	WITHOUT_CLASSIFICATION	3.809863900278768E-6	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999997877309144	WITHOUT_CLASSIFICATION	2.12269085611766E-7	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999971744478903	WITHOUT_CLASSIFICATION	2.825552109840486E-6	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999905798334174	WITHOUT_CLASSIFICATION	9.420166582552695E-6	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999997194213736	WITHOUT_CLASSIFICATION	2.8057862642168E-7	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999973262431296	WITHOUT_CLASSIFICATION	2.6737568703274957E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999988133261196	WITHOUT_CLASSIFICATION	1.186673880416234E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999988133261196	WITHOUT_CLASSIFICATION	1.186673880416234E-6	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999996679836725	WITHOUT_CLASSIFICATION	3.32016327503702E-7	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999944909559677	WITHOUT_CLASSIFICATION	5.509044032279435E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999948436111843	WITHOUT_CLASSIFICATION	5.156388815725767E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999996627428066	WITHOUT_CLASSIFICATION	3.372571934315178E-7	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999984830523494	WITHOUT_CLASSIFICATION	1.5169476506111596E-6	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999994886199804	WITHOUT_CLASSIFICATION	5.113800194785914E-7	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999082729675	WITHOUT_CLASSIFICATION	9.172703254956872E-8	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999998206696874	WITHOUT_CLASSIFICATION	1.7933031256659442E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999932925315833	WITHOUT_CLASSIFICATION	6.707468416766808E-6	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999997559152208	WITHOUT_CLASSIFICATION	2.440847792060016E-7	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999263325654274	WITHOUT_CLASSIFICATION	7.366743457267705E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999973219015473	WITHOUT_CLASSIFICATION	2.6780984528007262E-6	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999990915462408	WITHOUT_CLASSIFICATION	9.084537591600512E-7	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999992097082296	WITHOUT_CLASSIFICATION	7.902917702498283E-7	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999998855689527	WITHOUT_CLASSIFICATION	1.1443104729899616E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999907666911241	WITHOUT_CLASSIFICATION	9.233308875868555E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999907666911241	WITHOUT_CLASSIFICATION	9.233308875868555E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999907666911241	WITHOUT_CLASSIFICATION	9.233308875868555E-6	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999992041300713	WITHOUT_CLASSIFICATION	7.958699287411105E-7	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999993139705802	WITHOUT_CLASSIFICATION	6.86029419975304E-7	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999993442616858	WITHOUT_CLASSIFICATION	6.55738314309447E-7	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999993475921177	WITHOUT_CLASSIFICATION	6.52407882352815E-7	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999998369851932	WITHOUT_CLASSIFICATION	1.6301480675041306E-7	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.999996759528147	WITHOUT_CLASSIFICATION	3.2404718530587544E-6	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999383038013	WITHOUT_CLASSIFICATION	6.169619878623446E-8	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999985216113998	WITHOUT_CLASSIFICATION	1.478388600205549E-6	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999995553799463	WITHOUT_CLASSIFICATION	4.446200535971829E-7	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999986230342566	WITHOUT_CLASSIFICATION	1.3769657433850218E-6	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999991797173903	WITHOUT_CLASSIFICATION	8.202826097838935E-7	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999978680920312	WITHOUT_CLASSIFICATION	2.1319079689165925E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999996810104457	WITHOUT_CLASSIFICATION	3.189895542749852E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999988133261196	WITHOUT_CLASSIFICATION	1.186673880416234E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999988133261196	WITHOUT_CLASSIFICATION	1.186673880416234E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999970165040526	WITHOUT_CLASSIFICATION	2.9834959472939824E-6	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999971744478903	WITHOUT_CLASSIFICATION	2.825552109840486E-6	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999944909559677	WITHOUT_CLASSIFICATION	5.509044032279435E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999996627428066	WITHOUT_CLASSIFICATION	3.372571934315178E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999994886199804	WITHOUT_CLASSIFICATION	5.113800194785914E-7	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999948436111843	WITHOUT_CLASSIFICATION	5.156388815725767E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999082729675	WITHOUT_CLASSIFICATION	9.172703254956872E-8	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999997559152208	WITHOUT_CLASSIFICATION	2.440847792060016E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999932925315833	WITHOUT_CLASSIFICATION	6.707468416766808E-6	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999973219015473	WITHOUT_CLASSIFICATION	2.6780984528007262E-6	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999975164888859	WITHOUT_CLASSIFICATION	2.48351111412555E-6	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999984413359851	WITHOUT_CLASSIFICATION	1.5586640147646735E-6	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999927183097872	WITHOUT_CLASSIFICATION	7.2816902127622E-6	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999968756725985	WITHOUT_CLASSIFICATION	3.124327401473959E-6	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999994708753305	WITHOUT_CLASSIFICATION	5.291246695974357E-7	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999980873050562	WITHOUT_CLASSIFICATION	1.912694943684401E-6	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999984628577973	WITHOUT_CLASSIFICATION	1.537142202678169E-6	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999999752901468	WITHOUT_CLASSIFICATION	2.470985325578561E-8	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999996851780931	WITHOUT_CLASSIFICATION	3.148219069217312E-7	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999997697710277	WITHOUT_CLASSIFICATION	2.302289722700827E-7	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999990224202829	WITHOUT_CLASSIFICATION	9.775797171244262E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999993249363034	WITHOUT_CLASSIFICATION	6.750636966120687E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999933816738314	WITHOUT_CLASSIFICATION	6.6183261686634545E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999993332185148	WITHOUT_CLASSIFICATION	6.667814851552745E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999993606916527	WITHOUT_CLASSIFICATION	6.39308347178635E-7	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999985731073066	WITHOUT_CLASSIFICATION	1.4268926934989326E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999985598770085	WITHOUT_CLASSIFICATION	1.4401229914641243E-6	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999927682870324	WITHOUT_CLASSIFICATION	7.23171296759251E-6	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999995989105971	WITHOUT_CLASSIFICATION	4.010894029892967E-7	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999984700512575	WITHOUT_CLASSIFICATION	1.5299487424658528E-6	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999993540072759	WITHOUT_CLASSIFICATION	6.459927241607363E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999565394551	WITHOUT_CLASSIFICATION	4.3460544919460804E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999565394551	WITHOUT_CLASSIFICATION	4.3460544919460804E-8	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999971479356272	WITHOUT_CLASSIFICATION	2.85206437276269E-6	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999995711564272	WITHOUT_CLASSIFICATION	4.2884357275298265E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999321727934264	WITHOUT_CLASSIFICATION	6.782720657363894E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999321727934264	WITHOUT_CLASSIFICATION	6.782720657363894E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999321727934264	WITHOUT_CLASSIFICATION	6.782720657363894E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999099924234728	WITHOUT_CLASSIFICATION	9.000757652722847E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999099924234728	WITHOUT_CLASSIFICATION	9.000757652722847E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999099924234728	WITHOUT_CLASSIFICATION	9.000757652722847E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999099924234728	WITHOUT_CLASSIFICATION	9.000757652722847E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999451245915167	WITHOUT_CLASSIFICATION	5.487540848321895E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999451245915167	WITHOUT_CLASSIFICATION	5.487540848321895E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999451245915167	WITHOUT_CLASSIFICATION	5.487540848321895E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999522100869154	WITHOUT_CLASSIFICATION	4.7789913084498127E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999522100869154	WITHOUT_CLASSIFICATION	4.7789913084498127E-5	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999454796029087	WITHOUT_CLASSIFICATION	5.452039709140849E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999519030804866	WITHOUT_CLASSIFICATION	4.8096919513259305E-5	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999995711564272	WITHOUT_CLASSIFICATION	4.2884357275298265E-7	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999995602376667	WITHOUT_CLASSIFICATION	4.397623333633092E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999321727934264	WITHOUT_CLASSIFICATION	6.782720657363894E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999321727934264	WITHOUT_CLASSIFICATION	6.782720657363894E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999099924234728	WITHOUT_CLASSIFICATION	9.000757652722847E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999099924234728	WITHOUT_CLASSIFICATION	9.000757652722847E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999099924234728	WITHOUT_CLASSIFICATION	9.000757652722847E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999451245915167	WITHOUT_CLASSIFICATION	5.487540848321895E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999451245915167	WITHOUT_CLASSIFICATION	5.487540848321895E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999522100869154	WITHOUT_CLASSIFICATION	4.7789913084498127E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999519030804866	WITHOUT_CLASSIFICATION	4.8096919513259305E-5	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999994177045461	WITHOUT_CLASSIFICATION	5.822954538681359E-7	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999994177045461	WITHOUT_CLASSIFICATION	5.822954538681359E-7	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999990311916289	WITHOUT_CLASSIFICATION	9.688083710810008E-7	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999990311916289	WITHOUT_CLASSIFICATION	9.688083710810008E-7	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999916434290252	WITHOUT_CLASSIFICATION	8.356570974707896E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999916434290252	WITHOUT_CLASSIFICATION	8.356570974707896E-6	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999987738579874	WITHOUT_CLASSIFICATION	1.2261420125914356E-6	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999986827101369	WITHOUT_CLASSIFICATION	1.317289863073189E-6	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999986827101369	WITHOUT_CLASSIFICATION	1.317289863073189E-6	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999991109554407	WITHOUT_CLASSIFICATION	8.8904455919287E-7	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999991109554407	WITHOUT_CLASSIFICATION	8.8904455919287E-7	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999981809722753	WITHOUT_CLASSIFICATION	1.8190277246567737E-6	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999952681855302	WITHOUT_CLASSIFICATION	4.7318144697721426E-6	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999952681855302	WITHOUT_CLASSIFICATION	4.7318144697721426E-6	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999537159315	WITHOUT_CLASSIFICATION	4.6284068531315354E-8	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999989226276267	WITHOUT_CLASSIFICATION	1.0773723732879642E-6	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999978356743829	WITHOUT_CLASSIFICATION	2.1643256170481016E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999099924234728	WITHOUT_CLASSIFICATION	9.000757652722847E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999099924234728	WITHOUT_CLASSIFICATION	9.000757652722847E-5	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999537159315	WITHOUT_CLASSIFICATION	4.6284068531315354E-8	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999985114423383	WITHOUT_CLASSIFICATION	1.4885576617350375E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999886089310673	WITHOUT_CLASSIFICATION	1.1391068932601789E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999886089310673	WITHOUT_CLASSIFICATION	1.1391068932601789E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999886089310673	WITHOUT_CLASSIFICATION	1.1391068932601789E-5	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999991971278768	WITHOUT_CLASSIFICATION	8.028721232074262E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.9999907348755179	WITHOUT_CLASSIFICATION	9.265124482035116E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999825668402044	WITHOUT_CLASSIFICATION	1.7433159795617846E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999825668402044	WITHOUT_CLASSIFICATION	1.7433159795617846E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999968122190404	WITHOUT_CLASSIFICATION	3.1877809595340977E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999983349072065	WITHOUT_CLASSIFICATION	1.6650927935922462E-6	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999982584953712	WITHOUT_CLASSIFICATION	1.7415046287781074E-6	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999961697102245	WITHOUT_CLASSIFICATION	3.830289775484396E-6	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999974113294837	WITHOUT_CLASSIFICATION	2.588670516329885E-6	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999970418824428	WITHOUT_CLASSIFICATION	2.9581175571901794E-6	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999970418824428	WITHOUT_CLASSIFICATION	2.9581175571901794E-6	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999994657283574	WITHOUT_CLASSIFICATION	5.342716426560952E-7	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999432762409277	WITHOUT_CLASSIFICATION	5.672375907233672E-5	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999432762409277	WITHOUT_CLASSIFICATION	5.672375907233672E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999099924234728	WITHOUT_CLASSIFICATION	9.000757652722847E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999886089310673	WITHOUT_CLASSIFICATION	1.1391068932601789E-5	TEST
// args	WITHOUT_CLASSIFICATION	0.9999907348755179	WITHOUT_CLASSIFICATION	9.265124482035116E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999825668402044	WITHOUT_CLASSIFICATION	1.7433159795617846E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999968122190404	WITHOUT_CLASSIFICATION	3.1877809595340977E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999983349072065	WITHOUT_CLASSIFICATION	1.6650927935922462E-6	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999982584953712	WITHOUT_CLASSIFICATION	1.7415046287781074E-6	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999961697102245	WITHOUT_CLASSIFICATION	3.830289775484396E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999432762409277	WITHOUT_CLASSIFICATION	5.672375907233672E-5	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999971418343904	WITHOUT_CLASSIFICATION	2.858165609678013E-6	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999980283445261	WITHOUT_CLASSIFICATION	1.971655473938956E-6	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999977266702079	WITHOUT_CLASSIFICATION	2.273329792161722E-6	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999990832850676	WITHOUT_CLASSIFICATION	9.1671493233724E-7	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999985361008468	WITHOUT_CLASSIFICATION	1.4638991532122972E-6	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999984446423326	WITHOUT_CLASSIFICATION	1.555357667438194E-6	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999948685958125	WITHOUT_CLASSIFICATION	5.131404187427884E-6	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999948685958125	WITHOUT_CLASSIFICATION	5.131404187427884E-6	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.999999377059848	WITHOUT_CLASSIFICATION	6.229401519709195E-7	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999996495530903	WITHOUT_CLASSIFICATION	3.504469097739729E-7	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999994527414235	WITHOUT_CLASSIFICATION	5.47258576451241E-7	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.999999534969752	WITHOUT_CLASSIFICATION	4.650302479493008E-7	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999996577595645	WITHOUT_CLASSIFICATION	3.422404355267201E-7	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999996577595645	WITHOUT_CLASSIFICATION	3.422404355267201E-7	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999998394238294	WITHOUT_CLASSIFICATION	1.605761706321342E-7	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999997139478413	WITHOUT_CLASSIFICATION	2.860521587987418E-7	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999993467811417	WITHOUT_CLASSIFICATION	6.532188583924897E-7	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999993467811417	WITHOUT_CLASSIFICATION	6.532188583924897E-7	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999992707666717	WITHOUT_CLASSIFICATION	7.292333283451149E-7	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999994939909117	WITHOUT_CLASSIFICATION	5.060090882399565E-7	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999974113294837	WITHOUT_CLASSIFICATION	2.588670516329885E-6	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999954019149555	WITHOUT_CLASSIFICATION	4.598085044472408E-6	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999994550404492	WITHOUT_CLASSIFICATION	5.449595508104369E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999992732383712	WITHOUT_CLASSIFICATION	7.267616288305616E-7	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999994557225172	WITHOUT_CLASSIFICATION	5.442774827574324E-7	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999976922565652	WITHOUT_CLASSIFICATION	2.3077434348309048E-6	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.999999285102101	WITHOUT_CLASSIFICATION	7.148978989810112E-7	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999992837867419	WITHOUT_CLASSIFICATION	7.162132582395485E-7	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999990511713126	WITHOUT_CLASSIFICATION	9.488286874069824E-7	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999996541591831	WITHOUT_CLASSIFICATION	3.458408169414536E-7	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999996541591831	WITHOUT_CLASSIFICATION	3.458408169414536E-7	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999955226405468	WITHOUT_CLASSIFICATION	4.477359453287501E-6	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999955226405468	WITHOUT_CLASSIFICATION	4.477359453287501E-6	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999988687385096	WITHOUT_CLASSIFICATION	1.1312614903384963E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999984079905722	WITHOUT_CLASSIFICATION	1.5920094279480507E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999984079905722	WITHOUT_CLASSIFICATION	1.5920094279480507E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999984079905722	WITHOUT_CLASSIFICATION	1.5920094279480507E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999901391022217	WITHOUT_CLASSIFICATION	9.860897778261621E-6	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999999209241403	WITHOUT_CLASSIFICATION	7.907585970853001E-7	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999999209241403	WITHOUT_CLASSIFICATION	7.907585970853001E-7	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999991617104642	WITHOUT_CLASSIFICATION	8.382895358278371E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999950661495871	WITHOUT_CLASSIFICATION	4.933850412942902E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999927849033132	WITHOUT_CLASSIFICATION	7.215096686728626E-6	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999948891968429	WITHOUT_CLASSIFICATION	5.110803157158851E-6	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999979951320619	WITHOUT_CLASSIFICATION	2.0048679381036146E-6	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999918012185555	WITHOUT_CLASSIFICATION	8.198781444600536E-6	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999994862311763	WITHOUT_CLASSIFICATION	5.137688237182133E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999933816738314	WITHOUT_CLASSIFICATION	6.6183261686634545E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999933816738314	WITHOUT_CLASSIFICATION	6.6183261686634545E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999901391022217	WITHOUT_CLASSIFICATION	9.860897778261621E-6	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999991617104642	WITHOUT_CLASSIFICATION	8.382895358278371E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998266766363	WITHOUT_CLASSIFICATION	1.7332336367967328E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999950661495871	WITHOUT_CLASSIFICATION	4.933850412942902E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999927849033132	WITHOUT_CLASSIFICATION	7.215096686728626E-6	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999994672031252	WITHOUT_CLASSIFICATION	5.327968748392295E-7	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999919151542722	WITHOUT_CLASSIFICATION	8.084845727818888E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999994715748137	WITHOUT_CLASSIFICATION	5.284251863047239E-7	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9999011039578342	WITHOUT_CLASSIFICATION	9.889604216590072E-5	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.999998243170459	WITHOUT_CLASSIFICATION	1.7568295409538132E-6	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999990202485433	WITHOUT_CLASSIFICATION	9.797514566897699E-7	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999994753354066	WITHOUT_CLASSIFICATION	5.246645935313498E-7	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999994672031252	WITHOUT_CLASSIFICATION	5.327968748392295E-7	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999993030261548	WITHOUT_CLASSIFICATION	6.969738453317533E-7	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999993030261548	WITHOUT_CLASSIFICATION	6.969738453317533E-7	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999995137416209	WITHOUT_CLASSIFICATION	4.862583791383641E-7	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999989309411534	WITHOUT_CLASSIFICATION	1.0690588465999959E-6	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.999999673131719	WITHOUT_CLASSIFICATION	3.268682809924422E-7	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999996021492791	WITHOUT_CLASSIFICATION	3.978507209673156E-7	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999984263775552	WITHOUT_CLASSIFICATION	1.573622444732828E-6	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999995195739881	WITHOUT_CLASSIFICATION	4.804260118459323E-7	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999939676065462	WITHOUT_CLASSIFICATION	6.032393453718233E-6	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.999999353006719	WITHOUT_CLASSIFICATION	6.469932808969952E-7	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.999999922717901	WITHOUT_CLASSIFICATION	7.728209904673345E-8	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999914453587174	WITHOUT_CLASSIFICATION	8.554641282495552E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999989741512652	WITHOUT_CLASSIFICATION	1.0258487347661654E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999996021492791	WITHOUT_CLASSIFICATION	3.978507209673156E-7	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999984263775552	WITHOUT_CLASSIFICATION	1.573622444732828E-6	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999988459399837	WITHOUT_CLASSIFICATION	1.1540600163431747E-6	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999877649269685	WITHOUT_CLASSIFICATION	1.2235073031560402E-5	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.99999974604941	WITHOUT_CLASSIFICATION	2.539505899745367E-7	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999910231053265	WITHOUT_CLASSIFICATION	8.976894673484376E-6	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999917667416003	WITHOUT_CLASSIFICATION	8.233258399745573E-6	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999818084576589	WITHOUT_CLASSIFICATION	1.8191542341106248E-5	TEST
//[C]	WITHOUT_CLASSIFICATION	0.99974264454165	WITHOUT_CLASSIFICATION	2.573554583500472E-4	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999868423762373	WITHOUT_CLASSIFICATION	1.315762376269465E-5	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999902788683183	WITHOUT_CLASSIFICATION	9.72113168172526E-6	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.99996324162402	WITHOUT_CLASSIFICATION	3.6758375980046666E-5	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999898335539608	WITHOUT_CLASSIFICATION	1.0166446039336594E-5	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9999239243985049	WITHOUT_CLASSIFICATION	7.607560149507927E-5	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999984902934016	WITHOUT_CLASSIFICATION	1.5097065983863363E-6	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999982870891678	WITHOUT_CLASSIFICATION	1.7129108321572142E-6	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.999999929178509	WITHOUT_CLASSIFICATION	7.082149093795749E-8	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999945587245531	WITHOUT_CLASSIFICATION	5.441275446844032E-6	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999639329840548	WITHOUT_CLASSIFICATION	3.6067015945127114E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999947480740138	WITHOUT_CLASSIFICATION	5.25192598625632E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999975276287849	WITHOUT_CLASSIFICATION	2.4723712150762445E-6	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999993724654498	WITHOUT_CLASSIFICATION	6.275345502109269E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999639329840548	WITHOUT_CLASSIFICATION	3.6067015945127114E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999947480740138	WITHOUT_CLASSIFICATION	5.25192598625632E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999975276287849	WITHOUT_CLASSIFICATION	2.4723712150762445E-6	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999979822059596	WITHOUT_CLASSIFICATION	2.0177940402973776E-6	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999996487251458	WITHOUT_CLASSIFICATION	3.5127485417122144E-7	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.999999237485854	WITHOUT_CLASSIFICATION	7.625141459125129E-7	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999985698704659	WITHOUT_CLASSIFICATION	1.4301295341261336E-6	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999988926932546	WITHOUT_CLASSIFICATION	1.10730674537149E-6	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.999998994320371	WITHOUT_CLASSIFICATION	1.0056796290411926E-6	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999977769517182	WITHOUT_CLASSIFICATION	2.2230482817432175E-6	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999998085008045	WITHOUT_CLASSIFICATION	1.914991955049653E-7	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999938118996645	WITHOUT_CLASSIFICATION	6.188100335492713E-6	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999944092055061	WITHOUT_CLASSIFICATION	5.5907944939142435E-6	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9999957912614755	WITHOUT_CLASSIFICATION	4.208738524502744E-6	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999997149784096	WITHOUT_CLASSIFICATION	2.850215904119344E-7	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999980449489783	WITHOUT_CLASSIFICATION	1.9550510217589896E-6	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999981516229377	WITHOUT_CLASSIFICATION	1.8483770623174292E-6	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999738268477396	WITHOUT_CLASSIFICATION	2.6173152260417783E-5	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999993651450775	WITHOUT_CLASSIFICATION	6.348549225846658E-7	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999991288808546	WITHOUT_CLASSIFICATION	8.711191454665301E-7	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999993919973327	WITHOUT_CLASSIFICATION	6.080026673718167E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999968695120588	WITHOUT_CLASSIFICATION	3.130487941302894E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999986852723978	WITHOUT_CLASSIFICATION	1.3147276022967246E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.999996337999883	WITHOUT_CLASSIFICATION	3.662000117155587E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999695919796217	WITHOUT_CLASSIFICATION	3.0408020378424704E-5	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999695919796217	WITHOUT_CLASSIFICATION	3.0408020378424704E-5	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999899720670679	WITHOUT_CLASSIFICATION	1.0027932932086653E-5	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999899720670679	WITHOUT_CLASSIFICATION	1.0027932932086653E-5	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999998592726574	WITHOUT_CLASSIFICATION	1.4072734260782474E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999998592726574	WITHOUT_CLASSIFICATION	1.4072734260782474E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999984574457265	WITHOUT_CLASSIFICATION	1.5425542735196146E-6	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999994508067177	WITHOUT_CLASSIFICATION	5.491932823203498E-7	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999993453793057	WITHOUT_CLASSIFICATION	6.546206943050456E-7	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999987666973597	WITHOUT_CLASSIFICATION	1.2333026403180797E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999985369755157	WITHOUT_CLASSIFICATION	1.4630244842798265E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999992227655895	WITHOUT_CLASSIFICATION	7.772344104597676E-7	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.999994587927554	WITHOUT_CLASSIFICATION	5.4120724459137945E-6	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999966930328907	WITHOUT_CLASSIFICATION	3.306967109248697E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999933816738314	WITHOUT_CLASSIFICATION	6.6183261686634545E-6	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999984574457265	WITHOUT_CLASSIFICATION	1.5425542735196146E-6	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999994508067177	WITHOUT_CLASSIFICATION	5.491932823203498E-7	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999993453793057	WITHOUT_CLASSIFICATION	6.546206943050456E-7	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999985369755157	WITHOUT_CLASSIFICATION	1.4630244842798265E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999992227655895	WITHOUT_CLASSIFICATION	7.772344104597676E-7	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.999997663947892	WITHOUT_CLASSIFICATION	2.336052108089519E-6	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999901398332646	WITHOUT_CLASSIFICATION	9.860166735467717E-6	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999994297670826	WITHOUT_CLASSIFICATION	5.70232917466162E-7	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999994297670826	WITHOUT_CLASSIFICATION	5.70232917466162E-7	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999991610393836	WITHOUT_CLASSIFICATION	8.389606164031129E-7	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999995563328449	WITHOUT_CLASSIFICATION	4.436671550445492E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999995375058173	WITHOUT_CLASSIFICATION	4.6249418280551656E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999943578584546	WITHOUT_CLASSIFICATION	5.642141545335183E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999943578584546	WITHOUT_CLASSIFICATION	5.642141545335183E-6	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999980141807936	WITHOUT_CLASSIFICATION	1.9858192063180203E-6	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999995154681784	WITHOUT_CLASSIFICATION	4.845318215511874E-7	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999991003650817	WITHOUT_CLASSIFICATION	8.996349184218534E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999997203759469	WITHOUT_CLASSIFICATION	2.79624053198067E-7	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999992458165724	WITHOUT_CLASSIFICATION	7.541834275751489E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999993332185148	WITHOUT_CLASSIFICATION	6.667814851552745E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999993606916527	WITHOUT_CLASSIFICATION	6.39308347178635E-7	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999985731073066	WITHOUT_CLASSIFICATION	1.4268926934989326E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999985598770085	WITHOUT_CLASSIFICATION	1.4401229914641243E-6	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999984700512575	WITHOUT_CLASSIFICATION	1.5299487424658528E-6	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999993540072759	WITHOUT_CLASSIFICATION	6.459927241607363E-7	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999980141807936	WITHOUT_CLASSIFICATION	1.9858192063180203E-6	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999995154681784	WITHOUT_CLASSIFICATION	4.845318215511874E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999997203759469	WITHOUT_CLASSIFICATION	2.79624053198067E-7	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999997290796644	WITHOUT_CLASSIFICATION	2.7092033558299943E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999995375058173	WITHOUT_CLASSIFICATION	4.6249418280551656E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999995375058173	WITHOUT_CLASSIFICATION	4.6249418280551656E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999989741512652	WITHOUT_CLASSIFICATION	1.0258487347661654E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999989741512652	WITHOUT_CLASSIFICATION	1.0258487347661654E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999139373495	WITHOUT_CLASSIFICATION	8.606265049956318E-8	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999139373495	WITHOUT_CLASSIFICATION	8.606265049956318E-8	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999994882365787	WITHOUT_CLASSIFICATION	5.117634213279503E-7	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999995862111971	WITHOUT_CLASSIFICATION	4.1378880292686405E-7	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999997918108404	WITHOUT_CLASSIFICATION	2.0818915961324111E-7	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999958838417782	WITHOUT_CLASSIFICATION	4.116158221838505E-6	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999997387111197	WITHOUT_CLASSIFICATION	2.612888802904683E-7	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999993719293933	WITHOUT_CLASSIFICATION	6.280706066897617E-7	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.999999971287234	WITHOUT_CLASSIFICATION	2.871276609959286E-8	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999389426056	WITHOUT_CLASSIFICATION	6.10573943999462E-8	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999994912032473	WITHOUT_CLASSIFICATION	5.087967527378894E-7	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999992054894765	WITHOUT_CLASSIFICATION	7.945105233897013E-7	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999944446874436	WITHOUT_CLASSIFICATION	5.555312556325911E-6	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999958333342833	WITHOUT_CLASSIFICATION	4.1666657166480395E-6	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999984007757378	WITHOUT_CLASSIFICATION	1.5992242621857772E-6	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.999999665891496	WITHOUT_CLASSIFICATION	3.341085040030892E-7	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999995637666506	WITHOUT_CLASSIFICATION	4.362333493584106E-7	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999956481597838	WITHOUT_CLASSIFICATION	4.351840216179937E-6	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999944533463598	WITHOUT_CLASSIFICATION	5.5466536401778584E-6	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999998022473355	WITHOUT_CLASSIFICATION	1.9775266449696147E-7	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999999071406265	WITHOUT_CLASSIFICATION	9.285937343467759E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999993606916527	WITHOUT_CLASSIFICATION	6.39308347178635E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999985598770085	WITHOUT_CLASSIFICATION	1.4401229914641243E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999565394551	WITHOUT_CLASSIFICATION	4.3460544919460804E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999825668402044	WITHOUT_CLASSIFICATION	1.7433159795617846E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999825668402044	WITHOUT_CLASSIFICATION	1.7433159795617846E-5	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999997290796644	WITHOUT_CLASSIFICATION	2.7092033558299943E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999995375058173	WITHOUT_CLASSIFICATION	4.6249418280551656E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999989741512652	WITHOUT_CLASSIFICATION	1.0258487347661654E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999139373495	WITHOUT_CLASSIFICATION	8.606265049956318E-8	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999998614641994	WITHOUT_CLASSIFICATION	1.3853580055865418E-7	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999999441701092	WITHOUT_CLASSIFICATION	5.582989086119177E-8	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.999999154642287	WITHOUT_CLASSIFICATION	8.453577129948137E-7	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999999607782627	WITHOUT_CLASSIFICATION	3.922173737543539E-8	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999992181659161	WITHOUT_CLASSIFICATION	7.818340839731605E-7	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999992181659161	WITHOUT_CLASSIFICATION	7.818340839731605E-7	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999992608794882	WITHOUT_CLASSIFICATION	7.39120511684123E-7	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999888142458369	WITHOUT_CLASSIFICATION	1.1185754163176116E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999970599703683	WITHOUT_CLASSIFICATION	2.940029631643027E-6	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999961411160417	WITHOUT_CLASSIFICATION	3.8588839582357895E-6	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999696141647295	WITHOUT_CLASSIFICATION	3.0385835270497938E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999696141647295	WITHOUT_CLASSIFICATION	3.0385835270497938E-5	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999991687038374	WITHOUT_CLASSIFICATION	8.312961626625598E-7	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999983220643325	WITHOUT_CLASSIFICATION	1.677935667463919E-6	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999971581063015	WITHOUT_CLASSIFICATION	2.8418936985271455E-6	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999997586160355	WITHOUT_CLASSIFICATION	2.413839644522461E-7	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999970205842523	WITHOUT_CLASSIFICATION	2.979415747742062E-6	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999995745670255	WITHOUT_CLASSIFICATION	4.2543297454707953E-7	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999949986198324	WITHOUT_CLASSIFICATION	5.001380167526185E-6	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999993412883088	WITHOUT_CLASSIFICATION	6.587116912572558E-7	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999979907408814	WITHOUT_CLASSIFICATION	2.009259118669009E-6	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999998079099854	WITHOUT_CLASSIFICATION	1.920900146651953E-7	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999999739020595	WITHOUT_CLASSIFICATION	2.6097940589282298E-8	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999988059073489	WITHOUT_CLASSIFICATION	1.1940926510888218E-6	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999998571885617	WITHOUT_CLASSIFICATION	1.428114383667524E-7	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.999999355336804	WITHOUT_CLASSIFICATION	6.446631959208421E-7	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999956102371687	WITHOUT_CLASSIFICATION	4.3897628313728896E-6	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999998185684486	WITHOUT_CLASSIFICATION	1.81431551511789E-7	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999991080637058	WITHOUT_CLASSIFICATION	8.919362941798959E-7	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.999999307024958	WITHOUT_CLASSIFICATION	6.929750419911925E-7	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999999860153176	WITHOUT_CLASSIFICATION	1.3984682512952809E-8	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999764966763828	WITHOUT_CLASSIFICATION	2.3503323617117213E-5	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999969877114956	WITHOUT_CLASSIFICATION	3.012288504422723E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.999996201405635	WITHOUT_CLASSIFICATION	3.798594364866021E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.999996201405635	WITHOUT_CLASSIFICATION	3.798594364866021E-6	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999984045207586	WITHOUT_CLASSIFICATION	1.5954792413059163E-6	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999939699864767	WITHOUT_CLASSIFICATION	6.0300135233581026E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999996196833215	WITHOUT_CLASSIFICATION	3.803166783977429E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999996196833215	WITHOUT_CLASSIFICATION	3.803166783977429E-7	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999985809257518	WITHOUT_CLASSIFICATION	1.4190742483017767E-6	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999936882073709	WITHOUT_CLASSIFICATION	6.311792629088173E-6	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999789232756597	WITHOUT_CLASSIFICATION	2.1076724340213036E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999999673923239	WITHOUT_CLASSIFICATION	3.260767610026877E-7	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999999673923239	WITHOUT_CLASSIFICATION	3.260767610026877E-7	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999966548093887	WITHOUT_CLASSIFICATION	3.3451906114069486E-6	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999987996250678	WITHOUT_CLASSIFICATION	1.200374932158766E-6	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.999997509918278	WITHOUT_CLASSIFICATION	2.490081722054449E-6	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999992316662939	WITHOUT_CLASSIFICATION	7.683337060894809E-7	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999998332353204	WITHOUT_CLASSIFICATION	1.6676467966781253E-7	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999992376711239	WITHOUT_CLASSIFICATION	7.623288760071217E-7	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999941968361151	WITHOUT_CLASSIFICATION	5.803163884945757E-6	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999974471043087	WITHOUT_CLASSIFICATION	2.552895691363131E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999929627137959	WITHOUT_CLASSIFICATION	7.0372862041522E-6	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999966436806613	WITHOUT_CLASSIFICATION	3.3563193386069745E-6	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999757750101034	WITHOUT_CLASSIFICATION	2.422498989655225E-5	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999882312590747	WITHOUT_CLASSIFICATION	1.176874092525056E-5	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999942892114221	WITHOUT_CLASSIFICATION	5.710788577939999E-6	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999974916184168	WITHOUT_CLASSIFICATION	2.5083815831540175E-6	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999993656943382	WITHOUT_CLASSIFICATION	6.343056617923859E-7	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999997795705359	WITHOUT_CLASSIFICATION	2.2042946402116355E-7	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999996313462984	WITHOUT_CLASSIFICATION	3.6865370149259295E-7	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999790594603142	WITHOUT_CLASSIFICATION	2.0940539685722584E-5	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999514073181712	WITHOUT_CLASSIFICATION	4.859268182867009E-5	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999954403647383	WITHOUT_CLASSIFICATION	4.559635261639788E-6	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999972079630943	WITHOUT_CLASSIFICATION	2.7920369056701153E-6	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999948039839366	WITHOUT_CLASSIFICATION	5.196016063449967E-6	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999962389208938	WITHOUT_CLASSIFICATION	3.761079106111323E-6	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999957968527584	WITHOUT_CLASSIFICATION	4.203147241548977E-6	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9997777677038827	WITHOUT_CLASSIFICATION	2.2223229611717372E-4	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999995738435782	WITHOUT_CLASSIFICATION	4.2615642188688086E-7	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999996632715437	WITHOUT_CLASSIFICATION	3.3672845638726376E-7	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999993585402637	WITHOUT_CLASSIFICATION	6.414597363238405E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999871227366312	WITHOUT_CLASSIFICATION	1.2877263368837497E-5	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.999997968784894	WITHOUT_CLASSIFICATION	2.03121510605665E-6	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999998231227386	WITHOUT_CLASSIFICATION	1.768772613860959E-7	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999974916184168	WITHOUT_CLASSIFICATION	2.5083815831540175E-6	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999993585402637	WITHOUT_CLASSIFICATION	6.414597363238405E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999871227366312	WITHOUT_CLASSIFICATION	1.2877263368837497E-5	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999998231227386	WITHOUT_CLASSIFICATION	1.768772613860959E-7	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999973504692684	WITHOUT_CLASSIFICATION	2.6495307315728352E-6	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999921454505195	WITHOUT_CLASSIFICATION	7.854549480402168E-6	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999862756430635	WITHOUT_CLASSIFICATION	1.3724356936439767E-5	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.999996380071437	WITHOUT_CLASSIFICATION	3.619928563057095E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999968849191446	WITHOUT_CLASSIFICATION	3.115080855376943E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999117364481	WITHOUT_CLASSIFICATION	8.826355180502596E-8	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999878691219382	WITHOUT_CLASSIFICATION	1.2130878061846305E-5	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999972702145262	WITHOUT_CLASSIFICATION	2.7297854738404284E-6	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999908552461536	WITHOUT_CLASSIFICATION	9.144753846348583E-6	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999999237869784	WITHOUT_CLASSIFICATION	7.621302152584065E-8	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999962644124121	WITHOUT_CLASSIFICATION	3.7355875877690803E-6	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999962644124121	WITHOUT_CLASSIFICATION	3.7355875877690803E-6	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999966245832278	WITHOUT_CLASSIFICATION	3.375416772187772E-6	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999969341209038	WITHOUT_CLASSIFICATION	3.0658790962046712E-6	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999980498448098	WITHOUT_CLASSIFICATION	1.9501551902499046E-6	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999954363238687	WITHOUT_CLASSIFICATION	4.563676131342452E-6	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999963618023235	WITHOUT_CLASSIFICATION	3.6381976764379683E-6	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.999995494940992	WITHOUT_CLASSIFICATION	4.505059007944529E-6	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999953965158852	WITHOUT_CLASSIFICATION	4.603484114756576E-6	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.999999952223461	WITHOUT_CLASSIFICATION	4.7776539041445786E-8	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999994604604436	WITHOUT_CLASSIFICATION	5.395395564296275E-7	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999752744735	WITHOUT_CLASSIFICATION	2.4725526569610788E-8	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999951069930523	WITHOUT_CLASSIFICATION	4.8930069476833035E-6	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999314321252	WITHOUT_CLASSIFICATION	6.856787487712357E-8	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999970894981086	WITHOUT_CLASSIFICATION	2.9105018914142043E-6	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999996575578325	WITHOUT_CLASSIFICATION	3.424421675486694E-7	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.999998687906198	WITHOUT_CLASSIFICATION	1.3120938021230316E-6	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999998833852538	WITHOUT_CLASSIFICATION	1.1661474616884973E-7	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999972773088336	WITHOUT_CLASSIFICATION	2.7226911663846844E-6	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999986764921982	WITHOUT_CLASSIFICATION	1.323507801829365E-6	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999968411722056	WITHOUT_CLASSIFICATION	3.1588277944218757E-6	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999974788819618	WITHOUT_CLASSIFICATION	2.5211180381723275E-6	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9999876674031125	WITHOUT_CLASSIFICATION	1.233259688746995E-5	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999912300813669	WITHOUT_CLASSIFICATION	8.769918633102982E-6	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999987882348399	WITHOUT_CLASSIFICATION	1.2117651600875172E-6	TEST
// others	WITHOUT_CLASSIFICATION	0.99998994262683	WITHOUT_CLASSIFICATION	1.0057373169958829E-5	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999966260857446	WITHOUT_CLASSIFICATION	3.3739142553447426E-6	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.999997912738668	WITHOUT_CLASSIFICATION	2.087261331982792E-6	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999999407378063	WITHOUT_CLASSIFICATION	5.9262193621514525E-8	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999424279323	WITHOUT_CLASSIFICATION	5.75720676713164E-8	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999920845556208	WITHOUT_CLASSIFICATION	7.915444379132062E-6	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999984324678045	WITHOUT_CLASSIFICATION	1.5675321955511102E-6	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999989062210276	WITHOUT_CLASSIFICATION	1.093778972416651E-6	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999981047061781	WITHOUT_CLASSIFICATION	1.8952938219108158E-6	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.999999421889206	WITHOUT_CLASSIFICATION	5.781107940822097E-7	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999994162915954	WITHOUT_CLASSIFICATION	5.837084046843274E-7	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999991634193589	WITHOUT_CLASSIFICATION	8.365806410890092E-7	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999929190750004	WITHOUT_CLASSIFICATION	7.080924999578047E-6	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999992783929338	WITHOUT_CLASSIFICATION	7.21607066091537E-7	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999993877889435	WITHOUT_CLASSIFICATION	6.122110564940951E-7	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999988074439778	WITHOUT_CLASSIFICATION	1.1925560221780647E-6	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999992024194688	WITHOUT_CLASSIFICATION	7.975805311869226E-7	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999980190637097	WITHOUT_CLASSIFICATION	1.980936290394401E-6	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999995847256373	WITHOUT_CLASSIFICATION	4.1527436269939615E-6	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999933081985712	WITHOUT_CLASSIFICATION	6.69180142881375E-6	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.999997935458573	WITHOUT_CLASSIFICATION	2.0645414269432394E-6	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999991678055157	WITHOUT_CLASSIFICATION	8.321944843140839E-7	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999997912497466	WITHOUT_CLASSIFICATION	2.0875025338059576E-7	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999998394765428	WITHOUT_CLASSIFICATION	1.6052345716548541E-7	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999996511331908	WITHOUT_CLASSIFICATION	3.4886680932516964E-7	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999981075551702	WITHOUT_CLASSIFICATION	1.8924448299191374E-6	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999981473362629	WITHOUT_CLASSIFICATION	1.8526637370340314E-6	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999997825356739	WITHOUT_CLASSIFICATION	2.1746432603662942E-7	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999999560962438	WITHOUT_CLASSIFICATION	4.390375622004309E-8	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999996880550319	WITHOUT_CLASSIFICATION	3.119449679972721E-7	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9998791436242359	WITHOUT_CLASSIFICATION	1.2085637576412797E-4	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999993016920433	WITHOUT_CLASSIFICATION	6.983079566632052E-7	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999800850776321	WITHOUT_CLASSIFICATION	1.9914922367818272E-5	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999084907323	WITHOUT_CLASSIFICATION	9.150926767669829E-8	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999991368039834	WITHOUT_CLASSIFICATION	8.631960165834037E-7	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999997556906671	WITHOUT_CLASSIFICATION	2.443093328856469E-7	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.99999818440267	WITHOUT_CLASSIFICATION	1.8155973300734095E-6	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.99999818440267	WITHOUT_CLASSIFICATION	1.8155973300734095E-6	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999828748813574	WITHOUT_CLASSIFICATION	1.7125118642538264E-5	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999946093088591	WITHOUT_CLASSIFICATION	5.390691140933641E-6	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999967745201151	WITHOUT_CLASSIFICATION	3.225479884908313E-5	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999981909157943	WITHOUT_CLASSIFICATION	1.809084205699572E-5	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999979451976065	WITHOUT_CLASSIFICATION	2.0548023934611827E-6	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999993648924905	WITHOUT_CLASSIFICATION	6.35107509436449E-7	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999404246459807	WITHOUT_CLASSIFICATION	5.957535401926717E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999992162155633	WITHOUT_CLASSIFICATION	7.837844366273599E-7	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.999999550742951	WITHOUT_CLASSIFICATION	4.4925704897612815E-7	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999994548342533	WITHOUT_CLASSIFICATION	5.451657465855301E-7	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999960194344686	WITHOUT_CLASSIFICATION	3.980565531346816E-6	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999977682184173	WITHOUT_CLASSIFICATION	2.231781582590103E-6	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999696713807555	WITHOUT_CLASSIFICATION	3.0328619244480334E-5	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999996113687816	WITHOUT_CLASSIFICATION	3.88631218430477E-7	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.999989496420429	WITHOUT_CLASSIFICATION	1.0503579571036755E-5	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999829856516409	WITHOUT_CLASSIFICATION	1.701434835916435E-5	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999924422031959	WITHOUT_CLASSIFICATION	7.557796804032603E-6	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999888744950305	WITHOUT_CLASSIFICATION	1.1125504969508007E-5	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999997658070724	WITHOUT_CLASSIFICATION	2.3419292770317995E-7	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999997535684615	WITHOUT_CLASSIFICATION	2.4643153843785106E-7	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999830669256361	WITHOUT_CLASSIFICATION	1.6933074363920097E-5	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.999999936303289	WITHOUT_CLASSIFICATION	6.369671099357981E-8	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999995910581307	WITHOUT_CLASSIFICATION	4.08941869321836E-7	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999999649755169	WITHOUT_CLASSIFICATION	3.5024483124988905E-8	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999985643888544	WITHOUT_CLASSIFICATION	1.4356111455578787E-6	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999985028134093	WITHOUT_CLASSIFICATION	1.4971865907091653E-6	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999993184949947	WITHOUT_CLASSIFICATION	6.815050053341868E-7	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999912945472	WITHOUT_CLASSIFICATION	8.705452833031775E-9	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999993416038433	WITHOUT_CLASSIFICATION	6.583961567344472E-7	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999826678473	WITHOUT_CLASSIFICATION	1.7332152686007337E-8	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999977707044453	WITHOUT_CLASSIFICATION	2.229295554627844E-6	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999990736618486	WITHOUT_CLASSIFICATION	9.263381513955323E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999998071954932	WITHOUT_CLASSIFICATION	1.9280450691390714E-7	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999966724294592	WITHOUT_CLASSIFICATION	3.327570540866733E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999998071954932	WITHOUT_CLASSIFICATION	1.9280450691390714E-7	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999995690547981	WITHOUT_CLASSIFICATION	4.3094520179631435E-7	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999928651524773	WITHOUT_CLASSIFICATION	7.134847522666586E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999928651524773	WITHOUT_CLASSIFICATION	7.134847522666586E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999928651524773	WITHOUT_CLASSIFICATION	7.134847522666586E-6	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999996343274652	WITHOUT_CLASSIFICATION	3.6567253482007925E-7	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999996343274652	WITHOUT_CLASSIFICATION	3.6567253482007925E-7	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999997995763004	WITHOUT_CLASSIFICATION	2.0042369956143704E-7	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999998553929724	WITHOUT_CLASSIFICATION	1.4460702753254492E-7	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999991670069586	WITHOUT_CLASSIFICATION	8.329930413702534E-7	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999998172694496	WITHOUT_CLASSIFICATION	1.8273055039623328E-7	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999964802202483	WITHOUT_CLASSIFICATION	3.5197797516849876E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999992714052242	WITHOUT_CLASSIFICATION	7.285947759244578E-7	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999973977002677	WITHOUT_CLASSIFICATION	2.6022997321410246E-6	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999944894313529	WITHOUT_CLASSIFICATION	5.5105686469607905E-6	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999999523976683	WITHOUT_CLASSIFICATION	4.760233174162754E-8	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999997115443859	WITHOUT_CLASSIFICATION	2.8845561411863194E-7	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999773845810547	WITHOUT_CLASSIFICATION	2.2615418945274217E-5	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999966815772192	WITHOUT_CLASSIFICATION	3.3184227808270132E-6	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999980536124927	WITHOUT_CLASSIFICATION	1.9463875073973815E-6	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999936701186658	WITHOUT_CLASSIFICATION	6.3298813342092345E-6	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999932827758634	WITHOUT_CLASSIFICATION	6.717224136608616E-6	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999956592409288	WITHOUT_CLASSIFICATION	4.340759071186571E-6	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.999999738821832	WITHOUT_CLASSIFICATION	2.611781679753986E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999947408560281	WITHOUT_CLASSIFICATION	5.259143971927923E-6	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999947408560281	WITHOUT_CLASSIFICATION	5.259143971927923E-6	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999879421554652	WITHOUT_CLASSIFICATION	1.2057844534778248E-5	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999981791697986	WITHOUT_CLASSIFICATION	1.8208302013521973E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999981791697986	WITHOUT_CLASSIFICATION	1.8208302013521973E-6	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999869229868387	WITHOUT_CLASSIFICATION	1.3077013161458114E-5	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999951185360133	WITHOUT_CLASSIFICATION	4.881463986781343E-6	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999911522256953	WITHOUT_CLASSIFICATION	8.847774304536242E-6	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999879200121495	WITHOUT_CLASSIFICATION	1.2079987850381506E-5	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999981564588069	WITHOUT_CLASSIFICATION	1.843541193053055E-6	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999988933427353	WITHOUT_CLASSIFICATION	1.1066572647521266E-6	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999942280304877	WITHOUT_CLASSIFICATION	5.771969512344501E-6	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999980631327843	WITHOUT_CLASSIFICATION	1.936867215782962E-6	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999887958395671	WITHOUT_CLASSIFICATION	1.1204160432947156E-5	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999961449088676	WITHOUT_CLASSIFICATION	3.855091132423495E-6	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999974060020143	WITHOUT_CLASSIFICATION	2.5939979856931413E-6	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999942266576098	WITHOUT_CLASSIFICATION	5.773342390183462E-6	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999910253109737	WITHOUT_CLASSIFICATION	8.974689026373442E-6	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999997756146508	WITHOUT_CLASSIFICATION	2.2438534926219386E-7	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999944894313529	WITHOUT_CLASSIFICATION	5.5105686469607905E-6	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9996898937953015	WITHOUT_CLASSIFICATION	3.101062046984988E-4	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999974886775764	WITHOUT_CLASSIFICATION	2.511322423590284E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999937362880328	WITHOUT_CLASSIFICATION	6.263711967192928E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999937362880328	WITHOUT_CLASSIFICATION	6.263711967192928E-6	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999930480576915	WITHOUT_CLASSIFICATION	6.951942308504251E-6	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999893458103929	WITHOUT_CLASSIFICATION	1.0654189607066084E-5	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999995977465665	WITHOUT_CLASSIFICATION	4.022534333632478E-7	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999904062684013	WITHOUT_CLASSIFICATION	9.593731598677868E-6	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999996999216613	WITHOUT_CLASSIFICATION	3.0007833870654933E-7	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999973249284106	WITHOUT_CLASSIFICATION	2.675071589441617E-6	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999998957843563	WITHOUT_CLASSIFICATION	1.0421564369416371E-7	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999998406559055	WITHOUT_CLASSIFICATION	1.5934409452121839E-7	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.999999807958772	WITHOUT_CLASSIFICATION	1.9204122793900092E-7	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999999484916802	WITHOUT_CLASSIFICATION	5.1508319760409356E-8	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999965323585736	WITHOUT_CLASSIFICATION	3.4676414264834176E-6	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.999999778479823	WITHOUT_CLASSIFICATION	2.2152017693304088E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999757758750238	WITHOUT_CLASSIFICATION	2.422412497619056E-5	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999994795046738	WITHOUT_CLASSIFICATION	5.204953262633824E-7	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999998698760094	WITHOUT_CLASSIFICATION	1.301239906645326E-7	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999992369166927	WITHOUT_CLASSIFICATION	7.630833073071727E-7	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999947167175554	WITHOUT_CLASSIFICATION	5.283282444677925E-6	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999872185413261	WITHOUT_CLASSIFICATION	1.2781458673928256E-5	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999758888305612	WITHOUT_CLASSIFICATION	2.4111169438797354E-5	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999987571156547	WITHOUT_CLASSIFICATION	1.2428843453451592E-6	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999987906347233	WITHOUT_CLASSIFICATION	1.2093652766223099E-6	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999994090236394	WITHOUT_CLASSIFICATION	5.90976360629906E-7	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999865860958156	WITHOUT_CLASSIFICATION	1.3413904184471753E-5	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999876152262	WITHOUT_CLASSIFICATION	1.2384773803024902E-8	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999996439675428	WITHOUT_CLASSIFICATION	3.560324571696473E-7	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999606214860601	WITHOUT_CLASSIFICATION	3.937851393991398E-5	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999980679193425	WITHOUT_CLASSIFICATION	1.932080657414858E-6	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999997715889322	WITHOUT_CLASSIFICATION	2.2841106774743675E-7	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999986004876054	WITHOUT_CLASSIFICATION	1.3995123947001455E-6	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999993363262565	WITHOUT_CLASSIFICATION	6.636737435942388E-7	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999988237934858	WITHOUT_CLASSIFICATION	1.1762065141628698E-6	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.999999649253302	WITHOUT_CLASSIFICATION	3.5074669808132414E-7	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9992392427536128	WITHOUT_CLASSIFICATION	7.607572463872118E-4	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999995236222814	WITHOUT_CLASSIFICATION	4.763777186023527E-7	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999933721399271	WITHOUT_CLASSIFICATION	6.627860072849525E-6	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999862188745863	WITHOUT_CLASSIFICATION	1.3781125413770475E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999997715889322	WITHOUT_CLASSIFICATION	2.2841106774743675E-7	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999975589681148	WITHOUT_CLASSIFICATION	2.4410318851434856E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999933721399271	WITHOUT_CLASSIFICATION	6.627860072849525E-6	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999995422154789	WITHOUT_CLASSIFICATION	4.5778452107830486E-7	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999972800776045	WITHOUT_CLASSIFICATION	2.719922395549141E-6	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999702874231953	WITHOUT_CLASSIFICATION	2.9712576804809793E-5	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999985429957776	WITHOUT_CLASSIFICATION	1.457004222373014E-6	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999895888153305	WITHOUT_CLASSIFICATION	1.041118466949077E-5	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999970955387913	WITHOUT_CLASSIFICATION	2.9044612086402915E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999970955387913	WITHOUT_CLASSIFICATION	2.9044612086402915E-6	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999911277722388	WITHOUT_CLASSIFICATION	8.872227761251654E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999998009031855	WITHOUT_CLASSIFICATION	1.9909681453178201E-7	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999984498849086	WITHOUT_CLASSIFICATION	1.550115091357587E-6	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999984498849086	WITHOUT_CLASSIFICATION	1.550115091357587E-6	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999997686722323	WITHOUT_CLASSIFICATION	2.3132776773753096E-7	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9995860724037354	WITHOUT_CLASSIFICATION	4.1392759626460683E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9997768643495559	WITHOUT_CLASSIFICATION	2.2313565044418903E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9997768643495559	WITHOUT_CLASSIFICATION	2.2313565044418903E-4	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999866109824398	WITHOUT_CLASSIFICATION	1.3389017560157994E-5	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999871237388008	WITHOUT_CLASSIFICATION	1.2876261199086889E-5	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999991275594544	WITHOUT_CLASSIFICATION	8.724405455396492E-7	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999998356531953	WITHOUT_CLASSIFICATION	1.6434680467559534E-7	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999998776429764	WITHOUT_CLASSIFICATION	1.223570236770659E-7	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9998520459074798	WITHOUT_CLASSIFICATION	1.4795409252010648E-4	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999997961611164	WITHOUT_CLASSIFICATION	2.03838883454007E-7	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999996968261131	WITHOUT_CLASSIFICATION	3.031738868532887E-7	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999929852902926	WITHOUT_CLASSIFICATION	7.0147097074679956E-6	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999961435741221	WITHOUT_CLASSIFICATION	3.856425877929935E-6	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999950757807196	WITHOUT_CLASSIFICATION	4.924219280492839E-6	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999927026197771	WITHOUT_CLASSIFICATION	7.297380222822983E-6	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999995536714366	WITHOUT_CLASSIFICATION	4.463285634586595E-7	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999917587136692	WITHOUT_CLASSIFICATION	8.24128633081797E-6	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999995500049838	WITHOUT_CLASSIFICATION	4.4999501629974675E-7	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999984645571757	WITHOUT_CLASSIFICATION	1.535442824328462E-6	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999956774641192	WITHOUT_CLASSIFICATION	4.32253588078314E-6	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999967646833419	WITHOUT_CLASSIFICATION	3.235316658133083E-6	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999997366509014	WITHOUT_CLASSIFICATION	2.633490986385749E-7	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999988609741314	WITHOUT_CLASSIFICATION	1.1390258686987152E-6	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999989870244306	WITHOUT_CLASSIFICATION	1.012975569411318E-6	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999952428974065	WITHOUT_CLASSIFICATION	4.757102593430131E-6	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999995694677288	WITHOUT_CLASSIFICATION	4.3053227118241226E-7	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999730073255549	WITHOUT_CLASSIFICATION	2.6992674445073762E-5	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999413641514592	WITHOUT_CLASSIFICATION	5.8635848540898804E-5	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999701909918616	WITHOUT_CLASSIFICATION	2.9809008138379075E-5	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999986100274687	WITHOUT_CLASSIFICATION	1.3899725312843416E-6	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999845953787247	WITHOUT_CLASSIFICATION	1.540462127526493E-5	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999980961043502	WITHOUT_CLASSIFICATION	1.9038956498117884E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999980961043502	WITHOUT_CLASSIFICATION	1.9038956498117884E-6	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999520794619	WITHOUT_CLASSIFICATION	4.792053814003226E-8	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999996359386516	WITHOUT_CLASSIFICATION	3.6406134841790494E-7	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999900293339201	WITHOUT_CLASSIFICATION	9.970666079852953E-6	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999991092953854	WITHOUT_CLASSIFICATION	8.907046145190155E-7	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999975908878918	WITHOUT_CLASSIFICATION	2.409112108296235E-6	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999908350868396	WITHOUT_CLASSIFICATION	9.164913160501461E-6	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999882729879543	WITHOUT_CLASSIFICATION	1.1727012045729114E-5	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999972709381479	WITHOUT_CLASSIFICATION	2.72906185202811E-6	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.999999729489976	WITHOUT_CLASSIFICATION	2.705100239568541E-7	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999999309313201	WITHOUT_CLASSIFICATION	6.90686799043315E-7	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999996138154594	WITHOUT_CLASSIFICATION	3.8618454062792346E-7	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999971024236158	WITHOUT_CLASSIFICATION	2.8975763841813945E-6	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999886596095632	WITHOUT_CLASSIFICATION	1.1340390436820752E-5	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999979758271905	WITHOUT_CLASSIFICATION	2.0241728094614402E-6	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999997157578142	WITHOUT_CLASSIFICATION	2.842421858117303E-7	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999974172868605	WITHOUT_CLASSIFICATION	2.5827131395005704E-6	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999995309047044	WITHOUT_CLASSIFICATION	4.690952956073313E-7	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999997276112579	WITHOUT_CLASSIFICATION	2.7238874204947504E-7	TEST
// be dead	WITHOUT_CLASSIFICATION	0.999986319841017	WITHOUT_CLASSIFICATION	1.3680158982947829E-5	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999998336654798	WITHOUT_CLASSIFICATION	1.6633452017764742E-7	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999991276801278	WITHOUT_CLASSIFICATION	8.723198721385161E-7	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999908544605822	WITHOUT_CLASSIFICATION	9.145539417727648E-6	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999978880251393	WITHOUT_CLASSIFICATION	2.111974860767462E-6	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999985511788981	WITHOUT_CLASSIFICATION	1.4488211018290746E-6	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.999997448220399	WITHOUT_CLASSIFICATION	2.551779601002872E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999992844707065	WITHOUT_CLASSIFICATION	7.155292935064827E-6	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999996969717512	WITHOUT_CLASSIFICATION	3.030282488852532E-7	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999950895432804	WITHOUT_CLASSIFICATION	4.910456719636917E-6	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999907811561414	WITHOUT_CLASSIFICATION	9.218843858595804E-6	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.999998710727594	WITHOUT_CLASSIFICATION	1.289272405916913E-6	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999888409262554	WITHOUT_CLASSIFICATION	1.115907374456877E-5	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999961754507566	WITHOUT_CLASSIFICATION	3.82454924337662E-6	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.999997695969315	WITHOUT_CLASSIFICATION	2.3040306851486125E-6	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999924234786335	WITHOUT_CLASSIFICATION	7.576521366633766E-6	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999993628242039	WITHOUT_CLASSIFICATION	6.37175796208399E-7	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999847253913551	WITHOUT_CLASSIFICATION	1.5274608644888744E-5	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999978720088469	WITHOUT_CLASSIFICATION	2.127991153098608E-6	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999960189473569	WITHOUT_CLASSIFICATION	3.981052643099927E-6	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999984657945463	WITHOUT_CLASSIFICATION	1.5342054536732983E-6	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999990980265421	WITHOUT_CLASSIFICATION	9.019734579585869E-7	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999980946220604	WITHOUT_CLASSIFICATION	1.905377939706505E-6	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.999998626695532	WITHOUT_CLASSIFICATION	1.3733044680572138E-6	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.99999991893144	WITHOUT_CLASSIFICATION	8.106855994728574E-8	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.99999991893144	WITHOUT_CLASSIFICATION	8.106855994728574E-8	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999960984594785	WITHOUT_CLASSIFICATION	3.901540521559182E-6	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999130106791	WITHOUT_CLASSIFICATION	8.698932087303957E-8	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999939374997103	WITHOUT_CLASSIFICATION	6.062500289660676E-6	TEST
// return	WITHOUT_CLASSIFICATION	0.9999946420164484	WITHOUT_CLASSIFICATION	5.357983551676258E-6	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999968695120588	WITHOUT_CLASSIFICATION	3.130487941302894E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999986852723978	WITHOUT_CLASSIFICATION	1.3147276022967246E-6	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999968152651857	WITHOUT_CLASSIFICATION	3.1847348143069364E-6	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999988542820536	WITHOUT_CLASSIFICATION	1.1457179464032063E-6	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999996745468793	WITHOUT_CLASSIFICATION	3.254531207232415E-7	TEST
// tc	WITHOUT_CLASSIFICATION	0.9999691700312807	WITHOUT_CLASSIFICATION	3.08299687192632E-5	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999955316494413	WITHOUT_CLASSIFICATION	4.46835055867478E-6	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999963541075695	WITHOUT_CLASSIFICATION	3.6458924306664053E-6	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999986756548005	WITHOUT_CLASSIFICATION	1.3243451994872721E-6	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999993889494501	WITHOUT_CLASSIFICATION	6.110505500699429E-7	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999966407099755	WITHOUT_CLASSIFICATION	3.359290024513004E-6	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999985689777953	WITHOUT_CLASSIFICATION	1.431022204697545E-6	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999973522334461	WITHOUT_CLASSIFICATION	2.647766553958565E-6	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999947921426053	WITHOUT_CLASSIFICATION	5.207857394643008E-6	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999994461338197	WITHOUT_CLASSIFICATION	5.5386618030602304E-6	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999952744385326	WITHOUT_CLASSIFICATION	4.725561467326015E-6	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999996175573077	WITHOUT_CLASSIFICATION	3.824426922983994E-6	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999916397392078	WITHOUT_CLASSIFICATION	8.360260792142508E-6	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999978999490168	WITHOUT_CLASSIFICATION	2.1000509831875528E-6	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999985139956951	WITHOUT_CLASSIFICATION	1.4860043049553776E-6	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999991396993824	WITHOUT_CLASSIFICATION	8.603006176132182E-7	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999976299176342	WITHOUT_CLASSIFICATION	2.3700823658617013E-6	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999980778529609	WITHOUT_CLASSIFICATION	1.922147039032847E-6	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999921900171643	WITHOUT_CLASSIFICATION	7.809982835713923E-6	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999992540520652	WITHOUT_CLASSIFICATION	7.459479346952297E-7	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999962469753078	WITHOUT_CLASSIFICATION	3.753024692348189E-6	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999977490701313	WITHOUT_CLASSIFICATION	2.2509298688272148E-6	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999969785148967	WITHOUT_CLASSIFICATION	3.021485103417255E-6	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999976445403781	WITHOUT_CLASSIFICATION	2.3554596218208657E-6	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999957342024534	WITHOUT_CLASSIFICATION	4.265797546588139E-6	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999960189473569	WITHOUT_CLASSIFICATION	3.981052643099927E-6	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999987166041784	WITHOUT_CLASSIFICATION	1.2833958216202994E-6	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999988599186068	WITHOUT_CLASSIFICATION	1.140081393119261E-6	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999988599186068	WITHOUT_CLASSIFICATION	1.140081393119261E-6	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999996325054331	WITHOUT_CLASSIFICATION	3.674945668800241E-7	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999995474314651	WITHOUT_CLASSIFICATION	4.52568534894332E-7	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999984113717291	WITHOUT_CLASSIFICATION	1.588628270980221E-6	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999923756754301	WITHOUT_CLASSIFICATION	7.624324569786067E-6	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999970446359723	WITHOUT_CLASSIFICATION	2.955364027738259E-6	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999972326159605	WITHOUT_CLASSIFICATION	2.7673840395636002E-6	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999980527689973	WITHOUT_CLASSIFICATION	1.9472310027304424E-6	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999974036015287	WITHOUT_CLASSIFICATION	2.5963984714139313E-6	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999983961197041	WITHOUT_CLASSIFICATION	1.6038802958904942E-6	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999988937804457	WITHOUT_CLASSIFICATION	1.1062195541936718E-6	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999984952171475	WITHOUT_CLASSIFICATION	1.5047828525714224E-6	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999984091796147	WITHOUT_CLASSIFICATION	1.5908203853303067E-6	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999949099370169	WITHOUT_CLASSIFICATION	5.090062983020542E-6	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999994620955012	WITHOUT_CLASSIFICATION	5.379044988148164E-7	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.999999959112645	WITHOUT_CLASSIFICATION	4.088735499916119E-8	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999999844710971	WITHOUT_CLASSIFICATION	1.55289029315263E-8	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999942812497539	WITHOUT_CLASSIFICATION	5.718750246056543E-6	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999949931052476	WITHOUT_CLASSIFICATION	5.006894752307876E-6	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999969752703554	WITHOUT_CLASSIFICATION	3.024729644721483E-6	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999979137990767	WITHOUT_CLASSIFICATION	2.0862009233921255E-6	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999971467761495	WITHOUT_CLASSIFICATION	2.8532238505711996E-6	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999976413398434	WITHOUT_CLASSIFICATION	2.3586601566781865E-6	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999989539444566	WITHOUT_CLASSIFICATION	1.0460555434000537E-6	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999989102699088	WITHOUT_CLASSIFICATION	1.0897300911556246E-6	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999998302228978	WITHOUT_CLASSIFICATION	1.6977710204615189E-7	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999997533444277	WITHOUT_CLASSIFICATION	2.466555722389895E-7	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999717378351194	WITHOUT_CLASSIFICATION	2.8262164880657594E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999982378731798	WITHOUT_CLASSIFICATION	1.7621268202886118E-6	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999954080069028	WITHOUT_CLASSIFICATION	4.591993097248095E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.999995803169279	WITHOUT_CLASSIFICATION	4.196830720985538E-6	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.999996586670787	WITHOUT_CLASSIFICATION	3.413329213012652E-6	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999951393494246	WITHOUT_CLASSIFICATION	4.860650575473244E-6	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999870691249322	WITHOUT_CLASSIFICATION	1.2930875067804405E-5	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999439085984	WITHOUT_CLASSIFICATION	5.6091401604963744E-8	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999994378309216	WITHOUT_CLASSIFICATION	5.621690784020801E-7	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999972249592126	WITHOUT_CLASSIFICATION	2.775040787412434E-6	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999976320998302	WITHOUT_CLASSIFICATION	2.3679001698174786E-6	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999997533444277	WITHOUT_CLASSIFICATION	2.466555722389895E-7	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999717378351194	WITHOUT_CLASSIFICATION	2.8262164880657594E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999982378731798	WITHOUT_CLASSIFICATION	1.7621268202886118E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.999995803169279	WITHOUT_CLASSIFICATION	4.196830720985538E-6	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999996337063586	WITHOUT_CLASSIFICATION	3.6629364134202757E-7	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999994002835227	WITHOUT_CLASSIFICATION	5.997164773274705E-7	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999981265488038	WITHOUT_CLASSIFICATION	1.8734511962360591E-6	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999946079862002	WITHOUT_CLASSIFICATION	5.392013799822488E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999930222611787	WITHOUT_CLASSIFICATION	6.977738821275262E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999995823667008	WITHOUT_CLASSIFICATION	4.1763329911995216E-7	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999954194907019	WITHOUT_CLASSIFICATION	4.580509298046702E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999928871117552	WITHOUT_CLASSIFICATION	7.112888244809448E-6	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999983928118612	WITHOUT_CLASSIFICATION	1.6071881388182395E-6	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999938765933347	WITHOUT_CLASSIFICATION	6.123406665209927E-6	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999946904502697	WITHOUT_CLASSIFICATION	5.309549730384284E-6	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999975247690617	WITHOUT_CLASSIFICATION	2.4752309383718007E-6	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999876247643293	WITHOUT_CLASSIFICATION	1.2375235670638672E-5	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.99999847224493	WITHOUT_CLASSIFICATION	1.5277550699740713E-6	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999895770341097	WITHOUT_CLASSIFICATION	1.0422965890372387E-5	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999944854406435	WITHOUT_CLASSIFICATION	5.514559356503909E-6	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999988849406951	WITHOUT_CLASSIFICATION	1.1150593049525496E-6	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999994024055417	WITHOUT_CLASSIFICATION	5.975944582518266E-7	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999997990785986	WITHOUT_CLASSIFICATION	2.0092140152732293E-7	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999976320998302	WITHOUT_CLASSIFICATION	2.3679001698174786E-6	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999994002835227	WITHOUT_CLASSIFICATION	5.997164773274705E-7	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999981265488038	WITHOUT_CLASSIFICATION	1.8734511962360591E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999930222611787	WITHOUT_CLASSIFICATION	6.977738821275262E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999995823667008	WITHOUT_CLASSIFICATION	4.1763329911995216E-7	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999954194907019	WITHOUT_CLASSIFICATION	4.580509298046702E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999928871117552	WITHOUT_CLASSIFICATION	7.112888244809448E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999962326078535	WITHOUT_CLASSIFICATION	3.7673921465846452E-6	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999993295412551	WITHOUT_CLASSIFICATION	6.704587447714552E-7	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999931620200739	WITHOUT_CLASSIFICATION	6.837979926027926E-6	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999988296499305	WITHOUT_CLASSIFICATION	1.1703500695965135E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999930069362403	WITHOUT_CLASSIFICATION	6.9930637596368285E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999930069362403	WITHOUT_CLASSIFICATION	6.9930637596368285E-6	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999960426198504	WITHOUT_CLASSIFICATION	3.957380149596684E-6	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999969017089452	WITHOUT_CLASSIFICATION	3.098291054763189E-6	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999990078643088	WITHOUT_CLASSIFICATION	9.921356911631726E-7	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.999997221783348	WITHOUT_CLASSIFICATION	2.778216652043831E-6	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999979914609758	WITHOUT_CLASSIFICATION	2.0085390242699926E-6	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999990652510655	WITHOUT_CLASSIFICATION	9.347489346033787E-7	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.999996797214323	WITHOUT_CLASSIFICATION	3.2027856770649463E-6	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999975751086734	WITHOUT_CLASSIFICATION	2.424891326638277E-6	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999993619226559	WITHOUT_CLASSIFICATION	6.380773442037122E-7	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999992559159967	WITHOUT_CLASSIFICATION	7.440840032519354E-7	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.999999661851642	WITHOUT_CLASSIFICATION	3.381483579068865E-7	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999989730114065	WITHOUT_CLASSIFICATION	1.0269885934918552E-6	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999969656407203	WITHOUT_CLASSIFICATION	3.0343592797645526E-6	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999991632621643	WITHOUT_CLASSIFICATION	8.367378357158729E-7	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999983691012199	WITHOUT_CLASSIFICATION	1.6308987801166959E-6	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999974119967043	WITHOUT_CLASSIFICATION	2.5880032957013113E-6	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999977925396398	WITHOUT_CLASSIFICATION	2.207460360164468E-6	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999972869620374	WITHOUT_CLASSIFICATION	2.7130379626718085E-6	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999999320355913	WITHOUT_CLASSIFICATION	6.796440860256473E-8	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999999473835525	WITHOUT_CLASSIFICATION	5.261644747170546E-8	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9999999843670591	WITHOUT_CLASSIFICATION	1.56329409349317E-8	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999993390947768	WITHOUT_CLASSIFICATION	6.609052230925468E-7	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999977292248448	WITHOUT_CLASSIFICATION	2.270775155157395E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.999989677822912	WITHOUT_CLASSIFICATION	1.0322177087920942E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999976101520633	WITHOUT_CLASSIFICATION	2.3898479365741823E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999984755961813	WITHOUT_CLASSIFICATION	1.5244038187221545E-6	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999998734118573	WITHOUT_CLASSIFICATION	1.2658814280549308E-7	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999972006081678	WITHOUT_CLASSIFICATION	2.7993918321578986E-6	TEST
// line 326	WITHOUT_CLASSIFICATION	0.999984645505641	WITHOUT_CLASSIFICATION	1.5354494358988786E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999976101520633	WITHOUT_CLASSIFICATION	2.3898479365741823E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999984755961813	WITHOUT_CLASSIFICATION	1.5244038187221545E-6	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999991632621643	WITHOUT_CLASSIFICATION	8.367378357158729E-7	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999993026928601	WITHOUT_CLASSIFICATION	6.973071400209287E-7	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999949799157817	WITHOUT_CLASSIFICATION	5.020084218297451E-6	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999968969371918	WITHOUT_CLASSIFICATION	3.1030628081809306E-6	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999998622702224	WITHOUT_CLASSIFICATION	1.3772977763893311E-7	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999955822877246	WITHOUT_CLASSIFICATION	4.417712275439365E-6	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999887590341553	WITHOUT_CLASSIFICATION	1.124096584475667E-5	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999923974181223	WITHOUT_CLASSIFICATION	7.602581877683118E-6	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999932832476328	WITHOUT_CLASSIFICATION	6.716752367130131E-6	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999997572682154	WITHOUT_CLASSIFICATION	2.427317845555731E-7	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999997405810411	WITHOUT_CLASSIFICATION	2.594189588697544E-7	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999998841393497	WITHOUT_CLASSIFICATION	1.1586065026614785E-7	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999975135259038	WITHOUT_CLASSIFICATION	2.4864740961188975E-6	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999991690849674	WITHOUT_CLASSIFICATION	8.309150325518234E-7	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999998564429577	WITHOUT_CLASSIFICATION	1.4355704216392032E-7	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999998635557806	WITHOUT_CLASSIFICATION	1.3644421939666444E-7	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999985934048268	WITHOUT_CLASSIFICATION	1.4065951732864015E-6	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999985870402773	WITHOUT_CLASSIFICATION	1.4129597226100014E-6	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999996238199379	WITHOUT_CLASSIFICATION	3.7618006204120734E-7	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999739029376	WITHOUT_CLASSIFICATION	2.6097062393667627E-8	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999994591639373	WITHOUT_CLASSIFICATION	5.408360626088147E-7	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999996171897112	WITHOUT_CLASSIFICATION	3.828102888208681E-7	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999471166392	WITHOUT_CLASSIFICATION	5.2883360718677644E-8	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999973575999657	WITHOUT_CLASSIFICATION	2.642400034273299E-6	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999887761819	WITHOUT_CLASSIFICATION	1.122381812308607E-8	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999994600885479	WITHOUT_CLASSIFICATION	5.399114521499291E-7	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999991532759549	WITHOUT_CLASSIFICATION	8.467240451808507E-7	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.99988903591279	WITHOUT_CLASSIFICATION	1.1096408720996442E-4	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999997540107114	WITHOUT_CLASSIFICATION	2.459892886199107E-7	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999998267309628	WITHOUT_CLASSIFICATION	1.7326903720770274E-7	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.99999995121812	WITHOUT_CLASSIFICATION	4.878187993198814E-8	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999991932726012	WITHOUT_CLASSIFICATION	8.067273987483769E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998843445478037	WITHOUT_CLASSIFICATION	1.156554521962287E-4	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998843445478037	WITHOUT_CLASSIFICATION	1.156554521962287E-4	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999969656407203	WITHOUT_CLASSIFICATION	3.0343592797645526E-6	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999523221828	WITHOUT_CLASSIFICATION	4.767781722643816E-8	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999995544848093	WITHOUT_CLASSIFICATION	4.455151907379773E-7	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999950863355066	WITHOUT_CLASSIFICATION	4.913664493370186E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999997681673195	WITHOUT_CLASSIFICATION	2.3183268045024998E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999997681673195	WITHOUT_CLASSIFICATION	2.3183268045024998E-7	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999992400369584	WITHOUT_CLASSIFICATION	7.599630414855639E-7	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999992288282803	WITHOUT_CLASSIFICATION	7.711717197573794E-7	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999992394423062	WITHOUT_CLASSIFICATION	7.605576938788512E-7	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999967058157591	WITHOUT_CLASSIFICATION	3.2941842409660434E-6	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.999996485894591	WITHOUT_CLASSIFICATION	3.5141054089355505E-6	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999947984956	WITHOUT_CLASSIFICATION	5.201504415239752E-9	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999172396423	WITHOUT_CLASSIFICATION	8.276035763769625E-8	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999716852321385	WITHOUT_CLASSIFICATION	2.8314767861491134E-5	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999131709125	WITHOUT_CLASSIFICATION	8.682908755059323E-8	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999985500865891	WITHOUT_CLASSIFICATION	1.4499134108348202E-6	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999851481923341	WITHOUT_CLASSIFICATION	1.4851807665892276E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999734689453631	WITHOUT_CLASSIFICATION	2.6531054636869956E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999543285208617	WITHOUT_CLASSIFICATION	4.567147913826849E-5	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999997203889613	WITHOUT_CLASSIFICATION	2.7961103868927386E-7	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999981254288691	WITHOUT_CLASSIFICATION	1.8745711308209E-6	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999954928357138	WITHOUT_CLASSIFICATION	4.507164286277679E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999970000586899	WITHOUT_CLASSIFICATION	2.9999413102750587E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999970000586899	WITHOUT_CLASSIFICATION	2.9999413102750587E-6	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999995177007864	WITHOUT_CLASSIFICATION	4.822992136398614E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999995177007864	WITHOUT_CLASSIFICATION	4.822992136398614E-7	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999087704955	WITHOUT_CLASSIFICATION	9.122950441598257E-8	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.999999892856966	WITHOUT_CLASSIFICATION	1.0714303394632748E-7	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999998907327182	WITHOUT_CLASSIFICATION	1.0926728185427203E-7	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999998128009445	WITHOUT_CLASSIFICATION	1.8719905549289064E-7	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999976721393568	WITHOUT_CLASSIFICATION	2.3278606431441225E-6	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999915726256459	WITHOUT_CLASSIFICATION	8.427374354235147E-6	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999993568194853	WITHOUT_CLASSIFICATION	6.431805147900706E-7	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999734689453631	WITHOUT_CLASSIFICATION	2.6531054636869956E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999543285208617	WITHOUT_CLASSIFICATION	4.567147913826849E-5	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999981254288691	WITHOUT_CLASSIFICATION	1.8745711308209E-6	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999998120057678	WITHOUT_CLASSIFICATION	1.8799423210263178E-7	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999998177237447	WITHOUT_CLASSIFICATION	1.8227625525252443E-7	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999834273775	WITHOUT_CLASSIFICATION	1.65726225700595E-8	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999985663098945	WITHOUT_CLASSIFICATION	1.4336901055254894E-6	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999998090002054	WITHOUT_CLASSIFICATION	1.9099979467895482E-7	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.99999984778572	WITHOUT_CLASSIFICATION	1.5221427997694008E-7	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999986633378627	WITHOUT_CLASSIFICATION	1.3366621372659438E-6	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999986416355426	WITHOUT_CLASSIFICATION	1.3583644573803308E-6	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999998265475764	WITHOUT_CLASSIFICATION	1.7345242365711766E-7	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999680398051	WITHOUT_CLASSIFICATION	3.1960194949045306E-8	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999997664286671	WITHOUT_CLASSIFICATION	2.3357133299649928E-7	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999977575576834	WITHOUT_CLASSIFICATION	2.2424423165623753E-6	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.999992684047378	WITHOUT_CLASSIFICATION	7.315952622042119E-6	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999984115330587	WITHOUT_CLASSIFICATION	1.5884669412966919E-6	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.999999743505802	WITHOUT_CLASSIFICATION	2.564941980020645E-7	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999978574968271	WITHOUT_CLASSIFICATION	2.1425031727904345E-6	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999976718139172	WITHOUT_CLASSIFICATION	2.3281860827954547E-6	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999997445310882	WITHOUT_CLASSIFICATION	2.554689118605343E-7	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999997055971697	WITHOUT_CLASSIFICATION	2.944028302583311E-7	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999993588175754	WITHOUT_CLASSIFICATION	6.411824245728243E-7	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999987484495098	WITHOUT_CLASSIFICATION	1.2515504903001489E-6	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999858467018804	WITHOUT_CLASSIFICATION	1.4153298119682484E-5	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999903028361271	WITHOUT_CLASSIFICATION	9.697163872929179E-6	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999992706267012	WITHOUT_CLASSIFICATION	7.293732987516642E-7	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.999995177855052	WITHOUT_CLASSIFICATION	4.822144948005022E-6	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999951216841149	WITHOUT_CLASSIFICATION	4.878315885127484E-6	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999989699268625	WITHOUT_CLASSIFICATION	1.0300731374448346E-6	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999987987617702	WITHOUT_CLASSIFICATION	1.201238229821319E-6	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999986779230596	WITHOUT_CLASSIFICATION	1.3220769404567579E-6	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999983983054792	WITHOUT_CLASSIFICATION	1.6016945208186051E-6	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999985821227287	WITHOUT_CLASSIFICATION	1.4178772712408994E-6	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999983299209093	WITHOUT_CLASSIFICATION	1.6700790905667706E-6	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999983413292192	WITHOUT_CLASSIFICATION	1.658670780793254E-6	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999987693327285	WITHOUT_CLASSIFICATION	1.2306672716085223E-6	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999989758769691	WITHOUT_CLASSIFICATION	1.0241230308584185E-6	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999955916823118	WITHOUT_CLASSIFICATION	4.408317688206289E-6	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999968201822174	WITHOUT_CLASSIFICATION	3.1798177825528037E-6	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999998334028478	WITHOUT_CLASSIFICATION	1.665971522647807E-7	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999706352547547	WITHOUT_CLASSIFICATION	2.936474524521745E-5	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.999999532863674	WITHOUT_CLASSIFICATION	4.671363260225245E-7	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999994673006682	WITHOUT_CLASSIFICATION	5.32699331761303E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999995544848093	WITHOUT_CLASSIFICATION	4.455151907379773E-7	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999968201822174	WITHOUT_CLASSIFICATION	3.1798177825528037E-6	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999999317367974	WITHOUT_CLASSIFICATION	6.826320261152764E-8	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999999978912592	WITHOUT_CLASSIFICATION	2.1087408047819076E-8	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.999999438140791	WITHOUT_CLASSIFICATION	5.618592091351548E-7	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999973433859056	WITHOUT_CLASSIFICATION	2.656614094414038E-6	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999973433859056	WITHOUT_CLASSIFICATION	2.656614094414038E-6	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999989954951909	WITHOUT_CLASSIFICATION	1.0045048091433494E-6	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999998221019819	WITHOUT_CLASSIFICATION	1.7789801805021816E-7	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999999308292142	WITHOUT_CLASSIFICATION	6.917078575275743E-8	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999313405858	WITHOUT_CLASSIFICATION	6.865941423653775E-8	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999993419844768	WITHOUT_CLASSIFICATION	6.580155231244569E-7	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999989971239278	WITHOUT_CLASSIFICATION	1.0028760721509332E-6	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999870723913	WITHOUT_CLASSIFICATION	1.2927608612620082E-8	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999998854156832	WITHOUT_CLASSIFICATION	1.1458431689843884E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999981949198992	WITHOUT_CLASSIFICATION	1.805080100810403E-6	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999981949198992	WITHOUT_CLASSIFICATION	1.805080100810403E-6	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999980982952205	WITHOUT_CLASSIFICATION	1.9017047795226943E-6	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999995870567184	WITHOUT_CLASSIFICATION	4.129432814680858E-7	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999974487684729	WITHOUT_CLASSIFICATION	2.5512315270846084E-6	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999949071114608	WITHOUT_CLASSIFICATION	5.092888539206715E-6	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999941492037369	WITHOUT_CLASSIFICATION	5.850796263151489E-6	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.999997479185068	WITHOUT_CLASSIFICATION	2.520814932069146E-6	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999927266631	WITHOUT_CLASSIFICATION	7.2733369112135175E-9	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999988452572183	WITHOUT_CLASSIFICATION	1.1547427817313941E-6	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999979222826783	WITHOUT_CLASSIFICATION	2.0777173216778644E-6	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999949745816209	WITHOUT_CLASSIFICATION	5.025418379099881E-6	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999806335864752	WITHOUT_CLASSIFICATION	1.936641352478828E-5	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.999997772937134	WITHOUT_CLASSIFICATION	2.2270628659555625E-6	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999982848248301	WITHOUT_CLASSIFICATION	1.7151751698266456E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999797644737856	WITHOUT_CLASSIFICATION	2.0235526214461984E-5	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999797644737856	WITHOUT_CLASSIFICATION	2.0235526214461984E-5	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999972094358401	WITHOUT_CLASSIFICATION	2.790564159898652E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999928871117552	WITHOUT_CLASSIFICATION	7.112888244809448E-6	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999987445162202	WITHOUT_CLASSIFICATION	1.2554837798079403E-6	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999998924239377	WITHOUT_CLASSIFICATION	1.0757606225765066E-7	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999903965626	WITHOUT_CLASSIFICATION	9.603437484526583E-9	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.999999352907194	WITHOUT_CLASSIFICATION	6.470928060738834E-7	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.999998435516887	WITHOUT_CLASSIFICATION	1.5644831129661738E-6	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999994644969868	WITHOUT_CLASSIFICATION	5.3550301309495E-7	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999877241996642	WITHOUT_CLASSIFICATION	1.2275800335909942E-5	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999910585036134	WITHOUT_CLASSIFICATION	8.94149638663784E-6	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999996667944773	WITHOUT_CLASSIFICATION	3.332055226714078E-7	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999986689555256	WITHOUT_CLASSIFICATION	1.331044474376337E-6	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999962585608774	WITHOUT_CLASSIFICATION	3.7414391226248445E-6	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999996953950753	WITHOUT_CLASSIFICATION	3.046049247198201E-7	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999998760878955	WITHOUT_CLASSIFICATION	1.2391210441916872E-7	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999954246715446	WITHOUT_CLASSIFICATION	4.575328455396038E-6	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999996100468787	WITHOUT_CLASSIFICATION	3.89953121411524E-7	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999823246227039	WITHOUT_CLASSIFICATION	1.7675377296090044E-5	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999963032523369	WITHOUT_CLASSIFICATION	3.69674766302054E-6	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999947744721296	WITHOUT_CLASSIFICATION	5.22552787033812E-6	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9999953338365926	WITHOUT_CLASSIFICATION	4.666163407477308E-6	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999926934409062	WITHOUT_CLASSIFICATION	7.306559093810387E-6	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999695645451598	WITHOUT_CLASSIFICATION	3.0435454840184413E-5	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999774630085412	WITHOUT_CLASSIFICATION	2.2536991458729148E-5	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9999999464860243	WITHOUT_CLASSIFICATION	5.351397578880935E-8	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999998334220459	WITHOUT_CLASSIFICATION	1.6657795412349133E-7	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999867678449359	WITHOUT_CLASSIFICATION	1.323215506409291E-5	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999982572010749	WITHOUT_CLASSIFICATION	1.7427989250909577E-6	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999980220806005	WITHOUT_CLASSIFICATION	1.9779193994935783E-6	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999963970428246	WITHOUT_CLASSIFICATION	3.60295717542706E-6	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999992618933362	WITHOUT_CLASSIFICATION	7.381066638186578E-7	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999969649121411	WITHOUT_CLASSIFICATION	3.0350878588495323E-6	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999986664457131	WITHOUT_CLASSIFICATION	1.3335542869452136E-6	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.999999271237366	WITHOUT_CLASSIFICATION	7.287626340583177E-7	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999998883803154	WITHOUT_CLASSIFICATION	1.1161968461798733E-7	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999996667374391	WITHOUT_CLASSIFICATION	3.332625608701863E-7	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999976898818224	WITHOUT_CLASSIFICATION	2.3101181777077315E-6	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999958149737661	WITHOUT_CLASSIFICATION	4.185026233881346E-6	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999984828074951	WITHOUT_CLASSIFICATION	1.5171925048510618E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999942195408177	WITHOUT_CLASSIFICATION	5.780459182294812E-6	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999875955484169	WITHOUT_CLASSIFICATION	1.2404451583112516E-5	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999998292858282	WITHOUT_CLASSIFICATION	1.7071417187254284E-7	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999993013801545	WITHOUT_CLASSIFICATION	6.986198454776521E-7	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999996213642715	WITHOUT_CLASSIFICATION	3.7863572847313484E-7	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9999311311953257	WITHOUT_CLASSIFICATION	6.886880467432376E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999998127591369	WITHOUT_CLASSIFICATION	1.8724086308868992E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999990581822528	WITHOUT_CLASSIFICATION	9.418177472487127E-7	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999984691754069	WITHOUT_CLASSIFICATION	1.530824593054102E-6	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999991553087407	WITHOUT_CLASSIFICATION	8.446912593473388E-7	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999976101520633	WITHOUT_CLASSIFICATION	2.3898479365741823E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999976101520633	WITHOUT_CLASSIFICATION	2.3898479365741823E-6	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999996741411402	WITHOUT_CLASSIFICATION	3.258588597412133E-7	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.999969564441132	WITHOUT_CLASSIFICATION	3.043555886789768E-5	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999972674221224	WITHOUT_CLASSIFICATION	2.7325778776502536E-6	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999999871676063	WITHOUT_CLASSIFICATION	1.2832393616894453E-8	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999998759504761	WITHOUT_CLASSIFICATION	1.2404952391023478E-7	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999997937418216	WITHOUT_CLASSIFICATION	2.0625817841318493E-7	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999328461423	WITHOUT_CLASSIFICATION	6.715385771968872E-8	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999857849681	WITHOUT_CLASSIFICATION	1.4215031965620887E-8	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999665323525	WITHOUT_CLASSIFICATION	3.3467647540279015E-8	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999966944739339	WITHOUT_CLASSIFICATION	3.3055260660013475E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999953786820475	WITHOUT_CLASSIFICATION	4.6213179525939895E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999953786820475	WITHOUT_CLASSIFICATION	4.6213179525939895E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999953786820475	WITHOUT_CLASSIFICATION	4.6213179525939895E-6	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999517627803	WITHOUT_CLASSIFICATION	4.823721971102976E-8	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999992192649102	WITHOUT_CLASSIFICATION	7.807350896926075E-7	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999967071404704	WITHOUT_CLASSIFICATION	3.2928595296941853E-6	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999985230227537	WITHOUT_CLASSIFICATION	1.4769772463309443E-6	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999985230227537	WITHOUT_CLASSIFICATION	1.4769772463309443E-6	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999988453940452	WITHOUT_CLASSIFICATION	1.154605954889583E-6	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999966207301543	WITHOUT_CLASSIFICATION	3.379269845759568E-6	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999962962496026	WITHOUT_CLASSIFICATION	3.7037503972956776E-6	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.999993440231738	WITHOUT_CLASSIFICATION	6.559768262052496E-6	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999988544066322	WITHOUT_CLASSIFICATION	1.1455933678014809E-6	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999957247350042	WITHOUT_CLASSIFICATION	4.275264995788756E-6	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999965409487875	WITHOUT_CLASSIFICATION	3.4590512125083876E-6	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999996026181818	WITHOUT_CLASSIFICATION	3.9738181821242216E-7	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999980107650261	WITHOUT_CLASSIFICATION	1.9892349738568256E-6	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999995571172446	WITHOUT_CLASSIFICATION	4.4288275533745617E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999995571172446	WITHOUT_CLASSIFICATION	4.4288275533745617E-7	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999919505447208	WITHOUT_CLASSIFICATION	8.049455279194223E-6	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.999995068964054	WITHOUT_CLASSIFICATION	4.9310359460288225E-6	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999954720329952	WITHOUT_CLASSIFICATION	4.527967004776388E-6	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999962972997791	WITHOUT_CLASSIFICATION	3.7027002208261986E-6	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999989117813611	WITHOUT_CLASSIFICATION	1.0882186388179493E-6	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999912430366983	WITHOUT_CLASSIFICATION	8.756963301659046E-6	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999944930611754	WITHOUT_CLASSIFICATION	5.5069388247120176E-6	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999951504108276	WITHOUT_CLASSIFICATION	4.849589172419235E-6	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.999980818630696	WITHOUT_CLASSIFICATION	1.9181369304098005E-5	TEST
// POP	WITHOUT_CLASSIFICATION	0.999967168006889	WITHOUT_CLASSIFICATION	3.283199311104926E-5	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.999999933458311	WITHOUT_CLASSIFICATION	6.654168905532042E-8	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999760097718263	WITHOUT_CLASSIFICATION	2.399022817358498E-5	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9999747541219268	WITHOUT_CLASSIFICATION	2.5245878073185725E-5	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999990133867253	WITHOUT_CLASSIFICATION	9.866132746834418E-7	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999924307481965	WITHOUT_CLASSIFICATION	7.569251803468871E-6	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999995123411944	WITHOUT_CLASSIFICATION	4.876588055603616E-7	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999987718231242	WITHOUT_CLASSIFICATION	1.228176875821731E-6	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999993678355328	WITHOUT_CLASSIFICATION	6.321644672493363E-7	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999994308710346	WITHOUT_CLASSIFICATION	5.691289653191438E-7	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999987166639062	WITHOUT_CLASSIFICATION	1.2833360938800476E-6	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999993082569186	WITHOUT_CLASSIFICATION	6.917430814404404E-7	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999974986378846	WITHOUT_CLASSIFICATION	2.5013621154746826E-6	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999996238295312	WITHOUT_CLASSIFICATION	3.7617046882442624E-7	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999941000056554	WITHOUT_CLASSIFICATION	5.8999943446405535E-6	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999854899479583	WITHOUT_CLASSIFICATION	1.451005204173002E-5	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999984780204885	WITHOUT_CLASSIFICATION	1.5219795114799012E-6	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999949526028009	WITHOUT_CLASSIFICATION	5.047397199111302E-6	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.999994146956016	WITHOUT_CLASSIFICATION	5.8530439840103685E-6	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999998140088373	WITHOUT_CLASSIFICATION	1.8599116270175035E-7	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.999964873613576	WITHOUT_CLASSIFICATION	3.512638642400891E-5	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999550391814601	WITHOUT_CLASSIFICATION	4.496081853985519E-5	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999939027612399	WITHOUT_CLASSIFICATION	6.097238760063703E-6	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999915616748509	WITHOUT_CLASSIFICATION	8.438325149116505E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999550391814601	WITHOUT_CLASSIFICATION	4.496081853985519E-5	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999966740110344	WITHOUT_CLASSIFICATION	3.3259889655937537E-6	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999996152190063	WITHOUT_CLASSIFICATION	3.8478099363303705E-7	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999961571698051	WITHOUT_CLASSIFICATION	3.84283019498202E-6	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999904274127732	WITHOUT_CLASSIFICATION	9.572587226826011E-6	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999988743201615	WITHOUT_CLASSIFICATION	1.125679838388979E-6	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.999998311569423	WITHOUT_CLASSIFICATION	1.6884305770693E-6	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999930125553043	WITHOUT_CLASSIFICATION	6.987444695795842E-6	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999968426633098	WITHOUT_CLASSIFICATION	3.1573366901428328E-6	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999895874618949	WITHOUT_CLASSIFICATION	1.0412538105105465E-5	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999755700705123	WITHOUT_CLASSIFICATION	2.442992948767469E-5	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.999899200156583	WITHOUT_CLASSIFICATION	1.0079984341703861E-4	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999828321120774	WITHOUT_CLASSIFICATION	1.7167887922576722E-5	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999901528639995	WITHOUT_CLASSIFICATION	9.847136000529946E-6	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999899996894975	WITHOUT_CLASSIFICATION	1.0000310502494104E-5	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999973153578229	WITHOUT_CLASSIFICATION	2.6846421771401523E-6	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999240506849233	WITHOUT_CLASSIFICATION	7.594931507674418E-5	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.99989531894673	WITHOUT_CLASSIFICATION	1.0468105327005332E-4	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999966392304191	WITHOUT_CLASSIFICATION	3.360769580955538E-6	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999964904359987	WITHOUT_CLASSIFICATION	3.509564001342898E-6	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999777367708963	WITHOUT_CLASSIFICATION	2.2263229103761326E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999960725216672	WITHOUT_CLASSIFICATION	3.92747833270243E-6	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.999982793263658	WITHOUT_CLASSIFICATION	1.7206736342027968E-5	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999884808988785	WITHOUT_CLASSIFICATION	1.1519101121484198E-5	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999969985071886	WITHOUT_CLASSIFICATION	3.0014928112866426E-6	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999957509110856	WITHOUT_CLASSIFICATION	4.249088914378104E-6	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999958754768811	WITHOUT_CLASSIFICATION	4.124523118950519E-6	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999803383817452	WITHOUT_CLASSIFICATION	1.9661618254762483E-5	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999972591551258	WITHOUT_CLASSIFICATION	2.7408448741882696E-6	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.999995305649285	WITHOUT_CLASSIFICATION	4.694350715020492E-6	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999905131844989	WITHOUT_CLASSIFICATION	9.486815501056561E-6	TEST
// hash	WITHOUT_CLASSIFICATION	0.9999861905809757	WITHOUT_CLASSIFICATION	1.38094190243234E-5	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999949115216443	WITHOUT_CLASSIFICATION	5.088478355665773E-6	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999846247452683	WITHOUT_CLASSIFICATION	1.5375254731654974E-5	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999988759400965	WITHOUT_CLASSIFICATION	1.1240599034739373E-6	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999950368893933	WITHOUT_CLASSIFICATION	4.963110606720629E-6	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999922439045715	WITHOUT_CLASSIFICATION	7.756095428460567E-6	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999967355414208	WITHOUT_CLASSIFICATION	3.2644585791086384E-6	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9999345621918284	WITHOUT_CLASSIFICATION	6.543780817162183E-5	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999928588341317	WITHOUT_CLASSIFICATION	7.141165868293202E-6	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999866207835261	WITHOUT_CLASSIFICATION	1.337921647385935E-5	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999925219975974	WITHOUT_CLASSIFICATION	7.4780024025784645E-6	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999954657046953	WITHOUT_CLASSIFICATION	4.534295304682723E-6	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9998826894453032	WITHOUT_CLASSIFICATION	1.1731055469678606E-4	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.999995575415148	WITHOUT_CLASSIFICATION	4.4245848519037945E-6	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999913965034828	WITHOUT_CLASSIFICATION	8.603496517240312E-6	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999922319253334	WITHOUT_CLASSIFICATION	7.768074666535798E-6	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999968819814462	WITHOUT_CLASSIFICATION	3.1180185538341177E-6	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999951116292016	WITHOUT_CLASSIFICATION	4.888370798363537E-6	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.999996452540671	WITHOUT_CLASSIFICATION	3.547459329007431E-6	TEST
// space	WITHOUT_CLASSIFICATION	0.9999942954408924	WITHOUT_CLASSIFICATION	5.704559107646754E-6	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999899502866738	WITHOUT_CLASSIFICATION	1.0049713326140643E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999999958839241	WITHOUT_CLASSIFICATION	4.116075948679518E-9	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999895811002429	WITHOUT_CLASSIFICATION	1.0418899757098157E-5	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.999996452540671	WITHOUT_CLASSIFICATION	3.547459329007431E-6	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999931913514409	WITHOUT_CLASSIFICATION	6.8086485590588705E-6	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999931913514409	WITHOUT_CLASSIFICATION	6.8086485590588705E-6	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999950698564347	WITHOUT_CLASSIFICATION	4.930143565387125E-6	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999959271846871	WITHOUT_CLASSIFICATION	4.072815312966178E-6	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.999998357341193	WITHOUT_CLASSIFICATION	1.6426588070065015E-6	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999847370115881	WITHOUT_CLASSIFICATION	1.526298841186572E-5	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.999999040143407	WITHOUT_CLASSIFICATION	9.59856592911602E-7	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.999984535353103	WITHOUT_CLASSIFICATION	1.546464689696548E-5	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999971899238436	WITHOUT_CLASSIFICATION	2.8100761562932834E-6	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9999995842276259	WITHOUT_CLASSIFICATION	4.1577237403102407E-7	TEST
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999993693381891	WITHOUT_CLASSIFICATION	6.306618109193755E-7	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999289051874467	WITHOUT_CLASSIFICATION	7.109481255325319E-5	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999871838297	WITHOUT_CLASSIFICATION	1.2816170292212009E-8	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999850213537	WITHOUT_CLASSIFICATION	1.497864629940712E-8	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999896948502357	WITHOUT_CLASSIFICATION	1.030514976421151E-5	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999898446213805	WITHOUT_CLASSIFICATION	1.0155378619499571E-5	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999997193080029	WITHOUT_CLASSIFICATION	2.806919970912321E-7	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999997170997857	WITHOUT_CLASSIFICATION	2.829002142232974E-7	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999989159852987	WITHOUT_CLASSIFICATION	1.0840147013287832E-6	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999828152440477	WITHOUT_CLASSIFICATION	1.7184755952304753E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999828152440477	WITHOUT_CLASSIFICATION	1.7184755952304753E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999828152440477	WITHOUT_CLASSIFICATION	1.7184755952304753E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999828152440477	WITHOUT_CLASSIFICATION	1.7184755952304753E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999828152440477	WITHOUT_CLASSIFICATION	1.7184755952304753E-4	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999846385702862	WITHOUT_CLASSIFICATION	1.5361429713846416E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999958005584842	WITHOUT_CLASSIFICATION	4.199441515766889E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999334102998919	WITHOUT_CLASSIFICATION	6.658970010807067E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999985840574542	WITHOUT_CLASSIFICATION	1.4159425457520542E-6	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999992577905199	WITHOUT_CLASSIFICATION	7.422094800968156E-7	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999966395046368	WITHOUT_CLASSIFICATION	3.360495363192196E-6	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.999981698912177	WITHOUT_CLASSIFICATION	1.830108782293653E-5	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999859532771472	WITHOUT_CLASSIFICATION	1.4046722852732441E-5	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999983382275379	WITHOUT_CLASSIFICATION	1.661772462151087E-6	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999869189079238	WITHOUT_CLASSIFICATION	1.3081092076314071E-5	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999845130201048	WITHOUT_CLASSIFICATION	1.5486979895184035E-5	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999845139785807	WITHOUT_CLASSIFICATION	1.548602141925321E-5	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999867018192177	WITHOUT_CLASSIFICATION	1.3298180782361934E-5	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999865965077204	WITHOUT_CLASSIFICATION	1.3403492279681937E-5	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999865218180006	WITHOUT_CLASSIFICATION	1.3478181999439444E-5	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999846187426593	WITHOUT_CLASSIFICATION	1.5381257340765543E-5	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999858714413682	WITHOUT_CLASSIFICATION	1.4128558631731582E-5	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999866747929905	WITHOUT_CLASSIFICATION	1.3325207009377466E-5	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999841205610192	WITHOUT_CLASSIFICATION	1.5879438980776153E-5	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999866358777232	WITHOUT_CLASSIFICATION	1.3364122276727542E-5	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999858983069525	WITHOUT_CLASSIFICATION	1.4101693047469393E-5	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999841454637607	WITHOUT_CLASSIFICATION	1.5854536239272337E-5	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999847078758414	WITHOUT_CLASSIFICATION	1.5292124158585474E-5	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999858905310918	WITHOUT_CLASSIFICATION	1.4109468908204102E-5	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999866887701508	WITHOUT_CLASSIFICATION	1.3311229849073878E-5	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999840916210596	WITHOUT_CLASSIFICATION	1.5908378940489275E-5	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999862996860847	WITHOUT_CLASSIFICATION	1.3700313915413972E-5	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999860709327806	WITHOUT_CLASSIFICATION	1.3929067219336012E-5	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999861142417584	WITHOUT_CLASSIFICATION	1.3885758241547884E-5	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999847361951193	WITHOUT_CLASSIFICATION	1.5263804880695912E-5	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999841766863287	WITHOUT_CLASSIFICATION	1.58233136713821E-5	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999838897184884	WITHOUT_CLASSIFICATION	1.6110281511564924E-5	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999839661834344	WITHOUT_CLASSIFICATION	1.6033816565595387E-5	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999836005115106	WITHOUT_CLASSIFICATION	1.639948848944872E-5	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999842298718244	WITHOUT_CLASSIFICATION	1.5770128175542455E-5	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999836182542421	WITHOUT_CLASSIFICATION	1.6381745757935075E-5	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999835585036234	WITHOUT_CLASSIFICATION	1.6441496376537818E-5	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999836356317735	WITHOUT_CLASSIFICATION	1.636436822648767E-5	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999841690515648	WITHOUT_CLASSIFICATION	1.5830948435063395E-5	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999836399723805	WITHOUT_CLASSIFICATION	1.636002761952374E-5	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999854218246418	WITHOUT_CLASSIFICATION	1.4578175358267742E-5	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999855055647239	WITHOUT_CLASSIFICATION	1.4494435276048345E-5	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999843324487496	WITHOUT_CLASSIFICATION	1.5667551250315815E-5	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999855577300825	WITHOUT_CLASSIFICATION	1.4442269917613024E-5	TEST
// line 501	WITHOUT_CLASSIFICATION	0.999986659574372	WITHOUT_CLASSIFICATION	1.3340425627821078E-5	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999840711047377	WITHOUT_CLASSIFICATION	1.592889526228542E-5	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999840128739049	WITHOUT_CLASSIFICATION	1.598712609511613E-5	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999866924885006	WITHOUT_CLASSIFICATION	1.3307511499495552E-5	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999860788940554	WITHOUT_CLASSIFICATION	1.3921105944713424E-5	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999839897601556	WITHOUT_CLASSIFICATION	1.6010239844454062E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999334102998919	WITHOUT_CLASSIFICATION	6.658970010807067E-5	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999839126836655	WITHOUT_CLASSIFICATION	1.608731633461546E-5	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999841659863435	WITHOUT_CLASSIFICATION	1.5834013656482203E-5	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999840019558092	WITHOUT_CLASSIFICATION	1.5998044190813808E-5	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999836370997073	WITHOUT_CLASSIFICATION	1.6362900292744262E-5	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999835668468422	WITHOUT_CLASSIFICATION	1.6433153157803995E-5	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999834759977851	WITHOUT_CLASSIFICATION	1.652400221481783E-5	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999839990851088	WITHOUT_CLASSIFICATION	1.600091489119621E-5	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999835318596841	WITHOUT_CLASSIFICATION	1.6468140315861302E-5	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999836193067398	WITHOUT_CLASSIFICATION	1.638069326023206E-5	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999834346000225	WITHOUT_CLASSIFICATION	1.656539997757892E-5	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999854058162041	WITHOUT_CLASSIFICATION	1.4594183795854234E-5	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999854451814132	WITHOUT_CLASSIFICATION	1.4554818586808816E-5	TEST
// line 596	WITHOUT_CLASSIFICATION	0.999983607366115	WITHOUT_CLASSIFICATION	1.6392633884988537E-5	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999840758050608	WITHOUT_CLASSIFICATION	1.5924194939229725E-5	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999840175926699	WITHOUT_CLASSIFICATION	1.5982407330147483E-5	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999867032153577	WITHOUT_CLASSIFICATION	1.3296784642305615E-5	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999863935931103	WITHOUT_CLASSIFICATION	1.360640688970992E-5	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999860045986364	WITHOUT_CLASSIFICATION	1.3995401363602305E-5	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999839672199129	WITHOUT_CLASSIFICATION	1.6032780087042534E-5	TEST
// line 638	WITHOUT_CLASSIFICATION	0.999985770462062	WITHOUT_CLASSIFICATION	1.4229537938021577E-5	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999840067150431	WITHOUT_CLASSIFICATION	1.5993284956910235E-5	TEST
// line 646	WITHOUT_CLASSIFICATION	0.999983548540548	WITHOUT_CLASSIFICATION	1.6451459451980756E-5	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999834838936994	WITHOUT_CLASSIFICATION	1.651610630059247E-5	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999840258168118	WITHOUT_CLASSIFICATION	1.5974183188168322E-5	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999834743049857	WITHOUT_CLASSIFICATION	1.6525695014274555E-5	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999841090424693	WITHOUT_CLASSIFICATION	1.5890957530776926E-5	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999841884849799	WITHOUT_CLASSIFICATION	1.5811515020071178E-5	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999835191359604	WITHOUT_CLASSIFICATION	1.6480864039590826E-5	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999866493915771	WITHOUT_CLASSIFICATION	1.3350608422859341E-5	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999859739670137	WITHOUT_CLASSIFICATION	1.4026032986144824E-5	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999846771337122	WITHOUT_CLASSIFICATION	1.532286628777701E-5	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999841157872159	WITHOUT_CLASSIFICATION	1.588421278404034E-5	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999841086113482	WITHOUT_CLASSIFICATION	1.5891388651756497E-5	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999844932588673	WITHOUT_CLASSIFICATION	1.5506741132713174E-5	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999838528235585	WITHOUT_CLASSIFICATION	1.6147176441556044E-5	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999857561783537	WITHOUT_CLASSIFICATION	1.4243821646221539E-5	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999861661660104	WITHOUT_CLASSIFICATION	1.3833833989513369E-5	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999836050985541	WITHOUT_CLASSIFICATION	1.6394901445870575E-5	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999834528631247	WITHOUT_CLASSIFICATION	1.6547136875246332E-5	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999840996477364	WITHOUT_CLASSIFICATION	1.590035226356714E-5	TEST
// line 763	WITHOUT_CLASSIFICATION	0.999983941952018	WITHOUT_CLASSIFICATION	1.6058047981923313E-5	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999835608176294	WITHOUT_CLASSIFICATION	1.643918237062802E-5	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999840880076617	WITHOUT_CLASSIFICATION	1.5911992338312485E-5	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999834204203722	WITHOUT_CLASSIFICATION	1.65795796277338E-5	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999860649681142	WITHOUT_CLASSIFICATION	1.3935031885892796E-5	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999853184754286	WITHOUT_CLASSIFICATION	1.4681524571435439E-5	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999861984381423	WITHOUT_CLASSIFICATION	1.3801561857775277E-5	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999836545508478	WITHOUT_CLASSIFICATION	1.634544915217311E-5	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999835833891403	WITHOUT_CLASSIFICATION	1.6416610859787968E-5	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999861658384109	WITHOUT_CLASSIFICATION	1.3834161589133653E-5	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999858338516444	WITHOUT_CLASSIFICATION	1.416614835556525E-5	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999858252773038	WITHOUT_CLASSIFICATION	1.4174722696164103E-5	TEST
// line 815	WITHOUT_CLASSIFICATION	0.999987611398971	WITHOUT_CLASSIFICATION	1.2388601028992777E-5	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999889586171135	WITHOUT_CLASSIFICATION	1.1041382886670626E-5	TEST
// line 821	WITHOUT_CLASSIFICATION	0.999988229594171	WITHOUT_CLASSIFICATION	1.177040582908364E-5	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999860106611526	WITHOUT_CLASSIFICATION	1.398933884732443E-5	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999862013528319	WITHOUT_CLASSIFICATION	1.379864716803162E-5	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999856911080935	WITHOUT_CLASSIFICATION	1.430889190650227E-5	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999857711214348	WITHOUT_CLASSIFICATION	1.4228878565157533E-5	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999857315568191	WITHOUT_CLASSIFICATION	1.4268443180876035E-5	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999860080209952	WITHOUT_CLASSIFICATION	1.3991979004831918E-5	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999853730264188	WITHOUT_CLASSIFICATION	1.4626973581308775E-5	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999859662016611	WITHOUT_CLASSIFICATION	1.4033798338778493E-5	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999853350064184	WITHOUT_CLASSIFICATION	1.4664993581540042E-5	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999877495989096	WITHOUT_CLASSIFICATION	1.2250401090492963E-5	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999853276978149	WITHOUT_CLASSIFICATION	1.467230218521961E-5	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999877343960547	WITHOUT_CLASSIFICATION	1.2265603945378607E-5	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999854298462744	WITHOUT_CLASSIFICATION	1.4570153725514487E-5	TEST
// line 879	WITHOUT_CLASSIFICATION	0.999985431191939	WITHOUT_CLASSIFICATION	1.4568808060934538E-5	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999856908708659	WITHOUT_CLASSIFICATION	1.4309129134089255E-5	TEST
// line 893	WITHOUT_CLASSIFICATION	0.99998586664152	WITHOUT_CLASSIFICATION	1.4133358479975954E-5	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999854717281849	WITHOUT_CLASSIFICATION	1.4528271815098004E-5	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999853552870589	WITHOUT_CLASSIFICATION	1.4644712941156561E-5	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999844278452427	WITHOUT_CLASSIFICATION	1.557215475732701E-5	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999840428364312	WITHOUT_CLASSIFICATION	1.5957163568826425E-5	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999860550400785	WITHOUT_CLASSIFICATION	1.3944959921325073E-5	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999847021492884	WITHOUT_CLASSIFICATION	1.529785071166316E-5	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999845050591516	WITHOUT_CLASSIFICATION	1.54949408483893E-5	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999841417179627	WITHOUT_CLASSIFICATION	1.5858282037346544E-5	TEST
// line 932	WITHOUT_CLASSIFICATION	0.999984567790952	WITHOUT_CLASSIFICATION	1.5432209047967004E-5	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999840169304386	WITHOUT_CLASSIFICATION	1.598306956139517E-5	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999841947038844	WITHOUT_CLASSIFICATION	1.5805296115617214E-5	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999836048389449	WITHOUT_CLASSIFICATION	1.639516105515534E-5	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999854854112368	WITHOUT_CLASSIFICATION	1.4514588763141971E-5	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999836792122877	WITHOUT_CLASSIFICATION	1.6320787712295178E-5	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999841398831768	WITHOUT_CLASSIFICATION	1.5860116823179776E-5	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999836573022702	WITHOUT_CLASSIFICATION	1.6342697729812814E-5	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999835923094499	WITHOUT_CLASSIFICATION	1.6407690550147928E-5	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999842737468918	WITHOUT_CLASSIFICATION	1.572625310828996E-5	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999854750049537	WITHOUT_CLASSIFICATION	1.4524995046368368E-5	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999859400818408	WITHOUT_CLASSIFICATION	1.4059918159265115E-5	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999855115488208	WITHOUT_CLASSIFICATION	1.4488451179220774E-5	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999854693222968	WITHOUT_CLASSIFICATION	1.453067770318612E-5	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999835138679348	WITHOUT_CLASSIFICATION	1.6486132065100322E-5	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999873239719714	WITHOUT_CLASSIFICATION	1.267602802853793E-5	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.999987174967664	WITHOUT_CLASSIFICATION	1.2825032336134977E-5	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999885740911101	WITHOUT_CLASSIFICATION	1.1425908889930894E-5	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999872237222924	WITHOUT_CLASSIFICATION	1.2776277707634391E-5	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999875188350598	WITHOUT_CLASSIFICATION	1.248116494018528E-5	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999878455968487	WITHOUT_CLASSIFICATION	1.2154403151388054E-5	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.99998742066406	WITHOUT_CLASSIFICATION	1.257933593989685E-5	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999871010719621	WITHOUT_CLASSIFICATION	1.28989280379554E-5	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999885799216524	WITHOUT_CLASSIFICATION	1.1420078347682843E-5	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999871437816197	WITHOUT_CLASSIFICATION	1.285621838026282E-5	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999885519379129	WITHOUT_CLASSIFICATION	1.1448062087067886E-5	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999871000063476	WITHOUT_CLASSIFICATION	1.2899993652472665E-5	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.999987397290723	WITHOUT_CLASSIFICATION	1.2602709277071467E-5	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999871022142488	WITHOUT_CLASSIFICATION	1.2897785751069967E-5	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999871033808904	WITHOUT_CLASSIFICATION	1.2896619109560618E-5	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999890648212837	WITHOUT_CLASSIFICATION	1.0935178716373903E-5	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999885679974057	WITHOUT_CLASSIFICATION	1.1432002594391509E-5	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999871750669791	WITHOUT_CLASSIFICATION	1.2824933021025755E-5	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999874735422776	WITHOUT_CLASSIFICATION	1.2526457722327188E-5	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.99998758221085	WITHOUT_CLASSIFICATION	1.2417789149911614E-5	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.999987267838671	WITHOUT_CLASSIFICATION	1.2732161328991323E-5	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999867986341899	WITHOUT_CLASSIFICATION	1.3201365810011214E-5	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999869822226168	WITHOUT_CLASSIFICATION	1.3017777383050572E-5	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999866451561692	WITHOUT_CLASSIFICATION	1.3354843830860688E-5	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999866837333743	WITHOUT_CLASSIFICATION	1.331626662569009E-5	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999873592810481	WITHOUT_CLASSIFICATION	1.2640718951863602E-5	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999868918493491	WITHOUT_CLASSIFICATION	1.3108150650916833E-5	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.999986893760921	WITHOUT_CLASSIFICATION	1.3106239078980003E-5	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.999986920715373	WITHOUT_CLASSIFICATION	1.3079284626942476E-5	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999871658758985	WITHOUT_CLASSIFICATION	1.283412410161747E-5	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999867037909315	WITHOUT_CLASSIFICATION	1.3296209068564592E-5	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999867021279448	WITHOUT_CLASSIFICATION	1.32978720551915E-5	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.999988160139337	WITHOUT_CLASSIFICATION	1.183986066299496E-5	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999867100930455	WITHOUT_CLASSIFICATION	1.3289906954455728E-5	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999866212723778	WITHOUT_CLASSIFICATION	1.3378727622269838E-5	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999881529687111	WITHOUT_CLASSIFICATION	1.1847031288865001E-5	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999895043012758	WITHOUT_CLASSIFICATION	1.0495698724225704E-5	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999895233728981	WITHOUT_CLASSIFICATION	1.047662710176939E-5	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999870592732663	WITHOUT_CLASSIFICATION	1.294072673374136E-5	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999874313463252	WITHOUT_CLASSIFICATION	1.2568653674767593E-5	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.999987390246612	WITHOUT_CLASSIFICATION	1.2609753388035443E-5	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.999987536442028	WITHOUT_CLASSIFICATION	1.246355797212418E-5	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.999987024543316	WITHOUT_CLASSIFICATION	1.2975456684040038E-5	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999873085224005	WITHOUT_CLASSIFICATION	1.2691477599606276E-5	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999872663196917	WITHOUT_CLASSIFICATION	1.2733680308209694E-5	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999873426054721	WITHOUT_CLASSIFICATION	1.2657394527920242E-5	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999870332645046	WITHOUT_CLASSIFICATION	1.2966735495417448E-5	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999870511161125	WITHOUT_CLASSIFICATION	1.2948883887392864E-5	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999873008007648	WITHOUT_CLASSIFICATION	1.2699199235071324E-5	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999869993869077	WITHOUT_CLASSIFICATION	1.3000613092237825E-5	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999888584254826	WITHOUT_CLASSIFICATION	1.1141574517407978E-5	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999887488844613	WITHOUT_CLASSIFICATION	1.1251115538648435E-5	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999874473934265	WITHOUT_CLASSIFICATION	1.255260657355057E-5	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999870255846752	WITHOUT_CLASSIFICATION	1.2974415324808575E-5	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.999986921597228	WITHOUT_CLASSIFICATION	1.307840277190111E-5	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999876550224606	WITHOUT_CLASSIFICATION	1.2344977539582361E-5	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999871803449286	WITHOUT_CLASSIFICATION	1.2819655071323102E-5	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999867113700875	WITHOUT_CLASSIFICATION	1.3288629912597605E-5	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999867232548474	WITHOUT_CLASSIFICATION	1.3276745152535303E-5	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999877171440622	WITHOUT_CLASSIFICATION	1.2282855937647725E-5	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.999988690643995	WITHOUT_CLASSIFICATION	1.1309356005089589E-5	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999867130941908	WITHOUT_CLASSIFICATION	1.3286905809066955E-5	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.999988337814098	WITHOUT_CLASSIFICATION	1.1662185901901538E-5	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999873002398317	WITHOUT_CLASSIFICATION	1.2699760168177303E-5	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999883015844859	WITHOUT_CLASSIFICATION	1.169841551413935E-5	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.999986867044392	WITHOUT_CLASSIFICATION	1.313295560788298E-5	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999883978261638	WITHOUT_CLASSIFICATION	1.1602173836260364E-5	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999883561758435	WITHOUT_CLASSIFICATION	1.1643824156598922E-5	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999873320292658	WITHOUT_CLASSIFICATION	1.2667970734309727E-5	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999865137197896	WITHOUT_CLASSIFICATION	1.3486280210459326E-5	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999869297036497	WITHOUT_CLASSIFICATION	1.3070296350289793E-5	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999868221964212	WITHOUT_CLASSIFICATION	1.317780357870004E-5	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999870192162341	WITHOUT_CLASSIFICATION	1.2980783765928627E-5	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999868847429993	WITHOUT_CLASSIFICATION	1.3115257000676329E-5	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999869337067329	WITHOUT_CLASSIFICATION	1.3066293267109604E-5	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999866810018478	WITHOUT_CLASSIFICATION	1.3318998152046822E-5	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999871133880748	WITHOUT_CLASSIFICATION	1.2886611925083648E-5	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999866245549575	WITHOUT_CLASSIFICATION	1.3375445042669234E-5	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999870516919537	WITHOUT_CLASSIFICATION	1.2948308046345433E-5	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.999986533599879	WITHOUT_CLASSIFICATION	1.3466400121102324E-5	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999885286722326	WITHOUT_CLASSIFICATION	1.1471327767352346E-5	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999881126444924	WITHOUT_CLASSIFICATION	1.1887355507560222E-5	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.999988051154966	WITHOUT_CLASSIFICATION	1.194884503395214E-5	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999867269272138	WITHOUT_CLASSIFICATION	1.3273072786249982E-5	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999873972594578	WITHOUT_CLASSIFICATION	1.260274054214315E-5	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999870898056723	WITHOUT_CLASSIFICATION	1.2910194327638416E-5	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999867972610639	WITHOUT_CLASSIFICATION	1.320273893612033E-5	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999864969302891	WITHOUT_CLASSIFICATION	1.3503069711066327E-5	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999868083689435	WITHOUT_CLASSIFICATION	1.319163105645673E-5	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999869173083509	WITHOUT_CLASSIFICATION	1.3082691649178309E-5	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999868014595193	WITHOUT_CLASSIFICATION	1.319854048070041E-5	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999865461969796	WITHOUT_CLASSIFICATION	1.3453803020405134E-5	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999865208881688	WITHOUT_CLASSIFICATION	1.3479111831305944E-5	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999880916648566	WITHOUT_CLASSIFICATION	1.1908335143378566E-5	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999865819754745	WITHOUT_CLASSIFICATION	1.3418024525411539E-5	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.999986593995829	WITHOUT_CLASSIFICATION	1.3406004171116067E-5	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999864646307655	WITHOUT_CLASSIFICATION	1.3535369234573289E-5	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999880761869726	WITHOUT_CLASSIFICATION	1.1923813027329552E-5	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999864683731122	WITHOUT_CLASSIFICATION	1.3531626887839078E-5	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.999988078700605	WITHOUT_CLASSIFICATION	1.192129939501969E-5	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999870274462422	WITHOUT_CLASSIFICATION	1.2972553757903172E-5	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.999986928391212	WITHOUT_CLASSIFICATION	1.3071608788051667E-5	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999873047340639	WITHOUT_CLASSIFICATION	1.2695265936054102E-5	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999869328317763	WITHOUT_CLASSIFICATION	1.3067168223585775E-5	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999870011729526	WITHOUT_CLASSIFICATION	1.299882704745693E-5	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999873288228776	WITHOUT_CLASSIFICATION	1.2671177122452157E-5	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999883608074867	WITHOUT_CLASSIFICATION	1.1639192513345393E-5	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999866445755641	WITHOUT_CLASSIFICATION	1.3355424435950033E-5	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999865690433316	WITHOUT_CLASSIFICATION	1.3430956668335359E-5	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.999986659835071	WITHOUT_CLASSIFICATION	1.334016492911706E-5	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999865081753326	WITHOUT_CLASSIFICATION	1.3491824667286233E-5	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999881213547956	WITHOUT_CLASSIFICATION	1.1878645204379609E-5	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999865365463406	WITHOUT_CLASSIFICATION	1.346345365942755E-5	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999870668098256	WITHOUT_CLASSIFICATION	1.2933190174346355E-5	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999864819210963	WITHOUT_CLASSIFICATION	1.3518078903746824E-5	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999880826205269	WITHOUT_CLASSIFICATION	1.19173794731433E-5	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999866363957699	WITHOUT_CLASSIFICATION	1.3363604230068016E-5	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999868964747685	WITHOUT_CLASSIFICATION	1.3103525231523887E-5	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999883896601135	WITHOUT_CLASSIFICATION	1.1610339886603099E-5	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999869801528231	WITHOUT_CLASSIFICATION	1.3019847176906782E-5	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999867972858094	WITHOUT_CLASSIFICATION	1.320271419067432E-5	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.999987094384007	WITHOUT_CLASSIFICATION	1.2905615992975315E-5	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999865660618635	WITHOUT_CLASSIFICATION	1.3433938136492496E-5	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999866560627807	WITHOUT_CLASSIFICATION	1.3343937219274472E-5	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999864723156121	WITHOUT_CLASSIFICATION	1.3527684387892859E-5	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.999986560487071	WITHOUT_CLASSIFICATION	1.3439512929008229E-5	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999869914816101	WITHOUT_CLASSIFICATION	1.300851839001201E-5	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999864457078552	WITHOUT_CLASSIFICATION	1.3554292144783787E-5	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999881251988019	WITHOUT_CLASSIFICATION	1.187480119817218E-5	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999896406812833	WITHOUT_CLASSIFICATION	1.0359318716765114E-5	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999894261503793	WITHOUT_CLASSIFICATION	1.057384962060965E-5	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.99998928957342	WITHOUT_CLASSIFICATION	1.0710426579918074E-5	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999898023977759	WITHOUT_CLASSIFICATION	1.0197602224144773E-5	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999779035338019	WITHOUT_CLASSIFICATION	2.2096466198121428E-5	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999243886175595	WITHOUT_CLASSIFICATION	7.5611382440549E-5	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9998640562117458	WITHOUT_CLASSIFICATION	1.359437882542576E-4	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9998614105876082	WITHOUT_CLASSIFICATION	1.3858941239182416E-4	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999974924064141	WITHOUT_CLASSIFICATION	2.507593585938543E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999986500540631	WITHOUT_CLASSIFICATION	1.3499459369154482E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999938141629503	WITHOUT_CLASSIFICATION	6.185837049711836E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999930210264683	WITHOUT_CLASSIFICATION	6.978973531796335E-6	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999034139436858	WITHOUT_CLASSIFICATION	9.658605631424354E-5	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999811921301679	WITHOUT_CLASSIFICATION	1.8807869832061476E-5	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999988959955758	WITHOUT_CLASSIFICATION	1.104004424120235E-6	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999841057144229	WITHOUT_CLASSIFICATION	1.5894285577147102E-5	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999846885932848	WITHOUT_CLASSIFICATION	1.5311406715241133E-5	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999390909465519	WITHOUT_CLASSIFICATION	6.09090534482015E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999972140682342	WITHOUT_CLASSIFICATION	2.7859317657723448E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999931087038565	WITHOUT_CLASSIFICATION	6.891296143473863E-6	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.999977519179252	WITHOUT_CLASSIFICATION	2.2480820747959096E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999955385200787	WITHOUT_CLASSIFICATION	4.461479921332204E-6	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999989497607199	WITHOUT_CLASSIFICATION	1.0502392800397806E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999976923169427	WITHOUT_CLASSIFICATION	2.3076830573213133E-6	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999976832155241	WITHOUT_CLASSIFICATION	2.3167844758726118E-6	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.999988266295642	WITHOUT_CLASSIFICATION	1.173370435803379E-5	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.999999560566745	WITHOUT_CLASSIFICATION	4.3943325505548395E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999991283780424	WITHOUT_CLASSIFICATION	8.716219576874284E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999991283780424	WITHOUT_CLASSIFICATION	8.716219576874284E-7	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.999999827907958	WITHOUT_CLASSIFICATION	1.7209204196519168E-7	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999994069685095	WITHOUT_CLASSIFICATION	5.930314904902674E-7	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999900656854551	WITHOUT_CLASSIFICATION	9.934314544861654E-6	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999989583060525	WITHOUT_CLASSIFICATION	1.0416939475917775E-6	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999994133106963	WITHOUT_CLASSIFICATION	5.866893036264194E-7	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999996565821352	WITHOUT_CLASSIFICATION	3.434178648300676E-7	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999999098445114	WITHOUT_CLASSIFICATION	9.015548863176738E-8	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999985644436357	WITHOUT_CLASSIFICATION	1.435556364381161E-6	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999997323446759	WITHOUT_CLASSIFICATION	2.6765532420097983E-7	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999984917100465	WITHOUT_CLASSIFICATION	1.508289953588195E-6	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.999986079684474	WITHOUT_CLASSIFICATION	1.3920315525966561E-5	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999986609047845	WITHOUT_CLASSIFICATION	1.3390952154347296E-6	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999996217144645	WITHOUT_CLASSIFICATION	3.7828553537602226E-7	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.999955428247771	WITHOUT_CLASSIFICATION	4.457175222911121E-5	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999379244829965	WITHOUT_CLASSIFICATION	6.207551700351124E-5	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.999972980048037	WITHOUT_CLASSIFICATION	2.7019951962945406E-5	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999997669430533	WITHOUT_CLASSIFICATION	2.3305694666187166E-7	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999912288388606	WITHOUT_CLASSIFICATION	8.77116113944534E-6	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999998514636431	WITHOUT_CLASSIFICATION	1.4853635681984787E-7	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999986931601542	WITHOUT_CLASSIFICATION	1.306839845800684E-6	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999998618311225	WITHOUT_CLASSIFICATION	1.381688775197754E-7	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999603226368385	WITHOUT_CLASSIFICATION	3.967736316141622E-5	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999997191643972	WITHOUT_CLASSIFICATION	2.808356027817013E-7	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999988234233713	WITHOUT_CLASSIFICATION	1.1765766287304143E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999997191643972	WITHOUT_CLASSIFICATION	2.808356027817013E-7	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999986672444248	WITHOUT_CLASSIFICATION	1.3327555752130873E-6	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999978018762239	WITHOUT_CLASSIFICATION	2.1981237761465698E-6	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.999999553117299	WITHOUT_CLASSIFICATION	4.468827008992911E-7	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999938039051439	WITHOUT_CLASSIFICATION	6.196094856001358E-6	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999987849650281	WITHOUT_CLASSIFICATION	1.2150349718645487E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999590561724431	WITHOUT_CLASSIFICATION	4.094382755699778E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999590561724431	WITHOUT_CLASSIFICATION	4.094382755699778E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999590561724431	WITHOUT_CLASSIFICATION	4.094382755699778E-5	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999972790834143	WITHOUT_CLASSIFICATION	2.7209165857367005E-6	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999957734203787	WITHOUT_CLASSIFICATION	4.226579621261717E-6	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999995132256693	WITHOUT_CLASSIFICATION	4.867743306781916E-7	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998333260381687	WITHOUT_CLASSIFICATION	1.6667396183132294E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998333260381687	WITHOUT_CLASSIFICATION	1.6667396183132294E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998333260381687	WITHOUT_CLASSIFICATION	1.6667396183132294E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998333260381687	WITHOUT_CLASSIFICATION	1.6667396183132294E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998333260381687	WITHOUT_CLASSIFICATION	1.6667396183132294E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998333260381687	WITHOUT_CLASSIFICATION	1.6667396183132294E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999127209859768	WITHOUT_CLASSIFICATION	8.727901402311102E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999127209859768	WITHOUT_CLASSIFICATION	8.727901402311102E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999127209859768	WITHOUT_CLASSIFICATION	8.727901402311102E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999127209859768	WITHOUT_CLASSIFICATION	8.727901402311102E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999127209859768	WITHOUT_CLASSIFICATION	8.727901402311102E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999713647820571	WITHOUT_CLASSIFICATION	2.8635217942895517E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999713647820571	WITHOUT_CLASSIFICATION	2.8635217942895517E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999713647820571	WITHOUT_CLASSIFICATION	2.8635217942895517E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999713647820571	WITHOUT_CLASSIFICATION	2.8635217942895517E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999713647820571	WITHOUT_CLASSIFICATION	2.8635217942895517E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999140809638779	WITHOUT_CLASSIFICATION	8.591903612204196E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999140809638779	WITHOUT_CLASSIFICATION	8.591903612204196E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999140809638779	WITHOUT_CLASSIFICATION	8.591903612204196E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999140809638779	WITHOUT_CLASSIFICATION	8.591903612204196E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999140809638779	WITHOUT_CLASSIFICATION	8.591903612204196E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999140809638779	WITHOUT_CLASSIFICATION	8.591903612204196E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999209152737856	WITHOUT_CLASSIFICATION	7.90847262144816E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999209152737856	WITHOUT_CLASSIFICATION	7.90847262144816E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999209152737856	WITHOUT_CLASSIFICATION	7.90847262144816E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999209152737856	WITHOUT_CLASSIFICATION	7.90847262144816E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999209152737856	WITHOUT_CLASSIFICATION	7.90847262144816E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999213380589513	WITHOUT_CLASSIFICATION	7.866194104857008E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999213380589513	WITHOUT_CLASSIFICATION	7.866194104857008E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999213380589513	WITHOUT_CLASSIFICATION	7.866194104857008E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999213380589513	WITHOUT_CLASSIFICATION	7.866194104857008E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999213380589513	WITHOUT_CLASSIFICATION	7.866194104857008E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999334102998919	WITHOUT_CLASSIFICATION	6.658970010807067E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999334102998919	WITHOUT_CLASSIFICATION	6.658970010807067E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999334102998919	WITHOUT_CLASSIFICATION	6.658970010807067E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999334102998919	WITHOUT_CLASSIFICATION	6.658970010807067E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999334102998919	WITHOUT_CLASSIFICATION	6.658970010807067E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999985840574542	WITHOUT_CLASSIFICATION	1.4159425457520542E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999966395046368	WITHOUT_CLASSIFICATION	3.360495363192196E-6	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.999981698912177	WITHOUT_CLASSIFICATION	1.830108782293653E-5	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999859532771472	WITHOUT_CLASSIFICATION	1.4046722852732441E-5	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999983382275379	WITHOUT_CLASSIFICATION	1.661772462151087E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999871237388008	WITHOUT_CLASSIFICATION	1.2876261199086889E-5	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999866358777232	WITHOUT_CLASSIFICATION	1.3364122276727542E-5	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999866887701508	WITHOUT_CLASSIFICATION	1.3311229849073878E-5	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999861142417584	WITHOUT_CLASSIFICATION	1.3885758241547884E-5	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999847361951193	WITHOUT_CLASSIFICATION	1.5263804880695912E-5	TEST
// line 423	WITHOUT_CLASSIFICATION	0.999984539226343	WITHOUT_CLASSIFICATION	1.5460773656927636E-5	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999841766863287	WITHOUT_CLASSIFICATION	1.58233136713821E-5	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999866948961679	WITHOUT_CLASSIFICATION	1.3305103832191475E-5	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999865640831241	WITHOUT_CLASSIFICATION	1.3435916875755741E-5	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999844971925503	WITHOUT_CLASSIFICATION	1.5502807449595096E-5	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999846963341573	WITHOUT_CLASSIFICATION	1.530366584270349E-5	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999846270412344	WITHOUT_CLASSIFICATION	1.5372958765639632E-5	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999865596011557	WITHOUT_CLASSIFICATION	1.3440398844316931E-5	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999839808806608	WITHOUT_CLASSIFICATION	1.6019119339185876E-5	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999840696996086	WITHOUT_CLASSIFICATION	1.59303003914256E-5	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999847454687179	WITHOUT_CLASSIFICATION	1.5254531282223459E-5	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999841215260877	WITHOUT_CLASSIFICATION	1.5878473912303358E-5	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999859419793324	WITHOUT_CLASSIFICATION	1.4058020667535086E-5	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999841617681987	WITHOUT_CLASSIFICATION	1.5838231801269843E-5	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999859304266169	WITHOUT_CLASSIFICATION	1.4069573383103267E-5	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999840163087266	WITHOUT_CLASSIFICATION	1.5983691273517712E-5	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999858712185018	WITHOUT_CLASSIFICATION	1.4128781498217298E-5	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999847301103184	WITHOUT_CLASSIFICATION	1.526988968157021E-5	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999842148429656	WITHOUT_CLASSIFICATION	1.578515703433375E-5	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999841695392196	WITHOUT_CLASSIFICATION	1.5830460780319474E-5	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999845683157761	WITHOUT_CLASSIFICATION	1.543168422391316E-5	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999840174739961	WITHOUT_CLASSIFICATION	1.598252600378049E-5	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999835393231746	WITHOUT_CLASSIFICATION	1.64606768254628E-5	TEST
// line 448	WITHOUT_CLASSIFICATION	0.999985426524505	WITHOUT_CLASSIFICATION	1.4573475495082076E-5	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999835423417895	WITHOUT_CLASSIFICATION	1.6457658210502695E-5	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999836270857821	WITHOUT_CLASSIFICATION	1.6372914217829964E-5	TEST
// line 466	WITHOUT_CLASSIFICATION	0.999983559354295	WITHOUT_CLASSIFICATION	1.6440645705144513E-5	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999836457121811	WITHOUT_CLASSIFICATION	1.6354287818941687E-5	TEST
// line 478	WITHOUT_CLASSIFICATION	0.999985466304271	WITHOUT_CLASSIFICATION	1.4533695728943836E-5	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999877974132401	WITHOUT_CLASSIFICATION	1.2202586759892851E-5	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999853921802199	WITHOUT_CLASSIFICATION	1.4607819780195229E-5	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999836493532638	WITHOUT_CLASSIFICATION	1.635064673620407E-5	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999838678101735	WITHOUT_CLASSIFICATION	1.613218982661953E-5	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999843986056304	WITHOUT_CLASSIFICATION	1.5601394369634634E-5	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999840242197966	WITHOUT_CLASSIFICATION	1.5975780203385857E-5	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999840145392807	WITHOUT_CLASSIFICATION	1.5985460719286567E-5	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999865905380461	WITHOUT_CLASSIFICATION	1.3409461954018546E-5	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999866770860365	WITHOUT_CLASSIFICATION	1.3322913963469255E-5	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999841128903468	WITHOUT_CLASSIFICATION	1.5887109653159114E-5	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999841659863435	WITHOUT_CLASSIFICATION	1.5834013656482203E-5	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999840019558092	WITHOUT_CLASSIFICATION	1.5998044190813808E-5	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999836370997073	WITHOUT_CLASSIFICATION	1.6362900292744262E-5	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999835318596841	WITHOUT_CLASSIFICATION	1.6468140315861302E-5	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999867032153577	WITHOUT_CLASSIFICATION	1.3296784642305615E-5	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999841884849799	WITHOUT_CLASSIFICATION	1.5811515020071178E-5	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999862049664262	WITHOUT_CLASSIFICATION	1.3795033573721642E-5	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999835191359604	WITHOUT_CLASSIFICATION	1.6480864039590826E-5	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999840880076617	WITHOUT_CLASSIFICATION	1.5911992338312485E-5	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999860649681142	WITHOUT_CLASSIFICATION	1.3935031885892796E-5	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999853941471334	WITHOUT_CLASSIFICATION	1.4605852866521894E-5	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999853184754286	WITHOUT_CLASSIFICATION	1.4681524571435439E-5	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999861984381423	WITHOUT_CLASSIFICATION	1.3801561857775277E-5	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999839776714551	WITHOUT_CLASSIFICATION	1.6022328544913927E-5	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999836860899436	WITHOUT_CLASSIFICATION	1.63139100564079E-5	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999840843462022	WITHOUT_CLASSIFICATION	1.591565379768319E-5	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999853392523913	WITHOUT_CLASSIFICATION	1.4660747608638601E-5	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999862314294451	WITHOUT_CLASSIFICATION	1.3768570554780856E-5	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999861690254513	WITHOUT_CLASSIFICATION	1.3830974548537345E-5	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999836252207406	WITHOUT_CLASSIFICATION	1.6374779259384925E-5	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999835718848286	WITHOUT_CLASSIFICATION	1.642811517154068E-5	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999854625613978	WITHOUT_CLASSIFICATION	1.4537438602287505E-5	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999854621046785	WITHOUT_CLASSIFICATION	1.4537895321580187E-5	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999842033315111	WITHOUT_CLASSIFICATION	1.5796668488922853E-5	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999834717791882	WITHOUT_CLASSIFICATION	1.6528220811829408E-5	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999854387103143	WITHOUT_CLASSIFICATION	1.456128968559661E-5	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999844793592335	WITHOUT_CLASSIFICATION	1.5520640766491743E-5	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999840963135646	WITHOUT_CLASSIFICATION	1.5903686435448874E-5	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999844419653027	WITHOUT_CLASSIFICATION	1.5558034697301048E-5	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999838666631904	WITHOUT_CLASSIFICATION	1.6133336809543088E-5	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999839122692186	WITHOUT_CLASSIFICATION	1.6087730781412177E-5	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999854633645961	WITHOUT_CLASSIFICATION	1.4536635403768192E-5	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999836017547445	WITHOUT_CLASSIFICATION	1.6398245255398646E-5	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999861096733093	WITHOUT_CLASSIFICATION	1.3890326690786893E-5	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999833952893367	WITHOUT_CLASSIFICATION	1.6604710663372397E-5	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999854113080554	WITHOUT_CLASSIFICATION	1.4588691944633303E-5	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999860796371123	WITHOUT_CLASSIFICATION	1.392036288770259E-5	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999853339322474	WITHOUT_CLASSIFICATION	1.4666067752515281E-5	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999834813919243	WITHOUT_CLASSIFICATION	1.6518608075777275E-5	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999840120170985	WITHOUT_CLASSIFICATION	1.59879829014937E-5	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999857982522347	WITHOUT_CLASSIFICATION	1.4201747765255697E-5	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999840138197794	WITHOUT_CLASSIFICATION	1.5986180220575983E-5	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999838020682885	WITHOUT_CLASSIFICATION	1.619793171143577E-5	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999839483731167	WITHOUT_CLASSIFICATION	1.6051626883424595E-5	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999834737092079	WITHOUT_CLASSIFICATION	1.6526290792106913E-5	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999881707002138	WITHOUT_CLASSIFICATION	1.1829299786064814E-5	TEST
// line 808	WITHOUT_CLASSIFICATION	0.999985725952565	WITHOUT_CLASSIFICATION	1.4274047435037192E-5	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999878013317168	WITHOUT_CLASSIFICATION	1.2198668283148631E-5	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999876362140466	WITHOUT_CLASSIFICATION	1.2363785953402068E-5	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999860080209952	WITHOUT_CLASSIFICATION	1.3991979004831918E-5	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999854357186745	WITHOUT_CLASSIFICATION	1.4564281325507438E-5	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999853730264188	WITHOUT_CLASSIFICATION	1.4626973581308775E-5	TEST
// line 893	WITHOUT_CLASSIFICATION	0.99998586664152	WITHOUT_CLASSIFICATION	1.4133358479975954E-5	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999853552870589	WITHOUT_CLASSIFICATION	1.4644712941156561E-5	TEST
// line 932	WITHOUT_CLASSIFICATION	0.999984567790952	WITHOUT_CLASSIFICATION	1.5432209047967004E-5	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999836048389449	WITHOUT_CLASSIFICATION	1.639516105515534E-5	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999841398831768	WITHOUT_CLASSIFICATION	1.5860116823179776E-5	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999859400818408	WITHOUT_CLASSIFICATION	1.4059918159265115E-5	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.999987174967664	WITHOUT_CLASSIFICATION	1.2825032336134977E-5	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999888354940633	WITHOUT_CLASSIFICATION	1.1164505936785673E-5	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999864602236868	WITHOUT_CLASSIFICATION	1.3539776313178123E-5	TEST
// line 826	WITHOUT_CLASSIFICATION	0.999985964197888	WITHOUT_CLASSIFICATION	1.4035802111904991E-5	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999859614675405	WITHOUT_CLASSIFICATION	1.4038532459513763E-5	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999862606375933	WITHOUT_CLASSIFICATION	1.3739362406682748E-5	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999877488753822	WITHOUT_CLASSIFICATION	1.2251124617770386E-5	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999854219236948	WITHOUT_CLASSIFICATION	1.4578076305192433E-5	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999859118242058	WITHOUT_CLASSIFICATION	1.4088175794214453E-5	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999857720998239	WITHOUT_CLASSIFICATION	1.4227900176242347E-5	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999853566455278	WITHOUT_CLASSIFICATION	1.4643354472315643E-5	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999854380724865	WITHOUT_CLASSIFICATION	1.4561927513582875E-5	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999853842148918	WITHOUT_CLASSIFICATION	1.4615785108139616E-5	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999853983006353	WITHOUT_CLASSIFICATION	1.4601699364683032E-5	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999853382363685	WITHOUT_CLASSIFICATION	1.4661763631412402E-5	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999859440544667	WITHOUT_CLASSIFICATION	1.405594553323748E-5	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999846352876415	WITHOUT_CLASSIFICATION	1.536471235851943E-5	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999839257740974	WITHOUT_CLASSIFICATION	1.6074225902607014E-5	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999866063621122	WITHOUT_CLASSIFICATION	1.3393637887895685E-5	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999860977922717	WITHOUT_CLASSIFICATION	1.3902207728340317E-5	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999841242510096	WITHOUT_CLASSIFICATION	1.5875748990411623E-5	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999859200275325	WITHOUT_CLASSIFICATION	1.407997246763718E-5	TEST
// line 941	WITHOUT_CLASSIFICATION	0.999986242024457	WITHOUT_CLASSIFICATION	1.3757975543079226E-5	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999836406976421	WITHOUT_CLASSIFICATION	1.6359302357961632E-5	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999862010665906	WITHOUT_CLASSIFICATION	1.3798933409301316E-5	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999834621158782	WITHOUT_CLASSIFICATION	1.6537884121861447E-5	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999836028306371	WITHOUT_CLASSIFICATION	1.6397169362853568E-5	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999834804024843	WITHOUT_CLASSIFICATION	1.651959751572799E-5	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999835455873451	WITHOUT_CLASSIFICATION	1.6454412654812693E-5	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999858018499608	WITHOUT_CLASSIFICATION	1.4198150039126167E-5	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999874516109227	WITHOUT_CLASSIFICATION	1.2548389077192094E-5	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999878103083357	WITHOUT_CLASSIFICATION	1.2189691664335542E-5	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999873436128377	WITHOUT_CLASSIFICATION	1.2656387162249074E-5	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999871728269332	WITHOUT_CLASSIFICATION	1.2827173066882387E-5	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999874355640619	WITHOUT_CLASSIFICATION	1.2564435938001225E-5	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.999987142173663	WITHOUT_CLASSIFICATION	1.2857826336977167E-5	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999870900227621	WITHOUT_CLASSIFICATION	1.2909977237812618E-5	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999871016683681	WITHOUT_CLASSIFICATION	1.2898331631942401E-5	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999870991228994	WITHOUT_CLASSIFICATION	1.2900877100544387E-5	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999870617936992	WITHOUT_CLASSIFICATION	1.2938206300785905E-5	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999872444262304	WITHOUT_CLASSIFICATION	1.2755573769524204E-5	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999867986341899	WITHOUT_CLASSIFICATION	1.3201365810011214E-5	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999870862889904	WITHOUT_CLASSIFICATION	1.2913711009678693E-5	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999873592810481	WITHOUT_CLASSIFICATION	1.2640718951863602E-5	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999871658758985	WITHOUT_CLASSIFICATION	1.283412410161747E-5	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.999988160139337	WITHOUT_CLASSIFICATION	1.183986066299496E-5	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999874313463252	WITHOUT_CLASSIFICATION	1.2568653674767593E-5	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.999987390246612	WITHOUT_CLASSIFICATION	1.2609753388035443E-5	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999870332645046	WITHOUT_CLASSIFICATION	1.2966735495417448E-5	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999870511161125	WITHOUT_CLASSIFICATION	1.2948883887392864E-5	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999870431963337	WITHOUT_CLASSIFICATION	1.29568036663005E-5	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999885430819861	WITHOUT_CLASSIFICATION	1.1456918013734556E-5	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999886015773052	WITHOUT_CLASSIFICATION	1.1398422694830204E-5	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999885546896049	WITHOUT_CLASSIFICATION	1.1445310395095468E-5	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.999987124189808	WITHOUT_CLASSIFICATION	1.2875810191959179E-5	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999874751646498	WITHOUT_CLASSIFICATION	1.252483535026071E-5	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999867457636243	WITHOUT_CLASSIFICATION	1.325423637559645E-5	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999866860992194	WITHOUT_CLASSIFICATION	1.3313900780478522E-5	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999895078422879	WITHOUT_CLASSIFICATION	1.049215771210379E-5	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999871432265492	WITHOUT_CLASSIFICATION	1.2856773450639603E-5	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999871004960501	WITHOUT_CLASSIFICATION	1.2899503949898552E-5	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999884386681688	WITHOUT_CLASSIFICATION	1.1561331831082087E-5	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999866868957442	WITHOUT_CLASSIFICATION	1.3313104255777928E-5	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999868028297283	WITHOUT_CLASSIFICATION	1.3197170271726895E-5	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999865522269381	WITHOUT_CLASSIFICATION	1.3447773061924642E-5	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999871531215054	WITHOUT_CLASSIFICATION	1.2846878494511244E-5	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999869681643809	WITHOUT_CLASSIFICATION	1.303183561908173E-5	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999866729813558	WITHOUT_CLASSIFICATION	1.3327018644281258E-5	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999899720256451	WITHOUT_CLASSIFICATION	1.0027974354986263E-5	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999871302484378	WITHOUT_CLASSIFICATION	1.2869751562247156E-5	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999866976839223	WITHOUT_CLASSIFICATION	1.3302316077552397E-5	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999872535856013	WITHOUT_CLASSIFICATION	1.274641439867381E-5	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999869497372431	WITHOUT_CLASSIFICATION	1.3050262756975527E-5	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999873024369862	WITHOUT_CLASSIFICATION	1.2697563013869659E-5	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999872995175696	WITHOUT_CLASSIFICATION	1.2700482430389596E-5	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.999987004843056	WITHOUT_CLASSIFICATION	1.2995156944030202E-5	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.999987041013662	WITHOUT_CLASSIFICATION	1.2958986338089483E-5	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999884618622774	WITHOUT_CLASSIFICATION	1.1538137722642085E-5	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999870429014766	WITHOUT_CLASSIFICATION	1.2957098523482365E-5	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999874170597332	WITHOUT_CLASSIFICATION	1.2582940266843568E-5	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999872927811362	WITHOUT_CLASSIFICATION	1.2707218863811801E-5	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999869952297732	WITHOUT_CLASSIFICATION	1.3004770226797306E-5	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999869964308646	WITHOUT_CLASSIFICATION	1.300356913541649E-5	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999885524279413	WITHOUT_CLASSIFICATION	1.1447572058736636E-5	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999884850161556	WITHOUT_CLASSIFICATION	1.1514983844499612E-5	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999870058664392	WITHOUT_CLASSIFICATION	1.2994133560872466E-5	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.999986984852191	WITHOUT_CLASSIFICATION	1.301514780893411E-5	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999884750584179	WITHOUT_CLASSIFICATION	1.1524941581976217E-5	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.999987155869368	WITHOUT_CLASSIFICATION	1.2844130631972749E-5	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.999988337814098	WITHOUT_CLASSIFICATION	1.1662185901901538E-5	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999883561758435	WITHOUT_CLASSIFICATION	1.1643824156598922E-5	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999873320292658	WITHOUT_CLASSIFICATION	1.2667970734309727E-5	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999880792682814	WITHOUT_CLASSIFICATION	1.1920731718554992E-5	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999871133880748	WITHOUT_CLASSIFICATION	1.2886611925083648E-5	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999870516919537	WITHOUT_CLASSIFICATION	1.2948308046345433E-5	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999867269272138	WITHOUT_CLASSIFICATION	1.3273072786249982E-5	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999873972594578	WITHOUT_CLASSIFICATION	1.260274054214315E-5	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999864683731122	WITHOUT_CLASSIFICATION	1.3531626887839078E-5	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.999988078700605	WITHOUT_CLASSIFICATION	1.192129939501969E-5	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999886194962697	WITHOUT_CLASSIFICATION	1.1380503730276612E-5	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999869268037754	WITHOUT_CLASSIFICATION	1.3073196224655694E-5	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999867498478588	WITHOUT_CLASSIFICATION	1.3250152141156476E-5	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999872206763482	WITHOUT_CLASSIFICATION	1.2779323651854531E-5	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999872622606072	WITHOUT_CLASSIFICATION	1.2737739392715411E-5	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999872565071796	WITHOUT_CLASSIFICATION	1.2743492820472856E-5	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999867404191546	WITHOUT_CLASSIFICATION	1.3259580845342648E-5	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999873452159344	WITHOUT_CLASSIFICATION	1.2654784065564847E-5	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999868276070697	WITHOUT_CLASSIFICATION	1.3172392930370626E-5	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999868609910291	WITHOUT_CLASSIFICATION	1.3139008970888825E-5	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999868148117815	WITHOUT_CLASSIFICATION	1.3185188218461004E-5	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999867852683189	WITHOUT_CLASSIFICATION	1.3214731681213443E-5	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999868554407944	WITHOUT_CLASSIFICATION	1.3144559205715784E-5	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.999986779603052	WITHOUT_CLASSIFICATION	1.3220396947961558E-5	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999867403141538	WITHOUT_CLASSIFICATION	1.3259685846236372E-5	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.999988331786571	WITHOUT_CLASSIFICATION	1.1668213428990876E-5	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.999986748504628	WITHOUT_CLASSIFICATION	1.3251495372025955E-5	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999871284155609	WITHOUT_CLASSIFICATION	1.287158443914736E-5	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999869919349509	WITHOUT_CLASSIFICATION	1.300806504909334E-5	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.999986540732489	WITHOUT_CLASSIFICATION	1.3459267510887542E-5	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999869874071982	WITHOUT_CLASSIFICATION	1.3012592801964822E-5	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999870413414229	WITHOUT_CLASSIFICATION	1.2958658577135779E-5	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999873228068444	WITHOUT_CLASSIFICATION	1.2677193155651546E-5	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999868540305542	WITHOUT_CLASSIFICATION	1.3145969445813623E-5	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999869266975054	WITHOUT_CLASSIFICATION	1.3073302494449238E-5	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999870646649135	WITHOUT_CLASSIFICATION	1.293533508650256E-5	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999865355810413	WITHOUT_CLASSIFICATION	1.3464418958660916E-5	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.999988117532719	WITHOUT_CLASSIFICATION	1.1882467280934072E-5	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999865528911555	WITHOUT_CLASSIFICATION	1.3447108844431696E-5	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999881435285252	WITHOUT_CLASSIFICATION	1.185647147480532E-5	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999871442393238	WITHOUT_CLASSIFICATION	1.2855760676169092E-5	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999869113073433	WITHOUT_CLASSIFICATION	1.3088692656624491E-5	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999864945308293	WITHOUT_CLASSIFICATION	1.3505469170646181E-5	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.999987333429245	WITHOUT_CLASSIFICATION	1.266657075503726E-5	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999883650386998	WITHOUT_CLASSIFICATION	1.1634961300102848E-5	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999870821083792	WITHOUT_CLASSIFICATION	1.291789162071778E-5	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999864645216279	WITHOUT_CLASSIFICATION	1.3535478372195519E-5	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999868568452761	WITHOUT_CLASSIFICATION	1.3143154723815045E-5	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999866124609272	WITHOUT_CLASSIFICATION	1.3387539072780911E-5	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999864702569422	WITHOUT_CLASSIFICATION	1.352974305784536E-5	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999870011729526	WITHOUT_CLASSIFICATION	1.299882704745693E-5	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999873288228776	WITHOUT_CLASSIFICATION	1.2671177122452157E-5	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999868964747685	WITHOUT_CLASSIFICATION	1.3103525231523887E-5	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999864969992351	WITHOUT_CLASSIFICATION	1.3503000764818433E-5	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999869801528231	WITHOUT_CLASSIFICATION	1.3019847176906782E-5	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.999987094384007	WITHOUT_CLASSIFICATION	1.2905615992975315E-5	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999866560627807	WITHOUT_CLASSIFICATION	1.3343937219274472E-5	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.99998928957342	WITHOUT_CLASSIFICATION	1.0710426579918074E-5	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999898023977759	WITHOUT_CLASSIFICATION	1.0197602224144773E-5	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999869270314593	WITHOUT_CLASSIFICATION	1.3072968540645056E-5	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999871118448906	WITHOUT_CLASSIFICATION	1.2888155109375774E-5	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999869927306463	WITHOUT_CLASSIFICATION	1.300726935372851E-5	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999869729844905	WITHOUT_CLASSIFICATION	1.3027015509583068E-5	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999868015621374	WITHOUT_CLASSIFICATION	1.3198437862628225E-5	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999868408756613	WITHOUT_CLASSIFICATION	1.3159124338670191E-5	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999865992826525	WITHOUT_CLASSIFICATION	1.340071734748965E-5	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999866602358058	WITHOUT_CLASSIFICATION	1.333976419409075E-5	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999866044550069	WITHOUT_CLASSIFICATION	1.3395544993205016E-5	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999869337565847	WITHOUT_CLASSIFICATION	1.306624341532079E-5	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999868041684784	WITHOUT_CLASSIFICATION	1.3195831521615887E-5	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999880670331038	WITHOUT_CLASSIFICATION	1.1932966896244614E-5	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999874057084175	WITHOUT_CLASSIFICATION	1.2594291582533333E-5	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999866631289449	WITHOUT_CLASSIFICATION	1.3336871055110821E-5	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999864945997877	WITHOUT_CLASSIFICATION	1.3505400212146887E-5	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999869998881135	WITHOUT_CLASSIFICATION	1.300011188656276E-5	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999868732855445	WITHOUT_CLASSIFICATION	1.3126714455555858E-5	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999868795777771	WITHOUT_CLASSIFICATION	1.3120422222878784E-5	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999883552634085	WITHOUT_CLASSIFICATION	1.164473659157819E-5	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999866160002814	WITHOUT_CLASSIFICATION	1.3383999718549191E-5	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999866235869076	WITHOUT_CLASSIFICATION	1.3376413092397966E-5	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999880663102377	WITHOUT_CLASSIFICATION	1.1933689762284018E-5	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999866057754804	WITHOUT_CLASSIFICATION	1.3394224519563756E-5	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999864821328533	WITHOUT_CLASSIFICATION	1.3517867146619702E-5	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999864880252362	WITHOUT_CLASSIFICATION	1.3511974763884328E-5	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999886077086196	WITHOUT_CLASSIFICATION	1.139229138033042E-5	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999880592916153	WITHOUT_CLASSIFICATION	1.1940708384738949E-5	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999879974276358	WITHOUT_CLASSIFICATION	1.200257236421845E-5	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.999986647139766	WITHOUT_CLASSIFICATION	1.3352860233974237E-5	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999865965158382	WITHOUT_CLASSIFICATION	1.3403484161694936E-5	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999897906456685	WITHOUT_CLASSIFICATION	1.0209354331513415E-5	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999899599274528	WITHOUT_CLASSIFICATION	1.0040072547306972E-5	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999897189888062	WITHOUT_CLASSIFICATION	1.0281011193877958E-5	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999897127659971	WITHOUT_CLASSIFICATION	1.0287234002799788E-5	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999893458884205	WITHOUT_CLASSIFICATION	1.0654111579550863E-5	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999897869176981	WITHOUT_CLASSIFICATION	1.021308230193831E-5	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999897401587865	WITHOUT_CLASSIFICATION	1.02598412135076E-5	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999896752022657	WITHOUT_CLASSIFICATION	1.0324797734264029E-5	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999894525506536	WITHOUT_CLASSIFICATION	1.0547449346367206E-5	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999938141629503	WITHOUT_CLASSIFICATION	6.185837049711836E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999930210264683	WITHOUT_CLASSIFICATION	6.978973531796335E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999846885932848	WITHOUT_CLASSIFICATION	1.5311406715241133E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999972140682342	WITHOUT_CLASSIFICATION	2.7859317657723448E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999931087038565	WITHOUT_CLASSIFICATION	6.891296143473863E-6	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.999977519179252	WITHOUT_CLASSIFICATION	2.2480820747959096E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999955385200787	WITHOUT_CLASSIFICATION	4.461479921332204E-6	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999989900052467	WITHOUT_CLASSIFICATION	1.0099947532870396E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.99998946280131	WITHOUT_CLASSIFICATION	1.0537198690002872E-5	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999894317842808	WITHOUT_CLASSIFICATION	1.0568215719271206E-5	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999898198071667	WITHOUT_CLASSIFICATION	1.0180192833304445E-5	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999893594182676	WITHOUT_CLASSIFICATION	1.064058173230861E-5	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999893720346461	WITHOUT_CLASSIFICATION	1.0627965353901383E-5	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999893821075857	WITHOUT_CLASSIFICATION	1.0617892414188481E-5	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999874312135241	WITHOUT_CLASSIFICATION	1.2568786475943087E-5	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999869230100967	WITHOUT_CLASSIFICATION	1.3076989903324599E-5	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999866890974981	WITHOUT_CLASSIFICATION	1.3310902502018344E-5	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999893795385815	WITHOUT_CLASSIFICATION	1.0620461418545511E-5	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999868538608718	WITHOUT_CLASSIFICATION	1.3146139128051798E-5	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999884034713119	WITHOUT_CLASSIFICATION	1.159652868804896E-5	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999871161575433	WITHOUT_CLASSIFICATION	1.288384245666853E-5	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.999988126721118	WITHOUT_CLASSIFICATION	1.1873278881830643E-5	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999870260450031	WITHOUT_CLASSIFICATION	1.2973954996861462E-5	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999868973721808	WITHOUT_CLASSIFICATION	1.3102627819069274E-5	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999880892043915	WITHOUT_CLASSIFICATION	1.1910795608417152E-5	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999871620546434	WITHOUT_CLASSIFICATION	1.2837945356659852E-5	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999886302263142	WITHOUT_CLASSIFICATION	1.1369773685767935E-5	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999864716174433	WITHOUT_CLASSIFICATION	1.3528382556602561E-5	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999851429490474	WITHOUT_CLASSIFICATION	1.4857050952608152E-5	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.999985070273487	WITHOUT_CLASSIFICATION	1.492972651306247E-5	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999875586689383	WITHOUT_CLASSIFICATION	1.2441331061677184E-5	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999970471855835	WITHOUT_CLASSIFICATION	2.952814416589245E-6	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999992254631608	WITHOUT_CLASSIFICATION	7.745368392228621E-7	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999996552838311	WITHOUT_CLASSIFICATION	3.447161689034084E-7	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999936229219789	WITHOUT_CLASSIFICATION	6.377078021206579E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999997643612152	WITHOUT_CLASSIFICATION	2.3563878493095374E-7	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999919702893784	WITHOUT_CLASSIFICATION	8.029710621550182E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999976923169427	WITHOUT_CLASSIFICATION	2.3076830573213133E-6	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999976832155241	WITHOUT_CLASSIFICATION	2.3167844758726118E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999991283780424	WITHOUT_CLASSIFICATION	8.716219576874284E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999991283780424	WITHOUT_CLASSIFICATION	8.716219576874284E-7	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999992638394701	WITHOUT_CLASSIFICATION	7.361605298823392E-7	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999899200374418	WITHOUT_CLASSIFICATION	1.0079962558183815E-5	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999983602969312	WITHOUT_CLASSIFICATION	1.6397030686802238E-6	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999897148018158	WITHOUT_CLASSIFICATION	1.0285198184273445E-5	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999999490489102	WITHOUT_CLASSIFICATION	5.095108980506119E-8	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999966048548123	WITHOUT_CLASSIFICATION	3.395145187588386E-6	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999999514499056	WITHOUT_CLASSIFICATION	4.855009432312979E-8	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999990092829634	WITHOUT_CLASSIFICATION	9.907170366741947E-7	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999923753634427	WITHOUT_CLASSIFICATION	7.6246365572582775E-6	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999991420813749	WITHOUT_CLASSIFICATION	8.579186250720504E-7	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999998373954258	WITHOUT_CLASSIFICATION	1.626045741421923E-7	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999999363609919	WITHOUT_CLASSIFICATION	6.363900805515285E-8	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999993082483174	WITHOUT_CLASSIFICATION	6.91751682579189E-7	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999999346892532	WITHOUT_CLASSIFICATION	6.531074684108148E-8	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999968341603046	WITHOUT_CLASSIFICATION	3.1658396953930605E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999968341603046	WITHOUT_CLASSIFICATION	3.1658396953930605E-6	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.999999585879462	WITHOUT_CLASSIFICATION	4.1412053790256744E-7	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999991127893287	WITHOUT_CLASSIFICATION	8.872106712980132E-7	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999962956585119	WITHOUT_CLASSIFICATION	3.704341488038259E-6	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999980891953272	WITHOUT_CLASSIFICATION	1.910804672852722E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999982808192149	WITHOUT_CLASSIFICATION	1.7191807850627718E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999987130283875	WITHOUT_CLASSIFICATION	1.2869716124728774E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999979822885848	WITHOUT_CLASSIFICATION	2.017711415287772E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999987130283875	WITHOUT_CLASSIFICATION	1.2869716124728774E-6	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999999387880969	WITHOUT_CLASSIFICATION	6.121190308066395E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999995048751897	WITHOUT_CLASSIFICATION	4.951248101872794E-7	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999996748652122	WITHOUT_CLASSIFICATION	3.25134787697875E-7	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999997039808739	WITHOUT_CLASSIFICATION	2.9601912611390256E-7	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999965135165488	WITHOUT_CLASSIFICATION	3.4864834511300613E-6	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999947440938748	WITHOUT_CLASSIFICATION	5.255906125224443E-6	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999998424773519	WITHOUT_CLASSIFICATION	1.575226481807279E-7	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999988726446001	WITHOUT_CLASSIFICATION	1.1273553999375453E-6	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999987364740016	WITHOUT_CLASSIFICATION	1.263525998374018E-6	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.99999995327699	WITHOUT_CLASSIFICATION	4.67230100678837E-8	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999999878256227	WITHOUT_CLASSIFICATION	1.2174377291314355E-8	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999621402998773	WITHOUT_CLASSIFICATION	3.785970012273613E-5	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999644657909247	WITHOUT_CLASSIFICATION	3.5534209075367325E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999973145616542	WITHOUT_CLASSIFICATION	2.685438345763787E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999954311640564	WITHOUT_CLASSIFICATION	4.568835943607399E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999954311640564	WITHOUT_CLASSIFICATION	4.568835943607399E-6	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999993275776309	WITHOUT_CLASSIFICATION	6.72422369214928E-7	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999994533686617	WITHOUT_CLASSIFICATION	5.46631338410953E-7	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999951085558203	WITHOUT_CLASSIFICATION	4.8914441797129245E-6	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999999021981983	WITHOUT_CLASSIFICATION	9.780180166026593E-8	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999981786748077	WITHOUT_CLASSIFICATION	1.8213251923853337E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999987130283875	WITHOUT_CLASSIFICATION	1.2869716124728774E-6	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999992103115243	WITHOUT_CLASSIFICATION	7.896884757152606E-7	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999998893203415	WITHOUT_CLASSIFICATION	1.1067965856227888E-7	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999987183433702	WITHOUT_CLASSIFICATION	1.281656629860436E-6	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999991581739545	WITHOUT_CLASSIFICATION	8.418260455759359E-7	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999154641319	WITHOUT_CLASSIFICATION	8.45358680678998E-8	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.999999676598877	WITHOUT_CLASSIFICATION	3.2340112299248935E-7	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999985308813825	WITHOUT_CLASSIFICATION	1.4691186175582099E-6	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.999999623828309	WITHOUT_CLASSIFICATION	3.7617169106815005E-7	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999999956727529	WITHOUT_CLASSIFICATION	4.327247116726142E-9	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999985742237274	WITHOUT_CLASSIFICATION	1.4257762725982063E-6	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999964457770877	WITHOUT_CLASSIFICATION	3.5542229122157985E-6	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999992639262889	WITHOUT_CLASSIFICATION	7.36073711145569E-7	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999803597692843	WITHOUT_CLASSIFICATION	1.9640230715709238E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999742051938665	WITHOUT_CLASSIFICATION	2.579480613357275E-5	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.999999580490262	WITHOUT_CLASSIFICATION	4.1950973801015754E-7	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999448298794315	WITHOUT_CLASSIFICATION	5.5170120568463215E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999950931515259	WITHOUT_CLASSIFICATION	4.9068484741235995E-6	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.99999520371315	WITHOUT_CLASSIFICATION	4.796286850044446E-6	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999934952167563	WITHOUT_CLASSIFICATION	6.504783243772973E-6	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999848232273081	WITHOUT_CLASSIFICATION	1.5176772692059205E-5	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999962176091988	WITHOUT_CLASSIFICATION	3.7823908012236827E-6	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999971784136372	WITHOUT_CLASSIFICATION	2.8215863626448747E-6	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999995163083039	WITHOUT_CLASSIFICATION	4.836916960542069E-7	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999991348074035	WITHOUT_CLASSIFICATION	8.651925964996219E-7	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999975741913986	WITHOUT_CLASSIFICATION	2.425808601411388E-6	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999974286741083	WITHOUT_CLASSIFICATION	2.571325891545034E-6	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999994546283554	WITHOUT_CLASSIFICATION	5.453716445640834E-7	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999981399570647	WITHOUT_CLASSIFICATION	1.8600429352782423E-6	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999982249346633	WITHOUT_CLASSIFICATION	1.7750653368119554E-6	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999971351956567	WITHOUT_CLASSIFICATION	2.8648043433501167E-6	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999842887751721	WITHOUT_CLASSIFICATION	1.5711224827977544E-5	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999934254976367	WITHOUT_CLASSIFICATION	6.574502363299301E-6	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999986278143139	WITHOUT_CLASSIFICATION	1.3721856861015742E-6	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999994343161865	WITHOUT_CLASSIFICATION	5.65683813439717E-7	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999998156380089	WITHOUT_CLASSIFICATION	1.843619911414567E-7	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.999998975913973	WITHOUT_CLASSIFICATION	1.0240860270197646E-6	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999975829316412	WITHOUT_CLASSIFICATION	2.417068358837673E-6	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999978529497608	WITHOUT_CLASSIFICATION	2.1470502392108885E-6	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999930134832556	WITHOUT_CLASSIFICATION	6.986516744309345E-6	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999996293150856	WITHOUT_CLASSIFICATION	3.7068491448008765E-7	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999989900052467	WITHOUT_CLASSIFICATION	1.0099947532870396E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999999912830781	WITHOUT_CLASSIFICATION	8.71692189526819E-8	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999973287968316	WITHOUT_CLASSIFICATION	2.671203168480171E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999998127591369	WITHOUT_CLASSIFICATION	1.8724086308868992E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999990581822528	WITHOUT_CLASSIFICATION	9.418177472487127E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999995048751897	WITHOUT_CLASSIFICATION	4.951248101872794E-7	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999997649366926	WITHOUT_CLASSIFICATION	2.3506330735451984E-7	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999998058573321	WITHOUT_CLASSIFICATION	1.9414266798020207E-7	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999999663978133	WITHOUT_CLASSIFICATION	3.3602186673820915E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998631581257	WITHOUT_CLASSIFICATION	1.3684187426713574E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998631581257	WITHOUT_CLASSIFICATION	1.3684187426713574E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999994348910562	WITHOUT_CLASSIFICATION	5.651089437589389E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999994348910562	WITHOUT_CLASSIFICATION	5.651089437589389E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999994348910562	WITHOUT_CLASSIFICATION	5.651089437589389E-7	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999924643539054	WITHOUT_CLASSIFICATION	7.535646094582169E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999924643539054	WITHOUT_CLASSIFICATION	7.535646094582169E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999830113654118	WITHOUT_CLASSIFICATION	1.6988634588226646E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999830113654118	WITHOUT_CLASSIFICATION	1.6988634588226646E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999970223692897	WITHOUT_CLASSIFICATION	2.97763071041346E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999926819945197	WITHOUT_CLASSIFICATION	7.318005480231471E-6	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999788679160737	WITHOUT_CLASSIFICATION	2.1132083926332813E-5	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999788679160737	WITHOUT_CLASSIFICATION	2.1132083926332813E-5	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.999999223810192	WITHOUT_CLASSIFICATION	7.761898079593469E-7	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999989931009158	WITHOUT_CLASSIFICATION	1.006899084238822E-6	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999960504990785	WITHOUT_CLASSIFICATION	3.9495009215624005E-6	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999989945192382	WITHOUT_CLASSIFICATION	1.005480761753913E-6	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.999999523690736	WITHOUT_CLASSIFICATION	4.763092639931467E-7	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999998821882269	WITHOUT_CLASSIFICATION	1.1781177321386995E-7	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999968547529905	WITHOUT_CLASSIFICATION	3.1452470095322833E-6	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999986449285048	WITHOUT_CLASSIFICATION	1.3550714951668725E-6	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999961895566896	WITHOUT_CLASSIFICATION	3.8104433103749897E-6	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999967631504101	WITHOUT_CLASSIFICATION	3.2368495897776604E-6	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999997037460938	WITHOUT_CLASSIFICATION	2.962539061633862E-7	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999938720359222	WITHOUT_CLASSIFICATION	6.127964077891311E-6	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999700630090282	WITHOUT_CLASSIFICATION	2.9936990971740772E-5	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999868383823634	WITHOUT_CLASSIFICATION	1.3161617636699865E-5	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999989727252131	WITHOUT_CLASSIFICATION	1.027274786856414E-6	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.999988149276064	WITHOUT_CLASSIFICATION	1.185072393596992E-5	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999951050644618	WITHOUT_CLASSIFICATION	4.894935538293803E-6	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999973445087589	WITHOUT_CLASSIFICATION	2.655491241155958E-6	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999971232985785	WITHOUT_CLASSIFICATION	2.8767014215227048E-6	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999953611924183	WITHOUT_CLASSIFICATION	4.638807581706709E-6	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999988127025958	WITHOUT_CLASSIFICATION	1.1872974042037607E-6	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999984387950632	WITHOUT_CLASSIFICATION	1.5612049366971753E-6	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999964085040767	WITHOUT_CLASSIFICATION	3.5914959233813685E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999162370979	WITHOUT_CLASSIFICATION	8.376290207953792E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999999838269324	WITHOUT_CLASSIFICATION	1.6173067593980804E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999996809715362	WITHOUT_CLASSIFICATION	3.19028463792697E-7	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998672171456	WITHOUT_CLASSIFICATION	1.3278285433164676E-7	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998885979059	WITHOUT_CLASSIFICATION	1.1140209400904354E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999197306887	WITHOUT_CLASSIFICATION	8.026931133330326E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998450148012	WITHOUT_CLASSIFICATION	1.5498519868672713E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999996942776015	WITHOUT_CLASSIFICATION	3.0572239857836884E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999290659293	WITHOUT_CLASSIFICATION	7.09340707589629E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998630394236	WITHOUT_CLASSIFICATION	1.3696057637912898E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997692271927	WITHOUT_CLASSIFICATION	2.307728073887297E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998630394236	WITHOUT_CLASSIFICATION	1.3696057637912898E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998630394236	WITHOUT_CLASSIFICATION	1.3696057637912898E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998630394236	WITHOUT_CLASSIFICATION	1.3696057637912898E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998630394236	WITHOUT_CLASSIFICATION	1.3696057637912898E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998630394236	WITHOUT_CLASSIFICATION	1.3696057637912898E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998630394236	WITHOUT_CLASSIFICATION	1.3696057637912898E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997692271927	WITHOUT_CLASSIFICATION	2.307728073887297E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997692271927	WITHOUT_CLASSIFICATION	2.307728073887297E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997692271927	WITHOUT_CLASSIFICATION	2.307728073887297E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997692271927	WITHOUT_CLASSIFICATION	2.307728073887297E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997692271927	WITHOUT_CLASSIFICATION	2.307728073887297E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997692271927	WITHOUT_CLASSIFICATION	2.307728073887297E-7	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999998715570024	WITHOUT_CLASSIFICATION	1.2844299760399108E-7	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999987115529336	WITHOUT_CLASSIFICATION	1.2884470662882793E-6	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.999997403903767	WITHOUT_CLASSIFICATION	2.596096232963452E-6	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999996357179042	WITHOUT_CLASSIFICATION	3.6428209583209706E-7	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999996140009489	WITHOUT_CLASSIFICATION	3.859990510890284E-7	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999995857906201	WITHOUT_CLASSIFICATION	4.142093799477616E-7	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999922906336044	WITHOUT_CLASSIFICATION	7.709366395656157E-6	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999996207261878	WITHOUT_CLASSIFICATION	3.7927381219269993E-7	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999994812636609	WITHOUT_CLASSIFICATION	5.187363389918832E-7	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999877162134609	WITHOUT_CLASSIFICATION	1.2283786539025099E-5	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999901243092512	WITHOUT_CLASSIFICATION	9.875690748794796E-6	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999990072782551	WITHOUT_CLASSIFICATION	9.92721744988547E-7	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999792662511163	WITHOUT_CLASSIFICATION	2.0733748883687243E-5	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999539442194	WITHOUT_CLASSIFICATION	4.605578062842359E-8	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999983992515316	WITHOUT_CLASSIFICATION	1.600748468344821E-6	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999996292555906	WITHOUT_CLASSIFICATION	3.7074440938494477E-7	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999998270694517	WITHOUT_CLASSIFICATION	1.72930548395387E-7	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999966790186714	WITHOUT_CLASSIFICATION	3.32098132868681E-6	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999991281312582	WITHOUT_CLASSIFICATION	8.718687418068166E-7	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999998185354178	WITHOUT_CLASSIFICATION	1.8146458219402037E-7	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.99999721843876	WITHOUT_CLASSIFICATION	2.781561240051785E-6	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999952123484495	WITHOUT_CLASSIFICATION	4.787651550551976E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999979822885848	WITHOUT_CLASSIFICATION	2.017711415287772E-6	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999999295057291	WITHOUT_CLASSIFICATION	7.049427094898449E-8	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999996014614579	WITHOUT_CLASSIFICATION	3.985385420100916E-7	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999869864774	WITHOUT_CLASSIFICATION	1.3013522577544687E-8	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999887479031	WITHOUT_CLASSIFICATION	1.1252097040180705E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999974337983177	WITHOUT_CLASSIFICATION	2.5662016821728054E-6	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999917686268558	WITHOUT_CLASSIFICATION	8.231373144240519E-6	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999996375807851	WITHOUT_CLASSIFICATION	3.6241921487720346E-7	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999976611862225	WITHOUT_CLASSIFICATION	2.3388137774459034E-6	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999990404879596	WITHOUT_CLASSIFICATION	9.59512040382704E-7	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999994992114245	WITHOUT_CLASSIFICATION	5.007885755334442E-7	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999981354315591	WITHOUT_CLASSIFICATION	1.864568440889647E-6	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999955324268988	WITHOUT_CLASSIFICATION	4.467573101276805E-6	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999952646980128	WITHOUT_CLASSIFICATION	4.735301987130298E-6	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999991600230905	WITHOUT_CLASSIFICATION	8.399769093746214E-7	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999993613493496	WITHOUT_CLASSIFICATION	6.386506503988754E-7	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999998582614504	WITHOUT_CLASSIFICATION	1.4173854961861622E-7	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999998092764167	WITHOUT_CLASSIFICATION	1.907235833895691E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999964358831387	WITHOUT_CLASSIFICATION	3.5641168613981508E-6	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999982676049015	WITHOUT_CLASSIFICATION	1.7323950985385551E-6	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999997442903711	WITHOUT_CLASSIFICATION	2.55709628888685E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999999093355991	WITHOUT_CLASSIFICATION	9.066440090207462E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999999093355991	WITHOUT_CLASSIFICATION	9.066440090207462E-7	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999979573871647	WITHOUT_CLASSIFICATION	2.0426128353716906E-6	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999979573871647	WITHOUT_CLASSIFICATION	2.0426128353716906E-6	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999999463486125	WITHOUT_CLASSIFICATION	5.365138750040454E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999999463486125	WITHOUT_CLASSIFICATION	5.365138750040454E-7	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999569303647	WITHOUT_CLASSIFICATION	4.306963533474801E-8	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999994908605147	WITHOUT_CLASSIFICATION	5.091394853527764E-7	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999982960224889	WITHOUT_CLASSIFICATION	1.7039775110617252E-6	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999999324956207	WITHOUT_CLASSIFICATION	6.750437937550766E-8	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999995849443565	WITHOUT_CLASSIFICATION	4.1505564351064835E-7	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999999043480627	WITHOUT_CLASSIFICATION	9.565193720054479E-8	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999966870617141	WITHOUT_CLASSIFICATION	3.312938286005057E-6	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999665008672	WITHOUT_CLASSIFICATION	3.349913276406997E-8	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999957687286746	WITHOUT_CLASSIFICATION	4.231271325453216E-6	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999998863102243	WITHOUT_CLASSIFICATION	1.1368977567185649E-7	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.999999963927562	WITHOUT_CLASSIFICATION	3.607243801009598E-8	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999998863171132	WITHOUT_CLASSIFICATION	1.1368288686445488E-7	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999233789526	WITHOUT_CLASSIFICATION	7.66210473675608E-8	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999998187916396	WITHOUT_CLASSIFICATION	1.8120836040629722E-7	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999961450226311	WITHOUT_CLASSIFICATION	3.8549773689470265E-6	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999822710912224	WITHOUT_CLASSIFICATION	1.772890877761441E-5	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999941732445	WITHOUT_CLASSIFICATION	5.826755454990251E-9	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.999999486130794	WITHOUT_CLASSIFICATION	5.138692059296478E-7	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999978574234241	WITHOUT_CLASSIFICATION	2.142576575869818E-6	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999760497775824	WITHOUT_CLASSIFICATION	2.395022241771394E-5	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999821633643359	WITHOUT_CLASSIFICATION	1.783663566414103E-5	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999860161401162	WITHOUT_CLASSIFICATION	1.3983859883798266E-5	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999879980090058	WITHOUT_CLASSIFICATION	1.2001990994166521E-5	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999990798958084	WITHOUT_CLASSIFICATION	9.201041914836185E-7	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999986339487429	WITHOUT_CLASSIFICATION	1.3660512571199213E-6	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999998508741713	WITHOUT_CLASSIFICATION	1.4912582870068444E-7	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999845998691451	WITHOUT_CLASSIFICATION	1.5400130854910422E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999988927355827	WITHOUT_CLASSIFICATION	1.1072644173305391E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999988927355827	WITHOUT_CLASSIFICATION	1.1072644173305391E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999988927355827	WITHOUT_CLASSIFICATION	1.1072644173305391E-6	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996255670252	WITHOUT_CLASSIFICATION	3.7443297484177297E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996255670252	WITHOUT_CLASSIFICATION	3.7443297484177297E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999742051938665	WITHOUT_CLASSIFICATION	2.579480613357275E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999742051938665	WITHOUT_CLASSIFICATION	2.579480613357275E-5	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999996698465438	WITHOUT_CLASSIFICATION	3.301534563362705E-7	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999753675381903	WITHOUT_CLASSIFICATION	2.463246180971827E-5	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999977518418541	WITHOUT_CLASSIFICATION	2.2481581457561823E-6	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999983410583175	WITHOUT_CLASSIFICATION	1.6589416823487047E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999988927355827	WITHOUT_CLASSIFICATION	1.1072644173305391E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999988927355827	WITHOUT_CLASSIFICATION	1.1072644173305391E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999988927355827	WITHOUT_CLASSIFICATION	1.1072644173305391E-6	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996255670252	WITHOUT_CLASSIFICATION	3.7443297484177297E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996255670252	WITHOUT_CLASSIFICATION	3.7443297484177297E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996255670252	WITHOUT_CLASSIFICATION	3.7443297484177297E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999742051938665	WITHOUT_CLASSIFICATION	2.579480613357275E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999742051938665	WITHOUT_CLASSIFICATION	2.579480613357275E-5	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999994033062276	WITHOUT_CLASSIFICATION	5.966937724457548E-7	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999998633062147	WITHOUT_CLASSIFICATION	1.3669378538422005E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999777852373	WITHOUT_CLASSIFICATION	2.2214762714947272E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999777852373	WITHOUT_CLASSIFICATION	2.2214762714947272E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999777852373	WITHOUT_CLASSIFICATION	2.2214762714947272E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999777852373	WITHOUT_CLASSIFICATION	2.2214762714947272E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999777852373	WITHOUT_CLASSIFICATION	2.2214762714947272E-8	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999970134556263	WITHOUT_CLASSIFICATION	2.986544373599824E-6	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.999994979145848	WITHOUT_CLASSIFICATION	5.020854151981739E-6	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999978785840679	WITHOUT_CLASSIFICATION	2.1214159321192435E-6	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999983928309067	WITHOUT_CLASSIFICATION	1.6071690931775187E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999965693056972	WITHOUT_CLASSIFICATION	3.4306943027538575E-6	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999984818542628	WITHOUT_CLASSIFICATION	1.518145737245558E-6	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999874138624303	WITHOUT_CLASSIFICATION	1.2586137569633461E-5	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999958071652498	WITHOUT_CLASSIFICATION	4.192834750108797E-6	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999935432501942	WITHOUT_CLASSIFICATION	6.456749805757959E-6	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999995626285678	WITHOUT_CLASSIFICATION	4.3737143219738346E-7	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999990530620444	WITHOUT_CLASSIFICATION	9.469379556704579E-7	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999975924248657	WITHOUT_CLASSIFICATION	2.4075751342504344E-6	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999992704950158	WITHOUT_CLASSIFICATION	7.295049841598415E-7	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999989132533051	WITHOUT_CLASSIFICATION	1.0867466948458243E-6	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999993449254764	WITHOUT_CLASSIFICATION	6.550745235950095E-7	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999577240738124	WITHOUT_CLASSIFICATION	4.2275926187597645E-4	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999577240738124	WITHOUT_CLASSIFICATION	4.2275926187597645E-4	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999577240738124	WITHOUT_CLASSIFICATION	4.2275926187597645E-4	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999994564802012	WITHOUT_CLASSIFICATION	5.435197987728008E-7	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999994564458325	WITHOUT_CLASSIFICATION	5.435541674501447E-7	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999912592095677	WITHOUT_CLASSIFICATION	8.74079043235411E-6	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999718021773	WITHOUT_CLASSIFICATION	2.819782280993868E-8	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999980245988966	WITHOUT_CLASSIFICATION	1.9754011033369366E-6	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999989290971466	WITHOUT_CLASSIFICATION	1.0709028533465824E-6	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999984022010635	WITHOUT_CLASSIFICATION	1.597798936519238E-6	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999992723155104	WITHOUT_CLASSIFICATION	7.276844895200437E-7	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999993115192054	WITHOUT_CLASSIFICATION	6.884807945101938E-7	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999988881171508	WITHOUT_CLASSIFICATION	1.111882849207995E-6	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.999998643342556	WITHOUT_CLASSIFICATION	1.3566574440938378E-6	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999992987666999	WITHOUT_CLASSIFICATION	7.012333000480552E-7	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999971276951661	WITHOUT_CLASSIFICATION	2.8723048339818243E-6	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999950643393734	WITHOUT_CLASSIFICATION	4.935660626570613E-6	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999961534596865	WITHOUT_CLASSIFICATION	3.846540313546919E-6	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999961833605222	WITHOUT_CLASSIFICATION	3.816639477838604E-6	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999950905599228	WITHOUT_CLASSIFICATION	4.909440077217739E-6	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999953770786009	WITHOUT_CLASSIFICATION	4.622921399181745E-6	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999951779945926	WITHOUT_CLASSIFICATION	4.82200540745091E-6	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999964022784721	WITHOUT_CLASSIFICATION	3.597721527839578E-6	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999990735374936	WITHOUT_CLASSIFICATION	9.264625063972157E-7	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999927370031435	WITHOUT_CLASSIFICATION	7.262996856464667E-6	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.999997655044177	WITHOUT_CLASSIFICATION	2.3449558229333753E-6	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999979253839083	WITHOUT_CLASSIFICATION	2.07461609163734E-6	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.99999044906544	WITHOUT_CLASSIFICATION	9.55093456000733E-6	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999876459060396	WITHOUT_CLASSIFICATION	1.235409396041846E-5	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999925867693097	WITHOUT_CLASSIFICATION	7.4132306903173246E-6	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999892571268112	WITHOUT_CLASSIFICATION	1.0742873188910188E-5	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999929845113529	WITHOUT_CLASSIFICATION	7.015488647005125E-6	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9999580770385541	WITHOUT_CLASSIFICATION	4.192296144579444E-5	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.999951579450315	WITHOUT_CLASSIFICATION	4.842054968508662E-5	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9999504697940232	WITHOUT_CLASSIFICATION	4.9530205976735913E-5	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.999948839451839	WITHOUT_CLASSIFICATION	5.1160548160995116E-5	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9999486261598233	WITHOUT_CLASSIFICATION	5.137384017663609E-5	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9999486308580844	WITHOUT_CLASSIFICATION	5.136914191559204E-5	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.9999486532106567	WITHOUT_CLASSIFICATION	5.134678934331012E-5	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999983686399865	WITHOUT_CLASSIFICATION	1.631360013598488E-6	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999978330309675	WITHOUT_CLASSIFICATION	2.166969032590884E-6	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999995622108981	WITHOUT_CLASSIFICATION	4.3778910193531006E-7	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999854016307698	WITHOUT_CLASSIFICATION	1.459836923026135E-5	TEST
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999995205257609	WITHOUT_CLASSIFICATION	4.794742390541849E-7	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999999532240045	WITHOUT_CLASSIFICATION	4.677599553796639E-8	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.999998889578455	WITHOUT_CLASSIFICATION	1.1104215450462939E-6	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999986828466014	WITHOUT_CLASSIFICATION	1.3171533985566707E-6	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999745183933704	WITHOUT_CLASSIFICATION	2.548160662964361E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999987383773355	WITHOUT_CLASSIFICATION	1.2616226645482933E-6	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999890145269088	WITHOUT_CLASSIFICATION	1.0985473091305582E-5	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999890145269088	WITHOUT_CLASSIFICATION	1.0985473091305582E-5	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999956804552355	WITHOUT_CLASSIFICATION	4.319544764573377E-6	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999993911359035	WITHOUT_CLASSIFICATION	6.088640965060167E-7	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.999997682330807	WITHOUT_CLASSIFICATION	2.3176691929300565E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999624157703754	WITHOUT_CLASSIFICATION	3.758422962459624E-5	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.999998761507657	WITHOUT_CLASSIFICATION	1.2384923430590574E-6	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999983745046447	WITHOUT_CLASSIFICATION	1.6254953553798546E-6	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999986416114826	WITHOUT_CLASSIFICATION	1.358388517477288E-6	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997349765554	WITHOUT_CLASSIFICATION	2.650234446486879E-7	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999812291511043	WITHOUT_CLASSIFICATION	1.8770848895714283E-5	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999926158780571	WITHOUT_CLASSIFICATION	7.3841219429375955E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999989244783392	WITHOUT_CLASSIFICATION	1.0755216608340836E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999989244783392	WITHOUT_CLASSIFICATION	1.0755216608340836E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999989244783392	WITHOUT_CLASSIFICATION	1.0755216608340836E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999989244783392	WITHOUT_CLASSIFICATION	1.0755216608340836E-6	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999637850981681	WITHOUT_CLASSIFICATION	3.621490183198316E-5	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999794351853424	WITHOUT_CLASSIFICATION	2.0564814657560068E-5	TEST
// just windows	WITHOUT_CLASSIFICATION	0.999802388262711	WITHOUT_CLASSIFICATION	1.9761173728918976E-4	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999945190802138	WITHOUT_CLASSIFICATION	5.480919786231063E-6	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999996047756727	WITHOUT_CLASSIFICATION	3.9522432736491465E-7	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999996839790527	WITHOUT_CLASSIFICATION	3.160209473529525E-7	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999988911464908	WITHOUT_CLASSIFICATION	1.1088535092178148E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999991385870031	WITHOUT_CLASSIFICATION	8.614129968460193E-7	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999991385870031	WITHOUT_CLASSIFICATION	8.614129968460193E-7	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999998739312111	WITHOUT_CLASSIFICATION	1.260687888014722E-7	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999980791408111	WITHOUT_CLASSIFICATION	1.920859188944402E-6	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999367068573	WITHOUT_CLASSIFICATION	6.329314272771325E-8	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999323397835	WITHOUT_CLASSIFICATION	6.766021650095105E-8	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999323397835	WITHOUT_CLASSIFICATION	6.766021650095105E-8	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999998873434579	WITHOUT_CLASSIFICATION	1.126565421913964E-7	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999995868603784	WITHOUT_CLASSIFICATION	4.1313962159486315E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999995868603784	WITHOUT_CLASSIFICATION	4.1313962159486315E-6	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999996885924582	WITHOUT_CLASSIFICATION	3.114075417488137E-7	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999985315834465	WITHOUT_CLASSIFICATION	1.468416553513201E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999406622061	WITHOUT_CLASSIFICATION	5.9337793921572735E-8	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999999601973664	WITHOUT_CLASSIFICATION	3.980263369882442E-8	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999996130409605	WITHOUT_CLASSIFICATION	3.8695903938611857E-7	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999998997422467	WITHOUT_CLASSIFICATION	1.0025775335623841E-7	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999996692158702	WITHOUT_CLASSIFICATION	3.3078412982779487E-7	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9999716049045777	WITHOUT_CLASSIFICATION	2.8395095422343474E-5	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999993839723117	WITHOUT_CLASSIFICATION	6.160276882746792E-7	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999987138853873	WITHOUT_CLASSIFICATION	1.286114612707794E-6	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999970587098124	WITHOUT_CLASSIFICATION	2.941290187564762E-6	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999958076538327	WITHOUT_CLASSIFICATION	4.19234616725621E-6	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.999957180678288	WITHOUT_CLASSIFICATION	4.281932171200489E-5	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999496865417025	WITHOUT_CLASSIFICATION	5.031345829759371E-5	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999992843814288	WITHOUT_CLASSIFICATION	7.156185712485564E-7	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999998531548135	WITHOUT_CLASSIFICATION	1.4684518640113003E-7	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999816685820423	WITHOUT_CLASSIFICATION	1.83314179576256E-5	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999986595612914	WITHOUT_CLASSIFICATION	1.3404387085160554E-6	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999983135730928	WITHOUT_CLASSIFICATION	1.6864269072616546E-6	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999998211834691	WITHOUT_CLASSIFICATION	1.7881653099689835E-7	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999962471875948	WITHOUT_CLASSIFICATION	3.7528124051348806E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999998054623151	WITHOUT_CLASSIFICATION	1.9453768473281983E-7	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999999039929045	WITHOUT_CLASSIFICATION	9.600709548234432E-8	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999996241010342	WITHOUT_CLASSIFICATION	3.7589896594005154E-7	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999998720880389	WITHOUT_CLASSIFICATION	1.27911961157991E-7	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999999323211302	WITHOUT_CLASSIFICATION	6.767886979762503E-8	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999963020806603	WITHOUT_CLASSIFICATION	3.697919339819853E-6	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999969121870202	WITHOUT_CLASSIFICATION	3.0878129797961564E-6	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999936439216	WITHOUT_CLASSIFICATION	6.356078425465991E-9	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999988773912167	WITHOUT_CLASSIFICATION	1.1226087832352266E-6	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999767536451317	WITHOUT_CLASSIFICATION	2.324635486837809E-5	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999654076379517	WITHOUT_CLASSIFICATION	3.459236204833212E-5	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9999989979992513	WITHOUT_CLASSIFICATION	1.0020007487244366E-6	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.999997385734128	WITHOUT_CLASSIFICATION	2.614265871943514E-6	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999999261703894	WITHOUT_CLASSIFICATION	7.382961058728386E-8	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999940608685485	WITHOUT_CLASSIFICATION	5.9391314515962674E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999880486699949	WITHOUT_CLASSIFICATION	1.1951330005062342E-5	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999989196293987	WITHOUT_CLASSIFICATION	1.080370601329595E-6	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999912400207812	WITHOUT_CLASSIFICATION	8.759979218864262E-6	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999940608685485	WITHOUT_CLASSIFICATION	5.9391314515962674E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999880486699949	WITHOUT_CLASSIFICATION	1.1951330005062342E-5	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999963290232665	WITHOUT_CLASSIFICATION	3.670976733440685E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999976221888052	WITHOUT_CLASSIFICATION	2.37781119482245E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999976221888052	WITHOUT_CLASSIFICATION	2.37781119482245E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999733377395725	WITHOUT_CLASSIFICATION	2.6662260427513786E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999538757264	WITHOUT_CLASSIFICATION	4.6124273682988375E-8	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999733849831941	WITHOUT_CLASSIFICATION	2.6615016805884008E-5	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999783830797458	WITHOUT_CLASSIFICATION	2.1616920254230018E-5	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999953346491404	WITHOUT_CLASSIFICATION	4.665350859700673E-6	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999997112265789	WITHOUT_CLASSIFICATION	2.8877342113812416E-7	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999577384873541	WITHOUT_CLASSIFICATION	4.226151264585956E-5	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999983314590865	WITHOUT_CLASSIFICATION	1.668540913552752E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999986868198137	WITHOUT_CLASSIFICATION	1.313180186225124E-6	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999691060138233	WITHOUT_CLASSIFICATION	3.089398617673194E-5	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999991610096025	WITHOUT_CLASSIFICATION	8.389903973669923E-7	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999984833198456	WITHOUT_CLASSIFICATION	1.516680154391345E-6	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999988475557545	WITHOUT_CLASSIFICATION	1.1524442455253456E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999978096602427	WITHOUT_CLASSIFICATION	2.1903397573052717E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999978096602427	WITHOUT_CLASSIFICATION	2.1903397573052717E-6	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999987329162098	WITHOUT_CLASSIFICATION	1.2670837901932939E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999987329162098	WITHOUT_CLASSIFICATION	1.2670837901932939E-5	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999979010677155	WITHOUT_CLASSIFICATION	2.098932284613325E-6	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999973092100682	WITHOUT_CLASSIFICATION	2.690789931734264E-6	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999914515855768	WITHOUT_CLASSIFICATION	8.548414423121552E-6	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.999998787225398	WITHOUT_CLASSIFICATION	1.2127746020060536E-6	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999746558442322	WITHOUT_CLASSIFICATION	2.5344155767747167E-5	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999913650598767	WITHOUT_CLASSIFICATION	8.634940123354532E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999733849831941	WITHOUT_CLASSIFICATION	2.6615016805884008E-5	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999783830797458	WITHOUT_CLASSIFICATION	2.1616920254230018E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999986868198137	WITHOUT_CLASSIFICATION	1.313180186225124E-6	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999691060138233	WITHOUT_CLASSIFICATION	3.089398617673194E-5	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999991553314528	WITHOUT_CLASSIFICATION	8.446685471475666E-7	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999981017629165	WITHOUT_CLASSIFICATION	1.8982370835006137E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999656984117135	WITHOUT_CLASSIFICATION	3.4301588286501865E-5	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999975970443123	WITHOUT_CLASSIFICATION	2.4029556875944863E-6	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999984728746498	WITHOUT_CLASSIFICATION	1.5271253502130392E-6	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999913311615745	WITHOUT_CLASSIFICATION	8.668838425603766E-6	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999977624844832	WITHOUT_CLASSIFICATION	2.2375155167309565E-6	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999347446765708	WITHOUT_CLASSIFICATION	6.525532342917965E-5	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999985402619139	WITHOUT_CLASSIFICATION	1.459738086119376E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999978933730493	WITHOUT_CLASSIFICATION	2.1066269505945837E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999943963644	WITHOUT_CLASSIFICATION	5.603635611243459E-9	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999545707684395	WITHOUT_CLASSIFICATION	4.5429231560529874E-5	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999972807420499	WITHOUT_CLASSIFICATION	2.7192579501707785E-6	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999981149262919	WITHOUT_CLASSIFICATION	1.8850737080877728E-6	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999989672522799	WITHOUT_CLASSIFICATION	1.0327477201193865E-6	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999999019513004	WITHOUT_CLASSIFICATION	9.804869962747998E-8	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.999996610307824	WITHOUT_CLASSIFICATION	3.389692175903495E-6	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999917948993298	WITHOUT_CLASSIFICATION	8.205100670258027E-6	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999954391192013	WITHOUT_CLASSIFICATION	4.56088079868747E-6	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999884651099981	WITHOUT_CLASSIFICATION	1.153489000182152E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999895613387332	WITHOUT_CLASSIFICATION	1.0438661266904914E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999895613387332	WITHOUT_CLASSIFICATION	1.0438661266904914E-5	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999993535769434	WITHOUT_CLASSIFICATION	6.464230565581946E-7	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.999990460128216	WITHOUT_CLASSIFICATION	9.539871783947608E-6	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999775618842	WITHOUT_CLASSIFICATION	2.2438115830611886E-8	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999900885324802	WITHOUT_CLASSIFICATION	9.911467519844475E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999900885324802	WITHOUT_CLASSIFICATION	9.911467519844475E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999656984117135	WITHOUT_CLASSIFICATION	3.4301588286501865E-5	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999565335665096	WITHOUT_CLASSIFICATION	4.3466433490527335E-5	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999830875929772	WITHOUT_CLASSIFICATION	1.691240702285831E-5	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.999993562496416	WITHOUT_CLASSIFICATION	6.437503584042615E-6	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999907580793932	WITHOUT_CLASSIFICATION	9.24192060673364E-6	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999980796544173	WITHOUT_CLASSIFICATION	1.9203455825964395E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999072005868502	WITHOUT_CLASSIFICATION	9.279941314984417E-5	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999960313322901	WITHOUT_CLASSIFICATION	3.968667709894469E-6	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999922798782167	WITHOUT_CLASSIFICATION	7.720121783257399E-6	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999960255980441	WITHOUT_CLASSIFICATION	3.9744019558516146E-6	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.999998663296343	WITHOUT_CLASSIFICATION	1.3367036570278715E-6	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999851826170115	WITHOUT_CLASSIFICATION	1.4817382988574791E-5	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999990574663847	WITHOUT_CLASSIFICATION	9.425336151974471E-7	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999965675627225	WITHOUT_CLASSIFICATION	3.432437277566665E-6	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999951205983016	WITHOUT_CLASSIFICATION	4.879401698342904E-6	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999900177419124	WITHOUT_CLASSIFICATION	9.982258087684755E-6	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999950508291561	WITHOUT_CLASSIFICATION	4.949170843979591E-6	TEST
// states	WITHOUT_CLASSIFICATION	0.9999863803229365	WITHOUT_CLASSIFICATION	1.3619677063429822E-5	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999997690193582	WITHOUT_CLASSIFICATION	2.3098064179998838E-7	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999858926897	WITHOUT_CLASSIFICATION	1.4107310261348355E-8	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999350318945	WITHOUT_CLASSIFICATION	6.496810551350307E-8	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999868232316483	WITHOUT_CLASSIFICATION	1.3176768351632799E-5	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999994593440634	WITHOUT_CLASSIFICATION	5.40655936573982E-7	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.999992684143019	WITHOUT_CLASSIFICATION	7.315856981055756E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999987003516791	WITHOUT_CLASSIFICATION	1.29964832089422E-6	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999992641841294	WITHOUT_CLASSIFICATION	7.358158706607988E-7	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999994358214187	WITHOUT_CLASSIFICATION	5.641785813438632E-7	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999974506018704	WITHOUT_CLASSIFICATION	2.5493981295288857E-6	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.999999962912511	WITHOUT_CLASSIFICATION	3.7087488975200735E-8	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999983596129712	WITHOUT_CLASSIFICATION	1.6403870287804938E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999962046061134	WITHOUT_CLASSIFICATION	3.795393886553008E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999962046061134	WITHOUT_CLASSIFICATION	3.795393886553008E-6	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999998970877015	WITHOUT_CLASSIFICATION	1.0291229846311666E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999976747762886	WITHOUT_CLASSIFICATION	2.3252237113881337E-6	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999976747762886	WITHOUT_CLASSIFICATION	2.3252237113881337E-6	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999994010084715	WITHOUT_CLASSIFICATION	5.989915285019852E-7	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999994010084715	WITHOUT_CLASSIFICATION	5.989915285019852E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999826632052886	WITHOUT_CLASSIFICATION	1.7336794711325137E-5	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999985971747113	WITHOUT_CLASSIFICATION	1.4028252888058932E-6	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999997747991191	WITHOUT_CLASSIFICATION	2.2520088082950865E-7	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.999985113718444	WITHOUT_CLASSIFICATION	1.4886281556129393E-5	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999995631585971	WITHOUT_CLASSIFICATION	4.368414028425624E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999825668402044	WITHOUT_CLASSIFICATION	1.7433159795617846E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9999825668402044	WITHOUT_CLASSIFICATION	1.7433159795617846E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999987003516791	WITHOUT_CLASSIFICATION	1.29964832089422E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999987003516791	WITHOUT_CLASSIFICATION	1.29964832089422E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999987003516791	WITHOUT_CLASSIFICATION	1.29964832089422E-6	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999992641841294	WITHOUT_CLASSIFICATION	7.358158706607988E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999962046061134	WITHOUT_CLASSIFICATION	3.795393886553008E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999962046061134	WITHOUT_CLASSIFICATION	3.795393886553008E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999962046061134	WITHOUT_CLASSIFICATION	3.795393886553008E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999826632052886	WITHOUT_CLASSIFICATION	1.7336794711325137E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999826632052886	WITHOUT_CLASSIFICATION	1.7336794711325137E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999826632052886	WITHOUT_CLASSIFICATION	1.7336794711325137E-5	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.999985113718444	WITHOUT_CLASSIFICATION	1.4886281556129393E-5	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.999985113718444	WITHOUT_CLASSIFICATION	1.4886281556129393E-5	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999979918342796	WITHOUT_CLASSIFICATION	2.008165720358916E-6	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999997763497487	WITHOUT_CLASSIFICATION	2.236502513892195E-7	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999994142593702	WITHOUT_CLASSIFICATION	5.857406297518337E-7	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999999651891697	WITHOUT_CLASSIFICATION	3.4810830409078504E-8	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.999996712377052	WITHOUT_CLASSIFICATION	3.287622947913563E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.999958624068534	WITHOUT_CLASSIFICATION	4.137593146595401E-5	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.999958624068534	WITHOUT_CLASSIFICATION	4.137593146595401E-5	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999967369060203	WITHOUT_CLASSIFICATION	3.2630939796608572E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999072005868502	WITHOUT_CLASSIFICATION	9.279941314984417E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999072005868502	WITHOUT_CLASSIFICATION	9.279941314984417E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999072005868502	WITHOUT_CLASSIFICATION	9.279941314984417E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999072005868502	WITHOUT_CLASSIFICATION	9.279941314984417E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999072005868502	WITHOUT_CLASSIFICATION	9.279941314984417E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999934701880056	WITHOUT_CLASSIFICATION	6.529811994482608E-6	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999934701880056	WITHOUT_CLASSIFICATION	6.529811994482608E-6	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999934701880056	WITHOUT_CLASSIFICATION	6.529811994482608E-6	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999953097878035	WITHOUT_CLASSIFICATION	4.69021219650749E-6	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999962182525874	WITHOUT_CLASSIFICATION	3.78174741244223E-6	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999992641841294	WITHOUT_CLASSIFICATION	7.358158706607988E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999826632052886	WITHOUT_CLASSIFICATION	1.7336794711325137E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999826632052886	WITHOUT_CLASSIFICATION	1.7336794711325137E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999072005868502	WITHOUT_CLASSIFICATION	9.279941314984417E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999072005868502	WITHOUT_CLASSIFICATION	9.279941314984417E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999934701880056	WITHOUT_CLASSIFICATION	6.529811994482608E-6	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999967369060203	WITHOUT_CLASSIFICATION	3.2630939796608572E-6	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999955642157018	WITHOUT_CLASSIFICATION	4.435784298222071E-6	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999946915141175	WITHOUT_CLASSIFICATION	5.30848588254163E-6	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999998694590595	WITHOUT_CLASSIFICATION	1.305409404335045E-7	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999998432566528	WITHOUT_CLASSIFICATION	1.567433471071973E-7	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999922801753485	WITHOUT_CLASSIFICATION	7.719824651532655E-6	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999956528152739	WITHOUT_CLASSIFICATION	4.3471847260216005E-6	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999970910487395	WITHOUT_CLASSIFICATION	2.9089512605026882E-5	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999974907238494	WITHOUT_CLASSIFICATION	2.5092761507359365E-6	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999974503932387	WITHOUT_CLASSIFICATION	2.5496067612115494E-6	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999993943782116	WITHOUT_CLASSIFICATION	6.056217884215956E-7	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999990510404348	WITHOUT_CLASSIFICATION	9.489595651431044E-7	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999619906535475	WITHOUT_CLASSIFICATION	3.8009346452394905E-5	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999992381943317	WITHOUT_CLASSIFICATION	7.618056683713411E-7	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999772299454104	WITHOUT_CLASSIFICATION	2.277005458961206E-5	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.999996717536838	WITHOUT_CLASSIFICATION	3.282463161959829E-6	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.999998590614592	WITHOUT_CLASSIFICATION	1.4093854080049945E-6	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.999997707990265	WITHOUT_CLASSIFICATION	2.2920097350427E-6	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999999981156272	WITHOUT_CLASSIFICATION	1.8843726770250546E-9	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.999963301107833	WITHOUT_CLASSIFICATION	3.6698892166879084E-5	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.999999158386066	WITHOUT_CLASSIFICATION	8.416139339388345E-7	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999994199994304	WITHOUT_CLASSIFICATION	5.800005695124268E-7	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999990004868785	WITHOUT_CLASSIFICATION	9.995131215763028E-7	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999992232372278	WITHOUT_CLASSIFICATION	7.767627723091903E-7	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999996183634715	WITHOUT_CLASSIFICATION	3.816365284095043E-7	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999987802143422	WITHOUT_CLASSIFICATION	1.2197856577976242E-6	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999975759993637	WITHOUT_CLASSIFICATION	2.4240006362645294E-6	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999932139177198	WITHOUT_CLASSIFICATION	6.786082280321437E-6	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999991036027345	WITHOUT_CLASSIFICATION	8.96397265669732E-7	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.999997096931177	WITHOUT_CLASSIFICATION	2.90306882304644E-6	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999998873159738	WITHOUT_CLASSIFICATION	1.126840261998393E-7	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.99999990328461	WITHOUT_CLASSIFICATION	9.671538996589992E-8	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999998836774462	WITHOUT_CLASSIFICATION	1.1632255373141848E-7	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999997124439914	WITHOUT_CLASSIFICATION	2.875560086590688E-7	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.999998623184853	WITHOUT_CLASSIFICATION	1.3768151470315855E-6	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999955642157018	WITHOUT_CLASSIFICATION	4.435784298222071E-6	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999971883772524	WITHOUT_CLASSIFICATION	2.8116227476630798E-6	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999975644541642	WITHOUT_CLASSIFICATION	2.43554583573715E-6	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999998160266896	WITHOUT_CLASSIFICATION	1.8397331029531194E-7	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999966794968043	WITHOUT_CLASSIFICATION	3.3205031958160566E-6	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999966794968043	WITHOUT_CLASSIFICATION	3.3205031958160566E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.999986511549377	WITHOUT_CLASSIFICATION	1.3488450622946176E-5	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.999986511549377	WITHOUT_CLASSIFICATION	1.3488450622946176E-5	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999993444040272	WITHOUT_CLASSIFICATION	6.555959729257526E-7	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999997841742821	WITHOUT_CLASSIFICATION	2.1582571783554654E-7	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999476925451104	WITHOUT_CLASSIFICATION	5.2307454889645184E-5	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999828027583445	WITHOUT_CLASSIFICATION	1.7197241655555828E-5	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999995804247248	WITHOUT_CLASSIFICATION	4.195752752266521E-7	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.999998321915539	WITHOUT_CLASSIFICATION	1.678084461073063E-6	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999985804212884	WITHOUT_CLASSIFICATION	1.4195787116670741E-6	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999999711724219	WITHOUT_CLASSIFICATION	2.8827578013873678E-8	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999996423552443	WITHOUT_CLASSIFICATION	3.576447557741904E-7	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999993748774034	WITHOUT_CLASSIFICATION	6.251225965426546E-7	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999997905944094	WITHOUT_CLASSIFICATION	2.0940559062350642E-7	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999984599652201	WITHOUT_CLASSIFICATION	1.5400347798110746E-6	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999984599652201	WITHOUT_CLASSIFICATION	1.5400347798110746E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999998175974739	WITHOUT_CLASSIFICATION	1.8240252609315033E-7	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999999747658415	WITHOUT_CLASSIFICATION	2.5234158551184224E-8	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999996052758501	WITHOUT_CLASSIFICATION	3.947241499000606E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999996052758501	WITHOUT_CLASSIFICATION	3.947241499000606E-6	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999993969971304	WITHOUT_CLASSIFICATION	6.030028697007965E-7	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999994374865904	WITHOUT_CLASSIFICATION	5.625134096376968E-7	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999961801594368	WITHOUT_CLASSIFICATION	3.819840563167535E-6	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999916310109848	WITHOUT_CLASSIFICATION	8.368989015245337E-6	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999992792729772	WITHOUT_CLASSIFICATION	7.207270228184479E-7	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999996139742813	WITHOUT_CLASSIFICATION	3.860257186682005E-7	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999957334470806	WITHOUT_CLASSIFICATION	4.266552919315172E-6	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999997474780505	WITHOUT_CLASSIFICATION	2.525219494670245E-7	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999982768817343	WITHOUT_CLASSIFICATION	1.7231182656795937E-6	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999773247205751	WITHOUT_CLASSIFICATION	2.2675279424914934E-5	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999990362873531	WITHOUT_CLASSIFICATION	9.637126468456952E-7	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999994419510889	WITHOUT_CLASSIFICATION	5.580489110929096E-7	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999979040733386	WITHOUT_CLASSIFICATION	2.0959266613836515E-6	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999969722832338	WITHOUT_CLASSIFICATION	3.027716766337787E-6	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999356914251	WITHOUT_CLASSIFICATION	6.430857496696813E-8	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999992931383637	WITHOUT_CLASSIFICATION	7.068616363458261E-7	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999965902583903	WITHOUT_CLASSIFICATION	3.409741609705666E-6	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.999997007299148	WITHOUT_CLASSIFICATION	2.9927008518897988E-6	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999992319467177	WITHOUT_CLASSIFICATION	7.680532823197761E-7	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999395886333	WITHOUT_CLASSIFICATION	6.041136670405609E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9999991981425199	WITHOUT_CLASSIFICATION	8.018574799908817E-7	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.99999789449585	WITHOUT_CLASSIFICATION	2.1055041500744695E-6	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999988450780323	WITHOUT_CLASSIFICATION	1.1549219677379683E-6	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999969051101896	WITHOUT_CLASSIFICATION	3.0948898105454506E-6	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999933933199029	WITHOUT_CLASSIFICATION	6.606680097033607E-6	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.999999061444085	WITHOUT_CLASSIFICATION	9.385559149369785E-7	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999977528042278	WITHOUT_CLASSIFICATION	2.247195772170273E-6	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999949435084553	WITHOUT_CLASSIFICATION	5.0564915446495045E-6	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.999999517643704	WITHOUT_CLASSIFICATION	4.823562959782614E-7	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999996869785788	WITHOUT_CLASSIFICATION	3.1302142124742775E-7	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.999996313615877	WITHOUT_CLASSIFICATION	3.6863841228647586E-6	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999957765382649	WITHOUT_CLASSIFICATION	4.223461735063612E-6	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999992447018581	WITHOUT_CLASSIFICATION	7.552981418899581E-7	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999980936273181	WITHOUT_CLASSIFICATION	1.906372681875511E-6	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999980936273181	WITHOUT_CLASSIFICATION	1.906372681875511E-6	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999995467739353	WITHOUT_CLASSIFICATION	4.532260647212193E-7	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.999999943751562	WITHOUT_CLASSIFICATION	5.6248437939373216E-8	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999971744844334	WITHOUT_CLASSIFICATION	2.825515566616648E-6	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999880200589047	WITHOUT_CLASSIFICATION	1.1979941095208777E-5	TEST
// Block	WITHOUT_CLASSIFICATION	0.9999847518966724	WITHOUT_CLASSIFICATION	1.5248103327553957E-5	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.999995878644633	WITHOUT_CLASSIFICATION	4.1213553668991874E-6	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999964536694368	WITHOUT_CLASSIFICATION	3.546330563305188E-6	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999982497274756	WITHOUT_CLASSIFICATION	1.7502725243753055E-6	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999999020941712	WITHOUT_CLASSIFICATION	9.790582871938061E-8	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999733137669317	WITHOUT_CLASSIFICATION	2.668623306838751E-5	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999895607592	WITHOUT_CLASSIFICATION	1.0439240777283796E-8	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999955805568703	WITHOUT_CLASSIFICATION	4.419443129713031E-6	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999422319691191	WITHOUT_CLASSIFICATION	5.776803088077735E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999966125732737	WITHOUT_CLASSIFICATION	3.3874267262711604E-6	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999992907594246	WITHOUT_CLASSIFICATION	7.092405754274555E-7	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999803269138129	WITHOUT_CLASSIFICATION	1.9673086187097467E-5	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999998826118782	WITHOUT_CLASSIFICATION	1.1738812181639571E-7	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999962560182967	WITHOUT_CLASSIFICATION	3.74398170340938E-6	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999949378876478	WITHOUT_CLASSIFICATION	5.062112352101265E-6	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.99999683047392	WITHOUT_CLASSIFICATION	3.1695260800305026E-6	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999997218924772	WITHOUT_CLASSIFICATION	2.78107522733475E-7	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999999055955909	WITHOUT_CLASSIFICATION	9.440440911375035E-7	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.999999911938138	WITHOUT_CLASSIFICATION	8.806186199754068E-8	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999991828029083	WITHOUT_CLASSIFICATION	8.171970916948523E-7	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.999996074643276	WITHOUT_CLASSIFICATION	3.925356723956645E-6	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999997471643299	WITHOUT_CLASSIFICATION	2.5283567001387085E-7	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999482562961	WITHOUT_CLASSIFICATION	5.174370378408362E-8	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999979720700104	WITHOUT_CLASSIFICATION	2.0279299895549255E-6	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.999995178571977	WITHOUT_CLASSIFICATION	4.821428022985772E-6	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999999098195956	WITHOUT_CLASSIFICATION	9.018040437271914E-8	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999999873733139	WITHOUT_CLASSIFICATION	1.262668609161821E-7	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999990609564231	WITHOUT_CLASSIFICATION	9.390435769018175E-7	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999985276026025	WITHOUT_CLASSIFICATION	1.4723973974123819E-6	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999994594826882	WITHOUT_CLASSIFICATION	5.405173117513838E-7	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999853263240305	WITHOUT_CLASSIFICATION	1.4673675969425381E-5	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.999992315672286	WITHOUT_CLASSIFICATION	7.68432771398128E-6	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999885564417215	WITHOUT_CLASSIFICATION	1.1443558278423779E-5	TEST
// value equality	WITHOUT_CLASSIFICATION	0.999995837067483	WITHOUT_CLASSIFICATION	4.162932516988218E-6	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999976596843351	WITHOUT_CLASSIFICATION	2.340315664937025E-6	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999955639060406	WITHOUT_CLASSIFICATION	4.436093959318928E-6	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999852314199499	WITHOUT_CLASSIFICATION	1.4768580050137494E-5	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999789035550641	WITHOUT_CLASSIFICATION	2.1096444935917617E-5	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999789035550641	WITHOUT_CLASSIFICATION	2.1096444935917617E-5	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999720117211904	WITHOUT_CLASSIFICATION	2.7988278809548908E-5	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999976062916328	WITHOUT_CLASSIFICATION	2.393708367168797E-6	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999835878323898	WITHOUT_CLASSIFICATION	1.641216761021473E-5	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999947919299449	WITHOUT_CLASSIFICATION	5.208070055084381E-6	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999991801401257	WITHOUT_CLASSIFICATION	8.198598743643092E-7	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999996682475524	WITHOUT_CLASSIFICATION	3.317524475478186E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999565394551	WITHOUT_CLASSIFICATION	4.3460544919460804E-8	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999999824824273	WITHOUT_CLASSIFICATION	1.751757273959801E-8	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999998378691217	WITHOUT_CLASSIFICATION	1.621308783324924E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999848926512	WITHOUT_CLASSIFICATION	1.5107348862842836E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999928373830538	WITHOUT_CLASSIFICATION	7.1626169462091105E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999995602376667	WITHOUT_CLASSIFICATION	4.397623333633092E-7	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999998864474702	WITHOUT_CLASSIFICATION	1.1355252991597863E-7	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999991463619831	WITHOUT_CLASSIFICATION	8.536380169850154E-7	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999653091567	WITHOUT_CLASSIFICATION	3.4690843310606885E-8	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999994437490631	WITHOUT_CLASSIFICATION	5.562509368114547E-7	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999999978912592	WITHOUT_CLASSIFICATION	2.1087408047819076E-8	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999657342748901	WITHOUT_CLASSIFICATION	3.426572510985595E-5	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999990519536384	WITHOUT_CLASSIFICATION	9.480463616052148E-7	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.999998995796606	WITHOUT_CLASSIFICATION	1.0042033939938998E-6	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999994382767547	WITHOUT_CLASSIFICATION	5.617232451426834E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999975934838427	WITHOUT_CLASSIFICATION	2.406516157334168E-6	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999998965790601	WITHOUT_CLASSIFICATION	1.0342094000535329E-7	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999999446286046	WITHOUT_CLASSIFICATION	5.537139536449797E-8	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999131709125	WITHOUT_CLASSIFICATION	8.682908755059323E-8	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999998913759915	WITHOUT_CLASSIFICATION	1.0862400844489194E-7	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999998925084937	WITHOUT_CLASSIFICATION	1.0749150630643844E-7	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999980768044697	WITHOUT_CLASSIFICATION	1.923195530366697E-6	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999989050159578	WITHOUT_CLASSIFICATION	1.0949840422834372E-6	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999888327018547	WITHOUT_CLASSIFICATION	1.1167298145208358E-5	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999989418363	WITHOUT_CLASSIFICATION	1.0581637000519067E-6	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999998657211335	WITHOUT_CLASSIFICATION	1.342788664821863E-7	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999888327018547	WITHOUT_CLASSIFICATION	1.1167298145208358E-5	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.999999932782543	WITHOUT_CLASSIFICATION	6.721745706495331E-8	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999998720880389	WITHOUT_CLASSIFICATION	1.27911961157991E-7	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999999964270524	WITHOUT_CLASSIFICATION	3.5729476013413733E-9	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9999961872928814	WITHOUT_CLASSIFICATION	3.8127071184458702E-6	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999987119971413	WITHOUT_CLASSIFICATION	1.2880028587475457E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999777852373	WITHOUT_CLASSIFICATION	2.2214762714947272E-8	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999979103346418	WITHOUT_CLASSIFICATION	2.0896653582969316E-6	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.999998855759045	WITHOUT_CLASSIFICATION	1.144240954968907E-6	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999538757264	WITHOUT_CLASSIFICATION	4.6124273682988375E-8	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999395886333	WITHOUT_CLASSIFICATION	6.041136670405609E-8	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999994142593702	WITHOUT_CLASSIFICATION	5.857406297518337E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999784837251	WITHOUT_CLASSIFICATION	2.1516274762906284E-8	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999994265379438	WITHOUT_CLASSIFICATION	5.734620562332237E-7	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999996600091771	WITHOUT_CLASSIFICATION	3.3999082290112387E-7	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.999991081893733	WITHOUT_CLASSIFICATION	8.918106266983421E-6	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999954682820905	WITHOUT_CLASSIFICATION	4.531717909484059E-6	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999999979659187	WITHOUT_CLASSIFICATION	2.034081475912245E-9	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999992787697701	WITHOUT_CLASSIFICATION	7.212302298562489E-7	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999899709358	WITHOUT_CLASSIFICATION	1.002906422994165E-8	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999999846508374	WITHOUT_CLASSIFICATION	1.5349162616308825E-8	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999748691331123	WITHOUT_CLASSIFICATION	2.5130866887665278E-5	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999920781362853	WITHOUT_CLASSIFICATION	7.921863714716152E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.999993686652112	WITHOUT_CLASSIFICATION	6.313347888115081E-6	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999945512156272	WITHOUT_CLASSIFICATION	5.448784372788713E-6	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999953429974513	WITHOUT_CLASSIFICATION	4.657002548748192E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.999984539226343	WITHOUT_CLASSIFICATION	1.5460773656927636E-5	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999855055647239	WITHOUT_CLASSIFICATION	1.4494435276048345E-5	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999513456855	WITHOUT_CLASSIFICATION	4.865431455675831E-8	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999994871255933	WITHOUT_CLASSIFICATION	5.128744067426486E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999995015728265	WITHOUT_CLASSIFICATION	4.984271735221556E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999995015728265	WITHOUT_CLASSIFICATION	4.984271735221556E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.999998691991638	WITHOUT_CLASSIFICATION	1.308008361979368E-6	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999998222988757	WITHOUT_CLASSIFICATION	1.7770112422111365E-7	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999998009031855	WITHOUT_CLASSIFICATION	1.9909681453178201E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.999989677822912	WITHOUT_CLASSIFICATION	1.0322177087920942E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.999989677822912	WITHOUT_CLASSIFICATION	1.0322177087920942E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.999989677822912	WITHOUT_CLASSIFICATION	1.0322177087920942E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.999989677822912	WITHOUT_CLASSIFICATION	1.0322177087920942E-5	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999997530362891	WITHOUT_CLASSIFICATION	2.4696371095993703E-7	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999992097082296	WITHOUT_CLASSIFICATION	7.902917702498283E-7	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999793182504428	WITHOUT_CLASSIFICATION	2.068174955715022E-5	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999999852596123	WITHOUT_CLASSIFICATION	1.4740387832041664E-8	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999976101520633	WITHOUT_CLASSIFICATION	2.3898479365741823E-6	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999985893141228	WITHOUT_CLASSIFICATION	1.410685877187214E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999880074165932	WITHOUT_CLASSIFICATION	1.1992583406859584E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999880074165932	WITHOUT_CLASSIFICATION	1.1992583406859584E-5	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999998569563777	WITHOUT_CLASSIFICATION	1.430436223765943E-7	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9999599101939713	WITHOUT_CLASSIFICATION	4.008980602860446E-5	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999997676078662	WITHOUT_CLASSIFICATION	2.323921337069719E-7	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999999947502416	WITHOUT_CLASSIFICATION	5.2497583531123206E-9	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999990915462408	WITHOUT_CLASSIFICATION	9.084537591600512E-7	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999941403019488	WITHOUT_CLASSIFICATION	5.859698051222822E-6	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999992777990676	WITHOUT_CLASSIFICATION	7.222009323336266E-7	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999919613625264	WITHOUT_CLASSIFICATION	8.038637473455818E-6	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999828152440477	WITHOUT_CLASSIFICATION	1.7184755952304753E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999828152440477	WITHOUT_CLASSIFICATION	1.7184755952304753E-4	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999998657211335	WITHOUT_CLASSIFICATION	1.342788664821863E-7	TEST
// line 449	WITHOUT_CLASSIFICATION	0.999983685419544	WITHOUT_CLASSIFICATION	1.6314580456032842E-5	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999836903128211	WITHOUT_CLASSIFICATION	1.630968717891465E-5	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999981019195388	WITHOUT_CLASSIFICATION	1.898080461210343E-6	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999379206337	WITHOUT_CLASSIFICATION	6.207936632152271E-8	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9999584171361319	WITHOUT_CLASSIFICATION	4.1582863868121896E-5	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999977656482951	WITHOUT_CLASSIFICATION	2.2343517049362694E-6	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999884676981512	WITHOUT_CLASSIFICATION	1.1532301848804944E-5	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.999996337999883	WITHOUT_CLASSIFICATION	3.662000117155587E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.999996337999883	WITHOUT_CLASSIFICATION	3.662000117155587E-6	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999998616077074	WITHOUT_CLASSIFICATION	1.3839229257419123E-7	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.99999997506003	WITHOUT_CLASSIFICATION	2.4939970061426132E-8	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999999669769444	WITHOUT_CLASSIFICATION	3.3023055594928756E-8	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999695919796217	WITHOUT_CLASSIFICATION	3.0408020378424704E-5	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999984015699983	WITHOUT_CLASSIFICATION	1.5984300017012197E-6	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9999671474616191	WITHOUT_CLASSIFICATION	3.285253838081064E-5	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.999999860654412	WITHOUT_CLASSIFICATION	1.3934558800490434E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999993249363034	WITHOUT_CLASSIFICATION	6.750636966120687E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999993249363034	WITHOUT_CLASSIFICATION	6.750636966120687E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999993249363034	WITHOUT_CLASSIFICATION	6.750636966120687E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999993249363034	WITHOUT_CLASSIFICATION	6.750636966120687E-7	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999999673923239	WITHOUT_CLASSIFICATION	3.260767610026877E-7	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999989518876	WITHOUT_CLASSIFICATION	1.048112369516377E-9	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999956774641192	WITHOUT_CLASSIFICATION	4.32253588078314E-6	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999996597485068	WITHOUT_CLASSIFICATION	3.40251493133758E-7	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999996567322845	WITHOUT_CLASSIFICATION	3.4326771550071654E-7	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.9999517633937893	WITHOUT_CLASSIFICATION	4.823660621070494E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999967552711607	WITHOUT_CLASSIFICATION	3.2447288393087233E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999933816738314	WITHOUT_CLASSIFICATION	6.6183261686634545E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999933816738314	WITHOUT_CLASSIFICATION	6.6183261686634545E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999933816738314	WITHOUT_CLASSIFICATION	6.6183261686634545E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999995563328449	WITHOUT_CLASSIFICATION	4.436671550445492E-7	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999997265451707	WITHOUT_CLASSIFICATION	2.734548293125042E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999998071954932	WITHOUT_CLASSIFICATION	1.9280450691390714E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999998071954932	WITHOUT_CLASSIFICATION	1.9280450691390714E-7	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999730073255549	WITHOUT_CLASSIFICATION	2.6992674445073762E-5	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999999550523	WITHOUT_CLASSIFICATION	4.4947696381194645E-10	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999999537302905	WITHOUT_CLASSIFICATION	4.626970953225249E-8	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9999772732080265	WITHOUT_CLASSIFICATION	2.2726791973503453E-5	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999893374335	WITHOUT_CLASSIFICATION	1.0662566590137296E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999938828503266	WITHOUT_CLASSIFICATION	6.117149673301506E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999993332185148	WITHOUT_CLASSIFICATION	6.667814851552745E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999993332185148	WITHOUT_CLASSIFICATION	6.667814851552745E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999943578584546	WITHOUT_CLASSIFICATION	5.642141545335183E-6	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.999999967948927	WITHOUT_CLASSIFICATION	3.205107299484732E-8	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999993429262	WITHOUT_CLASSIFICATION	6.57073786793324E-10	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999942171010242	WITHOUT_CLASSIFICATION	5.782898975729062E-6	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.999997315595872	WITHOUT_CLASSIFICATION	2.6844041279633034E-6	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999730935237	WITHOUT_CLASSIFICATION	2.690647619788565E-8	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999981594021231	WITHOUT_CLASSIFICATION	1.8405978768906409E-6	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999128587173325	WITHOUT_CLASSIFICATION	8.714128266741616E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999992577905199	WITHOUT_CLASSIFICATION	7.422094800968156E-7	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999965817243591	WITHOUT_CLASSIFICATION	3.418275640899467E-6	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999997349115265	WITHOUT_CLASSIFICATION	2.6508847348752534E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999993606916527	WITHOUT_CLASSIFICATION	6.39308347178635E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999139373495	WITHOUT_CLASSIFICATION	8.606265049956318E-8	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999999695335815	WITHOUT_CLASSIFICATION	3.046641852381071E-8	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999999309313201	WITHOUT_CLASSIFICATION	6.90686799043315E-7	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999998780037017	WITHOUT_CLASSIFICATION	1.2199629819829502E-7	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999999477732845	WITHOUT_CLASSIFICATION	5.222671548141291E-8	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999168502233	WITHOUT_CLASSIFICATION	8.314977672943769E-8	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999995989105971	WITHOUT_CLASSIFICATION	4.010894029892967E-7	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999997663474014	WITHOUT_CLASSIFICATION	2.336525985125967E-7	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.999997968784894	WITHOUT_CLASSIFICATION	2.03121510605665E-6	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999996337063586	WITHOUT_CLASSIFICATION	3.6629364134202757E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998843445478037	WITHOUT_CLASSIFICATION	1.156554521962287E-4	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998843445478037	WITHOUT_CLASSIFICATION	1.156554521962287E-4	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998843445478037	WITHOUT_CLASSIFICATION	1.156554521962287E-4	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998843445478037	WITHOUT_CLASSIFICATION	1.156554521962287E-4	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998843445478037	WITHOUT_CLASSIFICATION	1.156554521962287E-4	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998843445478037	WITHOUT_CLASSIFICATION	1.156554521962287E-4	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998843445478037	WITHOUT_CLASSIFICATION	1.156554521962287E-4	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998843445478037	WITHOUT_CLASSIFICATION	1.156554521962287E-4	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999998907327182	WITHOUT_CLASSIFICATION	1.0926728185427203E-7	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999890430326832	WITHOUT_CLASSIFICATION	1.0956967316849027E-5	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999993412080572	WITHOUT_CLASSIFICATION	6.58791942700981E-7	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999490394702	WITHOUT_CLASSIFICATION	5.0960529868718136E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999565394551	WITHOUT_CLASSIFICATION	4.3460544919460804E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999565394551	WITHOUT_CLASSIFICATION	4.3460544919460804E-8	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999997118180112	WITHOUT_CLASSIFICATION	2.8818198879621107E-7	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999989273060714	WITHOUT_CLASSIFICATION	1.0726939286156393E-6	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.999996830093528	WITHOUT_CLASSIFICATION	3.1699064719404575E-6	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999995902085366	WITHOUT_CLASSIFICATION	4.097914633871626E-7	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999972249592126	WITHOUT_CLASSIFICATION	2.775040787412434E-6	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.999996457564896	WITHOUT_CLASSIFICATION	3.5424351041116864E-6	TEST
// read	WITHOUT_CLASSIFICATION	0.9999926741967404	WITHOUT_CLASSIFICATION	7.325803259553285E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999941826545004	WITHOUT_CLASSIFICATION	5.817345499658232E-6	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.999998166687367	WITHOUT_CLASSIFICATION	1.833312633066797E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999371952424	WITHOUT_CLASSIFICATION	6.280475759611839E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999371952424	WITHOUT_CLASSIFICATION	6.280475759611839E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999371952424	WITHOUT_CLASSIFICATION	6.280475759611839E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999321727934264	WITHOUT_CLASSIFICATION	6.782720657363894E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999321727934264	WITHOUT_CLASSIFICATION	6.782720657363894E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999321727934264	WITHOUT_CLASSIFICATION	6.782720657363894E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999321727934264	WITHOUT_CLASSIFICATION	6.782720657363894E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999321727934264	WITHOUT_CLASSIFICATION	6.782720657363894E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999321727934264	WITHOUT_CLASSIFICATION	6.782720657363894E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999321727934264	WITHOUT_CLASSIFICATION	6.782720657363894E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999321727934264	WITHOUT_CLASSIFICATION	6.782720657363894E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999321727934264	WITHOUT_CLASSIFICATION	6.782720657363894E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999992181659161	WITHOUT_CLASSIFICATION	7.818340839731605E-7	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999942266576098	WITHOUT_CLASSIFICATION	5.773342390183462E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999991331864934	WITHOUT_CLASSIFICATION	8.66813506620751E-7	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999978360801611	WITHOUT_CLASSIFICATION	2.163919838792689E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999321727934264	WITHOUT_CLASSIFICATION	6.782720657363894E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999321727934264	WITHOUT_CLASSIFICATION	6.782720657363894E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999321727934264	WITHOUT_CLASSIFICATION	6.782720657363894E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999970599703683	WITHOUT_CLASSIFICATION	2.940029631643027E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999968849191446	WITHOUT_CLASSIFICATION	3.115080855376943E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999998854538908	WITHOUT_CLASSIFICATION	1.1454610915505822E-7	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999992844707065	WITHOUT_CLASSIFICATION	7.155292935064827E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999992844707065	WITHOUT_CLASSIFICATION	7.155292935064827E-6	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999946079862002	WITHOUT_CLASSIFICATION	5.392013799822488E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999995544848093	WITHOUT_CLASSIFICATION	4.455151907379773E-7	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999387302002	WITHOUT_CLASSIFICATION	6.126979979852451E-8	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999792907059	WITHOUT_CLASSIFICATION	2.0709294067423232E-8	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999922437101185	WITHOUT_CLASSIFICATION	7.756289881426246E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999922437101185	WITHOUT_CLASSIFICATION	7.756289881426246E-6	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999999771339256	WITHOUT_CLASSIFICATION	2.286607441713953E-8	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.999999968153567	WITHOUT_CLASSIFICATION	3.184643307922721E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999987022483815	WITHOUT_CLASSIFICATION	1.2977516184152172E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999099924234728	WITHOUT_CLASSIFICATION	9.000757652722847E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999099924234728	WITHOUT_CLASSIFICATION	9.000757652722847E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999099924234728	WITHOUT_CLASSIFICATION	9.000757652722847E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999696141647295	WITHOUT_CLASSIFICATION	3.0385835270497938E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999974886775764	WITHOUT_CLASSIFICATION	2.511322423590284E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999974886775764	WITHOUT_CLASSIFICATION	2.511322423590284E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.999997386693214	WITHOUT_CLASSIFICATION	2.6133067860059876E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.999997386693214	WITHOUT_CLASSIFICATION	2.6133067860059876E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999962326078535	WITHOUT_CLASSIFICATION	3.7673921465846452E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999997681673195	WITHOUT_CLASSIFICATION	2.3183268045024998E-7	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999792011166382	WITHOUT_CLASSIFICATION	2.0798883361819815E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999782407893592	WITHOUT_CLASSIFICATION	2.1759210640871966E-5	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999896284591668	WITHOUT_CLASSIFICATION	1.0371540833183245E-5	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999993622144383	WITHOUT_CLASSIFICATION	6.377855617059802E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999948453348	WITHOUT_CLASSIFICATION	5.154665204796021E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999825668402044	WITHOUT_CLASSIFICATION	1.7433159795617846E-5	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999912458397737	WITHOUT_CLASSIFICATION	8.754160226391269E-6	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.999999964473757	WITHOUT_CLASSIFICATION	3.5526242925764674E-8	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999757758750238	WITHOUT_CLASSIFICATION	2.422412497619056E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999950895432804	WITHOUT_CLASSIFICATION	4.910456719636917E-6	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999995454273322	WITHOUT_CLASSIFICATION	4.545726677472057E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999172396423	WITHOUT_CLASSIFICATION	8.276035763769625E-8	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999626200538	WITHOUT_CLASSIFICATION	3.7379946266223445E-8	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999985385469344	WITHOUT_CLASSIFICATION	1.461453065447838E-6	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999999042766291	WITHOUT_CLASSIFICATION	9.572337095997045E-8	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999998928937761	WITHOUT_CLASSIFICATION	1.0710622390538786E-6	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999995845898253	WITHOUT_CLASSIFICATION	4.154101746334707E-7	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999993276790445	WITHOUT_CLASSIFICATION	6.723209553713774E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999784837251	WITHOUT_CLASSIFICATION	2.1516274762906284E-8	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999432762409277	WITHOUT_CLASSIFICATION	5.672375907233672E-5	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999971886163905	WITHOUT_CLASSIFICATION	2.8113836093596346E-6	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999984721327543	WITHOUT_CLASSIFICATION	1.5278672456956382E-6	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999989283776739	WITHOUT_CLASSIFICATION	1.0716223260845033E-6	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999917185383449	WITHOUT_CLASSIFICATION	8.281461655153945E-6	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999706352547547	WITHOUT_CLASSIFICATION	2.936474524521745E-5	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999558651266	WITHOUT_CLASSIFICATION	4.4134873516346554E-8	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999957480951877	WITHOUT_CLASSIFICATION	4.251904812372075E-6	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999234058213	WITHOUT_CLASSIFICATION	7.659417868017077E-8	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999943789289819	WITHOUT_CLASSIFICATION	5.621071018021151E-6	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999991846552879	WITHOUT_CLASSIFICATION	8.153447119701716E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999980283445261	WITHOUT_CLASSIFICATION	1.971655473938956E-6	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999993354792408	WITHOUT_CLASSIFICATION	6.645207591585368E-7	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999978065018282	WITHOUT_CLASSIFICATION	2.193498171727577E-6	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999999987726815	WITHOUT_CLASSIFICATION	1.2273184336017895E-9	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999989191045829	WITHOUT_CLASSIFICATION	1.0808954170217837E-6	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999990950520776	WITHOUT_CLASSIFICATION	9.04947922462592E-7	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999984446423326	WITHOUT_CLASSIFICATION	1.555357667438194E-6	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.999999952223461	WITHOUT_CLASSIFICATION	4.7776539041445786E-8	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999999969344681	WITHOUT_CLASSIFICATION	3.065531926991117E-9	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999888409262554	WITHOUT_CLASSIFICATION	1.115907374456877E-5	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999995706969232	WITHOUT_CLASSIFICATION	4.293030767209187E-7	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999983466180666	WITHOUT_CLASSIFICATION	1.6533819334146613E-6	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999999923151228	WITHOUT_CLASSIFICATION	7.684877192231941E-9	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999991553087407	WITHOUT_CLASSIFICATION	8.446912593473388E-7	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999962508558368	WITHOUT_CLASSIFICATION	3.749144163267645E-6	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999281787105	WITHOUT_CLASSIFICATION	7.182128944574133E-8	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.999999170347256	WITHOUT_CLASSIFICATION	8.296527439426908E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999900507048444	WITHOUT_CLASSIFICATION	9.949295155570192E-6	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999999886984414	WITHOUT_CLASSIFICATION	1.1301558556460084E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999964116557843	WITHOUT_CLASSIFICATION	3.5883442156462387E-6	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999964116557843	WITHOUT_CLASSIFICATION	3.5883442156462387E-6	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999994550404492	WITHOUT_CLASSIFICATION	5.449595508104369E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999994550404492	WITHOUT_CLASSIFICATION	5.449595508104369E-7	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999995847256373	WITHOUT_CLASSIFICATION	4.1527436269939615E-6	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999995847256373	WITHOUT_CLASSIFICATION	4.1527436269939615E-6	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999885378334581	WITHOUT_CLASSIFICATION	1.1462166541872808E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999885378334581	WITHOUT_CLASSIFICATION	1.1462166541872808E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999961197695657	WITHOUT_CLASSIFICATION	3.880230434278728E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999961197695657	WITHOUT_CLASSIFICATION	3.880230434278728E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999961197695657	WITHOUT_CLASSIFICATION	3.880230434278728E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999961197695657	WITHOUT_CLASSIFICATION	3.880230434278728E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999961197695657	WITHOUT_CLASSIFICATION	3.880230434278728E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999961197695657	WITHOUT_CLASSIFICATION	3.880230434278728E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999961197695657	WITHOUT_CLASSIFICATION	3.880230434278728E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999961197695657	WITHOUT_CLASSIFICATION	3.880230434278728E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999961197695657	WITHOUT_CLASSIFICATION	3.880230434278728E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999992732383712	WITHOUT_CLASSIFICATION	7.267616288305616E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999992732383712	WITHOUT_CLASSIFICATION	7.267616288305616E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999992732383712	WITHOUT_CLASSIFICATION	7.267616288305616E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999985500865891	WITHOUT_CLASSIFICATION	1.4499134108348202E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999947967961466	WITHOUT_CLASSIFICATION	5.203203853452739E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999947967961466	WITHOUT_CLASSIFICATION	5.203203853452739E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999947967961466	WITHOUT_CLASSIFICATION	5.203203853452739E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999997818761059	WITHOUT_CLASSIFICATION	2.181238940931763E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999997818761059	WITHOUT_CLASSIFICATION	2.181238940931763E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999997818761059	WITHOUT_CLASSIFICATION	2.181238940931763E-7	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999897145463272	WITHOUT_CLASSIFICATION	1.0285453672735649E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999878591205632	WITHOUT_CLASSIFICATION	1.214087943682385E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999293640136313	WITHOUT_CLASSIFICATION	7.063598636869479E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999324630054354	WITHOUT_CLASSIFICATION	6.753699456458718E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999324630054354	WITHOUT_CLASSIFICATION	6.753699456458718E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999324630054354	WITHOUT_CLASSIFICATION	6.753699456458718E-5	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999940067473829	WITHOUT_CLASSIFICATION	5.993252617057247E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999923418090161	WITHOUT_CLASSIFICATION	7.658190983796769E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999923418090161	WITHOUT_CLASSIFICATION	7.658190983796769E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999998989250197	WITHOUT_CLASSIFICATION	1.010749802679527E-7	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999940093645	WITHOUT_CLASSIFICATION	5.9906355865885975E-9	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999940093645	WITHOUT_CLASSIFICATION	5.9906355865885975E-9	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9999999562150444	WITHOUT_CLASSIFICATION	4.378495567661308E-8	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999999912830781	WITHOUT_CLASSIFICATION	8.71692189526819E-8	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999994730701074	WITHOUT_CLASSIFICATION	5.269298926186229E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999901391022217	WITHOUT_CLASSIFICATION	9.860897778261621E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999901391022217	WITHOUT_CLASSIFICATION	9.860897778261621E-6	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999997764808265	WITHOUT_CLASSIFICATION	2.2351917338878015E-7	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999995560822467	WITHOUT_CLASSIFICATION	4.4391775332940484E-7	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999999194447942	WITHOUT_CLASSIFICATION	8.055520588018027E-8	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.99999999491831	WITHOUT_CLASSIFICATION	5.081689938609216E-9	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999999647767115	WITHOUT_CLASSIFICATION	3.522328839262644E-8	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999901391022217	WITHOUT_CLASSIFICATION	9.860897778261621E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999901391022217	WITHOUT_CLASSIFICATION	9.860897778261621E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999901391022217	WITHOUT_CLASSIFICATION	9.860897778261621E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999901391022217	WITHOUT_CLASSIFICATION	9.860897778261621E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999901391022217	WITHOUT_CLASSIFICATION	9.860897778261621E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999758888305612	WITHOUT_CLASSIFICATION	2.4111169438797354E-5	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999978720088469	WITHOUT_CLASSIFICATION	2.127991153098608E-6	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999256221919	WITHOUT_CLASSIFICATION	7.437780816644679E-8	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999851481923341	WITHOUT_CLASSIFICATION	1.4851807665892276E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.999999959874578	WITHOUT_CLASSIFICATION	4.0125421980766257E-8	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999930673893171	WITHOUT_CLASSIFICATION	6.932610682768004E-6	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.99999999825595	WITHOUT_CLASSIFICATION	1.7440501260056285E-9	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999996306120633	WITHOUT_CLASSIFICATION	3.6938793676332034E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998266766363	WITHOUT_CLASSIFICATION	1.7332336367967328E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999764966763828	WITHOUT_CLASSIFICATION	2.3503323617117213E-5	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999987571156547	WITHOUT_CLASSIFICATION	1.2428843453451592E-6	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999975934838427	WITHOUT_CLASSIFICATION	2.406516157334168E-6	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999974552922696	WITHOUT_CLASSIFICATION	2.5447077304031795E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999989363707797	WITHOUT_CLASSIFICATION	1.063629220211059E-6	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999990498559738	WITHOUT_CLASSIFICATION	9.501440261844713E-7	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999999934064399	WITHOUT_CLASSIFICATION	6.593560134947195E-9	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999995005463104	WITHOUT_CLASSIFICATION	4.994536895911736E-7	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999993647333	WITHOUT_CLASSIFICATION	6.352666725415895E-10	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999997075184043	WITHOUT_CLASSIFICATION	2.924815957243842E-7	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999964229823066	WITHOUT_CLASSIFICATION	3.577017693455554E-6	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999992872373265	WITHOUT_CLASSIFICATION	7.127626735247976E-7	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999905230958628	WITHOUT_CLASSIFICATION	9.476904137322067E-6	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999848926512	WITHOUT_CLASSIFICATION	1.5107348862842836E-8	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999994715748137	WITHOUT_CLASSIFICATION	5.284251863047239E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999994715748137	WITHOUT_CLASSIFICATION	5.284251863047239E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999994715748137	WITHOUT_CLASSIFICATION	5.284251863047239E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999994715748137	WITHOUT_CLASSIFICATION	5.284251863047239E-7	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999997415278831	WITHOUT_CLASSIFICATION	2.584721170111185E-7	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999999815051699	WITHOUT_CLASSIFICATION	1.8494830049141043E-8	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999985743617724	WITHOUT_CLASSIFICATION	1.4256382276555898E-6	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999985743617724	WITHOUT_CLASSIFICATION	1.4256382276555898E-6	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999945587245531	WITHOUT_CLASSIFICATION	5.441275446844032E-6	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999689067675497	WITHOUT_CLASSIFICATION	3.109323245029308E-5	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999975589681148	WITHOUT_CLASSIFICATION	2.4410318851434856E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999989085137938	WITHOUT_CLASSIFICATION	1.091486206248707E-6	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.999999892856966	WITHOUT_CLASSIFICATION	1.0714303394632748E-7	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999995378958362	WITHOUT_CLASSIFICATION	4.621041638631276E-7	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999984998748198	WITHOUT_CLASSIFICATION	1.5001251801434803E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999921256080777	WITHOUT_CLASSIFICATION	7.874391922334467E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999921256080777	WITHOUT_CLASSIFICATION	7.874391922334467E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999921256080777	WITHOUT_CLASSIFICATION	7.874391922334467E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999921256080777	WITHOUT_CLASSIFICATION	7.874391922334467E-6	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999927122633	WITHOUT_CLASSIFICATION	7.2877367289019934E-9	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999996682768847	WITHOUT_CLASSIFICATION	3.3172311534659236E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999996682768847	WITHOUT_CLASSIFICATION	3.3172311534659236E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999996682768847	WITHOUT_CLASSIFICATION	3.3172311534659236E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999977397871798	WITHOUT_CLASSIFICATION	2.260212820307128E-6	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999986763456442	WITHOUT_CLASSIFICATION	1.3236543557973064E-6	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.999986850040446	WITHOUT_CLASSIFICATION	1.3149959554057013E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.999989677822912	WITHOUT_CLASSIFICATION	1.0322177087920942E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.999989677822912	WITHOUT_CLASSIFICATION	1.0322177087920942E-5	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999973547012	WITHOUT_CLASSIFICATION	2.645298817276833E-9	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999927434388	WITHOUT_CLASSIFICATION	7.25656116301536E-9	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999931612246747	WITHOUT_CLASSIFICATION	6.838775325238164E-6	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999931612246747	WITHOUT_CLASSIFICATION	6.838775325238164E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999998281792238	WITHOUT_CLASSIFICATION	1.7182077619573202E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999998281792238	WITHOUT_CLASSIFICATION	1.7182077619573202E-6	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.999999881100934	WITHOUT_CLASSIFICATION	1.1889906599690135E-7	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.999999952025799	WITHOUT_CLASSIFICATION	4.7974200977783806E-8	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999972851917542	WITHOUT_CLASSIFICATION	2.714808245699396E-6	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999998616454615	WITHOUT_CLASSIFICATION	1.3835453849539078E-7	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999841747571068	WITHOUT_CLASSIFICATION	1.5825242893242695E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999977444663429	WITHOUT_CLASSIFICATION	2.255533657034849E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999980119244284	WITHOUT_CLASSIFICATION	1.9880755716086674E-6	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999998043562826	WITHOUT_CLASSIFICATION	1.9564371744840856E-7	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.999999771765751	WITHOUT_CLASSIFICATION	2.2823424895625142E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999993292332681	WITHOUT_CLASSIFICATION	6.707667319073964E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999993292332681	WITHOUT_CLASSIFICATION	6.707667319073964E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999789222439162	WITHOUT_CLASSIFICATION	2.107775608382575E-5	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999789222439162	WITHOUT_CLASSIFICATION	2.107775608382575E-5	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999997619727594	WITHOUT_CLASSIFICATION	2.3802724052130705E-7	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999993262742152	WITHOUT_CLASSIFICATION	6.737257849306083E-7	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999944044843508	WITHOUT_CLASSIFICATION	5.5955156492104054E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999958005584842	WITHOUT_CLASSIFICATION	4.199441515766889E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999958005584842	WITHOUT_CLASSIFICATION	4.199441515766889E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999958005584842	WITHOUT_CLASSIFICATION	4.199441515766889E-6	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999862494070908	WITHOUT_CLASSIFICATION	1.3750592909338351E-5	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999836384612706	WITHOUT_CLASSIFICATION	1.6361538729435033E-5	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999863909408196	WITHOUT_CLASSIFICATION	1.360905918040939E-5	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999844521073699	WITHOUT_CLASSIFICATION	1.5547892630152277E-5	TEST
// line 533	WITHOUT_CLASSIFICATION	0.999983877180283	WITHOUT_CLASSIFICATION	1.6122819716969025E-5	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999839126836655	WITHOUT_CLASSIFICATION	1.608731633461546E-5	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999861060633798	WITHOUT_CLASSIFICATION	1.389393662021213E-5	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999800215965086	WITHOUT_CLASSIFICATION	1.9978403491461726E-5	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999986429619157	WITHOUT_CLASSIFICATION	1.3570380843453129E-6	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999996487251458	WITHOUT_CLASSIFICATION	3.5127485417122144E-7	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.999999910181875	WITHOUT_CLASSIFICATION	8.981812505063775E-8	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999992079665073	WITHOUT_CLASSIFICATION	7.920334926380471E-7	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999979666998532	WITHOUT_CLASSIFICATION	2.033300146722946E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.999989677822912	WITHOUT_CLASSIFICATION	1.0322177087920942E-5	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.999998794829936	WITHOUT_CLASSIFICATION	1.2051700639678927E-6	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.999997303704756	WITHOUT_CLASSIFICATION	2.6962952440295805E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999995015728265	WITHOUT_CLASSIFICATION	4.984271735221556E-7	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999726250341436	WITHOUT_CLASSIFICATION	2.73749658563642E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999726250341436	WITHOUT_CLASSIFICATION	2.73749658563642E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999726250341436	WITHOUT_CLASSIFICATION	2.73749658563642E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999726250341436	WITHOUT_CLASSIFICATION	2.73749658563642E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999726250341436	WITHOUT_CLASSIFICATION	2.73749658563642E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998333260381687	WITHOUT_CLASSIFICATION	1.6667396183132294E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999726250341436	WITHOUT_CLASSIFICATION	2.73749658563642E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999726250341436	WITHOUT_CLASSIFICATION	2.73749658563642E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999726250341436	WITHOUT_CLASSIFICATION	2.73749658563642E-5	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999999451969354	WITHOUT_CLASSIFICATION	5.480306460379828E-8	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999994422023619	WITHOUT_CLASSIFICATION	5.577976380872688E-7	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999998546784282	WITHOUT_CLASSIFICATION	1.453215718380992E-7	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999953759715666	WITHOUT_CLASSIFICATION	4.624028433348281E-6	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999980627271382	WITHOUT_CLASSIFICATION	1.9372728618405428E-6	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999999958839241	WITHOUT_CLASSIFICATION	4.116075948679518E-9	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999817887655	WITHOUT_CLASSIFICATION	1.8211234494623297E-8	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999841825328094	WITHOUT_CLASSIFICATION	1.5817467190572315E-5	TEST
// line 601	WITHOUT_CLASSIFICATION	0.999986663509845	WITHOUT_CLASSIFICATION	1.3336490155093768E-5	TEST
// line 601	WITHOUT_CLASSIFICATION	0.999986663509845	WITHOUT_CLASSIFICATION	1.3336490155093768E-5	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999840737788341	WITHOUT_CLASSIFICATION	1.5926221165753093E-5	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999836909333298	WITHOUT_CLASSIFICATION	1.6309066670151017E-5	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999862049664262	WITHOUT_CLASSIFICATION	1.3795033573721642E-5	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999844797212919	WITHOUT_CLASSIFICATION	1.5520278708129025E-5	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999844932588673	WITHOUT_CLASSIFICATION	1.5506741132713174E-5	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999835670815397	WITHOUT_CLASSIFICATION	1.64329184604104E-5	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999834730583393	WITHOUT_CLASSIFICATION	1.6526941660658944E-5	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999853941471334	WITHOUT_CLASSIFICATION	1.4605852866521894E-5	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999836545508478	WITHOUT_CLASSIFICATION	1.634544915217311E-5	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999859326200939	WITHOUT_CLASSIFICATION	1.406737990596426E-5	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999881011901901	WITHOUT_CLASSIFICATION	1.1898809809859908E-5	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999859473204686	WITHOUT_CLASSIFICATION	1.4052679531414272E-5	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999857315568191	WITHOUT_CLASSIFICATION	1.4268443180876035E-5	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999854357186745	WITHOUT_CLASSIFICATION	1.4564281325507438E-5	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999854831556518	WITHOUT_CLASSIFICATION	1.4516844348214306E-5	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999853557461991	WITHOUT_CLASSIFICATION	1.4644253800886424E-5	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999854717281849	WITHOUT_CLASSIFICATION	1.4528271815098004E-5	TEST
// line 911	WITHOUT_CLASSIFICATION	0.999986268834507	WITHOUT_CLASSIFICATION	1.3731165493103694E-5	TEST
// line 929	WITHOUT_CLASSIFICATION	0.999984016500568	WITHOUT_CLASSIFICATION	1.5983499432001536E-5	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999841931744289	WITHOUT_CLASSIFICATION	1.5806825571038796E-5	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999841784252074	WITHOUT_CLASSIFICATION	1.5821574792654235E-5	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999842737468918	WITHOUT_CLASSIFICATION	1.572625310828996E-5	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999861217491598	WITHOUT_CLASSIFICATION	1.3878250840315121E-5	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999874084892117	WITHOUT_CLASSIFICATION	1.259151078825082E-5	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999875244700533	WITHOUT_CLASSIFICATION	1.2475529946651485E-5	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999888354940633	WITHOUT_CLASSIFICATION	1.1164505936785673E-5	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999870911710675	WITHOUT_CLASSIFICATION	1.2908828932486028E-5	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999885382190272	WITHOUT_CLASSIFICATION	1.1461780972687901E-5	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999871750669791	WITHOUT_CLASSIFICATION	1.2824933021025755E-5	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999872444262304	WITHOUT_CLASSIFICATION	1.2755573769524204E-5	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999870862889904	WITHOUT_CLASSIFICATION	1.2913711009678693E-5	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999868918493491	WITHOUT_CLASSIFICATION	1.3108150650916833E-5	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999866877048466	WITHOUT_CLASSIFICATION	1.3312295153505575E-5	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999866654588496	WITHOUT_CLASSIFICATION	1.3334541150463703E-5	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.999987526892517	WITHOUT_CLASSIFICATION	1.2473107482905286E-5	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.999987536442028	WITHOUT_CLASSIFICATION	1.246355797212418E-5	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999869318412327	WITHOUT_CLASSIFICATION	1.306815876742126E-5	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999870431963337	WITHOUT_CLASSIFICATION	1.29568036663005E-5	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999884716108505	WITHOUT_CLASSIFICATION	1.1528389149576172E-5	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999873782609906	WITHOUT_CLASSIFICATION	1.2621739009436098E-5	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999871790104848	WITHOUT_CLASSIFICATION	1.2820989515170673E-5	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999877171440622	WITHOUT_CLASSIFICATION	1.2282855937647725E-5	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999872288724124	WITHOUT_CLASSIFICATION	1.2771127587466376E-5	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.999986816208771	WITHOUT_CLASSIFICATION	1.3183791228991415E-5	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999883225256295	WITHOUT_CLASSIFICATION	1.1677474370538522E-5	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999880792682814	WITHOUT_CLASSIFICATION	1.1920731718554992E-5	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999866810018478	WITHOUT_CLASSIFICATION	1.3318998152046822E-5	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999869238158973	WITHOUT_CLASSIFICATION	1.3076184102805137E-5	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999872094792791	WITHOUT_CLASSIFICATION	1.279052072083412E-5	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999867972610639	WITHOUT_CLASSIFICATION	1.320273893612033E-5	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.999987290747944	WITHOUT_CLASSIFICATION	1.2709252056051191E-5	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999870796072248	WITHOUT_CLASSIFICATION	1.2920392775159644E-5	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999886075513955	WITHOUT_CLASSIFICATION	1.1392448604427979E-5	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999872424533242	WITHOUT_CLASSIFICATION	1.2757546675889261E-5	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999872424533242	WITHOUT_CLASSIFICATION	1.2757546675889261E-5	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999864702569422	WITHOUT_CLASSIFICATION	1.352974305784536E-5	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999874662137778	WITHOUT_CLASSIFICATION	1.253378622214634E-5	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999868054960788	WITHOUT_CLASSIFICATION	1.3194503921158402E-5	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999871045832908	WITHOUT_CLASSIFICATION	1.2895416709114864E-5	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999881252493513	WITHOUT_CLASSIFICATION	1.1874750648568278E-5	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999883896601135	WITHOUT_CLASSIFICATION	1.1610339886603099E-5	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999864969992351	WITHOUT_CLASSIFICATION	1.3503000764818433E-5	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999864456555497	WITHOUT_CLASSIFICATION	1.3554344450288497E-5	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999869914816101	WITHOUT_CLASSIFICATION	1.300851839001201E-5	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999880902155018	WITHOUT_CLASSIFICATION	1.1909784498204199E-5	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.999958361414038	WITHOUT_CLASSIFICATION	4.1638585961872384E-5	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.999958361414038	WITHOUT_CLASSIFICATION	4.1638585961872384E-5	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999779035338019	WITHOUT_CLASSIFICATION	2.2096466198121428E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999974924064141	WITHOUT_CLASSIFICATION	2.507593585938543E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999986500540631	WITHOUT_CLASSIFICATION	1.3499459369154482E-6	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999849250424	WITHOUT_CLASSIFICATION	1.5074957552512343E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999976923169427	WITHOUT_CLASSIFICATION	2.3076830573213133E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999976923169427	WITHOUT_CLASSIFICATION	2.3076830573213133E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999976923169427	WITHOUT_CLASSIFICATION	2.3076830573213133E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999976923169427	WITHOUT_CLASSIFICATION	2.3076830573213133E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999997191643972	WITHOUT_CLASSIFICATION	2.808356027817013E-7	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.999999991495505	WITHOUT_CLASSIFICATION	8.504494861677062E-9	TEST
// line 313	WITHOUT_CLASSIFICATION	0.999986482952307	WITHOUT_CLASSIFICATION	1.3517047693104463E-5	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999840264349001	WITHOUT_CLASSIFICATION	1.597356509986608E-5	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999866737473666	WITHOUT_CLASSIFICATION	1.3326252633317985E-5	TEST
// line 413	WITHOUT_CLASSIFICATION	0.999986437542636	WITHOUT_CLASSIFICATION	1.3562457363935261E-5	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999862331035786	WITHOUT_CLASSIFICATION	1.3766896421500326E-5	TEST
// line 472	WITHOUT_CLASSIFICATION	0.999984248089525	WITHOUT_CLASSIFICATION	1.5751910474917165E-5	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999841346210182	WITHOUT_CLASSIFICATION	1.586537898172265E-5	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999859671417635	WITHOUT_CLASSIFICATION	1.403285823652171E-5	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999833482406449	WITHOUT_CLASSIFICATION	1.6651759355028862E-5	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999860937904881	WITHOUT_CLASSIFICATION	1.3906209511871E-5	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999860816071603	WITHOUT_CLASSIFICATION	1.3918392839581433E-5	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999838642064817	WITHOUT_CLASSIFICATION	1.613579351837155E-5	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999834844860698	WITHOUT_CLASSIFICATION	1.6515513930146168E-5	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999843866982869	WITHOUT_CLASSIFICATION	1.56133017130324E-5	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999834721827412	WITHOUT_CLASSIFICATION	1.6527817258824505E-5	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999877047274168	WITHOUT_CLASSIFICATION	1.2295272583160628E-5	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999862857845034	WITHOUT_CLASSIFICATION	1.3714215496560257E-5	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999854808129194	WITHOUT_CLASSIFICATION	1.4519187080627802E-5	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999859727287532	WITHOUT_CLASSIFICATION	1.4027271246686214E-5	TEST
// line 905	WITHOUT_CLASSIFICATION	0.999984014036196	WITHOUT_CLASSIFICATION	1.5985963804038725E-5	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999841001503237	WITHOUT_CLASSIFICATION	1.589984967632385E-5	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999854394987847	WITHOUT_CLASSIFICATION	1.45605012152293E-5	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999841132420256	WITHOUT_CLASSIFICATION	1.5886757974375404E-5	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.999987128494931	WITHOUT_CLASSIFICATION	1.287150506906773E-5	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999875827596243	WITHOUT_CLASSIFICATION	1.2417240375693876E-5	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999885963592605	WITHOUT_CLASSIFICATION	1.1403640739422805E-5	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999886979619281	WITHOUT_CLASSIFICATION	1.1302038071740572E-5	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999869643673396	WITHOUT_CLASSIFICATION	1.3035632660459153E-5	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999881594208132	WITHOUT_CLASSIFICATION	1.1840579186730931E-5	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999871813021763	WITHOUT_CLASSIFICATION	1.281869782357823E-5	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999870779822235	WITHOUT_CLASSIFICATION	1.2922017776451398E-5	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.99998699323685	WITHOUT_CLASSIFICATION	1.3006763149926432E-5	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999884853770015	WITHOUT_CLASSIFICATION	1.1514622998562325E-5	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999873225310618	WITHOUT_CLASSIFICATION	1.2677468938191855E-5	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999868232739616	WITHOUT_CLASSIFICATION	1.3176726038538886E-5	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999867109307509	WITHOUT_CLASSIFICATION	1.3289069249194513E-5	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999873362713836	WITHOUT_CLASSIFICATION	1.266372861646953E-5	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.999986812596759	WITHOUT_CLASSIFICATION	1.3187403240957351E-5	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999875145495477	WITHOUT_CLASSIFICATION	1.2485450452295235E-5	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999868911919453	WITHOUT_CLASSIFICATION	1.3108808054749258E-5	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999866176261548	WITHOUT_CLASSIFICATION	1.3382373845276823E-5	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999867428176945	WITHOUT_CLASSIFICATION	1.325718230549811E-5	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999879972609403	WITHOUT_CLASSIFICATION	1.2002739059635798E-5	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999893704324608	WITHOUT_CLASSIFICATION	1.0629567539142772E-5	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999869181326477	WITHOUT_CLASSIFICATION	1.308186735230249E-5	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.999986490969406	WITHOUT_CLASSIFICATION	1.3509030593947945E-5	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.999988470392294	WITHOUT_CLASSIFICATION	1.1529607706048934E-5	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999868773811272	WITHOUT_CLASSIFICATION	1.3122618872862874E-5	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999864892731711	WITHOUT_CLASSIFICATION	1.3510726828864121E-5	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999866546176569	WITHOUT_CLASSIFICATION	1.334538234313508E-5	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.999989767106198	WITHOUT_CLASSIFICATION	1.0232893801978546E-5	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999896382905529	WITHOUT_CLASSIFICATION	1.0361709447212353E-5	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999894300354871	WITHOUT_CLASSIFICATION	1.0569964512869852E-5	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999869930383175	WITHOUT_CLASSIFICATION	1.3006961682389274E-5	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999870174663121	WITHOUT_CLASSIFICATION	1.2982533687961171E-5	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999870042518411	WITHOUT_CLASSIFICATION	1.2995748158904178E-5	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999874597821112	WITHOUT_CLASSIFICATION	1.2540217888873438E-5	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.999992558399029	WITHOUT_CLASSIFICATION	7.441600971003432E-6	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999991127893287	WITHOUT_CLASSIFICATION	8.872106712980132E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999982808192149	WITHOUT_CLASSIFICATION	1.7191807850627718E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999982808192149	WITHOUT_CLASSIFICATION	1.7191807850627718E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999982808192149	WITHOUT_CLASSIFICATION	1.7191807850627718E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999982808192149	WITHOUT_CLASSIFICATION	1.7191807850627718E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999982808192149	WITHOUT_CLASSIFICATION	1.7191807850627718E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999982808192149	WITHOUT_CLASSIFICATION	1.7191807850627718E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999982808192149	WITHOUT_CLASSIFICATION	1.7191807850627718E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999995048751897	WITHOUT_CLASSIFICATION	4.951248101872794E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999995048751897	WITHOUT_CLASSIFICATION	4.951248101872794E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999995048751897	WITHOUT_CLASSIFICATION	4.951248101872794E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999995048751897	WITHOUT_CLASSIFICATION	4.951248101872794E-7	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999973145616542	WITHOUT_CLASSIFICATION	2.685438345763787E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999973145616542	WITHOUT_CLASSIFICATION	2.685438345763787E-6	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999998316261	WITHOUT_CLASSIFICATION	1.6837380453378863E-10	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998631581257	WITHOUT_CLASSIFICATION	1.3684187426713574E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998631581257	WITHOUT_CLASSIFICATION	1.3684187426713574E-7	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999987539942201	WITHOUT_CLASSIFICATION	1.246005779922098E-6	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999962270452746	WITHOUT_CLASSIFICATION	3.7729547254962746E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999290659293	WITHOUT_CLASSIFICATION	7.09340707589629E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999290659293	WITHOUT_CLASSIFICATION	7.09340707589629E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999290659293	WITHOUT_CLASSIFICATION	7.09340707589629E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999290659293	WITHOUT_CLASSIFICATION	7.09340707589629E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999290659293	WITHOUT_CLASSIFICATION	7.09340707589629E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999290659293	WITHOUT_CLASSIFICATION	7.09340707589629E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999290659293	WITHOUT_CLASSIFICATION	7.09340707589629E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998630394236	WITHOUT_CLASSIFICATION	1.3696057637912898E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997692271927	WITHOUT_CLASSIFICATION	2.307728073887297E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999974337983177	WITHOUT_CLASSIFICATION	2.5662016821728054E-6	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999974337983177	WITHOUT_CLASSIFICATION	2.5662016821728054E-6	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999972016080902	WITHOUT_CLASSIFICATION	2.7983919096903847E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999964358831387	WITHOUT_CLASSIFICATION	3.5641168613981508E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999964358831387	WITHOUT_CLASSIFICATION	3.5641168613981508E-6	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999837767671	WITHOUT_CLASSIFICATION	1.6223232904643046E-8	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999999998959073	WITHOUT_CLASSIFICATION	1.0409271432340272E-10	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.999999083280987	WITHOUT_CLASSIFICATION	9.167190129231898E-7	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999998867429148	WITHOUT_CLASSIFICATION	1.1325708521747078E-7	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999993365453492	WITHOUT_CLASSIFICATION	6.634546507711423E-7	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999979452516029	WITHOUT_CLASSIFICATION	2.054748397076699E-6	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999967669076943	WITHOUT_CLASSIFICATION	3.233092305729581E-6	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999977253429265	WITHOUT_CLASSIFICATION	2.2746570735056897E-6	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999367068573	WITHOUT_CLASSIFICATION	6.329314272771325E-8	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999956806810677	WITHOUT_CLASSIFICATION	4.319318932278063E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999624157703754	WITHOUT_CLASSIFICATION	3.758422962459624E-5	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999955541637	WITHOUT_CLASSIFICATION	4.4458362015904545E-9	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997349765554	WITHOUT_CLASSIFICATION	2.650234446486879E-7	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999999979843242	WITHOUT_CLASSIFICATION	2.015675883327399E-9	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999733377395725	WITHOUT_CLASSIFICATION	2.6662260427513786E-5	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.999999972542704	WITHOUT_CLASSIFICATION	2.7457295932527222E-8	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999994884993068	WITHOUT_CLASSIFICATION	5.115006932832782E-7	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999953346491404	WITHOUT_CLASSIFICATION	4.665350859700673E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999986868198137	WITHOUT_CLASSIFICATION	1.313180186225124E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999986868198137	WITHOUT_CLASSIFICATION	1.313180186225124E-6	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999993075351474	WITHOUT_CLASSIFICATION	6.92464852471428E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999962046061134	WITHOUT_CLASSIFICATION	3.795393886553008E-6	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999997045552652	WITHOUT_CLASSIFICATION	2.954447347403113E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999072005868502	WITHOUT_CLASSIFICATION	9.279941314984417E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999970910487395	WITHOUT_CLASSIFICATION	2.9089512605026882E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999970910487395	WITHOUT_CLASSIFICATION	2.9089512605026882E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999970910487395	WITHOUT_CLASSIFICATION	2.9089512605026882E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999990510404348	WITHOUT_CLASSIFICATION	9.489595651431044E-7	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999994199994304	WITHOUT_CLASSIFICATION	5.800005695124268E-7	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999984453128054	WITHOUT_CLASSIFICATION	1.554687194670471E-6	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999998447727881	WITHOUT_CLASSIFICATION	1.5522721183008463E-7	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.999999987948419	WITHOUT_CLASSIFICATION	1.2051581006311014E-8	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999285979383	WITHOUT_CLASSIFICATION	7.140206165952606E-8	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999995960757785	WITHOUT_CLASSIFICATION	4.039242215190137E-7	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999993748774034	WITHOUT_CLASSIFICATION	6.251225965426546E-7	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999996423552443	WITHOUT_CLASSIFICATION	3.576447557741904E-7	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999986529534227	WITHOUT_CLASSIFICATION	1.3470465771717345E-6	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999832586187062	WITHOUT_CLASSIFICATION	1.6741381293883536E-5	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.999999981631034	WITHOUT_CLASSIFICATION	1.8368966040154503E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9999991981425199	WITHOUT_CLASSIFICATION	8.018574799908817E-7	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999994614797566	WITHOUT_CLASSIFICATION	5.38520243386293E-7	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999075083853	WITHOUT_CLASSIFICATION	9.24916146247561E-8	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999998547902857	WITHOUT_CLASSIFICATION	1.452097141780834E-7	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.999999715281445	WITHOUT_CLASSIFICATION	2.84718554922368E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999999873733139	WITHOUT_CLASSIFICATION	1.262668609161821E-7	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999996284393061	WITHOUT_CLASSIFICATION	3.7156069387421185E-7	TEST
