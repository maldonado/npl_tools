// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.999997233256378	WITHOUT_CLASSIFICATION	2.766743622000023E-6	TEST
// TODO make an assert here	TEST	0.9999814078966492	WITHOUT_CLASSIFICATION	1.8592103350776875E-5	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.999506854059548	WITHOUT_CLASSIFICATION	4.931459404519351E-4	TEST
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9999838152816369	WITHOUT_CLASSIFICATION	1.6184718363069333E-5	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9999901264760092	WITHOUT_CLASSIFICATION	9.873523990780465E-6	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999928640550952	WITHOUT_CLASSIFICATION	7.1359449047636756E-6	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999993925536387	WITHOUT_CLASSIFICATION	6.074463613287121E-7	TEST
// line 335	WITHOUT_CLASSIFICATION	0.999994497643394	WITHOUT_CLASSIFICATION	5.502356606067494E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999690886500588	WITHOUT_CLASSIFICATION	3.0911349941181416E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999690886500588	WITHOUT_CLASSIFICATION	3.0911349941181416E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998972194558591	WITHOUT_CLASSIFICATION	1.0278054414097973E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998972194558591	WITHOUT_CLASSIFICATION	1.0278054414097973E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999250995810405	WITHOUT_CLASSIFICATION	7.490041895954599E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999933665224687	WITHOUT_CLASSIFICATION	6.633477531290292E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999950042081183	WITHOUT_CLASSIFICATION	4.995791881748368E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999950371117018	WITHOUT_CLASSIFICATION	4.9628882982468255E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999793645990516	WITHOUT_CLASSIFICATION	2.0635400948473415E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999793645990516	WITHOUT_CLASSIFICATION	2.0635400948473415E-5	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999941770421276	WITHOUT_CLASSIFICATION	5.82295787241213E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999980080426501	WITHOUT_CLASSIFICATION	1.9919573499031705E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999980080426501	WITHOUT_CLASSIFICATION	1.9919573499031705E-5	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9999776381684792	WITHOUT_CLASSIFICATION	2.2361831520747407E-5	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999817780530067	WITHOUT_CLASSIFICATION	1.822194699328054E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999670920076971	WITHOUT_CLASSIFICATION	3.29079923029159E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999670920076971	WITHOUT_CLASSIFICATION	3.29079923029159E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999670920076971	WITHOUT_CLASSIFICATION	3.29079923029159E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999670920076971	WITHOUT_CLASSIFICATION	3.29079923029159E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999670920076971	WITHOUT_CLASSIFICATION	3.29079923029159E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999670920076971	WITHOUT_CLASSIFICATION	3.29079923029159E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999670920076971	WITHOUT_CLASSIFICATION	3.29079923029159E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999045599677422	WITHOUT_CLASSIFICATION	9.544003225780272E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999045599677422	WITHOUT_CLASSIFICATION	9.544003225780272E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999045599677422	WITHOUT_CLASSIFICATION	9.544003225780272E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999045599677422	WITHOUT_CLASSIFICATION	9.544003225780272E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999045599677422	WITHOUT_CLASSIFICATION	9.544003225780272E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999045599677422	WITHOUT_CLASSIFICATION	9.544003225780272E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999045599677422	WITHOUT_CLASSIFICATION	9.544003225780272E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999231946333017	WITHOUT_CLASSIFICATION	7.68053666983885E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999231946333017	WITHOUT_CLASSIFICATION	7.68053666983885E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999231946333017	WITHOUT_CLASSIFICATION	7.68053666983885E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999231946333017	WITHOUT_CLASSIFICATION	7.68053666983885E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999231946333017	WITHOUT_CLASSIFICATION	7.68053666983885E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999231946333017	WITHOUT_CLASSIFICATION	7.68053666983885E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999808313044345	WITHOUT_CLASSIFICATION	1.9168695565579807E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999808313044345	WITHOUT_CLASSIFICATION	1.9168695565579807E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999808313044345	WITHOUT_CLASSIFICATION	1.9168695565579807E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999808313044345	WITHOUT_CLASSIFICATION	1.9168695565579807E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999808313044345	WITHOUT_CLASSIFICATION	1.9168695565579807E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999808313044345	WITHOUT_CLASSIFICATION	1.9168695565579807E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999981496253854	WITHOUT_CLASSIFICATION	1.8503746146000944E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999981496253854	WITHOUT_CLASSIFICATION	1.8503746146000944E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999981496253854	WITHOUT_CLASSIFICATION	1.8503746146000944E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999981496253854	WITHOUT_CLASSIFICATION	1.8503746146000944E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999981496253854	WITHOUT_CLASSIFICATION	1.8503746146000944E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999981496253854	WITHOUT_CLASSIFICATION	1.8503746146000944E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999981496253854	WITHOUT_CLASSIFICATION	1.8503746146000944E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999798583420348	WITHOUT_CLASSIFICATION	2.0141657965125694E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999798583420348	WITHOUT_CLASSIFICATION	2.0141657965125694E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999798583420348	WITHOUT_CLASSIFICATION	2.0141657965125694E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999798583420348	WITHOUT_CLASSIFICATION	2.0141657965125694E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999571648595037	WITHOUT_CLASSIFICATION	4.283514049627247E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999571648595037	WITHOUT_CLASSIFICATION	4.283514049627247E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999947795282678	WITHOUT_CLASSIFICATION	5.22047173231562E-6	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999975037107816	WITHOUT_CLASSIFICATION	2.496289218442164E-6	TEST
// name	WITHOUT_CLASSIFICATION	0.9999974232613285	WITHOUT_CLASSIFICATION	2.5767386715255937E-6	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999954891005555	WITHOUT_CLASSIFICATION	4.510899444492267E-6	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999991414539802	WITHOUT_CLASSIFICATION	8.5854601986222E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999944120715561	WITHOUT_CLASSIFICATION	5.587928443843858E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999944120715561	WITHOUT_CLASSIFICATION	5.587928443843858E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999944120715561	WITHOUT_CLASSIFICATION	5.587928443843858E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999944120715561	WITHOUT_CLASSIFICATION	5.587928443843858E-6	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999956222991131	WITHOUT_CLASSIFICATION	4.3777008867932324E-6	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999990573764981	WITHOUT_CLASSIFICATION	9.426235020294581E-7	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999977089247356	WITHOUT_CLASSIFICATION	2.291075264360304E-6	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999973868829506	WITHOUT_CLASSIFICATION	2.6131170493491617E-6	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999991837028959	WITHOUT_CLASSIFICATION	8.1629710405761E-7	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999987301872132	WITHOUT_CLASSIFICATION	1.2698127867183404E-6	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999979189213981	WITHOUT_CLASSIFICATION	2.081078601831857E-6	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999998985299875	WITHOUT_CLASSIFICATION	1.014700123983476E-7	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999942612101	WITHOUT_CLASSIFICATION	5.738789850786541E-9	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999966094006887	WITHOUT_CLASSIFICATION	3.3905993112567085E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999990948572296	WITHOUT_CLASSIFICATION	9.051427703681326E-7	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999861656386666	WITHOUT_CLASSIFICATION	1.3834361333345304E-5	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999842200563327	WITHOUT_CLASSIFICATION	1.5779943667323055E-5	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.999998884263306	WITHOUT_CLASSIFICATION	1.1157366940439935E-6	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984523476851	WITHOUT_CLASSIFICATION	1.5476523148855808E-6	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999851985881137	WITHOUT_CLASSIFICATION	1.4801411886322529E-5	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.999999024616084	WITHOUT_CLASSIFICATION	9.753839160159476E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999944120715561	WITHOUT_CLASSIFICATION	5.587928443843858E-6	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999990831136738	WITHOUT_CLASSIFICATION	9.168863261742276E-7	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999957438565904	WITHOUT_CLASSIFICATION	4.256143409557745E-6	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999972167386656	WITHOUT_CLASSIFICATION	2.783261334407557E-6	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999795884734157	WITHOUT_CLASSIFICATION	2.0411526584223588E-5	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999958457214728	WITHOUT_CLASSIFICATION	4.154278527203942E-6	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999978314930087	WITHOUT_CLASSIFICATION	2.1685069914343358E-6	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.999998002267601	WITHOUT_CLASSIFICATION	1.997732398967622E-6	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999998340039822	WITHOUT_CLASSIFICATION	1.6599601776701518E-7	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999999730879849	WITHOUT_CLASSIFICATION	2.6912015004927417E-8	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999998959687416	WITHOUT_CLASSIFICATION	1.0403125832427076E-7	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999914566490166	WITHOUT_CLASSIFICATION	8.543350983462918E-6	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999972767562356	WITHOUT_CLASSIFICATION	2.7232437644736138E-6	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999973086779742	WITHOUT_CLASSIFICATION	2.6913220257796944E-6	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999807124087543	WITHOUT_CLASSIFICATION	1.9287591245725434E-5	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.999913305078018	WITHOUT_CLASSIFICATION	8.669492198194201E-5	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999839478267196	WITHOUT_CLASSIFICATION	1.6052173280283393E-5	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999957140538243	WITHOUT_CLASSIFICATION	4.285946175715076E-6	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999995497479124	WITHOUT_CLASSIFICATION	4.5025208753448515E-7	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9997272333813715	WITHOUT_CLASSIFICATION	2.7276661862855786E-4	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.999998671171531	WITHOUT_CLASSIFICATION	1.3288284691405993E-6	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999982501970317	WITHOUT_CLASSIFICATION	1.7498029682870628E-6	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999854768805906	WITHOUT_CLASSIFICATION	1.4523119409297759E-5	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999960789127372	WITHOUT_CLASSIFICATION	3.921087262802606E-6	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9999240808966094	WITHOUT_CLASSIFICATION	7.591910339060344E-5	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999970893571624	WITHOUT_CLASSIFICATION	2.9106428376409926E-6	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9999933013803949	WITHOUT_CLASSIFICATION	6.698619605113618E-6	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.999942475492198	WITHOUT_CLASSIFICATION	5.752450780199794E-5	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999990854568157	WITHOUT_CLASSIFICATION	9.145431843461421E-7	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.999998749732388	WITHOUT_CLASSIFICATION	1.2502676119926494E-6	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999996572299888	WITHOUT_CLASSIFICATION	3.4277001117349535E-7	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999917810508712	WITHOUT_CLASSIFICATION	8.218949128923779E-6	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999991552330298	WITHOUT_CLASSIFICATION	8.447669701594992E-7	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.999999154426348	WITHOUT_CLASSIFICATION	8.455736519210716E-7	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999997048321383	WITHOUT_CLASSIFICATION	2.9516786172234365E-7	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999994854510164	WITHOUT_CLASSIFICATION	5.145489835865303E-7	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999966329075396	WITHOUT_CLASSIFICATION	3.367092460372885E-6	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999979480425724	WITHOUT_CLASSIFICATION	2.051957427556535E-6	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999993284690994	WITHOUT_CLASSIFICATION	6.715309005466239E-7	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999976254678455	WITHOUT_CLASSIFICATION	2.3745321543373947E-6	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999932156940212	WITHOUT_CLASSIFICATION	6.784305978800056E-6	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999995876543621	WITHOUT_CLASSIFICATION	4.123456377659775E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999976642917663	WITHOUT_CLASSIFICATION	2.335708233712479E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999997026967532	WITHOUT_CLASSIFICATION	2.9730324680495803E-7	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999953141998865	WITHOUT_CLASSIFICATION	4.685800113496524E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999953141998865	WITHOUT_CLASSIFICATION	4.685800113496524E-6	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999980378805481	WITHOUT_CLASSIFICATION	1.962119451892469E-6	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999997267072094	WITHOUT_CLASSIFICATION	2.732927906267151E-7	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999882703078569	WITHOUT_CLASSIFICATION	1.1729692143197474E-5	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999996502447887	WITHOUT_CLASSIFICATION	3.497552112900808E-7	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999764539153563	WITHOUT_CLASSIFICATION	2.354608464377766E-5	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999969381582451	WITHOUT_CLASSIFICATION	3.0618417550071346E-6	TEST
// ???	WITHOUT_CLASSIFICATION	0.9999836810429739	WITHOUT_CLASSIFICATION	1.6318957026228145E-5	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999854164837688	WITHOUT_CLASSIFICATION	1.4583516231163484E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999976642917663	WITHOUT_CLASSIFICATION	2.335708233712479E-6	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999992044367726	WITHOUT_CLASSIFICATION	7.955632274071988E-7	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999928936269326	WITHOUT_CLASSIFICATION	7.106373067449411E-6	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999986586877024	WITHOUT_CLASSIFICATION	1.341312297619599E-6	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999677739302	WITHOUT_CLASSIFICATION	3.2226069868183485E-8	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999918161568726	WITHOUT_CLASSIFICATION	8.183843127439184E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999998014555527	WITHOUT_CLASSIFICATION	1.985444472999218E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999998014555527	WITHOUT_CLASSIFICATION	1.985444472999218E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999998014555527	WITHOUT_CLASSIFICATION	1.985444472999218E-6	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999996687313892	WITHOUT_CLASSIFICATION	3.3126861079436244E-7	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999923581578749	WITHOUT_CLASSIFICATION	7.641842124986854E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999991164162627	WITHOUT_CLASSIFICATION	8.83583737270775E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.999998273275689	WITHOUT_CLASSIFICATION	1.7267243109717272E-6	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999997203725518	WITHOUT_CLASSIFICATION	2.7962744816417757E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999956775828188	WITHOUT_CLASSIFICATION	4.322417181081614E-6	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999986532978912	WITHOUT_CLASSIFICATION	1.3467021088870044E-6	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999997558897099	WITHOUT_CLASSIFICATION	2.4411029011463413E-7	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999968678853889	WITHOUT_CLASSIFICATION	3.132114611146374E-6	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999968678853889	WITHOUT_CLASSIFICATION	3.132114611146374E-6	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999896394422979	WITHOUT_CLASSIFICATION	1.0360557702116665E-5	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999879915550246	WITHOUT_CLASSIFICATION	1.2008444975289467E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999980683188291	WITHOUT_CLASSIFICATION	1.931681170963095E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999980683188291	WITHOUT_CLASSIFICATION	1.931681170963095E-6	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999994135478245	WITHOUT_CLASSIFICATION	5.864521755195295E-7	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999991735690691	WITHOUT_CLASSIFICATION	8.264309309784424E-7	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.999966508291976	WITHOUT_CLASSIFICATION	3.349170802398937E-5	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999997413463896	WITHOUT_CLASSIFICATION	2.5865361042254447E-7	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999960023154241	WITHOUT_CLASSIFICATION	3.997684575946712E-6	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999982054689014	WITHOUT_CLASSIFICATION	1.7945310986046404E-6	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999815443239799	WITHOUT_CLASSIFICATION	1.845567602011081E-5	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999926288005019	WITHOUT_CLASSIFICATION	7.371199498046391E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999988559837396	WITHOUT_CLASSIFICATION	1.1440162603932984E-6	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999992959242422	WITHOUT_CLASSIFICATION	7.040757577190797E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999976642917663	WITHOUT_CLASSIFICATION	2.335708233712479E-6	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999906703358005	WITHOUT_CLASSIFICATION	9.329664199552393E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999998103361786	WITHOUT_CLASSIFICATION	1.8966382141279673E-6	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999963465272846	WITHOUT_CLASSIFICATION	3.6534727153507314E-6	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999972519475366	WITHOUT_CLASSIFICATION	2.7480524634131425E-6	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999984319195214	WITHOUT_CLASSIFICATION	1.5680804785607648E-6	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999905323891954	WITHOUT_CLASSIFICATION	9.467610804533021E-6	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999935830094625	WITHOUT_CLASSIFICATION	6.416990537455693E-6	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999947890650966	WITHOUT_CLASSIFICATION	5.2109349034203024E-6	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999993843067856	WITHOUT_CLASSIFICATION	6.156932144323784E-7	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999980654661907	WITHOUT_CLASSIFICATION	1.9345338093187343E-6	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999994496058124	WITHOUT_CLASSIFICATION	5.503941874812216E-7	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999051310702	WITHOUT_CLASSIFICATION	9.486892975251187E-8	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999995529877617	WITHOUT_CLASSIFICATION	4.4701223841829626E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999972475094476	WITHOUT_CLASSIFICATION	2.7524905523344395E-6	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.999990723820224	WITHOUT_CLASSIFICATION	9.276179775907826E-6	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999995507729963	WITHOUT_CLASSIFICATION	4.492270037621644E-7	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999984740894533	WITHOUT_CLASSIFICATION	1.5259105466937223E-6	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999987286909113	WITHOUT_CLASSIFICATION	1.2713090887343576E-6	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999991003543204	WITHOUT_CLASSIFICATION	8.996456797625296E-7	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.999999929279241	WITHOUT_CLASSIFICATION	7.072075905199713E-8	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999990470969572	WITHOUT_CLASSIFICATION	9.529030426797585E-7	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999994077237088	WITHOUT_CLASSIFICATION	5.922762912273933E-7	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999994530130425	WITHOUT_CLASSIFICATION	5.469869574140549E-7	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999967227687927	WITHOUT_CLASSIFICATION	3.2772312072849342E-6	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.999999502709177	WITHOUT_CLASSIFICATION	4.972908229628929E-7	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999997084466181	WITHOUT_CLASSIFICATION	2.9155338196677516E-7	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999964807913257	WITHOUT_CLASSIFICATION	3.5192086742743553E-6	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999989530761716	WITHOUT_CLASSIFICATION	1.046923828416643E-6	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.999999862950877	WITHOUT_CLASSIFICATION	1.370491230537602E-7	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999960364211697	WITHOUT_CLASSIFICATION	3.963578830262221E-6	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999987986126729	WITHOUT_CLASSIFICATION	1.201387327002848E-6	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999995402750711	WITHOUT_CLASSIFICATION	4.5972492881946115E-7	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999974154814309	WITHOUT_CLASSIFICATION	2.5845185691006765E-5	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999996576458697	WITHOUT_CLASSIFICATION	3.42354130248258E-7	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999928221437258	WITHOUT_CLASSIFICATION	7.177856274265938E-6	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999950679513412	WITHOUT_CLASSIFICATION	4.932048658822847E-6	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999996553764884	WITHOUT_CLASSIFICATION	3.4462351170033515E-7	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999879490264781	WITHOUT_CLASSIFICATION	1.2050973521821742E-5	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999990586045332	WITHOUT_CLASSIFICATION	9.413954669074465E-7	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999990101085471	WITHOUT_CLASSIFICATION	9.898914530103896E-7	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999997911030802	WITHOUT_CLASSIFICATION	2.088969198227992E-7	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999982880530003	WITHOUT_CLASSIFICATION	1.7119469997214952E-6	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999977346581586	WITHOUT_CLASSIFICATION	2.2653418414639045E-6	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999992809159295	WITHOUT_CLASSIFICATION	7.190840704906543E-7	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999973309769165	WITHOUT_CLASSIFICATION	2.669023083568948E-6	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999976149363776	WITHOUT_CLASSIFICATION	2.385063622416667E-6	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.99999923405249	WITHOUT_CLASSIFICATION	7.659475099605937E-7	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999995638789589	WITHOUT_CLASSIFICATION	4.3612104108576704E-7	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999996115638619	WITHOUT_CLASSIFICATION	3.88436138033057E-7	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999998396636944	WITHOUT_CLASSIFICATION	1.603363056002363E-7	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.999999755210004	WITHOUT_CLASSIFICATION	2.447899960427189E-7	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999997611207713	WITHOUT_CLASSIFICATION	2.388792286439E-7	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999997139431422	WITHOUT_CLASSIFICATION	2.8605685774790224E-7	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999991085207285	WITHOUT_CLASSIFICATION	8.914792716146746E-7	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999991708065419	WITHOUT_CLASSIFICATION	8.291934581482884E-7	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.999999537039142	WITHOUT_CLASSIFICATION	4.6296085789560885E-7	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999112907422884	WITHOUT_CLASSIFICATION	8.870925771158822E-5	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999993887937283	WITHOUT_CLASSIFICATION	6.112062717473345E-7	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.999998712031881	WITHOUT_CLASSIFICATION	1.2879681191284992E-6	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999994544713413	WITHOUT_CLASSIFICATION	5.455286586575853E-7	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999860842561226	WITHOUT_CLASSIFICATION	1.3915743877391537E-5	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999860842561226	WITHOUT_CLASSIFICATION	1.3915743877391537E-5	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999865663356962	WITHOUT_CLASSIFICATION	1.3433664303797641E-5	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999865663356962	WITHOUT_CLASSIFICATION	1.3433664303797641E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999923721965011	WITHOUT_CLASSIFICATION	7.627803498983195E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999923721965011	WITHOUT_CLASSIFICATION	7.627803498983195E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.999988270958416	WITHOUT_CLASSIFICATION	1.1729041584040757E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.999988270958416	WITHOUT_CLASSIFICATION	1.1729041584040757E-5	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999993456068155	WITHOUT_CLASSIFICATION	6.543931844801552E-7	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999991522995932	WITHOUT_CLASSIFICATION	8.477004067762251E-7	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999965480359845	WITHOUT_CLASSIFICATION	3.4519640154779826E-6	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999994450722977	WITHOUT_CLASSIFICATION	5.549277023862998E-7	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999993887360425	WITHOUT_CLASSIFICATION	6.112639575082616E-7	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999983038661753	WITHOUT_CLASSIFICATION	1.6961338247525551E-6	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999830376939748	WITHOUT_CLASSIFICATION	1.696230602527934E-5	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999991688152727	WITHOUT_CLASSIFICATION	8.311847272652146E-7	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999987962310289	WITHOUT_CLASSIFICATION	1.2037689710864643E-6	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999973167145779	WITHOUT_CLASSIFICATION	2.6832854220790807E-6	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999995562161768	WITHOUT_CLASSIFICATION	4.4378382313065003E-7	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999982159676866	WITHOUT_CLASSIFICATION	1.784032313429116E-6	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999941088103566	WITHOUT_CLASSIFICATION	5.8911896434273665E-6	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999991014317435	WITHOUT_CLASSIFICATION	8.985682563681692E-7	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999983141999395	WITHOUT_CLASSIFICATION	1.6858000605283165E-6	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.999994961432848	WITHOUT_CLASSIFICATION	5.0385671519816005E-6	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999995892655763	WITHOUT_CLASSIFICATION	4.107344236381633E-7	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999986920222049	WITHOUT_CLASSIFICATION	1.3079777949981001E-6	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999977072609668	WITHOUT_CLASSIFICATION	2.2927390332704916E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999611343921424	WITHOUT_CLASSIFICATION	3.886560785767374E-5	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999988509933594	WITHOUT_CLASSIFICATION	1.1490066405631533E-6	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999979992979748	WITHOUT_CLASSIFICATION	2.000702025158646E-6	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999968019182423	WITHOUT_CLASSIFICATION	3.198081757699965E-6	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999981389603452	WITHOUT_CLASSIFICATION	1.8610396549316243E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999990435362905	WITHOUT_CLASSIFICATION	9.564637093962334E-7	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999994220298537	WITHOUT_CLASSIFICATION	5.779701463055418E-7	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999975990627069	WITHOUT_CLASSIFICATION	2.400937292962442E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999970989513692	WITHOUT_CLASSIFICATION	2.901048630797502E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999970989513692	WITHOUT_CLASSIFICATION	2.901048630797502E-6	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999987218103423	WITHOUT_CLASSIFICATION	1.2781896576250794E-6	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999984569513545	WITHOUT_CLASSIFICATION	1.5430486455840735E-6	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999955118912884	WITHOUT_CLASSIFICATION	4.488108711572571E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999991826286218	WITHOUT_CLASSIFICATION	8.173713783832693E-7	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999940536812145	WITHOUT_CLASSIFICATION	5.946318785467121E-6	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999886761176988	WITHOUT_CLASSIFICATION	1.1323882301175601E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999965775903241	WITHOUT_CLASSIFICATION	3.422409675882629E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999965775903241	WITHOUT_CLASSIFICATION	3.422409675882629E-6	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999970817664897	WITHOUT_CLASSIFICATION	2.9182335102639872E-6	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9998515204120265	WITHOUT_CLASSIFICATION	1.4847958797359822E-4	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999937112197584	WITHOUT_CLASSIFICATION	6.288780241546097E-6	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999937112197584	WITHOUT_CLASSIFICATION	6.288780241546097E-6	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999991301144902	WITHOUT_CLASSIFICATION	8.698855098109459E-7	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999960703307017	WITHOUT_CLASSIFICATION	3.929669298365867E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999960703307017	WITHOUT_CLASSIFICATION	3.929669298365867E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999847136509633	WITHOUT_CLASSIFICATION	1.528634903665484E-5	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999847136509633	WITHOUT_CLASSIFICATION	1.528634903665484E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999815693911592	WITHOUT_CLASSIFICATION	1.843060884078518E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999815693911592	WITHOUT_CLASSIFICATION	1.843060884078518E-5	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9999869536981096	WITHOUT_CLASSIFICATION	1.3046301890336016E-5	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999987581921447	WITHOUT_CLASSIFICATION	1.2418078552457333E-6	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999997813282736	WITHOUT_CLASSIFICATION	2.1867172641601152E-7	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.99999931938014	WITHOUT_CLASSIFICATION	6.806198600432406E-7	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999455212972	WITHOUT_CLASSIFICATION	5.447870282466244E-8	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.999999651171551	WITHOUT_CLASSIFICATION	3.4882844901623685E-7	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999981177565652	WITHOUT_CLASSIFICATION	1.8822434347273599E-6	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999991950048288	WITHOUT_CLASSIFICATION	8.049951712126668E-7	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999981177565652	WITHOUT_CLASSIFICATION	1.8822434347273599E-6	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999690319874114	WITHOUT_CLASSIFICATION	3.096801258859373E-5	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999992184772044	WITHOUT_CLASSIFICATION	7.815227955039471E-7	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999970906449801	WITHOUT_CLASSIFICATION	2.9093550198617858E-6	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999951629590583	WITHOUT_CLASSIFICATION	4.83704094161483E-6	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999987574020004	WITHOUT_CLASSIFICATION	1.2425979996146825E-6	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999909433259072	WITHOUT_CLASSIFICATION	9.056674092898067E-6	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999950908692435	WITHOUT_CLASSIFICATION	4.909130756419429E-6	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999940942536615	WITHOUT_CLASSIFICATION	5.90574633859658E-6	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999997121024338	WITHOUT_CLASSIFICATION	2.878975661987114E-7	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999992609695968	WITHOUT_CLASSIFICATION	7.390304031998325E-7	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999980103082542	WITHOUT_CLASSIFICATION	1.9896917458294373E-6	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999553972804542	WITHOUT_CLASSIFICATION	4.4602719545845376E-5	TEST
// file not given	WITHOUT_CLASSIFICATION	0.999997682957023	WITHOUT_CLASSIFICATION	2.3170429770040733E-6	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999991039472583	WITHOUT_CLASSIFICATION	8.96052741522784E-7	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999980392410744	WITHOUT_CLASSIFICATION	1.9607589255416648E-6	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.999999061118241	WITHOUT_CLASSIFICATION	9.388817591293692E-7	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999994696858777	WITHOUT_CLASSIFICATION	5.303141222288796E-7	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999999099453225	WITHOUT_CLASSIFICATION	9.00546774725982E-8	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999926295948509	WITHOUT_CLASSIFICATION	7.370405149018352E-6	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.999969973340074	WITHOUT_CLASSIFICATION	3.0026659925977556E-5	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999995367223881	WITHOUT_CLASSIFICATION	4.6327761201038915E-7	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999991552457289	WITHOUT_CLASSIFICATION	8.447542711439578E-7	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999983631623471	WITHOUT_CLASSIFICATION	1.636837652888024E-6	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999992003055105	WITHOUT_CLASSIFICATION	7.996944894271421E-7	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999937385785455	WITHOUT_CLASSIFICATION	6.2614214544505885E-6	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999988023189486	WITHOUT_CLASSIFICATION	1.1976810515182778E-6	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999966717394227	WITHOUT_CLASSIFICATION	3.328260577246453E-6	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999936198462991	WITHOUT_CLASSIFICATION	6.380153700839148E-6	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999986860555311	WITHOUT_CLASSIFICATION	1.3139444688203514E-6	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999982881474718	WITHOUT_CLASSIFICATION	1.7118525281103434E-6	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999970299784906	WITHOUT_CLASSIFICATION	2.9700215094246163E-6	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999996192576517	WITHOUT_CLASSIFICATION	3.807423482502725E-7	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999988961260724	WITHOUT_CLASSIFICATION	1.1038739276648045E-6	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999991961602316	WITHOUT_CLASSIFICATION	8.038397683876536E-7	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999956409788308	WITHOUT_CLASSIFICATION	4.359021169236298E-6	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999922664261506	WITHOUT_CLASSIFICATION	7.733573849481482E-6	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999946333946343	WITHOUT_CLASSIFICATION	5.3666053656262685E-6	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999995368141067	WITHOUT_CLASSIFICATION	4.631858933384797E-7	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999995978637087	WITHOUT_CLASSIFICATION	4.0213629125856927E-7	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999964280926075	WITHOUT_CLASSIFICATION	3.571907392474543E-6	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999970771436562	WITHOUT_CLASSIFICATION	2.9228563438976924E-6	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999985604753644	WITHOUT_CLASSIFICATION	1.4395246356429057E-6	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999981511229435	WITHOUT_CLASSIFICATION	1.848877056545342E-6	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999986224788318	WITHOUT_CLASSIFICATION	1.3775211682371344E-6	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999998999927932	WITHOUT_CLASSIFICATION	1.000072068672527E-7	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999994880576805	WITHOUT_CLASSIFICATION	5.119423195577045E-7	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999952220200781	WITHOUT_CLASSIFICATION	4.777979922006749E-6	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999996114649771	WITHOUT_CLASSIFICATION	3.8853502296562334E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998085762417	WITHOUT_CLASSIFICATION	1.914237583422416E-7	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999965477917779	WITHOUT_CLASSIFICATION	3.4522082220515353E-6	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999974435122347	WITHOUT_CLASSIFICATION	2.5564877652561656E-6	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999788880668	WITHOUT_CLASSIFICATION	2.1111933246433756E-8	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999843935011584	WITHOUT_CLASSIFICATION	1.560649884161485E-5	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999996332807828	WITHOUT_CLASSIFICATION	3.6671921714562996E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999991324468185	WITHOUT_CLASSIFICATION	8.675531816156087E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999991324468185	WITHOUT_CLASSIFICATION	8.675531816156087E-7	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999997054144916	WITHOUT_CLASSIFICATION	2.945855084680837E-7	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999999300686339	WITHOUT_CLASSIFICATION	6.993136610224344E-7	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999992422768862	WITHOUT_CLASSIFICATION	7.577231138833689E-7	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999997910187824	WITHOUT_CLASSIFICATION	2.0898121741402124E-7	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999996197700176	WITHOUT_CLASSIFICATION	3.8022998235140263E-7	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999897009335013	WITHOUT_CLASSIFICATION	1.029906649882523E-5	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999936165507154	WITHOUT_CLASSIFICATION	6.383449284626576E-6	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999996821584539	WITHOUT_CLASSIFICATION	3.1784154614292796E-7	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999971502431722	WITHOUT_CLASSIFICATION	2.8497568277617892E-6	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999857656717875	WITHOUT_CLASSIFICATION	1.4234328212464634E-5	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999996293317478	WITHOUT_CLASSIFICATION	3.706682521641125E-7	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999996293317478	WITHOUT_CLASSIFICATION	3.706682521641125E-7	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999999853813716	WITHOUT_CLASSIFICATION	1.4618628423458767E-8	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.999999721083255	WITHOUT_CLASSIFICATION	2.7891674502617317E-7	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999849576597398	WITHOUT_CLASSIFICATION	1.5042340260173875E-5	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999992954085297	WITHOUT_CLASSIFICATION	7.045914702890681E-7	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999989603969562	WITHOUT_CLASSIFICATION	1.0396030437446702E-6	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999997697350765	WITHOUT_CLASSIFICATION	2.3026492344587684E-7	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999990180486555	WITHOUT_CLASSIFICATION	9.81951344484557E-7	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999966916487566	WITHOUT_CLASSIFICATION	3.3083512434448535E-6	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999984728218156	WITHOUT_CLASSIFICATION	1.5271781842837141E-6	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999996917699515	WITHOUT_CLASSIFICATION	3.082300485345691E-7	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999981074127029	WITHOUT_CLASSIFICATION	1.8925872971343058E-6	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.999999731848916	WITHOUT_CLASSIFICATION	2.681510839576304E-7	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999993299999881	WITHOUT_CLASSIFICATION	6.700000119764662E-7	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999993299999881	WITHOUT_CLASSIFICATION	6.700000119764662E-7	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999992505255884	WITHOUT_CLASSIFICATION	7.494744117655248E-7	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999982497251012	WITHOUT_CLASSIFICATION	1.7502748988167604E-6	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999994760134365	WITHOUT_CLASSIFICATION	5.239865634973552E-7	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999959061089833	WITHOUT_CLASSIFICATION	4.0938910167275855E-6	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999995577026817	WITHOUT_CLASSIFICATION	4.4229731836331837E-7	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999817916790295	WITHOUT_CLASSIFICATION	1.8208320970571426E-5	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999993215528289	WITHOUT_CLASSIFICATION	6.784471711767815E-7	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999992624471618	WITHOUT_CLASSIFICATION	7.375528381581072E-7	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999961409433437	WITHOUT_CLASSIFICATION	3.859056656281478E-6	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999988241967255	WITHOUT_CLASSIFICATION	1.1758032745852452E-6	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999849576597398	WITHOUT_CLASSIFICATION	1.5042340260173875E-5	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.999999818008022	WITHOUT_CLASSIFICATION	1.8199197798855847E-7	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999994553652213	WITHOUT_CLASSIFICATION	5.44634778755346E-7	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999962892580421	WITHOUT_CLASSIFICATION	3.7107419579935412E-6	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999993712722993	WITHOUT_CLASSIFICATION	6.287277005880417E-7	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999989328057357	WITHOUT_CLASSIFICATION	1.0671942642305468E-6	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999613398644	WITHOUT_CLASSIFICATION	3.8660135551127146E-8	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999963185783357	WITHOUT_CLASSIFICATION	3.6814216643973184E-6	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999975518921916	WITHOUT_CLASSIFICATION	2.4481078082660012E-6	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999996434914566	WITHOUT_CLASSIFICATION	3.565085433101629E-7	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999986953825057	WITHOUT_CLASSIFICATION	1.304617494235455E-6	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999975873716187	WITHOUT_CLASSIFICATION	2.412628381306782E-6	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.999999851544749	WITHOUT_CLASSIFICATION	1.4845525100130263E-7	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999964620536682	WITHOUT_CLASSIFICATION	3.5379463316639913E-6	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999990952622984	WITHOUT_CLASSIFICATION	9.047377017833635E-7	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999970077639702	WITHOUT_CLASSIFICATION	2.992236029877701E-6	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.999999707034677	WITHOUT_CLASSIFICATION	2.929653230642638E-7	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999917500532235	WITHOUT_CLASSIFICATION	8.24994677651798E-6	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999985294348499	WITHOUT_CLASSIFICATION	1.4705651500771882E-6	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999972842180229	WITHOUT_CLASSIFICATION	2.715781977133534E-6	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999956012660633	WITHOUT_CLASSIFICATION	4.398733936662873E-6	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999998246394115	WITHOUT_CLASSIFICATION	1.7536058849481205E-7	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999989798985685	WITHOUT_CLASSIFICATION	1.020101431503001E-6	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999985781246097	WITHOUT_CLASSIFICATION	1.4218753903069188E-6	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999932562058059	WITHOUT_CLASSIFICATION	6.743794194065364E-6	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999989560273936	WITHOUT_CLASSIFICATION	1.0439726063682976E-6	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999983137103458	WITHOUT_CLASSIFICATION	1.686289654352406E-6	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999838665949051	WITHOUT_CLASSIFICATION	1.6133405094836903E-5	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.999998910851957	WITHOUT_CLASSIFICATION	1.089148042965994E-6	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999930876700034	WITHOUT_CLASSIFICATION	6.912329996593422E-6	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999997747455123	WITHOUT_CLASSIFICATION	2.2525448780430906E-7	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.999966694550194	WITHOUT_CLASSIFICATION	3.33054498059489E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.999966694550194	WITHOUT_CLASSIFICATION	3.33054498059489E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999992510985221	WITHOUT_CLASSIFICATION	7.489014780165787E-7	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999987333648781	WITHOUT_CLASSIFICATION	1.266635121937158E-6	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999972521156091	WITHOUT_CLASSIFICATION	2.74788439098168E-6	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999994219458389	WITHOUT_CLASSIFICATION	5.78054161212248E-7	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999991943972321	WITHOUT_CLASSIFICATION	8.05602767872839E-7	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999951880646113	WITHOUT_CLASSIFICATION	4.811935388635083E-6	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999976642917663	WITHOUT_CLASSIFICATION	2.335708233712479E-6	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999812313713938	WITHOUT_CLASSIFICATION	1.8768628606094932E-5	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999988656460317	WITHOUT_CLASSIFICATION	1.1343539683062162E-6	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999969938358221	WITHOUT_CLASSIFICATION	3.0061641779815126E-6	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999995551260481	WITHOUT_CLASSIFICATION	4.448739519037435E-7	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999992094074316	WITHOUT_CLASSIFICATION	7.905925683713463E-7	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9998605918103581	WITHOUT_CLASSIFICATION	1.3940818964188343E-4	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999990101085471	WITHOUT_CLASSIFICATION	9.898914530103896E-7	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.999999883880726	WITHOUT_CLASSIFICATION	1.1611927400571083E-7	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999655702261055	WITHOUT_CLASSIFICATION	3.4429773894550906E-5	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999869724302	WITHOUT_CLASSIFICATION	1.3027569785809557E-8	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999978710947792	WITHOUT_CLASSIFICATION	2.1289052207732394E-6	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999995882982101	WITHOUT_CLASSIFICATION	4.117017898206882E-7	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999872954691038	WITHOUT_CLASSIFICATION	1.2704530896121407E-5	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999839837345043	WITHOUT_CLASSIFICATION	1.6016265495779042E-5	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999839837345043	WITHOUT_CLASSIFICATION	1.6016265495779042E-5	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999986912538947	WITHOUT_CLASSIFICATION	1.3087461053104604E-6	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999995780765438	WITHOUT_CLASSIFICATION	4.2192345627254095E-7	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999992757723574	WITHOUT_CLASSIFICATION	7.242276425352406E-7	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999972909677788	WITHOUT_CLASSIFICATION	2.7090322211142335E-6	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999997779329701	WITHOUT_CLASSIFICATION	2.2206702989991117E-7	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999995314079969	WITHOUT_CLASSIFICATION	4.6859200303431103E-7	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.999999858008617	WITHOUT_CLASSIFICATION	1.419913829400412E-7	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999996579272861	WITHOUT_CLASSIFICATION	3.420727139312604E-7	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.99999009623464	WITHOUT_CLASSIFICATION	9.903765359952124E-6	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999998348056057	WITHOUT_CLASSIFICATION	1.6519439415685736E-7	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999878264477924	WITHOUT_CLASSIFICATION	1.2173552207672899E-5	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999974261871885	WITHOUT_CLASSIFICATION	2.573812811559943E-6	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999945090177286	WITHOUT_CLASSIFICATION	5.4909822713860575E-6	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999980159432232	WITHOUT_CLASSIFICATION	1.984056776756922E-6	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999990719356339	WITHOUT_CLASSIFICATION	9.280643661322375E-7	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999885919834457	WITHOUT_CLASSIFICATION	1.1408016554353256E-5	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999987953672717	WITHOUT_CLASSIFICATION	1.2046327283391363E-6	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999992080907512	WITHOUT_CLASSIFICATION	7.919092488553864E-7	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999995762163462	WITHOUT_CLASSIFICATION	4.2378365379252486E-7	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.99999945259218	WITHOUT_CLASSIFICATION	5.474078199618447E-7	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999972884748333	WITHOUT_CLASSIFICATION	2.7115251667363E-6	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.999999547612036	WITHOUT_CLASSIFICATION	4.523879639014421E-7	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999978616553221	WITHOUT_CLASSIFICATION	2.138344677918423E-6	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999844584051825	WITHOUT_CLASSIFICATION	1.5541594817530384E-5	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999992817165417	WITHOUT_CLASSIFICATION	7.18283458355777E-7	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.999999328746318	WITHOUT_CLASSIFICATION	6.7125368197994E-7	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999895425718331	WITHOUT_CLASSIFICATION	1.0457428166827487E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999979831151875	WITHOUT_CLASSIFICATION	2.016884812462568E-6	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.999999732348506	WITHOUT_CLASSIFICATION	2.6765149395154046E-7	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999873959424165	WITHOUT_CLASSIFICATION	1.2604057583530848E-5	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999979440995918	WITHOUT_CLASSIFICATION	2.0559004081648172E-6	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999950815623994	WITHOUT_CLASSIFICATION	4.918437600744791E-6	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999994130729387	WITHOUT_CLASSIFICATION	5.86927061211596E-7	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.999988746296935	WITHOUT_CLASSIFICATION	1.1253703065084752E-5	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999976784036034	WITHOUT_CLASSIFICATION	2.321596396696542E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999271060418	WITHOUT_CLASSIFICATION	7.289395826114166E-8	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999162484363	WITHOUT_CLASSIFICATION	8.375156376647646E-8	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999978675517326	WITHOUT_CLASSIFICATION	2.1324482672921637E-6	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999979885171405	WITHOUT_CLASSIFICATION	2.0114828595205732E-6	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999924078275599	WITHOUT_CLASSIFICATION	7.592172440117922E-6	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999953701814592	WITHOUT_CLASSIFICATION	4.629818540788957E-6	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999957583357957	WITHOUT_CLASSIFICATION	4.241664204268742E-6	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999927518940962	WITHOUT_CLASSIFICATION	7.248105903816333E-6	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999950236134856	WITHOUT_CLASSIFICATION	4.976386514445387E-6	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999970081141162	WITHOUT_CLASSIFICATION	2.99188588385446E-6	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999950236134856	WITHOUT_CLASSIFICATION	4.976386514445387E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999997321390418	WITHOUT_CLASSIFICATION	2.6786095814819884E-7	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9999967265250674	WITHOUT_CLASSIFICATION	3.2734749326259825E-6	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999993967323313	WITHOUT_CLASSIFICATION	6.032676687432295E-7	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.999711777197042	WITHOUT_CLASSIFICATION	2.882228029579439E-4	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999988949995186	WITHOUT_CLASSIFICATION	1.1050004814099694E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999989928465902	WITHOUT_CLASSIFICATION	1.0071534097936E-6	TEST
// write	WITHOUT_CLASSIFICATION	0.999994791411088	WITHOUT_CLASSIFICATION	5.2085889119035805E-6	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999990257019242	WITHOUT_CLASSIFICATION	9.742980758068118E-7	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999995276699336	WITHOUT_CLASSIFICATION	4.7233006631752943E-7	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999986293906097	WITHOUT_CLASSIFICATION	1.3706093902929932E-6	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999999301641606	WITHOUT_CLASSIFICATION	6.983583946429569E-8	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999841742072922	WITHOUT_CLASSIFICATION	1.5825792707689287E-5	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999997975900754	WITHOUT_CLASSIFICATION	2.024099246265268E-7	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999997800040954	WITHOUT_CLASSIFICATION	2.1999590455860767E-7	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999897339689435	WITHOUT_CLASSIFICATION	1.0266031056439099E-5	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9999330003378716	WITHOUT_CLASSIFICATION	6.69996621284145E-5	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999998142777955	WITHOUT_CLASSIFICATION	1.8572220442836738E-7	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999953392386343	WITHOUT_CLASSIFICATION	4.660761365657703E-6	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.999987709229116	WITHOUT_CLASSIFICATION	1.2290770884055675E-5	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999942430282567	WITHOUT_CLASSIFICATION	5.756971743247689E-6	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999996679163998	WITHOUT_CLASSIFICATION	3.3208360018213297E-7	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999979908338409	WITHOUT_CLASSIFICATION	2.0091661591689034E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999932232830994	WITHOUT_CLASSIFICATION	6.77671690065967E-6	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999957102898824	WITHOUT_CLASSIFICATION	4.289710117471355E-6	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999987380097571	WITHOUT_CLASSIFICATION	1.261990242868931E-6	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999993198734243	WITHOUT_CLASSIFICATION	6.801265757872846E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999994352001756	WITHOUT_CLASSIFICATION	5.647998244127166E-7	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999991758115858	WITHOUT_CLASSIFICATION	8.241884141459917E-7	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999990948572296	WITHOUT_CLASSIFICATION	9.051427703681326E-7	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999984030395803	WITHOUT_CLASSIFICATION	1.5969604197441549E-6	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999866790939693	WITHOUT_CLASSIFICATION	1.3320906030726323E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999752518903933	WITHOUT_CLASSIFICATION	2.4748109606656465E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999810232663586	WITHOUT_CLASSIFICATION	1.897673364138633E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999992517800768	WITHOUT_CLASSIFICATION	7.4821992331279E-7	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999995719543519	WITHOUT_CLASSIFICATION	4.280456481407274E-7	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999995898965858	WITHOUT_CLASSIFICATION	4.1010341430721906E-7	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.999999672412743	WITHOUT_CLASSIFICATION	3.275872569691822E-7	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999994792542662	WITHOUT_CLASSIFICATION	5.207457337669094E-7	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999989611198273	WITHOUT_CLASSIFICATION	1.0388801726364601E-6	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999723394965783	WITHOUT_CLASSIFICATION	2.7660503421645495E-5	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999998214632273	WITHOUT_CLASSIFICATION	1.785367726732235E-7	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999974658636478	WITHOUT_CLASSIFICATION	2.5341363522027727E-6	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999993441799141	WITHOUT_CLASSIFICATION	6.55820085842516E-7	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999929644538642	WITHOUT_CLASSIFICATION	7.035546135754882E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999929644538642	WITHOUT_CLASSIFICATION	7.035546135754882E-6	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999715829544836	WITHOUT_CLASSIFICATION	2.8417045516347574E-5	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999984654524844	WITHOUT_CLASSIFICATION	1.5345475155981969E-6	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.999999597592055	WITHOUT_CLASSIFICATION	4.0240794500187096E-7	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.999999097143279	WITHOUT_CLASSIFICATION	9.028567209677055E-7	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999613582194	WITHOUT_CLASSIFICATION	3.864178050437621E-8	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999988122654163	WITHOUT_CLASSIFICATION	1.1877345836212329E-6	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999995690812096	WITHOUT_CLASSIFICATION	4.3091879031431926E-7	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999984325107699	WITHOUT_CLASSIFICATION	1.567489230124747E-6	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999994956871924	WITHOUT_CLASSIFICATION	5.043128076036837E-7	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999998685043207	WITHOUT_CLASSIFICATION	1.314956794772178E-7	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999991828030126	WITHOUT_CLASSIFICATION	8.171969874609117E-7	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999583627166	WITHOUT_CLASSIFICATION	4.16372834496256E-8	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999936121914306	WITHOUT_CLASSIFICATION	6.387808569340833E-6	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999891188192543	WITHOUT_CLASSIFICATION	1.0881180745633568E-5	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999997498168959	WITHOUT_CLASSIFICATION	2.5018310413643956E-7	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.999998862330625	WITHOUT_CLASSIFICATION	1.1376693749657842E-6	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999993107787086	WITHOUT_CLASSIFICATION	6.892212914147568E-7	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999995879373752	WITHOUT_CLASSIFICATION	4.120626248081341E-7	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999985488166202	WITHOUT_CLASSIFICATION	1.4511833798715562E-6	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.999999471945314	WITHOUT_CLASSIFICATION	5.28054685919685E-7	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999889709448138	WITHOUT_CLASSIFICATION	1.1029055186257935E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.99999753643338	WITHOUT_CLASSIFICATION	2.463566620075194E-6	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.999999823392877	WITHOUT_CLASSIFICATION	1.7660712307561062E-7	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999998720007474	WITHOUT_CLASSIFICATION	1.2799925266501326E-7	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999935760977138	WITHOUT_CLASSIFICATION	6.423902286128898E-6	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999997771382602	WITHOUT_CLASSIFICATION	2.2286173989004942E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999994894053961	WITHOUT_CLASSIFICATION	5.10594603904298E-7	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999982370266808	WITHOUT_CLASSIFICATION	1.7629733191757576E-6	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999988606006213	WITHOUT_CLASSIFICATION	1.1393993787164284E-6	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.999999350582515	WITHOUT_CLASSIFICATION	6.494174850746281E-7	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999980619619797	WITHOUT_CLASSIFICATION	1.9380380203227405E-6	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.999999968178494	WITHOUT_CLASSIFICATION	3.182150603598558E-8	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999733866816	WITHOUT_CLASSIFICATION	2.6613318473148158E-8	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.999999406864323	WITHOUT_CLASSIFICATION	5.931356769924953E-7	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999990140533096	WITHOUT_CLASSIFICATION	9.859466904578706E-7	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999799500086	WITHOUT_CLASSIFICATION	2.0049991387910724E-8	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999988956778841	WITHOUT_CLASSIFICATION	1.1043221159000412E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999761095850407	WITHOUT_CLASSIFICATION	2.3890414959263907E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999956981619101	WITHOUT_CLASSIFICATION	4.3018380899417715E-6	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.99999065030439	WITHOUT_CLASSIFICATION	9.349695609918741E-6	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999963490620006	WITHOUT_CLASSIFICATION	3.6509379992998267E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.999998700805414	WITHOUT_CLASSIFICATION	1.299194585984457E-6	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999681959324445	WITHOUT_CLASSIFICATION	3.180406755554446E-5	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999238918136	WITHOUT_CLASSIFICATION	7.610818639376298E-8	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999996023889748	WITHOUT_CLASSIFICATION	3.9761102530409794E-7	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.99999691107248	WITHOUT_CLASSIFICATION	3.0889275200290495E-6	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999986655746053	WITHOUT_CLASSIFICATION	1.3344253947736993E-6	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999976205271339	WITHOUT_CLASSIFICATION	2.379472866082136E-6	TEST
//reopen	WITHOUT_CLASSIFICATION	0.99998031302425	WITHOUT_CLASSIFICATION	1.9686975750061893E-5	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999986161485228	WITHOUT_CLASSIFICATION	1.3838514771651802E-6	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999998294778147	WITHOUT_CLASSIFICATION	1.7052218521993677E-7	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999993916723747	WITHOUT_CLASSIFICATION	6.083276252562368E-7	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999995942168644	WITHOUT_CLASSIFICATION	4.0578313572933323E-7	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999990470529911	WITHOUT_CLASSIFICATION	9.52947008807749E-7	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999983864530703	WITHOUT_CLASSIFICATION	1.6135469297027589E-6	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999996717350071	WITHOUT_CLASSIFICATION	3.282649929024089E-7	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999996376812939	WITHOUT_CLASSIFICATION	3.6231870609541805E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999991961253449	WITHOUT_CLASSIFICATION	8.038746551486076E-7	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999998252848047	WITHOUT_CLASSIFICATION	1.7471519538964093E-7	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999996398353803	WITHOUT_CLASSIFICATION	3.60164619668136E-7	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999969798838729	WITHOUT_CLASSIFICATION	3.0201161271302273E-6	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999979917721401	WITHOUT_CLASSIFICATION	2.0082278599101594E-6	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999990596910375	WITHOUT_CLASSIFICATION	9.403089624342297E-7	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999995618069846	WITHOUT_CLASSIFICATION	4.381930154247352E-7	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.999996749842681	WITHOUT_CLASSIFICATION	3.250157319012275E-6	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999775706146675	WITHOUT_CLASSIFICATION	2.2429385332426762E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999980687124085	WITHOUT_CLASSIFICATION	1.9312875914964313E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.99999956903584	WITHOUT_CLASSIFICATION	4.309641600689697E-7	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999872883428693	WITHOUT_CLASSIFICATION	1.2711657130711757E-5	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999975901448066	WITHOUT_CLASSIFICATION	2.409855193364868E-6	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999990445592315	WITHOUT_CLASSIFICATION	9.554407684812929E-7	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999997596858335	WITHOUT_CLASSIFICATION	2.403141665109098E-7	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999958839224072	WITHOUT_CLASSIFICATION	4.116077592747735E-6	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.999987564660133	WITHOUT_CLASSIFICATION	1.2435339866917655E-5	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9999831079195574	WITHOUT_CLASSIFICATION	1.689208044260543E-5	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9999811206868776	WITHOUT_CLASSIFICATION	1.8879313122338367E-5	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9999833017369777	WITHOUT_CLASSIFICATION	1.6698263022328206E-5	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9999828086215475	WITHOUT_CLASSIFICATION	1.719137845246749E-5	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.999981572585419	WITHOUT_CLASSIFICATION	1.842741458101923E-5	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9999812845561814	WITHOUT_CLASSIFICATION	1.8715443818666083E-5	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9999812483127093	WITHOUT_CLASSIFICATION	1.8751687290791828E-5	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9999813990104494	WITHOUT_CLASSIFICATION	1.8600989550614828E-5	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9999830630536009	WITHOUT_CLASSIFICATION	1.6936946399116195E-5	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9999814445847638	WITHOUT_CLASSIFICATION	1.8555415236187446E-5	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.9999823246234787	WITHOUT_CLASSIFICATION	1.767537652128635E-5	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9999836076905433	WITHOUT_CLASSIFICATION	1.6392309456809605E-5	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.999983221672287	WITHOUT_CLASSIFICATION	1.6778327712966824E-5	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.9999822913619486	WITHOUT_CLASSIFICATION	1.7708638051448594E-5	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9999823290880804	WITHOUT_CLASSIFICATION	1.7670911919666226E-5	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9999824289574998	WITHOUT_CLASSIFICATION	1.7571042500176343E-5	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.9999825612428748	WITHOUT_CLASSIFICATION	1.7438757125158912E-5	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.9999857369366391	WITHOUT_CLASSIFICATION	1.4263063360835213E-5	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9999856294484373	WITHOUT_CLASSIFICATION	1.4370551562821703E-5	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999988722192639	WITHOUT_CLASSIFICATION	1.127780736117726E-6	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999997488972431	WITHOUT_CLASSIFICATION	2.511027570221826E-7	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999973226923479	WITHOUT_CLASSIFICATION	2.677307652167749E-6	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.999998130444003	WITHOUT_CLASSIFICATION	1.8695559970452546E-6	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999983981715036	WITHOUT_CLASSIFICATION	1.60182849640925E-6	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999999349299152	WITHOUT_CLASSIFICATION	6.507008486434453E-8	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999996672502097	WITHOUT_CLASSIFICATION	3.3274979033847833E-7	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.999999988080805	WITHOUT_CLASSIFICATION	1.1919194863988482E-8	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999998238275787	WITHOUT_CLASSIFICATION	1.7617242130999285E-7	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999990046699984	WITHOUT_CLASSIFICATION	9.953300016740082E-7	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9988652692116845	WITHOUT_CLASSIFICATION	0.0011347307883155268	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999984302213963	WITHOUT_CLASSIFICATION	1.5697786035527553E-6	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999976065222065	WITHOUT_CLASSIFICATION	2.393477793445711E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999993101096938	WITHOUT_CLASSIFICATION	6.898903061810591E-7	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999993101096938	WITHOUT_CLASSIFICATION	6.898903061810591E-7	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999998874743411	WITHOUT_CLASSIFICATION	1.1252565886875336E-7	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999995010368323	WITHOUT_CLASSIFICATION	4.989631676445138E-7	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999634982676	WITHOUT_CLASSIFICATION	3.650173244236261E-8	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999943122199331	WITHOUT_CLASSIFICATION	5.687780066961029E-6	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999994511950044	WITHOUT_CLASSIFICATION	5.488049954484128E-7	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999995576211319	WITHOUT_CLASSIFICATION	4.4237886807065773E-7	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999938817921453	WITHOUT_CLASSIFICATION	6.118207854602544E-6	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999992057987068	WITHOUT_CLASSIFICATION	7.942012932007862E-7	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999980485304638	WITHOUT_CLASSIFICATION	1.951469536193543E-6	TEST
// base	WITHOUT_CLASSIFICATION	0.9999966783486564	WITHOUT_CLASSIFICATION	3.321651343592756E-6	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.999963869031261	WITHOUT_CLASSIFICATION	3.613096873907992E-5	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999034064857	WITHOUT_CLASSIFICATION	9.65935143422926E-8	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9999900751194637	WITHOUT_CLASSIFICATION	9.92488053642026E-6	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999971584049145	WITHOUT_CLASSIFICATION	2.841595085517199E-6	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999997506244461	WITHOUT_CLASSIFICATION	2.4937555376889833E-7	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999728791443966	WITHOUT_CLASSIFICATION	2.712085560331944E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999978314930087	WITHOUT_CLASSIFICATION	2.1685069914343358E-6	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999985723997152	WITHOUT_CLASSIFICATION	1.4276002848567417E-6	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999957009489088	WITHOUT_CLASSIFICATION	4.299051091282515E-6	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999986883059485	WITHOUT_CLASSIFICATION	1.3116940514847218E-6	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.999996930053191	WITHOUT_CLASSIFICATION	3.06994680906485E-6	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999998180774705	WITHOUT_CLASSIFICATION	1.8192252956713328E-7	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999938958234942	WITHOUT_CLASSIFICATION	6.104176505922114E-6	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999979868708995	WITHOUT_CLASSIFICATION	2.013129100572918E-6	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999997026050248	WITHOUT_CLASSIFICATION	2.97394975223107E-7	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999983103751671	WITHOUT_CLASSIFICATION	1.68962483284825E-6	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999996278349623	WITHOUT_CLASSIFICATION	3.7216503766493264E-7	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999972412119208	WITHOUT_CLASSIFICATION	2.7587880791604596E-6	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999998520460015	WITHOUT_CLASSIFICATION	1.4795399854159522E-7	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999742304772894	WITHOUT_CLASSIFICATION	2.5769522710497712E-5	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999978814221117	WITHOUT_CLASSIFICATION	2.1185778883445812E-6	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999921755773369	WITHOUT_CLASSIFICATION	7.824422663026672E-6	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.999984618427283	WITHOUT_CLASSIFICATION	1.538157271691714E-5	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999954759693913	WITHOUT_CLASSIFICATION	4.52403060870636E-6	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999986826519615	WITHOUT_CLASSIFICATION	1.3173480386133677E-6	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999967049616569	WITHOUT_CLASSIFICATION	3.29503834310878E-6	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999938806688216	WITHOUT_CLASSIFICATION	6.119331178531396E-6	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999993827158277	WITHOUT_CLASSIFICATION	6.172841722982661E-7	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999992291813112	WITHOUT_CLASSIFICATION	7.708186887077546E-7	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.999999903751411	WITHOUT_CLASSIFICATION	9.62485889727811E-8	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999986230652689	WITHOUT_CLASSIFICATION	1.3769347312243583E-6	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999986500208591	WITHOUT_CLASSIFICATION	1.3499791409225243E-6	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999988819982284	WITHOUT_CLASSIFICATION	1.1180017716299707E-6	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999962064193773	WITHOUT_CLASSIFICATION	3.7935806227444668E-6	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999962064193773	WITHOUT_CLASSIFICATION	3.7935806227444668E-6	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999997876495733	WITHOUT_CLASSIFICATION	2.123504266663649E-7	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999990765039463	WITHOUT_CLASSIFICATION	9.234960537359993E-7	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999994349623176	WITHOUT_CLASSIFICATION	5.650376825254972E-7	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999967598596925	WITHOUT_CLASSIFICATION	3.24014030755699E-6	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999994445688771	WITHOUT_CLASSIFICATION	5.554311228427897E-7	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999939737321435	WITHOUT_CLASSIFICATION	6.026267856604026E-6	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999997085517796	WITHOUT_CLASSIFICATION	2.9144822051616137E-7	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999993542830242	WITHOUT_CLASSIFICATION	6.457169758199836E-7	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999995011116153	WITHOUT_CLASSIFICATION	4.988883846802189E-7	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999990707682702	WITHOUT_CLASSIFICATION	9.29231729837987E-7	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.99999928517655	WITHOUT_CLASSIFICATION	7.148234500100314E-7	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999989521951924	WITHOUT_CLASSIFICATION	1.0478048075381667E-6	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999960298491234	WITHOUT_CLASSIFICATION	3.970150876575903E-6	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999990818797978	WITHOUT_CLASSIFICATION	9.181202022640455E-7	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9999108979134653	WITHOUT_CLASSIFICATION	8.910208653467401E-5	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999572134713528	WITHOUT_CLASSIFICATION	4.2786528647243893E-5	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999989499949817	WITHOUT_CLASSIFICATION	1.050005018248738E-6	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999976627651094	WITHOUT_CLASSIFICATION	2.3372348906388157E-6	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999042393399	WITHOUT_CLASSIFICATION	9.576066010918583E-8	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999879490264781	WITHOUT_CLASSIFICATION	1.2050973521821742E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999985176049664	WITHOUT_CLASSIFICATION	1.4823950336289659E-6	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999985176049664	WITHOUT_CLASSIFICATION	1.4823950336289659E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981675856842	WITHOUT_CLASSIFICATION	1.832414315803476E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981675856842	WITHOUT_CLASSIFICATION	1.832414315803476E-6	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999998187467442	WITHOUT_CLASSIFICATION	1.8125325585477627E-7	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999980355817948	WITHOUT_CLASSIFICATION	1.964418205132976E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999999433642655	WITHOUT_CLASSIFICATION	5.663573448198621E-8	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999997823668187	WITHOUT_CLASSIFICATION	2.1763318125302997E-7	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999997813282736	WITHOUT_CLASSIFICATION	2.1867172641601152E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999995095925548	WITHOUT_CLASSIFICATION	4.904074452617287E-7	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999998334469615	WITHOUT_CLASSIFICATION	1.6655303855952498E-7	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999970637670897	WITHOUT_CLASSIFICATION	2.9362329103400732E-6	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999977090450487	WITHOUT_CLASSIFICATION	2.290954951431106E-6	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999978200079984	WITHOUT_CLASSIFICATION	2.179992001498451E-6	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999994561635587	WITHOUT_CLASSIFICATION	5.438364413725942E-7	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999987204004789	WITHOUT_CLASSIFICATION	1.2795995210838339E-6	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999970560425476	WITHOUT_CLASSIFICATION	2.943957452346507E-6	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999874796561549	WITHOUT_CLASSIFICATION	1.2520343845042283E-5	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999996681104872	WITHOUT_CLASSIFICATION	3.318895127378208E-7	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999913983565987	WITHOUT_CLASSIFICATION	8.601643401346457E-6	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999997256288666	WITHOUT_CLASSIFICATION	2.743711333047235E-7	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999984728141286	WITHOUT_CLASSIFICATION	1.5271858714423666E-6	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9999369007214082	WITHOUT_CLASSIFICATION	6.309927859175428E-5	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999995517709662	WITHOUT_CLASSIFICATION	4.4822903380586743E-7	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999959101489945	WITHOUT_CLASSIFICATION	4.089851005499689E-6	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999986651058093	WITHOUT_CLASSIFICATION	1.3348941906252865E-6	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999932361270839	WITHOUT_CLASSIFICATION	6.763872916085558E-6	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999994352001756	WITHOUT_CLASSIFICATION	5.647998244127166E-7	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999988122654163	WITHOUT_CLASSIFICATION	1.1877345836212329E-6	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999939031358804	WITHOUT_CLASSIFICATION	6.096864119540971E-6	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999881479592	WITHOUT_CLASSIFICATION	1.1852040901350838E-8	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999945674105882	WITHOUT_CLASSIFICATION	5.4325894117761305E-6	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999991304672006	WITHOUT_CLASSIFICATION	8.695327994800201E-7	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999993695345165	WITHOUT_CLASSIFICATION	6.304654835807306E-7	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999993695345165	WITHOUT_CLASSIFICATION	6.304654835807306E-7	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999988611612931	WITHOUT_CLASSIFICATION	1.1388387068877234E-6	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999979453686528	WITHOUT_CLASSIFICATION	2.0546313472083643E-6	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.999998476216954	WITHOUT_CLASSIFICATION	1.5237830459769165E-6	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.999996699505382	WITHOUT_CLASSIFICATION	3.3004946180287015E-6	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999931025811539	WITHOUT_CLASSIFICATION	6.897418846048743E-6	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999998073397232	WITHOUT_CLASSIFICATION	1.9266027682610417E-7	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999996154426869	WITHOUT_CLASSIFICATION	3.845573131613184E-7	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999999225821796	WITHOUT_CLASSIFICATION	7.741782037667342E-8	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999988250183719	WITHOUT_CLASSIFICATION	1.1749816280395285E-6	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999967515494388	WITHOUT_CLASSIFICATION	3.2484505610833917E-6	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999995614946618	WITHOUT_CLASSIFICATION	4.385053380834914E-7	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999986160070021	WITHOUT_CLASSIFICATION	1.3839929978943644E-6	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999973977777612	WITHOUT_CLASSIFICATION	2.6022222388532246E-6	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999996422523337	WITHOUT_CLASSIFICATION	3.5774766621973743E-7	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999977090528903	WITHOUT_CLASSIFICATION	2.290947109637995E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999965480359845	WITHOUT_CLASSIFICATION	3.4519640154779826E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999995383841607	WITHOUT_CLASSIFICATION	4.6161583928385484E-7	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999994175020541	WITHOUT_CLASSIFICATION	5.824979458478881E-7	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999990833295248	WITHOUT_CLASSIFICATION	9.166704752055257E-7	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999863361637565	WITHOUT_CLASSIFICATION	1.366383624346537E-5	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.99999433331839	WITHOUT_CLASSIFICATION	5.666681610054359E-6	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999874809092487	WITHOUT_CLASSIFICATION	1.2519090751304918E-5	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.999990875816093	WITHOUT_CLASSIFICATION	9.124183907099943E-6	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999922693925937	WITHOUT_CLASSIFICATION	7.730607406255547E-6	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999987959500238	WITHOUT_CLASSIFICATION	1.2040499761330948E-6	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999970159458756	WITHOUT_CLASSIFICATION	2.984054124388002E-6	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999985338599252	WITHOUT_CLASSIFICATION	1.4661400747457152E-6	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.999998517184422	WITHOUT_CLASSIFICATION	1.4828155778940444E-6	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999977527140643	WITHOUT_CLASSIFICATION	2.2472859357413817E-6	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999985958311235	WITHOUT_CLASSIFICATION	1.4041688764164162E-6	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999997252711054	WITHOUT_CLASSIFICATION	2.747288946479198E-7	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999937384472742	WITHOUT_CLASSIFICATION	6.2615527257650705E-6	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.999995957474119	WITHOUT_CLASSIFICATION	4.042525881061185E-6	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.999998902897503	WITHOUT_CLASSIFICATION	1.097102496972712E-6	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999987396580172	WITHOUT_CLASSIFICATION	1.2603419828176628E-6	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999989658441752	WITHOUT_CLASSIFICATION	1.034155824752634E-6	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.999978425379124	WITHOUT_CLASSIFICATION	2.1574620876035674E-5	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.999986169140812	WITHOUT_CLASSIFICATION	1.3830859187962523E-5	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.999995632701531	WITHOUT_CLASSIFICATION	4.367298468991625E-6	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999989414984325	WITHOUT_CLASSIFICATION	1.0585015675161334E-6	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999998725336313	WITHOUT_CLASSIFICATION	1.2746636871384522E-7	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999990541512206	WITHOUT_CLASSIFICATION	9.458487794077634E-7	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999975988080593	WITHOUT_CLASSIFICATION	2.4011919406925477E-6	TEST
// while	WITHOUT_CLASSIFICATION	0.9999920767304347	WITHOUT_CLASSIFICATION	7.923269565396538E-6	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999764040353248	WITHOUT_CLASSIFICATION	2.3595964675135306E-5	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999999106998989	WITHOUT_CLASSIFICATION	8.930010119344787E-8	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999987870557863	WITHOUT_CLASSIFICATION	1.2129442137972755E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999992024217367	WITHOUT_CLASSIFICATION	7.975782631899995E-7	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999996271193426	WITHOUT_CLASSIFICATION	3.728806573158108E-7	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999958169834102	WITHOUT_CLASSIFICATION	4.183016589776616E-6	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999853224816615	WITHOUT_CLASSIFICATION	1.4677518338447375E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999822426174105	WITHOUT_CLASSIFICATION	1.7757382589466103E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999790185926446	WITHOUT_CLASSIFICATION	2.0981407355438824E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999840898495821	WITHOUT_CLASSIFICATION	1.5910150417869205E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999935626677057	WITHOUT_CLASSIFICATION	6.437332294306441E-6	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999789195545506	WITHOUT_CLASSIFICATION	2.10804454494161E-5	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999870624271044	WITHOUT_CLASSIFICATION	1.2937572895493672E-5	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999986814077311	WITHOUT_CLASSIFICATION	1.318592268918839E-6	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999249263332823	WITHOUT_CLASSIFICATION	7.507366671775589E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999983737014588	WITHOUT_CLASSIFICATION	1.6262985411687301E-6	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999665558933278	WITHOUT_CLASSIFICATION	3.344410667215486E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999853224816615	WITHOUT_CLASSIFICATION	1.4677518338447375E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999790185926446	WITHOUT_CLASSIFICATION	2.0981407355438824E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999822426174105	WITHOUT_CLASSIFICATION	1.7757382589466103E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999721049869055	WITHOUT_CLASSIFICATION	2.789501309445428E-5	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999750236683638	WITHOUT_CLASSIFICATION	2.497633163623709E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999949812200719	WITHOUT_CLASSIFICATION	5.018779928099396E-6	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999982343788687	WITHOUT_CLASSIFICATION	1.7656211312525657E-6	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999993760792265	WITHOUT_CLASSIFICATION	6.239207735096636E-7	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999965123062742	WITHOUT_CLASSIFICATION	3.4876937257596307E-6	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999953540572843	WITHOUT_CLASSIFICATION	4.645942715676402E-6	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999986771602165	WITHOUT_CLASSIFICATION	1.322839783526065E-6	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999963152286598	WITHOUT_CLASSIFICATION	3.6847713402015838E-6	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999984466024324	WITHOUT_CLASSIFICATION	1.553397567535305E-6	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999989891915937	WITHOUT_CLASSIFICATION	1.0108084063465997E-6	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999987154318354	WITHOUT_CLASSIFICATION	1.2845681645957654E-6	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999967835022764	WITHOUT_CLASSIFICATION	3.2164977235762335E-6	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999967447958876	WITHOUT_CLASSIFICATION	3.2552041124004203E-6	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999996865257684	WITHOUT_CLASSIFICATION	3.134742315768877E-7	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999945326137903	WITHOUT_CLASSIFICATION	5.467386209740418E-6	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999949268313159	WITHOUT_CLASSIFICATION	5.073168684208033E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999988409912728	WITHOUT_CLASSIFICATION	1.1590087272805613E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999988409912728	WITHOUT_CLASSIFICATION	1.1590087272805613E-6	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999986972532151	WITHOUT_CLASSIFICATION	1.302746784881851E-6	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999994044352659	WITHOUT_CLASSIFICATION	5.955647341459915E-7	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999828243843074	WITHOUT_CLASSIFICATION	1.7175615692541144E-5	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999918536894995	WITHOUT_CLASSIFICATION	8.146310500568726E-6	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999982455245385	WITHOUT_CLASSIFICATION	1.754475461500165E-6	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999998162888983	WITHOUT_CLASSIFICATION	1.8371110154771757E-7	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999998089688688	WITHOUT_CLASSIFICATION	1.9103113119745753E-7	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999994525288364	WITHOUT_CLASSIFICATION	5.474711636382709E-7	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999996723284694	WITHOUT_CLASSIFICATION	3.2767153055160746E-7	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999998458477722	WITHOUT_CLASSIFICATION	1.5415222770344804E-7	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999991226479686	WITHOUT_CLASSIFICATION	8.773520313430456E-7	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999842007442431	WITHOUT_CLASSIFICATION	1.579925575690131E-5	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999988466267822	WITHOUT_CLASSIFICATION	1.153373217868694E-6	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999969975475486	WITHOUT_CLASSIFICATION	3.0024524515197628E-6	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999993365782782	WITHOUT_CLASSIFICATION	6.63421721775727E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999984967408461	WITHOUT_CLASSIFICATION	1.5032591540035856E-6	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999981297000464	WITHOUT_CLASSIFICATION	1.8702999535358854E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999993624654977	WITHOUT_CLASSIFICATION	6.375345022475468E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999993624654977	WITHOUT_CLASSIFICATION	6.375345022475468E-7	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9999976089574558	WITHOUT_CLASSIFICATION	2.391042544161307E-6	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.999995802132387	WITHOUT_CLASSIFICATION	4.197867612992098E-6	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999985965365273	WITHOUT_CLASSIFICATION	1.4034634726010993E-6	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999867780689811	WITHOUT_CLASSIFICATION	1.3221931018900957E-5	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999988988175831	WITHOUT_CLASSIFICATION	1.1011824170000449E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999993624654977	WITHOUT_CLASSIFICATION	6.375345022475468E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999993624654977	WITHOUT_CLASSIFICATION	6.375345022475468E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999741818373	WITHOUT_CLASSIFICATION	2.5818162712789278E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999741818373	WITHOUT_CLASSIFICATION	2.5818162712789278E-8	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999988755611857	WITHOUT_CLASSIFICATION	1.1244388142906553E-6	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999872845117621	WITHOUT_CLASSIFICATION	1.2715488237816036E-5	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999996223552022	WITHOUT_CLASSIFICATION	3.7764479780182306E-7	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999996384271911	WITHOUT_CLASSIFICATION	3.6157280898995234E-7	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999999906536572	WITHOUT_CLASSIFICATION	9.346342796515887E-8	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999999906536572	WITHOUT_CLASSIFICATION	9.346342796515887E-8	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999989602406213	WITHOUT_CLASSIFICATION	1.0397593787709177E-6	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999993471386796	WITHOUT_CLASSIFICATION	6.528613204205162E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999996715273238	WITHOUT_CLASSIFICATION	3.2847267614974716E-7	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999859017552956	WITHOUT_CLASSIFICATION	1.4098244704482978E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999738971087	WITHOUT_CLASSIFICATION	2.610289135822318E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.999998762318751	WITHOUT_CLASSIFICATION	1.2376812489348787E-6	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999969491017662	WITHOUT_CLASSIFICATION	3.050898233882898E-6	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999992518513214	WITHOUT_CLASSIFICATION	7.481486785979667E-7	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.999994972582411	WITHOUT_CLASSIFICATION	5.02741758893841E-6	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999309572261	WITHOUT_CLASSIFICATION	6.904277390804845E-8	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999989668862996	WITHOUT_CLASSIFICATION	1.033113700329847E-6	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999995247519302	WITHOUT_CLASSIFICATION	4.752480697666142E-7	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.999996798592612	WITHOUT_CLASSIFICATION	3.20140738801423E-6	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999990684319191	WITHOUT_CLASSIFICATION	9.31568080926778E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999984967408461	WITHOUT_CLASSIFICATION	1.5032591540035856E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999993624654977	WITHOUT_CLASSIFICATION	6.375345022475468E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999741818373	WITHOUT_CLASSIFICATION	2.5818162712789278E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.999998762318751	WITHOUT_CLASSIFICATION	1.2376812489348787E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999998560208042	WITHOUT_CLASSIFICATION	1.439791956633452E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999998560208042	WITHOUT_CLASSIFICATION	1.439791956633452E-7	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.999999848382752	WITHOUT_CLASSIFICATION	1.5161724796115504E-7	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999995693327501	WITHOUT_CLASSIFICATION	4.3066724991033474E-7	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999184791049	WITHOUT_CLASSIFICATION	8.152089515009863E-8	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999996047566778	WITHOUT_CLASSIFICATION	3.952433222114815E-7	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.999997858295129	WITHOUT_CLASSIFICATION	2.1417048710602915E-6	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999998434056662	WITHOUT_CLASSIFICATION	1.5659433387523191E-7	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999986394036667	WITHOUT_CLASSIFICATION	1.3605963332159636E-6	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999972930029039	WITHOUT_CLASSIFICATION	2.706997096231107E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999981205586689	WITHOUT_CLASSIFICATION	1.8794413310156194E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999989437926192	WITHOUT_CLASSIFICATION	1.0562073807496386E-6	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999826240112978	WITHOUT_CLASSIFICATION	1.7375988702228397E-5	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999985079157202	WITHOUT_CLASSIFICATION	1.4920842798114714E-6	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999990194750737	WITHOUT_CLASSIFICATION	9.805249262568314E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999981297000464	WITHOUT_CLASSIFICATION	1.8702999535358854E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999741818373	WITHOUT_CLASSIFICATION	2.5818162712789278E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999993471386796	WITHOUT_CLASSIFICATION	6.528613204205162E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999996715273238	WITHOUT_CLASSIFICATION	3.2847267614974716E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999996715273238	WITHOUT_CLASSIFICATION	3.2847267614974716E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999738971087	WITHOUT_CLASSIFICATION	2.610289135822318E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.999998762318751	WITHOUT_CLASSIFICATION	1.2376812489348787E-6	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.999998762318751	WITHOUT_CLASSIFICATION	1.2376812489348787E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999998560208042	WITHOUT_CLASSIFICATION	1.439791956633452E-7	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999999218456722	WITHOUT_CLASSIFICATION	7.81543278933401E-8	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999949232873714	WITHOUT_CLASSIFICATION	5.076712628705416E-6	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999720264535	WITHOUT_CLASSIFICATION	2.7973546553855565E-8	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999990972374158	WITHOUT_CLASSIFICATION	9.027625843494694E-7	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999991773429812	WITHOUT_CLASSIFICATION	8.226570188223054E-7	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999974513058647	WITHOUT_CLASSIFICATION	2.548694135363005E-6	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999993499012186	WITHOUT_CLASSIFICATION	6.500987813199083E-7	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999766838913	WITHOUT_CLASSIFICATION	2.3316108729924584E-8	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999996240005687	WITHOUT_CLASSIFICATION	3.7599943125818674E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999993471386796	WITHOUT_CLASSIFICATION	6.528613204205162E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999996715273238	WITHOUT_CLASSIFICATION	3.2847267614974716E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999996715273238	WITHOUT_CLASSIFICATION	3.2847267614974716E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999738971087	WITHOUT_CLASSIFICATION	2.610289135822318E-8	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999972930029039	WITHOUT_CLASSIFICATION	2.706997096231107E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999989437926192	WITHOUT_CLASSIFICATION	1.0562073807496386E-6	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999827342132739	WITHOUT_CLASSIFICATION	1.7265786726110427E-5	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999995812933694	WITHOUT_CLASSIFICATION	4.187066306979801E-7	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999866209665487	WITHOUT_CLASSIFICATION	1.3379033451289532E-5	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999866209665487	WITHOUT_CLASSIFICATION	1.3379033451289532E-5	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999958901367733	WITHOUT_CLASSIFICATION	4.109863226779977E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999987691029547	WITHOUT_CLASSIFICATION	1.230897045294287E-6	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999998051446649	WITHOUT_CLASSIFICATION	1.948553350079177E-7	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999984285355601	WITHOUT_CLASSIFICATION	1.5714644399584567E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999924968387591	WITHOUT_CLASSIFICATION	7.503161240764746E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999924968387591	WITHOUT_CLASSIFICATION	7.503161240764746E-6	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999996019411617	WITHOUT_CLASSIFICATION	3.980588383057296E-7	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999996019411617	WITHOUT_CLASSIFICATION	3.980588383057296E-7	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.999999275872542	WITHOUT_CLASSIFICATION	7.241274580398081E-7	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.999999275872542	WITHOUT_CLASSIFICATION	7.241274580398081E-7	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999980508514579	WITHOUT_CLASSIFICATION	1.949148542046387E-6	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.999999028047504	WITHOUT_CLASSIFICATION	9.71952496105315E-7	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999968870045642	WITHOUT_CLASSIFICATION	3.1129954358266086E-6	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999993180631457	WITHOUT_CLASSIFICATION	6.819368543755522E-7	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999994406837811	WITHOUT_CLASSIFICATION	5.593162188485905E-7	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999969649723653	WITHOUT_CLASSIFICATION	3.0350276346532617E-6	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999994872903285	WITHOUT_CLASSIFICATION	5.127096715339577E-7	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999999646819694	WITHOUT_CLASSIFICATION	3.5318030591437336E-8	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999996607243692	WITHOUT_CLASSIFICATION	3.392756306941461E-7	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999997335049466	WITHOUT_CLASSIFICATION	2.6649505339746715E-7	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999985797839918	WITHOUT_CLASSIFICATION	1.4202160082327981E-6	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999993649753826	WITHOUT_CLASSIFICATION	6.350246174117193E-7	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999991891816636	WITHOUT_CLASSIFICATION	8.108183363318384E-7	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999893814088433	WITHOUT_CLASSIFICATION	1.0618591156655004E-5	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999893814088433	WITHOUT_CLASSIFICATION	1.0618591156655004E-5	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999993386696486	WITHOUT_CLASSIFICATION	6.613303514398405E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999995095925548	WITHOUT_CLASSIFICATION	4.904074452617287E-7	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999995972928742	WITHOUT_CLASSIFICATION	4.0270712582227077E-7	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999637059543	WITHOUT_CLASSIFICATION	3.629404562817052E-8	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999984376455497	WITHOUT_CLASSIFICATION	1.5623544502302413E-6	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999882764715492	WITHOUT_CLASSIFICATION	1.1723528450823442E-5	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999966311998834	WITHOUT_CLASSIFICATION	3.3688001166267466E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999980582973149	WITHOUT_CLASSIFICATION	1.9417026851347895E-6	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999998032027005	WITHOUT_CLASSIFICATION	1.9679729950349559E-7	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999979647474503	WITHOUT_CLASSIFICATION	2.0352525497004966E-6	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999996604680155	WITHOUT_CLASSIFICATION	3.3953198453658417E-7	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999971372461102	WITHOUT_CLASSIFICATION	2.8627538897629423E-6	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999995155933104	WITHOUT_CLASSIFICATION	4.844066897535336E-7	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999999283937331	WITHOUT_CLASSIFICATION	7.160626691483953E-8	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999145517729662	WITHOUT_CLASSIFICATION	8.54482270338429E-5	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999997241655469	WITHOUT_CLASSIFICATION	2.7583445312901197E-7	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999980947095196	WITHOUT_CLASSIFICATION	1.9052904803578562E-6	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999997209060909	WITHOUT_CLASSIFICATION	2.790939091342992E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999996586434571	WITHOUT_CLASSIFICATION	3.413565429950583E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999996586434571	WITHOUT_CLASSIFICATION	3.413565429950583E-7	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999996883553517	WITHOUT_CLASSIFICATION	3.116446482574351E-7	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999960445465617	WITHOUT_CLASSIFICATION	3.955453438315678E-6	TEST
//[]	WITHOUT_CLASSIFICATION	0.9998863293729594	WITHOUT_CLASSIFICATION	1.1367062704062204E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9998863293729594	WITHOUT_CLASSIFICATION	1.1367062704062204E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999994985523676	WITHOUT_CLASSIFICATION	5.014476324731423E-7	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999867192815831	WITHOUT_CLASSIFICATION	1.3280718416895807E-5	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999704067002273	WITHOUT_CLASSIFICATION	2.9593299772605688E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999766158330556	WITHOUT_CLASSIFICATION	2.3384166944428915E-5	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999995232618782	WITHOUT_CLASSIFICATION	4.767381218393519E-7	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999992660813394	WITHOUT_CLASSIFICATION	7.339186607527459E-7	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999992660813394	WITHOUT_CLASSIFICATION	7.339186607527459E-7	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999999925901272	WITHOUT_CLASSIFICATION	7.4098728078006E-8	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999993219476915	WITHOUT_CLASSIFICATION	6.780523085290574E-7	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999987264355596	WITHOUT_CLASSIFICATION	1.2735644403889757E-6	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999995739972651	WITHOUT_CLASSIFICATION	4.260027348940416E-6	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999960445465617	WITHOUT_CLASSIFICATION	3.955453438315678E-6	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999883341157202	WITHOUT_CLASSIFICATION	1.166588427974345E-5	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999964182445931	WITHOUT_CLASSIFICATION	3.5817554069428535E-6	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999964182445931	WITHOUT_CLASSIFICATION	3.5817554069428535E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999977777360853	WITHOUT_CLASSIFICATION	2.222263914672217E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999971341905448	WITHOUT_CLASSIFICATION	2.8658094551013795E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999971341905448	WITHOUT_CLASSIFICATION	2.8658094551013795E-6	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998764041783	WITHOUT_CLASSIFICATION	1.235958216519965E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998764041783	WITHOUT_CLASSIFICATION	1.235958216519965E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998764041783	WITHOUT_CLASSIFICATION	1.235958216519965E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999971341905448	WITHOUT_CLASSIFICATION	2.8658094551013795E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999971341905448	WITHOUT_CLASSIFICATION	2.8658094551013795E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999977777360853	WITHOUT_CLASSIFICATION	2.222263914672217E-6	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999994564851995	WITHOUT_CLASSIFICATION	5.435148005036614E-7	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.999998311532739	WITHOUT_CLASSIFICATION	1.6884672610271988E-6	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999998886538939	WITHOUT_CLASSIFICATION	1.1134610605817818E-7	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999984804483715	WITHOUT_CLASSIFICATION	1.5195516285418075E-6	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.999999933769305	WITHOUT_CLASSIFICATION	6.623069503733857E-8	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999987625759813	WITHOUT_CLASSIFICATION	1.2374240186229702E-6	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999971974750947	WITHOUT_CLASSIFICATION	2.8025249052303196E-6	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.99999818626995	WITHOUT_CLASSIFICATION	1.8137300499567537E-6	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999996604680155	WITHOUT_CLASSIFICATION	3.3953198453658417E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999971341905448	WITHOUT_CLASSIFICATION	2.8658094551013795E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999971341905448	WITHOUT_CLASSIFICATION	2.8658094551013795E-6	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999993528423733	WITHOUT_CLASSIFICATION	6.471576267298881E-7	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999989940876572	WITHOUT_CLASSIFICATION	1.0059123426760414E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999961573669682	WITHOUT_CLASSIFICATION	3.842633031800851E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999995456190575	WITHOUT_CLASSIFICATION	4.5438094256749397E-7	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999986739153388	WITHOUT_CLASSIFICATION	1.326084661181753E-6	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999995465135655	WITHOUT_CLASSIFICATION	4.5348643451367117E-7	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999210166169	WITHOUT_CLASSIFICATION	7.898338307149753E-8	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999989822808517	WITHOUT_CLASSIFICATION	1.0177191482932087E-6	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999990082196106	WITHOUT_CLASSIFICATION	9.917803893579266E-7	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999996918687748	WITHOUT_CLASSIFICATION	3.0813122516553564E-7	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999770334655385	WITHOUT_CLASSIFICATION	2.2966534461629694E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999994315002589	WITHOUT_CLASSIFICATION	5.68499741163445E-7	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999995422255616	WITHOUT_CLASSIFICATION	4.5777443843780206E-7	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999986540463301	WITHOUT_CLASSIFICATION	1.3459536698969997E-6	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999036081034	WITHOUT_CLASSIFICATION	9.639189651539751E-8	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999972744445732	WITHOUT_CLASSIFICATION	2.725555426754688E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999972744445732	WITHOUT_CLASSIFICATION	2.725555426754688E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999972744445732	WITHOUT_CLASSIFICATION	2.725555426754688E-6	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999997844869472	WITHOUT_CLASSIFICATION	2.155130528600861E-7	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999083637384	WITHOUT_CLASSIFICATION	9.163626149515777E-8	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999993656763536	WITHOUT_CLASSIFICATION	6.343236463287639E-7	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999995497746895	WITHOUT_CLASSIFICATION	4.5022531039074356E-7	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999999425705464	WITHOUT_CLASSIFICATION	5.7429453727787755E-8	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.999999509931801	WITHOUT_CLASSIFICATION	4.900681990574909E-7	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999998250587997	WITHOUT_CLASSIFICATION	1.749412003705282E-7	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999996420696212	WITHOUT_CLASSIFICATION	3.579303788035369E-7	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999995739159631	WITHOUT_CLASSIFICATION	4.260840369995153E-7	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999994096220796	WITHOUT_CLASSIFICATION	5.903779204376995E-7	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999989204168925	WITHOUT_CLASSIFICATION	1.07958310746954E-6	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999966979582189	WITHOUT_CLASSIFICATION	3.3020417811591136E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999999925901272	WITHOUT_CLASSIFICATION	7.4098728078006E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999971341905448	WITHOUT_CLASSIFICATION	2.8658094551013795E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999971341905448	WITHOUT_CLASSIFICATION	2.8658094551013795E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999977777360853	WITHOUT_CLASSIFICATION	2.222263914672217E-6	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999987625759813	WITHOUT_CLASSIFICATION	1.2374240186229702E-6	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999989940876572	WITHOUT_CLASSIFICATION	1.0059123426760414E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999995456190575	WITHOUT_CLASSIFICATION	4.5438094256749397E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999995465135655	WITHOUT_CLASSIFICATION	4.5348643451367117E-7	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999961573669682	WITHOUT_CLASSIFICATION	3.842633031800851E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999210166169	WITHOUT_CLASSIFICATION	7.898338307149753E-8	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999996918687748	WITHOUT_CLASSIFICATION	3.0813122516553564E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999990082196106	WITHOUT_CLASSIFICATION	9.917803893579266E-7	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999994315002589	WITHOUT_CLASSIFICATION	5.68499741163445E-7	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999995958370803	WITHOUT_CLASSIFICATION	4.0416291969113716E-7	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999989865868462	WITHOUT_CLASSIFICATION	1.0134131538779624E-6	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999942337241259	WITHOUT_CLASSIFICATION	5.766275874162527E-6	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999985763084756	WITHOUT_CLASSIFICATION	1.4236915244560667E-6	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999999299245171	WITHOUT_CLASSIFICATION	7.007548283541819E-8	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999992030461837	WITHOUT_CLASSIFICATION	7.969538163178251E-7	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999998639135776	WITHOUT_CLASSIFICATION	1.3608642246031628E-7	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999999876299084	WITHOUT_CLASSIFICATION	1.23700916018975E-8	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999998980445615	WITHOUT_CLASSIFICATION	1.0195543843706716E-7	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999988261182607	WITHOUT_CLASSIFICATION	1.1738817392235132E-6	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999994688612385	WITHOUT_CLASSIFICATION	5.311387615241762E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999994926481003	WITHOUT_CLASSIFICATION	5.073518996593849E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979200325231	WITHOUT_CLASSIFICATION	2.0799674769173373E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999997601614998	WITHOUT_CLASSIFICATION	2.398385001833077E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999996399361312	WITHOUT_CLASSIFICATION	3.600638688434388E-7	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999997138790911	WITHOUT_CLASSIFICATION	2.861209087765685E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999999575877349	WITHOUT_CLASSIFICATION	4.2412265091230514E-7	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999992819508418	WITHOUT_CLASSIFICATION	7.180491582977147E-7	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999998054154022	WITHOUT_CLASSIFICATION	1.9458459770475564E-7	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999998981458221	WITHOUT_CLASSIFICATION	1.0185417788191803E-7	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999996932083057	WITHOUT_CLASSIFICATION	3.067916942302116E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999465937639	WITHOUT_CLASSIFICATION	5.340623604997526E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999465937639	WITHOUT_CLASSIFICATION	5.340623604997526E-8	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999922753582514	WITHOUT_CLASSIFICATION	7.724641748528302E-6	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999993335225095	WITHOUT_CLASSIFICATION	6.664774904856354E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999829352004223	WITHOUT_CLASSIFICATION	1.7064799577678405E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999829352004223	WITHOUT_CLASSIFICATION	1.7064799577678405E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999829352004223	WITHOUT_CLASSIFICATION	1.7064799577678405E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999704045283165	WITHOUT_CLASSIFICATION	2.959547168339267E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999704045283165	WITHOUT_CLASSIFICATION	2.959547168339267E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999704045283165	WITHOUT_CLASSIFICATION	2.959547168339267E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999704045283165	WITHOUT_CLASSIFICATION	2.959547168339267E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999734973782674	WITHOUT_CLASSIFICATION	2.65026217325651E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999734973782674	WITHOUT_CLASSIFICATION	2.65026217325651E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999734973782674	WITHOUT_CLASSIFICATION	2.65026217325651E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999731852061937	WITHOUT_CLASSIFICATION	2.6814793806301715E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999731852061937	WITHOUT_CLASSIFICATION	2.6814793806301715E-5	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999729466435319	WITHOUT_CLASSIFICATION	2.705335646822939E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999755704685198	WITHOUT_CLASSIFICATION	2.4429531480195882E-5	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999993335225095	WITHOUT_CLASSIFICATION	6.664774904856354E-7	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999996611531736	WITHOUT_CLASSIFICATION	3.3884682643176374E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999829352004223	WITHOUT_CLASSIFICATION	1.7064799577678405E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999829352004223	WITHOUT_CLASSIFICATION	1.7064799577678405E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999704045283165	WITHOUT_CLASSIFICATION	2.959547168339267E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999704045283165	WITHOUT_CLASSIFICATION	2.959547168339267E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999704045283165	WITHOUT_CLASSIFICATION	2.959547168339267E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999734973782674	WITHOUT_CLASSIFICATION	2.65026217325651E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999734973782674	WITHOUT_CLASSIFICATION	2.65026217325651E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999731852061937	WITHOUT_CLASSIFICATION	2.6814793806301715E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999755704685198	WITHOUT_CLASSIFICATION	2.4429531480195882E-5	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999985783636283	WITHOUT_CLASSIFICATION	1.4216363717619408E-6	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999985783636283	WITHOUT_CLASSIFICATION	1.4216363717619408E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999989841890323	WITHOUT_CLASSIFICATION	1.015810967719657E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999989841890323	WITHOUT_CLASSIFICATION	1.015810967719657E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999952535582347	WITHOUT_CLASSIFICATION	4.746441765211126E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999952535582347	WITHOUT_CLASSIFICATION	4.746441765211126E-6	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999992696156955	WITHOUT_CLASSIFICATION	7.303843045107267E-7	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999972269875987	WITHOUT_CLASSIFICATION	2.7730124012002652E-6	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999972269875987	WITHOUT_CLASSIFICATION	2.7730124012002652E-6	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999996937425972	WITHOUT_CLASSIFICATION	3.062574027736376E-7	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999996937425972	WITHOUT_CLASSIFICATION	3.062574027736376E-7	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999987920842516	WITHOUT_CLASSIFICATION	1.2079157484177178E-6	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999975507866177	WITHOUT_CLASSIFICATION	2.449213382287678E-6	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999975507866177	WITHOUT_CLASSIFICATION	2.449213382287678E-6	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999909023948	WITHOUT_CLASSIFICATION	9.097605242426102E-9	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999994389865159	WITHOUT_CLASSIFICATION	5.610134840576053E-7	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.999997536092829	WITHOUT_CLASSIFICATION	2.4639071709203443E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999704045283165	WITHOUT_CLASSIFICATION	2.959547168339267E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999704045283165	WITHOUT_CLASSIFICATION	2.959547168339267E-5	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999909023948	WITHOUT_CLASSIFICATION	9.097605242426102E-9	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999983408022349	WITHOUT_CLASSIFICATION	1.6591977651023925E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999968114451273	WITHOUT_CLASSIFICATION	3.1885548726235306E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999968114451273	WITHOUT_CLASSIFICATION	3.1885548726235306E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999968114451273	WITHOUT_CLASSIFICATION	3.1885548726235306E-6	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999997157365	WITHOUT_CLASSIFICATION	2.8426350006189457E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.9999961941131088	WITHOUT_CLASSIFICATION	3.8058868911721385E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999938901871978	WITHOUT_CLASSIFICATION	6.109812802158164E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999938901871978	WITHOUT_CLASSIFICATION	6.109812802158164E-6	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999992601894077	WITHOUT_CLASSIFICATION	7.398105922244416E-7	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999984906975752	WITHOUT_CLASSIFICATION	1.5093024248362434E-6	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999982217497961	WITHOUT_CLASSIFICATION	1.7782502039360992E-6	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.999994859737606	WITHOUT_CLASSIFICATION	5.1402623940557215E-6	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999992044901722	WITHOUT_CLASSIFICATION	7.955098278624242E-7	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999985889101641	WITHOUT_CLASSIFICATION	1.4110898359340334E-6	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999985889101641	WITHOUT_CLASSIFICATION	1.4110898359340334E-6	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999996218622348	WITHOUT_CLASSIFICATION	3.7813776516349257E-7	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999702817892507	WITHOUT_CLASSIFICATION	2.9718210749276922E-5	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999702817892507	WITHOUT_CLASSIFICATION	2.9718210749276922E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999704045283165	WITHOUT_CLASSIFICATION	2.959547168339267E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999968114451273	WITHOUT_CLASSIFICATION	3.1885548726235306E-6	TEST
// args	WITHOUT_CLASSIFICATION	0.9999961941131088	WITHOUT_CLASSIFICATION	3.8058868911721385E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999938901871978	WITHOUT_CLASSIFICATION	6.109812802158164E-6	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999992601894077	WITHOUT_CLASSIFICATION	7.398105922244416E-7	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999984906975752	WITHOUT_CLASSIFICATION	1.5093024248362434E-6	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999982217497961	WITHOUT_CLASSIFICATION	1.7782502039360992E-6	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.999994859737606	WITHOUT_CLASSIFICATION	5.1402623940557215E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999702817892507	WITHOUT_CLASSIFICATION	2.9718210749276922E-5	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999992425212041	WITHOUT_CLASSIFICATION	7.574787958650865E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999998441487885	WITHOUT_CLASSIFICATION	1.5585121152946643E-7	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999981003012938	WITHOUT_CLASSIFICATION	1.899698706247117E-6	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999989402544339	WITHOUT_CLASSIFICATION	1.0597455661216055E-6	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999985567139259	WITHOUT_CLASSIFICATION	1.4432860741351027E-6	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999994157814283	WITHOUT_CLASSIFICATION	5.84218571814911E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999987034152392	WITHOUT_CLASSIFICATION	1.2965847607395345E-6	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999987034152392	WITHOUT_CLASSIFICATION	1.2965847607395345E-6	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.999999351088559	WITHOUT_CLASSIFICATION	6.489114411229347E-7	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999997654978439	WITHOUT_CLASSIFICATION	2.345021561648716E-7	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999997839260582	WITHOUT_CLASSIFICATION	2.160739419758258E-7	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.999999633844456	WITHOUT_CLASSIFICATION	3.6615554404069297E-7	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999998026332874	WITHOUT_CLASSIFICATION	1.973667125808465E-7	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999998026332874	WITHOUT_CLASSIFICATION	1.973667125808465E-7	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999998831550451	WITHOUT_CLASSIFICATION	1.1684495500006925E-7	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999997241641552	WITHOUT_CLASSIFICATION	2.7583584483384446E-7	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999996552342789	WITHOUT_CLASSIFICATION	3.4476572110856344E-7	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999996552342789	WITHOUT_CLASSIFICATION	3.4476572110856344E-7	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999993913692083	WITHOUT_CLASSIFICATION	6.08630791652567E-7	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999998764977549	WITHOUT_CLASSIFICATION	1.2350224507307671E-7	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999992044901722	WITHOUT_CLASSIFICATION	7.955098278624242E-7	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999986326543377	WITHOUT_CLASSIFICATION	1.367345662256185E-6	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998551872414	WITHOUT_CLASSIFICATION	1.4481275851443695E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999967528134646	WITHOUT_CLASSIFICATION	3.2471865353702262E-6	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999984781666094	WITHOUT_CLASSIFICATION	1.521833390639891E-6	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999976748404611	WITHOUT_CLASSIFICATION	2.325159538811117E-6	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999993220893159	WITHOUT_CLASSIFICATION	6.779106841176272E-7	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.99999921165741	WITHOUT_CLASSIFICATION	7.883425900224606E-7	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999992533939925	WITHOUT_CLASSIFICATION	7.466060075518622E-7	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999998632632368	WITHOUT_CLASSIFICATION	1.367367631582584E-7	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999998632632368	WITHOUT_CLASSIFICATION	1.367367631582584E-7	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999993464826322	WITHOUT_CLASSIFICATION	6.535173678437679E-7	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999993464826322	WITHOUT_CLASSIFICATION	6.535173678437679E-7	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999997037377772	WITHOUT_CLASSIFICATION	2.962622228397984E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999985110225184	WITHOUT_CLASSIFICATION	1.4889774816574718E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999985110225184	WITHOUT_CLASSIFICATION	1.4889774816574718E-6	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999985110225184	WITHOUT_CLASSIFICATION	1.4889774816574718E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999949746708345	WITHOUT_CLASSIFICATION	5.0253291655143334E-6	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999992437860042	WITHOUT_CLASSIFICATION	7.562139958471563E-7	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999992437860042	WITHOUT_CLASSIFICATION	7.562139958471563E-7	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999991198790859	WITHOUT_CLASSIFICATION	8.801209141134595E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999985392056008	WITHOUT_CLASSIFICATION	1.4607943991623393E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999966725084145	WITHOUT_CLASSIFICATION	3.327491585461366E-6	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999980183444525	WITHOUT_CLASSIFICATION	1.9816555474953553E-6	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999992254737887	WITHOUT_CLASSIFICATION	7.745262113092689E-7	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999982253642207	WITHOUT_CLASSIFICATION	1.774635779403985E-6	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999959735792747	WITHOUT_CLASSIFICATION	4.026420725310782E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979200325231	WITHOUT_CLASSIFICATION	2.0799674769173373E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979200325231	WITHOUT_CLASSIFICATION	2.0799674769173373E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999949746708345	WITHOUT_CLASSIFICATION	5.0253291655143334E-6	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999991198790859	WITHOUT_CLASSIFICATION	8.801209141134595E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999997692233835	WITHOUT_CLASSIFICATION	2.307766163655667E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999985392056008	WITHOUT_CLASSIFICATION	1.4607943991623393E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999966725084145	WITHOUT_CLASSIFICATION	3.327491585461366E-6	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999998281447999	WITHOUT_CLASSIFICATION	1.7185520018442666E-7	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999979089003673	WITHOUT_CLASSIFICATION	2.091099632601157E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995656263782	WITHOUT_CLASSIFICATION	4.3437362193139287E-7	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9999544556021692	WITHOUT_CLASSIFICATION	4.5544397830800424E-5	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999985649647859	WITHOUT_CLASSIFICATION	1.435035214122665E-6	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999997630211656	WITHOUT_CLASSIFICATION	2.369788344190139E-7	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999998795230906	WITHOUT_CLASSIFICATION	1.2047690946699816E-7	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999998281447999	WITHOUT_CLASSIFICATION	1.7185520018442666E-7	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999998235616917	WITHOUT_CLASSIFICATION	1.7643830826681807E-7	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999998235616917	WITHOUT_CLASSIFICATION	1.7643830826681807E-7	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999945613934235	WITHOUT_CLASSIFICATION	5.438606576539271E-6	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999990516149774	WITHOUT_CLASSIFICATION	9.483850226517063E-7	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999998292080252	WITHOUT_CLASSIFICATION	1.7079197484836072E-7	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999999623854465	WITHOUT_CLASSIFICATION	3.7614553505794456E-7	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999983627295389	WITHOUT_CLASSIFICATION	1.6372704611916229E-6	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999997938916669	WITHOUT_CLASSIFICATION	2.061083329297505E-7	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999953318577709	WITHOUT_CLASSIFICATION	4.6681422290924435E-6	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999997276685714	WITHOUT_CLASSIFICATION	2.723314286023121E-7	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999428546962	WITHOUT_CLASSIFICATION	5.7145303888081534E-8	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999978580680999	WITHOUT_CLASSIFICATION	2.1419319001703073E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999976368186926	WITHOUT_CLASSIFICATION	2.363181307491652E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999999623854465	WITHOUT_CLASSIFICATION	3.7614553505794456E-7	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999983627295389	WITHOUT_CLASSIFICATION	1.6372704611916229E-6	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999990495003662	WITHOUT_CLASSIFICATION	9.504996336584371E-7	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999958586512383	WITHOUT_CLASSIFICATION	4.141348761632459E-6	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999997557431283	WITHOUT_CLASSIFICATION	2.442568717049774E-7	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999978049000957	WITHOUT_CLASSIFICATION	2.195099904208908E-6	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999941323710773	WITHOUT_CLASSIFICATION	5.867628922718623E-6	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999922788505042	WITHOUT_CLASSIFICATION	7.721149495799652E-6	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9999033475822326	WITHOUT_CLASSIFICATION	9.665241776735344E-5	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999957963509094	WITHOUT_CLASSIFICATION	4.203649090578805E-6	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.999994484936401	WITHOUT_CLASSIFICATION	5.515063599046554E-6	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999824367154881	WITHOUT_CLASSIFICATION	1.7563284511799412E-5	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999934981198579	WITHOUT_CLASSIFICATION	6.501880142040952E-6	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9999678474059907	WITHOUT_CLASSIFICATION	3.215259400936435E-5	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999994911988173	WITHOUT_CLASSIFICATION	5.088011827070852E-7	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999982108824146	WITHOUT_CLASSIFICATION	1.7891175853621285E-6	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999995876962617	WITHOUT_CLASSIFICATION	4.123037382769962E-7	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999984979453379	WITHOUT_CLASSIFICATION	1.502054662068456E-6	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999793134033225	WITHOUT_CLASSIFICATION	2.0686596677520782E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999983197574212	WITHOUT_CLASSIFICATION	1.6802425787595422E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999993018819482	WITHOUT_CLASSIFICATION	6.981180518077555E-7	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999984739528958	WITHOUT_CLASSIFICATION	1.5260471041997025E-6	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999793134033225	WITHOUT_CLASSIFICATION	2.0686596677520782E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999983197574212	WITHOUT_CLASSIFICATION	1.6802425787595422E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999993018819482	WITHOUT_CLASSIFICATION	6.981180518077555E-7	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.999996944545702	WITHOUT_CLASSIFICATION	3.055454298007406E-6	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999610852768	WITHOUT_CLASSIFICATION	3.891472332541289E-8	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999991253690069	WITHOUT_CLASSIFICATION	8.746309931177443E-7	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999991146291888	WITHOUT_CLASSIFICATION	8.853708112723918E-7	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999982865794055	WITHOUT_CLASSIFICATION	1.7134205944841936E-6	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999994323953239	WITHOUT_CLASSIFICATION	5.676046762281014E-7	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999992583525219	WITHOUT_CLASSIFICATION	7.416474781833919E-7	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999998767152627	WITHOUT_CLASSIFICATION	1.232847372484253E-7	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999985305434914	WITHOUT_CLASSIFICATION	1.4694565086713446E-6	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999979852336948	WITHOUT_CLASSIFICATION	2.014766305226076E-6	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9999314857547821	WITHOUT_CLASSIFICATION	6.85142452178467E-5	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999998655383977	WITHOUT_CLASSIFICATION	1.344616023810346E-7	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999984825491763	WITHOUT_CLASSIFICATION	1.51745082361459E-6	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.999995148515828	WITHOUT_CLASSIFICATION	4.851484171877021E-6	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999583553775441	WITHOUT_CLASSIFICATION	4.16446224558712E-5	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.999999784302625	WITHOUT_CLASSIFICATION	2.1569737497199986E-7	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999997739949423	WITHOUT_CLASSIFICATION	2.260050575756056E-7	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999994423017379	WITHOUT_CLASSIFICATION	5.576982620509007E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.99999925486232	WITHOUT_CLASSIFICATION	7.451376799770365E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999985933686412	WITHOUT_CLASSIFICATION	1.4066313588214128E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999988386210473	WITHOUT_CLASSIFICATION	1.1613789526693353E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999955702850596	WITHOUT_CLASSIFICATION	4.429714940439714E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999955702850596	WITHOUT_CLASSIFICATION	4.429714940439714E-6	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999970936307689	WITHOUT_CLASSIFICATION	2.9063692309641524E-6	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999970936307689	WITHOUT_CLASSIFICATION	2.9063692309641524E-6	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999997451780112	WITHOUT_CLASSIFICATION	2.548219888872872E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999997451780112	WITHOUT_CLASSIFICATION	2.548219888872872E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.99999921132834	WITHOUT_CLASSIFICATION	7.886716599026838E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999997429855072	WITHOUT_CLASSIFICATION	2.5701449280886007E-7	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999997406027394	WITHOUT_CLASSIFICATION	2.5939726060115296E-7	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.99999100530381	WITHOUT_CLASSIFICATION	8.994696190014487E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999973138791791	WITHOUT_CLASSIFICATION	2.6861208209785235E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999996626442695	WITHOUT_CLASSIFICATION	3.3735573046288E-7	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999951401522799	WITHOUT_CLASSIFICATION	4.85984772016063E-6	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999984400880553	WITHOUT_CLASSIFICATION	1.5599119446813955E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979200325231	WITHOUT_CLASSIFICATION	2.0799674769173373E-6	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.99999921132834	WITHOUT_CLASSIFICATION	7.886716599026838E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999997429855072	WITHOUT_CLASSIFICATION	2.5701449280886007E-7	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999997406027394	WITHOUT_CLASSIFICATION	2.5939726060115296E-7	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999973138791791	WITHOUT_CLASSIFICATION	2.6861208209785235E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999996626442695	WITHOUT_CLASSIFICATION	3.3735573046288E-7	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999986269070394	WITHOUT_CLASSIFICATION	1.3730929605153398E-6	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999921120713808	WITHOUT_CLASSIFICATION	7.887928619178221E-6	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999998143646108	WITHOUT_CLASSIFICATION	1.8563538916786707E-7	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999998143646108	WITHOUT_CLASSIFICATION	1.8563538916786707E-7	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999977301874344	WITHOUT_CLASSIFICATION	2.269812565510762E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999999635139863	WITHOUT_CLASSIFICATION	3.6486013689922756E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999995304807939	WITHOUT_CLASSIFICATION	4.695192060455435E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999963958282458	WITHOUT_CLASSIFICATION	3.6041717543028926E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999963958282458	WITHOUT_CLASSIFICATION	3.6041717543028926E-6	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999996604438647	WITHOUT_CLASSIFICATION	3.395561353348004E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999999508709546	WITHOUT_CLASSIFICATION	4.912904539866862E-7	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.999999363457637	WITHOUT_CLASSIFICATION	6.365423629991662E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999995692314223	WITHOUT_CLASSIFICATION	4.307685776669113E-7	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999995851381321	WITHOUT_CLASSIFICATION	4.148618678361823E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999997601614998	WITHOUT_CLASSIFICATION	2.398385001833077E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999996399361312	WITHOUT_CLASSIFICATION	3.600638688434388E-7	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999997138790911	WITHOUT_CLASSIFICATION	2.861209087765685E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999999575877349	WITHOUT_CLASSIFICATION	4.2412265091230514E-7	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999998981458221	WITHOUT_CLASSIFICATION	1.0185417788191803E-7	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999996932083057	WITHOUT_CLASSIFICATION	3.067916942302116E-7	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999996604438647	WITHOUT_CLASSIFICATION	3.395561353348004E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999999508709546	WITHOUT_CLASSIFICATION	4.912904539866862E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999995692314223	WITHOUT_CLASSIFICATION	4.307685776669113E-7	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999996664110865	WITHOUT_CLASSIFICATION	3.335889134303455E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999995304807939	WITHOUT_CLASSIFICATION	4.695192060455435E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999995304807939	WITHOUT_CLASSIFICATION	4.695192060455435E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999976368186926	WITHOUT_CLASSIFICATION	2.363181307491652E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999976368186926	WITHOUT_CLASSIFICATION	2.363181307491652E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999790893079	WITHOUT_CLASSIFICATION	2.091069212221473E-8	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999790893079	WITHOUT_CLASSIFICATION	2.091069212221473E-8	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999997618203169	WITHOUT_CLASSIFICATION	2.3817968312666747E-7	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999972040689769	WITHOUT_CLASSIFICATION	2.7959310231007196E-6	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999995916139853	WITHOUT_CLASSIFICATION	4.083860147355509E-7	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999958085508824	WITHOUT_CLASSIFICATION	4.1914491176280635E-6	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999999193512357	WITHOUT_CLASSIFICATION	8.064876424431165E-8	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999995920198559	WITHOUT_CLASSIFICATION	4.079801441063719E-7	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999998969430552	WITHOUT_CLASSIFICATION	1.0305694472036177E-7	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999883526415	WITHOUT_CLASSIFICATION	1.1647358541951922E-8	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999998739968186	WITHOUT_CLASSIFICATION	1.2600318137328923E-7	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999995013418139	WITHOUT_CLASSIFICATION	4.986581860796401E-7	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.999989011656752	WITHOUT_CLASSIFICATION	1.098834324798969E-5	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.999999085778852	WITHOUT_CLASSIFICATION	9.142211479357367E-7	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999996452517996	WITHOUT_CLASSIFICATION	3.5474820030046567E-7	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999996079344443	WITHOUT_CLASSIFICATION	3.9206555577353776E-7	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999990591922825	WITHOUT_CLASSIFICATION	9.408077174797109E-7	TEST
// thread context	WITHOUT_CLASSIFICATION	0.999999070611304	WITHOUT_CLASSIFICATION	9.293886960157036E-7	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999985595737763	WITHOUT_CLASSIFICATION	1.4404262237641954E-6	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999996361991309	WITHOUT_CLASSIFICATION	3.6380086898782707E-7	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999999579342169	WITHOUT_CLASSIFICATION	4.2065782995973E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999996399361312	WITHOUT_CLASSIFICATION	3.600638688434388E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999999575877349	WITHOUT_CLASSIFICATION	4.2412265091230514E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999465937639	WITHOUT_CLASSIFICATION	5.340623604997526E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999938901871978	WITHOUT_CLASSIFICATION	6.109812802158164E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999938901871978	WITHOUT_CLASSIFICATION	6.109812802158164E-6	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999996664110865	WITHOUT_CLASSIFICATION	3.335889134303455E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999995304807939	WITHOUT_CLASSIFICATION	4.695192060455435E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999976368186926	WITHOUT_CLASSIFICATION	2.363181307491652E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999790893079	WITHOUT_CLASSIFICATION	2.091069212221473E-8	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999998771141554	WITHOUT_CLASSIFICATION	1.228858445287357E-7	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999999709526469	WITHOUT_CLASSIFICATION	2.904735297423787E-8	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999996300624994	WITHOUT_CLASSIFICATION	3.699375006085573E-7	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999999655299266	WITHOUT_CLASSIFICATION	3.4470073426192996E-8	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999995782596082	WITHOUT_CLASSIFICATION	4.2174039190307953E-7	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999995782596082	WITHOUT_CLASSIFICATION	4.2174039190307953E-7	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999995816060202	WITHOUT_CLASSIFICATION	4.1839397973082443E-7	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999952739339619	WITHOUT_CLASSIFICATION	4.726066038099575E-6	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999988117310915	WITHOUT_CLASSIFICATION	1.1882689084815732E-6	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999981418954096	WITHOUT_CLASSIFICATION	1.8581045903989724E-6	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999963859735501	WITHOUT_CLASSIFICATION	3.614026449932551E-6	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999963859735501	WITHOUT_CLASSIFICATION	3.614026449932551E-6	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999998935287566	WITHOUT_CLASSIFICATION	1.0647124346308045E-7	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999994406297849	WITHOUT_CLASSIFICATION	5.593702151735744E-7	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999992242758493	WITHOUT_CLASSIFICATION	7.757241507517411E-7	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999998993965562	WITHOUT_CLASSIFICATION	1.006034437220384E-7	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.999995347003199	WITHOUT_CLASSIFICATION	4.652996800990466E-6	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999993439148602	WITHOUT_CLASSIFICATION	6.560851396554117E-7	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999977493348359	WITHOUT_CLASSIFICATION	2.2506651641848833E-6	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999996316412688	WITHOUT_CLASSIFICATION	3.6835873123191376E-7	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999989147377999	WITHOUT_CLASSIFICATION	1.0852622000409666E-6	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999961502995783	WITHOUT_CLASSIFICATION	3.849700421710348E-6	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999996760117243	WITHOUT_CLASSIFICATION	3.239882756691568E-7	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999996568227801	WITHOUT_CLASSIFICATION	3.431772198157857E-7	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999992699805558	WITHOUT_CLASSIFICATION	7.300194441529152E-7	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999999022289282	WITHOUT_CLASSIFICATION	9.77710718210631E-8	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999951527581692	WITHOUT_CLASSIFICATION	4.847241830772623E-6	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999996241104625	WITHOUT_CLASSIFICATION	3.758895374406362E-7	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999994211790588	WITHOUT_CLASSIFICATION	5.788209412684876E-7	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999995773440903	WITHOUT_CLASSIFICATION	4.226559097828725E-7	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999999619156515	WITHOUT_CLASSIFICATION	3.808434848198083E-8	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999891078363468	WITHOUT_CLASSIFICATION	1.0892163653174764E-5	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999978984861427	WITHOUT_CLASSIFICATION	2.1015138571574133E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999993722502735	WITHOUT_CLASSIFICATION	6.277497264724038E-7	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999993722502735	WITHOUT_CLASSIFICATION	6.277497264724038E-7	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999990335812109	WITHOUT_CLASSIFICATION	9.664187890989883E-7	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999960413130141	WITHOUT_CLASSIFICATION	3.958686985927807E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999980582973149	WITHOUT_CLASSIFICATION	1.9417026851347895E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999980582973149	WITHOUT_CLASSIFICATION	1.9417026851347895E-6	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999959498504126	WITHOUT_CLASSIFICATION	4.050149587385728E-6	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999955343042888	WITHOUT_CLASSIFICATION	4.465695711305721E-6	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999935963016466	WITHOUT_CLASSIFICATION	6.40369835333233E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999971366359051	WITHOUT_CLASSIFICATION	2.863364094952525E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999971366359051	WITHOUT_CLASSIFICATION	2.863364094952525E-6	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.999996560259047	WITHOUT_CLASSIFICATION	3.439740952919049E-6	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999984341271158	WITHOUT_CLASSIFICATION	1.5658728843302347E-6	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999985542678895	WITHOUT_CLASSIFICATION	1.4457321105408017E-6	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999997191150967	WITHOUT_CLASSIFICATION	2.80884903383463E-7	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999995319051116	WITHOUT_CLASSIFICATION	4.6809488837000654E-7	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999984795771151	WITHOUT_CLASSIFICATION	1.5204228850218706E-6	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999990372286366	WITHOUT_CLASSIFICATION	9.6277136348939E-7	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999753085844204	WITHOUT_CLASSIFICATION	2.469141557961839E-5	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999969067760633	WITHOUT_CLASSIFICATION	3.0932239365967875E-6	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999993942909017	WITHOUT_CLASSIFICATION	6.057090982863044E-7	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999952963980263	WITHOUT_CLASSIFICATION	4.703601973786466E-6	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999975632286843	WITHOUT_CLASSIFICATION	2.4367713156920165E-6	TEST
// close it out	WITHOUT_CLASSIFICATION	0.999998141345898	WITHOUT_CLASSIFICATION	1.8586541018842195E-6	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999967487275571	WITHOUT_CLASSIFICATION	3.2512724428856283E-6	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999997146936903	WITHOUT_CLASSIFICATION	2.8530630968154337E-7	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999999364104963	WITHOUT_CLASSIFICATION	6.358950366864165E-8	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.999999720438441	WITHOUT_CLASSIFICATION	2.795615590172625E-7	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.999992734461204	WITHOUT_CLASSIFICATION	7.2655387959865405E-6	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999873356239954	WITHOUT_CLASSIFICATION	1.2664376004624747E-5	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999982311308637	WITHOUT_CLASSIFICATION	1.7688691363042432E-6	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999993582649119	WITHOUT_CLASSIFICATION	6.417350881943037E-7	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999991964519438	WITHOUT_CLASSIFICATION	8.035480561861988E-7	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999983913400468	WITHOUT_CLASSIFICATION	1.6086599532366234E-6	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999992764854481	WITHOUT_CLASSIFICATION	7.235145520256653E-7	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999308771537379	WITHOUT_CLASSIFICATION	6.912284626214869E-5	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999967470099029	WITHOUT_CLASSIFICATION	3.2529900970478586E-6	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999977177186367	WITHOUT_CLASSIFICATION	2.2822813632491145E-6	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999999708748865	WITHOUT_CLASSIFICATION	2.9125113490780883E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999944104996252	WITHOUT_CLASSIFICATION	5.589500374693895E-6	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999988282831631	WITHOUT_CLASSIFICATION	1.1717168368541377E-6	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999998814586388	WITHOUT_CLASSIFICATION	1.1854136118136611E-7	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999967487275571	WITHOUT_CLASSIFICATION	3.2512724428856283E-6	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999999708748865	WITHOUT_CLASSIFICATION	2.9125113490780883E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999944104996252	WITHOUT_CLASSIFICATION	5.589500374693895E-6	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999998814586388	WITHOUT_CLASSIFICATION	1.1854136118136611E-7	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999976873558895	WITHOUT_CLASSIFICATION	2.312644110571318E-6	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999952774807368	WITHOUT_CLASSIFICATION	4.722519263246709E-6	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999896378071352	WITHOUT_CLASSIFICATION	1.0362192864801388E-5	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999959393799753	WITHOUT_CLASSIFICATION	4.060620024673659E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999960522614231	WITHOUT_CLASSIFICATION	3.947738576926416E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.999999910263444	WITHOUT_CLASSIFICATION	8.973655596312345E-8	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999926519863805	WITHOUT_CLASSIFICATION	7.3480136194804135E-6	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999990989533017	WITHOUT_CLASSIFICATION	9.010466981196319E-7	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999974261076915	WITHOUT_CLASSIFICATION	2.5738923085671018E-6	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999995474939786	WITHOUT_CLASSIFICATION	4.5250602139644873E-7	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999922745454358	WITHOUT_CLASSIFICATION	7.725454564075889E-6	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999922745454358	WITHOUT_CLASSIFICATION	7.725454564075889E-6	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999983772059212	WITHOUT_CLASSIFICATION	1.6227940788020759E-6	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999983160590552	WITHOUT_CLASSIFICATION	1.6839409447063962E-6	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999996452306507	WITHOUT_CLASSIFICATION	3.547693493682154E-7	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999979704299663	WITHOUT_CLASSIFICATION	2.029570033608676E-6	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999992415052263	WITHOUT_CLASSIFICATION	7.584947735983647E-7	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999967220251177	WITHOUT_CLASSIFICATION	3.2779748823485125E-6	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999962749279909	WITHOUT_CLASSIFICATION	3.72507200902385E-6	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999000607993	WITHOUT_CLASSIFICATION	9.993920062274297E-8	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.999999834191063	WITHOUT_CLASSIFICATION	1.6580893703729765E-7	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999811438439	WITHOUT_CLASSIFICATION	1.8856156081386337E-8	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999994598366158	WITHOUT_CLASSIFICATION	5.40163384227558E-7	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999760751963	WITHOUT_CLASSIFICATION	2.3924803777243515E-8	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999985774967228	WITHOUT_CLASSIFICATION	1.4225032772184566E-6	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999997157606206	WITHOUT_CLASSIFICATION	2.842393794628643E-7	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999995819577139	WITHOUT_CLASSIFICATION	4.1804228609606956E-7	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999999125949677	WITHOUT_CLASSIFICATION	8.740503232540965E-8	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999993175303409	WITHOUT_CLASSIFICATION	6.824696591088717E-7	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999995840508671	WITHOUT_CLASSIFICATION	4.1594913284866416E-7	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999994857729151	WITHOUT_CLASSIFICATION	5.14227084983837E-7	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999995843276416	WITHOUT_CLASSIFICATION	4.1567235842922997E-7	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9999947816549969	WITHOUT_CLASSIFICATION	5.218345003200393E-6	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999964296153036	WITHOUT_CLASSIFICATION	3.570384696509334E-6	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.999999650326258	WITHOUT_CLASSIFICATION	3.496737419133096E-7	TEST
// others	WITHOUT_CLASSIFICATION	0.999995691433208	WITHOUT_CLASSIFICATION	4.3085667920138816E-6	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999990523059596	WITHOUT_CLASSIFICATION	9.476940403448118E-7	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999993598061461	WITHOUT_CLASSIFICATION	6.401938539427096E-7	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999999512824184	WITHOUT_CLASSIFICATION	4.8717581623856013E-8	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999298525917	WITHOUT_CLASSIFICATION	7.014740836395333E-8	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999980601090124	WITHOUT_CLASSIFICATION	1.9398909876533126E-6	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999990166866053	WITHOUT_CLASSIFICATION	9.83313394659066E-7	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999995451825217	WITHOUT_CLASSIFICATION	4.548174782528626E-7	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999993697836191	WITHOUT_CLASSIFICATION	6.302163809052685E-7	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999996863962589	WITHOUT_CLASSIFICATION	3.1360374101519394E-7	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999996889767895	WITHOUT_CLASSIFICATION	3.1102321050949036E-7	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999997466763167	WITHOUT_CLASSIFICATION	2.533236832251062E-7	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999967428303121	WITHOUT_CLASSIFICATION	3.2571696879358594E-6	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999993305893183	WITHOUT_CLASSIFICATION	6.694106817088283E-7	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999968844670689	WITHOUT_CLASSIFICATION	3.115532931066938E-6	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999995951880479	WITHOUT_CLASSIFICATION	4.0481195206357154E-7	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999981245834217	WITHOUT_CLASSIFICATION	1.8754165782617925E-6	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999972852408946	WITHOUT_CLASSIFICATION	2.7147591055023804E-6	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999334453841218	WITHOUT_CLASSIFICATION	6.655461587823902E-5	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999977805810383	WITHOUT_CLASSIFICATION	2.219418961651795E-6	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999987638856289	WITHOUT_CLASSIFICATION	1.2361143711153653E-6	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999998406287837	WITHOUT_CLASSIFICATION	1.5937121632308157E-7	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.999998872301891	WITHOUT_CLASSIFICATION	1.1276981089701938E-6	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999999774379454	WITHOUT_CLASSIFICATION	2.2562054632845765E-8	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999996438490278	WITHOUT_CLASSIFICATION	3.561509721155808E-7	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999991101749226	WITHOUT_CLASSIFICATION	8.89825077420223E-7	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999993365633277	WITHOUT_CLASSIFICATION	6.634366721996929E-7	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999999420902415	WITHOUT_CLASSIFICATION	5.790975860333563E-8	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999999026007133	WITHOUT_CLASSIFICATION	9.73992867574479E-8	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999935255342531	WITHOUT_CLASSIFICATION	6.474465746852037E-6	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999832033886604	WITHOUT_CLASSIFICATION	1.679661133955763E-5	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999938298584987	WITHOUT_CLASSIFICATION	6.170141501192317E-6	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999971355921462	WITHOUT_CLASSIFICATION	2.8644078538109257E-6	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999752076506	WITHOUT_CLASSIFICATION	2.47923493524874E-8	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999998021307418	WITHOUT_CLASSIFICATION	1.9786925813218806E-7	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999997105579199	WITHOUT_CLASSIFICATION	2.8944208008528653E-7	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999880492846412	WITHOUT_CLASSIFICATION	1.1950715358736053E-5	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999880492846412	WITHOUT_CLASSIFICATION	1.1950715358736053E-5	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999996789030427	WITHOUT_CLASSIFICATION	3.210969573033883E-6	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999951868626014	WITHOUT_CLASSIFICATION	4.8131373986971454E-6	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999944405195232	WITHOUT_CLASSIFICATION	5.559480476797128E-6	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999962908583003	WITHOUT_CLASSIFICATION	3.7091416998073418E-6	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999984276896071	WITHOUT_CLASSIFICATION	1.5723103928666136E-6	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999987267982972	WITHOUT_CLASSIFICATION	1.2732017028649053E-6	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999732199986813	WITHOUT_CLASSIFICATION	2.6780001318731648E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999945152110554	WITHOUT_CLASSIFICATION	5.4847889446565675E-6	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999986475813075	WITHOUT_CLASSIFICATION	1.3524186924286362E-6	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999997423991708	WITHOUT_CLASSIFICATION	2.576008292471091E-7	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999980825854774	WITHOUT_CLASSIFICATION	1.9174145226533157E-6	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999991103309611	WITHOUT_CLASSIFICATION	8.896690388375952E-7	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999829159061192	WITHOUT_CLASSIFICATION	1.708409388086614E-5	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999992621485325	WITHOUT_CLASSIFICATION	7.378514675016065E-7	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999957439308027	WITHOUT_CLASSIFICATION	4.256069197302056E-6	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999580290742709	WITHOUT_CLASSIFICATION	4.197092572903091E-5	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999779600634447	WITHOUT_CLASSIFICATION	2.20399365551941E-5	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999979630926541	WITHOUT_CLASSIFICATION	2.03690734599627E-6	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999996035487472	WITHOUT_CLASSIFICATION	3.964512528902634E-7	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999997894295544	WITHOUT_CLASSIFICATION	2.1057044568474195E-7	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999963638957893	WITHOUT_CLASSIFICATION	3.6361042107553912E-6	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999999043879222	WITHOUT_CLASSIFICATION	9.561207777156889E-8	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.999998080003736	WITHOUT_CLASSIFICATION	1.91999626395768E-6	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999998970822741	WITHOUT_CLASSIFICATION	1.0291772592893905E-7	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999997797353091	WITHOUT_CLASSIFICATION	2.202646910023521E-7	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999982175553364	WITHOUT_CLASSIFICATION	1.7824446636486462E-6	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999990903030802	WITHOUT_CLASSIFICATION	9.096969197680522E-7	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.999999987635613	WITHOUT_CLASSIFICATION	1.236438701424805E-8	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999998742888523	WITHOUT_CLASSIFICATION	1.2571114772569927E-7	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999609936252	WITHOUT_CLASSIFICATION	3.9006374750436144E-8	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999993392307863	WITHOUT_CLASSIFICATION	6.607692136794527E-7	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999961763837325	WITHOUT_CLASSIFICATION	3.823616267450197E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999851118034	WITHOUT_CLASSIFICATION	1.4888196561534952E-8	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999921938568477	WITHOUT_CLASSIFICATION	7.806143152362998E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999851118034	WITHOUT_CLASSIFICATION	1.4888196561534952E-8	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999996333073301	WITHOUT_CLASSIFICATION	3.666926699474202E-7	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999957967280794	WITHOUT_CLASSIFICATION	4.203271920642684E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999957967280794	WITHOUT_CLASSIFICATION	4.203271920642684E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999957967280794	WITHOUT_CLASSIFICATION	4.203271920642684E-6	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999997463421189	WITHOUT_CLASSIFICATION	2.536578812018883E-7	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999997463421189	WITHOUT_CLASSIFICATION	2.536578812018883E-7	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999798866282378	WITHOUT_CLASSIFICATION	2.011337176223961E-5	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999998901767451	WITHOUT_CLASSIFICATION	1.0982325495242334E-7	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.999998683911834	WITHOUT_CLASSIFICATION	1.3160881659898395E-6	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999998220077816	WITHOUT_CLASSIFICATION	1.779922184260438E-7	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999975612316859	WITHOUT_CLASSIFICATION	2.4387683141334156E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999989278181539	WITHOUT_CLASSIFICATION	1.07218184608042E-6	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.99999822670153	WITHOUT_CLASSIFICATION	1.7732984698439916E-6	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999977344954227	WITHOUT_CLASSIFICATION	2.265504577235887E-6	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999998672632896	WITHOUT_CLASSIFICATION	1.3273671040642394E-7	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999998701357932	WITHOUT_CLASSIFICATION	1.2986420690617002E-7	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999886378101325	WITHOUT_CLASSIFICATION	1.1362189867507108E-5	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999990392632363	WITHOUT_CLASSIFICATION	9.607367637086259E-7	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999993994895716	WITHOUT_CLASSIFICATION	6.005104285007169E-7	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999972082526534	WITHOUT_CLASSIFICATION	2.7917473465784493E-6	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999988890927768	WITHOUT_CLASSIFICATION	1.1109072231272814E-6	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.999998720528654	WITHOUT_CLASSIFICATION	1.2794713459651145E-6	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999998466841806	WITHOUT_CLASSIFICATION	1.5331581938424816E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999985044036873	WITHOUT_CLASSIFICATION	1.4955963126614202E-6	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999985044036873	WITHOUT_CLASSIFICATION	1.4955963126614202E-6	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999970642690978	WITHOUT_CLASSIFICATION	2.935730902286776E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999993335282163	WITHOUT_CLASSIFICATION	6.664717837040537E-7	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999993335282163	WITHOUT_CLASSIFICATION	6.664717837040537E-7	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999942317708651	WITHOUT_CLASSIFICATION	5.7682291349566095E-6	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999987320852058	WITHOUT_CLASSIFICATION	1.2679147941220018E-6	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999946232325417	WITHOUT_CLASSIFICATION	5.376767458312836E-6	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999934631694408	WITHOUT_CLASSIFICATION	6.5368305591839114E-6	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999988421870093	WITHOUT_CLASSIFICATION	1.1578129906829488E-6	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999997178079144	WITHOUT_CLASSIFICATION	2.8219208556906787E-7	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999980607898781	WITHOUT_CLASSIFICATION	1.9392101220089037E-6	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999997592452206	WITHOUT_CLASSIFICATION	2.4075477942179896E-7	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999970901395043	WITHOUT_CLASSIFICATION	2.9098604956188523E-6	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999970664366643	WITHOUT_CLASSIFICATION	2.933563335653646E-6	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999955710102801	WITHOUT_CLASSIFICATION	4.428989719855535E-6	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999977390578377	WITHOUT_CLASSIFICATION	2.2609421622432955E-6	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999939031358804	WITHOUT_CLASSIFICATION	6.096864119540971E-6	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999997557752469	WITHOUT_CLASSIFICATION	2.442247531416062E-7	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999977344954227	WITHOUT_CLASSIFICATION	2.265504577235887E-6	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999101020442738	WITHOUT_CLASSIFICATION	8.989795572619904E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999940012567334	WITHOUT_CLASSIFICATION	5.998743266510073E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999989238687643	WITHOUT_CLASSIFICATION	1.0761312356453613E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999989238687643	WITHOUT_CLASSIFICATION	1.0761312356453613E-6	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999990139229031	WITHOUT_CLASSIFICATION	9.860770969109648E-7	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999766196083789	WITHOUT_CLASSIFICATION	2.3380391621167234E-5	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999997308688781	WITHOUT_CLASSIFICATION	2.691311219969947E-7	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999961835967801	WITHOUT_CLASSIFICATION	3.816403219986314E-6	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999998940960877	WITHOUT_CLASSIFICATION	1.0590391233271333E-7	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999991899356571	WITHOUT_CLASSIFICATION	8.100643429635656E-7	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999633966897	WITHOUT_CLASSIFICATION	3.660331026278564E-8	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999994917093498	WITHOUT_CLASSIFICATION	5.082906503006614E-7	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.999999501486603	WITHOUT_CLASSIFICATION	4.985133969949837E-7	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999998969440818	WITHOUT_CLASSIFICATION	1.0305591823268539E-7	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999977323212743	WITHOUT_CLASSIFICATION	2.2676787256482946E-6	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.999999190724515	WITHOUT_CLASSIFICATION	8.092754849169508E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999905535559578	WITHOUT_CLASSIFICATION	9.446444042187045E-6	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999997576264268	WITHOUT_CLASSIFICATION	2.4237357323454486E-7	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999998702029534	WITHOUT_CLASSIFICATION	1.2979704666508028E-7	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999995233205129	WITHOUT_CLASSIFICATION	4.766794870203363E-7	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999973567924901	WITHOUT_CLASSIFICATION	2.6432075098054885E-6	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999944041752296	WITHOUT_CLASSIFICATION	5.595824770482324E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999940033764152	WITHOUT_CLASSIFICATION	5.996623584694771E-6	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999996251195389	WITHOUT_CLASSIFICATION	3.7488046109432713E-7	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999997791235921	WITHOUT_CLASSIFICATION	2.2087640789704507E-7	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999998619269713	WITHOUT_CLASSIFICATION	1.3807302867701908E-7	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999925418290808	WITHOUT_CLASSIFICATION	7.458170919095626E-6	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.999999987848301	WITHOUT_CLASSIFICATION	1.2151698981518891E-8	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999996048277724	WITHOUT_CLASSIFICATION	3.951722277051989E-7	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999870445788636	WITHOUT_CLASSIFICATION	1.2955421136429415E-5	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999885017802325	WITHOUT_CLASSIFICATION	1.1498219767548429E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999992093609443	WITHOUT_CLASSIFICATION	7.906390556211085E-7	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999971003938941	WITHOUT_CLASSIFICATION	2.899606105788413E-6	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999987279722479	WITHOUT_CLASSIFICATION	1.2720277521097218E-6	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999990247981613	WITHOUT_CLASSIFICATION	9.752018386925946E-7	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.99999878738371	WITHOUT_CLASSIFICATION	1.2126162899412856E-6	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9995950274340504	WITHOUT_CLASSIFICATION	4.0497256594956214E-4	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.999998769798509	WITHOUT_CLASSIFICATION	1.2302014909288472E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999973975623339	WITHOUT_CLASSIFICATION	2.6024376661428965E-6	TEST
// $blah	WITHOUT_CLASSIFICATION	0.999994462996894	WITHOUT_CLASSIFICATION	5.537003106118953E-6	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999992093609443	WITHOUT_CLASSIFICATION	7.906390556211085E-7	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999982507074443	WITHOUT_CLASSIFICATION	1.7492925557121564E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999973975623339	WITHOUT_CLASSIFICATION	2.6024376661428965E-6	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999994715406676	WITHOUT_CLASSIFICATION	5.284593323318185E-7	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999987827085296	WITHOUT_CLASSIFICATION	1.2172914704267146E-6	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999808842202882	WITHOUT_CLASSIFICATION	1.9115779711737798E-5	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999990929221901	WITHOUT_CLASSIFICATION	9.070778098876988E-7	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999970867874897	WITHOUT_CLASSIFICATION	2.9132125103824686E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999989603374788	WITHOUT_CLASSIFICATION	1.0396625212106322E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999989603374788	WITHOUT_CLASSIFICATION	1.0396625212106322E-6	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999980164008205	WITHOUT_CLASSIFICATION	1.983599179450429E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999997617582584	WITHOUT_CLASSIFICATION	2.3824174157324176E-7	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999994136761879	WITHOUT_CLASSIFICATION	5.863238120310596E-7	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999994136761879	WITHOUT_CLASSIFICATION	5.863238120310596E-7	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999990007964826	WITHOUT_CLASSIFICATION	9.992035174123166E-7	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9997768821133266	WITHOUT_CLASSIFICATION	2.2311788667335984E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9998981663300257	WITHOUT_CLASSIFICATION	1.0183366997427269E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9998981663300257	WITHOUT_CLASSIFICATION	1.0183366997427269E-4	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999954448899052	WITHOUT_CLASSIFICATION	4.5551100947916465E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999946191026359	WITHOUT_CLASSIFICATION	5.380897364061507E-6	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999984591094195	WITHOUT_CLASSIFICATION	1.540890580551268E-6	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999998044546743	WITHOUT_CLASSIFICATION	1.9554532570728936E-7	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999986400824062	WITHOUT_CLASSIFICATION	1.3599175938565738E-6	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999517485155985	WITHOUT_CLASSIFICATION	4.8251484401561305E-5	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999998918025025	WITHOUT_CLASSIFICATION	1.081974975346129E-7	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999992645011359	WITHOUT_CLASSIFICATION	7.354988642607847E-7	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999970670853192	WITHOUT_CLASSIFICATION	2.932914680873338E-6	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999948514691058	WITHOUT_CLASSIFICATION	5.148530894142946E-6	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999960580765822	WITHOUT_CLASSIFICATION	3.941923417778966E-6	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999959836827987	WITHOUT_CLASSIFICATION	4.0163172012403244E-6	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999991191178542	WITHOUT_CLASSIFICATION	8.808821457648226E-7	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999862373682457	WITHOUT_CLASSIFICATION	1.3762631754436702E-5	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999996633563872	WITHOUT_CLASSIFICATION	3.366436126846426E-7	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999995061507065	WITHOUT_CLASSIFICATION	4.938492934882026E-7	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999372017944046	WITHOUT_CLASSIFICATION	6.279820559541891E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999983783478	WITHOUT_CLASSIFICATION	1.6216522000101785E-6	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999995676914091	WITHOUT_CLASSIFICATION	4.323085909806344E-7	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999993493602496	WITHOUT_CLASSIFICATION	6.506397503696965E-7	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.999999016425346	WITHOUT_CLASSIFICATION	9.835746538828115E-7	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999987845776347	WITHOUT_CLASSIFICATION	1.2154223652304192E-6	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999995380607988	WITHOUT_CLASSIFICATION	4.619392012676554E-7	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999885192559089	WITHOUT_CLASSIFICATION	1.1480744091171681E-5	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999762037526728	WITHOUT_CLASSIFICATION	2.379624732715493E-5	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.999986487362586	WITHOUT_CLASSIFICATION	1.3512637414000443E-5	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.999998693596745	WITHOUT_CLASSIFICATION	1.3064032549746334E-6	TEST
// line 323	WITHOUT_CLASSIFICATION	0.999994909785225	WITHOUT_CLASSIFICATION	5.090214774937904E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999996398353803	WITHOUT_CLASSIFICATION	3.60164619668136E-7	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999996398353803	WITHOUT_CLASSIFICATION	3.60164619668136E-7	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999997179765056	WITHOUT_CLASSIFICATION	2.820234943710352E-7	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999994553202685	WITHOUT_CLASSIFICATION	5.446797315193909E-7	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.999992587756535	WITHOUT_CLASSIFICATION	7.4122434649636E-6	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999970357442759	WITHOUT_CLASSIFICATION	2.96425572418783E-6	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999843872284856	WITHOUT_CLASSIFICATION	1.5612771514370235E-5	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.999996417781946	WITHOUT_CLASSIFICATION	3.582218053867703E-6	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999975349592648	WITHOUT_CLASSIFICATION	2.4650407351693886E-6	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999998135497169	WITHOUT_CLASSIFICATION	1.8645028310613325E-6	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999984463649642	WITHOUT_CLASSIFICATION	1.5536350357876451E-6	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999955334869901	WITHOUT_CLASSIFICATION	4.466513009875954E-6	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.999999193586283	WITHOUT_CLASSIFICATION	8.064137169957077E-7	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999984258145446	WITHOUT_CLASSIFICATION	1.5741854555148867E-6	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.999994884446203	WITHOUT_CLASSIFICATION	5.11555379699806E-6	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999995057826974	WITHOUT_CLASSIFICATION	4.942173025897676E-7	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999998177507701	WITHOUT_CLASSIFICATION	1.8224922981239646E-7	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999991675775398	WITHOUT_CLASSIFICATION	8.324224601289185E-7	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999998825424051	WITHOUT_CLASSIFICATION	1.174575949203418E-7	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999998588038371	WITHOUT_CLASSIFICATION	1.411961627849183E-7	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999968694056416	WITHOUT_CLASSIFICATION	3.130594358398793E-6	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999986970085275	WITHOUT_CLASSIFICATION	1.3029914725191345E-6	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999992679832059	WITHOUT_CLASSIFICATION	7.32016794049882E-7	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999934613533921	WITHOUT_CLASSIFICATION	6.5386466080009775E-6	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999988678017164	WITHOUT_CLASSIFICATION	1.1321982835830007E-6	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999995154621594	WITHOUT_CLASSIFICATION	4.845378406294455E-7	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999985703352512	WITHOUT_CLASSIFICATION	1.4296647488926828E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999944537325797	WITHOUT_CLASSIFICATION	5.546267420407971E-6	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.999999775552823	WITHOUT_CLASSIFICATION	2.2444717695304995E-7	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999991297868069	WITHOUT_CLASSIFICATION	8.702131929721703E-7	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999966454261809	WITHOUT_CLASSIFICATION	3.354573819007359E-6	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999993181406784	WITHOUT_CLASSIFICATION	6.818593216035694E-7	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999921866339423	WITHOUT_CLASSIFICATION	7.813366057674401E-6	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999984586587874	WITHOUT_CLASSIFICATION	1.5413412126054369E-6	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999987118308091	WITHOUT_CLASSIFICATION	1.2881691908610567E-6	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999977690518501	WITHOUT_CLASSIFICATION	2.2309481498532254E-6	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999976109011477	WITHOUT_CLASSIFICATION	2.389098852296999E-6	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999965542904526	WITHOUT_CLASSIFICATION	3.4457095473724644E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999997900011727	WITHOUT_CLASSIFICATION	2.0999882731573765E-6	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999992659385969	WITHOUT_CLASSIFICATION	7.340614031076091E-7	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999995578991051	WITHOUT_CLASSIFICATION	4.421008948844341E-7	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999975512627969	WITHOUT_CLASSIFICATION	2.4487372031949467E-6	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999935972818854	WITHOUT_CLASSIFICATION	6.402718114579974E-6	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999997901652051	WITHOUT_CLASSIFICATION	2.09834794786323E-7	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999588157408	WITHOUT_CLASSIFICATION	4.118425921998376E-8	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999588157408	WITHOUT_CLASSIFICATION	4.118425921998376E-8	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999986201677389	WITHOUT_CLASSIFICATION	1.3798322611543505E-6	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.999999942787395	WITHOUT_CLASSIFICATION	5.7212604907619385E-8	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.999997207166985	WITHOUT_CLASSIFICATION	2.7928330149302606E-6	TEST
// return	WITHOUT_CLASSIFICATION	0.9999980322194718	WITHOUT_CLASSIFICATION	1.9677805282106407E-6	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.99999925486232	WITHOUT_CLASSIFICATION	7.451376799770365E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999985933686412	WITHOUT_CLASSIFICATION	1.4066313588214128E-6	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999993585221809	WITHOUT_CLASSIFICATION	6.414778192271282E-7	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999989821676787	WITHOUT_CLASSIFICATION	1.0178323213072E-6	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999998700300252	WITHOUT_CLASSIFICATION	1.2996997472761933E-7	TEST
// tc	WITHOUT_CLASSIFICATION	0.9999927718340583	WITHOUT_CLASSIFICATION	7.228165941679936E-6	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999988434783674	WITHOUT_CLASSIFICATION	1.1565216325869375E-6	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999987324310121	WITHOUT_CLASSIFICATION	1.2675689878698825E-6	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999982050170532	WITHOUT_CLASSIFICATION	1.794982946890901E-6	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999997197846835	WITHOUT_CLASSIFICATION	2.802153164103273E-7	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999990676467272	WITHOUT_CLASSIFICATION	9.32353272732806E-7	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999986057733833	WITHOUT_CLASSIFICATION	1.3942266166785195E-6	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999993133982735	WITHOUT_CLASSIFICATION	6.866017264273975E-7	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999955885277365	WITHOUT_CLASSIFICATION	4.411472263525337E-6	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999989209374085	WITHOUT_CLASSIFICATION	1.07906259159003E-6	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999958712656226	WITHOUT_CLASSIFICATION	4.12873437735202E-6	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999990590986616	WITHOUT_CLASSIFICATION	9.409013383963683E-7	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999972737423054	WITHOUT_CLASSIFICATION	2.7262576945332162E-6	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999964150658747	WITHOUT_CLASSIFICATION	3.5849341252955914E-6	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999981911718687	WITHOUT_CLASSIFICATION	1.8088281312974634E-6	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999712420359	WITHOUT_CLASSIFICATION	2.875796409274275E-7	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999993768729963	WITHOUT_CLASSIFICATION	6.231270036528298E-7	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999995067601265	WITHOUT_CLASSIFICATION	4.932398735167549E-7	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999988215348816	WITHOUT_CLASSIFICATION	1.1784651183661547E-6	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999998949203871	WITHOUT_CLASSIFICATION	1.0507961289425581E-7	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999990387409051	WITHOUT_CLASSIFICATION	9.61259094923013E-7	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999993347637124	WITHOUT_CLASSIFICATION	6.652362876231719E-7	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.999999604058881	WITHOUT_CLASSIFICATION	3.9594111894035794E-7	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999984668075501	WITHOUT_CLASSIFICATION	1.533192449901471E-6	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999979635749213	WITHOUT_CLASSIFICATION	2.036425078752777E-6	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999992659385969	WITHOUT_CLASSIFICATION	7.340614031076091E-7	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999998297703038	WITHOUT_CLASSIFICATION	1.7022969616723429E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999996929080797	WITHOUT_CLASSIFICATION	3.0709192035712625E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999996929080797	WITHOUT_CLASSIFICATION	3.0709192035712625E-7	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999988404226788	WITHOUT_CLASSIFICATION	1.159577321120783E-6	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.999999916590539	WITHOUT_CLASSIFICATION	8.340946108407728E-8	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999997661944957	WITHOUT_CLASSIFICATION	2.3380550424866616E-7	TEST
// never reached	WITHOUT_CLASSIFICATION	0.999998762216967	WITHOUT_CLASSIFICATION	1.2377830328580519E-6	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999960138519145	WITHOUT_CLASSIFICATION	3.986148085538689E-6	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999968975402733	WITHOUT_CLASSIFICATION	3.1024597267710996E-6	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999977378069904	WITHOUT_CLASSIFICATION	2.2621930095563847E-6	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999964269929569	WITHOUT_CLASSIFICATION	3.5730070432390888E-6	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999982679001819	WITHOUT_CLASSIFICATION	1.7320998180770028E-6	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999988079325044	WITHOUT_CLASSIFICATION	1.192067495688169E-6	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999980051937234	WITHOUT_CLASSIFICATION	1.9948062766044802E-6	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.999997037320836	WITHOUT_CLASSIFICATION	2.962679163893331E-6	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999979249428456	WITHOUT_CLASSIFICATION	2.075057154514032E-6	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999998191126881	WITHOUT_CLASSIFICATION	1.808873119552494E-7	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999998227733935	WITHOUT_CLASSIFICATION	1.772266064391178E-7	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999999662696033	WITHOUT_CLASSIFICATION	3.37303966374197E-8	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.999996718323506	WITHOUT_CLASSIFICATION	3.281676494055567E-6	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999949072455757	WITHOUT_CLASSIFICATION	5.092754424283389E-6	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999982902772279	WITHOUT_CLASSIFICATION	1.7097227721842512E-6	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999988233328658	WITHOUT_CLASSIFICATION	1.1766671342314377E-6	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999979910155506	WITHOUT_CLASSIFICATION	2.0089844493160364E-6	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999983088775004	WITHOUT_CLASSIFICATION	1.6911224995244328E-6	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999992673734961	WITHOUT_CLASSIFICATION	7.326265038978874E-7	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999997775037163	WITHOUT_CLASSIFICATION	2.224962836214662E-7	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999185001355	WITHOUT_CLASSIFICATION	8.149986456905761E-8	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999998120125296	WITHOUT_CLASSIFICATION	1.879874703718885E-7	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999921885227646	WITHOUT_CLASSIFICATION	7.811477235389975E-6	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999993896955522	WITHOUT_CLASSIFICATION	6.103044477752694E-7	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999976118796796	WITHOUT_CLASSIFICATION	2.38812032047224E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999991277966843	WITHOUT_CLASSIFICATION	8.722033155950998E-7	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999994049187907	WITHOUT_CLASSIFICATION	5.950812094123063E-7	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999986098179068	WITHOUT_CLASSIFICATION	1.390182093277529E-6	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.999995671116216	WITHOUT_CLASSIFICATION	4.328883783885561E-6	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999490645631	WITHOUT_CLASSIFICATION	5.0935436757655803E-8	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999998409876837	WITHOUT_CLASSIFICATION	1.5901231631230907E-7	TEST
// get current context	WITHOUT_CLASSIFICATION	0.999998154878991	WITHOUT_CLASSIFICATION	1.8451210089377596E-6	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.999999317645432	WITHOUT_CLASSIFICATION	6.823545679659791E-7	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999998120125296	WITHOUT_CLASSIFICATION	1.879874703718885E-7	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999921885227646	WITHOUT_CLASSIFICATION	7.811477235389975E-6	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999993896955522	WITHOUT_CLASSIFICATION	6.103044477752694E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999991277966843	WITHOUT_CLASSIFICATION	8.722033155950998E-7	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999478800021	WITHOUT_CLASSIFICATION	5.211999787382357E-8	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999997192558588	WITHOUT_CLASSIFICATION	2.807441411869362E-7	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999999257262675	WITHOUT_CLASSIFICATION	7.427373248902646E-7	TEST
// load null block	WITHOUT_CLASSIFICATION	0.999998386211586	WITHOUT_CLASSIFICATION	1.6137884140236005E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999988920309046	WITHOUT_CLASSIFICATION	1.107969095346894E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999996258716656	WITHOUT_CLASSIFICATION	3.741283344514991E-7	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999994680805194	WITHOUT_CLASSIFICATION	5.319194805418975E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999983317921978	WITHOUT_CLASSIFICATION	1.6682078022451554E-6	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999995869746446	WITHOUT_CLASSIFICATION	4.13025355336147E-7	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999972062357515	WITHOUT_CLASSIFICATION	2.793764248583714E-6	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999981630599903	WITHOUT_CLASSIFICATION	1.8369400095410943E-6	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999970476346121	WITHOUT_CLASSIFICATION	2.9523653879691347E-6	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999830981533377	WITHOUT_CLASSIFICATION	1.6901846662274655E-5	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999967018187955	WITHOUT_CLASSIFICATION	3.2981812044243915E-6	TEST
// store it	WITHOUT_CLASSIFICATION	0.999995275227923	WITHOUT_CLASSIFICATION	4.724772077105589E-6	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999987246602898	WITHOUT_CLASSIFICATION	1.2753397101091696E-6	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999985620277622	WITHOUT_CLASSIFICATION	1.43797223788651E-6	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.999999883802651	WITHOUT_CLASSIFICATION	1.1619734891219942E-7	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999999475760788	WITHOUT_CLASSIFICATION	5.24239213190736E-8	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.999999317645432	WITHOUT_CLASSIFICATION	6.823545679659791E-7	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999997192558588	WITHOUT_CLASSIFICATION	2.807441411869362E-7	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999999257262675	WITHOUT_CLASSIFICATION	7.427373248902646E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999988920309046	WITHOUT_CLASSIFICATION	1.107969095346894E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999996258716656	WITHOUT_CLASSIFICATION	3.741283344514991E-7	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999994680805194	WITHOUT_CLASSIFICATION	5.319194805418975E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999983317921978	WITHOUT_CLASSIFICATION	1.6682078022451554E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999983574290672	WITHOUT_CLASSIFICATION	1.6425709329226628E-6	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999997568849162	WITHOUT_CLASSIFICATION	2.431150838403139E-7	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999981423598561	WITHOUT_CLASSIFICATION	1.8576401438500404E-6	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.999999797983053	WITHOUT_CLASSIFICATION	2.0201694685885874E-7	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999939335812038	WITHOUT_CLASSIFICATION	6.066418796222057E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999939335812038	WITHOUT_CLASSIFICATION	6.066418796222057E-6	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.999999035535584	WITHOUT_CLASSIFICATION	9.644644160658044E-7	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999994780050273	WITHOUT_CLASSIFICATION	5.219949726475643E-7	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.999999861154646	WITHOUT_CLASSIFICATION	1.3884535411359038E-7	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999990553749348	WITHOUT_CLASSIFICATION	9.446250651962331E-7	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999989829702598	WITHOUT_CLASSIFICATION	1.0170297401980757E-6	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999987427593631	WITHOUT_CLASSIFICATION	1.2572406369480334E-6	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.999998659970044	WITHOUT_CLASSIFICATION	1.3400299559396982E-6	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999991952599657	WITHOUT_CLASSIFICATION	8.047400342062567E-7	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999997226446422	WITHOUT_CLASSIFICATION	2.7735535782477666E-7	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999998698660518	WITHOUT_CLASSIFICATION	1.3013394809351896E-7	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999993627651862	WITHOUT_CLASSIFICATION	6.372348136832774E-7	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999996968289456	WITHOUT_CLASSIFICATION	3.0317105429270287E-7	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999967577238795	WITHOUT_CLASSIFICATION	3.2422761203912852E-6	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999997415551636	WITHOUT_CLASSIFICATION	2.5844483641076645E-7	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999997756679971	WITHOUT_CLASSIFICATION	2.2433200291263208E-7	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999996861897081	WITHOUT_CLASSIFICATION	3.1381029181288357E-7	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999991496943413	WITHOUT_CLASSIFICATION	8.503056587168374E-7	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999971766050502	WITHOUT_CLASSIFICATION	2.823394949763389E-6	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999998984958519	WITHOUT_CLASSIFICATION	1.0150414810219471E-7	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999999672281437	WITHOUT_CLASSIFICATION	3.27718562668865E-8	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9999984917306793	WITHOUT_CLASSIFICATION	1.5082693206562427E-6	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999995501068389	WITHOUT_CLASSIFICATION	4.49893161110505E-7	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999983880425234	WITHOUT_CLASSIFICATION	1.611957476635049E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9996860364435642	WITHOUT_CLASSIFICATION	3.139635564357689E-4	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999999241523359	WITHOUT_CLASSIFICATION	7.584766409759078E-7	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999995782003277	WITHOUT_CLASSIFICATION	4.2179967224670873E-7	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999374817733	WITHOUT_CLASSIFICATION	6.251822671600131E-8	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999984523160201	WITHOUT_CLASSIFICATION	1.5476839799599728E-6	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999949734442088	WITHOUT_CLASSIFICATION	5.026555791183241E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999999241523359	WITHOUT_CLASSIFICATION	7.584766409759078E-7	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999995782003277	WITHOUT_CLASSIFICATION	4.2179967224670873E-7	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999997415551636	WITHOUT_CLASSIFICATION	2.5844483641076645E-7	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999997195698883	WITHOUT_CLASSIFICATION	2.8043011164085005E-7	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999979167864	WITHOUT_CLASSIFICATION	2.083213599972341E-6	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999940520688624	WITHOUT_CLASSIFICATION	5.9479311376311175E-6	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999998923059623	WITHOUT_CLASSIFICATION	1.0769403766549595E-7	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999989547952168	WITHOUT_CLASSIFICATION	1.045204783101547E-6	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999973455942451	WITHOUT_CLASSIFICATION	2.6544057548007213E-6	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.999987541232936	WITHOUT_CLASSIFICATION	1.245876706413355E-5	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999974409930561	WITHOUT_CLASSIFICATION	2.5590069438807998E-6	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999996633629228	WITHOUT_CLASSIFICATION	3.366370771907497E-7	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999979088672297	WITHOUT_CLASSIFICATION	2.091132770224018E-6	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999999358134568	WITHOUT_CLASSIFICATION	6.418654319160986E-8	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999984384012783	WITHOUT_CLASSIFICATION	1.5615987216739533E-6	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999988855307554	WITHOUT_CLASSIFICATION	1.1144692445036304E-6	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999998381228086	WITHOUT_CLASSIFICATION	1.6187719133046492E-7	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999998602932159	WITHOUT_CLASSIFICATION	1.3970678415023935E-7	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999868805483395	WITHOUT_CLASSIFICATION	1.3119451660400177E-5	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.999999396434282	WITHOUT_CLASSIFICATION	6.035657178857958E-7	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999994265487961	WITHOUT_CLASSIFICATION	5.734512038881399E-7	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999820397368	WITHOUT_CLASSIFICATION	1.796026306655788E-8	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999993483201529	WITHOUT_CLASSIFICATION	6.51679847118966E-7	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999998455969994	WITHOUT_CLASSIFICATION	1.5440300070913848E-7	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999998739776428	WITHOUT_CLASSIFICATION	1.2602235724039768E-7	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999992435036861	WITHOUT_CLASSIFICATION	7.564963138883968E-7	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999751843488	WITHOUT_CLASSIFICATION	2.481565112738148E-8	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999996961655226	WITHOUT_CLASSIFICATION	3.038344773957039E-7	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999998579889191	WITHOUT_CLASSIFICATION	1.4201108093452585E-7	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9984862179905174	WITHOUT_CLASSIFICATION	0.001513782009482611	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999991352500711	WITHOUT_CLASSIFICATION	8.647499288956857E-7	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999998686137389	WITHOUT_CLASSIFICATION	1.3138626113229556E-7	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999998865532732	WITHOUT_CLASSIFICATION	1.134467267533407E-7	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999993335555136	WITHOUT_CLASSIFICATION	6.664444864868931E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999508165556792	WITHOUT_CLASSIFICATION	4.9183444320917325E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999508165556792	WITHOUT_CLASSIFICATION	4.9183444320917325E-5	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999967577238795	WITHOUT_CLASSIFICATION	3.2422761203912852E-6	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999651124373	WITHOUT_CLASSIFICATION	3.488756266234658E-8	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999967526143753	WITHOUT_CLASSIFICATION	3.2473856248207406E-6	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999973506861671	WITHOUT_CLASSIFICATION	2.6493138328191037E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999999899056277	WITHOUT_CLASSIFICATION	1.0094372303294705E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999999899056277	WITHOUT_CLASSIFICATION	1.0094372303294705E-7	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999065924895	WITHOUT_CLASSIFICATION	9.340751057024956E-8	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999999099226589	WITHOUT_CLASSIFICATION	9.007734110567009E-8	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999998450309078	WITHOUT_CLASSIFICATION	1.5496909230624974E-7	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999991626102132	WITHOUT_CLASSIFICATION	8.373897868353298E-7	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999981855561583	WITHOUT_CLASSIFICATION	1.8144438417134993E-6	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999615413213	WITHOUT_CLASSIFICATION	3.8458678765975094E-8	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999998964503044	WITHOUT_CLASSIFICATION	1.0354969559339963E-7	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999974111958804	WITHOUT_CLASSIFICATION	2.5888041196951793E-6	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998271524773	WITHOUT_CLASSIFICATION	1.728475226968661E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999995035437803	WITHOUT_CLASSIFICATION	4.964562196638947E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999892947596212	WITHOUT_CLASSIFICATION	1.0705240378828777E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999936032420014	WITHOUT_CLASSIFICATION	6.396757998613667E-6	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999720539561544	WITHOUT_CLASSIFICATION	2.794604384553435E-5	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999995711870149	WITHOUT_CLASSIFICATION	4.288129852208838E-7	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999982149146291	WITHOUT_CLASSIFICATION	1.7850853708795357E-6	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999973583548519	WITHOUT_CLASSIFICATION	2.6416451481876887E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999995279453645	WITHOUT_CLASSIFICATION	4.7205463557145377E-7	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999995279453645	WITHOUT_CLASSIFICATION	4.7205463557145377E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999998392132494	WITHOUT_CLASSIFICATION	1.607867505141245E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999998392132494	WITHOUT_CLASSIFICATION	1.607867505141245E-7	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999478489284	WITHOUT_CLASSIFICATION	5.215107166698348E-8	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999993148203737	WITHOUT_CLASSIFICATION	6.851796263194024E-7	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999992456480675	WITHOUT_CLASSIFICATION	7.543519324362412E-7	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999986796552882	WITHOUT_CLASSIFICATION	1.3203447117377083E-6	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999985242287931	WITHOUT_CLASSIFICATION	1.4757712069584092E-6	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999968910935492	WITHOUT_CLASSIFICATION	3.108906450777006E-6	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.999999627401352	WITHOUT_CLASSIFICATION	3.725986480902845E-7	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999936032420014	WITHOUT_CLASSIFICATION	6.396757998613667E-6	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999720539561544	WITHOUT_CLASSIFICATION	2.794604384553435E-5	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999982149146291	WITHOUT_CLASSIFICATION	1.7850853708795357E-6	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999997076227406	WITHOUT_CLASSIFICATION	2.923772593505621E-7	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999988021592062	WITHOUT_CLASSIFICATION	1.197840793815124E-6	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999844160418	WITHOUT_CLASSIFICATION	1.5583958217238218E-8	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.999999412837672	WITHOUT_CLASSIFICATION	5.871623279669168E-7	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999998974864326	WITHOUT_CLASSIFICATION	1.0251356728553052E-7	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999974211148159	WITHOUT_CLASSIFICATION	2.5788851840299325E-6	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999994590251762	WITHOUT_CLASSIFICATION	5.409748237507418E-7	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999995063229106	WITHOUT_CLASSIFICATION	4.936770894646552E-7	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999998331528677	WITHOUT_CLASSIFICATION	1.668471323700001E-7	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999858356224	WITHOUT_CLASSIFICATION	1.416437762942111E-8	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999997707071552	WITHOUT_CLASSIFICATION	2.2929284480063614E-7	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999991743234239	WITHOUT_CLASSIFICATION	8.256765760779035E-7	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999940495507434	WITHOUT_CLASSIFICATION	5.950449256593613E-6	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999982044495384	WITHOUT_CLASSIFICATION	1.7955504617110649E-6	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999998739811237	WITHOUT_CLASSIFICATION	1.2601887633203335E-7	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999993579218097	WITHOUT_CLASSIFICATION	6.420781903079301E-7	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999980310819229	WITHOUT_CLASSIFICATION	1.968918077176546E-6	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999999359259154	WITHOUT_CLASSIFICATION	6.407408463593641E-8	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999997886299802	WITHOUT_CLASSIFICATION	2.1137001984145644E-7	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999990442957425	WITHOUT_CLASSIFICATION	9.557042575760672E-7	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999998821780555	WITHOUT_CLASSIFICATION	1.1782194453984408E-7	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999953444480449	WITHOUT_CLASSIFICATION	4.655551955067149E-6	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999950113855519	WITHOUT_CLASSIFICATION	4.988614448115663E-6	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.999999409691969	WITHOUT_CLASSIFICATION	5.903080310370722E-7	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999960617526665	WITHOUT_CLASSIFICATION	3.9382473335088655E-6	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999964398261271	WITHOUT_CLASSIFICATION	3.56017387304602E-6	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999993200197579	WITHOUT_CLASSIFICATION	6.799802419787803E-7	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999998371517276	WITHOUT_CLASSIFICATION	1.628482723508179E-7	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999986188129755	WITHOUT_CLASSIFICATION	1.3811870245230718E-6	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999990311955	WITHOUT_CLASSIFICATION	9.688044999665633E-7	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999994843801077	WITHOUT_CLASSIFICATION	5.156198924461554E-7	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999984564101794	WITHOUT_CLASSIFICATION	1.5435898206074817E-6	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.999998482270236	WITHOUT_CLASSIFICATION	1.5177297639906368E-6	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999993322530649	WITHOUT_CLASSIFICATION	6.677469350869814E-7	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999994821089172	WITHOUT_CLASSIFICATION	5.178910828191197E-7	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999991402099865	WITHOUT_CLASSIFICATION	8.597900134883271E-7	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.999997501038098	WITHOUT_CLASSIFICATION	2.498961901895457E-6	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999996868345846	WITHOUT_CLASSIFICATION	3.131654154172738E-7	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999943118674649	WITHOUT_CLASSIFICATION	5.688132535133542E-6	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999997784515027	WITHOUT_CLASSIFICATION	2.2154849720807396E-7	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999995510475613	WITHOUT_CLASSIFICATION	4.4895243872122786E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999967526143753	WITHOUT_CLASSIFICATION	3.2473856248207406E-6	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.999997501038098	WITHOUT_CLASSIFICATION	2.498961901895457E-6	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999993303426853	WITHOUT_CLASSIFICATION	6.696573145940494E-7	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999898156241	WITHOUT_CLASSIFICATION	1.0184375973523156E-8	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999988806440084	WITHOUT_CLASSIFICATION	1.1193559916480799E-6	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999992096455873	WITHOUT_CLASSIFICATION	7.903544126399822E-7	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999992096455873	WITHOUT_CLASSIFICATION	7.903544126399822E-7	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999984631251806	WITHOUT_CLASSIFICATION	1.5368748194146996E-6	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999970638631385	WITHOUT_CLASSIFICATION	2.936136861478891E-6	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999999166391611	WITHOUT_CLASSIFICATION	8.336083888749197E-8	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999219092658	WITHOUT_CLASSIFICATION	7.809073423849901E-8	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999997119440982	WITHOUT_CLASSIFICATION	2.880559017840167E-7	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999996331985249	WITHOUT_CLASSIFICATION	3.668014750904769E-7	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999998624527654	WITHOUT_CLASSIFICATION	1.3754723456410148E-7	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.999999940890262	WITHOUT_CLASSIFICATION	5.910973787003553E-8	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999995136336526	WITHOUT_CLASSIFICATION	4.863663474894157E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999995136336526	WITHOUT_CLASSIFICATION	4.863663474894157E-7	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999995114414006	WITHOUT_CLASSIFICATION	4.885585992841812E-7	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999994371852907	WITHOUT_CLASSIFICATION	5.628147092601513E-7	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999992257267637	WITHOUT_CLASSIFICATION	7.74273236336568E-7	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999993111967977	WITHOUT_CLASSIFICATION	6.888032021339872E-7	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999986943767698	WITHOUT_CLASSIFICATION	1.3056232301522883E-6	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999991201773961	WITHOUT_CLASSIFICATION	8.798226038876251E-7	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999983175547	WITHOUT_CLASSIFICATION	1.682445392458676E-9	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999991865367213	WITHOUT_CLASSIFICATION	8.134632787922181E-7	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999996932539785	WITHOUT_CLASSIFICATION	3.0674602144946685E-7	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9993610896435601	WITHOUT_CLASSIFICATION	6.389103564399556E-4	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.999959051836951	WITHOUT_CLASSIFICATION	4.094816304895405E-5	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999984161981909	WITHOUT_CLASSIFICATION	1.5838018091978058E-6	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999987502527325	WITHOUT_CLASSIFICATION	1.2497472674002914E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999896785152965	WITHOUT_CLASSIFICATION	1.0321484703495592E-5	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999896785152965	WITHOUT_CLASSIFICATION	1.0321484703495592E-5	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999987691029547	WITHOUT_CLASSIFICATION	1.230897045294287E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999983317921978	WITHOUT_CLASSIFICATION	1.6682078022451554E-6	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9997501118136282	WITHOUT_CLASSIFICATION	2.498881863718374E-4	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999999837710073	WITHOUT_CLASSIFICATION	1.6228992711781297E-8	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999817452081	WITHOUT_CLASSIFICATION	1.8254791953399387E-8	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999996606421603	WITHOUT_CLASSIFICATION	3.3935783976809836E-7	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999986886685723	WITHOUT_CLASSIFICATION	1.3113314276708965E-6	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999991721196647	WITHOUT_CLASSIFICATION	8.278803352641268E-7	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999816996699477	WITHOUT_CLASSIFICATION	1.830033005224857E-5	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.999996994425552	WITHOUT_CLASSIFICATION	3.005574447909266E-6	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999978592246459	WITHOUT_CLASSIFICATION	2.1407753541237863E-6	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999996523980457	WITHOUT_CLASSIFICATION	3.476019544210462E-7	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999974860770595	WITHOUT_CLASSIFICATION	2.5139229405842837E-6	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999998668294964	WITHOUT_CLASSIFICATION	1.3317050368787484E-7	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.999999261500551	WITHOUT_CLASSIFICATION	7.384994490178723E-7	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999972101928375	WITHOUT_CLASSIFICATION	2.789807162465659E-6	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999997557069511	WITHOUT_CLASSIFICATION	2.4429304892825697E-7	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999823561837138	WITHOUT_CLASSIFICATION	1.764381628627492E-5	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999990238002414	WITHOUT_CLASSIFICATION	9.761997586387385E-7	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999992819519268	WITHOUT_CLASSIFICATION	7.180480732345137E-7	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9999969850869777	WITHOUT_CLASSIFICATION	3.01491302225178E-6	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999980170765815	WITHOUT_CLASSIFICATION	1.982923418378288E-6	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999785195141249	WITHOUT_CLASSIFICATION	2.1480485875173216E-5	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999931319399176	WITHOUT_CLASSIFICATION	6.868060082391612E-6	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9999921783944357	WITHOUT_CLASSIFICATION	7.821605564373513E-6	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999998649369747	WITHOUT_CLASSIFICATION	1.3506302523484347E-7	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.999998518430367	WITHOUT_CLASSIFICATION	1.4815696329736477E-6	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999994022675324	WITHOUT_CLASSIFICATION	5.977324676303028E-7	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999993086218903	WITHOUT_CLASSIFICATION	6.913781095650061E-7	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999876623247738	WITHOUT_CLASSIFICATION	1.2337675226243424E-5	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999997416090339	WITHOUT_CLASSIFICATION	2.5839096604171085E-7	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999991759735826	WITHOUT_CLASSIFICATION	8.240264175017681E-7	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999993711610226	WITHOUT_CLASSIFICATION	6.288389773541421E-7	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999989636507409	WITHOUT_CLASSIFICATION	1.0363492590919177E-6	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999999748939551	WITHOUT_CLASSIFICATION	2.510604493629597E-8	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999995199205305	WITHOUT_CLASSIFICATION	4.800794694540976E-7	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999977926406891	WITHOUT_CLASSIFICATION	2.2073593109019514E-6	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999955807021954	WITHOUT_CLASSIFICATION	4.419297804606375E-6	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999942683155348	WITHOUT_CLASSIFICATION	5.7316844651532795E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.999994462170694	WITHOUT_CLASSIFICATION	5.5378293060203906E-6	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999984935295598	WITHOUT_CLASSIFICATION	1.506470440174347E-6	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999993373935292	WITHOUT_CLASSIFICATION	6.626064708061147E-7	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999912649896963	WITHOUT_CLASSIFICATION	8.735010303721938E-6	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.99999973157298	WITHOUT_CLASSIFICATION	2.6842702003527947E-7	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9999749759484703	WITHOUT_CLASSIFICATION	2.502405152966158E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999999433642655	WITHOUT_CLASSIFICATION	5.663573448198621E-8	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999997823668187	WITHOUT_CLASSIFICATION	2.1763318125302997E-7	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999981205586689	WITHOUT_CLASSIFICATION	1.8794413310156194E-6	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999990972374158	WITHOUT_CLASSIFICATION	9.027625843494694E-7	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999999241523359	WITHOUT_CLASSIFICATION	7.584766409759078E-7	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999999241523359	WITHOUT_CLASSIFICATION	7.584766409759078E-7	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999998681689161	WITHOUT_CLASSIFICATION	1.3183108390817353E-7	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999917391976788	WITHOUT_CLASSIFICATION	8.260802321174718E-6	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999981419056345	WITHOUT_CLASSIFICATION	1.8580943655079134E-6	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999999294894019	WITHOUT_CLASSIFICATION	7.051059817406197E-8	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999998934412275	WITHOUT_CLASSIFICATION	1.0655877252312228E-7	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999998506881274	WITHOUT_CLASSIFICATION	1.4931187259057026E-7	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999991206383804	WITHOUT_CLASSIFICATION	8.793616195884722E-7	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999284518357	WITHOUT_CLASSIFICATION	7.154816428761758E-8	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999449532937	WITHOUT_CLASSIFICATION	5.504670625187354E-8	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999990322217042	WITHOUT_CLASSIFICATION	9.677782957893286E-7	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999973700129277	WITHOUT_CLASSIFICATION	2.6299870722875274E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999973700129277	WITHOUT_CLASSIFICATION	2.6299870722875274E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999973700129277	WITHOUT_CLASSIFICATION	2.6299870722875274E-6	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999995727645161	WITHOUT_CLASSIFICATION	4.272354837977164E-7	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999994079985325	WITHOUT_CLASSIFICATION	5.92001467474307E-7	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999980051255514	WITHOUT_CLASSIFICATION	1.99487444860797E-6	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999993707130999	WITHOUT_CLASSIFICATION	6.292869002291842E-7	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999993707130999	WITHOUT_CLASSIFICATION	6.292869002291842E-7	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999985571232353	WITHOUT_CLASSIFICATION	1.4428767647450868E-6	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999981041957505	WITHOUT_CLASSIFICATION	1.8958042494473736E-6	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999979601645974	WITHOUT_CLASSIFICATION	2.0398354026224627E-6	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999965583204287	WITHOUT_CLASSIFICATION	3.4416795713211717E-6	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999988862485881	WITHOUT_CLASSIFICATION	1.1137514118028946E-6	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999908405832151	WITHOUT_CLASSIFICATION	9.159416784843339E-6	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999978399145717	WITHOUT_CLASSIFICATION	2.16008542829709E-6	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999998323104897	WITHOUT_CLASSIFICATION	1.6768951034535284E-7	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999983354318135	WITHOUT_CLASSIFICATION	1.6645681865108048E-6	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999998536853305	WITHOUT_CLASSIFICATION	1.463146694400427E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999998536853305	WITHOUT_CLASSIFICATION	1.463146694400427E-7	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999974088937311	WITHOUT_CLASSIFICATION	2.591106268884966E-6	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999893666034141	WITHOUT_CLASSIFICATION	1.0633396585904226E-5	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999943980335084	WITHOUT_CLASSIFICATION	5.601966491536149E-6	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999984836444454	WITHOUT_CLASSIFICATION	1.5163555544872056E-6	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999988734746335	WITHOUT_CLASSIFICATION	1.1265253664917336E-6	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999965189591764	WITHOUT_CLASSIFICATION	3.481040823505721E-6	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999974671141036	WITHOUT_CLASSIFICATION	2.5328858962552335E-6	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999986955950912	WITHOUT_CLASSIFICATION	1.304404908721346E-6	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999907141916965	WITHOUT_CLASSIFICATION	9.285808303428556E-6	TEST
// POP	WITHOUT_CLASSIFICATION	0.9999858561866413	WITHOUT_CLASSIFICATION	1.4143813358777102E-5	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999993929123068	WITHOUT_CLASSIFICATION	6.070876932396237E-7	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999902398734537	WITHOUT_CLASSIFICATION	9.760126546265794E-6	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9999893056573563	WITHOUT_CLASSIFICATION	1.0694342643688926E-5	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999995889281651	WITHOUT_CLASSIFICATION	4.1107183483505825E-7	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999903554323274	WITHOUT_CLASSIFICATION	9.644567672692634E-6	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999997659352685	WITHOUT_CLASSIFICATION	2.340647315012498E-7	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999949486469342	WITHOUT_CLASSIFICATION	5.051353065865141E-6	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999624377452949	WITHOUT_CLASSIFICATION	3.756225470516299E-5	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999983191592031	WITHOUT_CLASSIFICATION	1.6808407968494197E-6	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999994439740251	WITHOUT_CLASSIFICATION	5.560259749766932E-7	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999926516294341	WITHOUT_CLASSIFICATION	7.3483705658298616E-6	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999960480221513	WITHOUT_CLASSIFICATION	3.951977848738226E-6	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.999999347217527	WITHOUT_CLASSIFICATION	6.527824730774327E-7	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999874562377399	WITHOUT_CLASSIFICATION	1.2543762260071437E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999881040937446	WITHOUT_CLASSIFICATION	1.1895906255348806E-5	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999981734515468	WITHOUT_CLASSIFICATION	1.8265484530762079E-6	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999958513621701	WITHOUT_CLASSIFICATION	4.148637830005716E-6	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999965324205645	WITHOUT_CLASSIFICATION	3.467579435429721E-6	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999992249979872	WITHOUT_CLASSIFICATION	7.750020127629153E-7	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999847663334034	WITHOUT_CLASSIFICATION	1.5233666596650767E-5	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.99998024638689	WITHOUT_CLASSIFICATION	1.9753613110019303E-5	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999987173376927	WITHOUT_CLASSIFICATION	1.2826623072514233E-6	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999939484256545	WITHOUT_CLASSIFICATION	6.051574345527535E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.99998024638689	WITHOUT_CLASSIFICATION	1.9753613110019303E-5	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999990176793658	WITHOUT_CLASSIFICATION	9.823206341863523E-7	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999990842720264	WITHOUT_CLASSIFICATION	9.157279736301169E-7	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.999998387496979	WITHOUT_CLASSIFICATION	1.6125030209800558E-6	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999919528383323	WITHOUT_CLASSIFICATION	8.047161667800877E-6	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999997493581176	WITHOUT_CLASSIFICATION	2.5064188225889834E-7	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.999996214198967	WITHOUT_CLASSIFICATION	3.78580103291693E-6	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999969064692076	WITHOUT_CLASSIFICATION	3.0935307923006505E-6	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999985883984933	WITHOUT_CLASSIFICATION	1.4116015067068057E-6	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.999995804417836	WITHOUT_CLASSIFICATION	4.195582163954529E-6	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999895387475998	WITHOUT_CLASSIFICATION	1.0461252400150888E-5	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999668089607596	WITHOUT_CLASSIFICATION	3.319103924044227E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999851570855264	WITHOUT_CLASSIFICATION	1.4842914473667876E-5	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999959080501288	WITHOUT_CLASSIFICATION	4.091949871139494E-6	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999975347582568	WITHOUT_CLASSIFICATION	2.465241743219237E-6	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999991013058703	WITHOUT_CLASSIFICATION	8.986941296438169E-7	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999881721324756	WITHOUT_CLASSIFICATION	1.1827867524425144E-5	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999730919107277	WITHOUT_CLASSIFICATION	2.6908089272286107E-5	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999984163221942	WITHOUT_CLASSIFICATION	1.5836778058827077E-6	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999989092891683	WITHOUT_CLASSIFICATION	1.0907108316766582E-6	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999856839234689	WITHOUT_CLASSIFICATION	1.4316076531007646E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.999998923029815	WITHOUT_CLASSIFICATION	1.0769701850106298E-6	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999938944132613	WITHOUT_CLASSIFICATION	6.105586738707968E-6	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999935312410407	WITHOUT_CLASSIFICATION	6.468758959224665E-6	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999985056144473	WITHOUT_CLASSIFICATION	1.4943855527432493E-6	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999944678907067	WITHOUT_CLASSIFICATION	5.532109293309912E-6	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999990318832009	WITHOUT_CLASSIFICATION	9.68116799098106E-7	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999872266571223	WITHOUT_CLASSIFICATION	1.2773342877759593E-5	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999978004152772	WITHOUT_CLASSIFICATION	2.1995847227753074E-6	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999987512664945	WITHOUT_CLASSIFICATION	1.2487335054970026E-6	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999980019739674	WITHOUT_CLASSIFICATION	1.9980260326592887E-6	TEST
// hash	WITHOUT_CLASSIFICATION	0.9999920894196279	WITHOUT_CLASSIFICATION	7.910580372014672E-6	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999826658308868	WITHOUT_CLASSIFICATION	1.7334169113249666E-5	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999819789586334	WITHOUT_CLASSIFICATION	1.8021041366566093E-5	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999997452116306	WITHOUT_CLASSIFICATION	2.5478836939247344E-7	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999979484776074	WITHOUT_CLASSIFICATION	2.0515223926346933E-6	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999972539006841	WITHOUT_CLASSIFICATION	2.7460993158958246E-6	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999986907715418	WITHOUT_CLASSIFICATION	1.3092284581347716E-6	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9999550661653405	WITHOUT_CLASSIFICATION	4.493383465952769E-5	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999981943281316	WITHOUT_CLASSIFICATION	1.8056718683924858E-6	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999959138032083	WITHOUT_CLASSIFICATION	4.08619679171868E-6	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999958766289196	WITHOUT_CLASSIFICATION	4.123371080261278E-6	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.999997769164178	WITHOUT_CLASSIFICATION	2.230835821947808E-6	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999810124123352	WITHOUT_CLASSIFICATION	1.8987587664757714E-5	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999986497845058	WITHOUT_CLASSIFICATION	1.3502154942361912E-6	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999972412870197	WITHOUT_CLASSIFICATION	2.758712980247733E-6	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999974627126434	WITHOUT_CLASSIFICATION	2.5372873565723043E-6	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999990472720324	WITHOUT_CLASSIFICATION	9.52727967567837E-7	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999965469760451	WITHOUT_CLASSIFICATION	3.453023954871355E-6	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999755050994233	WITHOUT_CLASSIFICATION	2.4494900576582725E-5	TEST
// space	WITHOUT_CLASSIFICATION	0.9999982473593789	WITHOUT_CLASSIFICATION	1.7526406210245816E-6	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999717674862522	WITHOUT_CLASSIFICATION	2.8232513747891705E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999960457405078	WITHOUT_CLASSIFICATION	3.954259492163924E-6	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999958060566889	WITHOUT_CLASSIFICATION	4.193943311186285E-6	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999755050994233	WITHOUT_CLASSIFICATION	2.4494900576582725E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999936690271393	WITHOUT_CLASSIFICATION	6.330972860695207E-6	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999936690271393	WITHOUT_CLASSIFICATION	6.330972860695207E-6	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999799973959619	WITHOUT_CLASSIFICATION	2.0002604038049067E-5	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999977998079677	WITHOUT_CLASSIFICATION	2.200192032349254E-6	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999987786961742	WITHOUT_CLASSIFICATION	1.221303825757453E-6	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999931752556894	WITHOUT_CLASSIFICATION	6.824744310624095E-6	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.999994806502987	WITHOUT_CLASSIFICATION	5.193497013079603E-6	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999922811489648	WITHOUT_CLASSIFICATION	7.718851035255205E-6	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999986022774573	WITHOUT_CLASSIFICATION	1.397722542735284E-6	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9999401496763412	WITHOUT_CLASSIFICATION	5.9850323658869926E-5	TEST
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999999630611879	WITHOUT_CLASSIFICATION	3.693881208744079E-8	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999190609946955	WITHOUT_CLASSIFICATION	8.093900530452473E-5	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999589999063	WITHOUT_CLASSIFICATION	4.1000093554200386E-8	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999863467456	WITHOUT_CLASSIFICATION	1.3653254514794354E-8	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999903529411206	WITHOUT_CLASSIFICATION	9.647058879396165E-6	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.999990267132727	WITHOUT_CLASSIFICATION	9.732867273089712E-6	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.999999142527603	WITHOUT_CLASSIFICATION	8.574723969195232E-7	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.999998571825861	WITHOUT_CLASSIFICATION	1.4281741389770698E-6	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999996180015372	WITHOUT_CLASSIFICATION	3.819984627687817E-7	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999267249404654	WITHOUT_CLASSIFICATION	7.327505953457889E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999267249404654	WITHOUT_CLASSIFICATION	7.327505953457889E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999267249404654	WITHOUT_CLASSIFICATION	7.327505953457889E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999267249404654	WITHOUT_CLASSIFICATION	7.327505953457889E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999267249404654	WITHOUT_CLASSIFICATION	7.327505953457889E-5	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999950279169517	WITHOUT_CLASSIFICATION	4.972083048334128E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.99999791343672	WITHOUT_CLASSIFICATION	2.086563280089548E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999803579285585	WITHOUT_CLASSIFICATION	1.964207144139352E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999989734016315	WITHOUT_CLASSIFICATION	1.0265983685011988E-6	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999967007175141	WITHOUT_CLASSIFICATION	3.2992824859162027E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999999292949917	WITHOUT_CLASSIFICATION	7.07050083022903E-7	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.999980958347566	WITHOUT_CLASSIFICATION	1.904165243403216E-5	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999960520041612	WITHOUT_CLASSIFICATION	3.9479958388114225E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999993104195581	WITHOUT_CLASSIFICATION	6.895804418338324E-7	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999943291139433	WITHOUT_CLASSIFICATION	5.670886056681526E-6	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999948173168653	WITHOUT_CLASSIFICATION	5.182683134742962E-6	TEST
// line 303	WITHOUT_CLASSIFICATION	0.999995001253957	WITHOUT_CLASSIFICATION	4.998746042875708E-6	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999941095494835	WITHOUT_CLASSIFICATION	5.890450516451611E-6	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999950936124106	WITHOUT_CLASSIFICATION	4.9063875893687015E-6	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999950625133269	WITHOUT_CLASSIFICATION	4.937486673087728E-6	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999949628814659	WITHOUT_CLASSIFICATION	5.0371185340387095E-6	TEST
// line 338	WITHOUT_CLASSIFICATION	0.999995056669272	WITHOUT_CLASSIFICATION	4.9433307279122155E-6	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999942035491729	WITHOUT_CLASSIFICATION	5.796450827134964E-6	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999945620344666	WITHOUT_CLASSIFICATION	5.4379655334682674E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999941176204201	WITHOUT_CLASSIFICATION	5.882379579818279E-6	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999950723313854	WITHOUT_CLASSIFICATION	4.92766861460897E-6	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999946271391636	WITHOUT_CLASSIFICATION	5.372860836373882E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999950371117018	WITHOUT_CLASSIFICATION	4.9628882982468255E-6	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999951137138449	WITHOUT_CLASSIFICATION	4.886286155198415E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.999995603608911	WITHOUT_CLASSIFICATION	4.396391088899475E-6	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999947447613331	WITHOUT_CLASSIFICATION	5.255238666947888E-6	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999936570123013	WITHOUT_CLASSIFICATION	6.342987698855984E-6	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999945512471018	WITHOUT_CLASSIFICATION	5.448752898149156E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999946831877399	WITHOUT_CLASSIFICATION	5.31681226012982E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999951054269005	WITHOUT_CLASSIFICATION	4.894573099447424E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999945853732971	WITHOUT_CLASSIFICATION	5.414626702798446E-6	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999943729845986	WITHOUT_CLASSIFICATION	5.627015401388442E-6	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999944193654016	WITHOUT_CLASSIFICATION	5.5806345984717354E-6	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999940825951725	WITHOUT_CLASSIFICATION	5.917404827430215E-6	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999946243115184	WITHOUT_CLASSIFICATION	5.375688481653087E-6	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999942174711445	WITHOUT_CLASSIFICATION	5.782528855549932E-6	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999940468588865	WITHOUT_CLASSIFICATION	5.953141113455537E-6	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999942114165508	WITHOUT_CLASSIFICATION	5.78858344919182E-6	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999947251450121	WITHOUT_CLASSIFICATION	5.274854987813866E-6	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999942612016844	WITHOUT_CLASSIFICATION	5.738798315616031E-6	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999946218056219	WITHOUT_CLASSIFICATION	5.378194378080754E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999947164617228	WITHOUT_CLASSIFICATION	5.283538277233153E-6	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999947134016219	WITHOUT_CLASSIFICATION	5.286598378006817E-6	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999947985414767	WITHOUT_CLASSIFICATION	5.201458523325593E-6	TEST
// line 501	WITHOUT_CLASSIFICATION	0.999994196335697	WITHOUT_CLASSIFICATION	5.803664302997239E-6	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999946482513481	WITHOUT_CLASSIFICATION	5.351748651927447E-6	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999946439554195	WITHOUT_CLASSIFICATION	5.356044580564919E-6	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999951406826699	WITHOUT_CLASSIFICATION	4.859317330039897E-6	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999946603090171	WITHOUT_CLASSIFICATION	5.339690982971794E-6	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999944027130985	WITHOUT_CLASSIFICATION	5.597286901470263E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999803579285585	WITHOUT_CLASSIFICATION	1.964207144139352E-5	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999944430379961	WITHOUT_CLASSIFICATION	5.556962003793915E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999946899020562	WITHOUT_CLASSIFICATION	5.3100979438255455E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999944762445775	WITHOUT_CLASSIFICATION	5.523755422563989E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999941429067719	WITHOUT_CLASSIFICATION	5.857093228101639E-6	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999940028555151	WITHOUT_CLASSIFICATION	5.997144484997253E-6	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999940340463617	WITHOUT_CLASSIFICATION	5.965953638399293E-6	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999944100172284	WITHOUT_CLASSIFICATION	5.589982771479565E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999939785126313	WITHOUT_CLASSIFICATION	6.021487368823304E-6	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999941468697007	WITHOUT_CLASSIFICATION	5.853130299224944E-6	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999939856432017	WITHOUT_CLASSIFICATION	6.014356798278435E-6	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999946663925037	WITHOUT_CLASSIFICATION	5.333607496276445E-6	TEST
// line 587	WITHOUT_CLASSIFICATION	0.999994712419087	WITHOUT_CLASSIFICATION	5.287580912924127E-6	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999941245935305	WITHOUT_CLASSIFICATION	5.8754064695178355E-6	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999946333716775	WITHOUT_CLASSIFICATION	5.36662832247833E-6	TEST
// line 607	WITHOUT_CLASSIFICATION	0.999994628656214	WITHOUT_CLASSIFICATION	5.3713437859485385E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999951326191416	WITHOUT_CLASSIFICATION	4.8673808583327865E-6	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999948460040672	WITHOUT_CLASSIFICATION	5.153995932865871E-6	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999944599676749	WITHOUT_CLASSIFICATION	5.540032325140823E-6	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999944444434206	WITHOUT_CLASSIFICATION	5.555556579466754E-6	TEST
// line 638	WITHOUT_CLASSIFICATION	0.99999492465435	WITHOUT_CLASSIFICATION	5.075345650004336E-6	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999944783154632	WITHOUT_CLASSIFICATION	5.521684536788839E-6	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999940426795502	WITHOUT_CLASSIFICATION	5.957320449844595E-6	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999939603190164	WITHOUT_CLASSIFICATION	6.03968098361297E-6	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999944924964469	WITHOUT_CLASSIFICATION	5.507503553082412E-6	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999940098468794	WITHOUT_CLASSIFICATION	5.99015312060869E-6	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999946374663394	WITHOUT_CLASSIFICATION	5.362533660476203E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999945748861292	WITHOUT_CLASSIFICATION	5.425113870846428E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999940147563195	WITHOUT_CLASSIFICATION	5.985243680521581E-6	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999942330062382	WITHOUT_CLASSIFICATION	5.766993761669353E-6	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999944993179066	WITHOUT_CLASSIFICATION	5.500682093460671E-6	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999950647363299	WITHOUT_CLASSIFICATION	4.9352636701204105E-6	TEST
// line 726	WITHOUT_CLASSIFICATION	0.999994540451981	WITHOUT_CLASSIFICATION	5.459548018968608E-6	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999945996136921	WITHOUT_CLASSIFICATION	5.400386307873722E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999948693497207	WITHOUT_CLASSIFICATION	5.130650279230569E-6	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999943933924892	WITHOUT_CLASSIFICATION	5.60660751080317E-6	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999949629893667	WITHOUT_CLASSIFICATION	5.037010633248122E-6	TEST
// line 751	WITHOUT_CLASSIFICATION	0.99999362533612	WITHOUT_CLASSIFICATION	6.3746638799698985E-6	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999941703204035	WITHOUT_CLASSIFICATION	5.829679596522478E-6	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999940123162149	WITHOUT_CLASSIFICATION	5.987683785211212E-6	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999946226932676	WITHOUT_CLASSIFICATION	5.377306732425419E-6	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999944229751803	WITHOUT_CLASSIFICATION	5.577024819778102E-6	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999941604376424	WITHOUT_CLASSIFICATION	5.839562357621518E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999944775992368	WITHOUT_CLASSIFICATION	5.522400763170933E-6	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999939773003531	WITHOUT_CLASSIFICATION	6.0226996469591426E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999951542697968	WITHOUT_CLASSIFICATION	4.845730203199341E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999945628959693	WITHOUT_CLASSIFICATION	5.437104030671067E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999936837856459	WITHOUT_CLASSIFICATION	6.316214354044819E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999942259112958	WITHOUT_CLASSIFICATION	5.7740887041517705E-6	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999941189768049	WITHOUT_CLASSIFICATION	5.881023195204457E-6	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999954080185834	WITHOUT_CLASSIFICATION	4.59198141645034E-6	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999951223060952	WITHOUT_CLASSIFICATION	4.877693904711957E-6	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999951926865559	WITHOUT_CLASSIFICATION	4.807313444073563E-6	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999950521378449	WITHOUT_CLASSIFICATION	4.947862154999093E-6	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999954261472507	WITHOUT_CLASSIFICATION	4.573852749368503E-6	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999947053812749	WITHOUT_CLASSIFICATION	5.294618725176175E-6	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999951242245433	WITHOUT_CLASSIFICATION	4.875775456725133E-6	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999953940889821	WITHOUT_CLASSIFICATION	4.605911017864076E-6	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999948777846551	WITHOUT_CLASSIFICATION	5.122215344863165E-6	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999949281723147	WITHOUT_CLASSIFICATION	5.071827685277487E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999949715583405	WITHOUT_CLASSIFICATION	5.028441659508126E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999951236031043	WITHOUT_CLASSIFICATION	4.876396895621642E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999945971997432	WITHOUT_CLASSIFICATION	5.402800256829698E-6	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999950576537264	WITHOUT_CLASSIFICATION	4.9423462735796015E-6	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999945275376767	WITHOUT_CLASSIFICATION	5.472462323343333E-6	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999941876756988	WITHOUT_CLASSIFICATION	5.812324301085817E-6	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999945157427996	WITHOUT_CLASSIFICATION	5.484257200348548E-6	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999942509003538	WITHOUT_CLASSIFICATION	5.7490996463073895E-6	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999946764827535	WITHOUT_CLASSIFICATION	5.323517246480845E-6	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999947384733416	WITHOUT_CLASSIFICATION	5.261526658307274E-6	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999948382100716	WITHOUT_CLASSIFICATION	5.161789928469469E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999950136850162	WITHOUT_CLASSIFICATION	4.986314983780029E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999946796740895	WITHOUT_CLASSIFICATION	5.320325910470591E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999945945740022	WITHOUT_CLASSIFICATION	5.405425997859743E-6	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999949436879115	WITHOUT_CLASSIFICATION	5.056312088461791E-6	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999946953078658	WITHOUT_CLASSIFICATION	5.304692134217475E-6	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999945792555512	WITHOUT_CLASSIFICATION	5.420744448770005E-6	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999950738517681	WITHOUT_CLASSIFICATION	4.926148231979331E-6	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999948604995085	WITHOUT_CLASSIFICATION	5.139500491533173E-6	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999945505358747	WITHOUT_CLASSIFICATION	5.449464125297099E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999948988315547	WITHOUT_CLASSIFICATION	5.101168445280827E-6	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999944647640017	WITHOUT_CLASSIFICATION	5.5352359982906165E-6	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999947377527738	WITHOUT_CLASSIFICATION	5.262247226227285E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.999994112140292	WITHOUT_CLASSIFICATION	5.887859708084851E-6	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999947396043231	WITHOUT_CLASSIFICATION	5.260395676889568E-6	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999941577244578	WITHOUT_CLASSIFICATION	5.842275542221422E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999946393620724	WITHOUT_CLASSIFICATION	5.360637927509234E-6	TEST
// line 964	WITHOUT_CLASSIFICATION	0.999994185884669	WITHOUT_CLASSIFICATION	5.8141153308917235E-6	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999941695829855	WITHOUT_CLASSIFICATION	5.830417014482047E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.999994662783876	WITHOUT_CLASSIFICATION	5.337216124013593E-6	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999947393555452	WITHOUT_CLASSIFICATION	5.260644454826303E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999952002668734	WITHOUT_CLASSIFICATION	4.799733126641665E-6	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999947525244507	WITHOUT_CLASSIFICATION	5.247475549395686E-6	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999946834686285	WITHOUT_CLASSIFICATION	5.316531371494477E-6	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999940108621104	WITHOUT_CLASSIFICATION	5.989137889595656E-6	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999940834734735	WITHOUT_CLASSIFICATION	5.9165265265598285E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999950422480192	WITHOUT_CLASSIFICATION	4.9577519808736654E-6	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999954475352728	WITHOUT_CLASSIFICATION	4.5524647271148E-6	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999948499146958	WITHOUT_CLASSIFICATION	5.150085304182442E-6	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.999995232839307	WITHOUT_CLASSIFICATION	4.767160692969655E-6	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999954903046429	WITHOUT_CLASSIFICATION	4.509695357189281E-6	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999951585634322	WITHOUT_CLASSIFICATION	4.841436567675571E-6	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999948542894985	WITHOUT_CLASSIFICATION	5.145710501504376E-6	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.999995348254384	WITHOUT_CLASSIFICATION	4.6517456160596304E-6	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999937734958438	WITHOUT_CLASSIFICATION	6.226504156142964E-6	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.999995288860765	WITHOUT_CLASSIFICATION	4.711139234958296E-6	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999948002900069	WITHOUT_CLASSIFICATION	5.199709993237422E-6	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999951291825269	WITHOUT_CLASSIFICATION	4.870817473128883E-6	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999948366738326	WITHOUT_CLASSIFICATION	5.163326167418995E-6	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999948967657427	WITHOUT_CLASSIFICATION	5.103234257322459E-6	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999957126565343	WITHOUT_CLASSIFICATION	4.287343465685483E-6	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999953394377968	WITHOUT_CLASSIFICATION	4.660562203158724E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999949515443353	WITHOUT_CLASSIFICATION	5.04845566466392E-6	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999950415051464	WITHOUT_CLASSIFICATION	4.958494853588729E-6	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999951090410035	WITHOUT_CLASSIFICATION	4.890958996542469E-6	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999948601939785	WITHOUT_CLASSIFICATION	5.139806021490861E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999929838210054	WITHOUT_CLASSIFICATION	7.016178994510315E-6	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.999994433192163	WITHOUT_CLASSIFICATION	5.566807837052475E-6	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999940829872276	WITHOUT_CLASSIFICATION	5.917012772426233E-6	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.999994221708266	WITHOUT_CLASSIFICATION	5.778291733964563E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999949874865308	WITHOUT_CLASSIFICATION	5.012513469188897E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999944226660611	WITHOUT_CLASSIFICATION	5.577333938869819E-6	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999944403985496	WITHOUT_CLASSIFICATION	5.559601450542302E-6	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999945207821952	WITHOUT_CLASSIFICATION	5.479217804820931E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999947917246873	WITHOUT_CLASSIFICATION	5.208275312688933E-6	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999930035164084	WITHOUT_CLASSIFICATION	6.996483591524626E-6	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999942174311139	WITHOUT_CLASSIFICATION	5.782568886080627E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.999994703095178	WITHOUT_CLASSIFICATION	5.296904821977117E-6	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.999994247815113	WITHOUT_CLASSIFICATION	5.752184887028594E-6	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.999994176261984	WITHOUT_CLASSIFICATION	5.823738015933613E-6	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999947457566866	WITHOUT_CLASSIFICATION	5.254243313452294E-6	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.999995257007066	WITHOUT_CLASSIFICATION	4.742992933915658E-6	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999952494434645	WITHOUT_CLASSIFICATION	4.750556535541096E-6	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999945997472847	WITHOUT_CLASSIFICATION	5.400252715268637E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999951388395709	WITHOUT_CLASSIFICATION	4.8611604291638785E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999951402709163	WITHOUT_CLASSIFICATION	4.859729083725305E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999951141952227	WITHOUT_CLASSIFICATION	4.885804777302583E-6	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999946066633109	WITHOUT_CLASSIFICATION	5.393336689138897E-6	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999949337127881	WITHOUT_CLASSIFICATION	5.066287211846185E-6	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999949284772662	WITHOUT_CLASSIFICATION	5.0715227337035725E-6	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.999994966026464	WITHOUT_CLASSIFICATION	5.033973536103294E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.999994707482858	WITHOUT_CLASSIFICATION	5.292517141946799E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999935349519609	WITHOUT_CLASSIFICATION	6.4650480390665914E-6	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999948736940241	WITHOUT_CLASSIFICATION	5.126305976004948E-6	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999946323738886	WITHOUT_CLASSIFICATION	5.367626111349787E-6	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999955746702751	WITHOUT_CLASSIFICATION	4.425329724904964E-6	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999953745448558	WITHOUT_CLASSIFICATION	4.625455144138082E-6	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999951160974757	WITHOUT_CLASSIFICATION	4.883902524321811E-6	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999946230817044	WITHOUT_CLASSIFICATION	5.376918295627167E-6	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999945370764111	WITHOUT_CLASSIFICATION	5.462923588955528E-6	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999953622079141	WITHOUT_CLASSIFICATION	4.637792085902011E-6	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999950276794765	WITHOUT_CLASSIFICATION	4.972320523540481E-6	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999942848789429	WITHOUT_CLASSIFICATION	5.7151210570909825E-6	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999943504721592	WITHOUT_CLASSIFICATION	5.649527840774562E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999953649945689	WITHOUT_CLASSIFICATION	4.6350054310623895E-6	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999953505959263	WITHOUT_CLASSIFICATION	4.64940407371257E-6	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999943602313051	WITHOUT_CLASSIFICATION	5.6397686949928445E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999950417946081	WITHOUT_CLASSIFICATION	4.958205391913973E-6	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999948864656422	WITHOUT_CLASSIFICATION	5.113534357803697E-6	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999949711507389	WITHOUT_CLASSIFICATION	5.028849261191266E-6	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999945639783536	WITHOUT_CLASSIFICATION	5.43602164633943E-6	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999940301867251	WITHOUT_CLASSIFICATION	5.9698132749859104E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999950726815292	WITHOUT_CLASSIFICATION	4.927318470697526E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999949389707639	WITHOUT_CLASSIFICATION	5.061029236190124E-6	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999941230344491	WITHOUT_CLASSIFICATION	5.876965550848492E-6	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999934940746945	WITHOUT_CLASSIFICATION	6.505925305513941E-6	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.99999445098519	WITHOUT_CLASSIFICATION	5.549014809951236E-6	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999947124718556	WITHOUT_CLASSIFICATION	5.287528144351365E-6	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999944961616111	WITHOUT_CLASSIFICATION	5.503838388878348E-6	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999945688577849	WITHOUT_CLASSIFICATION	5.4311422150256015E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.999994280631235	WITHOUT_CLASSIFICATION	5.7193687650437195E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.999994691517087	WITHOUT_CLASSIFICATION	5.308482912991151E-6	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999942397249129	WITHOUT_CLASSIFICATION	5.760275087131444E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999947984701367	WITHOUT_CLASSIFICATION	5.201529863209923E-6	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999941879684465	WITHOUT_CLASSIFICATION	5.812031553462938E-6	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999952935913162	WITHOUT_CLASSIFICATION	4.7064086838487344E-6	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999947779786957	WITHOUT_CLASSIFICATION	5.222021304219985E-6	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999946844136082	WITHOUT_CLASSIFICATION	5.3155863919420275E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999943543909765	WITHOUT_CLASSIFICATION	5.645609023505128E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.999995080626254	WITHOUT_CLASSIFICATION	4.919373746020879E-6	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999946884945168	WITHOUT_CLASSIFICATION	5.3115054832362286E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.999994376551368	WITHOUT_CLASSIFICATION	5.623448631979507E-6	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999940536205106	WITHOUT_CLASSIFICATION	5.946379489306822E-6	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999944154756207	WITHOUT_CLASSIFICATION	5.584524379287749E-6	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999945767993283	WITHOUT_CLASSIFICATION	5.423200671579133E-6	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999943749024105	WITHOUT_CLASSIFICATION	5.625097589495975E-6	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999940756631642	WITHOUT_CLASSIFICATION	5.924336835833978E-6	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999940524955667	WITHOUT_CLASSIFICATION	5.947504433356595E-6	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.999994702321205	WITHOUT_CLASSIFICATION	5.297678794974446E-6	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999930425940123	WITHOUT_CLASSIFICATION	6.957405987662037E-6	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.999994253479321	WITHOUT_CLASSIFICATION	5.746520678886393E-6	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.999994089998177	WITHOUT_CLASSIFICATION	5.910001822998037E-6	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999947751409145	WITHOUT_CLASSIFICATION	5.22485908548363E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999940760090567	WITHOUT_CLASSIFICATION	5.923990943436224E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999947448635345	WITHOUT_CLASSIFICATION	5.2551364656307095E-6	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999948418187596	WITHOUT_CLASSIFICATION	5.158181240394219E-6	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999947249732233	WITHOUT_CLASSIFICATION	5.2750267767714675E-6	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999948883477485	WITHOUT_CLASSIFICATION	5.11165225150812E-6	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999944904923426	WITHOUT_CLASSIFICATION	5.509507657437045E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999946389113861	WITHOUT_CLASSIFICATION	5.361088613952595E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999949085203389	WITHOUT_CLASSIFICATION	5.091479661106042E-6	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999950033029803	WITHOUT_CLASSIFICATION	4.996697019665955E-6	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999931065412785	WITHOUT_CLASSIFICATION	6.8934587215697785E-6	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999941552579195	WITHOUT_CLASSIFICATION	5.844742080517624E-6	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999943445436461	WITHOUT_CLASSIFICATION	5.655456353902511E-6	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999940583976731	WITHOUT_CLASSIFICATION	5.9416023270215465E-6	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.999994728055569	WITHOUT_CLASSIFICATION	5.271944430952605E-6	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999928788678627	WITHOUT_CLASSIFICATION	7.121132137321012E-6	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999946646568083	WITHOUT_CLASSIFICATION	5.3353431916259345E-6	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999941075356227	WITHOUT_CLASSIFICATION	5.892464377416887E-6	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999947869916129	WITHOUT_CLASSIFICATION	5.213008387021284E-6	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999942795768614	WITHOUT_CLASSIFICATION	5.720423138559712E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999946751042674	WITHOUT_CLASSIFICATION	5.32489573254514E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999951818235554	WITHOUT_CLASSIFICATION	4.818176444595187E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999946162387878	WITHOUT_CLASSIFICATION	5.383761212243072E-6	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999944528641826	WITHOUT_CLASSIFICATION	5.5471358173444794E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999947172634324	WITHOUT_CLASSIFICATION	5.2827365676159645E-6	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999942488339892	WITHOUT_CLASSIFICATION	5.751166010730926E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999943692396064	WITHOUT_CLASSIFICATION	5.63076039358454E-6	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999940950330152	WITHOUT_CLASSIFICATION	5.90496698474993E-6	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999942409705105	WITHOUT_CLASSIFICATION	5.759029489529186E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999945537657627	WITHOUT_CLASSIFICATION	5.446234237241241E-6	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999940603629693	WITHOUT_CLASSIFICATION	5.939637030744462E-6	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999948153378445	WITHOUT_CLASSIFICATION	5.1846621554791646E-6	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999955401674175	WITHOUT_CLASSIFICATION	4.459832582496093E-6	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999951836354054	WITHOUT_CLASSIFICATION	4.816364594659965E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999949973536079	WITHOUT_CLASSIFICATION	5.002646392155556E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999955233473243	WITHOUT_CLASSIFICATION	4.476652675703395E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999961967226956	WITHOUT_CLASSIFICATION	3.8032773043234034E-6	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999769050207601	WITHOUT_CLASSIFICATION	2.3094979239898156E-5	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999509791359057	WITHOUT_CLASSIFICATION	4.902086409430421E-5	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.999958315633184	WITHOUT_CLASSIFICATION	4.168436681586001E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999988708589046	WITHOUT_CLASSIFICATION	1.1291410953146507E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999993296559428	WITHOUT_CLASSIFICATION	6.703440571934875E-7	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.999995920634569	WITHOUT_CLASSIFICATION	4.07936543098823E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999955051213655	WITHOUT_CLASSIFICATION	4.494878634572404E-6	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999761556936058	WITHOUT_CLASSIFICATION	2.3844306394198398E-5	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.999987851144028	WITHOUT_CLASSIFICATION	1.2148855972045266E-5	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999993782966339	WITHOUT_CLASSIFICATION	6.217033660536115E-7	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999945609991067	WITHOUT_CLASSIFICATION	5.439000893238051E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999960205495159	WITHOUT_CLASSIFICATION	3.979450484124003E-6	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999765428598016	WITHOUT_CLASSIFICATION	2.345714019839904E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999968242733192	WITHOUT_CLASSIFICATION	3.17572668099162E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999971079827645	WITHOUT_CLASSIFICATION	2.8920172355431183E-6	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999905251072406	WITHOUT_CLASSIFICATION	9.474892759412465E-6	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999993026836211	WITHOUT_CLASSIFICATION	6.973163787375033E-7	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999991957687977	WITHOUT_CLASSIFICATION	8.042312023724867E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999431560515	WITHOUT_CLASSIFICATION	5.684394849917315E-7	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999990263463889	WITHOUT_CLASSIFICATION	9.73653611007655E-7	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999960459167018	WITHOUT_CLASSIFICATION	3.954083298184909E-6	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999998144128974	WITHOUT_CLASSIFICATION	1.8558710253536144E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998598197957	WITHOUT_CLASSIFICATION	1.4018020438415446E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998598197957	WITHOUT_CLASSIFICATION	1.4018020438415446E-7	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999990850527128	WITHOUT_CLASSIFICATION	9.149472871435432E-7	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.999999675263259	WITHOUT_CLASSIFICATION	3.2473674114375236E-7	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999860451549604	WITHOUT_CLASSIFICATION	1.3954845039698148E-5	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999984250310677	WITHOUT_CLASSIFICATION	1.5749689323720068E-6	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999918200670386	WITHOUT_CLASSIFICATION	8.179932961438679E-6	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999996526231182	WITHOUT_CLASSIFICATION	3.473768818294309E-7	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999998756107464	WITHOUT_CLASSIFICATION	1.2438925351913276E-7	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999992655245206	WITHOUT_CLASSIFICATION	7.344754795174053E-7	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999998621357277	WITHOUT_CLASSIFICATION	1.3786427240756356E-7	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.999999342424998	WITHOUT_CLASSIFICATION	6.57575002104581E-7	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999901695516844	WITHOUT_CLASSIFICATION	9.830448315603896E-6	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9997265809211068	WITHOUT_CLASSIFICATION	2.7341907889321266E-4	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999993199538129	WITHOUT_CLASSIFICATION	6.800461871352956E-7	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999864008479524	WITHOUT_CLASSIFICATION	1.3599152047681513E-5	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999791351148845	WITHOUT_CLASSIFICATION	2.086488511562083E-5	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999841700450801	WITHOUT_CLASSIFICATION	1.582995491991096E-5	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999985072097145	WITHOUT_CLASSIFICATION	1.492790285449677E-6	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999966764482634	WITHOUT_CLASSIFICATION	3.323551736599112E-6	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.999999828188127	WITHOUT_CLASSIFICATION	1.7181187296019328E-7	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999989761392188	WITHOUT_CLASSIFICATION	1.0238607811707212E-6	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999009655718	WITHOUT_CLASSIFICATION	9.903442813341802E-8	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999864962173003	WITHOUT_CLASSIFICATION	1.3503782699795702E-5	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.999994025948821	WITHOUT_CLASSIFICATION	5.9740511789578865E-6	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999988733417197	WITHOUT_CLASSIFICATION	1.1266582803389125E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.999994025948821	WITHOUT_CLASSIFICATION	5.9740511789578865E-6	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999988179810464	WITHOUT_CLASSIFICATION	1.1820189535667856E-6	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999978622735778	WITHOUT_CLASSIFICATION	2.137726422128638E-6	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999994807403054	WITHOUT_CLASSIFICATION	5.192596945575644E-7	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999951360798298	WITHOUT_CLASSIFICATION	4.863920170230038E-6	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.999996323669641	WITHOUT_CLASSIFICATION	3.6763303591065266E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.999985173652463	WITHOUT_CLASSIFICATION	1.4826347537042346E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.999985173652463	WITHOUT_CLASSIFICATION	1.4826347537042346E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.999985173652463	WITHOUT_CLASSIFICATION	1.4826347537042346E-5	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999950685968921	WITHOUT_CLASSIFICATION	4.931403107806399E-6	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999969981542656	WITHOUT_CLASSIFICATION	3.0018457343853236E-6	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999998843953076	WITHOUT_CLASSIFICATION	1.1560469236805358E-7	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999312095378026	WITHOUT_CLASSIFICATION	6.879046219750254E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999312095378026	WITHOUT_CLASSIFICATION	6.879046219750254E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999312095378026	WITHOUT_CLASSIFICATION	6.879046219750254E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999312095378026	WITHOUT_CLASSIFICATION	6.879046219750254E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999312095378026	WITHOUT_CLASSIFICATION	6.879046219750254E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999312095378026	WITHOUT_CLASSIFICATION	6.879046219750254E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999690886500588	WITHOUT_CLASSIFICATION	3.0911349941181416E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999690886500588	WITHOUT_CLASSIFICATION	3.0911349941181416E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999690886500588	WITHOUT_CLASSIFICATION	3.0911349941181416E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999690886500588	WITHOUT_CLASSIFICATION	3.0911349941181416E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999690886500588	WITHOUT_CLASSIFICATION	3.0911349941181416E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998972194558591	WITHOUT_CLASSIFICATION	1.0278054414097973E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998972194558591	WITHOUT_CLASSIFICATION	1.0278054414097973E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998972194558591	WITHOUT_CLASSIFICATION	1.0278054414097973E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998972194558591	WITHOUT_CLASSIFICATION	1.0278054414097973E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998972194558591	WITHOUT_CLASSIFICATION	1.0278054414097973E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999250995810405	WITHOUT_CLASSIFICATION	7.490041895954599E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999250995810405	WITHOUT_CLASSIFICATION	7.490041895954599E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999250995810405	WITHOUT_CLASSIFICATION	7.490041895954599E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999250995810405	WITHOUT_CLASSIFICATION	7.490041895954599E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999250995810405	WITHOUT_CLASSIFICATION	7.490041895954599E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999250995810405	WITHOUT_CLASSIFICATION	7.490041895954599E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999793645990516	WITHOUT_CLASSIFICATION	2.0635400948473415E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999793645990516	WITHOUT_CLASSIFICATION	2.0635400948473415E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999793645990516	WITHOUT_CLASSIFICATION	2.0635400948473415E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999793645990516	WITHOUT_CLASSIFICATION	2.0635400948473415E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999793645990516	WITHOUT_CLASSIFICATION	2.0635400948473415E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999980080426501	WITHOUT_CLASSIFICATION	1.9919573499031705E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999980080426501	WITHOUT_CLASSIFICATION	1.9919573499031705E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999980080426501	WITHOUT_CLASSIFICATION	1.9919573499031705E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999980080426501	WITHOUT_CLASSIFICATION	1.9919573499031705E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999980080426501	WITHOUT_CLASSIFICATION	1.9919573499031705E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999803579285585	WITHOUT_CLASSIFICATION	1.964207144139352E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999803579285585	WITHOUT_CLASSIFICATION	1.964207144139352E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999803579285585	WITHOUT_CLASSIFICATION	1.964207144139352E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999803579285585	WITHOUT_CLASSIFICATION	1.964207144139352E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999803579285585	WITHOUT_CLASSIFICATION	1.964207144139352E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999989734016315	WITHOUT_CLASSIFICATION	1.0265983685011988E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999999292949917	WITHOUT_CLASSIFICATION	7.07050083022903E-7	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.999980958347566	WITHOUT_CLASSIFICATION	1.904165243403216E-5	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999960520041612	WITHOUT_CLASSIFICATION	3.9479958388114225E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999993104195581	WITHOUT_CLASSIFICATION	6.895804418338324E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999946191026359	WITHOUT_CLASSIFICATION	5.380897364061507E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999941176204201	WITHOUT_CLASSIFICATION	5.882379579818279E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.999995603608911	WITHOUT_CLASSIFICATION	4.396391088899475E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999946831877399	WITHOUT_CLASSIFICATION	5.31681226012982E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999951054269005	WITHOUT_CLASSIFICATION	4.894573099447424E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999948933586587	WITHOUT_CLASSIFICATION	5.106641341318785E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999945853732971	WITHOUT_CLASSIFICATION	5.414626702798446E-6	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999956831805962	WITHOUT_CLASSIFICATION	4.31681940378233E-6	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999954879594959	WITHOUT_CLASSIFICATION	4.512040504173785E-6	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999947564242995	WITHOUT_CLASSIFICATION	5.243575700504839E-6	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999950446479842	WITHOUT_CLASSIFICATION	4.95535201587929E-6	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999950243636987	WITHOUT_CLASSIFICATION	4.97563630135014E-6	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999940868346111	WITHOUT_CLASSIFICATION	5.913165388856275E-6	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999944487677842	WITHOUT_CLASSIFICATION	5.551232215738429E-6	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999945342606248	WITHOUT_CLASSIFICATION	5.465739375213726E-6	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999950634593272	WITHOUT_CLASSIFICATION	4.9365406728430725E-6	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999946257328232	WITHOUT_CLASSIFICATION	5.374267176840719E-6	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999951415539041	WITHOUT_CLASSIFICATION	4.85844609587769E-6	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999946205217699	WITHOUT_CLASSIFICATION	5.37947823004242E-6	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999950843765193	WITHOUT_CLASSIFICATION	4.915623480603774E-6	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999945188823673	WITHOUT_CLASSIFICATION	5.481117632651929E-6	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999950079682842	WITHOUT_CLASSIFICATION	4.9920317157845945E-6	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999950414951316	WITHOUT_CLASSIFICATION	4.95850486828716E-6	TEST
// line 397	WITHOUT_CLASSIFICATION	0.999994711165073	WITHOUT_CLASSIFICATION	5.288834927052068E-6	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999946440515387	WITHOUT_CLASSIFICATION	5.35594846126746E-6	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999949210138233	WITHOUT_CLASSIFICATION	5.078986176703957E-6	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999944887002182	WITHOUT_CLASSIFICATION	5.5112997817958485E-6	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999940676189297	WITHOUT_CLASSIFICATION	5.932381070256378E-6	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999946371105656	WITHOUT_CLASSIFICATION	5.362889434427884E-6	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999940479061898	WITHOUT_CLASSIFICATION	5.9520938102202865E-6	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999942300951263	WITHOUT_CLASSIFICATION	5.769904873666971E-6	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999940545890037	WITHOUT_CLASSIFICATION	5.9454109962824935E-6	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999942203086618	WITHOUT_CLASSIFICATION	5.779691338142927E-6	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999947458539888	WITHOUT_CLASSIFICATION	5.254146011206262E-6	TEST
// line 481	WITHOUT_CLASSIFICATION	0.999994292860002	WITHOUT_CLASSIFICATION	5.7071399980756074E-6	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999946099916086	WITHOUT_CLASSIFICATION	5.3900083913472705E-6	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999941472163929	WITHOUT_CLASSIFICATION	5.8527836070143534E-6	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999944028109011	WITHOUT_CLASSIFICATION	5.597189098856006E-6	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999948943493271	WITHOUT_CLASSIFICATION	5.105650672998722E-6	TEST
// line 506	WITHOUT_CLASSIFICATION	0.99999457668781	WITHOUT_CLASSIFICATION	5.4233121900786205E-6	TEST
// line 509	WITHOUT_CLASSIFICATION	0.999994654930323	WITHOUT_CLASSIFICATION	5.345069677038229E-6	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999949853502785	WITHOUT_CLASSIFICATION	5.014649721459437E-6	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999941136478256	WITHOUT_CLASSIFICATION	5.886352174389144E-6	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999945014109715	WITHOUT_CLASSIFICATION	5.498589028488383E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999946899020562	WITHOUT_CLASSIFICATION	5.3100979438255455E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999944762445775	WITHOUT_CLASSIFICATION	5.523755422563989E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999941429067719	WITHOUT_CLASSIFICATION	5.857093228101639E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999939785126313	WITHOUT_CLASSIFICATION	6.021487368823304E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999951326191416	WITHOUT_CLASSIFICATION	4.8673808583327865E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999945748861292	WITHOUT_CLASSIFICATION	5.425113870846428E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999936371326107	WITHOUT_CLASSIFICATION	6.362867389329386E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999940147563195	WITHOUT_CLASSIFICATION	5.985243680521581E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999944775992368	WITHOUT_CLASSIFICATION	5.522400763170933E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999951542697968	WITHOUT_CLASSIFICATION	4.845730203199341E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999946585759338	WITHOUT_CLASSIFICATION	5.3414240662052726E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999945628959693	WITHOUT_CLASSIFICATION	5.437104030671067E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999936837856459	WITHOUT_CLASSIFICATION	6.316214354044819E-6	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999944577612043	WITHOUT_CLASSIFICATION	5.54223879570255E-6	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999942510287015	WITHOUT_CLASSIFICATION	5.7489712984382584E-6	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999944416572911	WITHOUT_CLASSIFICATION	5.558342708901478E-6	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999945337533817	WITHOUT_CLASSIFICATION	5.466246618399126E-6	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999936011911851	WITHOUT_CLASSIFICATION	6.3988088148428745E-6	TEST
// line 571	WITHOUT_CLASSIFICATION	0.999993634612417	WITHOUT_CLASSIFICATION	6.365387582926748E-6	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999941826041795	WITHOUT_CLASSIFICATION	5.817395820484085E-6	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999941744552211	WITHOUT_CLASSIFICATION	5.8255447789244805E-6	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999946399691777	WITHOUT_CLASSIFICATION	5.3600308223528245E-6	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999947025700137	WITHOUT_CLASSIFICATION	5.297429986318533E-6	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999945929950784	WITHOUT_CLASSIFICATION	5.407004921530589E-6	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999940029696296	WITHOUT_CLASSIFICATION	5.997030370356187E-6	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999946800706574	WITHOUT_CLASSIFICATION	5.319929342492863E-6	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999948058022504	WITHOUT_CLASSIFICATION	5.194197749529549E-6	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999945481715153	WITHOUT_CLASSIFICATION	5.45182848467822E-6	TEST
// line 630	WITHOUT_CLASSIFICATION	0.999994903950559	WITHOUT_CLASSIFICATION	5.096049441027476E-6	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999943327039733	WITHOUT_CLASSIFICATION	5.667296026691651E-6	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999944364565323	WITHOUT_CLASSIFICATION	5.563543467640015E-6	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999946886923642	WITHOUT_CLASSIFICATION	5.311307635769106E-6	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999941377784695	WITHOUT_CLASSIFICATION	5.862221530515312E-6	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999934605130251	WITHOUT_CLASSIFICATION	6.539486974891409E-6	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999938458170603	WITHOUT_CLASSIFICATION	6.1541829397546466E-6	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999946587254495	WITHOUT_CLASSIFICATION	5.3412745504948445E-6	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999951151138808	WITHOUT_CLASSIFICATION	4.884886119194719E-6	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999945189387484	WITHOUT_CLASSIFICATION	5.48106125170793E-6	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999940178789212	WITHOUT_CLASSIFICATION	5.982121078865195E-6	TEST
// line 706	WITHOUT_CLASSIFICATION	0.999994610947275	WITHOUT_CLASSIFICATION	5.389052724939553E-6	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999951146145382	WITHOUT_CLASSIFICATION	4.885385461933455E-6	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999944597747535	WITHOUT_CLASSIFICATION	5.540225246451674E-6	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999943326812532	WITHOUT_CLASSIFICATION	5.6673187468875245E-6	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999944366956214	WITHOUT_CLASSIFICATION	5.563304378586972E-6	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999940613411231	WITHOUT_CLASSIFICATION	5.938658876928795E-6	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999947802271077	WITHOUT_CLASSIFICATION	5.21977289226075E-6	TEST
// line 808	WITHOUT_CLASSIFICATION	0.999995021944978	WITHOUT_CLASSIFICATION	4.978055021865588E-6	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999941724352187	WITHOUT_CLASSIFICATION	5.8275647813069604E-6	TEST
// line 817	WITHOUT_CLASSIFICATION	0.999995115228406	WITHOUT_CLASSIFICATION	4.884771593936132E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999951236031043	WITHOUT_CLASSIFICATION	4.876396895621642E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999946913383877	WITHOUT_CLASSIFICATION	5.308661612334694E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999945971997432	WITHOUT_CLASSIFICATION	5.402800256829698E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999950136850162	WITHOUT_CLASSIFICATION	4.986314983780029E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999945945740022	WITHOUT_CLASSIFICATION	5.405425997859743E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999948988315547	WITHOUT_CLASSIFICATION	5.101168445280827E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.999994112140292	WITHOUT_CLASSIFICATION	5.887859708084851E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999946393620724	WITHOUT_CLASSIFICATION	5.360637927509234E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999952002668734	WITHOUT_CLASSIFICATION	4.799733126641665E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999950422480192	WITHOUT_CLASSIFICATION	4.9577519808736654E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999955690468526	WITHOUT_CLASSIFICATION	4.430953147409563E-6	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999955291193806	WITHOUT_CLASSIFICATION	4.47088061936922E-6	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999950541642031	WITHOUT_CLASSIFICATION	4.945835796931975E-6	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999951079980799	WITHOUT_CLASSIFICATION	4.892001920105116E-6	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999953257866138	WITHOUT_CLASSIFICATION	4.674213386188383E-6	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999941978070712	WITHOUT_CLASSIFICATION	5.802192928823557E-6	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999946836091831	WITHOUT_CLASSIFICATION	5.316390816901624E-6	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999951049237039	WITHOUT_CLASSIFICATION	4.895076296094408E-6	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999949231128654	WITHOUT_CLASSIFICATION	5.076887134670719E-6	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999945312151728	WITHOUT_CLASSIFICATION	5.468784827235286E-6	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999946843664247	WITHOUT_CLASSIFICATION	5.315633575346285E-6	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999946640149389	WITHOUT_CLASSIFICATION	5.335985061242709E-6	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999946012417583	WITHOUT_CLASSIFICATION	5.398758241767017E-6	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999946041287788	WITHOUT_CLASSIFICATION	5.395871221261906E-6	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999951675038543	WITHOUT_CLASSIFICATION	4.832496145745888E-6	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999950662253111	WITHOUT_CLASSIFICATION	4.9337746889104585E-6	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999945615235494	WITHOUT_CLASSIFICATION	5.438476450702373E-6	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999950290101596	WITHOUT_CLASSIFICATION	4.970989840362303E-6	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999946072219471	WITHOUT_CLASSIFICATION	5.392778052898509E-6	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999944991641508	WITHOUT_CLASSIFICATION	5.500835849205722E-6	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999950639971321	WITHOUT_CLASSIFICATION	4.936002867786867E-6	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999937239969521	WITHOUT_CLASSIFICATION	6.276003047966017E-6	TEST
// line 947	WITHOUT_CLASSIFICATION	0.999994248047884	WITHOUT_CLASSIFICATION	5.751952116140269E-6	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999936432545763	WITHOUT_CLASSIFICATION	6.35674542375035E-6	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999939977775014	WITHOUT_CLASSIFICATION	6.002222498537136E-6	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999941173638803	WITHOUT_CLASSIFICATION	5.8826361197257265E-6	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999940190143181	WITHOUT_CLASSIFICATION	5.98098568192424E-6	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999940989518725	WITHOUT_CLASSIFICATION	5.901048127468438E-6	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999949828525287	WITHOUT_CLASSIFICATION	5.017147471310605E-6	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999950610366337	WITHOUT_CLASSIFICATION	4.938963366307905E-6	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.999995454727648	WITHOUT_CLASSIFICATION	4.5452723520080815E-6	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999950679840272	WITHOUT_CLASSIFICATION	4.93201597290372E-6	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999938591723626	WITHOUT_CLASSIFICATION	6.140827637396439E-6	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999951593830909	WITHOUT_CLASSIFICATION	4.840616909083357E-6	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999948538170752	WITHOUT_CLASSIFICATION	5.146182924785793E-6	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999948438820059	WITHOUT_CLASSIFICATION	5.156117994151606E-6	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999947323071886	WITHOUT_CLASSIFICATION	5.267692811504206E-6	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999948426644318	WITHOUT_CLASSIFICATION	5.15733556818406E-6	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999948245409984	WITHOUT_CLASSIFICATION	5.1754590015360334E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999947861597807	WITHOUT_CLASSIFICATION	5.213840219341462E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999929838210054	WITHOUT_CLASSIFICATION	7.016178994510315E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999945319057095	WITHOUT_CLASSIFICATION	5.468094290382248E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999949874865308	WITHOUT_CLASSIFICATION	5.012513469188897E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999947917246873	WITHOUT_CLASSIFICATION	5.208275312688933E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.999994703095178	WITHOUT_CLASSIFICATION	5.296904821977117E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999951388395709	WITHOUT_CLASSIFICATION	4.8611604291638785E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999951402709163	WITHOUT_CLASSIFICATION	4.859729083725305E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.999994707482858	WITHOUT_CLASSIFICATION	5.292517141946799E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999935349519609	WITHOUT_CLASSIFICATION	6.4650480390665914E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999935061387972	WITHOUT_CLASSIFICATION	6.493861202786311E-6	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999953307510513	WITHOUT_CLASSIFICATION	4.669248948744062E-6	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999953456517905	WITHOUT_CLASSIFICATION	4.654348209506827E-6	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999953481843452	WITHOUT_CLASSIFICATION	4.6518156547605554E-6	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999948150297451	WITHOUT_CLASSIFICATION	5.184970254880561E-6	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999951764849209	WITHOUT_CLASSIFICATION	4.823515079084635E-6	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999941952215801	WITHOUT_CLASSIFICATION	5.804778419965861E-6	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999941191309341	WITHOUT_CLASSIFICATION	5.8808690660543585E-6	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.999995141919747	WITHOUT_CLASSIFICATION	4.858080253052772E-6	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999946598283111	WITHOUT_CLASSIFICATION	5.340171688877835E-6	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999945830519228	WITHOUT_CLASSIFICATION	5.416948077264213E-6	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999950052199239	WITHOUT_CLASSIFICATION	4.994780076063874E-6	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999941686883053	WITHOUT_CLASSIFICATION	5.83131169465358E-6	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999943782428745	WITHOUT_CLASSIFICATION	5.621757125510108E-6	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999940295924175	WITHOUT_CLASSIFICATION	5.970407582540928E-6	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.999994626442033	WITHOUT_CLASSIFICATION	5.373557966953194E-6	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999945190168102	WITHOUT_CLASSIFICATION	5.480983189687983E-6	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.999994259061217	WITHOUT_CLASSIFICATION	5.740938782981357E-6	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999956286528844	WITHOUT_CLASSIFICATION	4.371347115632752E-6	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999947728025004	WITHOUT_CLASSIFICATION	5.227197499678069E-6	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.99999423803594	WITHOUT_CLASSIFICATION	5.761964059930153E-6	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999948244853614	WITHOUT_CLASSIFICATION	5.175514638614327E-6	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999945691268616	WITHOUT_CLASSIFICATION	5.43087313844243E-6	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999938735415149	WITHOUT_CLASSIFICATION	6.1264584849675025E-6	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999948820951202	WITHOUT_CLASSIFICATION	5.117904879848049E-6	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999945859391888	WITHOUT_CLASSIFICATION	5.414060811186206E-6	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999946551956951	WITHOUT_CLASSIFICATION	5.344804304932375E-6	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999951068453251	WITHOUT_CLASSIFICATION	4.893154674908893E-6	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999946391432549	WITHOUT_CLASSIFICATION	5.3608567450901725E-6	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999951096399491	WITHOUT_CLASSIFICATION	4.8903600510290226E-6	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999949209343647	WITHOUT_CLASSIFICATION	5.0790656352740314E-6	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999946139887391	WITHOUT_CLASSIFICATION	5.386011260791946E-6	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999946765548008	WITHOUT_CLASSIFICATION	5.3234451991379E-6	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999951048247387	WITHOUT_CLASSIFICATION	4.8951752612760464E-6	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999951557426464	WITHOUT_CLASSIFICATION	4.844257353634772E-6	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.999994564703355	WITHOUT_CLASSIFICATION	5.4352966450165E-6	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999946089299973	WITHOUT_CLASSIFICATION	5.3910700028248925E-6	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999951314306146	WITHOUT_CLASSIFICATION	4.8685693855207005E-6	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999949420079921	WITHOUT_CLASSIFICATION	5.057992007927179E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999950417946081	WITHOUT_CLASSIFICATION	4.958205391913973E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999950726815292	WITHOUT_CLASSIFICATION	4.927318470697526E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999949389707639	WITHOUT_CLASSIFICATION	5.061029236190124E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999947109103571	WITHOUT_CLASSIFICATION	5.289089642986615E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.999994691517087	WITHOUT_CLASSIFICATION	5.308482912991151E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999947984701367	WITHOUT_CLASSIFICATION	5.201529863209923E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999943543909765	WITHOUT_CLASSIFICATION	5.645609023505128E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.999995080626254	WITHOUT_CLASSIFICATION	4.919373746020879E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999940760090567	WITHOUT_CLASSIFICATION	5.923990943436224E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999947448635345	WITHOUT_CLASSIFICATION	5.2551364656307095E-6	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.999995423328727	WITHOUT_CLASSIFICATION	4.576671272945428E-6	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999933460180706	WITHOUT_CLASSIFICATION	6.6539819294296525E-6	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.999994422506213	WITHOUT_CLASSIFICATION	5.577493786947966E-6	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999948019365581	WITHOUT_CLASSIFICATION	5.19806344197529E-6	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999948669443063	WITHOUT_CLASSIFICATION	5.133055693658617E-6	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999949225711818	WITHOUT_CLASSIFICATION	5.077428818121832E-6	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999944384970811	WITHOUT_CLASSIFICATION	5.561502918832763E-6	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999949620965101	WITHOUT_CLASSIFICATION	5.037903489968154E-6	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999945153821437	WITHOUT_CLASSIFICATION	5.48461785635096E-6	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999945100640917	WITHOUT_CLASSIFICATION	5.489935908346336E-6	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999945114772449	WITHOUT_CLASSIFICATION	5.488522755028049E-6	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999943670772506	WITHOUT_CLASSIFICATION	5.63292274933218E-6	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999945245737388	WITHOUT_CLASSIFICATION	5.475426261185616E-6	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999944211756246	WITHOUT_CLASSIFICATION	5.5788243753214E-6	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999944093304595	WITHOUT_CLASSIFICATION	5.590669540536095E-6	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999949388623586	WITHOUT_CLASSIFICATION	5.061137641344585E-6	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999944124330439	WITHOUT_CLASSIFICATION	5.58756695614588E-6	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999937878680278	WITHOUT_CLASSIFICATION	6.212131972127979E-6	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999947536476229	WITHOUT_CLASSIFICATION	5.246352377133413E-6	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.999994197961017	WITHOUT_CLASSIFICATION	5.802038983034698E-6	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.999994571009029	WITHOUT_CLASSIFICATION	5.428990970912855E-6	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999947141317723	WITHOUT_CLASSIFICATION	5.285868227697904E-6	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999950644865016	WITHOUT_CLASSIFICATION	4.935513498404902E-6	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.999994511246463	WITHOUT_CLASSIFICATION	5.488753537065495E-6	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.999994565096791	WITHOUT_CLASSIFICATION	5.434903209020023E-6	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.999994625659846	WITHOUT_CLASSIFICATION	5.374340154022712E-6	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999941492555633	WITHOUT_CLASSIFICATION	5.850744436648771E-6	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999947867962916	WITHOUT_CLASSIFICATION	5.213203708310939E-6	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999941285585245	WITHOUT_CLASSIFICATION	5.871441475513798E-6	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999948502271139	WITHOUT_CLASSIFICATION	5.149772886140555E-6	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999947466304849	WITHOUT_CLASSIFICATION	5.253369515001774E-6	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999947112047813	WITHOUT_CLASSIFICATION	5.28879521867444E-6	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999941631676117	WITHOUT_CLASSIFICATION	5.836832388256802E-6	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999949039120952	WITHOUT_CLASSIFICATION	5.096087904781934E-6	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999949987840034	WITHOUT_CLASSIFICATION	5.0012159965043985E-6	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999946719256622	WITHOUT_CLASSIFICATION	5.328074337800309E-6	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.999994093580896	WITHOUT_CLASSIFICATION	5.906419104080053E-6	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999945075168823	WITHOUT_CLASSIFICATION	5.492483117582936E-6	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999930601265998	WITHOUT_CLASSIFICATION	6.939873400179724E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999940347843341	WITHOUT_CLASSIFICATION	5.965215665875499E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999946389113861	WITHOUT_CLASSIFICATION	5.361088613952595E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999949085203389	WITHOUT_CLASSIFICATION	5.091479661106042E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999946751042674	WITHOUT_CLASSIFICATION	5.32489573254514E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999940993383187	WITHOUT_CLASSIFICATION	5.900661681220871E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999946162387878	WITHOUT_CLASSIFICATION	5.383761212243072E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999947172634324	WITHOUT_CLASSIFICATION	5.2827365676159645E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999943692396064	WITHOUT_CLASSIFICATION	5.63076039358454E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999949973536079	WITHOUT_CLASSIFICATION	5.002646392155556E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999955233473243	WITHOUT_CLASSIFICATION	4.476652675703395E-6	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999947137479498	WITHOUT_CLASSIFICATION	5.286252050153759E-6	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999946999356372	WITHOUT_CLASSIFICATION	5.300064362866356E-6	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.999994528882333	WITHOUT_CLASSIFICATION	5.471117667069439E-6	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999945803536165	WITHOUT_CLASSIFICATION	5.4196463834777215E-6	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.99999438397779	WITHOUT_CLASSIFICATION	5.6160222100646125E-6	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.999994522670338	WITHOUT_CLASSIFICATION	5.477329662034798E-6	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999942903052615	WITHOUT_CLASSIFICATION	5.709694738443928E-6	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999930364856002	WITHOUT_CLASSIFICATION	6.96351439976049E-6	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999942335690224	WITHOUT_CLASSIFICATION	5.7664309776133946E-6	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.999994579816132	WITHOUT_CLASSIFICATION	5.4201838679320075E-6	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999943785055576	WITHOUT_CLASSIFICATION	5.621494442338455E-6	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999947471088264	WITHOUT_CLASSIFICATION	5.252891173619963E-6	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999951174774899	WITHOUT_CLASSIFICATION	4.882522510027411E-6	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999930141936465	WITHOUT_CLASSIFICATION	6.985806353595891E-6	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999942077932051	WITHOUT_CLASSIFICATION	5.792206794890065E-6	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999945651262381	WITHOUT_CLASSIFICATION	5.434873761869588E-6	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999934248865578	WITHOUT_CLASSIFICATION	6.5751134421585826E-6	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999945622761827	WITHOUT_CLASSIFICATION	5.437723817374805E-6	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999950322638602	WITHOUT_CLASSIFICATION	4.967736139879401E-6	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999942633563064	WITHOUT_CLASSIFICATION	5.736643693588304E-6	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999942222361794	WITHOUT_CLASSIFICATION	5.777763820554092E-6	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999947336705061	WITHOUT_CLASSIFICATION	5.266329493950668E-6	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999930326117504	WITHOUT_CLASSIFICATION	6.967388249593441E-6	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999940871498649	WITHOUT_CLASSIFICATION	5.912850135117075E-6	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999940742412409	WITHOUT_CLASSIFICATION	5.925758759196972E-6	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999952241436236	WITHOUT_CLASSIFICATION	4.775856376365641E-6	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999947355974645	WITHOUT_CLASSIFICATION	5.264402535443608E-6	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999946412971655	WITHOUT_CLASSIFICATION	5.358702834534713E-6	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999931113990581	WITHOUT_CLASSIFICATION	6.888600941839368E-6	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999942032951253	WITHOUT_CLASSIFICATION	5.796704874721601E-6	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999957919300874	WITHOUT_CLASSIFICATION	4.208069912631883E-6	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999958860503899	WITHOUT_CLASSIFICATION	4.113949610090216E-6	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999956300808486	WITHOUT_CLASSIFICATION	4.369919151324807E-6	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999956931346365	WITHOUT_CLASSIFICATION	4.306865363459467E-6	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999950905117635	WITHOUT_CLASSIFICATION	4.909488236428557E-6	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999955654656459	WITHOUT_CLASSIFICATION	4.434534353974914E-6	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999954773285208	WITHOUT_CLASSIFICATION	4.522671479269034E-6	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999945559235874	WITHOUT_CLASSIFICATION	5.444076412554379E-6	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999952932358359	WITHOUT_CLASSIFICATION	4.706764164147465E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.999995920634569	WITHOUT_CLASSIFICATION	4.07936543098823E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999955051213655	WITHOUT_CLASSIFICATION	4.494878634572404E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999960205495159	WITHOUT_CLASSIFICATION	3.979450484124003E-6	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999968242733192	WITHOUT_CLASSIFICATION	3.17572668099162E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999971079827645	WITHOUT_CLASSIFICATION	2.8920172355431183E-6	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999905251072406	WITHOUT_CLASSIFICATION	9.474892759412465E-6	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999993026836211	WITHOUT_CLASSIFICATION	6.973163787375033E-7	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999772278426718	WITHOUT_CLASSIFICATION	2.2772157328195663E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999952421369499	WITHOUT_CLASSIFICATION	4.757863050103723E-6	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999952336426775	WITHOUT_CLASSIFICATION	4.7663573224737665E-6	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999956128294956	WITHOUT_CLASSIFICATION	4.3871705044600675E-6	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999951547168484	WITHOUT_CLASSIFICATION	4.845283151659313E-6	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999950954038764	WITHOUT_CLASSIFICATION	4.904596123562168E-6	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999951377627448	WITHOUT_CLASSIFICATION	4.862237255201807E-6	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999951628177212	WITHOUT_CLASSIFICATION	4.83718227887154E-6	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999947243468734	WITHOUT_CLASSIFICATION	5.275653126621069E-6	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999930653967268	WITHOUT_CLASSIFICATION	6.934603273255498E-6	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999951659142527	WITHOUT_CLASSIFICATION	4.834085747178003E-6	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999945298603824	WITHOUT_CLASSIFICATION	5.47013961760709E-6	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999950855930286	WITHOUT_CLASSIFICATION	4.914406971442219E-6	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999947535785743	WITHOUT_CLASSIFICATION	5.246421425737791E-6	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999948367967908	WITHOUT_CLASSIFICATION	5.163203209223471E-6	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999947384596692	WITHOUT_CLASSIFICATION	5.261540330720888E-6	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999945430412285	WITHOUT_CLASSIFICATION	5.456958771557293E-6	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.999994764368378	WITHOUT_CLASSIFICATION	5.235631622002667E-6	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999947729602513	WITHOUT_CLASSIFICATION	5.22703974872718E-6	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999952560390136	WITHOUT_CLASSIFICATION	4.7439609864257835E-6	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999941055732754	WITHOUT_CLASSIFICATION	5.894426724623287E-6	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999954799806584	WITHOUT_CLASSIFICATION	4.5200193416055715E-6	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999954222389446	WITHOUT_CLASSIFICATION	4.577761055479502E-6	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999957651580346	WITHOUT_CLASSIFICATION	4.2348419653956315E-6	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.99999903177595	WITHOUT_CLASSIFICATION	9.682240500419295E-7	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999992227722717	WITHOUT_CLASSIFICATION	7.772277282516274E-7	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999983886630844	WITHOUT_CLASSIFICATION	1.6113369155734291E-6	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.999995115860383	WITHOUT_CLASSIFICATION	4.884139616928544E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999997640963597	WITHOUT_CLASSIFICATION	2.3590364043481405E-7	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999804649087256	WITHOUT_CLASSIFICATION	1.9535091274461478E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999431560515	WITHOUT_CLASSIFICATION	5.684394849917315E-7	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999990263463889	WITHOUT_CLASSIFICATION	9.73653611007655E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998598197957	WITHOUT_CLASSIFICATION	1.4018020438415446E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998598197957	WITHOUT_CLASSIFICATION	1.4018020438415446E-7	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.999992637932653	WITHOUT_CLASSIFICATION	7.362067346982573E-6	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999965997733506	WITHOUT_CLASSIFICATION	3.4002266494263118E-6	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999993578783583	WITHOUT_CLASSIFICATION	6.421216416982599E-7	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999965307143528	WITHOUT_CLASSIFICATION	3.469285647168619E-6	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999999239294072	WITHOUT_CLASSIFICATION	7.60705928217557E-8	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999935651964242	WITHOUT_CLASSIFICATION	6.434803575762437E-6	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999997888366364	WITHOUT_CLASSIFICATION	2.1116336367084294E-7	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.999999611166801	WITHOUT_CLASSIFICATION	3.8883319898925436E-7	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999957559528238	WITHOUT_CLASSIFICATION	4.244047176293221E-6	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999995621981941	WITHOUT_CLASSIFICATION	4.378018059260936E-7	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999998930163164	WITHOUT_CLASSIFICATION	1.0698368357976117E-7	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999999427093099	WITHOUT_CLASSIFICATION	5.7290690046621375E-8	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999987266892453	WITHOUT_CLASSIFICATION	1.2733107547575363E-6	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999984665122179	WITHOUT_CLASSIFICATION	1.5334877820268805E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999988322609848	WITHOUT_CLASSIFICATION	1.1677390151642283E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999988322609848	WITHOUT_CLASSIFICATION	1.1677390151642283E-6	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999981708142847	WITHOUT_CLASSIFICATION	1.8291857154326576E-6	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999986553972366	WITHOUT_CLASSIFICATION	1.3446027633099795E-6	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.999994645441696	WITHOUT_CLASSIFICATION	5.3545583039528625E-6	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999783589405427	WITHOUT_CLASSIFICATION	2.1641059457300992E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999997249389396	WITHOUT_CLASSIFICATION	2.750610603956928E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999983339399868	WITHOUT_CLASSIFICATION	1.6660600132067444E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999996363085937	WITHOUT_CLASSIFICATION	3.6369140632666547E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999983339399868	WITHOUT_CLASSIFICATION	1.6660600132067444E-6	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999868917438679	WITHOUT_CLASSIFICATION	1.310825613209537E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999998170318075	WITHOUT_CLASSIFICATION	1.829681924897351E-6	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999892895562811	WITHOUT_CLASSIFICATION	1.0710443718989214E-5	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999842034319549	WITHOUT_CLASSIFICATION	1.5796568045070938E-5	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999965364648202	WITHOUT_CLASSIFICATION	3.4635351797759226E-6	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999959562755822	WITHOUT_CLASSIFICATION	4.043724417787319E-6	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999998622709145	WITHOUT_CLASSIFICATION	1.3772908547367305E-7	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999979331930567	WITHOUT_CLASSIFICATION	2.0668069432431956E-6	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999975985825674	WITHOUT_CLASSIFICATION	2.4014174326437994E-6	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999999282135225	WITHOUT_CLASSIFICATION	7.178647755869453E-8	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.999999426927898	WITHOUT_CLASSIFICATION	5.730721020020674E-7	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999784070550236	WITHOUT_CLASSIFICATION	2.159294497644006E-5	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999803947940586	WITHOUT_CLASSIFICATION	1.9605205941381508E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999983469832464	WITHOUT_CLASSIFICATION	1.6530167535782177E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999986362696367	WITHOUT_CLASSIFICATION	1.3637303632324816E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999986362696367	WITHOUT_CLASSIFICATION	1.3637303632324816E-6	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999998753486596	WITHOUT_CLASSIFICATION	1.246513403828212E-7	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.999999659371655	WITHOUT_CLASSIFICATION	3.406283449089093E-7	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999994705590727	WITHOUT_CLASSIFICATION	5.294409273748221E-7	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999999536740649	WITHOUT_CLASSIFICATION	4.6325934995114397E-8	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999994166592873	WITHOUT_CLASSIFICATION	5.83340712786698E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999983339399868	WITHOUT_CLASSIFICATION	1.6660600132067444E-6	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999997029126583	WITHOUT_CLASSIFICATION	2.970873417095727E-7	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999294196859	WITHOUT_CLASSIFICATION	7.058031422297797E-8	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999971583218433	WITHOUT_CLASSIFICATION	2.8416781566436927E-6	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999998286769086	WITHOUT_CLASSIFICATION	1.7132309142300615E-7	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999509600384	WITHOUT_CLASSIFICATION	4.903996171280722E-8	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999998263976048	WITHOUT_CLASSIFICATION	1.736023952306125E-7	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999994326353105	WITHOUT_CLASSIFICATION	5.673646894092689E-7	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999994791820054	WITHOUT_CLASSIFICATION	5.208179945546104E-7	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999999728243244	WITHOUT_CLASSIFICATION	2.7175675500783577E-8	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999996521339215	WITHOUT_CLASSIFICATION	3.4786607844436245E-7	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999989137744216	WITHOUT_CLASSIFICATION	1.0862255784392587E-6	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999995146438762	WITHOUT_CLASSIFICATION	4.853561237580512E-7	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9991295845697982	WITHOUT_CLASSIFICATION	8.704154302019273E-4	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999860137797079	WITHOUT_CLASSIFICATION	1.3986220292030492E-5	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999526369758786	WITHOUT_CLASSIFICATION	4.736302412130983E-5	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999678371982852	WITHOUT_CLASSIFICATION	3.216280171480539E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999988484576989	WITHOUT_CLASSIFICATION	1.1515423009815967E-6	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999979146315962	WITHOUT_CLASSIFICATION	2.0853684037806783E-6	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999879043547328	WITHOUT_CLASSIFICATION	1.209564526716266E-5	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999966923673856	WITHOUT_CLASSIFICATION	3.3076326142204804E-6	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999878864244899	WITHOUT_CLASSIFICATION	1.2113575510179422E-5	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999938430951475	WITHOUT_CLASSIFICATION	6.156904852476E-6	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999997244228055	WITHOUT_CLASSIFICATION	2.755771945320567E-7	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999986717648545	WITHOUT_CLASSIFICATION	1.3282351454941691E-6	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.999998719577645	WITHOUT_CLASSIFICATION	1.2804223550278898E-6	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999979733103636	WITHOUT_CLASSIFICATION	2.026689636325154E-6	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999999066197606	WITHOUT_CLASSIFICATION	9.338023939114928E-8	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.999996775170663	WITHOUT_CLASSIFICATION	3.2248293369588194E-6	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999986021537458	WITHOUT_CLASSIFICATION	1.3978462542648728E-6	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999992638767276	WITHOUT_CLASSIFICATION	7.361232723850041E-7	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999967719658096	WITHOUT_CLASSIFICATION	3.2280341903782468E-6	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.999997269280194	WITHOUT_CLASSIFICATION	2.7307198061333154E-6	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.999999144229286	WITHOUT_CLASSIFICATION	8.557707138470906E-7	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999995911788992	WITHOUT_CLASSIFICATION	4.0882110067872813E-7	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999998561267667	WITHOUT_CLASSIFICATION	1.4387323324664224E-7	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.999999543413644	WITHOUT_CLASSIFICATION	4.565863559098821E-7	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999995828160348	WITHOUT_CLASSIFICATION	4.171839651116857E-7	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999984405160502	WITHOUT_CLASSIFICATION	1.5594839496420482E-6	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999987440499096	WITHOUT_CLASSIFICATION	1.2559500904010916E-6	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.999999354480187	WITHOUT_CLASSIFICATION	6.45519813019284E-7	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999772278426718	WITHOUT_CLASSIFICATION	2.2772157328195663E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999996354492336	WITHOUT_CLASSIFICATION	3.645507663576022E-7	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999980355817948	WITHOUT_CLASSIFICATION	1.964418205132976E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999999433642655	WITHOUT_CLASSIFICATION	5.663573448198621E-8	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999997823668187	WITHOUT_CLASSIFICATION	2.1763318125302997E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999998170318075	WITHOUT_CLASSIFICATION	1.829681924897351E-6	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999988018385122	WITHOUT_CLASSIFICATION	1.1981614877778775E-6	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999995278439366	WITHOUT_CLASSIFICATION	4.7215606338238675E-7	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999997702134552	WITHOUT_CLASSIFICATION	2.2978654479458218E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999996902793649	WITHOUT_CLASSIFICATION	3.097206351068717E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999996902793649	WITHOUT_CLASSIFICATION	3.097206351068717E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999988444245383	WITHOUT_CLASSIFICATION	1.155575461641011E-6	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999988444245383	WITHOUT_CLASSIFICATION	1.155575461641011E-6	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999988444245383	WITHOUT_CLASSIFICATION	1.155575461641011E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999979149920825	WITHOUT_CLASSIFICATION	2.0850079175786613E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999979149920825	WITHOUT_CLASSIFICATION	2.0850079175786613E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999934767956966	WITHOUT_CLASSIFICATION	6.523204303361298E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999934767956966	WITHOUT_CLASSIFICATION	6.523204303361298E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999894636011019	WITHOUT_CLASSIFICATION	1.0536398898147856E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999951598730876	WITHOUT_CLASSIFICATION	4.8401269123573385E-6	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999946636161423	WITHOUT_CLASSIFICATION	5.336383857579754E-6	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999946636161423	WITHOUT_CLASSIFICATION	5.336383857579754E-6	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999993429506394	WITHOUT_CLASSIFICATION	6.570493606321594E-7	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999997121999268	WITHOUT_CLASSIFICATION	2.8780007313824215E-7	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999890895947452	WITHOUT_CLASSIFICATION	1.0910405254892827E-5	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999994881114534	WITHOUT_CLASSIFICATION	5.11888546471021E-7	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999997858338405	WITHOUT_CLASSIFICATION	2.141661594719278E-7	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999999694239163	WITHOUT_CLASSIFICATION	3.0576083697715966E-8	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999986032669826	WITHOUT_CLASSIFICATION	1.3967330174187436E-6	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999989969012907	WITHOUT_CLASSIFICATION	1.0030987092902522E-6	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999982033173987	WITHOUT_CLASSIFICATION	1.7966826011957635E-6	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999991312944265	WITHOUT_CLASSIFICATION	8.68705573571813E-7	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999999294418762	WITHOUT_CLASSIFICATION	7.055812378160795E-8	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999982610014853	WITHOUT_CLASSIFICATION	1.7389985147125333E-6	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999880589110774	WITHOUT_CLASSIFICATION	1.1941088922564329E-5	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999965203579076	WITHOUT_CLASSIFICATION	3.4796420923556623E-6	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999994330869146	WITHOUT_CLASSIFICATION	5.669130853365433E-7	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999960746455584	WITHOUT_CLASSIFICATION	3.9253544416644465E-6	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999970845428267	WITHOUT_CLASSIFICATION	2.915457173424989E-6	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999989957233653	WITHOUT_CLASSIFICATION	1.0042766347239146E-6	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999981394630527	WITHOUT_CLASSIFICATION	1.8605369472724593E-6	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999953917134167	WITHOUT_CLASSIFICATION	4.6082865832641275E-6	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999991878745054	WITHOUT_CLASSIFICATION	8.121254947110815E-7	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999991080560429	WITHOUT_CLASSIFICATION	8.919439571203421E-7	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999986043583751	WITHOUT_CLASSIFICATION	1.3956416248684638E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999309163032	WITHOUT_CLASSIFICATION	6.908369667489586E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999998781603656	WITHOUT_CLASSIFICATION	1.2183963446472072E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999997255716517	WITHOUT_CLASSIFICATION	2.7442834827691184E-7	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998087602623	WITHOUT_CLASSIFICATION	1.912397378444874E-7	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998933789173	WITHOUT_CLASSIFICATION	1.0662108263899687E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999346262001	WITHOUT_CLASSIFICATION	6.537379997247331E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998847033338	WITHOUT_CLASSIFICATION	1.1529666619123018E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999997403088571	WITHOUT_CLASSIFICATION	2.5969114289428397E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999505730361	WITHOUT_CLASSIFICATION	4.942696393291042E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999991282801	WITHOUT_CLASSIFICATION	8.71719898983526E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998331362878	WITHOUT_CLASSIFICATION	1.6686371215970932E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999991282801	WITHOUT_CLASSIFICATION	8.71719898983526E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999991282801	WITHOUT_CLASSIFICATION	8.71719898983526E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999991282801	WITHOUT_CLASSIFICATION	8.71719898983526E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999991282801	WITHOUT_CLASSIFICATION	8.71719898983526E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999991282801	WITHOUT_CLASSIFICATION	8.71719898983526E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999991282801	WITHOUT_CLASSIFICATION	8.71719898983526E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998331362878	WITHOUT_CLASSIFICATION	1.6686371215970932E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998331362878	WITHOUT_CLASSIFICATION	1.6686371215970932E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998331362878	WITHOUT_CLASSIFICATION	1.6686371215970932E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998331362878	WITHOUT_CLASSIFICATION	1.6686371215970932E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998331362878	WITHOUT_CLASSIFICATION	1.6686371215970932E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998331362878	WITHOUT_CLASSIFICATION	1.6686371215970932E-7	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999995182167815	WITHOUT_CLASSIFICATION	4.817832185329496E-7	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999994759525151	WITHOUT_CLASSIFICATION	5.240474848769218E-7	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.999998529352224	WITHOUT_CLASSIFICATION	1.4706477760535162E-6	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998276845904	WITHOUT_CLASSIFICATION	1.72315409603324E-7	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999998425966821	WITHOUT_CLASSIFICATION	1.5740331788472473E-7	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998374651713	WITHOUT_CLASSIFICATION	1.6253482884057462E-7	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999910887096007	WITHOUT_CLASSIFICATION	8.911290399359295E-6	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999997901804392	WITHOUT_CLASSIFICATION	2.0981956086399642E-7	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999998683545338	WITHOUT_CLASSIFICATION	1.3164546609275917E-7	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.999994934304388	WITHOUT_CLASSIFICATION	5.065695612073872E-6	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999954693883807	WITHOUT_CLASSIFICATION	4.530611619306443E-6	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.99999976825688	WITHOUT_CLASSIFICATION	2.3174311991862038E-7	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999863295213113	WITHOUT_CLASSIFICATION	1.3670478688863706E-5	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999998107428352	WITHOUT_CLASSIFICATION	1.8925716481000702E-7	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999995676257225	WITHOUT_CLASSIFICATION	4.323742774793458E-7	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999996952713449	WITHOUT_CLASSIFICATION	3.047286550644064E-7	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999964059116409	WITHOUT_CLASSIFICATION	3.594088359028994E-6	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.999997391760885	WITHOUT_CLASSIFICATION	2.6082391149753462E-6	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999985224667407	WITHOUT_CLASSIFICATION	1.4775332592757449E-6	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999570744108	WITHOUT_CLASSIFICATION	4.292558924803914E-8	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999987107099989	WITHOUT_CLASSIFICATION	1.289290001083523E-6	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999980104413735	WITHOUT_CLASSIFICATION	1.989558626469394E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999996363085937	WITHOUT_CLASSIFICATION	3.6369140632666547E-7	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.999999923951667	WITHOUT_CLASSIFICATION	7.604833297419678E-8	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999970174723397	WITHOUT_CLASSIFICATION	2.982527660158054E-6	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999998991780141	WITHOUT_CLASSIFICATION	1.0082198589077783E-7	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999998934540031	WITHOUT_CLASSIFICATION	1.065459969477563E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999992833168732	WITHOUT_CLASSIFICATION	7.166831268875874E-7	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999975822818663	WITHOUT_CLASSIFICATION	2.4177181335943505E-6	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999992133736774	WITHOUT_CLASSIFICATION	7.866263226949637E-7	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999993337430341	WITHOUT_CLASSIFICATION	6.662569658546454E-7	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999997421743182	WITHOUT_CLASSIFICATION	2.5782568181473863E-7	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999994592224375	WITHOUT_CLASSIFICATION	5.407775624996194E-7	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999984378945184	WITHOUT_CLASSIFICATION	1.5621054816703852E-6	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999972057495232	WITHOUT_CLASSIFICATION	2.7942504768520474E-6	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.999997710606524	WITHOUT_CLASSIFICATION	2.289393476004081E-6	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999992920867651	WITHOUT_CLASSIFICATION	7.079132349326941E-7	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999997465800984	WITHOUT_CLASSIFICATION	2.5341990154362724E-7	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999599638648	WITHOUT_CLASSIFICATION	4.00361351036157E-8	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999120021748	WITHOUT_CLASSIFICATION	8.799782516884571E-8	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999984693209317	WITHOUT_CLASSIFICATION	1.5306790681840335E-6	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999978492723719	WITHOUT_CLASSIFICATION	2.1507276280757682E-6	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.999999256811912	WITHOUT_CLASSIFICATION	7.431880879847939E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999988350946312	WITHOUT_CLASSIFICATION	1.1649053688061819E-6	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999988350946312	WITHOUT_CLASSIFICATION	1.1649053688061819E-6	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999997313898261	WITHOUT_CLASSIFICATION	2.6861017389541705E-6	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999997313898261	WITHOUT_CLASSIFICATION	2.6861017389541705E-6	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999997244771558	WITHOUT_CLASSIFICATION	2.75522844147676E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999997244771558	WITHOUT_CLASSIFICATION	2.75522844147676E-7	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999998972007224	WITHOUT_CLASSIFICATION	1.0279927763507046E-7	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999997575221677	WITHOUT_CLASSIFICATION	2.4247783226117267E-7	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.999998565855565	WITHOUT_CLASSIFICATION	1.434144435046257E-6	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999999430739803	WITHOUT_CLASSIFICATION	5.692601955290012E-8	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999994990951689	WITHOUT_CLASSIFICATION	5.009048310128067E-7	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.999998965323599	WITHOUT_CLASSIFICATION	1.0346764009660592E-6	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999985556971387	WITHOUT_CLASSIFICATION	1.444302861312196E-6	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999841730256	WITHOUT_CLASSIFICATION	1.5826974392219577E-8	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999934730842417	WITHOUT_CLASSIFICATION	6.526915758378751E-6	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.999999956595287	WITHOUT_CLASSIFICATION	4.340471304676327E-8	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999997540615024	WITHOUT_CLASSIFICATION	2.4593849758595144E-7	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999997487613138	WITHOUT_CLASSIFICATION	2.512386860976921E-7	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999115664892	WITHOUT_CLASSIFICATION	8.84335108062753E-8	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999993084997028	WITHOUT_CLASSIFICATION	6.915002973042383E-7	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999965357148242	WITHOUT_CLASSIFICATION	3.464285175914605E-6	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999915512243802	WITHOUT_CLASSIFICATION	8.44877561978411E-6	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999868292344	WITHOUT_CLASSIFICATION	1.3170765466099744E-8	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999996647532532	WITHOUT_CLASSIFICATION	3.35246746738372E-7	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999996869620433	WITHOUT_CLASSIFICATION	3.1303795665441495E-7	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.999989421934323	WITHOUT_CLASSIFICATION	1.0578065676872643E-5	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999910106860476	WITHOUT_CLASSIFICATION	8.989313952431149E-6	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999975857059923	WITHOUT_CLASSIFICATION	2.4142940077637877E-6	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999965212565275	WITHOUT_CLASSIFICATION	3.478743472463375E-6	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.999999720167863	WITHOUT_CLASSIFICATION	2.7983213706595026E-7	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999982555863804	WITHOUT_CLASSIFICATION	1.7444136195602002E-6	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999998951857344	WITHOUT_CLASSIFICATION	1.0481426562665281E-7	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999933791899491	WITHOUT_CLASSIFICATION	6.6208100509702365E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996095017398	WITHOUT_CLASSIFICATION	3.904982601576463E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996095017398	WITHOUT_CLASSIFICATION	3.904982601576463E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996095017398	WITHOUT_CLASSIFICATION	3.904982601576463E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999998331453762	WITHOUT_CLASSIFICATION	1.668546237897624E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999998331453762	WITHOUT_CLASSIFICATION	1.668546237897624E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999860137797079	WITHOUT_CLASSIFICATION	1.3986220292030492E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999860137797079	WITHOUT_CLASSIFICATION	1.3986220292030492E-5	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999997998922274	WITHOUT_CLASSIFICATION	2.001077724900784E-7	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999900562417772	WITHOUT_CLASSIFICATION	9.943758222859718E-6	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999982768662665	WITHOUT_CLASSIFICATION	1.7231337334953908E-6	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.999999472611343	WITHOUT_CLASSIFICATION	5.27388656867996E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996095017398	WITHOUT_CLASSIFICATION	3.904982601576463E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996095017398	WITHOUT_CLASSIFICATION	3.904982601576463E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996095017398	WITHOUT_CLASSIFICATION	3.904982601576463E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999998331453762	WITHOUT_CLASSIFICATION	1.668546237897624E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999998331453762	WITHOUT_CLASSIFICATION	1.668546237897624E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999998331453762	WITHOUT_CLASSIFICATION	1.668546237897624E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999860137797079	WITHOUT_CLASSIFICATION	1.3986220292030492E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999860137797079	WITHOUT_CLASSIFICATION	1.3986220292030492E-5	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999993438811697	WITHOUT_CLASSIFICATION	6.561188302331447E-7	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999998642275588	WITHOUT_CLASSIFICATION	1.357724412499677E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999999968613151	WITHOUT_CLASSIFICATION	3.1386849014351666E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999999968613151	WITHOUT_CLASSIFICATION	3.1386849014351666E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999999968613151	WITHOUT_CLASSIFICATION	3.1386849014351666E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999999968613151	WITHOUT_CLASSIFICATION	3.1386849014351666E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999999968613151	WITHOUT_CLASSIFICATION	3.1386849014351666E-8	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.999998586836884	WITHOUT_CLASSIFICATION	1.4131631159320723E-6	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999973371802883	WITHOUT_CLASSIFICATION	2.6628197118469425E-6	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999990012832782	WITHOUT_CLASSIFICATION	9.987167217405902E-7	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999905571584592	WITHOUT_CLASSIFICATION	9.442841540844726E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999990764301393	WITHOUT_CLASSIFICATION	9.235698607485086E-7	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999989503544313	WITHOUT_CLASSIFICATION	1.0496455687324444E-6	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999913382286423	WITHOUT_CLASSIFICATION	8.661771357761294E-6	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999992555664966	WITHOUT_CLASSIFICATION	7.444335033167594E-7	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999986978180773	WITHOUT_CLASSIFICATION	1.3021819228234758E-6	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999994194974746	WITHOUT_CLASSIFICATION	5.805025253162556E-7	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999995764458666	WITHOUT_CLASSIFICATION	4.235541334068068E-7	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999981293788088	WITHOUT_CLASSIFICATION	1.8706211911927263E-6	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999993518806668	WITHOUT_CLASSIFICATION	6.481193331868944E-7	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999995088433631	WITHOUT_CLASSIFICATION	4.911566369353986E-7	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999990562220086	WITHOUT_CLASSIFICATION	9.437779913422228E-7	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998278354913687	WITHOUT_CLASSIFICATION	1.7216450863134647E-4	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998278354913687	WITHOUT_CLASSIFICATION	1.7216450863134647E-4	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998278354913687	WITHOUT_CLASSIFICATION	1.7216450863134647E-4	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999972027999934	WITHOUT_CLASSIFICATION	2.797200006566812E-6	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.999997202621676	WITHOUT_CLASSIFICATION	2.797378323910188E-6	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999970303439767	WITHOUT_CLASSIFICATION	2.9696560232984825E-6	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999508223858	WITHOUT_CLASSIFICATION	4.9177614168010694E-8	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999997351640562	WITHOUT_CLASSIFICATION	2.648359438294672E-7	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999991035771384	WITHOUT_CLASSIFICATION	8.964228616784234E-7	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.999999068708291	WITHOUT_CLASSIFICATION	9.312917090103169E-7	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999996682907615	WITHOUT_CLASSIFICATION	3.317092385636697E-7	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999996180027976	WITHOUT_CLASSIFICATION	3.819972024418852E-7	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999995906769653	WITHOUT_CLASSIFICATION	4.0932303460762984E-7	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999995413886094	WITHOUT_CLASSIFICATION	4.5861139071259046E-7	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.999999865053879	WITHOUT_CLASSIFICATION	1.3494612102850413E-7	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999979192530264	WITHOUT_CLASSIFICATION	2.080746973653151E-6	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999966020327532	WITHOUT_CLASSIFICATION	3.3979672467163623E-6	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999955261803999	WITHOUT_CLASSIFICATION	4.473819600064964E-6	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999975212043096	WITHOUT_CLASSIFICATION	2.4787956904087083E-6	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999980425278664	WITHOUT_CLASSIFICATION	1.957472133580851E-6	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999976533559296	WITHOUT_CLASSIFICATION	2.346644070410143E-6	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999986323680866	WITHOUT_CLASSIFICATION	1.3676319134036208E-6	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999991794892491	WITHOUT_CLASSIFICATION	8.205107509788004E-7	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999995713972225	WITHOUT_CLASSIFICATION	4.2860277751965585E-7	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999988948040296	WITHOUT_CLASSIFICATION	1.1051959703508688E-6	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999941421665361	WITHOUT_CLASSIFICATION	5.857833463796655E-6	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999989833713605	WITHOUT_CLASSIFICATION	1.0166286395728598E-6	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999953459560695	WITHOUT_CLASSIFICATION	4.654043930479903E-6	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.999994240037215	WITHOUT_CLASSIFICATION	5.759962784914259E-6	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999968495098981	WITHOUT_CLASSIFICATION	3.150490101941983E-6	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999958894049062	WITHOUT_CLASSIFICATION	4.110595093758069E-6	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.99999677481324	WITHOUT_CLASSIFICATION	3.225186760030818E-6	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9999821917268686	WITHOUT_CLASSIFICATION	1.7808273131314853E-5	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9999840677244531	WITHOUT_CLASSIFICATION	1.5932275546847403E-5	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9999835668328093	WITHOUT_CLASSIFICATION	1.6433167190681885E-5	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9999822400880849	WITHOUT_CLASSIFICATION	1.7759911915122588E-5	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9999818955953768	WITHOUT_CLASSIFICATION	1.8104404623200232E-5	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.999981875108976	WITHOUT_CLASSIFICATION	1.8124891023950313E-5	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.9999820483995925	WITHOUT_CLASSIFICATION	1.7951600407479832E-5	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999974577721003	WITHOUT_CLASSIFICATION	2.542227899708958E-6	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999992875043635	WITHOUT_CLASSIFICATION	7.124956364097131E-7	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999931638505001	WITHOUT_CLASSIFICATION	6.836149499916825E-6	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.998484604653974	WITHOUT_CLASSIFICATION	0.0015153953460260436	TEST
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999990427353211	WITHOUT_CLASSIFICATION	9.57264678763527E-7	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999997216599669	WITHOUT_CLASSIFICATION	2.7834003320587316E-7	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999994322815944	WITHOUT_CLASSIFICATION	5.677184054946854E-7	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999996200836191	WITHOUT_CLASSIFICATION	3.7991638100824595E-7	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999701224799344	WITHOUT_CLASSIFICATION	2.9877520065603953E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999991650835807	WITHOUT_CLASSIFICATION	8.349164193129579E-7	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999878859811354	WITHOUT_CLASSIFICATION	1.2114018864535932E-5	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999878859811354	WITHOUT_CLASSIFICATION	1.2114018864535932E-5	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999930611967366	WITHOUT_CLASSIFICATION	6.938803263489992E-6	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999997452766864	WITHOUT_CLASSIFICATION	2.547233135967693E-7	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999991747900282	WITHOUT_CLASSIFICATION	8.252099717841467E-7	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9983284643263926	WITHOUT_CLASSIFICATION	0.0016715356736074119	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.999995453890866	WITHOUT_CLASSIFICATION	4.546109134128884E-6	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999978800105593	WITHOUT_CLASSIFICATION	2.1199894406278863E-6	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999994543967157	WITHOUT_CLASSIFICATION	5.456032842997191E-7	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998582528333	WITHOUT_CLASSIFICATION	1.417471666109927E-7	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999946095026384	WITHOUT_CLASSIFICATION	5.390497361480698E-6	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999954868161788	WITHOUT_CLASSIFICATION	4.513183821288731E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999995633199882	WITHOUT_CLASSIFICATION	4.3668001178421656E-7	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999995633199882	WITHOUT_CLASSIFICATION	4.3668001178421656E-7	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999995633199882	WITHOUT_CLASSIFICATION	4.3668001178421656E-7	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999995633199882	WITHOUT_CLASSIFICATION	4.3668001178421656E-7	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999877289465339	WITHOUT_CLASSIFICATION	1.2271053466155551E-5	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999833002897837	WITHOUT_CLASSIFICATION	1.6699710216356903E-5	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9998613514091022	WITHOUT_CLASSIFICATION	1.3864859089780397E-4	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999979461345371	WITHOUT_CLASSIFICATION	2.053865462948749E-6	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999968959308957	WITHOUT_CLASSIFICATION	3.1040691042436865E-6	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999989272268494	WITHOUT_CLASSIFICATION	1.0727731506374862E-6	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999998125173414	WITHOUT_CLASSIFICATION	1.8748265855467967E-7	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999998429418372	WITHOUT_CLASSIFICATION	1.570581627951617E-7	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999998429418372	WITHOUT_CLASSIFICATION	1.570581627951617E-7	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999283073817	WITHOUT_CLASSIFICATION	7.169261829142752E-8	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999986062001042	WITHOUT_CLASSIFICATION	1.3937998957359908E-6	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999530276984	WITHOUT_CLASSIFICATION	4.6972301629835275E-8	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999866791396	WITHOUT_CLASSIFICATION	1.3320860414108877E-7	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999866791396	WITHOUT_CLASSIFICATION	1.3320860414108877E-7	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999997040263819	WITHOUT_CLASSIFICATION	2.9597361797694653E-7	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999801542103512	WITHOUT_CLASSIFICATION	1.9845789648783103E-5	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999801542103512	WITHOUT_CLASSIFICATION	1.9845789648783103E-5	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999995546639964	WITHOUT_CLASSIFICATION	4.4533600366932326E-7	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999986292990883	WITHOUT_CLASSIFICATION	1.3707009116188729E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999886565779	WITHOUT_CLASSIFICATION	1.1343422027669272E-8	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999992066263442	WITHOUT_CLASSIFICATION	7.933736558651872E-7	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999994837628055	WITHOUT_CLASSIFICATION	5.162371945654826E-7	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999062727998	WITHOUT_CLASSIFICATION	9.372720029590719E-8	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999997364103861	WITHOUT_CLASSIFICATION	2.6358961394790765E-7	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9999882960481932	WITHOUT_CLASSIFICATION	1.1703951806742103E-5	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999993131559058	WITHOUT_CLASSIFICATION	6.868440941826411E-7	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999993052222993	WITHOUT_CLASSIFICATION	6.947777007364924E-7	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999951512587755	WITHOUT_CLASSIFICATION	4.848741224537625E-6	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999984905129071	WITHOUT_CLASSIFICATION	1.5094870927811567E-6	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9993801478739042	WITHOUT_CLASSIFICATION	6.198521260959381E-4	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9991665108878927	WITHOUT_CLASSIFICATION	8.334891121073444E-4	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999980700447358	WITHOUT_CLASSIFICATION	1.929955264119881E-6	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999998141339116	WITHOUT_CLASSIFICATION	1.8586608826455574E-7	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999933830328769	WITHOUT_CLASSIFICATION	6.616967123118747E-6	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999996427241765	WITHOUT_CLASSIFICATION	3.572758234897455E-7	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999983100282592	WITHOUT_CLASSIFICATION	1.68997174084106E-6	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999973928752994	WITHOUT_CLASSIFICATION	2.6071247005262275E-6	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999976370249003	WITHOUT_CLASSIFICATION	2.3629750997516965E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.999999571456488	WITHOUT_CLASSIFICATION	4.285435119990341E-7	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999998026046706	WITHOUT_CLASSIFICATION	1.973953293820757E-7	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999998211930365	WITHOUT_CLASSIFICATION	1.7880696341374475E-7	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999998085360302	WITHOUT_CLASSIFICATION	1.9146396989292405E-7	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.999998937124871	WITHOUT_CLASSIFICATION	1.0628751290816204E-6	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999974869637738	WITHOUT_CLASSIFICATION	2.5130362261506404E-6	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999911165981403	WITHOUT_CLASSIFICATION	8.88340185963608E-6	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999958297668	WITHOUT_CLASSIFICATION	4.170233203565682E-9	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999992221132769	WITHOUT_CLASSIFICATION	7.778867230803179E-7	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999877249681197	WITHOUT_CLASSIFICATION	1.2275031880210057E-5	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999806246964316	WITHOUT_CLASSIFICATION	1.9375303568402973E-5	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.999995859051486	WITHOUT_CLASSIFICATION	4.140948513948391E-6	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999959886369763	WITHOUT_CLASSIFICATION	4.011363023761993E-6	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999999746121152	WITHOUT_CLASSIFICATION	2.5387884737096298E-8	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999924455306982	WITHOUT_CLASSIFICATION	7.5544693018449685E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999923993973274	WITHOUT_CLASSIFICATION	7.600602672490965E-6	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999995177299852	WITHOUT_CLASSIFICATION	4.822700149010319E-7	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.999996832145507	WITHOUT_CLASSIFICATION	3.1678544929094015E-6	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999924455306982	WITHOUT_CLASSIFICATION	7.5544693018449685E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999923993973274	WITHOUT_CLASSIFICATION	7.600602672490965E-6	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.999998894361004	WITHOUT_CLASSIFICATION	1.1056389960004719E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999947389723994	WITHOUT_CLASSIFICATION	5.26102760056657E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999947389723994	WITHOUT_CLASSIFICATION	5.26102760056657E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999763719842637	WITHOUT_CLASSIFICATION	2.3628015736399063E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999902041673	WITHOUT_CLASSIFICATION	9.795832665154415E-9	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999922045112054	WITHOUT_CLASSIFICATION	7.795488794615347E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999994148437706	WITHOUT_CLASSIFICATION	5.851562294015985E-6	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999778185031039	WITHOUT_CLASSIFICATION	2.2181496896210752E-5	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999992527561428	WITHOUT_CLASSIFICATION	7.472438572663998E-7	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.999968891202631	WITHOUT_CLASSIFICATION	3.110879736890399E-5	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999993025866954	WITHOUT_CLASSIFICATION	6.974133045162726E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999995905603561	WITHOUT_CLASSIFICATION	4.094396438871176E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999836707290403	WITHOUT_CLASSIFICATION	1.6329270959764004E-5	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999997368318141	WITHOUT_CLASSIFICATION	2.63168185887823E-7	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999878616921969	WITHOUT_CLASSIFICATION	1.2138307803063704E-5	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999990506014895	WITHOUT_CLASSIFICATION	9.493985104550874E-7	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999983485828025	WITHOUT_CLASSIFICATION	1.6514171975836137E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999983485828025	WITHOUT_CLASSIFICATION	1.6514171975836137E-6	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999993071584016	WITHOUT_CLASSIFICATION	6.928415984038621E-6	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999993071584016	WITHOUT_CLASSIFICATION	6.928415984038621E-6	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999871830167668	WITHOUT_CLASSIFICATION	1.2816983233238211E-5	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999989741012489	WITHOUT_CLASSIFICATION	1.0258987511096023E-6	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999961296333777	WITHOUT_CLASSIFICATION	3.870366622276683E-6	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999991116315021	WITHOUT_CLASSIFICATION	8.883684979054203E-7	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9998885407256525	WITHOUT_CLASSIFICATION	1.1145927434752578E-4	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999921774089433	WITHOUT_CLASSIFICATION	7.822591056826398E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999922045112054	WITHOUT_CLASSIFICATION	7.795488794615347E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999994148437706	WITHOUT_CLASSIFICATION	5.851562294015985E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999995905603561	WITHOUT_CLASSIFICATION	4.094396438871176E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999836707290403	WITHOUT_CLASSIFICATION	1.6329270959764004E-5	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999986971003391	WITHOUT_CLASSIFICATION	1.3028996609553857E-6	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999977373095308	WITHOUT_CLASSIFICATION	2.2626904692823606E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999861441954452	WITHOUT_CLASSIFICATION	1.385580455490415E-5	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.999997790598063	WITHOUT_CLASSIFICATION	2.209401937007503E-6	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999985298741714	WITHOUT_CLASSIFICATION	1.4701258286162273E-6	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999987715501482	WITHOUT_CLASSIFICATION	1.2284498518800868E-6	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999992466440837	WITHOUT_CLASSIFICATION	7.533559163005026E-7	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.999978839132393	WITHOUT_CLASSIFICATION	2.1160867606936714E-5	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999964210929698	WITHOUT_CLASSIFICATION	3.578907030147339E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999969263848274	WITHOUT_CLASSIFICATION	3.0736151726547756E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999850482484	WITHOUT_CLASSIFICATION	1.4951751680157743E-8	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9997588136889721	WITHOUT_CLASSIFICATION	2.4118631102784056E-4	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999979275453332	WITHOUT_CLASSIFICATION	2.072454666801221E-6	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999967350009488	WITHOUT_CLASSIFICATION	3.264999051210333E-6	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999981061448038	WITHOUT_CLASSIFICATION	1.8938551963312361E-6	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999999482835146	WITHOUT_CLASSIFICATION	5.1716485466892366E-8	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999992631794142	WITHOUT_CLASSIFICATION	7.368205858418207E-7	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999932428671633	WITHOUT_CLASSIFICATION	6.757132836744518E-6	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999973303201471	WITHOUT_CLASSIFICATION	2.669679852936443E-6	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999954494833949	WITHOUT_CLASSIFICATION	4.550516605119496E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999951794257609	WITHOUT_CLASSIFICATION	4.820574239033845E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999951794257609	WITHOUT_CLASSIFICATION	4.820574239033845E-6	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999989207210666	WITHOUT_CLASSIFICATION	1.0792789334195296E-6	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.999997941619458	WITHOUT_CLASSIFICATION	2.058380542092525E-6	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999997206921492	WITHOUT_CLASSIFICATION	2.7930785087176865E-7	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999945748316506	WITHOUT_CLASSIFICATION	5.42516834937436E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999945748316506	WITHOUT_CLASSIFICATION	5.42516834937436E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999861441954452	WITHOUT_CLASSIFICATION	1.385580455490415E-5	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999664812985729	WITHOUT_CLASSIFICATION	3.351870142706399E-5	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999826969820487	WITHOUT_CLASSIFICATION	1.7303017951335185E-5	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999958500721142	WITHOUT_CLASSIFICATION	4.149927885763252E-6	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999966373847285	WITHOUT_CLASSIFICATION	3.3626152715277327E-6	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999980012947712	WITHOUT_CLASSIFICATION	1.9987052286950205E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999480067784672	WITHOUT_CLASSIFICATION	5.199322153269577E-5	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999961112931065	WITHOUT_CLASSIFICATION	3.888706893446235E-6	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999983179921622	WITHOUT_CLASSIFICATION	1.6820078377575466E-6	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999988808474283	WITHOUT_CLASSIFICATION	1.1191525717273934E-6	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999957134221639	WITHOUT_CLASSIFICATION	4.286577836061959E-6	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999923343123479	WITHOUT_CLASSIFICATION	7.665687652118828E-6	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999996404480923	WITHOUT_CLASSIFICATION	3.5955190773557717E-7	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999981908016887	WITHOUT_CLASSIFICATION	1.8091983113868136E-6	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999981186413356	WITHOUT_CLASSIFICATION	1.8813586643641584E-6	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999972225046276	WITHOUT_CLASSIFICATION	2.7774953722642207E-6	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999912584566657	WITHOUT_CLASSIFICATION	8.741543334319576E-6	TEST
// states	WITHOUT_CLASSIFICATION	0.9999858077870035	WITHOUT_CLASSIFICATION	1.4192212996470146E-5	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999997959974655	WITHOUT_CLASSIFICATION	2.0400253452775124E-7	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999861953285	WITHOUT_CLASSIFICATION	1.3804671540546696E-8	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999601998947	WITHOUT_CLASSIFICATION	3.9800105400192895E-8	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999951570593009	WITHOUT_CLASSIFICATION	4.842940699076303E-6	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999980403224766	WITHOUT_CLASSIFICATION	1.959677523422563E-6	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999975007852906	WITHOUT_CLASSIFICATION	2.499214709341552E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999994527890372	WITHOUT_CLASSIFICATION	5.472109627508534E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999419641301	WITHOUT_CLASSIFICATION	5.803586989562537E-7	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999998458961703	WITHOUT_CLASSIFICATION	1.5410382977954605E-7	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999989145491596	WITHOUT_CLASSIFICATION	1.0854508404262666E-6	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999840727595	WITHOUT_CLASSIFICATION	1.592724059177541E-8	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999975309253335	WITHOUT_CLASSIFICATION	2.4690746664210173E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999991424091336	WITHOUT_CLASSIFICATION	8.575908664814456E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999991424091336	WITHOUT_CLASSIFICATION	8.575908664814456E-7	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999997328246811	WITHOUT_CLASSIFICATION	2.6717531886106733E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.999999073508509	WITHOUT_CLASSIFICATION	9.264914909842546E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.999999073508509	WITHOUT_CLASSIFICATION	9.264914909842546E-7	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999996900626961	WITHOUT_CLASSIFICATION	3.0993730392402665E-7	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999996900626961	WITHOUT_CLASSIFICATION	3.0993730392402665E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999940741544312	WITHOUT_CLASSIFICATION	5.925845568716392E-6	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999994864392464	WITHOUT_CLASSIFICATION	5.135607535351813E-7	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999913992077	WITHOUT_CLASSIFICATION	8.600792295018279E-8	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999939439278437	WITHOUT_CLASSIFICATION	6.056072156285487E-6	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999996677968146	WITHOUT_CLASSIFICATION	3.322031854864922E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999938901871978	WITHOUT_CLASSIFICATION	6.109812802158164E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999938901871978	WITHOUT_CLASSIFICATION	6.109812802158164E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999994527890372	WITHOUT_CLASSIFICATION	5.472109627508534E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999994527890372	WITHOUT_CLASSIFICATION	5.472109627508534E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999994527890372	WITHOUT_CLASSIFICATION	5.472109627508534E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999419641301	WITHOUT_CLASSIFICATION	5.803586989562537E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999991424091336	WITHOUT_CLASSIFICATION	8.575908664814456E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999991424091336	WITHOUT_CLASSIFICATION	8.575908664814456E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999991424091336	WITHOUT_CLASSIFICATION	8.575908664814456E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999940741544312	WITHOUT_CLASSIFICATION	5.925845568716392E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999940741544312	WITHOUT_CLASSIFICATION	5.925845568716392E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999940741544312	WITHOUT_CLASSIFICATION	5.925845568716392E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999939439278437	WITHOUT_CLASSIFICATION	6.056072156285487E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999939439278437	WITHOUT_CLASSIFICATION	6.056072156285487E-6	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999965340460303	WITHOUT_CLASSIFICATION	3.4659539697017153E-6	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999999494295615	WITHOUT_CLASSIFICATION	5.057043856508538E-8	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999999239577177	WITHOUT_CLASSIFICATION	7.604228230348395E-7	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999998684738249	WITHOUT_CLASSIFICATION	1.315261750396755E-7	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999990216386601	WITHOUT_CLASSIFICATION	9.783613400038826E-7	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999918931225056	WITHOUT_CLASSIFICATION	8.10687749444124E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999918931225056	WITHOUT_CLASSIFICATION	8.10687749444124E-6	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999991602932506	WITHOUT_CLASSIFICATION	8.397067493176139E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999480067784672	WITHOUT_CLASSIFICATION	5.199322153269577E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999480067784672	WITHOUT_CLASSIFICATION	5.199322153269577E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999480067784672	WITHOUT_CLASSIFICATION	5.199322153269577E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999480067784672	WITHOUT_CLASSIFICATION	5.199322153269577E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999480067784672	WITHOUT_CLASSIFICATION	5.199322153269577E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999734551049722	WITHOUT_CLASSIFICATION	2.6544895027872517E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999734551049722	WITHOUT_CLASSIFICATION	2.6544895027872517E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999734551049722	WITHOUT_CLASSIFICATION	2.6544895027872517E-5	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999982028852602	WITHOUT_CLASSIFICATION	1.7971147397183E-6	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999953508976988	WITHOUT_CLASSIFICATION	4.649102301154284E-6	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999419641301	WITHOUT_CLASSIFICATION	5.803586989562537E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999940741544312	WITHOUT_CLASSIFICATION	5.925845568716392E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999940741544312	WITHOUT_CLASSIFICATION	5.925845568716392E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999480067784672	WITHOUT_CLASSIFICATION	5.199322153269577E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999480067784672	WITHOUT_CLASSIFICATION	5.199322153269577E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999734551049722	WITHOUT_CLASSIFICATION	2.6544895027872517E-5	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999991602932506	WITHOUT_CLASSIFICATION	8.397067493176139E-7	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999964764534527	WITHOUT_CLASSIFICATION	3.5235465472068173E-6	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999964242443298	WITHOUT_CLASSIFICATION	3.57575567029848E-6	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999996595577112	WITHOUT_CLASSIFICATION	3.404422887919591E-7	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999997777462012	WITHOUT_CLASSIFICATION	2.222537987825783E-7	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.999997948937765	WITHOUT_CLASSIFICATION	2.0510622350150904E-6	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999988757802619	WITHOUT_CLASSIFICATION	1.1242197381724963E-6	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999867793672356	WITHOUT_CLASSIFICATION	1.3220632764519572E-5	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999992463035914	WITHOUT_CLASSIFICATION	7.536964085527721E-7	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999988143769011	WITHOUT_CLASSIFICATION	1.185623098926492E-6	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999991288690667	WITHOUT_CLASSIFICATION	8.71130933310638E-7	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999988251338165	WITHOUT_CLASSIFICATION	1.1748661835176223E-6	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999908497139535	WITHOUT_CLASSIFICATION	9.150286046469447E-6	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999965730501102	WITHOUT_CLASSIFICATION	3.4269498897415212E-6	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999825561924519	WITHOUT_CLASSIFICATION	1.7443807548065645E-5	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999968864839979	WITHOUT_CLASSIFICATION	3.113516002100515E-6	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999989011529304	WITHOUT_CLASSIFICATION	1.0988470696063345E-6	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999992039879296	WITHOUT_CLASSIFICATION	7.960120702816542E-7	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.999999532641136	WITHOUT_CLASSIFICATION	4.673588640148732E-7	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999764338157614	WITHOUT_CLASSIFICATION	2.3566184238633922E-5	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999995384479854	WITHOUT_CLASSIFICATION	4.615520145458095E-7	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999979377097338	WITHOUT_CLASSIFICATION	2.0622902661365025E-6	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999991394574217	WITHOUT_CLASSIFICATION	8.605425782568091E-7	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999991961578961	WITHOUT_CLASSIFICATION	8.038421037874392E-7	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999997733876265	WITHOUT_CLASSIFICATION	2.2661237350894517E-7	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999997252367786	WITHOUT_CLASSIFICATION	2.747632213971482E-7	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999988501373113	WITHOUT_CLASSIFICATION	1.149862688729445E-6	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999972991739327	WITHOUT_CLASSIFICATION	2.700826067398084E-6	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.999999297154703	WITHOUT_CLASSIFICATION	7.028452969931575E-7	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999969652828697	WITHOUT_CLASSIFICATION	3.03471713033957E-6	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999999484618259	WITHOUT_CLASSIFICATION	5.153817406949761E-8	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999572118896	WITHOUT_CLASSIFICATION	4.2788110430483996E-8	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999087692301	WITHOUT_CLASSIFICATION	9.12307699261448E-8	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999997308152503	WITHOUT_CLASSIFICATION	2.6918474976232717E-7	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999991676202736	WITHOUT_CLASSIFICATION	8.32379726286231E-7	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999964764534527	WITHOUT_CLASSIFICATION	3.5235465472068173E-6	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999988611631428	WITHOUT_CLASSIFICATION	1.1388368572460525E-6	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999995642759115	WITHOUT_CLASSIFICATION	4.3572408849776685E-7	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999998216815686	WITHOUT_CLASSIFICATION	1.7831843142167576E-7	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999986658161034	WITHOUT_CLASSIFICATION	1.3341838965538406E-6	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999986658161034	WITHOUT_CLASSIFICATION	1.3341838965538406E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999956558693175	WITHOUT_CLASSIFICATION	4.344130682585978E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999956558693175	WITHOUT_CLASSIFICATION	4.344130682585978E-6	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999994329170812	WITHOUT_CLASSIFICATION	5.670829188840232E-7	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999999957077825	WITHOUT_CLASSIFICATION	4.292217503614591E-8	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.999991608721548	WITHOUT_CLASSIFICATION	8.39127845190158E-6	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999959188587096	WITHOUT_CLASSIFICATION	4.081141290321039E-6	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999996336326528	WITHOUT_CLASSIFICATION	3.663673472485123E-7	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999990414952996	WITHOUT_CLASSIFICATION	9.585047004706394E-7	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999917824915685	WITHOUT_CLASSIFICATION	8.217508431486634E-6	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999999813448015	WITHOUT_CLASSIFICATION	1.8655198479044815E-8	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999998334374485	WITHOUT_CLASSIFICATION	1.6656255144735232E-7	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999999586219932	WITHOUT_CLASSIFICATION	4.1378006795020343E-7	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999228479225	WITHOUT_CLASSIFICATION	7.715207752657765E-8	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999986343339662	WITHOUT_CLASSIFICATION	1.365666033853162E-6	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999986343339662	WITHOUT_CLASSIFICATION	1.365666033853162E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999998248279219	WITHOUT_CLASSIFICATION	1.751720780611314E-7	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999998322784444	WITHOUT_CLASSIFICATION	1.6772155569122428E-7	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999968249276084	WITHOUT_CLASSIFICATION	3.175072391599351E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999968249276084	WITHOUT_CLASSIFICATION	3.175072391599351E-6	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999977265059004	WITHOUT_CLASSIFICATION	2.273494099650491E-6	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999996918976498	WITHOUT_CLASSIFICATION	3.0810235026196666E-7	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999984447203467	WITHOUT_CLASSIFICATION	1.555279653342171E-6	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999959665178869	WITHOUT_CLASSIFICATION	4.033482113096222E-6	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999997319621827	WITHOUT_CLASSIFICATION	2.680378171834075E-7	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999998985186656	WITHOUT_CLASSIFICATION	1.0148133439341194E-7	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999944603617599	WITHOUT_CLASSIFICATION	5.539638240149648E-6	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999982610618173	WITHOUT_CLASSIFICATION	1.7389381825872308E-6	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999964706858975	WITHOUT_CLASSIFICATION	3.5293141024793588E-6	TEST
// flush first	WITHOUT_CLASSIFICATION	0.999992434607805	WITHOUT_CLASSIFICATION	7.5653921950660366E-6	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999936879670757	WITHOUT_CLASSIFICATION	6.3120329243647505E-6	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.999998182226913	WITHOUT_CLASSIFICATION	1.8177730871328064E-6	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999962448271313	WITHOUT_CLASSIFICATION	3.7551728686254096E-6	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999956746861673	WITHOUT_CLASSIFICATION	4.325313832673706E-6	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999638515483	WITHOUT_CLASSIFICATION	3.614845170035362E-8	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999997525982081	WITHOUT_CLASSIFICATION	2.474017919040265E-7	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.999998314587336	WITHOUT_CLASSIFICATION	1.6854126640599574E-6	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999990216566568	WITHOUT_CLASSIFICATION	9.783433432670803E-7	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999996489563274	WITHOUT_CLASSIFICATION	3.5104367263836424E-7	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999998235912879	WITHOUT_CLASSIFICATION	1.7640871204265157E-7	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9997929304243881	WITHOUT_CLASSIFICATION	2.0706957561184648E-4	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999948676705236	WITHOUT_CLASSIFICATION	5.132329476429887E-6	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999962197997642	WITHOUT_CLASSIFICATION	3.7802002359188545E-6	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999957203941741	WITHOUT_CLASSIFICATION	4.27960582591681E-6	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.999995011029829	WITHOUT_CLASSIFICATION	4.988970171015074E-6	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999992063897448	WITHOUT_CLASSIFICATION	7.936102552356183E-7	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999990079369152	WITHOUT_CLASSIFICATION	9.920630848114338E-7	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999973109047957	WITHOUT_CLASSIFICATION	2.6890952042359213E-6	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999993002527273	WITHOUT_CLASSIFICATION	6.997472726051767E-7	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999951493776483	WITHOUT_CLASSIFICATION	4.850622351645638E-6	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999926889248423	WITHOUT_CLASSIFICATION	7.311075157770515E-6	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999881132732468	WITHOUT_CLASSIFICATION	1.1886726753211848E-5	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999995823070792	WITHOUT_CLASSIFICATION	4.176929207986194E-7	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999979947705621	WITHOUT_CLASSIFICATION	2.005229437936688E-6	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999979947705621	WITHOUT_CLASSIFICATION	2.005229437936688E-6	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.999998898077197	WITHOUT_CLASSIFICATION	1.101922802912879E-6	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999997422067556	WITHOUT_CLASSIFICATION	2.5779324451311636E-7	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999989800549558	WITHOUT_CLASSIFICATION	1.0199450441565953E-6	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999910314597475	WITHOUT_CLASSIFICATION	8.96854025239797E-6	TEST
// Block	WITHOUT_CLASSIFICATION	0.9999937125766933	WITHOUT_CLASSIFICATION	6.2874233065552765E-6	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.999999207444049	WITHOUT_CLASSIFICATION	7.925559510781834E-7	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.999981442636383	WITHOUT_CLASSIFICATION	1.8557363617021782E-5	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999920804967432	WITHOUT_CLASSIFICATION	7.919503256870306E-6	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999989346305332	WITHOUT_CLASSIFICATION	1.0653694667009223E-6	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999760847172325	WITHOUT_CLASSIFICATION	2.3915282767386567E-5	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999959497725	WITHOUT_CLASSIFICATION	4.050227491711354E-9	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999946892268251	WITHOUT_CLASSIFICATION	5.31077317481582E-6	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999479194886387	WITHOUT_CLASSIFICATION	5.2080511361333685E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999983522576403	WITHOUT_CLASSIFICATION	1.6477423596551945E-6	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999991351933784	WITHOUT_CLASSIFICATION	8.648066215898718E-7	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999913945632147	WITHOUT_CLASSIFICATION	8.605436785353018E-6	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999993950879135	WITHOUT_CLASSIFICATION	6.049120864540087E-7	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999936147729346	WITHOUT_CLASSIFICATION	6.3852270653709976E-6	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999984631785428	WITHOUT_CLASSIFICATION	1.536821457201748E-6	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999944054626109	WITHOUT_CLASSIFICATION	5.5945373890713265E-6	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999999553182741	WITHOUT_CLASSIFICATION	4.468172588642314E-8	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999994220298537	WITHOUT_CLASSIFICATION	5.779701463055418E-7	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999999273017007	WITHOUT_CLASSIFICATION	7.269829928537051E-8	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999999041785459	WITHOUT_CLASSIFICATION	9.582145408624074E-8	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999925149359873	WITHOUT_CLASSIFICATION	7.485064012677473E-6	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999998311845356	WITHOUT_CLASSIFICATION	1.6881546441982172E-7	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999560429185	WITHOUT_CLASSIFICATION	4.395708148239087E-8	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.999998686503981	WITHOUT_CLASSIFICATION	1.3134960189460176E-6	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999980009532313	WITHOUT_CLASSIFICATION	1.9990467686701594E-6	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999998024820661	WITHOUT_CLASSIFICATION	1.975179340296941E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999964376128324	WITHOUT_CLASSIFICATION	3.5623871676081795E-6	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999921323918366	WITHOUT_CLASSIFICATION	7.867608163458454E-6	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999986827367842	WITHOUT_CLASSIFICATION	1.3172632158353114E-6	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999995789261276	WITHOUT_CLASSIFICATION	4.210738724613982E-7	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999942924689712	WITHOUT_CLASSIFICATION	5.707531028798808E-6	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999553620991753	WITHOUT_CLASSIFICATION	4.463790082455398E-5	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999976414351953	WITHOUT_CLASSIFICATION	2.358564804584756E-6	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999964503645448	WITHOUT_CLASSIFICATION	3.5496354552627948E-6	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999990885244039	WITHOUT_CLASSIFICATION	9.114755959870312E-7	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999977395858138	WITHOUT_CLASSIFICATION	2.260414186045851E-6	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999928045661766	WITHOUT_CLASSIFICATION	7.195433823429908E-6	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999921446678711	WITHOUT_CLASSIFICATION	7.855332128973795E-6	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999921446678711	WITHOUT_CLASSIFICATION	7.855332128973795E-6	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999935204304484	WITHOUT_CLASSIFICATION	6.479569551632205E-6	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999990852435624	WITHOUT_CLASSIFICATION	9.14756437569436E-7	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999954916183721	WITHOUT_CLASSIFICATION	4.508381627980718E-6	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999831753624157	WITHOUT_CLASSIFICATION	1.6824637584331018E-5	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999983301397678	WITHOUT_CLASSIFICATION	1.6698602322048128E-6	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999996895277479	WITHOUT_CLASSIFICATION	3.104722520850904E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999465937639	WITHOUT_CLASSIFICATION	5.340623604997526E-8	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.999999915063651	WITHOUT_CLASSIFICATION	8.49363490052059E-8	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999995286507183	WITHOUT_CLASSIFICATION	4.7134928173961925E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999938952902	WITHOUT_CLASSIFICATION	6.1047099465019575E-9	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999995739972651	WITHOUT_CLASSIFICATION	4.260027348940416E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999996611531736	WITHOUT_CLASSIFICATION	3.3884682643176374E-7	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999993848976076	WITHOUT_CLASSIFICATION	6.15102392295857E-7	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999994676067541	WITHOUT_CLASSIFICATION	5.323932458889352E-7	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999990613988963	WITHOUT_CLASSIFICATION	9.386011038305893E-7	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999966625712037	WITHOUT_CLASSIFICATION	3.3374287963094384E-6	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999898156241	WITHOUT_CLASSIFICATION	1.0184375973523156E-8	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999867770829256	WITHOUT_CLASSIFICATION	1.3222917074487288E-5	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999998645097242	WITHOUT_CLASSIFICATION	1.354902756688496E-7	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.999988306913941	WITHOUT_CLASSIFICATION	1.16930860590066E-5	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999997380120798	WITHOUT_CLASSIFICATION	2.619879202741849E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999994168798356	WITHOUT_CLASSIFICATION	5.831201642465163E-7	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999045754902	WITHOUT_CLASSIFICATION	9.54245099063631E-8	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999999663725075	WITHOUT_CLASSIFICATION	3.36274923813658E-8	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998271524773	WITHOUT_CLASSIFICATION	1.728475226968661E-7	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999999612839752	WITHOUT_CLASSIFICATION	3.871602471672064E-8	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999999522282298	WITHOUT_CLASSIFICATION	4.7771770058369886E-8	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999994380554965	WITHOUT_CLASSIFICATION	5.619445035616486E-7	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999988661571644	WITHOUT_CLASSIFICATION	1.1338428356809873E-6	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999980708527388	WITHOUT_CLASSIFICATION	1.929147261151088E-6	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999989450092536	WITHOUT_CLASSIFICATION	1.0549907464048734E-6	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999990331104248	WITHOUT_CLASSIFICATION	9.668895751453335E-7	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999980708527388	WITHOUT_CLASSIFICATION	1.929147261151088E-6	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999990570746348	WITHOUT_CLASSIFICATION	9.429253652347863E-7	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999998085360302	WITHOUT_CLASSIFICATION	1.9146396989292405E-7	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999999121082386	WITHOUT_CLASSIFICATION	8.789176133578E-8	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9998919697713657	WITHOUT_CLASSIFICATION	1.0803022863434787E-4	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999997074241033	WITHOUT_CLASSIFICATION	2.925758967233041E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999999968613151	WITHOUT_CLASSIFICATION	3.1386849014351666E-8	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999987495943452	WITHOUT_CLASSIFICATION	1.2504056547923096E-6	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.999978739315945	WITHOUT_CLASSIFICATION	2.1260684054984975E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999902041673	WITHOUT_CLASSIFICATION	9.795832665154415E-9	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999998235912879	WITHOUT_CLASSIFICATION	1.7640871204265157E-7	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999999239577177	WITHOUT_CLASSIFICATION	7.604228230348395E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999998560208042	WITHOUT_CLASSIFICATION	1.439791956633452E-7	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999968021507322	WITHOUT_CLASSIFICATION	3.197849267776028E-6	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.999999895455587	WITHOUT_CLASSIFICATION	1.0454441301175826E-7	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999775860188623	WITHOUT_CLASSIFICATION	2.241398113775735E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999961495191007	WITHOUT_CLASSIFICATION	3.850480899326739E-6	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999998998769551	WITHOUT_CLASSIFICATION	1.0012304490216136E-7	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999979785880583	WITHOUT_CLASSIFICATION	2.0214119416453695E-6	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999954774007	WITHOUT_CLASSIFICATION	4.522599298008906E-9	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999989265949026	WITHOUT_CLASSIFICATION	1.0734050972714357E-6	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999944332169094	WITHOUT_CLASSIFICATION	5.566783090547859E-6	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999946989163523	WITHOUT_CLASSIFICATION	5.3010836476756126E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999986396803082	WITHOUT_CLASSIFICATION	1.3603196917980479E-6	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999943370748053	WITHOUT_CLASSIFICATION	5.662925194674029E-6	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.999996413206352	WITHOUT_CLASSIFICATION	3.5867936478474476E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999948933586587	WITHOUT_CLASSIFICATION	5.106641341318785E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999947164617228	WITHOUT_CLASSIFICATION	5.283538277233153E-6	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999998940530125	WITHOUT_CLASSIFICATION	1.0594698753412998E-7	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999996579272861	WITHOUT_CLASSIFICATION	3.420727139312604E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999991961253449	WITHOUT_CLASSIFICATION	8.038746551486076E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999991961253449	WITHOUT_CLASSIFICATION	8.038746551486076E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999996586434571	WITHOUT_CLASSIFICATION	3.413565429950583E-7	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999998539579219	WITHOUT_CLASSIFICATION	1.4604207798053952E-7	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999997617582584	WITHOUT_CLASSIFICATION	2.3824174157324176E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9996860364435642	WITHOUT_CLASSIFICATION	3.139635564357689E-4	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9996860364435642	WITHOUT_CLASSIFICATION	3.139635564357689E-4	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9996860364435642	WITHOUT_CLASSIFICATION	3.139635564357689E-4	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9996860364435642	WITHOUT_CLASSIFICATION	3.139635564357689E-4	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999967206628089	WITHOUT_CLASSIFICATION	3.279337191179043E-6	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999986540463301	WITHOUT_CLASSIFICATION	1.3459536698969997E-6	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999945076874953	WITHOUT_CLASSIFICATION	5.492312504749417E-6	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999990355988368	WITHOUT_CLASSIFICATION	9.644011632098602E-7	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999999241523359	WITHOUT_CLASSIFICATION	7.584766409759078E-7	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999985828213641	WITHOUT_CLASSIFICATION	1.4171786359375237E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999974154814309	WITHOUT_CLASSIFICATION	2.5845185691006765E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999974154814309	WITHOUT_CLASSIFICATION	2.5845185691006765E-5	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999998604786617	WITHOUT_CLASSIFICATION	1.3952133828742184E-7	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9999842608112919	WITHOUT_CLASSIFICATION	1.5739188708188754E-5	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999998335168714	WITHOUT_CLASSIFICATION	1.6648312860347962E-7	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999997089241554	WITHOUT_CLASSIFICATION	2.9107584463753575E-7	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999995422255616	WITHOUT_CLASSIFICATION	4.5777443843780206E-7	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999949629224303	WITHOUT_CLASSIFICATION	5.03707756974063E-6	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999981730787866	WITHOUT_CLASSIFICATION	1.8269212134517934E-6	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999745893487768	WITHOUT_CLASSIFICATION	2.5410651223175082E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999267249404654	WITHOUT_CLASSIFICATION	7.327505953457889E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999267249404654	WITHOUT_CLASSIFICATION	7.327505953457889E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999990331104248	WITHOUT_CLASSIFICATION	9.668895751453335E-7	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999942126021786	WITHOUT_CLASSIFICATION	5.787397821461652E-6	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999942402259994	WITHOUT_CLASSIFICATION	5.759774000649476E-6	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999991180112987	WITHOUT_CLASSIFICATION	8.819887013334135E-7	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999452793193	WITHOUT_CLASSIFICATION	5.472068058989317E-8	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.999982592973929	WITHOUT_CLASSIFICATION	1.7407026070935417E-5	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999986915641456	WITHOUT_CLASSIFICATION	1.3084358544362509E-6	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999962968257602	WITHOUT_CLASSIFICATION	3.703174239909505E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999988386210473	WITHOUT_CLASSIFICATION	1.1613789526693353E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999988386210473	WITHOUT_CLASSIFICATION	1.1613789526693353E-6	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999999601076152	WITHOUT_CLASSIFICATION	3.989238481663002E-8	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999998817520858	WITHOUT_CLASSIFICATION	1.1824791430760557E-7	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999999955590159	WITHOUT_CLASSIFICATION	4.440984138185447E-9	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999955702850596	WITHOUT_CLASSIFICATION	4.429714940439714E-6	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999992989152441	WITHOUT_CLASSIFICATION	7.010847559849956E-7	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9999854568493345	WITHOUT_CLASSIFICATION	1.4543150665641893E-5	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999993365782782	WITHOUT_CLASSIFICATION	6.63421721775727E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999994926481003	WITHOUT_CLASSIFICATION	5.073518996593849E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999994926481003	WITHOUT_CLASSIFICATION	5.073518996593849E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999994926481003	WITHOUT_CLASSIFICATION	5.073518996593849E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999994926481003	WITHOUT_CLASSIFICATION	5.073518996593849E-7	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999971366359051	WITHOUT_CLASSIFICATION	2.863364094952525E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999987612871	WITHOUT_CLASSIFICATION	1.2387128639781974E-9	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999372017944046	WITHOUT_CLASSIFICATION	6.279820559541891E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999999265547425	WITHOUT_CLASSIFICATION	7.344525761629384E-8	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999992971873063	WITHOUT_CLASSIFICATION	7.028126937805059E-7	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.999984042609233	WITHOUT_CLASSIFICATION	1.5957390767087288E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999984967408461	WITHOUT_CLASSIFICATION	1.5032591540035856E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979200325231	WITHOUT_CLASSIFICATION	2.0799674769173373E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979200325231	WITHOUT_CLASSIFICATION	2.0799674769173373E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979200325231	WITHOUT_CLASSIFICATION	2.0799674769173373E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999999635139863	WITHOUT_CLASSIFICATION	3.6486013689922756E-7	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999995986074236	WITHOUT_CLASSIFICATION	4.013925764290514E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999851118034	WITHOUT_CLASSIFICATION	1.4888196561534952E-8	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999851118034	WITHOUT_CLASSIFICATION	1.4888196561534952E-8	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999885192559089	WITHOUT_CLASSIFICATION	1.1480744091171681E-5	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999999830604	WITHOUT_CLASSIFICATION	1.6939609233539359E-10	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999999894675233	WITHOUT_CLASSIFICATION	1.0532476657431235E-8	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9999913341826963	WITHOUT_CLASSIFICATION	8.665817303736707E-6	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999992691138899	WITHOUT_CLASSIFICATION	7.308861100490725E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999981297000464	WITHOUT_CLASSIFICATION	1.8702999535358854E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999997601614998	WITHOUT_CLASSIFICATION	2.398385001833077E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999997601614998	WITHOUT_CLASSIFICATION	2.398385001833077E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999963958282458	WITHOUT_CLASSIFICATION	3.6041717543028926E-6	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999995839169382	WITHOUT_CLASSIFICATION	4.160830618473979E-7	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999646213963	WITHOUT_CLASSIFICATION	3.5378603675080386E-8	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999961744514665	WITHOUT_CLASSIFICATION	3.825548533470972E-6	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999948643171879	WITHOUT_CLASSIFICATION	5.135682812131359E-6	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999327557519	WITHOUT_CLASSIFICATION	6.724424804631693E-8	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999993565636155	WITHOUT_CLASSIFICATION	6.434363845935501E-7	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999231946333017	WITHOUT_CLASSIFICATION	7.68053666983885E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999967007175141	WITHOUT_CLASSIFICATION	3.2992824859162027E-6	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999982504589879	WITHOUT_CLASSIFICATION	1.749541012061506E-6	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999999425356328	WITHOUT_CLASSIFICATION	5.7464367078815395E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999996399361312	WITHOUT_CLASSIFICATION	3.600638688434388E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999790893079	WITHOUT_CLASSIFICATION	2.091069212221473E-8	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999999364709029	WITHOUT_CLASSIFICATION	6.352909708409395E-8	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999955334869901	WITHOUT_CLASSIFICATION	4.466513009875954E-6	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999999078516697	WITHOUT_CLASSIFICATION	9.214833021742614E-8	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999997343375686	WITHOUT_CLASSIFICATION	2.6566243141361534E-7	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.99999997422905	WITHOUT_CLASSIFICATION	2.577095002233016E-8	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999998054154022	WITHOUT_CLASSIFICATION	1.9458459770475564E-7	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999999110012113	WITHOUT_CLASSIFICATION	8.899878877363233E-8	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999988282831631	WITHOUT_CLASSIFICATION	1.1717168368541377E-6	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999478800021	WITHOUT_CLASSIFICATION	5.211999787382357E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999508165556792	WITHOUT_CLASSIFICATION	4.9183444320917325E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999508165556792	WITHOUT_CLASSIFICATION	4.9183444320917325E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999508165556792	WITHOUT_CLASSIFICATION	4.9183444320917325E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999508165556792	WITHOUT_CLASSIFICATION	4.9183444320917325E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999508165556792	WITHOUT_CLASSIFICATION	4.9183444320917325E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999508165556792	WITHOUT_CLASSIFICATION	4.9183444320917325E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999508165556792	WITHOUT_CLASSIFICATION	4.9183444320917325E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999508165556792	WITHOUT_CLASSIFICATION	4.9183444320917325E-5	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999992456480675	WITHOUT_CLASSIFICATION	7.543519324362412E-7	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999921242877884	WITHOUT_CLASSIFICATION	7.875712211635494E-6	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999987046317105	WITHOUT_CLASSIFICATION	1.2953682895678418E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999997321390418	WITHOUT_CLASSIFICATION	2.6786095814819884E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999465937639	WITHOUT_CLASSIFICATION	5.340623604997526E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999465937639	WITHOUT_CLASSIFICATION	5.340623604997526E-8	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999999018386214	WITHOUT_CLASSIFICATION	9.816137857377661E-8	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999998381293446	WITHOUT_CLASSIFICATION	1.618706553253837E-7	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999993072826548	WITHOUT_CLASSIFICATION	6.927173451197937E-7	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999998418934233	WITHOUT_CLASSIFICATION	1.581065767631408E-7	TEST
// get current context	WITHOUT_CLASSIFICATION	0.999998154878991	WITHOUT_CLASSIFICATION	1.8451210089377596E-6	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999981736493759	WITHOUT_CLASSIFICATION	1.8263506240659206E-6	TEST
// read	WITHOUT_CLASSIFICATION	0.9999976808883255	WITHOUT_CLASSIFICATION	2.3191116744885353E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999611343921424	WITHOUT_CLASSIFICATION	3.886560785767374E-5	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999990046699984	WITHOUT_CLASSIFICATION	9.953300016740082E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999993624654977	WITHOUT_CLASSIFICATION	6.375345022475468E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999993624654977	WITHOUT_CLASSIFICATION	6.375345022475468E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999993624654977	WITHOUT_CLASSIFICATION	6.375345022475468E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999829352004223	WITHOUT_CLASSIFICATION	1.7064799577678405E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999829352004223	WITHOUT_CLASSIFICATION	1.7064799577678405E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999829352004223	WITHOUT_CLASSIFICATION	1.7064799577678405E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999829352004223	WITHOUT_CLASSIFICATION	1.7064799577678405E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999829352004223	WITHOUT_CLASSIFICATION	1.7064799577678405E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999829352004223	WITHOUT_CLASSIFICATION	1.7064799577678405E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999829352004223	WITHOUT_CLASSIFICATION	1.7064799577678405E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999829352004223	WITHOUT_CLASSIFICATION	1.7064799577678405E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999829352004223	WITHOUT_CLASSIFICATION	1.7064799577678405E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999995782596082	WITHOUT_CLASSIFICATION	4.2174039190307953E-7	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999977390578377	WITHOUT_CLASSIFICATION	2.2609421622432955E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999990435362905	WITHOUT_CLASSIFICATION	9.564637093962334E-7	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999989928465902	WITHOUT_CLASSIFICATION	1.0071534097936E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999829352004223	WITHOUT_CLASSIFICATION	1.7064799577678405E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999829352004223	WITHOUT_CLASSIFICATION	1.7064799577678405E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999829352004223	WITHOUT_CLASSIFICATION	1.7064799577678405E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999988117310915	WITHOUT_CLASSIFICATION	1.1882689084815732E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999960522614231	WITHOUT_CLASSIFICATION	3.947738576926416E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999999251976798	WITHOUT_CLASSIFICATION	7.480232018077627E-8	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999944537325797	WITHOUT_CLASSIFICATION	5.546267420407971E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999944537325797	WITHOUT_CLASSIFICATION	5.546267420407971E-6	TEST
// load null block	WITHOUT_CLASSIFICATION	0.999998386211586	WITHOUT_CLASSIFICATION	1.6137884140236005E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999967526143753	WITHOUT_CLASSIFICATION	3.2473856248207406E-6	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999787736606	WITHOUT_CLASSIFICATION	2.1226339307749883E-8	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999888383998	WITHOUT_CLASSIFICATION	1.1161600140098187E-8	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999970989513692	WITHOUT_CLASSIFICATION	2.901048630797502E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999970989513692	WITHOUT_CLASSIFICATION	2.901048630797502E-6	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999976364011126	WITHOUT_CLASSIFICATION	2.3635988873587934E-6	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999392786835	WITHOUT_CLASSIFICATION	6.072131646456935E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999993471386796	WITHOUT_CLASSIFICATION	6.528613204205162E-7	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999704045283165	WITHOUT_CLASSIFICATION	2.959547168339267E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999704045283165	WITHOUT_CLASSIFICATION	2.959547168339267E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999704045283165	WITHOUT_CLASSIFICATION	2.959547168339267E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999963859735501	WITHOUT_CLASSIFICATION	3.614026449932551E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999940012567334	WITHOUT_CLASSIFICATION	5.998743266510073E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999940012567334	WITHOUT_CLASSIFICATION	5.998743266510073E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999989337527749	WITHOUT_CLASSIFICATION	1.0662472251469549E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999989337527749	WITHOUT_CLASSIFICATION	1.0662472251469549E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999983574290672	WITHOUT_CLASSIFICATION	1.6425709329226628E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999999899056277	WITHOUT_CLASSIFICATION	1.0094372303294705E-7	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999230932296965	WITHOUT_CLASSIFICATION	7.69067703034646E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999815693911592	WITHOUT_CLASSIFICATION	1.843060884078518E-5	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999932232830994	WITHOUT_CLASSIFICATION	6.77671690065967E-6	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999998004089717	WITHOUT_CLASSIFICATION	1.9959102818009127E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999738971087	WITHOUT_CLASSIFICATION	2.610289135822318E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999938901871978	WITHOUT_CLASSIFICATION	6.109812802158164E-6	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999995321497082	WITHOUT_CLASSIFICATION	4.6785029174076556E-7	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999888858359	WITHOUT_CLASSIFICATION	1.11141640936988E-8	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999905535559578	WITHOUT_CLASSIFICATION	9.446444042187045E-6	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999991297868069	WITHOUT_CLASSIFICATION	8.702131929721703E-7	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999992368776714	WITHOUT_CLASSIFICATION	7.631223286591453E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999998964503044	WITHOUT_CLASSIFICATION	1.0354969559339963E-7	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999359436523	WITHOUT_CLASSIFICATION	6.405634773114141E-8	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999989154844539	WITHOUT_CLASSIFICATION	1.0845155461610184E-6	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999998949535117	WITHOUT_CLASSIFICATION	1.0504648833984997E-7	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999997121024338	WITHOUT_CLASSIFICATION	2.878975661987114E-7	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999999498344517	WITHOUT_CLASSIFICATION	5.016554830115117E-7	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999987484949991	WITHOUT_CLASSIFICATION	1.2515050008733233E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999998560208042	WITHOUT_CLASSIFICATION	1.439791956633452E-7	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999702817892507	WITHOUT_CLASSIFICATION	2.9718210749276922E-5	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999992686455184	WITHOUT_CLASSIFICATION	7.313544815962318E-7	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999988523180603	WITHOUT_CLASSIFICATION	1.1476819397231616E-6	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999997395246674	WITHOUT_CLASSIFICATION	2.604753326367661E-7	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999709694241384	WITHOUT_CLASSIFICATION	2.9030575861557632E-5	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999943118674649	WITHOUT_CLASSIFICATION	5.688132535133542E-6	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999095863167	WITHOUT_CLASSIFICATION	9.041368338090425E-8	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999987029670891	WITHOUT_CLASSIFICATION	1.2970329108471841E-6	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999998871981118	WITHOUT_CLASSIFICATION	1.1280188812162968E-7	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999988668501562	WITHOUT_CLASSIFICATION	1.1331498438104304E-6	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999992684475998	WITHOUT_CLASSIFICATION	7.315524002240765E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999998441487885	WITHOUT_CLASSIFICATION	1.5585121152946643E-7	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999990075919991	WITHOUT_CLASSIFICATION	9.9240800089952E-7	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999991552457289	WITHOUT_CLASSIFICATION	8.447542711439578E-7	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999999929217823	WITHOUT_CLASSIFICATION	7.0782175506173055E-9	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999997487921648	WITHOUT_CLASSIFICATION	2.512078351981384E-7	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999994631276775	WITHOUT_CLASSIFICATION	5.368723224733886E-7	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999994157814283	WITHOUT_CLASSIFICATION	5.84218571814911E-7	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999000607993	WITHOUT_CLASSIFICATION	9.993920062274297E-8	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999999637820182	WITHOUT_CLASSIFICATION	3.621798182385386E-8	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999921866339423	WITHOUT_CLASSIFICATION	7.813366057674401E-6	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999996993005502	WITHOUT_CLASSIFICATION	3.0069944981187335E-7	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999978160474876	WITHOUT_CLASSIFICATION	2.1839525124123266E-6	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999997716036154	WITHOUT_CLASSIFICATION	2.283963846161424E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999990972374158	WITHOUT_CLASSIFICATION	9.027625843494694E-7	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999993060235757	WITHOUT_CLASSIFICATION	6.939764241974083E-7	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999997722690557	WITHOUT_CLASSIFICATION	2.2773094423027983E-7	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999989295175374	WITHOUT_CLASSIFICATION	1.0704824626427551E-6	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999866790939693	WITHOUT_CLASSIFICATION	1.3320906030726323E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999998730982642	WITHOUT_CLASSIFICATION	1.269017358926715E-7	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999984285355601	WITHOUT_CLASSIFICATION	1.5714644399584567E-6	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999984285355601	WITHOUT_CLASSIFICATION	1.5714644399584567E-6	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998551872414	WITHOUT_CLASSIFICATION	1.4481275851443695E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998551872414	WITHOUT_CLASSIFICATION	1.4481275851443695E-7	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999334453841218	WITHOUT_CLASSIFICATION	6.655461587823902E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999334453841218	WITHOUT_CLASSIFICATION	6.655461587823902E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999932156940212	WITHOUT_CLASSIFICATION	6.784305978800056E-6	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999932156940212	WITHOUT_CLASSIFICATION	6.784305978800056E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981675856842	WITHOUT_CLASSIFICATION	1.832414315803476E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981675856842	WITHOUT_CLASSIFICATION	1.832414315803476E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981675856842	WITHOUT_CLASSIFICATION	1.832414315803476E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981675856842	WITHOUT_CLASSIFICATION	1.832414315803476E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981675856842	WITHOUT_CLASSIFICATION	1.832414315803476E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981675856842	WITHOUT_CLASSIFICATION	1.832414315803476E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981675856842	WITHOUT_CLASSIFICATION	1.832414315803476E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981675856842	WITHOUT_CLASSIFICATION	1.832414315803476E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999981675856842	WITHOUT_CLASSIFICATION	1.832414315803476E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999967528134646	WITHOUT_CLASSIFICATION	3.2471865353702262E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999967528134646	WITHOUT_CLASSIFICATION	3.2471865353702262E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999967528134646	WITHOUT_CLASSIFICATION	3.2471865353702262E-6	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999995035437803	WITHOUT_CLASSIFICATION	4.964562196638947E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999976642917663	WITHOUT_CLASSIFICATION	2.335708233712479E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999976642917663	WITHOUT_CLASSIFICATION	2.335708233712479E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999976642917663	WITHOUT_CLASSIFICATION	2.335708233712479E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998085762417	WITHOUT_CLASSIFICATION	1.914237583422416E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998085762417	WITHOUT_CLASSIFICATION	1.914237583422416E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998085762417	WITHOUT_CLASSIFICATION	1.914237583422416E-7	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999752518903933	WITHOUT_CLASSIFICATION	2.4748109606656465E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999970693943488	WITHOUT_CLASSIFICATION	2.9306056511742463E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999808313044345	WITHOUT_CLASSIFICATION	1.9168695565579807E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999798583420348	WITHOUT_CLASSIFICATION	2.0141657965125694E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999798583420348	WITHOUT_CLASSIFICATION	2.0141657965125694E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999798583420348	WITHOUT_CLASSIFICATION	2.0141657965125694E-5	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999965877074726	WITHOUT_CLASSIFICATION	3.412292527442293E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.999994479216132	WITHOUT_CLASSIFICATION	5.520783868008316E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.999994479216132	WITHOUT_CLASSIFICATION	5.520783868008316E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999997026967532	WITHOUT_CLASSIFICATION	2.9730324680495803E-7	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999999633633467	WITHOUT_CLASSIFICATION	3.6636653302743205E-7	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999999633633467	WITHOUT_CLASSIFICATION	3.6636653302743205E-7	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9999935391814092	WITHOUT_CLASSIFICATION	6.460818590712683E-6	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999996354492336	WITHOUT_CLASSIFICATION	3.645507663576022E-7	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999982920795488	WITHOUT_CLASSIFICATION	1.7079204511167977E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999949746708345	WITHOUT_CLASSIFICATION	5.0253291655143334E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999949746708345	WITHOUT_CLASSIFICATION	5.0253291655143334E-6	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999764539153563	WITHOUT_CLASSIFICATION	2.354608464377766E-5	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999952083276399	WITHOUT_CLASSIFICATION	4.791672360064827E-6	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999994971607257	WITHOUT_CLASSIFICATION	5.028392743644835E-7	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999999854601991	WITHOUT_CLASSIFICATION	1.4539800946822477E-8	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999996005655041	WITHOUT_CLASSIFICATION	3.994344959476912E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999949746708345	WITHOUT_CLASSIFICATION	5.0253291655143334E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999949746708345	WITHOUT_CLASSIFICATION	5.0253291655143334E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999949746708345	WITHOUT_CLASSIFICATION	5.0253291655143334E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999949746708345	WITHOUT_CLASSIFICATION	5.0253291655143334E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999949746708345	WITHOUT_CLASSIFICATION	5.0253291655143334E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999940033764152	WITHOUT_CLASSIFICATION	5.996623584694771E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999997900011727	WITHOUT_CLASSIFICATION	2.0999882731573765E-6	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.999999993496386	WITHOUT_CLASSIFICATION	6.503614063765104E-9	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999892947596212	WITHOUT_CLASSIFICATION	1.0705240378828777E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999997925435822	WITHOUT_CLASSIFICATION	2.0745641785827837E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999984743251786	WITHOUT_CLASSIFICATION	1.525674821385552E-6	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999997531658333	WITHOUT_CLASSIFICATION	2.468341666670622E-7	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999991304672006	WITHOUT_CLASSIFICATION	8.695327994800201E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999997692233835	WITHOUT_CLASSIFICATION	2.307766163655667E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999891078363468	WITHOUT_CLASSIFICATION	1.0892163653174764E-5	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999996251195389	WITHOUT_CLASSIFICATION	3.7488046109432713E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999994168798356	WITHOUT_CLASSIFICATION	5.831201642465163E-7	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999995155344724	WITHOUT_CLASSIFICATION	4.844655275036867E-7	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999879915550246	WITHOUT_CLASSIFICATION	1.2008444975289467E-5	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.999995845203026	WITHOUT_CLASSIFICATION	4.1547969740114975E-6	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999999979804031	WITHOUT_CLASSIFICATION	2.0195969025004344E-9	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999996804338532	WITHOUT_CLASSIFICATION	3.1956614675607833E-7	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999993011242	WITHOUT_CLASSIFICATION	6.98875807816596E-10	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999997503133796	WITHOUT_CLASSIFICATION	2.49686620390878E-7	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999990180486555	WITHOUT_CLASSIFICATION	9.81951344484557E-7	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999993964154648	WITHOUT_CLASSIFICATION	6.035845352343507E-7	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999967515494388	WITHOUT_CLASSIFICATION	3.2484505610833917E-6	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999938952902	WITHOUT_CLASSIFICATION	6.1047099465019575E-9	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995656263782	WITHOUT_CLASSIFICATION	4.3437362193139287E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995656263782	WITHOUT_CLASSIFICATION	4.3437362193139287E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995656263782	WITHOUT_CLASSIFICATION	4.3437362193139287E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995656263782	WITHOUT_CLASSIFICATION	4.3437362193139287E-7	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999999056235368	WITHOUT_CLASSIFICATION	9.437646316751611E-8	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999999900325727	WITHOUT_CLASSIFICATION	9.967427264670431E-9	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999990620875907	WITHOUT_CLASSIFICATION	9.379124093261845E-7	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999990620875907	WITHOUT_CLASSIFICATION	9.379124093261845E-7	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999984979453379	WITHOUT_CLASSIFICATION	1.502054662068456E-6	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999962928460459	WITHOUT_CLASSIFICATION	3.7071539542270822E-6	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999982507074443	WITHOUT_CLASSIFICATION	1.7492925557121564E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999996094885181	WITHOUT_CLASSIFICATION	3.9051148193123876E-7	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999993148203737	WITHOUT_CLASSIFICATION	6.851796263194024E-7	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999971585838355	WITHOUT_CLASSIFICATION	2.8414161645017944E-6	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999987217433817	WITHOUT_CLASSIFICATION	1.2782566183714712E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.999996397030612	WITHOUT_CLASSIFICATION	3.6029693880065907E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.999996397030612	WITHOUT_CLASSIFICATION	3.6029693880065907E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.999996397030612	WITHOUT_CLASSIFICATION	3.6029693880065907E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.999996397030612	WITHOUT_CLASSIFICATION	3.6029693880065907E-6	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999900987112	WITHOUT_CLASSIFICATION	9.901288813310922E-9	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999994894053961	WITHOUT_CLASSIFICATION	5.10594603904298E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999994894053961	WITHOUT_CLASSIFICATION	5.10594603904298E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999994894053961	WITHOUT_CLASSIFICATION	5.10594603904298E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999966311998834	WITHOUT_CLASSIFICATION	3.3688001166267466E-6	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999984168116709	WITHOUT_CLASSIFICATION	1.5831883291033449E-6	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999923464995601	WITHOUT_CLASSIFICATION	7.653500439854557E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9996860364435642	WITHOUT_CLASSIFICATION	3.139635564357689E-4	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9996860364435642	WITHOUT_CLASSIFICATION	3.139635564357689E-4	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999846540079	WITHOUT_CLASSIFICATION	1.5345992153862934E-8	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999998650085294	WITHOUT_CLASSIFICATION	1.3499147060934275E-7	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999980606392175	WITHOUT_CLASSIFICATION	1.93936078251549E-6	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999980606392175	WITHOUT_CLASSIFICATION	1.93936078251549E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999995383841607	WITHOUT_CLASSIFICATION	4.6161583928385484E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999995383841607	WITHOUT_CLASSIFICATION	4.6161583928385484E-7	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.999998941448473	WITHOUT_CLASSIFICATION	1.058551526987389E-6	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999983625435517	WITHOUT_CLASSIFICATION	1.6374564482912465E-6	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999974915772752	WITHOUT_CLASSIFICATION	2.5084227246564563E-6	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999999255191536	WITHOUT_CLASSIFICATION	7.448084637635552E-8	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999769520008467	WITHOUT_CLASSIFICATION	2.3047999153343227E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999972485199732	WITHOUT_CLASSIFICATION	2.751480026782216E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999998103361786	WITHOUT_CLASSIFICATION	1.8966382141279673E-6	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999992522743293	WITHOUT_CLASSIFICATION	7.477256708200463E-7	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999994317446448	WITHOUT_CLASSIFICATION	5.682553551262047E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999992024217367	WITHOUT_CLASSIFICATION	7.975782631899995E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999992024217367	WITHOUT_CLASSIFICATION	7.975782631899995E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999972475094476	WITHOUT_CLASSIFICATION	2.7524905523344395E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999972475094476	WITHOUT_CLASSIFICATION	2.7524905523344395E-6	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999958914415134	WITHOUT_CLASSIFICATION	4.108558486710401E-6	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.99999691107248	WITHOUT_CLASSIFICATION	3.0889275200290495E-6	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999840898495821	WITHOUT_CLASSIFICATION	1.5910150417869205E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.99999791343672	WITHOUT_CLASSIFICATION	2.086563280089548E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.99999791343672	WITHOUT_CLASSIFICATION	2.086563280089548E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.99999791343672	WITHOUT_CLASSIFICATION	2.086563280089548E-6	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999952187162626	WITHOUT_CLASSIFICATION	4.781283737442322E-6	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999941935879794	WITHOUT_CLASSIFICATION	5.806412020592969E-6	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999948552962614	WITHOUT_CLASSIFICATION	5.144703738688052E-6	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999949191928978	WITHOUT_CLASSIFICATION	5.080807102170055E-6	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999943462896175	WITHOUT_CLASSIFICATION	5.653710382567944E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999944430379961	WITHOUT_CLASSIFICATION	5.556962003793915E-6	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999934746431107	WITHOUT_CLASSIFICATION	6.525356889240028E-6	TEST
// end loop	WITHOUT_CLASSIFICATION	0.999994159094691	WITHOUT_CLASSIFICATION	5.84090530899295E-6	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999997196595245	WITHOUT_CLASSIFICATION	2.8034047558470156E-7	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999610852768	WITHOUT_CLASSIFICATION	3.891472332541289E-8	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999998611717964	WITHOUT_CLASSIFICATION	1.388282035727742E-7	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.999998517355999	WITHOUT_CLASSIFICATION	1.48264400101294E-6	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.999999293611705	WITHOUT_CLASSIFICATION	7.063882949187538E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9996860364435642	WITHOUT_CLASSIFICATION	3.139635564357689E-4	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999988195862458	WITHOUT_CLASSIFICATION	1.1804137541851778E-6	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999872954691038	WITHOUT_CLASSIFICATION	1.2704530896121407E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999991961253449	WITHOUT_CLASSIFICATION	8.038746551486076E-7	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999741818179575	WITHOUT_CLASSIFICATION	2.581818204245654E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999741818179575	WITHOUT_CLASSIFICATION	2.581818204245654E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999741818179575	WITHOUT_CLASSIFICATION	2.581818204245654E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999741818179575	WITHOUT_CLASSIFICATION	2.581818204245654E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999741818179575	WITHOUT_CLASSIFICATION	2.581818204245654E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999312095378026	WITHOUT_CLASSIFICATION	6.879046219750254E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999741818179575	WITHOUT_CLASSIFICATION	2.581818204245654E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999741818179575	WITHOUT_CLASSIFICATION	2.581818204245654E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999741818179575	WITHOUT_CLASSIFICATION	2.581818204245654E-5	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.99999984280826	WITHOUT_CLASSIFICATION	1.5719173990596865E-7	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.999993917027974	WITHOUT_CLASSIFICATION	6.0829720260295335E-6	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999995458731761	WITHOUT_CLASSIFICATION	4.541268239649023E-7	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999946344252565	WITHOUT_CLASSIFICATION	5.365574743572846E-6	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999987050350603	WITHOUT_CLASSIFICATION	1.2949649396265226E-6	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999960457405078	WITHOUT_CLASSIFICATION	3.954259492163924E-6	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999740224764	WITHOUT_CLASSIFICATION	2.597752357926924E-8	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999945827777571	WITHOUT_CLASSIFICATION	5.417222242893968E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999941801959561	WITHOUT_CLASSIFICATION	5.819804043814358E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999941801959561	WITHOUT_CLASSIFICATION	5.819804043814358E-6	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999944928345038	WITHOUT_CLASSIFICATION	5.507165496242087E-6	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999942476831392	WITHOUT_CLASSIFICATION	5.752316860918423E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999936371326107	WITHOUT_CLASSIFICATION	6.362867389329386E-6	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999948509892813	WITHOUT_CLASSIFICATION	5.14901071870998E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999948693497207	WITHOUT_CLASSIFICATION	5.130650279230569E-6	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999941682638029	WITHOUT_CLASSIFICATION	5.831736197068958E-6	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999939924708332	WITHOUT_CLASSIFICATION	6.007529166786706E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999946585759338	WITHOUT_CLASSIFICATION	5.3414240662052726E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999942259112958	WITHOUT_CLASSIFICATION	5.7740887041517705E-6	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999953010189574	WITHOUT_CLASSIFICATION	4.698981042567032E-6	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999954626579852	WITHOUT_CLASSIFICATION	4.537342014819175E-6	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999951041635081	WITHOUT_CLASSIFICATION	4.895836491847029E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999949715583405	WITHOUT_CLASSIFICATION	5.028441659508126E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999946913383877	WITHOUT_CLASSIFICATION	5.308661612334694E-6	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999946908232109	WITHOUT_CLASSIFICATION	5.309176789074864E-6	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999945302109504	WITHOUT_CLASSIFICATION	5.4697890496149935E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999946796740895	WITHOUT_CLASSIFICATION	5.320325910470591E-6	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999936154815438	WITHOUT_CLASSIFICATION	6.384518456216261E-6	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999944618751003	WITHOUT_CLASSIFICATION	5.538124899648814E-6	TEST
// line 952	WITHOUT_CLASSIFICATION	0.999994585198123	WITHOUT_CLASSIFICATION	5.4148018770515235E-6	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999947185189707	WITHOUT_CLASSIFICATION	5.281481029294414E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.999994662783876	WITHOUT_CLASSIFICATION	5.337216124013593E-6	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999935277834768	WITHOUT_CLASSIFICATION	6.47221652313071E-6	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999938480788255	WITHOUT_CLASSIFICATION	6.151921174503824E-6	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.999995180595727	WITHOUT_CLASSIFICATION	4.819404273016045E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999955690468526	WITHOUT_CLASSIFICATION	4.430953147409563E-6	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999948347298162	WITHOUT_CLASSIFICATION	5.165270183804649E-6	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999952740526972	WITHOUT_CLASSIFICATION	4.725947302855691E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999949515443353	WITHOUT_CLASSIFICATION	5.04845566466392E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999947861597807	WITHOUT_CLASSIFICATION	5.213840219341462E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999945319057095	WITHOUT_CLASSIFICATION	5.468094290382248E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999944226660611	WITHOUT_CLASSIFICATION	5.577333938869819E-6	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999942371051016	WITHOUT_CLASSIFICATION	5.762894898420328E-6	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999942333918406	WITHOUT_CLASSIFICATION	5.766608159425082E-6	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999941674333312	WITHOUT_CLASSIFICATION	5.832566668799837E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999951141952227	WITHOUT_CLASSIFICATION	4.885804777302583E-6	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999945481030476	WITHOUT_CLASSIFICATION	5.451896952401987E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999935061387972	WITHOUT_CLASSIFICATION	6.493861202786311E-6	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999951647856169	WITHOUT_CLASSIFICATION	4.835214383073047E-6	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999949606454923	WITHOUT_CLASSIFICATION	5.039354507688803E-6	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999950139725928	WITHOUT_CLASSIFICATION	4.986027407147986E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999953649945689	WITHOUT_CLASSIFICATION	4.6350054310623895E-6	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.999994867222214	WITHOUT_CLASSIFICATION	5.132777786085187E-6	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999943851361396	WITHOUT_CLASSIFICATION	5.614863860400412E-6	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999950203481069	WITHOUT_CLASSIFICATION	4.9796518930161654E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999947109103571	WITHOUT_CLASSIFICATION	5.289089642986615E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.999994280631235	WITHOUT_CLASSIFICATION	5.7193687650437195E-6	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999945985659698	WITHOUT_CLASSIFICATION	5.401434030204232E-6	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999948044660864	WITHOUT_CLASSIFICATION	5.195533913649367E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.999994376551368	WITHOUT_CLASSIFICATION	5.623448631979507E-6	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999948772966439	WITHOUT_CLASSIFICATION	5.122703356066214E-6	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999946159118838	WITHOUT_CLASSIFICATION	5.384088116275451E-6	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999951845410698	WITHOUT_CLASSIFICATION	4.815458930123423E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999949612677018	WITHOUT_CLASSIFICATION	5.038732298140839E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999949612677018	WITHOUT_CLASSIFICATION	5.038732298140839E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999940347843341	WITHOUT_CLASSIFICATION	5.965215665875499E-6	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999951005439704	WITHOUT_CLASSIFICATION	4.899456029556287E-6	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999944382648346	WITHOUT_CLASSIFICATION	5.5617351653899325E-6	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999946392768068	WITHOUT_CLASSIFICATION	5.360723193234594E-6	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999936840524973	WITHOUT_CLASSIFICATION	6.315947502771725E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999951818235554	WITHOUT_CLASSIFICATION	4.818176444595187E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999940993383187	WITHOUT_CLASSIFICATION	5.900661681220871E-6	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999940640553829	WITHOUT_CLASSIFICATION	5.9359446170571245E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999945537657627	WITHOUT_CLASSIFICATION	5.446234237241241E-6	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999948085157208	WITHOUT_CLASSIFICATION	5.191484279327726E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999790715811891	WITHOUT_CLASSIFICATION	2.092841881086645E-5	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999790715811891	WITHOUT_CLASSIFICATION	2.092841881086645E-5	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999961967226956	WITHOUT_CLASSIFICATION	3.8032773043234034E-6	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999988708589046	WITHOUT_CLASSIFICATION	1.1291410953146507E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999993296559428	WITHOUT_CLASSIFICATION	6.703440571934875E-7	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999542915108	WITHOUT_CLASSIFICATION	4.5708489325669545E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999431560515	WITHOUT_CLASSIFICATION	5.684394849917315E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999431560515	WITHOUT_CLASSIFICATION	5.684394849917315E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999431560515	WITHOUT_CLASSIFICATION	5.684394849917315E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999431560515	WITHOUT_CLASSIFICATION	5.684394849917315E-7	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.999994025948821	WITHOUT_CLASSIFICATION	5.9740511789578865E-6	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999996556625556	WITHOUT_CLASSIFICATION	3.443374445472362E-7	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999949504378671	WITHOUT_CLASSIFICATION	5.049562132905565E-6	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999945811477666	WITHOUT_CLASSIFICATION	5.418852233363205E-6	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999941343987901	WITHOUT_CLASSIFICATION	5.865601209951491E-6	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999949332661203	WITHOUT_CLASSIFICATION	5.066733879691194E-6	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999936890744562	WITHOUT_CLASSIFICATION	6.310925543811242E-6	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999946634440428	WITHOUT_CLASSIFICATION	5.336555957184213E-6	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999947698192688	WITHOUT_CLASSIFICATION	5.230180731171329E-6	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999944331889592	WITHOUT_CLASSIFICATION	5.566811040731908E-6	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999938348579751	WITHOUT_CLASSIFICATION	6.1651420249723214E-6	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999951267338631	WITHOUT_CLASSIFICATION	4.873266136836255E-6	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999946502028748	WITHOUT_CLASSIFICATION	5.349797125131372E-6	TEST
// line 636	WITHOUT_CLASSIFICATION	0.99999429558096	WITHOUT_CLASSIFICATION	5.704419040045441E-6	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999940190523277	WITHOUT_CLASSIFICATION	5.980947672347275E-6	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999949266126187	WITHOUT_CLASSIFICATION	5.073387381385603E-6	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999939913727036	WITHOUT_CLASSIFICATION	6.008627296445089E-6	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999951459893633	WITHOUT_CLASSIFICATION	4.854010636611155E-6	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999953354876259	WITHOUT_CLASSIFICATION	4.664512374050342E-6	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999946938530726	WITHOUT_CLASSIFICATION	5.306146927379994E-6	TEST
// line 872	WITHOUT_CLASSIFICATION	0.999995107263063	WITHOUT_CLASSIFICATION	4.892736937027494E-6	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999946189988024	WITHOUT_CLASSIFICATION	5.381001197615441E-6	TEST
// line 925	WITHOUT_CLASSIFICATION	0.999994550827436	WITHOUT_CLASSIFICATION	5.449172563893296E-6	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999946748691828	WITHOUT_CLASSIFICATION	5.325130817225494E-6	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999944883350169	WITHOUT_CLASSIFICATION	5.511664983118116E-6	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999949137635723	WITHOUT_CLASSIFICATION	5.0862364276828075E-6	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999952544703062	WITHOUT_CLASSIFICATION	4.745529693758034E-6	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999943644893083	WITHOUT_CLASSIFICATION	5.635510691636555E-6	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999952823110297	WITHOUT_CLASSIFICATION	4.717688970263151E-6	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.999994477407044	WITHOUT_CLASSIFICATION	5.522592956026162E-6	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999947160204525	WITHOUT_CLASSIFICATION	5.2839795474117615E-6	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999946973707428	WITHOUT_CLASSIFICATION	5.302629257289286E-6	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999936104666051	WITHOUT_CLASSIFICATION	6.389533394891231E-6	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999946242537944	WITHOUT_CLASSIFICATION	5.3757462056807865E-6	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999950985339584	WITHOUT_CLASSIFICATION	4.901466041540685E-6	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.999994022158253	WITHOUT_CLASSIFICATION	5.977841746999476E-6	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999944576364012	WITHOUT_CLASSIFICATION	5.542363598778681E-6	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999943101351163	WITHOUT_CLASSIFICATION	5.689864883751845E-6	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999949010142924	WITHOUT_CLASSIFICATION	5.09898570756242E-6	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999944858374249	WITHOUT_CLASSIFICATION	5.514162575054119E-6	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999951730504573	WITHOUT_CLASSIFICATION	4.826949542668743E-6	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999946117194102	WITHOUT_CLASSIFICATION	5.388280589827586E-6	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999942741477164	WITHOUT_CLASSIFICATION	5.725852283744572E-6	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999943330150948	WITHOUT_CLASSIFICATION	5.666984905251451E-6	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999945968201165	WITHOUT_CLASSIFICATION	5.4031798835486E-6	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999951023403673	WITHOUT_CLASSIFICATION	4.897659632794757E-6	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.999994576472671	WITHOUT_CLASSIFICATION	5.423527328921642E-6	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999941138819117	WITHOUT_CLASSIFICATION	5.8861180882826666E-6	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999951232484735	WITHOUT_CLASSIFICATION	4.876751526552033E-6	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999945135072644	WITHOUT_CLASSIFICATION	5.486492735535265E-6	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.99999414324469	WITHOUT_CLASSIFICATION	5.856755309936628E-6	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999943086999867	WITHOUT_CLASSIFICATION	5.691300013315584E-6	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.999995497848065	WITHOUT_CLASSIFICATION	4.502151935048792E-6	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999954852043058	WITHOUT_CLASSIFICATION	4.514795694244544E-6	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999952179450949	WITHOUT_CLASSIFICATION	4.78205490502626E-6	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999946511496943	WITHOUT_CLASSIFICATION	5.348850305719163E-6	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999947507143354	WITHOUT_CLASSIFICATION	5.249285664471194E-6	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999945898141431	WITHOUT_CLASSIFICATION	5.410185856758139E-6	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999957727917214	WITHOUT_CLASSIFICATION	4.2272082786239E-6	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.999992676576907	WITHOUT_CLASSIFICATION	7.3234230929176666E-6	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999986553972366	WITHOUT_CLASSIFICATION	1.3446027633099795E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999997249389396	WITHOUT_CLASSIFICATION	2.750610603956928E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999997249389396	WITHOUT_CLASSIFICATION	2.750610603956928E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999997249389396	WITHOUT_CLASSIFICATION	2.750610603956928E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999997249389396	WITHOUT_CLASSIFICATION	2.750610603956928E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999997249389396	WITHOUT_CLASSIFICATION	2.750610603956928E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999997249389396	WITHOUT_CLASSIFICATION	2.750610603956928E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999997249389396	WITHOUT_CLASSIFICATION	2.750610603956928E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999998170318075	WITHOUT_CLASSIFICATION	1.829681924897351E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999998170318075	WITHOUT_CLASSIFICATION	1.829681924897351E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999998170318075	WITHOUT_CLASSIFICATION	1.829681924897351E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999998170318075	WITHOUT_CLASSIFICATION	1.829681924897351E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999983469832464	WITHOUT_CLASSIFICATION	1.6530167535782177E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999983469832464	WITHOUT_CLASSIFICATION	1.6530167535782177E-6	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999981060714	WITHOUT_CLASSIFICATION	1.8939285913869304E-9	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999996902793649	WITHOUT_CLASSIFICATION	3.097206351068717E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999996902793649	WITHOUT_CLASSIFICATION	3.097206351068717E-7	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.999999835803758	WITHOUT_CLASSIFICATION	1.641962420713764E-7	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999955927665931	WITHOUT_CLASSIFICATION	4.407233406829322E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999505730361	WITHOUT_CLASSIFICATION	4.942696393291042E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999505730361	WITHOUT_CLASSIFICATION	4.942696393291042E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999505730361	WITHOUT_CLASSIFICATION	4.942696393291042E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999505730361	WITHOUT_CLASSIFICATION	4.942696393291042E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999505730361	WITHOUT_CLASSIFICATION	4.942696393291042E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999505730361	WITHOUT_CLASSIFICATION	4.942696393291042E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999505730361	WITHOUT_CLASSIFICATION	4.942696393291042E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999991282801	WITHOUT_CLASSIFICATION	8.71719898983526E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998331362878	WITHOUT_CLASSIFICATION	1.6686371215970932E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999992833168732	WITHOUT_CLASSIFICATION	7.166831268875874E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999992833168732	WITHOUT_CLASSIFICATION	7.166831268875874E-7	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999995343944155	WITHOUT_CLASSIFICATION	4.6560558462240745E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999984693209317	WITHOUT_CLASSIFICATION	1.5306790681840335E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999984693209317	WITHOUT_CLASSIFICATION	1.5306790681840335E-6	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999432768069	WITHOUT_CLASSIFICATION	5.6723193205891246E-8	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999999888620571	WITHOUT_CLASSIFICATION	1.1137942944176173E-8	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999939706812083	WITHOUT_CLASSIFICATION	6.029318791764387E-6	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999997661311955	WITHOUT_CLASSIFICATION	2.3386880447487514E-7	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999998445956993	WITHOUT_CLASSIFICATION	1.55404300688706E-7	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999991253344116	WITHOUT_CLASSIFICATION	8.746655884460146E-7	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999975852237163	WITHOUT_CLASSIFICATION	2.4147762837733608E-6	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999987039878155	WITHOUT_CLASSIFICATION	1.2960121844662456E-6	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999530276984	WITHOUT_CLASSIFICATION	4.6972301629835275E-8	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999984956479151	WITHOUT_CLASSIFICATION	1.5043520848065083E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9983284643263926	WITHOUT_CLASSIFICATION	0.0016715356736074119	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999865267643	WITHOUT_CLASSIFICATION	1.3473235719507675E-8	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998582528333	WITHOUT_CLASSIFICATION	1.417471666109927E-7	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999999759313369	WITHOUT_CLASSIFICATION	2.4068663144658633E-8	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999763719842637	WITHOUT_CLASSIFICATION	2.3628015736399063E-5	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999999293063228	WITHOUT_CLASSIFICATION	7.069367719346553E-8	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999996652102976	WITHOUT_CLASSIFICATION	3.3478970234016835E-7	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999778185031039	WITHOUT_CLASSIFICATION	2.2181496896210752E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999995905603561	WITHOUT_CLASSIFICATION	4.094396438871176E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999995905603561	WITHOUT_CLASSIFICATION	4.094396438871176E-7	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999964678629133	WITHOUT_CLASSIFICATION	3.5321370866380374E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999991424091336	WITHOUT_CLASSIFICATION	8.575908664814456E-7	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999998014172075	WITHOUT_CLASSIFICATION	1.9858279266617078E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999480067784672	WITHOUT_CLASSIFICATION	5.199322153269577E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999867793672356	WITHOUT_CLASSIFICATION	1.3220632764519572E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999867793672356	WITHOUT_CLASSIFICATION	1.3220632764519572E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999867793672356	WITHOUT_CLASSIFICATION	1.3220632764519572E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999988251338165	WITHOUT_CLASSIFICATION	1.1748661835176223E-6	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999979377097338	WITHOUT_CLASSIFICATION	2.0622902661365025E-6	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999984598695731	WITHOUT_CLASSIFICATION	1.5401304267641642E-6	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999995328652604	WITHOUT_CLASSIFICATION	4.671347395656788E-7	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999995734936906	WITHOUT_CLASSIFICATION	4.2650630941927123E-7	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.999998839069255	WITHOUT_CLASSIFICATION	1.1609307449229467E-6	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999989917546629	WITHOUT_CLASSIFICATION	1.0082453371070137E-6	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999999586219932	WITHOUT_CLASSIFICATION	4.1378006795020343E-7	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999998334374485	WITHOUT_CLASSIFICATION	1.6656255144735232E-7	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999988266607162	WITHOUT_CLASSIFICATION	1.173339283945086E-6	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999962540764844	WITHOUT_CLASSIFICATION	3.7459235155108852E-6	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.999999976037363	WITHOUT_CLASSIFICATION	2.396263696029967E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9997929304243881	WITHOUT_CLASSIFICATION	2.0706957561184648E-4	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999971049181613	WITHOUT_CLASSIFICATION	2.895081838716009E-6	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999998551562322	WITHOUT_CLASSIFICATION	1.4484376772618276E-7	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.999999630436982	WITHOUT_CLASSIFICATION	3.6956301799391033E-7	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.999999739292807	WITHOUT_CLASSIFICATION	2.6070719297625565E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999964376128324	WITHOUT_CLASSIFICATION	3.5623871676081795E-6	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999993216839067	WITHOUT_CLASSIFICATION	6.783160934151772E-7	TEST
