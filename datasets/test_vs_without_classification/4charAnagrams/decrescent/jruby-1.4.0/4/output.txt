// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999975434946258	WITHOUT_CLASSIFICATION	2.4565053741905866E-6	TEST
// TODO make an assert here	TEST	0.9944588006842573	WITHOUT_CLASSIFICATION	0.005541199315742711	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.7089251594430607	WITHOUT_CLASSIFICATION	0.2910748405569395	TEST
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9998658786767831	WITHOUT_CLASSIFICATION	1.3412132321694554E-4	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9999842859858966	WITHOUT_CLASSIFICATION	1.571401410332204E-5	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999920060913456	WITHOUT_CLASSIFICATION	7.993908654340533E-6	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999999444727461	WITHOUT_CLASSIFICATION	5.552725398979886E-8	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999987310878125	WITHOUT_CLASSIFICATION	1.268912187571678E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999823538669981	WITHOUT_CLASSIFICATION	1.7646133001869128E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999823538669981	WITHOUT_CLASSIFICATION	1.7646133001869128E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999971497991424	WITHOUT_CLASSIFICATION	2.850200857591214E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999971497991424	WITHOUT_CLASSIFICATION	2.850200857591214E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999826661736683	WITHOUT_CLASSIFICATION	1.7333826331746543E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999987070194142	WITHOUT_CLASSIFICATION	1.2929805857777053E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999985522545486	WITHOUT_CLASSIFICATION	1.447745451453431E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999985632440006	WITHOUT_CLASSIFICATION	1.4367559994688544E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999894558764526	WITHOUT_CLASSIFICATION	1.0544123547342134E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999894558764526	WITHOUT_CLASSIFICATION	1.0544123547342134E-5	TEST
// line 391	WITHOUT_CLASSIFICATION	0.999998785434765	WITHOUT_CLASSIFICATION	1.2145652350684788E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999878762430497	WITHOUT_CLASSIFICATION	1.21237569503004E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999878762430497	WITHOUT_CLASSIFICATION	1.21237569503004E-5	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9999471291129118	WITHOUT_CLASSIFICATION	5.287088708819645E-5	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999646121522047	WITHOUT_CLASSIFICATION	3.5387847795404726E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999831804970446	WITHOUT_CLASSIFICATION	1.6819502955405123E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999831804970446	WITHOUT_CLASSIFICATION	1.6819502955405123E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999831804970446	WITHOUT_CLASSIFICATION	1.6819502955405123E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999831804970446	WITHOUT_CLASSIFICATION	1.6819502955405123E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999831804970446	WITHOUT_CLASSIFICATION	1.6819502955405123E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999831804970446	WITHOUT_CLASSIFICATION	1.6819502955405123E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999831804970446	WITHOUT_CLASSIFICATION	1.6819502955405123E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999687143397289	WITHOUT_CLASSIFICATION	3.128566027113303E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999687143397289	WITHOUT_CLASSIFICATION	3.128566027113303E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999687143397289	WITHOUT_CLASSIFICATION	3.128566027113303E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999687143397289	WITHOUT_CLASSIFICATION	3.128566027113303E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999687143397289	WITHOUT_CLASSIFICATION	3.128566027113303E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999687143397289	WITHOUT_CLASSIFICATION	3.128566027113303E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999687143397289	WITHOUT_CLASSIFICATION	3.128566027113303E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999789291847068	WITHOUT_CLASSIFICATION	2.1070815293149513E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999789291847068	WITHOUT_CLASSIFICATION	2.1070815293149513E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999789291847068	WITHOUT_CLASSIFICATION	2.1070815293149513E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999789291847068	WITHOUT_CLASSIFICATION	2.1070815293149513E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999789291847068	WITHOUT_CLASSIFICATION	2.1070815293149513E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999789291847068	WITHOUT_CLASSIFICATION	2.1070815293149513E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999884260632067	WITHOUT_CLASSIFICATION	1.1573936793282294E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999884260632067	WITHOUT_CLASSIFICATION	1.1573936793282294E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999884260632067	WITHOUT_CLASSIFICATION	1.1573936793282294E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999884260632067	WITHOUT_CLASSIFICATION	1.1573936793282294E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999884260632067	WITHOUT_CLASSIFICATION	1.1573936793282294E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999884260632067	WITHOUT_CLASSIFICATION	1.1573936793282294E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999866921537516	WITHOUT_CLASSIFICATION	1.33078462483302E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999866921537516	WITHOUT_CLASSIFICATION	1.33078462483302E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999866921537516	WITHOUT_CLASSIFICATION	1.33078462483302E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999866921537516	WITHOUT_CLASSIFICATION	1.33078462483302E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999866921537516	WITHOUT_CLASSIFICATION	1.33078462483302E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999866921537516	WITHOUT_CLASSIFICATION	1.33078462483302E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999866921537516	WITHOUT_CLASSIFICATION	1.33078462483302E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999883957766748	WITHOUT_CLASSIFICATION	1.1604223325227554E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999883957766748	WITHOUT_CLASSIFICATION	1.1604223325227554E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999883957766748	WITHOUT_CLASSIFICATION	1.1604223325227554E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999883957766748	WITHOUT_CLASSIFICATION	1.1604223325227554E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999653763858724	WITHOUT_CLASSIFICATION	3.4623614127628854E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999653763858724	WITHOUT_CLASSIFICATION	3.4623614127628854E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999985787859506	WITHOUT_CLASSIFICATION	1.4212140494477815E-6	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999998113387273	WITHOUT_CLASSIFICATION	1.8866127275432152E-7	TEST
// name	WITHOUT_CLASSIFICATION	0.9999956787512232	WITHOUT_CLASSIFICATION	4.321248776774824E-6	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999991647235351	WITHOUT_CLASSIFICATION	8.352764648960593E-7	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999992352690085	WITHOUT_CLASSIFICATION	7.647309915052144E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999992300234564	WITHOUT_CLASSIFICATION	7.699765436441335E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999992300234564	WITHOUT_CLASSIFICATION	7.699765436441335E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999992300234564	WITHOUT_CLASSIFICATION	7.699765436441335E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999992300234564	WITHOUT_CLASSIFICATION	7.699765436441335E-7	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999998920739629	WITHOUT_CLASSIFICATION	1.0792603708986988E-7	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999999694243096	WITHOUT_CLASSIFICATION	3.057569048594662E-8	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999996666707252	WITHOUT_CLASSIFICATION	3.3332927482372837E-7	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999997218815531	WITHOUT_CLASSIFICATION	2.7811844700512056E-7	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999981181485205	WITHOUT_CLASSIFICATION	1.8818514796135096E-6	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999839176632	WITHOUT_CLASSIFICATION	1.6082336799915783E-8	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999996092192889	WITHOUT_CLASSIFICATION	3.907807111285709E-7	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999364676142	WITHOUT_CLASSIFICATION	6.353238572454842E-8	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999542190916	WITHOUT_CLASSIFICATION	4.578090845889424E-8	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.999999228878913	WITHOUT_CLASSIFICATION	7.711210870563591E-7	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999801774552	WITHOUT_CLASSIFICATION	1.9822544771335014E-8	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999999550175135	WITHOUT_CLASSIFICATION	4.498248659168898E-8	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999953789559145	WITHOUT_CLASSIFICATION	4.6210440854475985E-6	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999998945102768	WITHOUT_CLASSIFICATION	1.0548972313997014E-7	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999996440970621	WITHOUT_CLASSIFICATION	3.559029379346898E-7	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999979553391715	WITHOUT_CLASSIFICATION	2.044660828502025E-6	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999999753472572	WITHOUT_CLASSIFICATION	2.465274283405819E-8	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999992300234564	WITHOUT_CLASSIFICATION	7.699765436441335E-7	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.999999932886432	WITHOUT_CLASSIFICATION	6.711356802748636E-8	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999115113208	WITHOUT_CLASSIFICATION	8.848867921791132E-8	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999996024607996	WITHOUT_CLASSIFICATION	3.9753920043446036E-7	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999989818094822	WITHOUT_CLASSIFICATION	1.0181905178398008E-6	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.999999980846071	WITHOUT_CLASSIFICATION	1.9153928997700135E-8	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999989154909816	WITHOUT_CLASSIFICATION	1.0845090183846413E-6	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999998662416025	WITHOUT_CLASSIFICATION	1.3375839742168464E-7	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999990924392498	WITHOUT_CLASSIFICATION	9.075607501834453E-7	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999971576950526	WITHOUT_CLASSIFICATION	2.8423049472735037E-6	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.999999790310143	WITHOUT_CLASSIFICATION	2.0968985701811635E-7	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999572591561933	WITHOUT_CLASSIFICATION	4.274084380661853E-5	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999986203539081	WITHOUT_CLASSIFICATION	1.3796460919092116E-6	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999998633425518	WITHOUT_CLASSIFICATION	1.3665744822959242E-7	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999979965891099	WITHOUT_CLASSIFICATION	2.003410890128966E-6	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999985013243061	WITHOUT_CLASSIFICATION	1.498675693853844E-6	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999965119894891	WITHOUT_CLASSIFICATION	3.4880105109654648E-6	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.999999594102759	WITHOUT_CLASSIFICATION	4.0589724094630086E-7	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999555350685	WITHOUT_CLASSIFICATION	4.4464931487888565E-8	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9982795956486421	WITHOUT_CLASSIFICATION	0.001720404351357911	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999993078875344	WITHOUT_CLASSIFICATION	6.92112465614332E-7	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999991703284399	WITHOUT_CLASSIFICATION	8.296715601325897E-7	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999977732143407	WITHOUT_CLASSIFICATION	2.226785659300572E-6	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999997961472271	WITHOUT_CLASSIFICATION	2.038527728784631E-7	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9999694215081024	WITHOUT_CLASSIFICATION	3.0578491897655235E-5	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.999999501715833	WITHOUT_CLASSIFICATION	4.982841670361496E-7	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9999918035010432	WITHOUT_CLASSIFICATION	8.196498956757935E-6	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999998206079629	WITHOUT_CLASSIFICATION	1.7939203703370789E-7	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999999509092931	WITHOUT_CLASSIFICATION	4.909070688901014E-8	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999498846069	WITHOUT_CLASSIFICATION	5.0115393013106285E-8	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999998916933781	WITHOUT_CLASSIFICATION	1.0830662192399932E-7	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.999999676767747	WITHOUT_CLASSIFICATION	3.2323225303013207E-7	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999994811053182	WITHOUT_CLASSIFICATION	5.188946817812979E-7	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.99999805051982	WITHOUT_CLASSIFICATION	1.9494801799926404E-6	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999131021396	WITHOUT_CLASSIFICATION	8.689786041230328E-8	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999999894664688	WITHOUT_CLASSIFICATION	1.0533531196103082E-8	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999998905523	WITHOUT_CLASSIFICATION	1.0944769998608016E-7	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999999490059214	WITHOUT_CLASSIFICATION	5.0994078504008815E-8	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999998298206731	WITHOUT_CLASSIFICATION	1.7017932692917383E-7	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999997260227012	WITHOUT_CLASSIFICATION	2.73977298881628E-7	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.99999946606839	WITHOUT_CLASSIFICATION	5.339316100501994E-7	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.999999913844658	WITHOUT_CLASSIFICATION	8.615534202026818E-8	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998361184197	WITHOUT_CLASSIFICATION	1.6388158034827866E-7	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999987148214119	WITHOUT_CLASSIFICATION	1.2851785880395224E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.999998875527833	WITHOUT_CLASSIFICATION	1.124472167000882E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.999998875527833	WITHOUT_CLASSIFICATION	1.124472167000882E-6	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999884698793109	WITHOUT_CLASSIFICATION	1.1530120689077782E-5	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999999841556679	WITHOUT_CLASSIFICATION	1.5844332035308247E-8	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999917025767269	WITHOUT_CLASSIFICATION	8.297423272999794E-6	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999998781348122	WITHOUT_CLASSIFICATION	1.2186518791018317E-7	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999998170712269	WITHOUT_CLASSIFICATION	1.8292877317714445E-7	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999948955019682	WITHOUT_CLASSIFICATION	5.104498031752534E-6	TEST
// ???	WITHOUT_CLASSIFICATION	0.9999957743429924	WITHOUT_CLASSIFICATION	4.225657007673186E-6	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999896761260247	WITHOUT_CLASSIFICATION	1.032387397515134E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998361184197	WITHOUT_CLASSIFICATION	1.6388158034827866E-7	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999076285077	WITHOUT_CLASSIFICATION	9.237149239943322E-8	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999983425517286	WITHOUT_CLASSIFICATION	1.657448271444193E-6	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999951834214	WITHOUT_CLASSIFICATION	4.8165786810249846E-9	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999798422278	WITHOUT_CLASSIFICATION	2.0157772234240884E-8	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999998650015072	WITHOUT_CLASSIFICATION	1.349984927999261E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999997241910726	WITHOUT_CLASSIFICATION	2.758089273669336E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999997241910726	WITHOUT_CLASSIFICATION	2.758089273669336E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999997241910726	WITHOUT_CLASSIFICATION	2.758089273669336E-7	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999999824088629	WITHOUT_CLASSIFICATION	1.7591137178295948E-8	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999969112855797	WITHOUT_CLASSIFICATION	3.0887144202932385E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999997558924976	WITHOUT_CLASSIFICATION	2.441075024368407E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999941004706588	WITHOUT_CLASSIFICATION	5.899529341050301E-6	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999997871209945	WITHOUT_CLASSIFICATION	2.1287900553573574E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999999011568375	WITHOUT_CLASSIFICATION	9.884316251347356E-8	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999999356659557	WITHOUT_CLASSIFICATION	6.433404435543297E-8	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999998834228061	WITHOUT_CLASSIFICATION	1.1657719390674052E-7	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999999068518793	WITHOUT_CLASSIFICATION	9.314812069963746E-7	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999999068518793	WITHOUT_CLASSIFICATION	9.314812069963746E-7	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999990265198865	WITHOUT_CLASSIFICATION	9.734801135443417E-7	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999992902568005	WITHOUT_CLASSIFICATION	7.097431994951152E-7	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999989514921256	WITHOUT_CLASSIFICATION	1.0485078744559733E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999989514921256	WITHOUT_CLASSIFICATION	1.0485078744559733E-6	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999997379672929	WITHOUT_CLASSIFICATION	2.620327071697853E-7	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999351557108	WITHOUT_CLASSIFICATION	6.484428917842038E-8	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999985193836675	WITHOUT_CLASSIFICATION	1.4806163325226356E-6	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.999999683544531	WITHOUT_CLASSIFICATION	3.164554689718523E-7	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999995585555979	WITHOUT_CLASSIFICATION	4.4144440217096703E-7	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999996591401993	WITHOUT_CLASSIFICATION	3.4085980071121446E-7	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.999998211357044	WITHOUT_CLASSIFICATION	1.788642956072573E-6	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999976117957232	WITHOUT_CLASSIFICATION	2.388204276766689E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999994535793151	WITHOUT_CLASSIFICATION	5.464206849846797E-7	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999997480808497	WITHOUT_CLASSIFICATION	2.5191915025972834E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998361184197	WITHOUT_CLASSIFICATION	1.6388158034827866E-7	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999937731532391	WITHOUT_CLASSIFICATION	6.226846760917827E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999998860856937	WITHOUT_CLASSIFICATION	1.1391430635365323E-7	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999997972446137	WITHOUT_CLASSIFICATION	2.0275538620046744E-7	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999978726280392	WITHOUT_CLASSIFICATION	2.1273719608309504E-6	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999988763867729	WITHOUT_CLASSIFICATION	1.1236132271768782E-6	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999876711057146	WITHOUT_CLASSIFICATION	1.2328894285506234E-5	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999991127732784	WITHOUT_CLASSIFICATION	8.872267215525605E-7	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999978735731513	WITHOUT_CLASSIFICATION	2.126426848700032E-6	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999996703378868	WITHOUT_CLASSIFICATION	3.296621131596344E-7	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.999999389163257	WITHOUT_CLASSIFICATION	6.108367429239353E-7	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999999212568746	WITHOUT_CLASSIFICATION	7.874312533666939E-8	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999998392430556	WITHOUT_CLASSIFICATION	1.6075694444447093E-7	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.999999888876698	WITHOUT_CLASSIFICATION	1.1112330198281941E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999999875010292	WITHOUT_CLASSIFICATION	1.2498970815209512E-7	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9997440477543464	WITHOUT_CLASSIFICATION	2.559522456535597E-4	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999999604685628	WITHOUT_CLASSIFICATION	3.953143720090599E-8	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999999494038704	WITHOUT_CLASSIFICATION	5.05961296256093E-8	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999996916753656	WITHOUT_CLASSIFICATION	3.0832463435515353E-7	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999999919908036	WITHOUT_CLASSIFICATION	8.009196432444165E-9	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999999415111169	WITHOUT_CLASSIFICATION	5.848888307901714E-8	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999999767111213	WITHOUT_CLASSIFICATION	2.328887873926356E-8	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999987882733	WITHOUT_CLASSIFICATION	1.211726765113883E-9	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999996229355	WITHOUT_CLASSIFICATION	3.770644949632012E-10	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999990547991457	WITHOUT_CLASSIFICATION	9.452008542727321E-7	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999998921199755	WITHOUT_CLASSIFICATION	1.0788002442020158E-7	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999993164153518	WITHOUT_CLASSIFICATION	6.835846483318197E-7	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999958616385557	WITHOUT_CLASSIFICATION	4.138361444291218E-6	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999999703780232	WITHOUT_CLASSIFICATION	2.9621976803502575E-8	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999790983916	WITHOUT_CLASSIFICATION	2.0901608410881136E-8	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999998358543134	WITHOUT_CLASSIFICATION	1.641456865437406E-7	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999871367162	WITHOUT_CLASSIFICATION	1.2863283870481374E-8	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999998552880793	WITHOUT_CLASSIFICATION	1.4471192062568765E-7	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999880433114829	WITHOUT_CLASSIFICATION	1.1956688517024487E-5	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999995607639894	WITHOUT_CLASSIFICATION	4.3923601058097623E-7	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999996677896046	WITHOUT_CLASSIFICATION	3.3221039539916966E-7	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999965610018695	WITHOUT_CLASSIFICATION	3.4389981305729515E-6	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999995618383601	WITHOUT_CLASSIFICATION	4.3816163981526573E-7	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999846810111028	WITHOUT_CLASSIFICATION	1.5318988897234775E-5	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999998313557392	WITHOUT_CLASSIFICATION	1.6864426075894404E-7	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999998908678667	WITHOUT_CLASSIFICATION	1.0913213326254257E-7	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999998767462065	WITHOUT_CLASSIFICATION	1.2325379354041326E-7	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999998470470595	WITHOUT_CLASSIFICATION	1.5295294056592796E-7	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999991867809117	WITHOUT_CLASSIFICATION	8.1321908841357E-7	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999998576333294	WITHOUT_CLASSIFICATION	1.4236667051544924E-7	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999995837900786	WITHOUT_CLASSIFICATION	4.1620992137251733E-7	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999988296300677	WITHOUT_CLASSIFICATION	1.1703699323823418E-6	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999991342670475	WITHOUT_CLASSIFICATION	8.657329524909527E-7	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999998370235192	WITHOUT_CLASSIFICATION	1.6297648073832795E-7	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999999351936815	WITHOUT_CLASSIFICATION	6.480631855837535E-8	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999999467256215	WITHOUT_CLASSIFICATION	5.3274378579456516E-8	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999999212543751	WITHOUT_CLASSIFICATION	7.874562492935458E-8	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999998814087646	WITHOUT_CLASSIFICATION	1.1859123544851199E-7	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999998177574706	WITHOUT_CLASSIFICATION	1.8224252942864183E-7	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999999342086472	WITHOUT_CLASSIFICATION	6.579135275636975E-8	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999995381806519	WITHOUT_CLASSIFICATION	4.61819348091247E-7	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999999807670569	WITHOUT_CLASSIFICATION	1.923294314030789E-8	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999999872329913	WITHOUT_CLASSIFICATION	1.2767008600989482E-8	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999999541911804	WITHOUT_CLASSIFICATION	4.580881970008144E-8	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999999154359738	WITHOUT_CLASSIFICATION	8.456402630757049E-8	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999999341825188	WITHOUT_CLASSIFICATION	6.58174812286705E-8	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999995976808554	WITHOUT_CLASSIFICATION	4.023191446024319E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999995976808554	WITHOUT_CLASSIFICATION	4.023191446024319E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999988836417786	WITHOUT_CLASSIFICATION	1.1163582214329435E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999988836417786	WITHOUT_CLASSIFICATION	1.1163582214329435E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999943762062841	WITHOUT_CLASSIFICATION	5.623793715976755E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999943762062841	WITHOUT_CLASSIFICATION	5.623793715976755E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999965429952209	WITHOUT_CLASSIFICATION	3.4570047790484094E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999965429952209	WITHOUT_CLASSIFICATION	3.4570047790484094E-6	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999981912739645	WITHOUT_CLASSIFICATION	1.808726035589346E-6	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999994613608885	WITHOUT_CLASSIFICATION	5.386391115286957E-7	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999499812788	WITHOUT_CLASSIFICATION	5.001872120485862E-7	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999912027355853	WITHOUT_CLASSIFICATION	8.797264414603559E-6	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999996241700301	WITHOUT_CLASSIFICATION	3.758299699786999E-7	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999894069865964	WITHOUT_CLASSIFICATION	1.0593013403573429E-5	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999894900210737	WITHOUT_CLASSIFICATION	1.0509978926395277E-5	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999998396311769	WITHOUT_CLASSIFICATION	1.6036882315296464E-7	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999997507649183	WITHOUT_CLASSIFICATION	2.49235081636224E-7	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999985280543963	WITHOUT_CLASSIFICATION	1.4719456037282783E-6	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999989755363508	WITHOUT_CLASSIFICATION	1.0244636493439806E-6	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999521128553	WITHOUT_CLASSIFICATION	4.788714473591573E-8	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999959014184838	WITHOUT_CLASSIFICATION	4.098581516200291E-6	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999986186911721	WITHOUT_CLASSIFICATION	1.3813088278602818E-6	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999996299743531	WITHOUT_CLASSIFICATION	3.7002564691103647E-7	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999916577271356	WITHOUT_CLASSIFICATION	8.342272864417499E-6	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999967594889	WITHOUT_CLASSIFICATION	3.2405110148247577E-9	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999993702197852	WITHOUT_CLASSIFICATION	6.297802147381651E-7	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999964070738865	WITHOUT_CLASSIFICATION	3.592926113419709E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999996168454693	WITHOUT_CLASSIFICATION	3.831545306248957E-7	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999996612120757	WITHOUT_CLASSIFICATION	3.387879243142533E-7	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999990723574828	WITHOUT_CLASSIFICATION	9.276425172052045E-7	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999994517883036	WITHOUT_CLASSIFICATION	5.48211696433896E-7	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999979224963373	WITHOUT_CLASSIFICATION	2.077503662720053E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999937443662686	WITHOUT_CLASSIFICATION	6.2556337312715625E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999997091187182	WITHOUT_CLASSIFICATION	2.908812818027428E-6	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999969952735238	WITHOUT_CLASSIFICATION	3.004726476231009E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999996484560942	WITHOUT_CLASSIFICATION	3.5154390572234976E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999996484560942	WITHOUT_CLASSIFICATION	3.5154390572234976E-7	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999962060151404	WITHOUT_CLASSIFICATION	3.7939848595006433E-6	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999963530033482	WITHOUT_CLASSIFICATION	3.6469966516756822E-6	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999966111965577	WITHOUT_CLASSIFICATION	3.3888034422408602E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999997935847633	WITHOUT_CLASSIFICATION	2.0641523666623093E-7	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999891648558571	WITHOUT_CLASSIFICATION	1.0835144142888076E-5	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999931147307437	WITHOUT_CLASSIFICATION	6.885269256356111E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999964477908312	WITHOUT_CLASSIFICATION	3.5522091687846293E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999964477908312	WITHOUT_CLASSIFICATION	3.5522091687846293E-6	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999987943327807	WITHOUT_CLASSIFICATION	1.2056672193364755E-6	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9992945160409522	WITHOUT_CLASSIFICATION	7.054839590477812E-4	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.999998778936299	WITHOUT_CLASSIFICATION	1.2210637011085877E-6	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.999998778936299	WITHOUT_CLASSIFICATION	1.2210637011085877E-6	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999994478054004	WITHOUT_CLASSIFICATION	5.521945994932287E-7	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999949700980623	WITHOUT_CLASSIFICATION	5.029901937696637E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999949700980623	WITHOUT_CLASSIFICATION	5.029901937696637E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999990531626105	WITHOUT_CLASSIFICATION	9.468373894466883E-7	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999990531626105	WITHOUT_CLASSIFICATION	9.468373894466883E-7	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999945946280542	WITHOUT_CLASSIFICATION	5.405371945804725E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999945946280542	WITHOUT_CLASSIFICATION	5.405371945804725E-6	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9999950206896218	WITHOUT_CLASSIFICATION	4.979310378160159E-6	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999983452432214	WITHOUT_CLASSIFICATION	1.6547567785023224E-6	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999994879326791	WITHOUT_CLASSIFICATION	5.120673208994828E-7	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999997488026727	WITHOUT_CLASSIFICATION	2.511973273265477E-7	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999965771602	WITHOUT_CLASSIFICATION	3.4228399171028526E-9	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999999848607779	WITHOUT_CLASSIFICATION	1.5139222151826945E-8	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999994193340348	WITHOUT_CLASSIFICATION	5.806659651671103E-7	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999999774720377	WITHOUT_CLASSIFICATION	2.2527962310214467E-8	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999994193340348	WITHOUT_CLASSIFICATION	5.806659651671103E-7	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9995420629364473	WITHOUT_CLASSIFICATION	4.5793706355268894E-4	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999996836522878	WITHOUT_CLASSIFICATION	3.163477123282959E-7	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.999999514750243	WITHOUT_CLASSIFICATION	4.852497570353393E-7	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999993396240372	WITHOUT_CLASSIFICATION	6.603759628707795E-7	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999998706201186	WITHOUT_CLASSIFICATION	1.2937988145481117E-7	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999993261528834	WITHOUT_CLASSIFICATION	6.738471164887139E-7	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999964279559812	WITHOUT_CLASSIFICATION	3.572044018766244E-6	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.999997576984556	WITHOUT_CLASSIFICATION	2.423015443925058E-6	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999977286212	WITHOUT_CLASSIFICATION	2.271378750323062E-9	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999999795134085	WITHOUT_CLASSIFICATION	2.048659148742559E-8	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999998508820285	WITHOUT_CLASSIFICATION	1.4911797147982622E-7	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999962780931404	WITHOUT_CLASSIFICATION	3.7219068596534833E-6	TEST
// file not given	WITHOUT_CLASSIFICATION	0.999999569382807	WITHOUT_CLASSIFICATION	4.306171929620826E-7	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999996508383089	WITHOUT_CLASSIFICATION	3.491616912005288E-7	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.999999611526743	WITHOUT_CLASSIFICATION	3.884732570085159E-7	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.999999978558139	WITHOUT_CLASSIFICATION	2.144186100668705E-8	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999989274135372	WITHOUT_CLASSIFICATION	1.0725864627459276E-6	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999994516356353	WITHOUT_CLASSIFICATION	5.483643647441124E-7	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.999999048046158	WITHOUT_CLASSIFICATION	9.519538419143423E-7	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999947231091479	WITHOUT_CLASSIFICATION	5.2768908520501245E-6	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.999997455256729	WITHOUT_CLASSIFICATION	2.5447432709868802E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.99999984191554	WITHOUT_CLASSIFICATION	1.5808445988920547E-7	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999998650414256	WITHOUT_CLASSIFICATION	1.3495857449153333E-7	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999997952154511	WITHOUT_CLASSIFICATION	2.0478454888948472E-7	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999994055740331	WITHOUT_CLASSIFICATION	5.944259667985564E-7	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999999647631568	WITHOUT_CLASSIFICATION	3.523684328787258E-8	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999999141359323	WITHOUT_CLASSIFICATION	8.586406772274755E-8	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999996563184259	WITHOUT_CLASSIFICATION	3.4368157403973136E-7	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999810522504	WITHOUT_CLASSIFICATION	1.8947749518631476E-8	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999998822797185	WITHOUT_CLASSIFICATION	1.1772028152393871E-7	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999999042670502	WITHOUT_CLASSIFICATION	9.57329497814431E-8	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999966946183	WITHOUT_CLASSIFICATION	3.305381746010123E-9	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999961313699	WITHOUT_CLASSIFICATION	3.868630141376752E-9	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999993648736414	WITHOUT_CLASSIFICATION	6.351263585125987E-7	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999691468698	WITHOUT_CLASSIFICATION	3.085313014025119E-8	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999999403224964	WITHOUT_CLASSIFICATION	5.967750362855657E-8	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999308180748	WITHOUT_CLASSIFICATION	6.918192519878821E-8	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999999876424334	WITHOUT_CLASSIFICATION	1.2357566576852867E-8	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.99999999862675	WITHOUT_CLASSIFICATION	1.3732499654826567E-9	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999999543276337	WITHOUT_CLASSIFICATION	4.567236628856777E-8	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999897566161	WITHOUT_CLASSIFICATION	1.0243383977359925E-8	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999163723914	WITHOUT_CLASSIFICATION	8.362760870518261E-8	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999382153669	WITHOUT_CLASSIFICATION	6.178463303402848E-8	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999327358478	WITHOUT_CLASSIFICATION	6.726415230246095E-8	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999442508288	WITHOUT_CLASSIFICATION	5.574917116754861E-8	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999368665987	WITHOUT_CLASSIFICATION	6.313340117794127E-8	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999996875272787	WITHOUT_CLASSIFICATION	3.1247272124955064E-7	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999919670075	WITHOUT_CLASSIFICATION	8.032992375393682E-9	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999992777897501	WITHOUT_CLASSIFICATION	7.222102500594457E-7	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999993204815921	WITHOUT_CLASSIFICATION	6.79518407823033E-7	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999999630477501	WITHOUT_CLASSIFICATION	3.695224984611807E-8	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999997789362275	WITHOUT_CLASSIFICATION	2.2106377259128106E-7	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999912953919112	WITHOUT_CLASSIFICATION	8.70460808872625E-6	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999998614137898	WITHOUT_CLASSIFICATION	1.3858621021108957E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999296458902	WITHOUT_CLASSIFICATION	7.035410968203459E-8	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999296458902	WITHOUT_CLASSIFICATION	7.035410968203459E-8	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999981137546439	WITHOUT_CLASSIFICATION	1.886245356146587E-6	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999917598303057	WITHOUT_CLASSIFICATION	8.240169694335161E-6	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999403389312	WITHOUT_CLASSIFICATION	5.96610687981555E-8	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999999471425597	WITHOUT_CLASSIFICATION	5.28574402986411E-8	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.999999848848618	WITHOUT_CLASSIFICATION	1.5115138205497308E-7	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999995504079093	WITHOUT_CLASSIFICATION	4.4959209063725005E-7	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999975492544074	WITHOUT_CLASSIFICATION	2.450745592509895E-6	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999999931651326	WITHOUT_CLASSIFICATION	6.834867457184633E-9	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999995514090682	WITHOUT_CLASSIFICATION	4.485909319054953E-7	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999999137375125	WITHOUT_CLASSIFICATION	8.626248749126675E-8	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999851393181	WITHOUT_CLASSIFICATION	1.4860681845568903E-8	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999851393181	WITHOUT_CLASSIFICATION	1.4860681845568903E-8	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999996394089807	WITHOUT_CLASSIFICATION	3.6059101926089294E-7	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999999918941339	WITHOUT_CLASSIFICATION	8.105866103725554E-9	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999958605429308	WITHOUT_CLASSIFICATION	4.1394570691941E-6	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999995726444384	WITHOUT_CLASSIFICATION	4.273555615444988E-7	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999983322019917	WITHOUT_CLASSIFICATION	1.667798008187032E-6	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999568192846	WITHOUT_CLASSIFICATION	4.3180715495682867E-8	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999984292295305	WITHOUT_CLASSIFICATION	1.570770469467328E-6	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999996611199111	WITHOUT_CLASSIFICATION	3.38880088852218E-7	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999999877683188	WITHOUT_CLASSIFICATION	1.223168132039172E-8	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999994158186742	WITHOUT_CLASSIFICATION	5.841813257972512E-7	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999998941875299	WITHOUT_CLASSIFICATION	1.0581247009896782E-7	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999990064953799	WITHOUT_CLASSIFICATION	9.93504620129338E-7	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999999387925597	WITHOUT_CLASSIFICATION	6.120744038864691E-8	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999999387925597	WITHOUT_CLASSIFICATION	6.120744038864691E-8	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.999999954871067	WITHOUT_CLASSIFICATION	4.512893295805757E-8	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999994719125032	WITHOUT_CLASSIFICATION	5.280874968855316E-7	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999986022172572	WITHOUT_CLASSIFICATION	1.3977827427711005E-6	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999994058346816	WITHOUT_CLASSIFICATION	5.941653182944076E-7	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999998114587266	WITHOUT_CLASSIFICATION	1.885412733648293E-7	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.999999867283244	WITHOUT_CLASSIFICATION	1.327167560525361E-7	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.999997087584377	WITHOUT_CLASSIFICATION	2.9124156231511576E-6	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999988405638108	WITHOUT_CLASSIFICATION	1.15943618925231E-6	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.999999069198541	WITHOUT_CLASSIFICATION	9.308014590263162E-7	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999999341714243	WITHOUT_CLASSIFICATION	6.582857573783062E-8	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999958605429308	WITHOUT_CLASSIFICATION	4.1394570691941E-6	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999987852461228	WITHOUT_CLASSIFICATION	1.2147538771254766E-6	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999980470949354	WITHOUT_CLASSIFICATION	1.952905064607234E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999957757974365	WITHOUT_CLASSIFICATION	4.224202563503121E-6	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999999890293586	WITHOUT_CLASSIFICATION	1.0970641363041788E-8	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999999423317723	WITHOUT_CLASSIFICATION	5.7668227815395546E-8	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999940714176	WITHOUT_CLASSIFICATION	5.928582438778291E-9	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999993915777894	WITHOUT_CLASSIFICATION	6.084222106564206E-7	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.999999892423709	WITHOUT_CLASSIFICATION	1.0757629104433781E-7	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999998761981002	WITHOUT_CLASSIFICATION	1.238018997868608E-7	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999999156976681	WITHOUT_CLASSIFICATION	8.43023319677078E-8	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999998174076032	WITHOUT_CLASSIFICATION	1.825923968640444E-7	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999928938370936	WITHOUT_CLASSIFICATION	7.106162906362418E-6	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999986908367997	WITHOUT_CLASSIFICATION	1.3091632002777667E-6	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999989731762118	WITHOUT_CLASSIFICATION	1.0268237882154314E-6	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999919573781408	WITHOUT_CLASSIFICATION	8.042621859191996E-6	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999997986274153	WITHOUT_CLASSIFICATION	2.0137258466566322E-7	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999991377124453	WITHOUT_CLASSIFICATION	8.622875546713034E-7	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999992576639406	WITHOUT_CLASSIFICATION	7.423360593156003E-7	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999961945188321	WITHOUT_CLASSIFICATION	3.8054811677888475E-6	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999980241336892	WITHOUT_CLASSIFICATION	1.9758663107310894E-6	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999908782119	WITHOUT_CLASSIFICATION	9.121788106331087E-9	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999992445792867	WITHOUT_CLASSIFICATION	7.554207133214394E-7	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999998094812679	WITHOUT_CLASSIFICATION	1.905187322128204E-7	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999963558464798	WITHOUT_CLASSIFICATION	3.644153520082414E-6	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999994465243401	WITHOUT_CLASSIFICATION	5.53475659937388E-7	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999998869772495	WITHOUT_CLASSIFICATION	1.1302275040070601E-7	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999954595083776	WITHOUT_CLASSIFICATION	4.540491622285514E-6	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.999999175563994	WITHOUT_CLASSIFICATION	8.244360060349451E-7	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999991661235369	WITHOUT_CLASSIFICATION	8.338764630894076E-7	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999999617770504	WITHOUT_CLASSIFICATION	3.8222949579463793E-8	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.999988847539549	WITHOUT_CLASSIFICATION	1.1152460450973215E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.999988847539549	WITHOUT_CLASSIFICATION	1.1152460450973215E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.999999306098878	WITHOUT_CLASSIFICATION	6.939011220447821E-7	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999995925119146	WITHOUT_CLASSIFICATION	4.074880853807264E-7	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999655963031	WITHOUT_CLASSIFICATION	3.4403696937428565E-8	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999998003418858	WITHOUT_CLASSIFICATION	1.9965811403751013E-7	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999956446918531	WITHOUT_CLASSIFICATION	4.355308146931719E-6	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999996356566292	WITHOUT_CLASSIFICATION	3.6434337073209565E-7	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999998361184197	WITHOUT_CLASSIFICATION	1.6388158034827866E-7	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999993641685075	WITHOUT_CLASSIFICATION	6.358314925090815E-7	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999938758295032	WITHOUT_CLASSIFICATION	6.124170496827137E-6	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999998055543627	WITHOUT_CLASSIFICATION	1.9444563732485924E-7	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999999869014814	WITHOUT_CLASSIFICATION	1.3098518601095552E-7	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999981271152881	WITHOUT_CLASSIFICATION	1.8728847119569266E-6	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999918546496305	WITHOUT_CLASSIFICATION	8.14535036956266E-6	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999998908678667	WITHOUT_CLASSIFICATION	1.0913213326254257E-7	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999920006236	WITHOUT_CLASSIFICATION	7.99937636629181E-9	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999738742540821	WITHOUT_CLASSIFICATION	2.612574591785302E-5	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999960513436	WITHOUT_CLASSIFICATION	3.948656331414577E-9	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999533042909	WITHOUT_CLASSIFICATION	4.6695709118715036E-8	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999999129148353	WITHOUT_CLASSIFICATION	8.708516472744137E-8	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999978589400246	WITHOUT_CLASSIFICATION	2.1410599754116897E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999988679946032	WITHOUT_CLASSIFICATION	1.1320053968224627E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999988679946032	WITHOUT_CLASSIFICATION	1.1320053968224627E-6	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.999999655997864	WITHOUT_CLASSIFICATION	3.4400213608098326E-7	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999996249556591	WITHOUT_CLASSIFICATION	3.7504434086215124E-7	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999997896903587	WITHOUT_CLASSIFICATION	2.1030964128514496E-7	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.999998314653391	WITHOUT_CLASSIFICATION	1.6853466089402481E-6	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999982733951277	WITHOUT_CLASSIFICATION	1.7266048722645208E-6	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999999790096101	WITHOUT_CLASSIFICATION	2.0990389848442794E-8	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999956171589	WITHOUT_CLASSIFICATION	4.382841089187184E-9	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999998386713842	WITHOUT_CLASSIFICATION	1.6132861584147488E-7	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999995558946299	WITHOUT_CLASSIFICATION	4.441053700571255E-7	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.99999992117217	WITHOUT_CLASSIFICATION	7.882783010039892E-8	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999989484239739	WITHOUT_CLASSIFICATION	1.051576026149857E-6	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999997717582148	WITHOUT_CLASSIFICATION	2.28241785225074E-7	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.999998229281633	WITHOUT_CLASSIFICATION	1.7707183671050277E-6	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999996236410122	WITHOUT_CLASSIFICATION	3.763589877879975E-7	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999973107282722	WITHOUT_CLASSIFICATION	2.689271727816584E-6	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999985189104648	WITHOUT_CLASSIFICATION	1.4810895351867188E-6	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999995752414106	WITHOUT_CLASSIFICATION	4.247585894592903E-7	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999996232314309	WITHOUT_CLASSIFICATION	3.767685691478211E-7	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999666223391	WITHOUT_CLASSIFICATION	3.3377660897635894E-8	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999983424183153	WITHOUT_CLASSIFICATION	1.6575816846171623E-6	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999999427466846	WITHOUT_CLASSIFICATION	5.7253315475417744E-8	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999993914705695	WITHOUT_CLASSIFICATION	6.085294304403998E-7	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.999999793483361	WITHOUT_CLASSIFICATION	2.0651663908625555E-7	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999997153654524	WITHOUT_CLASSIFICATION	2.8463454755923646E-7	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999995749346895	WITHOUT_CLASSIFICATION	4.2506531048624E-7	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999999584216476	WITHOUT_CLASSIFICATION	4.1578352408554626E-8	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999711441365623	WITHOUT_CLASSIFICATION	2.8855863437756878E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.999999797749369	WITHOUT_CLASSIFICATION	2.0225063102082133E-7	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999985462070808	WITHOUT_CLASSIFICATION	1.4537929191491525E-6	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.999999418095342	WITHOUT_CLASSIFICATION	5.819046579873234E-7	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.999999994995443	WITHOUT_CLASSIFICATION	5.004556964287966E-9	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999977423828822	WITHOUT_CLASSIFICATION	2.25761711777135E-6	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999993630875503	WITHOUT_CLASSIFICATION	6.369124497236459E-7	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.9999899157890051	WITHOUT_CLASSIFICATION	1.0084210994926184E-5	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.999997249055579	WITHOUT_CLASSIFICATION	2.7509444209685068E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999998351913975	WITHOUT_CLASSIFICATION	1.648086024600683E-7	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999071237725	WITHOUT_CLASSIFICATION	9.28762274148364E-8	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999995621436997	WITHOUT_CLASSIFICATION	4.378563002687519E-7	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.99999990174698	WITHOUT_CLASSIFICATION	9.825302009074994E-8	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.999999924323506	WITHOUT_CLASSIFICATION	7.567649399650099E-8	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.999999821365839	WITHOUT_CLASSIFICATION	1.786341610396469E-7	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999996987700106	WITHOUT_CLASSIFICATION	3.012299893717891E-7	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999996078263415	WITHOUT_CLASSIFICATION	3.9217365864008414E-7	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999991949459375	WITHOUT_CLASSIFICATION	8.050540625943583E-7	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999976300543347	WITHOUT_CLASSIFICATION	2.369945665248014E-6	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999991949459375	WITHOUT_CLASSIFICATION	8.050540625943583E-7	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999999881571341	WITHOUT_CLASSIFICATION	1.1842865898888555E-7	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9999973679144368	WITHOUT_CLASSIFICATION	2.632085563184148E-6	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999996927416311	WITHOUT_CLASSIFICATION	3.072583688456467E-7	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9994626752512846	WITHOUT_CLASSIFICATION	5.373247487153627E-4	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999945406999858	WITHOUT_CLASSIFICATION	5.459300014274677E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999995010627725	WITHOUT_CLASSIFICATION	4.9893722754964E-7	TEST
// write	WITHOUT_CLASSIFICATION	0.9999988482133936	WITHOUT_CLASSIFICATION	1.1517866063871587E-6	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9997429537182394	WITHOUT_CLASSIFICATION	2.5704628176059183E-4	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999997777417157	WITHOUT_CLASSIFICATION	2.22258284292182E-7	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999895122514741	WITHOUT_CLASSIFICATION	1.048774852592595E-5	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999939803991215	WITHOUT_CLASSIFICATION	6.019600878524233E-6	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999993227552934	WITHOUT_CLASSIFICATION	6.772447065674315E-7	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999992440645433	WITHOUT_CLASSIFICATION	7.559354567311274E-7	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999999771110685	WITHOUT_CLASSIFICATION	2.288893160085148E-8	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.999978707892276	WITHOUT_CLASSIFICATION	2.129210772402304E-5	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9998189624296109	WITHOUT_CLASSIFICATION	1.8103757038905938E-4	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999914629493	WITHOUT_CLASSIFICATION	8.537050673886633E-9	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999990696603999	WITHOUT_CLASSIFICATION	9.303396001386573E-7	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999974006776344	WITHOUT_CLASSIFICATION	2.5993223655406026E-6	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.999997041483019	WITHOUT_CLASSIFICATION	2.958516980949648E-6	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999998581061095	WITHOUT_CLASSIFICATION	1.4189389050765253E-7	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999997981602242	WITHOUT_CLASSIFICATION	2.0183977576916126E-7	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.99999806434737	WITHOUT_CLASSIFICATION	1.93565263000505E-6	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999999183882767	WITHOUT_CLASSIFICATION	8.16117232881847E-8	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999999084688203	WITHOUT_CLASSIFICATION	9.153117976750303E-8	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999992211258768	WITHOUT_CLASSIFICATION	7.788741232744575E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999998079179637	WITHOUT_CLASSIFICATION	1.9208203627870813E-7	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999999474943342	WITHOUT_CLASSIFICATION	5.250566569376038E-8	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999801774552	WITHOUT_CLASSIFICATION	1.9822544771335014E-8	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999997105011614	WITHOUT_CLASSIFICATION	2.894988386234644E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999747625465649	WITHOUT_CLASSIFICATION	2.5237453435125143E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.99998023039198	WITHOUT_CLASSIFICATION	1.9769608019995703E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999843958030622	WITHOUT_CLASSIFICATION	1.560419693774378E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.999999815389468	WITHOUT_CLASSIFICATION	1.8461053200033128E-7	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999026281606	WITHOUT_CLASSIFICATION	9.737183940566751E-8	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999997338586323	WITHOUT_CLASSIFICATION	2.6614136776270236E-7	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999979044969443	WITHOUT_CLASSIFICATION	2.0955030557424166E-6	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999610714948	WITHOUT_CLASSIFICATION	3.892850525545506E-8	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999954324393076	WITHOUT_CLASSIFICATION	4.567560692448376E-6	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999913852831858	WITHOUT_CLASSIFICATION	8.6147168142325E-6	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999922555926	WITHOUT_CLASSIFICATION	7.744407476660497E-9	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.999997517823558	WITHOUT_CLASSIFICATION	2.4821764420517868E-6	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999794215562	WITHOUT_CLASSIFICATION	2.0578443842973912E-8	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999991601881526	WITHOUT_CLASSIFICATION	8.398118473760328E-7	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999991601881526	WITHOUT_CLASSIFICATION	8.398118473760328E-7	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999997738284315	WITHOUT_CLASSIFICATION	2.2617156853000373E-7	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999996910702166	WITHOUT_CLASSIFICATION	3.089297834026167E-7	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999999048256999	WITHOUT_CLASSIFICATION	9.517430021824696E-8	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999993370963337	WITHOUT_CLASSIFICATION	6.629036662513386E-7	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999830174795	WITHOUT_CLASSIFICATION	1.6982520478261414E-8	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999835593182	WITHOUT_CLASSIFICATION	1.6440681836363736E-8	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999993491698511	WITHOUT_CLASSIFICATION	6.508301488789619E-7	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.999999749614361	WITHOUT_CLASSIFICATION	2.5038563904489954E-7	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.999999042715068	WITHOUT_CLASSIFICATION	9.572849320771534E-7	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999639768192	WITHOUT_CLASSIFICATION	3.602318071139538E-8	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999995832039091	WITHOUT_CLASSIFICATION	4.1679609083648636E-7	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999824636596	WITHOUT_CLASSIFICATION	1.7536340381424195E-8	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999996289733638	WITHOUT_CLASSIFICATION	3.7102663619694467E-7	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.999999524576683	WITHOUT_CLASSIFICATION	4.754233169930825E-7	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999762533115	WITHOUT_CLASSIFICATION	2.3746688466259643E-8	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999998947435988	WITHOUT_CLASSIFICATION	1.0525640118126449E-7	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999997751290688	WITHOUT_CLASSIFICATION	2.248709311300585E-7	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.999999927255905	WITHOUT_CLASSIFICATION	7.27440949923852E-8	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999984955368671	WITHOUT_CLASSIFICATION	1.5044631327557252E-6	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999997817927002	WITHOUT_CLASSIFICATION	2.1820729984260197E-7	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999297373657856	WITHOUT_CLASSIFICATION	7.026263421436454E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999778895117969	WITHOUT_CLASSIFICATION	2.2110488203030885E-5	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.999999981014862	WITHOUT_CLASSIFICATION	1.8985138016530876E-8	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999999881220668	WITHOUT_CLASSIFICATION	1.1877933274806465E-8	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999945221873707	WITHOUT_CLASSIFICATION	5.477812629279427E-6	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999905878545	WITHOUT_CLASSIFICATION	9.412145467742132E-9	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999402660807	WITHOUT_CLASSIFICATION	5.973391930470006E-8	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999993564718849	WITHOUT_CLASSIFICATION	6.43528115253626E-7	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999997731385762	WITHOUT_CLASSIFICATION	2.268614237281857E-7	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999983431227609	WITHOUT_CLASSIFICATION	1.6568772391080552E-6	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999998551768144	WITHOUT_CLASSIFICATION	1.44823185585881E-7	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999995630318884	WITHOUT_CLASSIFICATION	4.3696811159766756E-7	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.999999991508658	WITHOUT_CLASSIFICATION	8.491341973510255E-9	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999999705263993	WITHOUT_CLASSIFICATION	2.9473600686786418E-8	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999311862634	WITHOUT_CLASSIFICATION	6.881373657815226E-8	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999851881402	WITHOUT_CLASSIFICATION	1.4811859908800284E-8	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999849073340606	WITHOUT_CLASSIFICATION	1.5092665939258546E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999832467777253	WITHOUT_CLASSIFICATION	1.675322227465287E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999993942505712	WITHOUT_CLASSIFICATION	6.057494288745423E-7	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999833424555309	WITHOUT_CLASSIFICATION	1.6657544469121535E-5	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999910995552385	WITHOUT_CLASSIFICATION	8.900444761572651E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999998421004017	WITHOUT_CLASSIFICATION	1.5789959822041825E-7	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999984464137357	WITHOUT_CLASSIFICATION	1.5535862643056747E-6	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999419560269	WITHOUT_CLASSIFICATION	5.804397319673442E-8	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999980012510687	WITHOUT_CLASSIFICATION	1.998748931256968E-6	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999263031907	WITHOUT_CLASSIFICATION	7.369680940392691E-8	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999343076571	WITHOUT_CLASSIFICATION	6.56923429159929E-8	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999999752500286	WITHOUT_CLASSIFICATION	2.4749971445847105E-8	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9999495586638406	WITHOUT_CLASSIFICATION	5.04413361593882E-5	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999992379272977	WITHOUT_CLASSIFICATION	7.620727023186284E-7	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999836719936	WITHOUT_CLASSIFICATION	1.632800629909301E-8	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.99999962871629	WITHOUT_CLASSIFICATION	3.712837100522295E-7	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999505733456	WITHOUT_CLASSIFICATION	4.942665438820027E-8	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999977928827	WITHOUT_CLASSIFICATION	2.2071172874583195E-9	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.999999946281474	WITHOUT_CLASSIFICATION	5.3718526029967106E-8	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999999789799853	WITHOUT_CLASSIFICATION	2.102001474857338E-8	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999999785376887	WITHOUT_CLASSIFICATION	2.1462311206807793E-8	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999996229434948	WITHOUT_CLASSIFICATION	3.7705650524469653E-7	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999999585196094	WITHOUT_CLASSIFICATION	4.148039046774353E-8	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999699683695	WITHOUT_CLASSIFICATION	3.003163051072422E-8	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999999782565037	WITHOUT_CLASSIFICATION	2.174349639373754E-8	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999995619555575	WITHOUT_CLASSIFICATION	4.380444425465637E-7	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999997029172257	WITHOUT_CLASSIFICATION	2.9708277427431195E-7	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999529122672	WITHOUT_CLASSIFICATION	4.70877327599423E-8	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999998102875486	WITHOUT_CLASSIFICATION	1.897124514950578E-7	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.99997849381448	WITHOUT_CLASSIFICATION	2.1506185519983738E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999916105222251	WITHOUT_CLASSIFICATION	8.389477774952158E-6	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.999998174590555	WITHOUT_CLASSIFICATION	1.8254094450572738E-6	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999963790541121	WITHOUT_CLASSIFICATION	3.620945887844484E-6	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999996587548305	WITHOUT_CLASSIFICATION	3.4124516953067537E-7	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999991704094736	WITHOUT_CLASSIFICATION	8.295905262502478E-7	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.999999659642121	WITHOUT_CLASSIFICATION	3.403578790049865E-7	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999772076715	WITHOUT_CLASSIFICATION	2.2792328441924487E-8	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999626329485629	WITHOUT_CLASSIFICATION	3.736705143705036E-5	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9999580275173802	WITHOUT_CLASSIFICATION	4.197248261980276E-5	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.999975662569543	WITHOUT_CLASSIFICATION	2.433743045698833E-5	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9999622586008118	WITHOUT_CLASSIFICATION	3.774139918825872E-5	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9999533143107036	WITHOUT_CLASSIFICATION	4.668568929644168E-5	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9999693645831359	WITHOUT_CLASSIFICATION	3.063541686412211E-5	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9999696472341773	WITHOUT_CLASSIFICATION	3.0352765822805256E-5	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9999695190429178	WITHOUT_CLASSIFICATION	3.0480957082285064E-5	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.999969651558625	WITHOUT_CLASSIFICATION	3.0348441375028318E-5	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9999663789389013	WITHOUT_CLASSIFICATION	3.3621061098689126E-5	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9999646349537757	WITHOUT_CLASSIFICATION	3.5365046224215114E-5	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.9999640412018885	WITHOUT_CLASSIFICATION	3.595879811142867E-5	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9999575298333454	WITHOUT_CLASSIFICATION	4.247016665463512E-5	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.99995014836813	WITHOUT_CLASSIFICATION	4.985163186996458E-5	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.9999646670530674	WITHOUT_CLASSIFICATION	3.5332946932549896E-5	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9999640691121774	WITHOUT_CLASSIFICATION	3.593088782256956E-5	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.999964610077648	WITHOUT_CLASSIFICATION	3.538992235201204E-5	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.999959438565377	WITHOUT_CLASSIFICATION	4.056143462305493E-5	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.999923915479232	WITHOUT_CLASSIFICATION	7.608452076803836E-5	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9999520005322126	WITHOUT_CLASSIFICATION	4.799946778733359E-5	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999998549172328	WITHOUT_CLASSIFICATION	1.450827671902213E-7	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999939655867656	WITHOUT_CLASSIFICATION	6.034413234403939E-6	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999994994686994	WITHOUT_CLASSIFICATION	5.00531300576128E-7	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.999999791553521	WITHOUT_CLASSIFICATION	2.0844647887153123E-7	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999990501982188	WITHOUT_CLASSIFICATION	9.498017811090617E-7	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999999888162067	WITHOUT_CLASSIFICATION	1.118379321541322E-8	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999999903251419	WITHOUT_CLASSIFICATION	9.674858108058731E-9	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999993416333253	WITHOUT_CLASSIFICATION	6.583666746353673E-7	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999268989923	WITHOUT_CLASSIFICATION	7.310100768956999E-8	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999992972417068	WITHOUT_CLASSIFICATION	7.027582932225991E-7	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9633794665698433	WITHOUT_CLASSIFICATION	0.03662053343015676	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999997163268993	WITHOUT_CLASSIFICATION	2.83673100712505E-7	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999959172635663	WITHOUT_CLASSIFICATION	4.082736433668191E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999995753177282	WITHOUT_CLASSIFICATION	4.2468227174130804E-7	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999995753177282	WITHOUT_CLASSIFICATION	4.2468227174130804E-7	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999999659402	WITHOUT_CLASSIFICATION	3.4059800044977116E-8	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999976439441791	WITHOUT_CLASSIFICATION	2.3560558209060174E-6	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999811937986	WITHOUT_CLASSIFICATION	1.8806201439392423E-8	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999997558403282	WITHOUT_CLASSIFICATION	2.441596718429481E-7	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999999746968016	WITHOUT_CLASSIFICATION	2.5303198536149868E-8	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999984612827092	WITHOUT_CLASSIFICATION	1.5387172907326983E-6	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999985421942295	WITHOUT_CLASSIFICATION	1.4578057705023365E-6	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999999112270892	WITHOUT_CLASSIFICATION	8.877291085126216E-8	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999999236535217	WITHOUT_CLASSIFICATION	7.634647820104655E-8	TEST
// base	WITHOUT_CLASSIFICATION	0.9999988398939418	WITHOUT_CLASSIFICATION	1.1601060582278397E-6	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999204418705444	WITHOUT_CLASSIFICATION	7.955812945564537E-5	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999623500709	WITHOUT_CLASSIFICATION	3.7649929092448005E-8	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9999939214597708	WITHOUT_CLASSIFICATION	6.078540229138649E-6	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999991818836551	WITHOUT_CLASSIFICATION	8.181163449107245E-7	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999998648915644	WITHOUT_CLASSIFICATION	1.3510843558050226E-7	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999911308723782	WITHOUT_CLASSIFICATION	8.869127621745387E-6	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999989154909816	WITHOUT_CLASSIFICATION	1.0845090183846413E-6	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999299415566	WITHOUT_CLASSIFICATION	7.005844345803403E-8	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999992279751697	WITHOUT_CLASSIFICATION	7.720248302435503E-7	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999945520266815	WITHOUT_CLASSIFICATION	5.447973318478103E-6	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999997375402092	WITHOUT_CLASSIFICATION	2.6245979075491077E-7	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999999987361149	WITHOUT_CLASSIFICATION	1.2638850295944588E-9	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999977054006608	WITHOUT_CLASSIFICATION	2.294599339152627E-6	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999994779556902	WITHOUT_CLASSIFICATION	5.220443099165072E-7	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999559220061	WITHOUT_CLASSIFICATION	4.407799399204469E-8	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999991048368373	WITHOUT_CLASSIFICATION	8.951631627044261E-7	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999999054642673	WITHOUT_CLASSIFICATION	9.45357326787332E-8	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999998052737846	WITHOUT_CLASSIFICATION	1.947262152548338E-7	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999983640914758	WITHOUT_CLASSIFICATION	1.6359085243108961E-6	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999976083912054	WITHOUT_CLASSIFICATION	2.3916087944894144E-6	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999989838941967	WITHOUT_CLASSIFICATION	1.0161058032204101E-6	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999993929926414	WITHOUT_CLASSIFICATION	6.070073586016056E-7	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999973848534391	WITHOUT_CLASSIFICATION	2.6151465608735867E-6	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999983746157466	WITHOUT_CLASSIFICATION	1.625384253511086E-6	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999996154385813	WITHOUT_CLASSIFICATION	3.8456141875592297E-7	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999995830698473	WITHOUT_CLASSIFICATION	4.169301527849802E-7	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998759054265	WITHOUT_CLASSIFICATION	1.2409457349960594E-6	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999666941035	WITHOUT_CLASSIFICATION	3.330589647695454E-8	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999998863886594	WITHOUT_CLASSIFICATION	1.1361134051205406E-7	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999869850461	WITHOUT_CLASSIFICATION	1.3014953943803332E-8	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999998908070813	WITHOUT_CLASSIFICATION	1.0919291862936012E-7	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999998998385502	WITHOUT_CLASSIFICATION	1.0016144979131953E-7	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.999999882208117	WITHOUT_CLASSIFICATION	1.1779188299267193E-7	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.99999752149067	WITHOUT_CLASSIFICATION	2.478509329949351E-6	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.99999752149067	WITHOUT_CLASSIFICATION	2.478509329949351E-6	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999999172591792	WITHOUT_CLASSIFICATION	8.274082068766556E-8	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999998006821924	WITHOUT_CLASSIFICATION	1.9931780749205526E-7	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.99999971807928	WITHOUT_CLASSIFICATION	2.8192071989861676E-7	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999993075642541	WITHOUT_CLASSIFICATION	6.924357458355147E-7	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999841684619285	WITHOUT_CLASSIFICATION	1.5831538071486216E-5	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999998011537651	WITHOUT_CLASSIFICATION	1.9884623500664324E-7	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999998789544091	WITHOUT_CLASSIFICATION	1.2104559087118912E-7	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999705751791332	WITHOUT_CLASSIFICATION	2.942482086683838E-5	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999994781507308	WITHOUT_CLASSIFICATION	5.218492692073599E-7	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999991863023123	WITHOUT_CLASSIFICATION	8.136976876354138E-7	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999994128802309	WITHOUT_CLASSIFICATION	5.871197691212877E-7	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999997167031102	WITHOUT_CLASSIFICATION	2.8329688980392124E-7	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999938317505813	WITHOUT_CLASSIFICATION	6.168249418760438E-6	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999984326978122	WITHOUT_CLASSIFICATION	1.5673021877798745E-6	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9995140364104893	WITHOUT_CLASSIFICATION	4.859635895107254E-4	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999988091426076	WITHOUT_CLASSIFICATION	1.190857392445993E-6	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999826088431303	WITHOUT_CLASSIFICATION	1.7391156869686898E-5	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999997242161885	WITHOUT_CLASSIFICATION	2.7578381145270264E-7	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999973687195283	WITHOUT_CLASSIFICATION	2.6312804716535754E-6	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999846810111028	WITHOUT_CLASSIFICATION	1.5318988897234775E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999586341095	WITHOUT_CLASSIFICATION	4.1365890627145205E-8	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999586341095	WITHOUT_CLASSIFICATION	4.1365890627145205E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998450909846	WITHOUT_CLASSIFICATION	1.5490901539520305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998450909846	WITHOUT_CLASSIFICATION	1.5490901539520305E-7	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.999999830036521	WITHOUT_CLASSIFICATION	1.699634789734295E-7	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999997267058953	WITHOUT_CLASSIFICATION	2.7329410472538154E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999985115659166	WITHOUT_CLASSIFICATION	1.488434083396447E-6	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999993796242547	WITHOUT_CLASSIFICATION	6.203757454287255E-7	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999994879326791	WITHOUT_CLASSIFICATION	5.120673208994828E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999540149167	WITHOUT_CLASSIFICATION	4.5985083312548025E-8	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999960436293681	WITHOUT_CLASSIFICATION	3.956370631920189E-6	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999989250753519	WITHOUT_CLASSIFICATION	1.0749246481480774E-6	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999994429784097	WITHOUT_CLASSIFICATION	5.570215903611919E-7	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999995530031104	WITHOUT_CLASSIFICATION	4.4699688957431154E-7	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.999998665981085	WITHOUT_CLASSIFICATION	1.3340189149767652E-6	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.999999882618174	WITHOUT_CLASSIFICATION	1.1738182609394439E-7	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999997279864344	WITHOUT_CLASSIFICATION	2.7201356548452617E-7	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9998901904866945	WITHOUT_CLASSIFICATION	1.0980951330550894E-4	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999997442476063	WITHOUT_CLASSIFICATION	2.557523937039859E-7	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999993063307809	WITHOUT_CLASSIFICATION	6.936692190448025E-7	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999947249707499	WITHOUT_CLASSIFICATION	5.275029250078228E-6	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999995017775264	WITHOUT_CLASSIFICATION	4.982224736557305E-7	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9999928017942609	WITHOUT_CLASSIFICATION	7.198205739072526E-6	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999981300761369	WITHOUT_CLASSIFICATION	1.869923863045683E-6	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999989158532229	WITHOUT_CLASSIFICATION	1.084146777185955E-6	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999999504479976	WITHOUT_CLASSIFICATION	4.9552002480434216E-8	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999994791526986	WITHOUT_CLASSIFICATION	5.208473014179756E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999998079179637	WITHOUT_CLASSIFICATION	1.9208203627870813E-7	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999835593182	WITHOUT_CLASSIFICATION	1.6440681836363736E-8	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999997890686293	WITHOUT_CLASSIFICATION	2.1093137066250077E-7	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999609473463	WITHOUT_CLASSIFICATION	3.9052653698196094E-8	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999998997986603	WITHOUT_CLASSIFICATION	1.0020133964397552E-7	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999993195964577	WITHOUT_CLASSIFICATION	6.804035423484964E-7	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999999316370664	WITHOUT_CLASSIFICATION	6.836293359188178E-8	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999999316370664	WITHOUT_CLASSIFICATION	6.836293359188178E-8	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999800822188	WITHOUT_CLASSIFICATION	1.9917781225999987E-8	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999997202974658	WITHOUT_CLASSIFICATION	2.797025342354761E-7	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999214465001	WITHOUT_CLASSIFICATION	7.85534998435248E-8	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999998626607705	WITHOUT_CLASSIFICATION	1.3733922958042522E-7	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.999999998197246	WITHOUT_CLASSIFICATION	1.8027539777443485E-9	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999998412308817	WITHOUT_CLASSIFICATION	1.5876911835142713E-7	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999997939842596	WITHOUT_CLASSIFICATION	2.0601574043221552E-7	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999999971217336	WITHOUT_CLASSIFICATION	2.8782663417047353E-9	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999997819449968	WITHOUT_CLASSIFICATION	2.1805500311894464E-7	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999990740514444	WITHOUT_CLASSIFICATION	9.259485556520343E-7	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.999998852834823	WITHOUT_CLASSIFICATION	1.1471651770291676E-6	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.999999983985779	WITHOUT_CLASSIFICATION	1.6014220934276793E-8	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.999999491242351	WITHOUT_CLASSIFICATION	5.087576489267479E-7	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999987694149379	WITHOUT_CLASSIFICATION	1.2305850620654207E-6	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999642046782	WITHOUT_CLASSIFICATION	3.579532186725852E-8	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999499812788	WITHOUT_CLASSIFICATION	5.001872120485862E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999968920659117	WITHOUT_CLASSIFICATION	3.10793408832842E-6	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999998989525365	WITHOUT_CLASSIFICATION	1.0104746359111035E-7	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999999823386755	WITHOUT_CLASSIFICATION	1.7661324513019566E-8	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999325135040249	WITHOUT_CLASSIFICATION	6.748649597518037E-5	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999998475208159	WITHOUT_CLASSIFICATION	1.5247918401846262E-7	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999992463166473	WITHOUT_CLASSIFICATION	7.536833527714323E-7	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999751040850208	WITHOUT_CLASSIFICATION	2.4895914979237228E-5	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999991828641523	WITHOUT_CLASSIFICATION	8.171358476884654E-7	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999997280762855	WITHOUT_CLASSIFICATION	2.719237146277312E-7	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999997820292843	WITHOUT_CLASSIFICATION	2.179707156879175E-7	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999996690561033	WITHOUT_CLASSIFICATION	3.309438966704484E-7	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999991213949235	WITHOUT_CLASSIFICATION	8.786050763770718E-7	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999662875372	WITHOUT_CLASSIFICATION	3.371246289315454E-8	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999989144803948	WITHOUT_CLASSIFICATION	1.0855196051904087E-6	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999998567287803	WITHOUT_CLASSIFICATION	1.4327121963679885E-7	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999990741714441	WITHOUT_CLASSIFICATION	9.258285558646949E-7	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999985942354428	WITHOUT_CLASSIFICATION	1.4057645572405163E-6	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9999988356184399	WITHOUT_CLASSIFICATION	1.1643815600288843E-6	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999971409382562	WITHOUT_CLASSIFICATION	2.8590617437262483E-6	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999999797130028	WITHOUT_CLASSIFICATION	2.0286997110908476E-8	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999891996960693	WITHOUT_CLASSIFICATION	1.0800303930655825E-5	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999950487861228	WITHOUT_CLASSIFICATION	4.951213877239811E-6	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999999158387796	WITHOUT_CLASSIFICATION	8.416122043460694E-8	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.999999499306202	WITHOUT_CLASSIFICATION	5.006937979512916E-7	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.999999973279887	WITHOUT_CLASSIFICATION	2.6720112964455573E-8	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999999822986169	WITHOUT_CLASSIFICATION	1.7701383110536182E-8	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999995287712126	WITHOUT_CLASSIFICATION	4.7122878749002816E-7	TEST
// while	WITHOUT_CLASSIFICATION	0.9999981574608455	WITHOUT_CLASSIFICATION	1.8425391544358985E-6	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999199530826842	WITHOUT_CLASSIFICATION	8.004691731574729E-5	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999999505336395	WITHOUT_CLASSIFICATION	4.9466360412716595E-8	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999997500650067	WITHOUT_CLASSIFICATION	2.4993499322398756E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999833788199	WITHOUT_CLASSIFICATION	1.662118010767835E-8	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999999285312979	WITHOUT_CLASSIFICATION	7.146870208371927E-8	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999997225758682	WITHOUT_CLASSIFICATION	2.774241318279308E-7	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999668439298345	WITHOUT_CLASSIFICATION	3.315607016557289E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999691770291437	WITHOUT_CLASSIFICATION	3.082297085626854E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999968062340315	WITHOUT_CLASSIFICATION	3.193765968496868E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999764448682396	WITHOUT_CLASSIFICATION	2.3555131760564228E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999925812085898	WITHOUT_CLASSIFICATION	7.418791410206407E-6	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999847268413624	WITHOUT_CLASSIFICATION	1.5273158637599396E-5	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999924545058022	WITHOUT_CLASSIFICATION	7.545494197801043E-6	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999998958160978	WITHOUT_CLASSIFICATION	1.0418390215474391E-7	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999905591475649	WITHOUT_CLASSIFICATION	9.440852435155428E-6	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999998075026078	WITHOUT_CLASSIFICATION	1.9249739230628542E-7	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999183609239742	WITHOUT_CLASSIFICATION	8.163907602567532E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999668439298345	WITHOUT_CLASSIFICATION	3.315607016557289E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999968062340315	WITHOUT_CLASSIFICATION	3.193765968496868E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999691770291437	WITHOUT_CLASSIFICATION	3.082297085626854E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999658153139305	WITHOUT_CLASSIFICATION	3.418468606953588E-5	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999797988674686	WITHOUT_CLASSIFICATION	2.020113253139805E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999916164598648	WITHOUT_CLASSIFICATION	8.38354013515459E-6	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999997255858383	WITHOUT_CLASSIFICATION	2.7441416173431815E-7	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999997687960546	WITHOUT_CLASSIFICATION	2.3120394545706512E-7	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999989816389914	WITHOUT_CLASSIFICATION	1.0183610086626047E-6	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999984245936723	WITHOUT_CLASSIFICATION	1.5754063277827425E-6	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999995526109371	WITHOUT_CLASSIFICATION	4.4738906291696904E-7	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999993844723787	WITHOUT_CLASSIFICATION	6.155276213095606E-7	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999999419283644	WITHOUT_CLASSIFICATION	5.807163556216911E-8	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999999651504033	WITHOUT_CLASSIFICATION	3.484959661410743E-8	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.999999978175296	WITHOUT_CLASSIFICATION	2.1824704028153698E-8	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999988601386799	WITHOUT_CLASSIFICATION	1.1398613201085864E-6	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999991502851213	WITHOUT_CLASSIFICATION	8.497148787607368E-7	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999999743423462	WITHOUT_CLASSIFICATION	2.565765377008915E-8	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999993753962163	WITHOUT_CLASSIFICATION	6.246037837563018E-7	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999996152568736	WITHOUT_CLASSIFICATION	3.8474312637732E-7	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999987777395832	WITHOUT_CLASSIFICATION	1.22226041673197E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999987777395832	WITHOUT_CLASSIFICATION	1.22226041673197E-6	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999996179926414	WITHOUT_CLASSIFICATION	3.820073585474793E-7	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999995651330014	WITHOUT_CLASSIFICATION	4.348669987188044E-7	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999994531249238	WITHOUT_CLASSIFICATION	5.468750761690135E-7	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999855216268366	WITHOUT_CLASSIFICATION	1.4478373163487243E-5	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999996234409146	WITHOUT_CLASSIFICATION	3.7655908542397323E-7	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999999639441371	WITHOUT_CLASSIFICATION	3.6055862892884354E-8	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999999495818418	WITHOUT_CLASSIFICATION	5.0418158217305984E-8	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999995065583226	WITHOUT_CLASSIFICATION	4.934416774156758E-7	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999997796333905	WITHOUT_CLASSIFICATION	2.203666095868788E-7	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999851335052	WITHOUT_CLASSIFICATION	1.4866494802384108E-8	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999999081423806	WITHOUT_CLASSIFICATION	9.185761940142987E-8	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999942223249384	WITHOUT_CLASSIFICATION	5.777675061626069E-6	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999998752344794	WITHOUT_CLASSIFICATION	1.2476552055465573E-7	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999998169738992	WITHOUT_CLASSIFICATION	1.830261008540025E-7	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999999266924917	WITHOUT_CLASSIFICATION	7.33075082255918E-8	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999997330779804	WITHOUT_CLASSIFICATION	2.6692201960575024E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999998747298989	WITHOUT_CLASSIFICATION	1.2527010113930905E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999069019322	WITHOUT_CLASSIFICATION	9.30980677251148E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999069019322	WITHOUT_CLASSIFICATION	9.30980677251148E-8	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9999976349328741	WITHOUT_CLASSIFICATION	2.3650671258713315E-6	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999969835439066	WITHOUT_CLASSIFICATION	3.0164560932767143E-6	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999858430853642	WITHOUT_CLASSIFICATION	1.4156914635703402E-5	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999961918207635	WITHOUT_CLASSIFICATION	3.8081792365313195E-6	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999999535425204	WITHOUT_CLASSIFICATION	4.6457479574056146E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999069019322	WITHOUT_CLASSIFICATION	9.30980677251148E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999069019322	WITHOUT_CLASSIFICATION	9.30980677251148E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999909656967	WITHOUT_CLASSIFICATION	9.034303327970498E-9	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999909656967	WITHOUT_CLASSIFICATION	9.034303327970498E-9	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999973746439779	WITHOUT_CLASSIFICATION	2.6253560221983093E-6	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999954473287915	WITHOUT_CLASSIFICATION	4.552671208444337E-6	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.999999968375188	WITHOUT_CLASSIFICATION	3.162481194636946E-8	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.999999895792191	WITHOUT_CLASSIFICATION	1.042078090230574E-7	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999800844375	WITHOUT_CLASSIFICATION	1.9915562556366647E-8	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999800844375	WITHOUT_CLASSIFICATION	1.9915562556366647E-8	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999998797364767	WITHOUT_CLASSIFICATION	1.2026352314872306E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999967665154821	WITHOUT_CLASSIFICATION	3.233484518006215E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999992753032576	WITHOUT_CLASSIFICATION	7.2469674239591915E-6	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999996509157303	WITHOUT_CLASSIFICATION	3.4908426973289867E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999906871423	WITHOUT_CLASSIFICATION	9.312857669704313E-9	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999995339900384	WITHOUT_CLASSIFICATION	4.660099616452999E-7	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999998096822824	WITHOUT_CLASSIFICATION	1.9031771755066398E-7	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999998575256305	WITHOUT_CLASSIFICATION	1.4247436944694315E-7	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999996006572909	WITHOUT_CLASSIFICATION	3.9934270911505334E-7	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999715223692	WITHOUT_CLASSIFICATION	2.8477630733492915E-8	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999937931637696	WITHOUT_CLASSIFICATION	6.206836230404808E-6	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999999039883368	WITHOUT_CLASSIFICATION	9.601166329568812E-8	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999995225598948	WITHOUT_CLASSIFICATION	4.774401051341021E-7	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999210295777	WITHOUT_CLASSIFICATION	7.897042240167166E-8	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999997330779804	WITHOUT_CLASSIFICATION	2.6692201960575024E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999069019322	WITHOUT_CLASSIFICATION	9.30980677251148E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999909656967	WITHOUT_CLASSIFICATION	9.034303327970498E-9	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999995339900384	WITHOUT_CLASSIFICATION	4.660099616452999E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999996105946308	WITHOUT_CLASSIFICATION	3.8940536915801836E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999996105946308	WITHOUT_CLASSIFICATION	3.8940536915801836E-7	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999996697132789	WITHOUT_CLASSIFICATION	3.3028672107988007E-7	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999998891746509	WITHOUT_CLASSIFICATION	1.1082534919183209E-7	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999897597928	WITHOUT_CLASSIFICATION	1.0240207199939815E-8	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.999999996006924	WITHOUT_CLASSIFICATION	3.993076008778846E-9	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999990674453123	WITHOUT_CLASSIFICATION	9.325546877150521E-7	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999997735096005	WITHOUT_CLASSIFICATION	2.264903994628125E-7	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999993896150967	WITHOUT_CLASSIFICATION	6.103849032673736E-7	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999980988092881	WITHOUT_CLASSIFICATION	1.901190711946053E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999888750525	WITHOUT_CLASSIFICATION	1.112494756572246E-8	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999999088227987	WITHOUT_CLASSIFICATION	9.117720140127181E-8	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.999999567869993	WITHOUT_CLASSIFICATION	4.3213000696727135E-7	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999943078537	WITHOUT_CLASSIFICATION	5.69214628993725E-9	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999998997857265	WITHOUT_CLASSIFICATION	1.0021427350358521E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999998747298989	WITHOUT_CLASSIFICATION	1.2527010113930905E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999909656967	WITHOUT_CLASSIFICATION	9.034303327970498E-9	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999967665154821	WITHOUT_CLASSIFICATION	3.233484518006215E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999992753032576	WITHOUT_CLASSIFICATION	7.2469674239591915E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999992753032576	WITHOUT_CLASSIFICATION	7.2469674239591915E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999906871423	WITHOUT_CLASSIFICATION	9.312857669704313E-9	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999995339900384	WITHOUT_CLASSIFICATION	4.660099616452999E-7	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999995339900384	WITHOUT_CLASSIFICATION	4.660099616452999E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999996105946308	WITHOUT_CLASSIFICATION	3.8940536915801836E-7	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999994310249299	WITHOUT_CLASSIFICATION	5.689750700724153E-7	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999984629429641	WITHOUT_CLASSIFICATION	1.537057035864818E-6	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999228901596	WITHOUT_CLASSIFICATION	7.710984036829369E-8	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999867341776569	WITHOUT_CLASSIFICATION	1.3265822343043957E-5	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999994431290793	WITHOUT_CLASSIFICATION	5.568709207707967E-7	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999586165713897	WITHOUT_CLASSIFICATION	4.1383428610337096E-5	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999997768680682	WITHOUT_CLASSIFICATION	2.2313193191921726E-7	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999899039214	WITHOUT_CLASSIFICATION	1.0096078703839925E-8	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999998525083945	WITHOUT_CLASSIFICATION	1.4749160553828007E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999967665154821	WITHOUT_CLASSIFICATION	3.233484518006215E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999992753032576	WITHOUT_CLASSIFICATION	7.2469674239591915E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999992753032576	WITHOUT_CLASSIFICATION	7.2469674239591915E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999906871423	WITHOUT_CLASSIFICATION	9.312857669704313E-9	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999980988092881	WITHOUT_CLASSIFICATION	1.901190711946053E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999999088227987	WITHOUT_CLASSIFICATION	9.117720140127181E-8	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9987112278172041	WITHOUT_CLASSIFICATION	0.0012887721827959573	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999997252095825	WITHOUT_CLASSIFICATION	2.7479041746781944E-7	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.999995380976735	WITHOUT_CLASSIFICATION	4.619023265006183E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.999995380976735	WITHOUT_CLASSIFICATION	4.619023265006183E-6	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999997547104243	WITHOUT_CLASSIFICATION	2.45289575609925E-7	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999994837507565	WITHOUT_CLASSIFICATION	5.162492435713773E-7	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999985718071069	WITHOUT_CLASSIFICATION	1.4281928930238733E-6	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999301794367	WITHOUT_CLASSIFICATION	6.982056331438224E-8	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999997216370601	WITHOUT_CLASSIFICATION	2.7836293988012137E-7	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999997216370601	WITHOUT_CLASSIFICATION	2.7836293988012137E-7	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999997524233978	WITHOUT_CLASSIFICATION	2.4757660220126965E-7	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999997524233978	WITHOUT_CLASSIFICATION	2.4757660220126965E-7	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999585643518	WITHOUT_CLASSIFICATION	4.1435648122311725E-8	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999585643518	WITHOUT_CLASSIFICATION	4.1435648122311725E-8	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999989885297875	WITHOUT_CLASSIFICATION	1.011470212462937E-6	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999998212621503	WITHOUT_CLASSIFICATION	1.787378496638374E-7	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999958391397803	WITHOUT_CLASSIFICATION	4.1608602196515065E-6	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999999245947381	WITHOUT_CLASSIFICATION	7.540526197366411E-8	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999999807545669	WITHOUT_CLASSIFICATION	1.9245433092084638E-8	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999966343507425	WITHOUT_CLASSIFICATION	3.3656492574918423E-6	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999985695847362	WITHOUT_CLASSIFICATION	1.4304152638012515E-6	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999961281757483	WITHOUT_CLASSIFICATION	3.871824251672929E-6	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999491343866601	WITHOUT_CLASSIFICATION	5.086561333983636E-5	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999524570187474	WITHOUT_CLASSIFICATION	4.7542981252749654E-5	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999999811120147	WITHOUT_CLASSIFICATION	1.8887985250724838E-8	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999999506364271	WITHOUT_CLASSIFICATION	4.936357291680069E-8	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999987350828001	WITHOUT_CLASSIFICATION	1.2649171998353968E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999986648735485	WITHOUT_CLASSIFICATION	1.3351264514633796E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999986648735485	WITHOUT_CLASSIFICATION	1.3351264514633796E-6	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999974904171633	WITHOUT_CLASSIFICATION	2.5095828367037316E-6	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999540149167	WITHOUT_CLASSIFICATION	4.5985083312548025E-8	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999995629557233	WITHOUT_CLASSIFICATION	4.3704427663585435E-7	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999762730762	WITHOUT_CLASSIFICATION	2.3726923772596304E-8	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999998102208987	WITHOUT_CLASSIFICATION	1.897791014037478E-7	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999997727647579	WITHOUT_CLASSIFICATION	2.2723524203303467E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999998551557274	WITHOUT_CLASSIFICATION	1.4484427251919176E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.99999988424983	WITHOUT_CLASSIFICATION	1.1575016995653459E-7	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999849015613	WITHOUT_CLASSIFICATION	1.5098438671201426E-8	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.999999978473948	WITHOUT_CLASSIFICATION	2.152605204702565E-8	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999351708042	WITHOUT_CLASSIFICATION	6.482919580327816E-8	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999988064373226	WITHOUT_CLASSIFICATION	1.1935626773818064E-6	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999997962319583	WITHOUT_CLASSIFICATION	2.0376804155841125E-7	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999990139186425	WITHOUT_CLASSIFICATION	9.86081357493189E-7	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999953189243284	WITHOUT_CLASSIFICATION	4.681075671673067E-6	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999977563735278	WITHOUT_CLASSIFICATION	2.243626472101297E-6	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999994864323825	WITHOUT_CLASSIFICATION	5.135676174599299E-7	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999999294696701	WITHOUT_CLASSIFICATION	7.053032986686E-8	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997702458607	WITHOUT_CLASSIFICATION	2.2975413930680844E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997702458607	WITHOUT_CLASSIFICATION	2.2975413930680844E-7	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999999048588006	WITHOUT_CLASSIFICATION	9.514119939290023E-8	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999990169084096	WITHOUT_CLASSIFICATION	9.830915904034636E-6	TEST
//[]	WITHOUT_CLASSIFICATION	0.9998006290537182	WITHOUT_CLASSIFICATION	1.9937094628180618E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9998006290537182	WITHOUT_CLASSIFICATION	1.9937094628180618E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999978323512566	WITHOUT_CLASSIFICATION	2.1676487434401227E-6	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999918938005525	WITHOUT_CLASSIFICATION	8.10619944739311E-6	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999689494819146	WITHOUT_CLASSIFICATION	3.1050518085297525E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999770444161017	WITHOUT_CLASSIFICATION	2.295558389831723E-5	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999996460931584	WITHOUT_CLASSIFICATION	3.5390684164462246E-7	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999675493018	WITHOUT_CLASSIFICATION	3.245069829956738E-8	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999675493018	WITHOUT_CLASSIFICATION	3.245069829956738E-8	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999976021108	WITHOUT_CLASSIFICATION	2.3978892529131072E-9	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999995519131812	WITHOUT_CLASSIFICATION	4.480868187731632E-7	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999999483879838	WITHOUT_CLASSIFICATION	5.161201626547065E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999920660436584	WITHOUT_CLASSIFICATION	7.933956341602887E-6	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999990169084096	WITHOUT_CLASSIFICATION	9.830915904034636E-6	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999853156745251	WITHOUT_CLASSIFICATION	1.468432547489202E-5	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999972391674221	WITHOUT_CLASSIFICATION	2.7608325779501285E-6	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999972391674221	WITHOUT_CLASSIFICATION	2.7608325779501285E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999988027074512	WITHOUT_CLASSIFICATION	1.1972925487624523E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999863282316	WITHOUT_CLASSIFICATION	1.3671768265424728E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999863282316	WITHOUT_CLASSIFICATION	1.3671768265424728E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998930304725	WITHOUT_CLASSIFICATION	1.0696952748683522E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998930304725	WITHOUT_CLASSIFICATION	1.0696952748683522E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998930304725	WITHOUT_CLASSIFICATION	1.0696952748683522E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999863282316	WITHOUT_CLASSIFICATION	1.3671768265424728E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999863282316	WITHOUT_CLASSIFICATION	1.3671768265424728E-8	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999988027074512	WITHOUT_CLASSIFICATION	1.1972925487624523E-6	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999999516877282	WITHOUT_CLASSIFICATION	4.8312271813656725E-8	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999997859710522	WITHOUT_CLASSIFICATION	2.1402894765927217E-7	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999991205514088	WITHOUT_CLASSIFICATION	8.794485911447197E-7	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999989963610597	WITHOUT_CLASSIFICATION	1.0036389403160604E-6	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.999999977045944	WITHOUT_CLASSIFICATION	2.2954056064253024E-8	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999992469442678	WITHOUT_CLASSIFICATION	7.530557321253206E-7	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999992018783531	WITHOUT_CLASSIFICATION	7.981216469514114E-7	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999765366832	WITHOUT_CLASSIFICATION	2.3463316859041573E-8	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999351708042	WITHOUT_CLASSIFICATION	6.482919580327816E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999863282316	WITHOUT_CLASSIFICATION	1.3671768265424728E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999863282316	WITHOUT_CLASSIFICATION	1.3671768265424728E-8	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999694609876	WITHOUT_CLASSIFICATION	3.053901234743509E-8	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999998393634738	WITHOUT_CLASSIFICATION	1.606365261161404E-7	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999986580270611	WITHOUT_CLASSIFICATION	1.3419729388354302E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999998935855497	WITHOUT_CLASSIFICATION	1.0641445034692601E-7	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999997852716268	WITHOUT_CLASSIFICATION	2.1472837315824046E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999177530284	WITHOUT_CLASSIFICATION	8.224697160015184E-8	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999999973634538	WITHOUT_CLASSIFICATION	2.6365462014664466E-8	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999998857625664	WITHOUT_CLASSIFICATION	1.1423743363262153E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999999515748062	WITHOUT_CLASSIFICATION	4.842519379342726E-7	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999563623807	WITHOUT_CLASSIFICATION	4.363761932924463E-8	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999853106098655	WITHOUT_CLASSIFICATION	1.4689390134457767E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999935664359811	WITHOUT_CLASSIFICATION	6.433564018938296E-6	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999997321246543	WITHOUT_CLASSIFICATION	2.678753456792353E-7	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999997924169494	WITHOUT_CLASSIFICATION	2.0758305054472264E-7	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999940414313	WITHOUT_CLASSIFICATION	5.958568833616227E-9	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999976314881782	WITHOUT_CLASSIFICATION	2.368511821777764E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999976314881782	WITHOUT_CLASSIFICATION	2.368511821777764E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999976314881782	WITHOUT_CLASSIFICATION	2.368511821777764E-6	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999999622942125	WITHOUT_CLASSIFICATION	3.770578751673736E-8	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999836095224	WITHOUT_CLASSIFICATION	1.639047761261185E-8	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.999999978667313	WITHOUT_CLASSIFICATION	2.1332686960542128E-8	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999999003007912	WITHOUT_CLASSIFICATION	9.969920874510959E-8	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999998258036223	WITHOUT_CLASSIFICATION	1.7419637767284253E-7	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999989972601626	WITHOUT_CLASSIFICATION	1.0027398373777902E-6	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999994177915	WITHOUT_CLASSIFICATION	5.822086172594414E-10	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999989773362052	WITHOUT_CLASSIFICATION	1.0226637948013145E-6	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.999999899238706	WITHOUT_CLASSIFICATION	1.0076129392788995E-7	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999992337361557	WITHOUT_CLASSIFICATION	7.662638441880801E-7	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999975884820739	WITHOUT_CLASSIFICATION	2.4115179261929237E-6	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999990568327963	WITHOUT_CLASSIFICATION	9.431672036810701E-7	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999976021108	WITHOUT_CLASSIFICATION	2.3978892529131072E-9	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999863282316	WITHOUT_CLASSIFICATION	1.3671768265424728E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999863282316	WITHOUT_CLASSIFICATION	1.3671768265424728E-8	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999988027074512	WITHOUT_CLASSIFICATION	1.1972925487624523E-6	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999992469442678	WITHOUT_CLASSIFICATION	7.530557321253206E-7	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999998393634738	WITHOUT_CLASSIFICATION	1.606365261161404E-7	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999998935855497	WITHOUT_CLASSIFICATION	1.0641445034692601E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999177530284	WITHOUT_CLASSIFICATION	8.224697160015184E-8	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999986580270611	WITHOUT_CLASSIFICATION	1.3419729388354302E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999999973634538	WITHOUT_CLASSIFICATION	2.6365462014664466E-8	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999563623807	WITHOUT_CLASSIFICATION	4.363761932924463E-8	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999999515748062	WITHOUT_CLASSIFICATION	4.842519379342726E-7	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999935664359811	WITHOUT_CLASSIFICATION	6.433564018938296E-6	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999998821068842	WITHOUT_CLASSIFICATION	1.1789311584562928E-7	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999998388533292	WITHOUT_CLASSIFICATION	1.6114667067049397E-7	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999995419893184	WITHOUT_CLASSIFICATION	4.580106816411607E-7	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999658650393	WITHOUT_CLASSIFICATION	3.413496077964805E-8	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999998120227607	WITHOUT_CLASSIFICATION	1.879772392226219E-7	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999992246824682	WITHOUT_CLASSIFICATION	7.753175319021202E-7	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999982157989517	WITHOUT_CLASSIFICATION	1.7842010484147505E-6	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.999997937827459	WITHOUT_CLASSIFICATION	2.0621725409848976E-6	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.999999760545568	WITHOUT_CLASSIFICATION	2.394544319649243E-7	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999998775293973	WITHOUT_CLASSIFICATION	1.2247060266754256E-7	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999999125065684	WITHOUT_CLASSIFICATION	8.749343162812771E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999550745913	WITHOUT_CLASSIFICATION	4.492540878614248E-8	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999977982714078	WITHOUT_CLASSIFICATION	2.201728592283725E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999990404410861	WITHOUT_CLASSIFICATION	9.595589138812626E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999938547824	WITHOUT_CLASSIFICATION	6.1452175676516575E-9	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999998412907394	WITHOUT_CLASSIFICATION	1.5870926073632567E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999960930799602	WITHOUT_CLASSIFICATION	3.906920039763717E-6	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999997639969969	WITHOUT_CLASSIFICATION	2.3600300306462502E-7	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999886944387	WITHOUT_CLASSIFICATION	1.1305561300756944E-8	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999999234299467	WITHOUT_CLASSIFICATION	7.65700533784626E-8	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999999051888108	WITHOUT_CLASSIFICATION	9.481118922094465E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999395815755	WITHOUT_CLASSIFICATION	6.041842447168375E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999395815755	WITHOUT_CLASSIFICATION	6.041842447168375E-8	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999996995656865	WITHOUT_CLASSIFICATION	3.004343135505583E-7	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999867508477	WITHOUT_CLASSIFICATION	1.3249152431408259E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999159761816488	WITHOUT_CLASSIFICATION	8.402381835112892E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999159761816488	WITHOUT_CLASSIFICATION	8.402381835112892E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999159761816488	WITHOUT_CLASSIFICATION	8.402381835112892E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999137954085925	WITHOUT_CLASSIFICATION	8.620459140752577E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999137954085925	WITHOUT_CLASSIFICATION	8.620459140752577E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999137954085925	WITHOUT_CLASSIFICATION	8.620459140752577E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999137954085925	WITHOUT_CLASSIFICATION	8.620459140752577E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997572970090411	WITHOUT_CLASSIFICATION	2.427029909589477E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997572970090411	WITHOUT_CLASSIFICATION	2.427029909589477E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997572970090411	WITHOUT_CLASSIFICATION	2.427029909589477E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998256256974134	WITHOUT_CLASSIFICATION	1.7437430258663344E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998256256974134	WITHOUT_CLASSIFICATION	1.7437430258663344E-4	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9997588089638759	WITHOUT_CLASSIFICATION	2.4119103612415838E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9998472606404748	WITHOUT_CLASSIFICATION	1.5273935952508306E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999867508477	WITHOUT_CLASSIFICATION	1.3249152431408259E-8	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.999999864311039	WITHOUT_CLASSIFICATION	1.356889609562977E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999159761816488	WITHOUT_CLASSIFICATION	8.402381835112892E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999159761816488	WITHOUT_CLASSIFICATION	8.402381835112892E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999137954085925	WITHOUT_CLASSIFICATION	8.620459140752577E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999137954085925	WITHOUT_CLASSIFICATION	8.620459140752577E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999137954085925	WITHOUT_CLASSIFICATION	8.620459140752577E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997572970090411	WITHOUT_CLASSIFICATION	2.427029909589477E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997572970090411	WITHOUT_CLASSIFICATION	2.427029909589477E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998256256974134	WITHOUT_CLASSIFICATION	1.7437430258663344E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9998472606404748	WITHOUT_CLASSIFICATION	1.5273935952508306E-4	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999718150785	WITHOUT_CLASSIFICATION	2.8184921584227094E-8	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999718150785	WITHOUT_CLASSIFICATION	2.8184921584227094E-8	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999440299577	WITHOUT_CLASSIFICATION	5.597004222921619E-8	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999440299577	WITHOUT_CLASSIFICATION	5.597004222921619E-8	TEST
// invoke	WITHOUT_CLASSIFICATION	0.999998834197791	WITHOUT_CLASSIFICATION	1.165802209039002E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.999998834197791	WITHOUT_CLASSIFICATION	1.165802209039002E-6	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999996935954939	WITHOUT_CLASSIFICATION	3.0640450611465176E-7	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998914842888	WITHOUT_CLASSIFICATION	1.0851571127927267E-7	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998914842888	WITHOUT_CLASSIFICATION	1.0851571127927267E-7	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999999262132531	WITHOUT_CLASSIFICATION	7.37867469021544E-8	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999999262132531	WITHOUT_CLASSIFICATION	7.37867469021544E-8	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999998099959441	WITHOUT_CLASSIFICATION	1.9000405599253134E-7	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999998758295707	WITHOUT_CLASSIFICATION	1.2417042922829423E-7	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999998758295707	WITHOUT_CLASSIFICATION	1.2417042922829423E-7	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999998065666466	WITHOUT_CLASSIFICATION	1.934333534294851E-7	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999996647819227	WITHOUT_CLASSIFICATION	3.3521807734288727E-7	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999184944574	WITHOUT_CLASSIFICATION	8.150554268746657E-8	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999137954085925	WITHOUT_CLASSIFICATION	8.620459140752577E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999137954085925	WITHOUT_CLASSIFICATION	8.620459140752577E-5	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999998065666466	WITHOUT_CLASSIFICATION	1.934333534294851E-7	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999996311744066	WITHOUT_CLASSIFICATION	3.6882559341810494E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993253013432	WITHOUT_CLASSIFICATION	6.746986568482171E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993253013432	WITHOUT_CLASSIFICATION	6.746986568482171E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993253013432	WITHOUT_CLASSIFICATION	6.746986568482171E-7	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999998775697385	WITHOUT_CLASSIFICATION	1.2243026151998253E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.9999984960626834	WITHOUT_CLASSIFICATION	1.503937316605024E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999988298712098	WITHOUT_CLASSIFICATION	1.1701287901618151E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999988298712098	WITHOUT_CLASSIFICATION	1.1701287901618151E-6	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999998754859678	WITHOUT_CLASSIFICATION	1.2451403220830773E-7	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999996649539571	WITHOUT_CLASSIFICATION	3.3504604298449577E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.999999659615982	WITHOUT_CLASSIFICATION	3.403840180031443E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999992980398027	WITHOUT_CLASSIFICATION	7.019601971837448E-7	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999999765323308	WITHOUT_CLASSIFICATION	2.3467669200530923E-7	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999998882251369	WITHOUT_CLASSIFICATION	1.1177486322027407E-7	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999998882251369	WITHOUT_CLASSIFICATION	1.1177486322027407E-7	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999999906805399	WITHOUT_CLASSIFICATION	9.319460012244685E-9	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9997930350051142	WITHOUT_CLASSIFICATION	2.0696499488578963E-4	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9997930350051142	WITHOUT_CLASSIFICATION	2.0696499488578963E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999137954085925	WITHOUT_CLASSIFICATION	8.620459140752577E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993253013432	WITHOUT_CLASSIFICATION	6.746986568482171E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.9999984960626834	WITHOUT_CLASSIFICATION	1.503937316605024E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999988298712098	WITHOUT_CLASSIFICATION	1.1701287901618151E-6	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999998754859678	WITHOUT_CLASSIFICATION	1.2451403220830773E-7	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999996649539571	WITHOUT_CLASSIFICATION	3.3504604298449577E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.999999659615982	WITHOUT_CLASSIFICATION	3.403840180031443E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999992980398027	WITHOUT_CLASSIFICATION	7.019601971837448E-7	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9997930350051142	WITHOUT_CLASSIFICATION	2.0696499488578963E-4	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999993906047879	WITHOUT_CLASSIFICATION	6.093952120253784E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999993153839594	WITHOUT_CLASSIFICATION	6.84616040735275E-7	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999997665517179	WITHOUT_CLASSIFICATION	2.334482822843151E-7	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.999999939774074	WITHOUT_CLASSIFICATION	6.0225926010626E-8	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999998206316059	WITHOUT_CLASSIFICATION	1.7936839410676177E-7	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999983623063506	WITHOUT_CLASSIFICATION	1.637693649313294E-6	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999996654548375	WITHOUT_CLASSIFICATION	3.345451624904645E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999996654548375	WITHOUT_CLASSIFICATION	3.345451624904645E-7	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999997110795102	WITHOUT_CLASSIFICATION	2.8892048971442115E-7	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999997903456194	WITHOUT_CLASSIFICATION	2.0965438059869563E-7	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.999999830458342	WITHOUT_CLASSIFICATION	1.69541658071007E-7	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999998695008544	WITHOUT_CLASSIFICATION	1.304991455076125E-7	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999998017173869	WITHOUT_CLASSIFICATION	1.9828261307558067E-7	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999998017173869	WITHOUT_CLASSIFICATION	1.9828261307558067E-7	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999998526479573	WITHOUT_CLASSIFICATION	1.4735204271839003E-7	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999998204750032	WITHOUT_CLASSIFICATION	1.795249967439726E-7	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999998533802374	WITHOUT_CLASSIFICATION	1.4661976254837803E-7	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999998533802374	WITHOUT_CLASSIFICATION	1.4661976254837803E-7	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.999998929318979	WITHOUT_CLASSIFICATION	1.0706810210000898E-6	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999998633198933	WITHOUT_CLASSIFICATION	1.3668010663728368E-7	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999999765323308	WITHOUT_CLASSIFICATION	2.3467669200530923E-7	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.999999798980625	WITHOUT_CLASSIFICATION	2.0101937497817015E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999022422347	WITHOUT_CLASSIFICATION	9.775776530867031E-8	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999997783027557	WITHOUT_CLASSIFICATION	2.2169724426435857E-7	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999051043784	WITHOUT_CLASSIFICATION	9.489562161001999E-8	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.999999731858603	WITHOUT_CLASSIFICATION	2.681413970338405E-7	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999997664151647	WITHOUT_CLASSIFICATION	2.3358483516976821E-7	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999723827114	WITHOUT_CLASSIFICATION	2.761728861019161E-8	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999999256855504	WITHOUT_CLASSIFICATION	7.431444958556677E-8	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999941492712	WITHOUT_CLASSIFICATION	5.850728822683621E-9	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999941492712	WITHOUT_CLASSIFICATION	5.850728822683621E-9	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999999847245334	WITHOUT_CLASSIFICATION	1.5275466602873212E-7	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999999847245334	WITHOUT_CLASSIFICATION	1.5275466602873212E-7	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999825188497	WITHOUT_CLASSIFICATION	1.7481150340379966E-8	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998335427546	WITHOUT_CLASSIFICATION	1.664572454286691E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998335427546	WITHOUT_CLASSIFICATION	1.664572454286691E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998335427546	WITHOUT_CLASSIFICATION	1.664572454286691E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999989712522267	WITHOUT_CLASSIFICATION	1.0287477732722408E-6	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999999904442914	WITHOUT_CLASSIFICATION	9.555708600010761E-8	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999999904442914	WITHOUT_CLASSIFICATION	9.555708600010761E-8	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999999590204654	WITHOUT_CLASSIFICATION	4.097953459824759E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999999608889857	WITHOUT_CLASSIFICATION	3.9111014382263577E-8	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999996668727126	WITHOUT_CLASSIFICATION	3.331272874620887E-7	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999998037699518	WITHOUT_CLASSIFICATION	1.9623004815249454E-7	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.999999679815913	WITHOUT_CLASSIFICATION	3.2018408711655893E-7	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999990981303162	WITHOUT_CLASSIFICATION	9.018696838192849E-7	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.999958123412684	WITHOUT_CLASSIFICATION	4.187658731598773E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999977982714078	WITHOUT_CLASSIFICATION	2.201728592283725E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999977982714078	WITHOUT_CLASSIFICATION	2.201728592283725E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999989712522267	WITHOUT_CLASSIFICATION	1.0287477732722408E-6	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999999590204654	WITHOUT_CLASSIFICATION	4.097953459824759E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998254440011	WITHOUT_CLASSIFICATION	1.745559988699628E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999999608889857	WITHOUT_CLASSIFICATION	3.9111014382263577E-8	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999996668727126	WITHOUT_CLASSIFICATION	3.331272874620887E-7	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999622905978	WITHOUT_CLASSIFICATION	3.770940212562549E-8	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999994334494509	WITHOUT_CLASSIFICATION	5.665505491799284E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999982027267021	WITHOUT_CLASSIFICATION	1.7972732979285319E-6	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9998927238170355	WITHOUT_CLASSIFICATION	1.0727618296440812E-4	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999977693015826	WITHOUT_CLASSIFICATION	2.2306984174843506E-6	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999669526733	WITHOUT_CLASSIFICATION	3.3047326589852604E-8	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999999845596601	WITHOUT_CLASSIFICATION	1.5440339879849886E-8	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999622905978	WITHOUT_CLASSIFICATION	3.770940212562549E-8	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999616372130121	WITHOUT_CLASSIFICATION	3.836278698784548E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999616372130121	WITHOUT_CLASSIFICATION	3.836278698784548E-5	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999987576866883	WITHOUT_CLASSIFICATION	1.24231331164878E-6	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.999999981450469	WITHOUT_CLASSIFICATION	1.8549531032447334E-8	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999982822467745	WITHOUT_CLASSIFICATION	1.7177532255375143E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999973614296129	WITHOUT_CLASSIFICATION	2.63857038706763E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999987590462686	WITHOUT_CLASSIFICATION	1.2409537314185254E-6	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999997875318326	WITHOUT_CLASSIFICATION	2.1246816740295646E-7	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.999999826062625	WITHOUT_CLASSIFICATION	1.7393737494411199E-7	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999999118159235	WITHOUT_CLASSIFICATION	8.818407647060382E-8	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999367574732	WITHOUT_CLASSIFICATION	6.324252671596574E-8	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999993990618417	WITHOUT_CLASSIFICATION	6.009381583634636E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999986249236412	WITHOUT_CLASSIFICATION	1.3750763586993315E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999973614296129	WITHOUT_CLASSIFICATION	2.63857038706763E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999987590462686	WITHOUT_CLASSIFICATION	1.2409537314185254E-6	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999999829371305	WITHOUT_CLASSIFICATION	1.7062869453067283E-8	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999993394884135	WITHOUT_CLASSIFICATION	6.605115864540047E-7	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999995756001914	WITHOUT_CLASSIFICATION	4.24399808609624E-7	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999936574097035	WITHOUT_CLASSIFICATION	6.3425902965113805E-6	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999978258275216	WITHOUT_CLASSIFICATION	2.174172478442444E-6	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999912275739511	WITHOUT_CLASSIFICATION	8.772426048863542E-6	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9998077583300659	WITHOUT_CLASSIFICATION	1.9224166993409708E-4	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999985955616616	WITHOUT_CLASSIFICATION	1.404438338370969E-6	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999973195197713	WITHOUT_CLASSIFICATION	2.680480228625916E-6	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.999990784249957	WITHOUT_CLASSIFICATION	9.215750042915687E-6	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999973270450363	WITHOUT_CLASSIFICATION	2.672954963622545E-6	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9999802776088352	WITHOUT_CLASSIFICATION	1.9722391164761662E-5	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999999083293966	WITHOUT_CLASSIFICATION	9.16706034050555E-8	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999998317244977	WITHOUT_CLASSIFICATION	1.6827550228978888E-7	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999972524544011	WITHOUT_CLASSIFICATION	2.747545599011882E-6	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999753839222	WITHOUT_CLASSIFICATION	2.4616077803829332E-8	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999893335629558	WITHOUT_CLASSIFICATION	1.0666437044216417E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999995607045242	WITHOUT_CLASSIFICATION	4.39295475707903E-7	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999621003804	WITHOUT_CLASSIFICATION	3.789961965274232E-8	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999998709563174	WITHOUT_CLASSIFICATION	1.2904368252631698E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999893335629558	WITHOUT_CLASSIFICATION	1.0666437044216417E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999995607045242	WITHOUT_CLASSIFICATION	4.39295475707903E-7	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999621003804	WITHOUT_CLASSIFICATION	3.789961965274232E-8	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999997753807454	WITHOUT_CLASSIFICATION	2.2461925471323213E-7	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999657482377	WITHOUT_CLASSIFICATION	3.4251762310661633E-8	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999999819722621	WITHOUT_CLASSIFICATION	1.802773783264458E-8	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999988858360256	WITHOUT_CLASSIFICATION	1.1141639744624377E-6	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999989624831702	WITHOUT_CLASSIFICATION	1.0375168297281076E-6	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999998346557146	WITHOUT_CLASSIFICATION	1.6534428546096738E-7	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999999835122907	WITHOUT_CLASSIFICATION	1.648770934990625E-8	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999999888465938	WITHOUT_CLASSIFICATION	1.1153406174241633E-8	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999998011005125	WITHOUT_CLASSIFICATION	1.9889948758076836E-7	TEST
// arities	WITHOUT_CLASSIFICATION	0.999999622845584	WITHOUT_CLASSIFICATION	3.771544160269324E-7	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9942688737036465	WITHOUT_CLASSIFICATION	0.0057311262963536105	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999996975129659	WITHOUT_CLASSIFICATION	3.024870340378472E-7	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999997443614426	WITHOUT_CLASSIFICATION	2.556385575168095E-7	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999998800488766	WITHOUT_CLASSIFICATION	1.199511233696936E-7	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.999165554729618	WITHOUT_CLASSIFICATION	8.34445270381955E-4	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999994384744599	WITHOUT_CLASSIFICATION	5.615255400088217E-7	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999999771332878	WITHOUT_CLASSIFICATION	2.2866712170407577E-8	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999995428697281	WITHOUT_CLASSIFICATION	4.5713027181263425E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999996779814692	WITHOUT_CLASSIFICATION	3.2201853086040154E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999995595692079	WITHOUT_CLASSIFICATION	4.404307920938698E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999997110720137	WITHOUT_CLASSIFICATION	2.889279863208299E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999995133618322	WITHOUT_CLASSIFICATION	4.866381678026109E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999995133618322	WITHOUT_CLASSIFICATION	4.866381678026109E-7	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999991182839896	WITHOUT_CLASSIFICATION	8.817160103846973E-7	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999991182839896	WITHOUT_CLASSIFICATION	8.817160103846973E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999992297155526	WITHOUT_CLASSIFICATION	7.702844473815474E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999992297155526	WITHOUT_CLASSIFICATION	7.702844473815474E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999997189689739	WITHOUT_CLASSIFICATION	2.8103102611432E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999698566914	WITHOUT_CLASSIFICATION	3.0143308534275904E-8	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999762710788	WITHOUT_CLASSIFICATION	2.372892115404275E-8	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999989885577665	WITHOUT_CLASSIFICATION	1.0114422334777388E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999986978852541	WITHOUT_CLASSIFICATION	1.3021147458412852E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999998830323098	WITHOUT_CLASSIFICATION	1.1696769018260939E-7	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999998408568833	WITHOUT_CLASSIFICATION	1.591431168201697E-7	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.999999833594204	WITHOUT_CLASSIFICATION	1.6640579603583576E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999977982714078	WITHOUT_CLASSIFICATION	2.201728592283725E-6	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999997189689739	WITHOUT_CLASSIFICATION	2.8103102611432E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999698566914	WITHOUT_CLASSIFICATION	3.0143308534275904E-8	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999762710788	WITHOUT_CLASSIFICATION	2.372892115404275E-8	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999986978852541	WITHOUT_CLASSIFICATION	1.3021147458412852E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999998830323098	WITHOUT_CLASSIFICATION	1.1696769018260939E-7	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999992248681505	WITHOUT_CLASSIFICATION	7.751318493884194E-7	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999999222016578	WITHOUT_CLASSIFICATION	7.779834213907144E-8	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999976874941717	WITHOUT_CLASSIFICATION	2.3125058282358003E-6	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999976874941717	WITHOUT_CLASSIFICATION	2.3125058282358003E-6	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999994567881342	WITHOUT_CLASSIFICATION	5.432118658959116E-7	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999997804874139	WITHOUT_CLASSIFICATION	2.1951258607875423E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998010986355	WITHOUT_CLASSIFICATION	1.989013645249998E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999996075584164	WITHOUT_CLASSIFICATION	3.924415835742343E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999996075584164	WITHOUT_CLASSIFICATION	3.924415835742343E-7	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999993027735213	WITHOUT_CLASSIFICATION	6.972264786300988E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999983687799915	WITHOUT_CLASSIFICATION	1.6312200084682467E-6	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999078046835	WITHOUT_CLASSIFICATION	9.219531653129839E-8	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999999256772292	WITHOUT_CLASSIFICATION	7.432277083509535E-8	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999857262303	WITHOUT_CLASSIFICATION	1.4273769626959097E-8	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999990404410861	WITHOUT_CLASSIFICATION	9.595589138812626E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999938547824	WITHOUT_CLASSIFICATION	6.1452175676516575E-9	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999998412907394	WITHOUT_CLASSIFICATION	1.5870926073632567E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999960930799602	WITHOUT_CLASSIFICATION	3.906920039763717E-6	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999999234299467	WITHOUT_CLASSIFICATION	7.65700533784626E-8	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999999051888108	WITHOUT_CLASSIFICATION	9.481118922094465E-8	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999993027735213	WITHOUT_CLASSIFICATION	6.972264786300988E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999983687799915	WITHOUT_CLASSIFICATION	1.6312200084682467E-6	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999999256772292	WITHOUT_CLASSIFICATION	7.432277083509535E-8	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999795544942	WITHOUT_CLASSIFICATION	2.0445505843769032E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998010986355	WITHOUT_CLASSIFICATION	1.989013645249998E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998010986355	WITHOUT_CLASSIFICATION	1.989013645249998E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999986249236412	WITHOUT_CLASSIFICATION	1.3750763586993315E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999986249236412	WITHOUT_CLASSIFICATION	1.3750763586993315E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999996470422813	WITHOUT_CLASSIFICATION	3.529577188281472E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999996470422813	WITHOUT_CLASSIFICATION	3.529577188281472E-7	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.999999903474627	WITHOUT_CLASSIFICATION	9.652537305117918E-8	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999999634224611	WITHOUT_CLASSIFICATION	3.6577538922206575E-8	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999998309717517	WITHOUT_CLASSIFICATION	1.690282483622722E-7	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999951347992025	WITHOUT_CLASSIFICATION	4.865200797424119E-6	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.999999541284122	WITHOUT_CLASSIFICATION	4.587158779420332E-7	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999996888193248	WITHOUT_CLASSIFICATION	3.111806752373496E-7	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999997766558929	WITHOUT_CLASSIFICATION	2.2334410723843502E-7	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999454568664	WITHOUT_CLASSIFICATION	5.454313365594226E-8	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999999225909885	WITHOUT_CLASSIFICATION	7.740901150539787E-8	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.999999934003673	WITHOUT_CLASSIFICATION	6.599632701457185E-8	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999998320563636	WITHOUT_CLASSIFICATION	1.6794363632063078E-7	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999999256573249	WITHOUT_CLASSIFICATION	7.434267513863221E-8	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.999999649942183	WITHOUT_CLASSIFICATION	3.500578169350246E-7	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999382158538	WITHOUT_CLASSIFICATION	6.178414625722026E-8	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999995201129223	WITHOUT_CLASSIFICATION	4.798870776459565E-7	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999994173086012	WITHOUT_CLASSIFICATION	5.826913987043265E-7	TEST
// line number	WITHOUT_CLASSIFICATION	0.999999307971624	WITHOUT_CLASSIFICATION	6.920283759834279E-7	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999999703433415	WITHOUT_CLASSIFICATION	2.9656658423735467E-8	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999999789826336	WITHOUT_CLASSIFICATION	2.1017366457411916E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999938547824	WITHOUT_CLASSIFICATION	6.1452175676516575E-9	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999960930799602	WITHOUT_CLASSIFICATION	3.906920039763717E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999395815755	WITHOUT_CLASSIFICATION	6.041842447168375E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999988298712098	WITHOUT_CLASSIFICATION	1.1701287901618151E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999988298712098	WITHOUT_CLASSIFICATION	1.1701287901618151E-6	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999795544942	WITHOUT_CLASSIFICATION	2.0445505843769032E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998010986355	WITHOUT_CLASSIFICATION	1.989013645249998E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999986249236412	WITHOUT_CLASSIFICATION	1.3750763586993315E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999996470422813	WITHOUT_CLASSIFICATION	3.529577188281472E-7	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999997624077879	WITHOUT_CLASSIFICATION	2.3759221215164042E-7	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999978663450539	WITHOUT_CLASSIFICATION	2.1336549460390536E-6	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999998486075694	WITHOUT_CLASSIFICATION	1.5139243062797364E-7	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999995643145216	WITHOUT_CLASSIFICATION	4.356854782598758E-7	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999430813078	WITHOUT_CLASSIFICATION	5.691869227016789E-8	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999430813078	WITHOUT_CLASSIFICATION	5.691869227016789E-8	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999998251806568	WITHOUT_CLASSIFICATION	1.7481934335991896E-7	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999998873926843	WITHOUT_CLASSIFICATION	1.1260731580900682E-7	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999223126836	WITHOUT_CLASSIFICATION	7.768731633030899E-8	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999998550546194	WITHOUT_CLASSIFICATION	1.4494538057727927E-7	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999999116156835	WITHOUT_CLASSIFICATION	8.838431648136647E-8	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999999116156835	WITHOUT_CLASSIFICATION	8.838431648136647E-8	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999996828679988	WITHOUT_CLASSIFICATION	3.1713200116393236E-7	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999998679264691	WITHOUT_CLASSIFICATION	1.320735307792292E-7	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999994683344238	WITHOUT_CLASSIFICATION	5.316655763474562E-7	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999952720070406	WITHOUT_CLASSIFICATION	4.727992959362937E-6	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.999998660299397	WITHOUT_CLASSIFICATION	1.3397006030741838E-6	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999778098839	WITHOUT_CLASSIFICATION	2.2190115997312142E-8	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.999997526202631	WITHOUT_CLASSIFICATION	2.473797368934414E-6	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.999999951931179	WITHOUT_CLASSIFICATION	4.806882099675777E-8	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.999995492731029	WITHOUT_CLASSIFICATION	4.5072689710545856E-6	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9970937541754363	WITHOUT_CLASSIFICATION	0.002906245824563682	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.999999689462154	WITHOUT_CLASSIFICATION	3.105378459828439E-7	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999966050043602	WITHOUT_CLASSIFICATION	3.3949956398151287E-6	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999979655659	WITHOUT_CLASSIFICATION	2.0344340574337216E-9	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999999013253555	WITHOUT_CLASSIFICATION	9.867464445684342E-8	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999727630630728	WITHOUT_CLASSIFICATION	2.7236936927165935E-5	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999982431274554	WITHOUT_CLASSIFICATION	1.7568725444967507E-6	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999988846672276	WITHOUT_CLASSIFICATION	1.1153327723635334E-6	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.999999936754757	WITHOUT_CLASSIFICATION	6.32452430144044E-8	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999988467945883	WITHOUT_CLASSIFICATION	1.1532054118036937E-6	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999995223045137	WITHOUT_CLASSIFICATION	4.776954862975246E-7	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999977388858173	WITHOUT_CLASSIFICATION	2.2611141826101613E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999998836470952	WITHOUT_CLASSIFICATION	1.1635290472411877E-7	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999998836470952	WITHOUT_CLASSIFICATION	1.1635290472411877E-7	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999999186113284	WITHOUT_CLASSIFICATION	8.138867156883364E-8	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999998794915647	WITHOUT_CLASSIFICATION	1.2050843532838408E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.99999988424983	WITHOUT_CLASSIFICATION	1.1575016995653459E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.99999988424983	WITHOUT_CLASSIFICATION	1.1575016995653459E-7	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.99999214555	WITHOUT_CLASSIFICATION	7.854449999970626E-6	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999997139497697	WITHOUT_CLASSIFICATION	2.860502302928811E-7	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.999983229822801	WITHOUT_CLASSIFICATION	1.6770177198943605E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999900337909	WITHOUT_CLASSIFICATION	9.966208988616061E-9	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999900337909	WITHOUT_CLASSIFICATION	9.966208988616061E-9	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999998651660725	WITHOUT_CLASSIFICATION	1.348339275732736E-7	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.999999957942455	WITHOUT_CLASSIFICATION	4.205754501681969E-8	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999960973867	WITHOUT_CLASSIFICATION	3.902613308271332E-9	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999999726347265	WITHOUT_CLASSIFICATION	2.736527345400183E-8	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999999794321108	WITHOUT_CLASSIFICATION	2.0567889269955972E-8	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999998917868239	WITHOUT_CLASSIFICATION	1.0821317600309217E-7	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999999227506572	WITHOUT_CLASSIFICATION	7.724934278130018E-8	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999964635307873	WITHOUT_CLASSIFICATION	3.536469212686699E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999997349188351	WITHOUT_CLASSIFICATION	2.650811649287362E-7	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999996127222486	WITHOUT_CLASSIFICATION	3.872777513641772E-7	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999987707718372	WITHOUT_CLASSIFICATION	1.2292281628428985E-6	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.999999413051186	WITHOUT_CLASSIFICATION	5.869488138737657E-7	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999998923808701	WITHOUT_CLASSIFICATION	1.0761912992245388E-7	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999996619947265	WITHOUT_CLASSIFICATION	3.3800527351779124E-7	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999994357796947	WITHOUT_CLASSIFICATION	5.642203052398503E-7	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999999539519588	WITHOUT_CLASSIFICATION	4.604804106906198E-8	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.999999994541166	WITHOUT_CLASSIFICATION	5.45883403146363E-9	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999997503842979	WITHOUT_CLASSIFICATION	2.4961570208805956E-7	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999994191209761	WITHOUT_CLASSIFICATION	5.808790238286072E-7	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999996101564927	WITHOUT_CLASSIFICATION	3.898435073202438E-7	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999999154132825	WITHOUT_CLASSIFICATION	8.458671745021966E-8	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999994027530011	WITHOUT_CLASSIFICATION	5.972469988457864E-7	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999993770028418	WITHOUT_CLASSIFICATION	6.229971582412513E-7	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999996299521179	WITHOUT_CLASSIFICATION	3.700478821642378E-7	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999904445250509	WITHOUT_CLASSIFICATION	9.555474949020192E-6	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999997294233768	WITHOUT_CLASSIFICATION	2.705766233035057E-7	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.999972987534677	WITHOUT_CLASSIFICATION	2.701246532303776E-5	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999994289259733	WITHOUT_CLASSIFICATION	5.710740267606826E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999994957218554	WITHOUT_CLASSIFICATION	5.042781444959252E-7	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999880285609	WITHOUT_CLASSIFICATION	1.197143897505957E-8	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999998272965	WITHOUT_CLASSIFICATION	1.7270343531808148E-10	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999996619947265	WITHOUT_CLASSIFICATION	3.3800527351779124E-7	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999994289259733	WITHOUT_CLASSIFICATION	5.710740267606826E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999994957218554	WITHOUT_CLASSIFICATION	5.042781444959252E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999998272965	WITHOUT_CLASSIFICATION	1.7270343531808148E-10	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999987984784611	WITHOUT_CLASSIFICATION	1.2015215389904922E-6	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.999998812556999	WITHOUT_CLASSIFICATION	1.1874430010204201E-6	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999995266176278	WITHOUT_CLASSIFICATION	4.733823722848883E-7	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999956874710499	WITHOUT_CLASSIFICATION	4.312528950021603E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999971811294167	WITHOUT_CLASSIFICATION	2.8188705832607514E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999966569572	WITHOUT_CLASSIFICATION	3.34304292646574E-9	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999994899058327	WITHOUT_CLASSIFICATION	5.100941673883419E-7	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999998299220857	WITHOUT_CLASSIFICATION	1.7007791433736065E-7	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999997358983446	WITHOUT_CLASSIFICATION	2.641016554486136E-7	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999998215254536	WITHOUT_CLASSIFICATION	1.7847454633231578E-7	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999935221256171	WITHOUT_CLASSIFICATION	6.47787438290992E-6	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999935221256171	WITHOUT_CLASSIFICATION	6.47787438290992E-6	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999991372970389	WITHOUT_CLASSIFICATION	8.627029609515707E-7	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999927700638	WITHOUT_CLASSIFICATION	7.22993624377516E-9	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999883155739	WITHOUT_CLASSIFICATION	1.1684426154069947E-8	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999993148504714	WITHOUT_CLASSIFICATION	6.851495285988971E-7	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999663356548	WITHOUT_CLASSIFICATION	3.366434522842582E-8	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999977389799017	WITHOUT_CLASSIFICATION	2.2610200982590475E-6	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999998019063848	WITHOUT_CLASSIFICATION	1.980936152549259E-7	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999888320783	WITHOUT_CLASSIFICATION	1.116792172172238E-8	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999996177347595	WITHOUT_CLASSIFICATION	3.822652404681851E-7	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999999999268147	WITHOUT_CLASSIFICATION	7.318531232528443E-10	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999996661501991	WITHOUT_CLASSIFICATION	3.3384980088657785E-7	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999981876032	WITHOUT_CLASSIFICATION	1.812396760207886E-9	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.999999198592139	WITHOUT_CLASSIFICATION	8.014078609327895E-7	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999999180192354	WITHOUT_CLASSIFICATION	8.198076465801217E-8	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999998294728334	WITHOUT_CLASSIFICATION	1.705271666603965E-7	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999999946807812	WITHOUT_CLASSIFICATION	5.319218924847023E-9	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999999436459193	WITHOUT_CLASSIFICATION	5.6354080758398164E-8	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999999398380847	WITHOUT_CLASSIFICATION	6.016191534299092E-8	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999999368939225	WITHOUT_CLASSIFICATION	6.31060775177821E-8	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999998949227861	WITHOUT_CLASSIFICATION	1.0507721389690964E-7	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9999988429609938	WITHOUT_CLASSIFICATION	1.1570390061575987E-6	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999993523957467	WITHOUT_CLASSIFICATION	6.476042533207928E-7	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.99999990875151	WITHOUT_CLASSIFICATION	9.124848990557491E-8	TEST
// others	WITHOUT_CLASSIFICATION	0.9999993637346839	WITHOUT_CLASSIFICATION	6.362653161615334E-7	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999996838895999	WITHOUT_CLASSIFICATION	3.1611040002128367E-7	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999987466472833	WITHOUT_CLASSIFICATION	1.2533527166807938E-6	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999847029590297	WITHOUT_CLASSIFICATION	1.5297040970236023E-5	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999911566003	WITHOUT_CLASSIFICATION	8.843399679416205E-9	TEST
// scripts	WITHOUT_CLASSIFICATION	0.999998958087526	WITHOUT_CLASSIFICATION	1.041912474029854E-6	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999998174173166	WITHOUT_CLASSIFICATION	1.8258268342080811E-7	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999999049427772	WITHOUT_CLASSIFICATION	9.505722275903837E-8	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999999451598488	WITHOUT_CLASSIFICATION	5.484015105495528E-8	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999982582086432	WITHOUT_CLASSIFICATION	1.741791356709918E-6	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999976201493639	WITHOUT_CLASSIFICATION	2.379850636162804E-6	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999996719573778	WITHOUT_CLASSIFICATION	3.2804262220288345E-7	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999926230620106	WITHOUT_CLASSIFICATION	7.376937989321778E-6	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999972981924982	WITHOUT_CLASSIFICATION	2.7018075018394885E-6	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999996917947307	WITHOUT_CLASSIFICATION	3.082052694017586E-7	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999997194428741	WITHOUT_CLASSIFICATION	2.8055712591138365E-7	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999957115832173	WITHOUT_CLASSIFICATION	4.288416782744136E-6	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.999999026231266	WITHOUT_CLASSIFICATION	9.737687339436062E-7	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999561096112488	WITHOUT_CLASSIFICATION	4.3890388751214035E-5	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999994061283278	WITHOUT_CLASSIFICATION	5.938716722415486E-7	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999998204387613	WITHOUT_CLASSIFICATION	1.7956123862908189E-7	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999989923766737	WITHOUT_CLASSIFICATION	1.0076233262574644E-6	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999999982849054	WITHOUT_CLASSIFICATION	1.7150946319670513E-9	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999999684287433	WITHOUT_CLASSIFICATION	3.15712566500365E-8	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999967081578	WITHOUT_CLASSIFICATION	3.291842271845895E-9	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999997953377548	WITHOUT_CLASSIFICATION	2.046622451917246E-7	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999961582948237	WITHOUT_CLASSIFICATION	3.841705176243823E-6	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999992714993697	WITHOUT_CLASSIFICATION	7.28500630196791E-7	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999999179597356	WITHOUT_CLASSIFICATION	8.204026433472065E-8	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999852193481332	WITHOUT_CLASSIFICATION	1.4780651866642895E-5	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999925646313158	WITHOUT_CLASSIFICATION	7.435368684232585E-6	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999436154947947	WITHOUT_CLASSIFICATION	5.638450520520875E-5	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999999653190683	WITHOUT_CLASSIFICATION	3.468093171384377E-7	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999998774422845	WITHOUT_CLASSIFICATION	1.2255771558282712E-7	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.999999611955338	WITHOUT_CLASSIFICATION	3.880446619767837E-7	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999995787439968	WITHOUT_CLASSIFICATION	4.212560032153015E-7	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999884883165155	WITHOUT_CLASSIFICATION	1.1511683484484757E-5	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999884883165155	WITHOUT_CLASSIFICATION	1.1511683484484757E-5	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999994844805631	WITHOUT_CLASSIFICATION	5.15519436937865E-7	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999966968111069	WITHOUT_CLASSIFICATION	3.3031888930524714E-6	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999998618327386	WITHOUT_CLASSIFICATION	1.3816726140166216E-6	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999988238334407	WITHOUT_CLASSIFICATION	1.1761665592332333E-6	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999999010062753	WITHOUT_CLASSIFICATION	9.899372469345122E-8	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999987642362483	WITHOUT_CLASSIFICATION	1.2357637516267898E-6	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999124748716143	WITHOUT_CLASSIFICATION	8.752512838568673E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.999999000969447	WITHOUT_CLASSIFICATION	9.990305528830168E-7	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999997328622253	WITHOUT_CLASSIFICATION	2.671377746710411E-7	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999999933410432	WITHOUT_CLASSIFICATION	6.658956843185368E-9	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999995149724247	WITHOUT_CLASSIFICATION	4.850275753543974E-7	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999996277036209	WITHOUT_CLASSIFICATION	3.722963790226253E-7	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999989052493434	WITHOUT_CLASSIFICATION	1.094750656578564E-6	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999999483271665	WITHOUT_CLASSIFICATION	5.1672833468408504E-8	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999991112091844	WITHOUT_CLASSIFICATION	8.887908155989779E-7	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999991760749615	WITHOUT_CLASSIFICATION	8.239250385610215E-7	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999995449704876	WITHOUT_CLASSIFICATION	4.550295123981425E-7	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999994615242448	WITHOUT_CLASSIFICATION	5.384757552303166E-7	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999998955227348	WITHOUT_CLASSIFICATION	1.0447726513420209E-7	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999993743986524	WITHOUT_CLASSIFICATION	6.256013476902297E-7	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999981810191009	WITHOUT_CLASSIFICATION	1.818980899003722E-6	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999994436596304	WITHOUT_CLASSIFICATION	5.563403696055743E-7	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.99999839132483	WITHOUT_CLASSIFICATION	1.6086751698405656E-6	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999989421111354	WITHOUT_CLASSIFICATION	1.057888864684349E-6	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999958904674824	WITHOUT_CLASSIFICATION	4.109532517535349E-6	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.999995242522226	WITHOUT_CLASSIFICATION	4.757477773892683E-6	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999961663966237	WITHOUT_CLASSIFICATION	3.833603376360706E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999984044716954	WITHOUT_CLASSIFICATION	1.5955283045843625E-6	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999998543695809	WITHOUT_CLASSIFICATION	1.4563041906100628E-7	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999998079858478	WITHOUT_CLASSIFICATION	1.9201415224146089E-7	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.999999986678901	WITHOUT_CLASSIFICATION	1.3321098944178505E-8	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999992467388986	WITHOUT_CLASSIFICATION	7.532611014798376E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999992447328093	WITHOUT_CLASSIFICATION	7.552671907878048E-7	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.999997372127419	WITHOUT_CLASSIFICATION	2.6278725809850366E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999992447328093	WITHOUT_CLASSIFICATION	7.552671907878048E-7	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999999150793092	WITHOUT_CLASSIFICATION	8.492069090687918E-8	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999989242633949	WITHOUT_CLASSIFICATION	1.0757366050798357E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999989242633949	WITHOUT_CLASSIFICATION	1.0757366050798357E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999989242633949	WITHOUT_CLASSIFICATION	1.0757366050798357E-6	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999998529520191	WITHOUT_CLASSIFICATION	1.470479808778413E-7	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999998529520191	WITHOUT_CLASSIFICATION	1.470479808778413E-7	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999987565713206	WITHOUT_CLASSIFICATION	1.2434286793073501E-6	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999998029158191	WITHOUT_CLASSIFICATION	1.9708418090107752E-7	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999998147675081	WITHOUT_CLASSIFICATION	1.8523249201520322E-7	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999999938893365	WITHOUT_CLASSIFICATION	6.110663438367954E-9	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999969983715684	WITHOUT_CLASSIFICATION	3.0016284316116443E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999959600858819	WITHOUT_CLASSIFICATION	4.039914118052273E-6	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999999187644366	WITHOUT_CLASSIFICATION	8.123556339314074E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.999999653062356	WITHOUT_CLASSIFICATION	3.4693764395421145E-7	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999968557636324	WITHOUT_CLASSIFICATION	3.1442363674721614E-6	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999999638190875	WITHOUT_CLASSIFICATION	3.618091255932118E-8	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999988958072845	WITHOUT_CLASSIFICATION	1.104192715460694E-6	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999999192738818	WITHOUT_CLASSIFICATION	8.072611823539003E-8	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999999744333699	WITHOUT_CLASSIFICATION	2.5566630134979135E-8	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999997682219277	WITHOUT_CLASSIFICATION	2.31778072388061E-7	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999993971744167	WITHOUT_CLASSIFICATION	6.028255833059361E-7	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999996781566701	WITHOUT_CLASSIFICATION	3.21843329915861E-7	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999995542779765	WITHOUT_CLASSIFICATION	4.4572202344640995E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999996269077612	WITHOUT_CLASSIFICATION	3.7309223877630493E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999996269077612	WITHOUT_CLASSIFICATION	3.7309223877630493E-7	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999991794243922	WITHOUT_CLASSIFICATION	8.205756078313274E-7	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999997714806851	WITHOUT_CLASSIFICATION	2.2851931479310438E-7	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999997714806851	WITHOUT_CLASSIFICATION	2.2851931479310438E-7	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999914722336287	WITHOUT_CLASSIFICATION	8.527766371327169E-6	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.999999504800262	WITHOUT_CLASSIFICATION	4.951997380106488E-7	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999996588406265	WITHOUT_CLASSIFICATION	3.4115937361410605E-7	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999981956516388	WITHOUT_CLASSIFICATION	1.8043483611879782E-6	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999990780829606	WITHOUT_CLASSIFICATION	9.219170393814062E-7	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999999681983104	WITHOUT_CLASSIFICATION	3.18016895940279E-8	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.999999004578258	WITHOUT_CLASSIFICATION	9.954217420671758E-7	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999999470341647	WITHOUT_CLASSIFICATION	5.296583512204161E-8	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999998642979194	WITHOUT_CLASSIFICATION	1.357020806099333E-7	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999996766902508	WITHOUT_CLASSIFICATION	3.233097492191042E-7	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999992114913646	WITHOUT_CLASSIFICATION	7.885086353104945E-7	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999993288826451	WITHOUT_CLASSIFICATION	6.711173549664721E-7	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999997890686293	WITHOUT_CLASSIFICATION	2.1093137066250077E-7	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999999338074584	WITHOUT_CLASSIFICATION	6.619254152740093E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.999999653062356	WITHOUT_CLASSIFICATION	3.4693764395421145E-7	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999226707838824	WITHOUT_CLASSIFICATION	7.732921611755281E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998854353184	WITHOUT_CLASSIFICATION	1.1456468161677253E-7	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999997427260277	WITHOUT_CLASSIFICATION	2.5727397243322705E-7	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999997427260277	WITHOUT_CLASSIFICATION	2.5727397243322705E-7	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.999999704121425	WITHOUT_CLASSIFICATION	2.9587857493024455E-7	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999998648605899	WITHOUT_CLASSIFICATION	1.3513941009489327E-7	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999999909481065	WITHOUT_CLASSIFICATION	9.051893500125516E-9	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999989640607185	WITHOUT_CLASSIFICATION	1.0359392814987129E-6	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999506786181	WITHOUT_CLASSIFICATION	4.93213819536095E-8	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999998941967306	WITHOUT_CLASSIFICATION	1.0580326941753348E-7	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.999999902107242	WITHOUT_CLASSIFICATION	9.789275807154E-8	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.999690766543521	WITHOUT_CLASSIFICATION	3.0923345647906544E-4	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999999613976829	WITHOUT_CLASSIFICATION	3.86023171147656E-8	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999999138227406	WITHOUT_CLASSIFICATION	8.617725938946771E-8	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999996532906743	WITHOUT_CLASSIFICATION	3.4670932563324543E-7	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999997497581339	WITHOUT_CLASSIFICATION	2.5024186606106593E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999157837989958	WITHOUT_CLASSIFICATION	8.421620100426688E-5	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999993640127329	WITHOUT_CLASSIFICATION	6.359872670217177E-7	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999991982207495	WITHOUT_CLASSIFICATION	8.017792506131537E-7	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.999999676200249	WITHOUT_CLASSIFICATION	3.2379975100377345E-7	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999993613577108	WITHOUT_CLASSIFICATION	6.386422891111826E-7	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999990053024245	WITHOUT_CLASSIFICATION	9.946975754571729E-7	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999999501172937	WITHOUT_CLASSIFICATION	4.988270643297909E-8	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999998205520205	WITHOUT_CLASSIFICATION	1.7944797939076707E-7	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999996417035576	WITHOUT_CLASSIFICATION	3.582964424578823E-7	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999999783777792	WITHOUT_CLASSIFICATION	2.162222086475988E-8	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999995991187879	WITHOUT_CLASSIFICATION	4.008812121234033E-7	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999967993354	WITHOUT_CLASSIFICATION	3.200664642638503E-9	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.999999901158369	WITHOUT_CLASSIFICATION	9.884163101507069E-8	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999998601881758	WITHOUT_CLASSIFICATION	1.3981182434010107E-7	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999208781086748	WITHOUT_CLASSIFICATION	7.912189132522106E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999739804447464	WITHOUT_CLASSIFICATION	2.6019555253670638E-5	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999954281724	WITHOUT_CLASSIFICATION	4.571827606588886E-9	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999991005351045	WITHOUT_CLASSIFICATION	8.994648953686734E-7	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999999306901511	WITHOUT_CLASSIFICATION	6.9309848911918E-8	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999999458577192	WITHOUT_CLASSIFICATION	5.414228076686776E-8	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.999998540932808	WITHOUT_CLASSIFICATION	1.4590671919508333E-6	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999936576768397	WITHOUT_CLASSIFICATION	6.342323160277233E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999955567039424	WITHOUT_CLASSIFICATION	4.443296057651437E-6	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999973453079122	WITHOUT_CLASSIFICATION	2.6546920877667024E-6	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999739804447464	WITHOUT_CLASSIFICATION	2.6019555253670638E-5	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999958101746337	WITHOUT_CLASSIFICATION	4.189825366314971E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999955567039424	WITHOUT_CLASSIFICATION	4.443296057651437E-6	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999988133121674	WITHOUT_CLASSIFICATION	1.1866878325362901E-6	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.999999927358784	WITHOUT_CLASSIFICATION	7.264121601710988E-8	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999996393851017	WITHOUT_CLASSIFICATION	3.6061489825746067E-7	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999998330206199	WITHOUT_CLASSIFICATION	1.6697938010429745E-7	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999975873228767	WITHOUT_CLASSIFICATION	2.4126771232624577E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999999298776528	WITHOUT_CLASSIFICATION	7.012234712886575E-8	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999999298776528	WITHOUT_CLASSIFICATION	7.012234712886575E-8	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999976036677378	WITHOUT_CLASSIFICATION	2.396332262128824E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999979340918	WITHOUT_CLASSIFICATION	2.0659081074168945E-9	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999998845335288	WITHOUT_CLASSIFICATION	1.1546647119396418E-7	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999998845335288	WITHOUT_CLASSIFICATION	1.1546647119396418E-7	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999986124999	WITHOUT_CLASSIFICATION	1.387500156361738E-9	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9992487271843362	WITHOUT_CLASSIFICATION	7.512728156637935E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9998633000780821	WITHOUT_CLASSIFICATION	1.3669992191790606E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9998633000780821	WITHOUT_CLASSIFICATION	1.3669992191790606E-4	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999991327978743	WITHOUT_CLASSIFICATION	8.672021257494386E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999987146741874	WITHOUT_CLASSIFICATION	1.285325812493932E-6	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999997512944968	WITHOUT_CLASSIFICATION	2.4870550322047934E-7	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999998495076533	WITHOUT_CLASSIFICATION	1.5049234672576965E-7	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999999913889518	WITHOUT_CLASSIFICATION	8.611048134387376E-9	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999999153065596	WITHOUT_CLASSIFICATION	8.469344032745244E-8	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999995238662737	WITHOUT_CLASSIFICATION	4.7613372642772986E-7	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999990083784875	WITHOUT_CLASSIFICATION	9.916215124538596E-7	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999997136917752	WITHOUT_CLASSIFICATION	2.8630822469636817E-7	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999994486258775	WITHOUT_CLASSIFICATION	5.513741223771669E-7	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999994426266485	WITHOUT_CLASSIFICATION	5.573733514962838E-7	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999995820430156	WITHOUT_CLASSIFICATION	4.1795698440780325E-7	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.999999907497718	WITHOUT_CLASSIFICATION	9.250228197368715E-8	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999983985335607	WITHOUT_CLASSIFICATION	1.6014664393464618E-6	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999996604560364	WITHOUT_CLASSIFICATION	3.3954396354074696E-7	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999999411833475	WITHOUT_CLASSIFICATION	5.881665250187208E-8	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999763396618545	WITHOUT_CLASSIFICATION	2.3660338145458463E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.999999853584539	WITHOUT_CLASSIFICATION	1.4641546109179188E-7	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999997859317191	WITHOUT_CLASSIFICATION	2.1406828080822615E-7	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999998324936011	WITHOUT_CLASSIFICATION	1.6750639891747295E-7	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999981551203649	WITHOUT_CLASSIFICATION	1.844879635103879E-6	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999913023396014	WITHOUT_CLASSIFICATION	8.697660398613917E-6	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999997971898092	WITHOUT_CLASSIFICATION	2.0281019076704435E-7	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.999995985487678	WITHOUT_CLASSIFICATION	4.014512321978056E-6	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999921990610376	WITHOUT_CLASSIFICATION	7.80093896233759E-6	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999878008813129	WITHOUT_CLASSIFICATION	1.2199118687162245E-5	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999978206904178	WITHOUT_CLASSIFICATION	2.179309582166213E-6	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999984814190396	WITHOUT_CLASSIFICATION	1.518580960419834E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999699683695	WITHOUT_CLASSIFICATION	3.003163051072422E-8	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999699683695	WITHOUT_CLASSIFICATION	3.003163051072422E-8	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.999999952417801	WITHOUT_CLASSIFICATION	4.758219890473154E-8	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999998174600688	WITHOUT_CLASSIFICATION	1.8253993116678802E-7	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999961265702131	WITHOUT_CLASSIFICATION	3.87342978701979E-6	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999994252200861	WITHOUT_CLASSIFICATION	5.747799139887944E-7	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999996679900643	WITHOUT_CLASSIFICATION	3.3200993555496285E-7	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999996176755921	WITHOUT_CLASSIFICATION	3.8232440792116204E-7	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999992297859158	WITHOUT_CLASSIFICATION	7.702140841641704E-7	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998912285547	WITHOUT_CLASSIFICATION	1.0877144532267767E-7	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.999999945378417	WITHOUT_CLASSIFICATION	5.462158303973665E-8	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999504861132	WITHOUT_CLASSIFICATION	4.951388672673997E-8	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999997411815625	WITHOUT_CLASSIFICATION	2.5881843742655227E-7	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999996260789589	WITHOUT_CLASSIFICATION	3.7392104113280727E-7	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999974344136655	WITHOUT_CLASSIFICATION	2.5655863345629205E-6	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999995929103116	WITHOUT_CLASSIFICATION	4.070896884278771E-7	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999999905313502	WITHOUT_CLASSIFICATION	9.46864964637948E-9	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999998717378648	WITHOUT_CLASSIFICATION	1.2826213521679856E-7	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999999014136998	WITHOUT_CLASSIFICATION	9.858630019646278E-8	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999996816397807	WITHOUT_CLASSIFICATION	3.1836021938470955E-7	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999985484029696	WITHOUT_CLASSIFICATION	1.4515970303151583E-6	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999998426171074	WITHOUT_CLASSIFICATION	1.573828925526585E-7	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999999229288145	WITHOUT_CLASSIFICATION	7.707118562362296E-8	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999986097212515	WITHOUT_CLASSIFICATION	1.39027874854044E-6	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999997502837307	WITHOUT_CLASSIFICATION	2.4971626930768525E-7	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999431194111	WITHOUT_CLASSIFICATION	5.688058888415388E-8	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999999569456045	WITHOUT_CLASSIFICATION	4.3054395409393556E-8	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999998523911958	WITHOUT_CLASSIFICATION	1.4760880409586477E-7	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.999995365307313	WITHOUT_CLASSIFICATION	4.634692686988541E-6	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999991788420644	WITHOUT_CLASSIFICATION	8.211579357459056E-7	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999992525923416	WITHOUT_CLASSIFICATION	7.474076583799614E-7	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999999761139905	WITHOUT_CLASSIFICATION	2.388600962255216E-8	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999996245234047	WITHOUT_CLASSIFICATION	3.7547659533725957E-7	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999997088425965	WITHOUT_CLASSIFICATION	2.9115740345750766E-7	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999998758600305	WITHOUT_CLASSIFICATION	1.24139969545061E-7	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999995661450879	WITHOUT_CLASSIFICATION	4.3385491208484153E-7	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999999008564427	WITHOUT_CLASSIFICATION	9.914355720385093E-8	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999991859597872	WITHOUT_CLASSIFICATION	8.140402129023696E-7	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999998442196872	WITHOUT_CLASSIFICATION	1.5578031265303488E-7	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999981115666225	WITHOUT_CLASSIFICATION	1.88843337741921E-6	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999856455238	WITHOUT_CLASSIFICATION	1.4354476136596118E-8	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999998563624142	WITHOUT_CLASSIFICATION	1.4363758581810045E-7	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999979350243261	WITHOUT_CLASSIFICATION	2.0649756739308976E-6	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999998705832935	WITHOUT_CLASSIFICATION	1.294167064619644E-7	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999031821043	WITHOUT_CLASSIFICATION	9.681789561049021E-8	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999031821043	WITHOUT_CLASSIFICATION	9.681789561049021E-8	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999959810462272	WITHOUT_CLASSIFICATION	4.018953772762094E-6	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999879815761	WITHOUT_CLASSIFICATION	1.201842402563141E-8	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999998362483352	WITHOUT_CLASSIFICATION	1.6375166480038101E-7	TEST
// return	WITHOUT_CLASSIFICATION	0.999999817184657	WITHOUT_CLASSIFICATION	1.8281534296965741E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999996779814692	WITHOUT_CLASSIFICATION	3.2201853086040154E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999995595692079	WITHOUT_CLASSIFICATION	4.404307920938698E-7	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999992427518765	WITHOUT_CLASSIFICATION	7.572481236560156E-7	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.99999841239459	WITHOUT_CLASSIFICATION	1.5876054100231932E-6	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999973330082249	WITHOUT_CLASSIFICATION	2.666991775133933E-6	TEST
// tc	WITHOUT_CLASSIFICATION	0.9999967994346909	WITHOUT_CLASSIFICATION	3.2005653091425833E-6	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999972416026569	WITHOUT_CLASSIFICATION	2.7583973430990024E-6	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999994006506253	WITHOUT_CLASSIFICATION	5.993493747851679E-7	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999994578813862	WITHOUT_CLASSIFICATION	5.421186136516906E-7	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.99999984262198	WITHOUT_CLASSIFICATION	1.5737802006875455E-7	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999095397785	WITHOUT_CLASSIFICATION	9.04602215660791E-8	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999994419262703	WITHOUT_CLASSIFICATION	5.580737296373082E-7	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999998054966845	WITHOUT_CLASSIFICATION	1.9450331558290312E-7	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999991977457771	WITHOUT_CLASSIFICATION	8.022542228579743E-7	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999998730008564	WITHOUT_CLASSIFICATION	1.2699914360028166E-7	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999994483275465	WITHOUT_CLASSIFICATION	5.516724534408716E-7	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999998813790832	WITHOUT_CLASSIFICATION	1.1862091686003081E-7	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999994618508812	WITHOUT_CLASSIFICATION	5.381491188309018E-7	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999994602956721	WITHOUT_CLASSIFICATION	5.397043278634202E-7	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999997512113367	WITHOUT_CLASSIFICATION	2.487886632991514E-7	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999996773059044	WITHOUT_CLASSIFICATION	3.2269409549903864E-7	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999996472673756	WITHOUT_CLASSIFICATION	3.5273262445728635E-7	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999997843803842	WITHOUT_CLASSIFICATION	2.1561961596444836E-7	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.999999817504711	WITHOUT_CLASSIFICATION	1.8249528899647304E-7	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999995475729916	WITHOUT_CLASSIFICATION	4.5242700836624046E-7	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999989304002396	WITHOUT_CLASSIFICATION	1.0695997604572837E-6	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999994300775074	WITHOUT_CLASSIFICATION	5.699224926212531E-7	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999977369759201	WITHOUT_CLASSIFICATION	2.263024080023702E-6	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999999750446421	WITHOUT_CLASSIFICATION	2.4955357906217696E-8	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999997892645747	WITHOUT_CLASSIFICATION	2.1073542527742226E-7	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999981115666225	WITHOUT_CLASSIFICATION	1.88843337741921E-6	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999971261818299	WITHOUT_CLASSIFICATION	2.8738181701163022E-6	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999990081249419	WITHOUT_CLASSIFICATION	9.91875058085457E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999990081249419	WITHOUT_CLASSIFICATION	9.91875058085457E-7	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999988230787953	WITHOUT_CLASSIFICATION	1.1769212046608786E-6	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999998655824515	WITHOUT_CLASSIFICATION	1.3441754864235742E-7	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999992398770967	WITHOUT_CLASSIFICATION	7.601229032105474E-7	TEST
// never reached	WITHOUT_CLASSIFICATION	0.999998969059186	WITHOUT_CLASSIFICATION	1.0309408141238269E-6	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999997076881749	WITHOUT_CLASSIFICATION	2.9231182504454573E-7	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999997379906009	WITHOUT_CLASSIFICATION	2.6200939916409817E-7	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.999999662814661	WITHOUT_CLASSIFICATION	3.3718533897175526E-7	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999994944705478	WITHOUT_CLASSIFICATION	5.055294521812281E-7	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999995939857292	WITHOUT_CLASSIFICATION	4.060142707470286E-7	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999994437012905	WITHOUT_CLASSIFICATION	5.562987095411564E-7	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.999999216622972	WITHOUT_CLASSIFICATION	7.833770278921355E-7	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999991897293752	WITHOUT_CLASSIFICATION	8.102706249174394E-7	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999998821199914	WITHOUT_CLASSIFICATION	1.1788000865722767E-7	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999992599475439	WITHOUT_CLASSIFICATION	7.400524560494948E-7	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999828015549216	WITHOUT_CLASSIFICATION	1.7198445078405304E-5	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999999923340329	WITHOUT_CLASSIFICATION	7.665967026116294E-9	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999997039012501	WITHOUT_CLASSIFICATION	2.9609874990114816E-7	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999994295134277	WITHOUT_CLASSIFICATION	5.704865724144211E-7	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999997087124016	WITHOUT_CLASSIFICATION	2.9128759832799226E-7	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.999999600893531	WITHOUT_CLASSIFICATION	3.9910646893842206E-7	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.999999473288501	WITHOUT_CLASSIFICATION	5.267114990336034E-7	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999996249097126	WITHOUT_CLASSIFICATION	3.7509028738393075E-7	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999999867354811	WITHOUT_CLASSIFICATION	1.3264518917308383E-8	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999999583620229	WITHOUT_CLASSIFICATION	4.1637976985072673E-8	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999853946875	WITHOUT_CLASSIFICATION	1.4605312488569981E-8	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999998661953353	WITHOUT_CLASSIFICATION	1.3380466462869612E-7	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999998742223705	WITHOUT_CLASSIFICATION	1.2577762942589E-7	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999997779093193	WITHOUT_CLASSIFICATION	2.2209068082876827E-7	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999997462589132	WITHOUT_CLASSIFICATION	2.5374108682040617E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999999188400646	WITHOUT_CLASSIFICATION	8.115993541826228E-8	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999992372320833	WITHOUT_CLASSIFICATION	7.627679166390106E-7	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999998527921745	WITHOUT_CLASSIFICATION	1.472078254462779E-7	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999995141139834	WITHOUT_CLASSIFICATION	4.858860166736748E-7	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999751600692	WITHOUT_CLASSIFICATION	2.483993079578335E-8	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999999898138108	WITHOUT_CLASSIFICATION	1.0186189168787956E-8	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999997285594204	WITHOUT_CLASSIFICATION	2.7144057961611375E-7	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999998633243532	WITHOUT_CLASSIFICATION	1.366756468952223E-7	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999998661953353	WITHOUT_CLASSIFICATION	1.3380466462869612E-7	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999998742223705	WITHOUT_CLASSIFICATION	1.2577762942589E-7	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999997779093193	WITHOUT_CLASSIFICATION	2.2209068082876827E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999999188400646	WITHOUT_CLASSIFICATION	8.115993541826228E-8	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999693615162	WITHOUT_CLASSIFICATION	3.063848375079151E-8	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.999999974477262	WITHOUT_CLASSIFICATION	2.552273798873166E-8	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999995684706046	WITHOUT_CLASSIFICATION	4.315293955164335E-7	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999995533407705	WITHOUT_CLASSIFICATION	4.4665922953266976E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999990960149708	WITHOUT_CLASSIFICATION	9.039850291237484E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999589411307	WITHOUT_CLASSIFICATION	4.105886928305961E-8	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999996094085581	WITHOUT_CLASSIFICATION	3.9059144184298433E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999997832534373	WITHOUT_CLASSIFICATION	2.1674656276658014E-7	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999998401911276	WITHOUT_CLASSIFICATION	1.598088723329687E-7	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999988035874976	WITHOUT_CLASSIFICATION	1.1964125024081116E-6	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999972053268569	WITHOUT_CLASSIFICATION	2.7946731432310246E-6	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999999284927162	WITHOUT_CLASSIFICATION	7.150728371522213E-8	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999999917331608	WITHOUT_CLASSIFICATION	8.266839344504946E-9	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999999980367099	WITHOUT_CLASSIFICATION	1.9632901650417986E-9	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999990180712007	WITHOUT_CLASSIFICATION	9.819287992149493E-7	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999999556181852	WITHOUT_CLASSIFICATION	4.438181490031704E-8	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999999859745005	WITHOUT_CLASSIFICATION	1.4025499615485303E-8	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999996045201575	WITHOUT_CLASSIFICATION	3.954798425371099E-7	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999999781559593	WITHOUT_CLASSIFICATION	2.18440407334863E-8	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999998633243532	WITHOUT_CLASSIFICATION	1.366756468952223E-7	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.999999974477262	WITHOUT_CLASSIFICATION	2.552273798873166E-8	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999995684706046	WITHOUT_CLASSIFICATION	4.315293955164335E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999990960149708	WITHOUT_CLASSIFICATION	9.039850291237484E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999589411307	WITHOUT_CLASSIFICATION	4.105886928305961E-8	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999996094085581	WITHOUT_CLASSIFICATION	3.9059144184298433E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999997832534373	WITHOUT_CLASSIFICATION	2.1674656276658014E-7	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999997659871622	WITHOUT_CLASSIFICATION	2.3401283765678833E-7	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999972990771873	WITHOUT_CLASSIFICATION	2.7009228126345497E-6	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.999999955372759	WITHOUT_CLASSIFICATION	4.462724101005977E-8	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999929397789	WITHOUT_CLASSIFICATION	7.0602209927328975E-9	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999983215979746	WITHOUT_CLASSIFICATION	1.6784020254365194E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999983215979746	WITHOUT_CLASSIFICATION	1.6784020254365194E-6	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999999428818187	WITHOUT_CLASSIFICATION	5.71181814110623E-8	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999999747776468	WITHOUT_CLASSIFICATION	2.522235318079274E-8	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999981510363494	WITHOUT_CLASSIFICATION	1.848963650687192E-6	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999998625830862	WITHOUT_CLASSIFICATION	1.3741691389575502E-7	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999998397597408	WITHOUT_CLASSIFICATION	1.6024025910051512E-7	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999999340230774	WITHOUT_CLASSIFICATION	6.597692258725835E-8	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999992390892597	WITHOUT_CLASSIFICATION	7.609107401898154E-7	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999999846660349	WITHOUT_CLASSIFICATION	1.5333965172234153E-8	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999996633569392	WITHOUT_CLASSIFICATION	3.3664306073274196E-7	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.999999612211309	WITHOUT_CLASSIFICATION	3.8778869107625003E-7	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999999754107651	WITHOUT_CLASSIFICATION	2.4589234859311978E-8	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999999845122726	WITHOUT_CLASSIFICATION	1.5487727470210225E-8	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999992651879366	WITHOUT_CLASSIFICATION	7.348120635163336E-7	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.999999195362154	WITHOUT_CLASSIFICATION	8.046378459474082E-7	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999999759154282	WITHOUT_CLASSIFICATION	2.4084571805902886E-8	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999999501035466	WITHOUT_CLASSIFICATION	4.989645347243194E-8	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999997195946791	WITHOUT_CLASSIFICATION	2.804053208514167E-7	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.99999997246959	WITHOUT_CLASSIFICATION	2.7530410017209434E-8	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999997449832693	WITHOUT_CLASSIFICATION	2.5501673083676745E-7	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.999999993734374	WITHOUT_CLASSIFICATION	6.2656260510982225E-9	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9997015713534755	WITHOUT_CLASSIFICATION	2.984286465244558E-4	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999998942488905	WITHOUT_CLASSIFICATION	1.0575110956024847E-7	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.999999981618455	WITHOUT_CLASSIFICATION	1.8381544954719196E-8	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9969576890209375	WITHOUT_CLASSIFICATION	0.0030423109790626087	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999400109549	WITHOUT_CLASSIFICATION	5.9989045063782E-8	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999881411343	WITHOUT_CLASSIFICATION	1.1858865615220825E-8	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999959179321	WITHOUT_CLASSIFICATION	4.082067853566393E-9	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999990376507575	WITHOUT_CLASSIFICATION	9.62349242507381E-7	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999984985151257	WITHOUT_CLASSIFICATION	1.501484874324781E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999400109549	WITHOUT_CLASSIFICATION	5.9989045063782E-8	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999881411343	WITHOUT_CLASSIFICATION	1.1858865615220825E-8	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.999999195362154	WITHOUT_CLASSIFICATION	8.046378459474082E-7	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999990948790911	WITHOUT_CLASSIFICATION	9.051209089309404E-7	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999999669224701	WITHOUT_CLASSIFICATION	3.30775298315176E-8	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.999999953885207	WITHOUT_CLASSIFICATION	4.611479296056929E-8	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999999396116737	WITHOUT_CLASSIFICATION	6.038832628582083E-8	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999999465046514	WITHOUT_CLASSIFICATION	5.3495348589494494E-8	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999975548500958	WITHOUT_CLASSIFICATION	2.445149904167289E-6	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999988241506177	WITHOUT_CLASSIFICATION	1.1758493822936068E-6	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999998611615808	WITHOUT_CLASSIFICATION	1.3883841924243952E-7	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999812031559174	WITHOUT_CLASSIFICATION	1.8796844082656768E-5	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.999998873566141	WITHOUT_CLASSIFICATION	1.1264338589625055E-6	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999999421111974	WITHOUT_CLASSIFICATION	5.788880260641239E-8	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999998517347652	WITHOUT_CLASSIFICATION	1.4826523471974585E-7	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999998046172821	WITHOUT_CLASSIFICATION	1.95382717857977E-7	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999625978799	WITHOUT_CLASSIFICATION	3.74021200450763E-8	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999984377118	WITHOUT_CLASSIFICATION	1.562288200466722E-9	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999988267932336	WITHOUT_CLASSIFICATION	1.173206766404537E-6	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999999983754937	WITHOUT_CLASSIFICATION	1.6245063127282908E-9	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999997643450667	WITHOUT_CLASSIFICATION	2.3565493341318502E-7	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999998882821947	WITHOUT_CLASSIFICATION	1.1171780527095638E-7	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999997551668429	WITHOUT_CLASSIFICATION	2.448331570153185E-7	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.999999963450103	WITHOUT_CLASSIFICATION	3.654989701509142E-8	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999646845933	WITHOUT_CLASSIFICATION	3.531540667977122E-8	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999998606852902	WITHOUT_CLASSIFICATION	1.3931470987374948E-7	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999996824227	WITHOUT_CLASSIFICATION	3.1757725436580556E-10	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999959806779	WITHOUT_CLASSIFICATION	4.019322197192795E-9	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999998147778655	WITHOUT_CLASSIFICATION	1.8522213441856866E-7	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9988073552998716	WITHOUT_CLASSIFICATION	0.0011926447001284152	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999964761470129	WITHOUT_CLASSIFICATION	3.523852987105178E-6	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999992962819796	WITHOUT_CLASSIFICATION	7.037180204088322E-7	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999591531358	WITHOUT_CLASSIFICATION	4.0846864271502394E-8	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999999891041731	WITHOUT_CLASSIFICATION	1.0895826892269923E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999729371375	WITHOUT_CLASSIFICATION	2.7062862541583577E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999729371375	WITHOUT_CLASSIFICATION	2.7062862541583577E-8	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999992651879366	WITHOUT_CLASSIFICATION	7.348120635163336E-7	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999513100828	WITHOUT_CLASSIFICATION	4.868991718906604E-8	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999999460176793	WITHOUT_CLASSIFICATION	5.3982320734391584E-8	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999987739865264	WITHOUT_CLASSIFICATION	1.226013473607609E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999999947291865	WITHOUT_CLASSIFICATION	5.2708134998632046E-8	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999999947291865	WITHOUT_CLASSIFICATION	5.2708134998632046E-8	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999998853688827	WITHOUT_CLASSIFICATION	1.1463111733570935E-7	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999994112708337	WITHOUT_CLASSIFICATION	5.887291663644017E-7	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999998866526574	WITHOUT_CLASSIFICATION	1.1334734254467662E-7	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999998677166773	WITHOUT_CLASSIFICATION	1.3228332275384177E-7	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.999999478668884	WITHOUT_CLASSIFICATION	5.213311161505779E-7	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999693748424	WITHOUT_CLASSIFICATION	3.062515764325205E-8	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999997660738441	WITHOUT_CLASSIFICATION	2.339261558389959E-7	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999998205118545	WITHOUT_CLASSIFICATION	1.794881454657195E-7	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998772974442	WITHOUT_CLASSIFICATION	1.2270255579672807E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.999999617586716	WITHOUT_CLASSIFICATION	3.824132840149905E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999996068851785	WITHOUT_CLASSIFICATION	3.931148215692397E-7	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999996909461275	WITHOUT_CLASSIFICATION	3.0905387249364254E-7	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999984626667704	WITHOUT_CLASSIFICATION	1.53733322962847E-6	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999999892578042	WITHOUT_CLASSIFICATION	1.0742195891705154E-8	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999982360790537	WITHOUT_CLASSIFICATION	1.7639209462759558E-6	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999965880867466	WITHOUT_CLASSIFICATION	3.411913253235731E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999997534289508	WITHOUT_CLASSIFICATION	2.4657104922360204E-7	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999997534289508	WITHOUT_CLASSIFICATION	2.4657104922360204E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999995731976248	WITHOUT_CLASSIFICATION	4.268023752052589E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999995731976248	WITHOUT_CLASSIFICATION	4.268023752052589E-7	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999196119163	WITHOUT_CLASSIFICATION	8.038808367806474E-8	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999958656147452	WITHOUT_CLASSIFICATION	4.134385254811081E-6	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999907703017	WITHOUT_CLASSIFICATION	9.229698315167843E-9	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999998740830816	WITHOUT_CLASSIFICATION	1.259169184761393E-7	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999999672734005	WITHOUT_CLASSIFICATION	3.272659959295539E-8	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999998419522641	WITHOUT_CLASSIFICATION	1.5804773587350863E-7	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.999999975537389	WITHOUT_CLASSIFICATION	2.4462611007558648E-8	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999996909461275	WITHOUT_CLASSIFICATION	3.0905387249364254E-7	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999984626667704	WITHOUT_CLASSIFICATION	1.53733322962847E-6	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999982360790537	WITHOUT_CLASSIFICATION	1.7639209462759558E-6	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999978549693664	WITHOUT_CLASSIFICATION	2.145030633604581E-6	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999985465803646	WITHOUT_CLASSIFICATION	1.453419635418979E-6	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999506270888	WITHOUT_CLASSIFICATION	4.937291127714672E-8	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999979831477451	WITHOUT_CLASSIFICATION	2.0168522547378253E-6	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999997489167373	WITHOUT_CLASSIFICATION	2.5108326280083987E-7	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999986964937956	WITHOUT_CLASSIFICATION	1.3035062044250299E-6	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999995337791583	WITHOUT_CLASSIFICATION	4.662208417429794E-7	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.999999603068574	WITHOUT_CLASSIFICATION	3.969314260085724E-7	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999994680586692	WITHOUT_CLASSIFICATION	5.319413307858507E-7	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999995333337599	WITHOUT_CLASSIFICATION	4.6666624004232465E-7	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999999570719773	WITHOUT_CLASSIFICATION	4.292802275921386E-8	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999993510947446	WITHOUT_CLASSIFICATION	6.489052553919086E-7	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999997136162259	WITHOUT_CLASSIFICATION	2.863837740943812E-7	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999986146211025	WITHOUT_CLASSIFICATION	1.3853788974402393E-6	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999992120027836	WITHOUT_CLASSIFICATION	7.879972164636456E-7	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999180104233	WITHOUT_CLASSIFICATION	8.198957661832659E-8	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999996450688858	WITHOUT_CLASSIFICATION	3.5493111420541436E-7	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999994980110655	WITHOUT_CLASSIFICATION	5.019889345922048E-7	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.999995433857105	WITHOUT_CLASSIFICATION	4.566142894981947E-6	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999755100077	WITHOUT_CLASSIFICATION	2.448999225811603E-8	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999997708767661	WITHOUT_CLASSIFICATION	2.2912323396563223E-7	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999996401541242	WITHOUT_CLASSIFICATION	3.5984587576050647E-7	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999899511149203	WITHOUT_CLASSIFICATION	1.0048885079638943E-5	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999997210761332	WITHOUT_CLASSIFICATION	2.789238668185308E-7	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999997110040516	WITHOUT_CLASSIFICATION	2.8899594837891063E-7	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999998523500366	WITHOUT_CLASSIFICATION	1.4764996332499124E-7	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999997939225898	WITHOUT_CLASSIFICATION	2.0607741019136235E-7	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.999993664110822	WITHOUT_CLASSIFICATION	6.335889178023796E-6	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999999798564769	WITHOUT_CLASSIFICATION	2.0143523070877532E-8	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999999519523229	WITHOUT_CLASSIFICATION	4.804767711267561E-8	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999999511564538	WITHOUT_CLASSIFICATION	4.8843546086428024E-8	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999994618604428	WITHOUT_CLASSIFICATION	5.38139557273836E-7	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999998849514522	WITHOUT_CLASSIFICATION	1.1504854780178701E-7	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999999909215289	WITHOUT_CLASSIFICATION	9.078471043987463E-9	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999997924807953	WITHOUT_CLASSIFICATION	2.075192047009412E-7	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999999023940207	WITHOUT_CLASSIFICATION	9.76059793886167E-8	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999999256901393	WITHOUT_CLASSIFICATION	7.430986071739899E-8	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999997916672813	WITHOUT_CLASSIFICATION	2.083327187522619E-7	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999894021480599	WITHOUT_CLASSIFICATION	1.0597851940117933E-5	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999998765023661	WITHOUT_CLASSIFICATION	1.2349763396429887E-7	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999998585418559	WITHOUT_CLASSIFICATION	1.4145814406647434E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999999460176793	WITHOUT_CLASSIFICATION	5.3982320734391584E-8	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999999256901393	WITHOUT_CLASSIFICATION	7.430986071739899E-8	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.99997220982939	WITHOUT_CLASSIFICATION	2.7790170610110915E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999904802301	WITHOUT_CLASSIFICATION	9.519769863857357E-9	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999997026501911	WITHOUT_CLASSIFICATION	2.9734980891632336E-7	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999970643117395	WITHOUT_CLASSIFICATION	2.9356882605678453E-6	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999970643117395	WITHOUT_CLASSIFICATION	2.9356882605678453E-6	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999998252476513	WITHOUT_CLASSIFICATION	1.7475234867097195E-7	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999999963231699	WITHOUT_CLASSIFICATION	3.676829949208169E-9	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999998421254735	WITHOUT_CLASSIFICATION	1.5787452646880124E-7	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999721257213	WITHOUT_CLASSIFICATION	2.7874278736742056E-8	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999995975982314	WITHOUT_CLASSIFICATION	4.0240176861723514E-7	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999997921520901	WITHOUT_CLASSIFICATION	2.07847909902017E-7	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999993285240775	WITHOUT_CLASSIFICATION	6.714759225851224E-7	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999996695295965	WITHOUT_CLASSIFICATION	3.3047040340675253E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999998649592178	WITHOUT_CLASSIFICATION	1.350407822717253E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999998649592178	WITHOUT_CLASSIFICATION	1.350407822717253E-7	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999994710839512	WITHOUT_CLASSIFICATION	5.289160489124239E-7	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999919931294274	WITHOUT_CLASSIFICATION	8.006870572495634E-6	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999999350101088	WITHOUT_CLASSIFICATION	6.498989128275387E-8	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.999999875499302	WITHOUT_CLASSIFICATION	1.245006980859698E-7	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999998873746215	WITHOUT_CLASSIFICATION	1.1262537852770069E-7	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999999878836169	WITHOUT_CLASSIFICATION	1.2116383200728313E-8	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999991960656	WITHOUT_CLASSIFICATION	8.039342582640406E-10	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999998020423423	WITHOUT_CLASSIFICATION	1.9795765776540725E-7	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999994654757481	WITHOUT_CLASSIFICATION	5.345242518003627E-7	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999549699372386	WITHOUT_CLASSIFICATION	4.503006276143714E-5	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999901762562562	WITHOUT_CLASSIFICATION	9.823743743856035E-6	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999973306110392	WITHOUT_CLASSIFICATION	2.669388960874425E-6	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999999572340162	WITHOUT_CLASSIFICATION	4.2765983699389756E-8	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999975086739152	WITHOUT_CLASSIFICATION	2.4913260847564465E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999975086739152	WITHOUT_CLASSIFICATION	2.4913260847564465E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999994837507565	WITHOUT_CLASSIFICATION	5.162492435713773E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999997832534373	WITHOUT_CLASSIFICATION	2.1674656276658014E-7	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.999939547138995	WITHOUT_CLASSIFICATION	6.0452861005054244E-5	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999999807670693	WITHOUT_CLASSIFICATION	1.9232930739570243E-8	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999886984028	WITHOUT_CLASSIFICATION	1.130159715187358E-8	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999998982992205	WITHOUT_CLASSIFICATION	1.0170077939872698E-7	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.999996926585044	WITHOUT_CLASSIFICATION	3.0734149558949155E-6	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999981873890028	WITHOUT_CLASSIFICATION	1.8126109972937216E-6	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999969452348937	WITHOUT_CLASSIFICATION	3.0547651062454695E-6	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999975678323376	WITHOUT_CLASSIFICATION	2.4321676623116675E-6	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.999999908629335	WITHOUT_CLASSIFICATION	9.137066513822199E-8	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.999998893913623	WITHOUT_CLASSIFICATION	1.106086376945038E-6	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999464755897837	WITHOUT_CLASSIFICATION	5.352441021635504E-5	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.999999954712924	WITHOUT_CLASSIFICATION	4.528707587978105E-8	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999981758450771	WITHOUT_CLASSIFICATION	1.8241549227987502E-6	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999678576101	WITHOUT_CLASSIFICATION	3.214238995364717E-8	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999997923527371	WITHOUT_CLASSIFICATION	2.0764726297847836E-7	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999999729898391	WITHOUT_CLASSIFICATION	2.701016084955931E-8	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999999866324678	WITHOUT_CLASSIFICATION	1.336753216228081E-8	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999999866126408	WITHOUT_CLASSIFICATION	1.3387359178295998E-8	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9999983919333599	WITHOUT_CLASSIFICATION	1.608066640005529E-6	TEST
// start class	WITHOUT_CLASSIFICATION	0.999999173147668	WITHOUT_CLASSIFICATION	8.268523319362453E-7	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999997889656499	WITHOUT_CLASSIFICATION	2.1103434995652212E-7	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999997333176113	WITHOUT_CLASSIFICATION	2.6668238872931414E-7	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9996232863826967	WITHOUT_CLASSIFICATION	3.7671361730321113E-4	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999986330487914	WITHOUT_CLASSIFICATION	1.3669512085617722E-6	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.999999784887671	WITHOUT_CLASSIFICATION	2.151123289102208E-7	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999997916580827	WITHOUT_CLASSIFICATION	2.0834191727170728E-7	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999997732683432	WITHOUT_CLASSIFICATION	2.267316567698049E-7	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.999999203079573	WITHOUT_CLASSIFICATION	7.969204269820524E-7	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999996430283221	WITHOUT_CLASSIFICATION	3.569716778774837E-7	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999999316813434	WITHOUT_CLASSIFICATION	6.831865665702012E-8	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999996227472648	WITHOUT_CLASSIFICATION	3.772527350940315E-7	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999997276804556	WITHOUT_CLASSIFICATION	2.723195443728741E-7	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999970548975932	WITHOUT_CLASSIFICATION	2.945102406940601E-6	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999765278852	WITHOUT_CLASSIFICATION	2.347211470256924E-8	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999970746109889	WITHOUT_CLASSIFICATION	2.925389011113415E-6	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.999996616359853	WITHOUT_CLASSIFICATION	3.383640147061567E-6	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999953084787486	WITHOUT_CLASSIFICATION	4.691521251383563E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999990150496457	WITHOUT_CLASSIFICATION	9.849503542582426E-7	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999999118531571	WITHOUT_CLASSIFICATION	8.814684288265162E-8	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999999719131148	WITHOUT_CLASSIFICATION	2.8086885120576012E-8	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999956376785432	WITHOUT_CLASSIFICATION	4.36232145675789E-6	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999999697699605	WITHOUT_CLASSIFICATION	3.023003942870152E-8	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9999801693164609	WITHOUT_CLASSIFICATION	1.9830683539149546E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999985115659166	WITHOUT_CLASSIFICATION	1.488434083396447E-6	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999993796242547	WITHOUT_CLASSIFICATION	6.203757454287255E-7	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999888750525	WITHOUT_CLASSIFICATION	1.112494756572246E-8	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999867341776569	WITHOUT_CLASSIFICATION	1.3265822343043957E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999400109549	WITHOUT_CLASSIFICATION	5.9989045063782E-8	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999400109549	WITHOUT_CLASSIFICATION	5.9989045063782E-8	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.999999986252781	WITHOUT_CLASSIFICATION	1.3747219101081551E-8	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999990124142843	WITHOUT_CLASSIFICATION	9.875857157567452E-7	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999969538715988	WITHOUT_CLASSIFICATION	3.046128401177745E-6	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999998313399405	WITHOUT_CLASSIFICATION	1.686600594094961E-7	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999993728180827	WITHOUT_CLASSIFICATION	6.271819172934347E-7	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.999999106885616	WITHOUT_CLASSIFICATION	8.931143840589563E-7	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999998947750517	WITHOUT_CLASSIFICATION	1.052249483524128E-7	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999157884094	WITHOUT_CLASSIFICATION	8.421159064278831E-8	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.999999988018148	WITHOUT_CLASSIFICATION	1.1981852014622254E-8	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999995402108018	WITHOUT_CLASSIFICATION	4.5978919811129967E-7	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999999656336324	WITHOUT_CLASSIFICATION	3.4366367661301094E-8	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999999656336324	WITHOUT_CLASSIFICATION	3.4366367661301094E-8	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999999656336324	WITHOUT_CLASSIFICATION	3.4366367661301094E-8	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999969537341	WITHOUT_CLASSIFICATION	3.046265903950671E-9	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999999766152102	WITHOUT_CLASSIFICATION	2.3384789838951892E-8	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999998485707219	WITHOUT_CLASSIFICATION	1.5142927814582334E-7	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999408897485	WITHOUT_CLASSIFICATION	5.9110251497593954E-8	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999408897485	WITHOUT_CLASSIFICATION	5.9110251497593954E-8	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999999063075184	WITHOUT_CLASSIFICATION	9.36924816403813E-8	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999984047598085	WITHOUT_CLASSIFICATION	1.5952401914771802E-6	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999980579606942	WITHOUT_CLASSIFICATION	1.94203930583699E-6	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999998297959797	WITHOUT_CLASSIFICATION	1.7020402034187986E-7	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999996968851352	WITHOUT_CLASSIFICATION	3.0311486474481347E-7	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999984686387016	WITHOUT_CLASSIFICATION	1.531361298441416E-6	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999997559306667	WITHOUT_CLASSIFICATION	2.440693332792339E-7	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999998521209594	WITHOUT_CLASSIFICATION	1.4787904060844575E-7	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999996782612355	WITHOUT_CLASSIFICATION	3.217387645262641E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999999109308896	WITHOUT_CLASSIFICATION	8.906911034730871E-8	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999999109308896	WITHOUT_CLASSIFICATION	8.906911034730871E-8	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999953944079634	WITHOUT_CLASSIFICATION	4.605592036661079E-6	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.999990762784213	WITHOUT_CLASSIFICATION	9.237215786996874E-6	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999993804887125	WITHOUT_CLASSIFICATION	6.195112875079819E-7	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999980473984775	WITHOUT_CLASSIFICATION	1.952601522519497E-6	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999999642125416	WITHOUT_CLASSIFICATION	3.578745838280503E-8	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999991816872015	WITHOUT_CLASSIFICATION	8.183127984990733E-7	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999984825672481	WITHOUT_CLASSIFICATION	1.517432751907213E-6	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999984325250642	WITHOUT_CLASSIFICATION	1.5674749358564001E-6	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999962641217596	WITHOUT_CLASSIFICATION	3.7358782403900417E-6	TEST
// POP	WITHOUT_CLASSIFICATION	0.9999893897662465	WITHOUT_CLASSIFICATION	1.0610233753467593E-5	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999999564966192	WITHOUT_CLASSIFICATION	4.350338084542289E-8	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999919483049698	WITHOUT_CLASSIFICATION	8.051695030153057E-6	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9999952823668834	WITHOUT_CLASSIFICATION	4.7176331165107564E-6	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999995589807722	WITHOUT_CLASSIFICATION	4.410192278251301E-7	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999903299551353	WITHOUT_CLASSIFICATION	9.67004486475916E-6	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999999684270329	WITHOUT_CLASSIFICATION	3.1572967048802525E-8	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999998901331872	WITHOUT_CLASSIFICATION	1.0986681279746844E-7	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999912825956555	WITHOUT_CLASSIFICATION	8.717404344412195E-6	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.999999862644225	WITHOUT_CLASSIFICATION	1.373557748754371E-7	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999807480253	WITHOUT_CLASSIFICATION	1.9251974634679892E-8	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999974902271572	WITHOUT_CLASSIFICATION	2.509772842718775E-6	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999998979088186	WITHOUT_CLASSIFICATION	1.0209118139406915E-7	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999996991199943	WITHOUT_CLASSIFICATION	3.008800056165284E-7	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999915884247605	WITHOUT_CLASSIFICATION	8.411575239540725E-6	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999984834670449	WITHOUT_CLASSIFICATION	1.5165329551007806E-6	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999999006789855	WITHOUT_CLASSIFICATION	9.932101457196152E-8	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999995556079164	WITHOUT_CLASSIFICATION	4.4439208354514104E-7	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999951980690996	WITHOUT_CLASSIFICATION	4.80193090038427E-6	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999597048941	WITHOUT_CLASSIFICATION	4.029510592137744E-8	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999978480214671	WITHOUT_CLASSIFICATION	2.1519785329988085E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999592205010261	WITHOUT_CLASSIFICATION	4.0779498973882304E-5	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999985858921103	WITHOUT_CLASSIFICATION	1.4141078896089632E-6	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999975579695793	WITHOUT_CLASSIFICATION	2.4420304205594E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999592205010261	WITHOUT_CLASSIFICATION	4.0779498973882304E-5	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999987298934602	WITHOUT_CLASSIFICATION	1.2701065397452274E-6	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999939265188342	WITHOUT_CLASSIFICATION	6.073481165862789E-6	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999886459853841	WITHOUT_CLASSIFICATION	1.1354014615906313E-5	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999990002042171	WITHOUT_CLASSIFICATION	9.997957829991693E-7	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999994383833105	WITHOUT_CLASSIFICATION	5.616166894684586E-7	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999998880993919	WITHOUT_CLASSIFICATION	1.1190060821112412E-7	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999998232352124	WITHOUT_CLASSIFICATION	1.7676478760194376E-7	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.999996063270816	WITHOUT_CLASSIFICATION	3.936729183979643E-6	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999929663482164	WITHOUT_CLASSIFICATION	7.033651783471425E-6	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999792816218459	WITHOUT_CLASSIFICATION	2.0718378154114586E-5	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999748362130093	WITHOUT_CLASSIFICATION	2.5163786990657663E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999935954082815	WITHOUT_CLASSIFICATION	6.404591718418553E-6	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999902670675894	WITHOUT_CLASSIFICATION	9.73293241052111E-6	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999987824264063	WITHOUT_CLASSIFICATION	1.2175735936803509E-6	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.999987803675176	WITHOUT_CLASSIFICATION	1.219632482390882E-5	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999944296486799	WITHOUT_CLASSIFICATION	5.570351320087678E-6	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999967999758868	WITHOUT_CLASSIFICATION	3.2000241131624228E-6	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999965157720972	WITHOUT_CLASSIFICATION	3.4842279028238575E-6	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999987265450703	WITHOUT_CLASSIFICATION	1.2734549298086753E-6	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999739739943393	WITHOUT_CLASSIFICATION	2.6026005660735093E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999931128308754	WITHOUT_CLASSIFICATION	6.88716912450458E-6	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.999998653595537	WITHOUT_CLASSIFICATION	1.3464044630546524E-6	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.999983464412683	WITHOUT_CLASSIFICATION	1.6535587316932735E-5	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.999990749875201	WITHOUT_CLASSIFICATION	9.250124798988102E-6	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999802407425963	WITHOUT_CLASSIFICATION	1.9759257403672963E-5	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.999999568484953	WITHOUT_CLASSIFICATION	4.315150470742765E-7	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999901391753453	WITHOUT_CLASSIFICATION	9.860824654691068E-6	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999991092305229	WITHOUT_CLASSIFICATION	8.907694770772913E-7	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999997931222521	WITHOUT_CLASSIFICATION	2.0687774798386386E-7	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999997527344676	WITHOUT_CLASSIFICATION	2.472655323733483E-7	TEST
// hash	WITHOUT_CLASSIFICATION	0.9999939214787267	WITHOUT_CLASSIFICATION	6.078521273249933E-6	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999789629135236	WITHOUT_CLASSIFICATION	2.1037086476468173E-5	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999789498489756	WITHOUT_CLASSIFICATION	2.105015102435869E-5	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999997429785281	WITHOUT_CLASSIFICATION	2.570214719226389E-7	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999994875393682	WITHOUT_CLASSIFICATION	5.124606318190868E-7	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999988216611784	WITHOUT_CLASSIFICATION	1.1783388216387547E-6	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999992751209326	WITHOUT_CLASSIFICATION	7.248790674122262E-7	TEST
//Octal	WITHOUT_CLASSIFICATION	0.999974829433713	WITHOUT_CLASSIFICATION	2.5170566287038127E-5	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999998667249799	WITHOUT_CLASSIFICATION	1.3327502007532196E-7	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999990360947835	WITHOUT_CLASSIFICATION	9.639052164959914E-7	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999982970391101	WITHOUT_CLASSIFICATION	1.7029608897614243E-6	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999994199338919	WITHOUT_CLASSIFICATION	5.800661081214024E-7	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999974162125095	WITHOUT_CLASSIFICATION	2.5837874904229768E-6	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999997385231448	WITHOUT_CLASSIFICATION	2.614768551899292E-7	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999992007040743	WITHOUT_CLASSIFICATION	7.992959256009474E-7	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999981180528097	WITHOUT_CLASSIFICATION	1.8819471902734455E-6	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999996974996447	WITHOUT_CLASSIFICATION	3.025003553804122E-7	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999991205375545	WITHOUT_CLASSIFICATION	8.794624454504106E-7	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.999999937036077	WITHOUT_CLASSIFICATION	6.296392295656083E-8	TEST
// space	WITHOUT_CLASSIFICATION	0.9999995222538195	WITHOUT_CLASSIFICATION	4.777461805143284E-7	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999565171310967	WITHOUT_CLASSIFICATION	4.3482868903349135E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999998360619733	WITHOUT_CLASSIFICATION	1.6393802677189124E-7	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999999672668102	WITHOUT_CLASSIFICATION	3.273318989879944E-8	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.999999937036077	WITHOUT_CLASSIFICATION	6.296392295656083E-8	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999321651308392	WITHOUT_CLASSIFICATION	6.783486916073874E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999321651308392	WITHOUT_CLASSIFICATION	6.783486916073874E-5	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999901999709581	WITHOUT_CLASSIFICATION	9.800029041902515E-6	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999997410657324	WITHOUT_CLASSIFICATION	2.589342676165725E-7	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999999716231583	WITHOUT_CLASSIFICATION	2.837684153160345E-8	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999990171761353	WITHOUT_CLASSIFICATION	9.828238647843693E-7	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999996210725851	WITHOUT_CLASSIFICATION	3.7892741484696646E-7	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999999058815507	WITHOUT_CLASSIFICATION	9.411844919046128E-8	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999994182482581	WITHOUT_CLASSIFICATION	5.817517419420311E-7	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9641635709765313	WITHOUT_CLASSIFICATION	0.03583642902346876	TEST
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999998299759899	WITHOUT_CLASSIFICATION	1.7002401007039095E-7	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.999999053770049	WITHOUT_CLASSIFICATION	9.462299510094101E-7	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999987422143074	WITHOUT_CLASSIFICATION	1.257785692648818E-6	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.999999970942644	WITHOUT_CLASSIFICATION	2.90573559677063E-8	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999976252600241	WITHOUT_CLASSIFICATION	2.3747399759181945E-6	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999968283772155	WITHOUT_CLASSIFICATION	3.1716227844474747E-6	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999982077762126	WITHOUT_CLASSIFICATION	1.7922237872968005E-6	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.999998371962221	WITHOUT_CLASSIFICATION	1.628037779058431E-6	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.999999509990327	WITHOUT_CLASSIFICATION	4.900096728826617E-7	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999597305300155	WITHOUT_CLASSIFICATION	4.026946998444844E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999597305300155	WITHOUT_CLASSIFICATION	4.026946998444844E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999597305300155	WITHOUT_CLASSIFICATION	4.026946998444844E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999597305300155	WITHOUT_CLASSIFICATION	4.026946998444844E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999597305300155	WITHOUT_CLASSIFICATION	4.026946998444844E-5	TEST
// line 329	WITHOUT_CLASSIFICATION	0.99999811806975	WITHOUT_CLASSIFICATION	1.881930249963053E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999968712859784	WITHOUT_CLASSIFICATION	3.12871402154678E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999904521916166	WITHOUT_CLASSIFICATION	9.547808383375266E-6	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999087317857	WITHOUT_CLASSIFICATION	9.126821431581367E-8	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999973126590845	WITHOUT_CLASSIFICATION	2.6873409155614964E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999518761259	WITHOUT_CLASSIFICATION	4.812387423777544E-8	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999991492458994	WITHOUT_CLASSIFICATION	8.507541006596971E-7	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999995789067653	WITHOUT_CLASSIFICATION	4.210932346625663E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999997119918417	WITHOUT_CLASSIFICATION	2.880081583063145E-7	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999992868881119	WITHOUT_CLASSIFICATION	7.13111888132814E-7	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999991477625018	WITHOUT_CLASSIFICATION	8.522374982402614E-7	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999983288406598	WITHOUT_CLASSIFICATION	1.67115934017376E-6	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999989296451411	WITHOUT_CLASSIFICATION	1.0703548588352491E-6	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999988991715325	WITHOUT_CLASSIFICATION	1.1008284674547698E-6	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999989323739883	WITHOUT_CLASSIFICATION	1.0676260117068928E-6	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999984910478734	WITHOUT_CLASSIFICATION	1.508952126639264E-6	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999986032093451	WITHOUT_CLASSIFICATION	1.3967906549256803E-6	TEST
// line 341	WITHOUT_CLASSIFICATION	0.999998931664537	WITHOUT_CLASSIFICATION	1.0683354630191684E-6	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999987115842847	WITHOUT_CLASSIFICATION	1.2884157152957546E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999989419892058	WITHOUT_CLASSIFICATION	1.0580107941114111E-6	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999986632381442	WITHOUT_CLASSIFICATION	1.3367618557291493E-6	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999987858917064	WITHOUT_CLASSIFICATION	1.214108293506767E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999985632440006	WITHOUT_CLASSIFICATION	1.4367559994688544E-6	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999986793094161	WITHOUT_CLASSIFICATION	1.3206905839340486E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999984132795224	WITHOUT_CLASSIFICATION	1.5867204775600983E-6	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999992028097913	WITHOUT_CLASSIFICATION	7.971902087635194E-7	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999993948699732	WITHOUT_CLASSIFICATION	6.051300267814167E-7	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999993690932434	WITHOUT_CLASSIFICATION	6.309067565269793E-7	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999993964103031	WITHOUT_CLASSIFICATION	6.035896970015057E-7	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999989469088952	WITHOUT_CLASSIFICATION	1.05309110477088E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.999999147804132	WITHOUT_CLASSIFICATION	8.521958678558133E-7	TEST
// line 434	WITHOUT_CLASSIFICATION	0.99999901043722	WITHOUT_CLASSIFICATION	9.895627801271954E-7	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999989902696867	WITHOUT_CLASSIFICATION	1.0097303132387998E-6	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999992688675778	WITHOUT_CLASSIFICATION	7.311324222160465E-7	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999992005547894	WITHOUT_CLASSIFICATION	7.994452106328901E-7	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999993214472218	WITHOUT_CLASSIFICATION	6.785527780608489E-7	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999992708599645	WITHOUT_CLASSIFICATION	7.291400355259824E-7	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999993113275746	WITHOUT_CLASSIFICATION	6.886724254819536E-7	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999992264280759	WITHOUT_CLASSIFICATION	7.73571924082685E-7	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999992146661725	WITHOUT_CLASSIFICATION	7.853338275617931E-7	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999992055996249	WITHOUT_CLASSIFICATION	7.944003751526433E-7	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999992315779337	WITHOUT_CLASSIFICATION	7.684220662711508E-7	TEST
// line 492	WITHOUT_CLASSIFICATION	0.999999061466353	WITHOUT_CLASSIFICATION	9.385336470370671E-7	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999991301351219	WITHOUT_CLASSIFICATION	8.698648781941225E-7	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999992909499507	WITHOUT_CLASSIFICATION	7.090500493036944E-7	TEST
// line 504	WITHOUT_CLASSIFICATION	0.999999149391938	WITHOUT_CLASSIFICATION	8.506080619667968E-7	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999991961828933	WITHOUT_CLASSIFICATION	8.038171066365935E-7	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999993404029669	WITHOUT_CLASSIFICATION	6.595970331280569E-7	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999993059018588	WITHOUT_CLASSIFICATION	6.940981411464959E-7	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999991358847043	WITHOUT_CLASSIFICATION	8.641152956279299E-7	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999904521916166	WITHOUT_CLASSIFICATION	9.547808383375266E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999990403439089	WITHOUT_CLASSIFICATION	9.596560912037815E-7	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999991669133259	WITHOUT_CLASSIFICATION	8.330866740626415E-7	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999990047866755	WITHOUT_CLASSIFICATION	9.952133245230137E-7	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999992794039506	WITHOUT_CLASSIFICATION	7.205960493548348E-7	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999992773051494	WITHOUT_CLASSIFICATION	7.226948507646368E-7	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999991834713338	WITHOUT_CLASSIFICATION	8.165286662102022E-7	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999990362456599	WITHOUT_CLASSIFICATION	9.637543401074033E-7	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999992771434663	WITHOUT_CLASSIFICATION	7.228565336410958E-7	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999992110020395	WITHOUT_CLASSIFICATION	7.889979605280951E-7	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999992803290016	WITHOUT_CLASSIFICATION	7.196709982536797E-7	TEST
// line 578	WITHOUT_CLASSIFICATION	0.999999251067872	WITHOUT_CLASSIFICATION	7.489321279662393E-7	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999992427141096	WITHOUT_CLASSIFICATION	7.572858903657261E-7	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999992086415447	WITHOUT_CLASSIFICATION	7.913584553271532E-7	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999991453903021	WITHOUT_CLASSIFICATION	8.546096980011668E-7	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999991935407749	WITHOUT_CLASSIFICATION	8.064592250795572E-7	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999993374478235	WITHOUT_CLASSIFICATION	6.625521764473859E-7	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999991441056509	WITHOUT_CLASSIFICATION	8.558943491658E-7	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999993599400502	WITHOUT_CLASSIFICATION	6.400599497342697E-7	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999990198847633	WITHOUT_CLASSIFICATION	9.80115236793836E-7	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999989347262965	WITHOUT_CLASSIFICATION	1.0652737034577728E-6	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999990009877419	WITHOUT_CLASSIFICATION	9.990122581498212E-7	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999992506755059	WITHOUT_CLASSIFICATION	7.49324494090147E-7	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999992760570509	WITHOUT_CLASSIFICATION	7.239429491925791E-7	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999991466853734	WITHOUT_CLASSIFICATION	8.533146266700683E-7	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999992837288826	WITHOUT_CLASSIFICATION	7.162711174028746E-7	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999992292397095	WITHOUT_CLASSIFICATION	7.707602905419577E-7	TEST
// line 672	WITHOUT_CLASSIFICATION	0.99999918862042	WITHOUT_CLASSIFICATION	8.113795800391225E-7	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999991686988553	WITHOUT_CLASSIFICATION	8.313011446855932E-7	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999993364091934	WITHOUT_CLASSIFICATION	6.635908065508724E-7	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999993668047511	WITHOUT_CLASSIFICATION	6.331952489943264E-7	TEST
// line 720	WITHOUT_CLASSIFICATION	0.999998950312893	WITHOUT_CLASSIFICATION	1.0496871069249662E-6	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999991505587593	WITHOUT_CLASSIFICATION	8.494412405816636E-7	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999989353276495	WITHOUT_CLASSIFICATION	1.0646723504598216E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999988550648797	WITHOUT_CLASSIFICATION	1.1449351202440134E-6	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999990368394465	WITHOUT_CLASSIFICATION	9.63160553561724E-7	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999989401687404	WITHOUT_CLASSIFICATION	1.0598312596856742E-6	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999994009893278	WITHOUT_CLASSIFICATION	5.990106722124872E-7	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999992903099055	WITHOUT_CLASSIFICATION	7.096900944046888E-7	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999992798811635	WITHOUT_CLASSIFICATION	7.201188364393577E-7	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999991802474613	WITHOUT_CLASSIFICATION	8.19752538765006E-7	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999990259714885	WITHOUT_CLASSIFICATION	9.740285114133803E-7	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999992025934411	WITHOUT_CLASSIFICATION	7.974065588854063E-7	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999991434785128	WITHOUT_CLASSIFICATION	8.565214872078478E-7	TEST
// line 775	WITHOUT_CLASSIFICATION	0.999999279412368	WITHOUT_CLASSIFICATION	7.205876320622858E-7	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999991059709216	WITHOUT_CLASSIFICATION	8.94029078357771E-7	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999992177281599	WITHOUT_CLASSIFICATION	7.822718400141968E-7	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999993119109691	WITHOUT_CLASSIFICATION	6.880890309459924E-7	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999991848162809	WITHOUT_CLASSIFICATION	8.151837191175312E-7	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999991734770686	WITHOUT_CLASSIFICATION	8.265229314800029E-7	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999985364502946	WITHOUT_CLASSIFICATION	1.4635497054472347E-6	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999990578016668	WITHOUT_CLASSIFICATION	9.421983331800942E-7	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999989291716878	WITHOUT_CLASSIFICATION	1.070828312243889E-6	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999993311068903	WITHOUT_CLASSIFICATION	6.688931098214093E-7	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999993139553972	WITHOUT_CLASSIFICATION	6.86044602744745E-7	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999991930308931	WITHOUT_CLASSIFICATION	8.069691067958351E-7	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999990388453676	WITHOUT_CLASSIFICATION	9.611546324342594E-7	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999987730712128	WITHOUT_CLASSIFICATION	1.2269287872445458E-6	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999988878473492	WITHOUT_CLASSIFICATION	1.1121526508026053E-6	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999989212705572	WITHOUT_CLASSIFICATION	1.0787294426842154E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999987805651821	WITHOUT_CLASSIFICATION	1.21943481796524E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999990634258538	WITHOUT_CLASSIFICATION	9.365741462019967E-7	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999991772799494	WITHOUT_CLASSIFICATION	8.227200505651272E-7	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999991116824231	WITHOUT_CLASSIFICATION	8.883175769768304E-7	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999992088277788	WITHOUT_CLASSIFICATION	7.911722212908976E-7	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999993275592227	WITHOUT_CLASSIFICATION	6.724407772478203E-7	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999991929441456	WITHOUT_CLASSIFICATION	8.07055854407618E-7	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999993429617705	WITHOUT_CLASSIFICATION	6.570382295739696E-7	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999992303171298	WITHOUT_CLASSIFICATION	7.696828701409477E-7	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999991297504974	WITHOUT_CLASSIFICATION	8.702495026216648E-7	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999988925594443	WITHOUT_CLASSIFICATION	1.107440555753817E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999987884333528	WITHOUT_CLASSIFICATION	1.2115666471604098E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999991236016061	WITHOUT_CLASSIFICATION	8.763983939579679E-7	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999990950876763	WITHOUT_CLASSIFICATION	9.049123237408592E-7	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999984739028539	WITHOUT_CLASSIFICATION	1.5260971460782651E-6	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999990711983658	WITHOUT_CLASSIFICATION	9.288016340758612E-7	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999992943539454	WITHOUT_CLASSIFICATION	7.056460546128271E-7	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999987747105208	WITHOUT_CLASSIFICATION	1.225289479224308E-6	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999986579962853	WITHOUT_CLASSIFICATION	1.3420037147638382E-6	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999990084807023	WITHOUT_CLASSIFICATION	9.915192977219249E-7	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999986644635804	WITHOUT_CLASSIFICATION	1.3355364196006705E-6	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999988612228413	WITHOUT_CLASSIFICATION	1.1387771586652312E-6	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999990287558664	WITHOUT_CLASSIFICATION	9.71244133583725E-7	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999991312065507	WITHOUT_CLASSIFICATION	8.687934493596888E-7	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999990876950068	WITHOUT_CLASSIFICATION	9.123049931058481E-7	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999991996907099	WITHOUT_CLASSIFICATION	8.003092900565704E-7	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999990449452165	WITHOUT_CLASSIFICATION	9.550547835032294E-7	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999991627101613	WITHOUT_CLASSIFICATION	8.372898386749031E-7	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999991983283225	WITHOUT_CLASSIFICATION	8.01671677430295E-7	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999990508679765	WITHOUT_CLASSIFICATION	9.491320236061481E-7	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999991275417138	WITHOUT_CLASSIFICATION	8.724582862868483E-7	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999989579404591	WITHOUT_CLASSIFICATION	1.042059540920026E-6	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999990858816253	WITHOUT_CLASSIFICATION	9.141183746793578E-7	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999991036413883	WITHOUT_CLASSIFICATION	8.963586116028951E-7	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999991504697144	WITHOUT_CLASSIFICATION	8.495302856368702E-7	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999993212346684	WITHOUT_CLASSIFICATION	6.787653316531083E-7	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999993153092075	WITHOUT_CLASSIFICATION	6.846907924530074E-7	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999991942042304	WITHOUT_CLASSIFICATION	8.057957695807288E-7	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999993591326005	WITHOUT_CLASSIFICATION	6.408673996090743E-7	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999990447351194	WITHOUT_CLASSIFICATION	9.552648806258507E-7	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999988478811342	WITHOUT_CLASSIFICATION	1.1521188657182548E-6	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999990185614487	WITHOUT_CLASSIFICATION	9.814385513135646E-7	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999993840222949	WITHOUT_CLASSIFICATION	6.159777050706672E-7	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999993150084941	WITHOUT_CLASSIFICATION	6.849915058511667E-7	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999993189027465	WITHOUT_CLASSIFICATION	6.810972535707112E-7	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.999999274911477	WITHOUT_CLASSIFICATION	7.250885231176322E-7	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999994566860118	WITHOUT_CLASSIFICATION	5.433139882560922E-7	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999991773085288	WITHOUT_CLASSIFICATION	8.226914711285677E-7	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999994041724501	WITHOUT_CLASSIFICATION	5.958275497866718E-7	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999993264934905	WITHOUT_CLASSIFICATION	6.735065094347771E-7	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999991272393493	WITHOUT_CLASSIFICATION	8.727606508003407E-7	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999991669277642	WITHOUT_CLASSIFICATION	8.330722357523306E-7	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.99999929445393	WITHOUT_CLASSIFICATION	7.055460699344837E-7	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999993492630492	WITHOUT_CLASSIFICATION	6.507369507229818E-7	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999990389972057	WITHOUT_CLASSIFICATION	9.610027943139343E-7	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999994150603565	WITHOUT_CLASSIFICATION	5.849396434226516E-7	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999994191679488	WITHOUT_CLASSIFICATION	5.808320512945461E-7	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999992111048903	WITHOUT_CLASSIFICATION	7.888951098095968E-7	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999994398186013	WITHOUT_CLASSIFICATION	5.601813987649462E-7	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999993573752727	WITHOUT_CLASSIFICATION	6.426247272556832E-7	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999991309486864	WITHOUT_CLASSIFICATION	8.690513134751419E-7	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999992122420115	WITHOUT_CLASSIFICATION	7.877579884196781E-7	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999992461679917	WITHOUT_CLASSIFICATION	7.538320082916054E-7	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999992487487378	WITHOUT_CLASSIFICATION	7.51251262166724E-7	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999993534672701	WITHOUT_CLASSIFICATION	6.465327299047248E-7	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999994468688141	WITHOUT_CLASSIFICATION	5.531311859280841E-7	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999994479464421	WITHOUT_CLASSIFICATION	5.520535578381422E-7	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999994111712287	WITHOUT_CLASSIFICATION	5.888287712581421E-7	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999994393419991	WITHOUT_CLASSIFICATION	5.606580008815898E-7	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999994654378732	WITHOUT_CLASSIFICATION	5.345621267052415E-7	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999994159234079	WITHOUT_CLASSIFICATION	5.840765920694738E-7	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999994230224051	WITHOUT_CLASSIFICATION	5.769775947834672E-7	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999993434262648	WITHOUT_CLASSIFICATION	6.565737351317046E-7	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999991404849866	WITHOUT_CLASSIFICATION	8.595150132741474E-7	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.999999170160491	WITHOUT_CLASSIFICATION	8.298395089439876E-7	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.999999215771114	WITHOUT_CLASSIFICATION	7.842288860788258E-7	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999992851051421	WITHOUT_CLASSIFICATION	7.14894857795734E-7	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999993237191714	WITHOUT_CLASSIFICATION	6.76280828632437E-7	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999991830887868	WITHOUT_CLASSIFICATION	8.16911213170558E-7	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999990347741213	WITHOUT_CLASSIFICATION	9.6522587869059E-7	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999990842331498	WITHOUT_CLASSIFICATION	9.157668501981169E-7	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999993485245389	WITHOUT_CLASSIFICATION	6.5147546115588E-7	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999993509123087	WITHOUT_CLASSIFICATION	6.490876912696992E-7	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999991034145697	WITHOUT_CLASSIFICATION	8.965854302418824E-7	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999992659936703	WITHOUT_CLASSIFICATION	7.340063296491014E-7	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999991766422104	WITHOUT_CLASSIFICATION	8.23357789623828E-7	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999990244979888	WITHOUT_CLASSIFICATION	9.755020110825205E-7	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999990597941562	WITHOUT_CLASSIFICATION	9.402058436983683E-7	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999991851342197	WITHOUT_CLASSIFICATION	8.14865780339431E-7	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999991586222733	WITHOUT_CLASSIFICATION	8.413777265952611E-7	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999989407686078	WITHOUT_CLASSIFICATION	1.0592313922370304E-6	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999989789418898	WITHOUT_CLASSIFICATION	1.02105811015524E-6	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999991876416662	WITHOUT_CLASSIFICATION	8.123583339486477E-7	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999992262100447	WITHOUT_CLASSIFICATION	7.737899553404816E-7	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.999998866295166	WITHOUT_CLASSIFICATION	1.1337048340514465E-6	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999990017743023	WITHOUT_CLASSIFICATION	9.982256977579394E-7	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999992239795465	WITHOUT_CLASSIFICATION	7.760204535243459E-7	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999991734843775	WITHOUT_CLASSIFICATION	8.265156225008042E-7	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999991294783511	WITHOUT_CLASSIFICATION	8.705216488979026E-7	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.999999183374734	WITHOUT_CLASSIFICATION	8.166252659701608E-7	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999992362491389	WITHOUT_CLASSIFICATION	7.637508612133139E-7	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999991556215277	WITHOUT_CLASSIFICATION	8.443784723986611E-7	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999991848045133	WITHOUT_CLASSIFICATION	8.151954867890714E-7	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999989888951683	WITHOUT_CLASSIFICATION	1.0111048317051507E-6	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999994356527999	WITHOUT_CLASSIFICATION	5.643472000264961E-7	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999992106911044	WITHOUT_CLASSIFICATION	7.893088956514912E-7	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999992168834265	WITHOUT_CLASSIFICATION	7.831165734422154E-7	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999993310731747	WITHOUT_CLASSIFICATION	6.689268253592442E-7	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999992009210901	WITHOUT_CLASSIFICATION	7.990789098689029E-7	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999992467555459	WITHOUT_CLASSIFICATION	7.532444540811145E-7	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999994651552293	WITHOUT_CLASSIFICATION	5.348447706507102E-7	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999993501251443	WITHOUT_CLASSIFICATION	6.49874855691918E-7	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999994490373256	WITHOUT_CLASSIFICATION	5.509626743204853E-7	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999993882366969	WITHOUT_CLASSIFICATION	6.11763303044477E-7	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999994314839107	WITHOUT_CLASSIFICATION	5.685160892901232E-7	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999992931946728	WITHOUT_CLASSIFICATION	7.068053270228802E-7	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999994042075578	WITHOUT_CLASSIFICATION	5.957924421419438E-7	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999993759196354	WITHOUT_CLASSIFICATION	6.240803647203112E-7	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999993673236983	WITHOUT_CLASSIFICATION	6.326763016364775E-7	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999992316826614	WITHOUT_CLASSIFICATION	7.683173385761559E-7	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999993999761472	WITHOUT_CLASSIFICATION	6.000238529479333E-7	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999992248735852	WITHOUT_CLASSIFICATION	7.751264148344237E-7	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999994404285965	WITHOUT_CLASSIFICATION	5.595714034533775E-7	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.999999228920442	WITHOUT_CLASSIFICATION	7.710795579470875E-7	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999993491026906	WITHOUT_CLASSIFICATION	6.508973094179691E-7	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999992273949535	WITHOUT_CLASSIFICATION	7.726050465180957E-7	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999994461309872	WITHOUT_CLASSIFICATION	5.538690128166789E-7	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999994461596935	WITHOUT_CLASSIFICATION	5.538403065835887E-7	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999994182769857	WITHOUT_CLASSIFICATION	5.817230143701119E-7	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999994604903764	WITHOUT_CLASSIFICATION	5.395096235923282E-7	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999994567508657	WITHOUT_CLASSIFICATION	5.432491343772568E-7	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999994488688454	WITHOUT_CLASSIFICATION	5.511311546156086E-7	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999994197223968	WITHOUT_CLASSIFICATION	5.802776031789208E-7	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999993788964708	WITHOUT_CLASSIFICATION	6.211035290755949E-7	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999993421053391	WITHOUT_CLASSIFICATION	6.578946608112514E-7	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999993012777995	WITHOUT_CLASSIFICATION	6.987222004708256E-7	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.999999246729801	WITHOUT_CLASSIFICATION	7.53270198997541E-7	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999991104975382	WITHOUT_CLASSIFICATION	8.895024617414154E-7	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999993191790053	WITHOUT_CLASSIFICATION	6.80820994639915E-7	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999991780069799	WITHOUT_CLASSIFICATION	8.219930200657661E-7	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999991073428516	WITHOUT_CLASSIFICATION	8.926571484854336E-7	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.999999173696964	WITHOUT_CLASSIFICATION	8.263030360650366E-7	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999994290599271	WITHOUT_CLASSIFICATION	5.70940072836993E-7	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999994198706267	WITHOUT_CLASSIFICATION	5.801293732679198E-7	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999993655489211	WITHOUT_CLASSIFICATION	6.344510789125755E-7	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999994385550158	WITHOUT_CLASSIFICATION	5.61444984187631E-7	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.999999410165058	WITHOUT_CLASSIFICATION	5.898349420051677E-7	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999994183376729	WITHOUT_CLASSIFICATION	5.816623270876048E-7	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999993707446079	WITHOUT_CLASSIFICATION	6.292553922017534E-7	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999994445032306	WITHOUT_CLASSIFICATION	5.554967692507161E-7	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999994098991585	WITHOUT_CLASSIFICATION	5.901008414602285E-7	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999993647033065	WITHOUT_CLASSIFICATION	6.352966933954921E-7	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999993447975585	WITHOUT_CLASSIFICATION	6.552024415898003E-7	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999992618051459	WITHOUT_CLASSIFICATION	7.381948540486597E-7	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.999999361887976	WITHOUT_CLASSIFICATION	6.381120238866233E-7	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999992274304016	WITHOUT_CLASSIFICATION	7.725695983649633E-7	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999993505127949	WITHOUT_CLASSIFICATION	6.494872050836796E-7	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999994597353157	WITHOUT_CLASSIFICATION	5.402646842058267E-7	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999993744021166	WITHOUT_CLASSIFICATION	6.255978834959259E-7	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999994472370827	WITHOUT_CLASSIFICATION	5.527629172900801E-7	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999993879308773	WITHOUT_CLASSIFICATION	6.120691226786749E-7	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999993425621236	WITHOUT_CLASSIFICATION	6.57437876367575E-7	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.999999446897838	WITHOUT_CLASSIFICATION	5.531021620284933E-7	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999994034490457	WITHOUT_CLASSIFICATION	5.96550954260634E-7	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999992122394603	WITHOUT_CLASSIFICATION	7.877605397036493E-7	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999993865917877	WITHOUT_CLASSIFICATION	6.134082124662578E-7	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999993755373987	WITHOUT_CLASSIFICATION	6.244626013629716E-7	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999992890425138	WITHOUT_CLASSIFICATION	7.109574861713899E-7	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999976882469437	WITHOUT_CLASSIFICATION	2.3117530563089405E-6	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9997774517295356	WITHOUT_CLASSIFICATION	2.225482704644513E-4	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999384745120825	WITHOUT_CLASSIFICATION	6.152548791751693E-5	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999577984868557	WITHOUT_CLASSIFICATION	4.2201513144140337E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999909265678529	WITHOUT_CLASSIFICATION	9.0734321470527E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.999995866686586	WITHOUT_CLASSIFICATION	4.133313413980163E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999907627542409	WITHOUT_CLASSIFICATION	9.237245759072813E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999914223693367	WITHOUT_CLASSIFICATION	8.577630663349981E-6	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999878712558563	WITHOUT_CLASSIFICATION	1.2128744143796535E-5	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999860071255302	WITHOUT_CLASSIFICATION	1.399287446978168E-5	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999993348249892	WITHOUT_CLASSIFICATION	6.651750108258779E-7	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999989580741001	WITHOUT_CLASSIFICATION	1.0419258998382638E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999944452370447	WITHOUT_CLASSIFICATION	5.554762955266564E-6	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999090760516792	WITHOUT_CLASSIFICATION	9.092394832076616E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.999992722685302	WITHOUT_CLASSIFICATION	7.277314698033456E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997974574639921	WITHOUT_CLASSIFICATION	2.025425360079891E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999211946890662	WITHOUT_CLASSIFICATION	7.880531093379114E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999630151059841	WITHOUT_CLASSIFICATION	3.698489401596953E-5	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999109752448	WITHOUT_CLASSIFICATION	8.902475529783827E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999529977863	WITHOUT_CLASSIFICATION	4.700221372073535E-8	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999970559373258	WITHOUT_CLASSIFICATION	2.9440626741799376E-6	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999990674751864	WITHOUT_CLASSIFICATION	9.325248135633226E-7	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999997078898417	WITHOUT_CLASSIFICATION	2.921101583482001E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999194025894	WITHOUT_CLASSIFICATION	8.059741067819267E-8	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999194025894	WITHOUT_CLASSIFICATION	8.059741067819267E-8	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999918809978151	WITHOUT_CLASSIFICATION	8.119002184962607E-6	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999834224640598	WITHOUT_CLASSIFICATION	1.657753594023741E-5	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.99999639360107	WITHOUT_CLASSIFICATION	3.6063989300549174E-6	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999996501855074	WITHOUT_CLASSIFICATION	3.49814492508404E-7	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999998655657333	WITHOUT_CLASSIFICATION	1.3443426675176451E-7	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999997632619514	WITHOUT_CLASSIFICATION	2.3673804862920617E-7	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999999675183554	WITHOUT_CLASSIFICATION	3.248164466213343E-8	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999986143628199	WITHOUT_CLASSIFICATION	1.385637180186285E-6	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999997213598353	WITHOUT_CLASSIFICATION	2.7864016474762153E-7	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999993835630155	WITHOUT_CLASSIFICATION	6.16436984435596E-7	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999936399083212	WITHOUT_CLASSIFICATION	6.360091678780808E-6	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999986172868797	WITHOUT_CLASSIFICATION	1.382713120343411E-6	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999999970895188	WITHOUT_CLASSIFICATION	2.9104811472992884E-9	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999948364286042	WITHOUT_CLASSIFICATION	5.1635713957755236E-6	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999957256252222	WITHOUT_CLASSIFICATION	4.274374777818593E-6	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999975745939723	WITHOUT_CLASSIFICATION	2.4254060276991593E-6	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999993564368358	WITHOUT_CLASSIFICATION	6.43563164188936E-7	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999979655442547	WITHOUT_CLASSIFICATION	2.034455745351865E-6	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999999784804195	WITHOUT_CLASSIFICATION	2.1519580421705972E-8	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999981167548931	WITHOUT_CLASSIFICATION	1.8832451068391904E-6	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.999999996877129	WITHOUT_CLASSIFICATION	3.12287087063291E-9	TEST
// Node	WITHOUT_CLASSIFICATION	0.999998422709822	WITHOUT_CLASSIFICATION	1.5772901779827555E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9788852700657565	WITHOUT_CLASSIFICATION	0.021114729934243532	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999994402665525	WITHOUT_CLASSIFICATION	5.597334474452563E-7	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9788852700657565	WITHOUT_CLASSIFICATION	0.021114729934243532	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999992424345658	WITHOUT_CLASSIFICATION	7.575654340962057E-7	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999993795843984	WITHOUT_CLASSIFICATION	6.204156015125745E-7	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999968871815552	WITHOUT_CLASSIFICATION	3.1128184448334983E-6	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999929474653211	WITHOUT_CLASSIFICATION	7.052534678904254E-6	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999999253910835	WITHOUT_CLASSIFICATION	7.460891646070732E-8	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999980858582171	WITHOUT_CLASSIFICATION	1.9141417827609767E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999980858582171	WITHOUT_CLASSIFICATION	1.9141417827609767E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999980858582171	WITHOUT_CLASSIFICATION	1.9141417827609767E-6	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999975932847183	WITHOUT_CLASSIFICATION	2.4067152816359693E-6	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999876990545931	WITHOUT_CLASSIFICATION	1.2300945406999012E-5	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999997460642142	WITHOUT_CLASSIFICATION	2.5393578584173276E-7	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999577613243984	WITHOUT_CLASSIFICATION	4.223867560165388E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999577613243984	WITHOUT_CLASSIFICATION	4.223867560165388E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999577613243984	WITHOUT_CLASSIFICATION	4.223867560165388E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999577613243984	WITHOUT_CLASSIFICATION	4.223867560165388E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999577613243984	WITHOUT_CLASSIFICATION	4.223867560165388E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999577613243984	WITHOUT_CLASSIFICATION	4.223867560165388E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999823538669981	WITHOUT_CLASSIFICATION	1.7646133001869128E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999823538669981	WITHOUT_CLASSIFICATION	1.7646133001869128E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999823538669981	WITHOUT_CLASSIFICATION	1.7646133001869128E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999823538669981	WITHOUT_CLASSIFICATION	1.7646133001869128E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999823538669981	WITHOUT_CLASSIFICATION	1.7646133001869128E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999971497991424	WITHOUT_CLASSIFICATION	2.850200857591214E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999971497991424	WITHOUT_CLASSIFICATION	2.850200857591214E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999971497991424	WITHOUT_CLASSIFICATION	2.850200857591214E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999971497991424	WITHOUT_CLASSIFICATION	2.850200857591214E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.999971497991424	WITHOUT_CLASSIFICATION	2.850200857591214E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999826661736683	WITHOUT_CLASSIFICATION	1.7333826331746543E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999826661736683	WITHOUT_CLASSIFICATION	1.7333826331746543E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999826661736683	WITHOUT_CLASSIFICATION	1.7333826331746543E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999826661736683	WITHOUT_CLASSIFICATION	1.7333826331746543E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999826661736683	WITHOUT_CLASSIFICATION	1.7333826331746543E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999826661736683	WITHOUT_CLASSIFICATION	1.7333826331746543E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999894558764526	WITHOUT_CLASSIFICATION	1.0544123547342134E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999894558764526	WITHOUT_CLASSIFICATION	1.0544123547342134E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999894558764526	WITHOUT_CLASSIFICATION	1.0544123547342134E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999894558764526	WITHOUT_CLASSIFICATION	1.0544123547342134E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999894558764526	WITHOUT_CLASSIFICATION	1.0544123547342134E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999878762430497	WITHOUT_CLASSIFICATION	1.21237569503004E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999878762430497	WITHOUT_CLASSIFICATION	1.21237569503004E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999878762430497	WITHOUT_CLASSIFICATION	1.21237569503004E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999878762430497	WITHOUT_CLASSIFICATION	1.21237569503004E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999878762430497	WITHOUT_CLASSIFICATION	1.21237569503004E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999904521916166	WITHOUT_CLASSIFICATION	9.547808383375266E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999904521916166	WITHOUT_CLASSIFICATION	9.547808383375266E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999904521916166	WITHOUT_CLASSIFICATION	9.547808383375266E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999904521916166	WITHOUT_CLASSIFICATION	9.547808383375266E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999904521916166	WITHOUT_CLASSIFICATION	9.547808383375266E-6	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999087317857	WITHOUT_CLASSIFICATION	9.126821431581367E-8	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999518761259	WITHOUT_CLASSIFICATION	4.812387423777544E-8	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999991492458994	WITHOUT_CLASSIFICATION	8.507541006596971E-7	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999995789067653	WITHOUT_CLASSIFICATION	4.210932346625663E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999997119918417	WITHOUT_CLASSIFICATION	2.880081583063145E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999987146741874	WITHOUT_CLASSIFICATION	1.285325812493932E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999989419892058	WITHOUT_CLASSIFICATION	1.0580107941114111E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999984132795224	WITHOUT_CLASSIFICATION	1.5867204775600983E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999993964103031	WITHOUT_CLASSIFICATION	6.035896970015057E-7	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999989469088952	WITHOUT_CLASSIFICATION	1.05309110477088E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999988466014936	WITHOUT_CLASSIFICATION	1.153398506383119E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.999999147804132	WITHOUT_CLASSIFICATION	8.521958678558133E-7	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999989227575397	WITHOUT_CLASSIFICATION	1.0772424603258253E-6	TEST
// line 283	WITHOUT_CLASSIFICATION	0.999998723695846	WITHOUT_CLASSIFICATION	1.2763041540850637E-6	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999989338630398	WITHOUT_CLASSIFICATION	1.0661369601895127E-6	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999984690904081	WITHOUT_CLASSIFICATION	1.5309095918898153E-6	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999985245141686	WITHOUT_CLASSIFICATION	1.4754858314328853E-6	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999988936754506	WITHOUT_CLASSIFICATION	1.1063245494310073E-6	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999986725379147	WITHOUT_CLASSIFICATION	1.3274620851943206E-6	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999987133522564	WITHOUT_CLASSIFICATION	1.286647743581054E-6	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999985371754899	WITHOUT_CLASSIFICATION	1.462824510066598E-6	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999987944882716	WITHOUT_CLASSIFICATION	1.2055117284429848E-6	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999986470482897	WITHOUT_CLASSIFICATION	1.3529517104160166E-6	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999987465002687	WITHOUT_CLASSIFICATION	1.2534997313162841E-6	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999986464466984	WITHOUT_CLASSIFICATION	1.3535533016594623E-6	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999987316542673	WITHOUT_CLASSIFICATION	1.2683457326552815E-6	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999986121796542	WITHOUT_CLASSIFICATION	1.387820345682069E-6	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999983451748266	WITHOUT_CLASSIFICATION	1.6548251733742884E-6	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999986123774087	WITHOUT_CLASSIFICATION	1.3876225912812568E-6	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999989318750566	WITHOUT_CLASSIFICATION	1.0681249434365052E-6	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999988538174787	WITHOUT_CLASSIFICATION	1.1461825212844148E-6	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999990226773601	WITHOUT_CLASSIFICATION	9.77322639924031E-7	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999992859047921	WITHOUT_CLASSIFICATION	7.140952078841136E-7	TEST
// line 448	WITHOUT_CLASSIFICATION	0.999999206021448	WITHOUT_CLASSIFICATION	7.939785519004025E-7	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999992872669453	WITHOUT_CLASSIFICATION	7.127330547467249E-7	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999992293633131	WITHOUT_CLASSIFICATION	7.706366869444053E-7	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999992688310995	WITHOUT_CLASSIFICATION	7.311689005237211E-7	TEST
// line 469	WITHOUT_CLASSIFICATION	0.999999201929091	WITHOUT_CLASSIFICATION	7.980709089951208E-7	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999992514454038	WITHOUT_CLASSIFICATION	7.485545961391767E-7	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999993398354811	WITHOUT_CLASSIFICATION	6.601645189293718E-7	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999992112283552	WITHOUT_CLASSIFICATION	7.887716447729647E-7	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999991727385882	WITHOUT_CLASSIFICATION	8.272614117178637E-7	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999992130103158	WITHOUT_CLASSIFICATION	7.869896842483942E-7	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999986792541145	WITHOUT_CLASSIFICATION	1.3207458855504209E-6	TEST
// line 506	WITHOUT_CLASSIFICATION	0.999999149758199	WITHOUT_CLASSIFICATION	8.502418009847816E-7	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999990336926532	WITHOUT_CLASSIFICATION	9.663073467686351E-7	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999992862217435	WITHOUT_CLASSIFICATION	7.13778256464845E-7	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999992798340289	WITHOUT_CLASSIFICATION	7.201659711521469E-7	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999991587168001	WITHOUT_CLASSIFICATION	8.412831998877153E-7	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999991669133259	WITHOUT_CLASSIFICATION	8.330866740626415E-7	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999990047866755	WITHOUT_CLASSIFICATION	9.952133245230137E-7	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999992794039506	WITHOUT_CLASSIFICATION	7.205960493548348E-7	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999992771434663	WITHOUT_CLASSIFICATION	7.228565336410958E-7	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999993374478235	WITHOUT_CLASSIFICATION	6.625521764473859E-7	TEST
// line 672	WITHOUT_CLASSIFICATION	0.99999918862042	WITHOUT_CLASSIFICATION	8.113795800391225E-7	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999993085466906	WITHOUT_CLASSIFICATION	6.91453309468679E-7	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999991686988553	WITHOUT_CLASSIFICATION	8.313011446855932E-7	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999991434785128	WITHOUT_CLASSIFICATION	8.565214872078478E-7	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999991059709216	WITHOUT_CLASSIFICATION	8.94029078357771E-7	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999992531864811	WITHOUT_CLASSIFICATION	7.468135190116591E-7	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999992177281599	WITHOUT_CLASSIFICATION	7.822718400141968E-7	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999993119109691	WITHOUT_CLASSIFICATION	6.880890309459924E-7	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999990251051495	WITHOUT_CLASSIFICATION	9.748948504798678E-7	TEST
// line 549	WITHOUT_CLASSIFICATION	0.999999185031858	WITHOUT_CLASSIFICATION	8.149681418992441E-7	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999991528155101	WITHOUT_CLASSIFICATION	8.471844898576434E-7	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999992055629248	WITHOUT_CLASSIFICATION	7.944370752737738E-7	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999993993288621	WITHOUT_CLASSIFICATION	6.006711379055469E-7	TEST
// line 571	WITHOUT_CLASSIFICATION	0.999999406774062	WITHOUT_CLASSIFICATION	5.932259381010414E-7	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999992910377604	WITHOUT_CLASSIFICATION	7.089622394701122E-7	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999992142700911	WITHOUT_CLASSIFICATION	7.857299088969321E-7	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999992307261709	WITHOUT_CLASSIFICATION	7.692738290840729E-7	TEST
// line 589	WITHOUT_CLASSIFICATION	0.999999138243811	WITHOUT_CLASSIFICATION	8.617561890228397E-7	TEST
// line 592	WITHOUT_CLASSIFICATION	0.999999070979524	WITHOUT_CLASSIFICATION	9.290204760370327E-7	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999991847505858	WITHOUT_CLASSIFICATION	8.152494140817058E-7	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999991389630885	WITHOUT_CLASSIFICATION	8.610369115513846E-7	TEST
// line 623	WITHOUT_CLASSIFICATION	0.999998852516179	WITHOUT_CLASSIFICATION	1.147483820934366E-6	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999991688216754	WITHOUT_CLASSIFICATION	8.311783246333505E-7	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999988839112691	WITHOUT_CLASSIFICATION	1.1160887308035897E-6	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999989883213489	WITHOUT_CLASSIFICATION	1.0116786510219502E-6	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999988907312474	WITHOUT_CLASSIFICATION	1.1092687525537646E-6	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999992144763947	WITHOUT_CLASSIFICATION	7.855236053112535E-7	TEST
// line 657	WITHOUT_CLASSIFICATION	0.999999311706742	WITHOUT_CLASSIFICATION	6.88293258072833E-7	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999993680727086	WITHOUT_CLASSIFICATION	6.319272913826921E-7	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999992395272906	WITHOUT_CLASSIFICATION	7.604727092826352E-7	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999992607722448	WITHOUT_CLASSIFICATION	7.392277553205913E-7	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999990928918381	WITHOUT_CLASSIFICATION	9.071081617985054E-7	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999992065931941	WITHOUT_CLASSIFICATION	7.934068058154273E-7	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999991714096066	WITHOUT_CLASSIFICATION	8.285903934284551E-7	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999991854526135	WITHOUT_CLASSIFICATION	8.145473866345014E-7	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999990383054083	WITHOUT_CLASSIFICATION	9.616945917515103E-7	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999991223763445	WITHOUT_CLASSIFICATION	8.776236554195966E-7	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999989908190379	WITHOUT_CLASSIFICATION	1.0091809621311008E-6	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999990396149615	WITHOUT_CLASSIFICATION	9.6038503854816E-7	TEST
// line 779	WITHOUT_CLASSIFICATION	0.999999173982527	WITHOUT_CLASSIFICATION	8.260174730784128E-7	TEST
// line 801	WITHOUT_CLASSIFICATION	0.999999214263773	WITHOUT_CLASSIFICATION	7.857362270627527E-7	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999989473070044	WITHOUT_CLASSIFICATION	1.0526929955306284E-6	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999993290197865	WITHOUT_CLASSIFICATION	6.709802134869425E-7	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999993307232927	WITHOUT_CLASSIFICATION	6.692767072092768E-7	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999990634258538	WITHOUT_CLASSIFICATION	9.365741462019967E-7	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999992209269777	WITHOUT_CLASSIFICATION	7.790730222266365E-7	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999991772799494	WITHOUT_CLASSIFICATION	8.227200505651272E-7	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999987884333528	WITHOUT_CLASSIFICATION	1.2115666471604098E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999990950876763	WITHOUT_CLASSIFICATION	9.049123237408592E-7	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999986644635804	WITHOUT_CLASSIFICATION	1.3355364196006705E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999991312065507	WITHOUT_CLASSIFICATION	8.687934493596888E-7	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999990449452165	WITHOUT_CLASSIFICATION	9.550547835032294E-7	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999989579404591	WITHOUT_CLASSIFICATION	1.042059540920026E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999993153092075	WITHOUT_CLASSIFICATION	6.846907924530074E-7	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999989332783098	WITHOUT_CLASSIFICATION	1.0667216902734877E-6	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999988350931819	WITHOUT_CLASSIFICATION	1.1649068181608126E-6	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999990573191687	WITHOUT_CLASSIFICATION	9.426808312708965E-7	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999988184630735	WITHOUT_CLASSIFICATION	1.1815369265143893E-6	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999987348932624	WITHOUT_CLASSIFICATION	1.2651067376475554E-6	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999993406959058	WITHOUT_CLASSIFICATION	6.593040942047012E-7	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999992461314019	WITHOUT_CLASSIFICATION	7.538685980225728E-7	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999990919785385	WITHOUT_CLASSIFICATION	9.08021461448884E-7	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999989210905293	WITHOUT_CLASSIFICATION	1.078909470736801E-6	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999991907748323	WITHOUT_CLASSIFICATION	8.092251675665729E-7	TEST
// line 869	WITHOUT_CLASSIFICATION	0.999999116730676	WITHOUT_CLASSIFICATION	8.832693239365817E-7	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999992408259482	WITHOUT_CLASSIFICATION	7.591740518524308E-7	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999991800440037	WITHOUT_CLASSIFICATION	8.199559964284472E-7	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999992085038449	WITHOUT_CLASSIFICATION	7.91496155081653E-7	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999989977534116	WITHOUT_CLASSIFICATION	1.002246588334464E-6	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999988420141998	WITHOUT_CLASSIFICATION	1.157985800275307E-6	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999989794408667	WITHOUT_CLASSIFICATION	1.0205591333555149E-6	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999991671254361	WITHOUT_CLASSIFICATION	8.328745638260102E-7	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999992826014846	WITHOUT_CLASSIFICATION	7.173985153157913E-7	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999990014365379	WITHOUT_CLASSIFICATION	9.985634620333291E-7	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999989211366723	WITHOUT_CLASSIFICATION	1.0788633276956004E-6	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999992796092328	WITHOUT_CLASSIFICATION	7.203907670809944E-7	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999991745963457	WITHOUT_CLASSIFICATION	8.254036543870132E-7	TEST
// line 951	WITHOUT_CLASSIFICATION	0.999999303698657	WITHOUT_CLASSIFICATION	6.963013430597004E-7	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999991625881272	WITHOUT_CLASSIFICATION	8.3741187291485E-7	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999991895665878	WITHOUT_CLASSIFICATION	8.104334121822553E-7	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999991510508095	WITHOUT_CLASSIFICATION	8.489491905651844E-7	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999991621211372	WITHOUT_CLASSIFICATION	8.37878862872271E-7	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999987653828597	WITHOUT_CLASSIFICATION	1.2346171402706829E-6	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999991252139941	WITHOUT_CLASSIFICATION	8.747860058304777E-7	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.99999896847171	WITHOUT_CLASSIFICATION	1.0315282900300713E-6	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999990305775142	WITHOUT_CLASSIFICATION	9.694224858498304E-7	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999993580346772	WITHOUT_CLASSIFICATION	6.419653228464257E-7	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999991288423096	WITHOUT_CLASSIFICATION	8.71157690417049E-7	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999993200746786	WITHOUT_CLASSIFICATION	6.799253213165577E-7	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.999999343798958	WITHOUT_CLASSIFICATION	6.562010419948681E-7	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.999999376281683	WITHOUT_CLASSIFICATION	6.237183169764008E-7	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999992880255046	WITHOUT_CLASSIFICATION	7.119744954260228E-7	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.999999412307547	WITHOUT_CLASSIFICATION	5.876924531532004E-7	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999993451344771	WITHOUT_CLASSIFICATION	6.548655229380222E-7	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999994191679488	WITHOUT_CLASSIFICATION	5.808320512945461E-7	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.99999934019444	WITHOUT_CLASSIFICATION	6.598055599164042E-7	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999991309486864	WITHOUT_CLASSIFICATION	8.690513134751419E-7	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999993534672701	WITHOUT_CLASSIFICATION	6.465327299047248E-7	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999994111712287	WITHOUT_CLASSIFICATION	5.888287712581421E-7	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.999999170160491	WITHOUT_CLASSIFICATION	8.298395089439876E-7	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.999999215771114	WITHOUT_CLASSIFICATION	7.842288860788258E-7	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999993485245389	WITHOUT_CLASSIFICATION	6.5147546115588E-7	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999993509123087	WITHOUT_CLASSIFICATION	6.490876912696992E-7	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999993367795587	WITHOUT_CLASSIFICATION	6.632204413917104E-7	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999993581219556	WITHOUT_CLASSIFICATION	6.418780443383082E-7	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999992415950048	WITHOUT_CLASSIFICATION	7.584049953392542E-7	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999992679184747	WITHOUT_CLASSIFICATION	7.320815252745204E-7	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999992948476008	WITHOUT_CLASSIFICATION	7.051523993108895E-7	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999990091847196	WITHOUT_CLASSIFICATION	9.908152804276602E-7	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999994220609181	WITHOUT_CLASSIFICATION	5.779390818858959E-7	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999994304888378	WITHOUT_CLASSIFICATION	5.695111623285606E-7	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999993950728825	WITHOUT_CLASSIFICATION	6.049271175150422E-7	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999993319443464	WITHOUT_CLASSIFICATION	6.6805565368119E-7	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999993447864414	WITHOUT_CLASSIFICATION	6.552135585166487E-7	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999991705072007	WITHOUT_CLASSIFICATION	8.294927992744622E-7	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999994216645582	WITHOUT_CLASSIFICATION	5.783354417776804E-7	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999993675267878	WITHOUT_CLASSIFICATION	6.324732122144237E-7	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999994395127576	WITHOUT_CLASSIFICATION	5.604872424620496E-7	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999993600388704	WITHOUT_CLASSIFICATION	6.399611295270659E-7	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999992516839217	WITHOUT_CLASSIFICATION	7.48316078269037E-7	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999993872255789	WITHOUT_CLASSIFICATION	6.127744211469497E-7	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999993121485261	WITHOUT_CLASSIFICATION	6.878514738375032E-7	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999992826277596	WITHOUT_CLASSIFICATION	7.173722404847288E-7	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999993782649443	WITHOUT_CLASSIFICATION	6.217350557159298E-7	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999990767037324	WITHOUT_CLASSIFICATION	9.232962676896906E-7	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999993438537281	WITHOUT_CLASSIFICATION	6.561462717884894E-7	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.999999128617445	WITHOUT_CLASSIFICATION	8.713825549326615E-7	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999991461648796	WITHOUT_CLASSIFICATION	8.538351204979451E-7	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999993142796499	WITHOUT_CLASSIFICATION	6.857203500625358E-7	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999993520578786	WITHOUT_CLASSIFICATION	6.479421214065886E-7	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999993090191199	WITHOUT_CLASSIFICATION	6.909808800248687E-7	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999993384688507	WITHOUT_CLASSIFICATION	6.61531149179464E-7	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999992890275876	WITHOUT_CLASSIFICATION	7.109724124428569E-7	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999991185639822	WITHOUT_CLASSIFICATION	8.814360178752816E-7	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999993616289155	WITHOUT_CLASSIFICATION	6.383710845000167E-7	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.999999278217488	WITHOUT_CLASSIFICATION	7.217825118823096E-7	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.999999287414696	WITHOUT_CLASSIFICATION	7.125853038964639E-7	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999992066177639	WITHOUT_CLASSIFICATION	7.933822361200075E-7	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.999999179858923	WITHOUT_CLASSIFICATION	8.201410771150037E-7	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999991981466867	WITHOUT_CLASSIFICATION	8.01853313213283E-7	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999991133600805	WITHOUT_CLASSIFICATION	8.866399194647753E-7	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999990487476176	WITHOUT_CLASSIFICATION	9.512523825512576E-7	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999991734843775	WITHOUT_CLASSIFICATION	8.265156225008042E-7	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999991848045133	WITHOUT_CLASSIFICATION	8.151954867890714E-7	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999989888951683	WITHOUT_CLASSIFICATION	1.0111048317051507E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999993716624342	WITHOUT_CLASSIFICATION	6.283375658197595E-7	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999993501251443	WITHOUT_CLASSIFICATION	6.49874855691918E-7	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999993882366969	WITHOUT_CLASSIFICATION	6.11763303044477E-7	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999993673236983	WITHOUT_CLASSIFICATION	6.326763016364775E-7	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999992316826614	WITHOUT_CLASSIFICATION	7.683173385761559E-7	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999993788964708	WITHOUT_CLASSIFICATION	6.211035290755949E-7	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999993421053391	WITHOUT_CLASSIFICATION	6.578946608112514E-7	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999989417654777	WITHOUT_CLASSIFICATION	1.0582345223109377E-6	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999992237904868	WITHOUT_CLASSIFICATION	7.762095131742133E-7	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.999999225767854	WITHOUT_CLASSIFICATION	7.742321459140776E-7	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999990721186446	WITHOUT_CLASSIFICATION	9.278813554650567E-7	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.999999082568844	WITHOUT_CLASSIFICATION	9.174311561721342E-7	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999988501104938	WITHOUT_CLASSIFICATION	1.1498895061076084E-6	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999992263482057	WITHOUT_CLASSIFICATION	7.736517942630116E-7	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999991063632552	WITHOUT_CLASSIFICATION	8.936367447026468E-7	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999992635552238	WITHOUT_CLASSIFICATION	7.364447761394623E-7	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999992342394317	WITHOUT_CLASSIFICATION	7.657605682935769E-7	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999991606770242	WITHOUT_CLASSIFICATION	8.393229757347316E-7	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999992119348491	WITHOUT_CLASSIFICATION	7.880651509308626E-7	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999991398268341	WITHOUT_CLASSIFICATION	8.601731660441919E-7	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999992275555126	WITHOUT_CLASSIFICATION	7.724444873650549E-7	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999992251678539	WITHOUT_CLASSIFICATION	7.748321460558287E-7	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999991493351265	WITHOUT_CLASSIFICATION	8.506648735778655E-7	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999991107131541	WITHOUT_CLASSIFICATION	8.892868459388001E-7	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999993387620822	WITHOUT_CLASSIFICATION	6.612379178420128E-7	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999993314224761	WITHOUT_CLASSIFICATION	6.685775239338252E-7	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999994353145091	WITHOUT_CLASSIFICATION	5.646854908700565E-7	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999993029382661	WITHOUT_CLASSIFICATION	6.970617338225535E-7	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.999999337266479	WITHOUT_CLASSIFICATION	6.627335208469846E-7	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999991203112424	WITHOUT_CLASSIFICATION	8.796887576394391E-7	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999992029030156	WITHOUT_CLASSIFICATION	7.970969845195969E-7	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.999999226569986	WITHOUT_CLASSIFICATION	7.73430014083616E-7	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999993206330993	WITHOUT_CLASSIFICATION	6.793669006821958E-7	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999994348804057	WITHOUT_CLASSIFICATION	5.651195943944078E-7	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999994064036745	WITHOUT_CLASSIFICATION	5.9359632554529E-7	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999994229714507	WITHOUT_CLASSIFICATION	5.770285493236738E-7	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999993189287993	WITHOUT_CLASSIFICATION	6.810712005867807E-7	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999991253663975	WITHOUT_CLASSIFICATION	8.746336025044737E-7	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999993837491097	WITHOUT_CLASSIFICATION	6.162508903612864E-7	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999993685910922	WITHOUT_CLASSIFICATION	6.314089077954113E-7	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999991228716351	WITHOUT_CLASSIFICATION	8.771283648658722E-7	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999991880731807	WITHOUT_CLASSIFICATION	8.119268192997529E-7	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999993519090884	WITHOUT_CLASSIFICATION	6.480909115271629E-7	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999994489925143	WITHOUT_CLASSIFICATION	5.510074858013997E-7	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999992647522902	WITHOUT_CLASSIFICATION	7.352477097010231E-7	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999993816526421	WITHOUT_CLASSIFICATION	6.183473579522976E-7	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999994403608524	WITHOUT_CLASSIFICATION	5.596391476127391E-7	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999991780069799	WITHOUT_CLASSIFICATION	8.219930200657661E-7	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999991073428516	WITHOUT_CLASSIFICATION	8.926571484854336E-7	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999993447975585	WITHOUT_CLASSIFICATION	6.552024415898003E-7	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999994425113357	WITHOUT_CLASSIFICATION	5.574886644273199E-7	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.999999361887976	WITHOUT_CLASSIFICATION	6.381120238866233E-7	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999993505127949	WITHOUT_CLASSIFICATION	6.494872050836796E-7	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999993744021166	WITHOUT_CLASSIFICATION	6.255978834959259E-7	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999993755373987	WITHOUT_CLASSIFICATION	6.244626013629716E-7	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999992890425138	WITHOUT_CLASSIFICATION	7.109574861713899E-7	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.99999937411547	WITHOUT_CLASSIFICATION	6.258845299392342E-7	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999993899034262	WITHOUT_CLASSIFICATION	6.100965738241427E-7	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.999999338131953	WITHOUT_CLASSIFICATION	6.618680470343848E-7	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999993570519993	WITHOUT_CLASSIFICATION	6.429480007040442E-7	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999992115171255	WITHOUT_CLASSIFICATION	7.884828746181293E-7	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999991395712257	WITHOUT_CLASSIFICATION	8.604287744250454E-7	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999994497839132	WITHOUT_CLASSIFICATION	5.502160867822049E-7	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999994459236422	WITHOUT_CLASSIFICATION	5.540763578789392E-7	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999994662026963	WITHOUT_CLASSIFICATION	5.337973036878972E-7	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999993382256935	WITHOUT_CLASSIFICATION	6.617743064834644E-7	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999992136830534	WITHOUT_CLASSIFICATION	7.863169465267324E-7	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999994267010719	WITHOUT_CLASSIFICATION	5.732989281598118E-7	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999992613057489	WITHOUT_CLASSIFICATION	7.386942510755925E-7	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999994512706303	WITHOUT_CLASSIFICATION	5.487293697326991E-7	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999993709737669	WITHOUT_CLASSIFICATION	6.290262330422889E-7	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999993427716414	WITHOUT_CLASSIFICATION	6.572283586709752E-7	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999992352636798	WITHOUT_CLASSIFICATION	7.647363201410201E-7	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999992515338458	WITHOUT_CLASSIFICATION	7.484661541760759E-7	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999991865002593	WITHOUT_CLASSIFICATION	8.134997406796935E-7	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999994468454283	WITHOUT_CLASSIFICATION	5.531545716569409E-7	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999994715197771	WITHOUT_CLASSIFICATION	5.284802228966863E-7	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999994190573099	WITHOUT_CLASSIFICATION	5.809426900833343E-7	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999994469499024	WITHOUT_CLASSIFICATION	5.530500975354731E-7	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999994446952303	WITHOUT_CLASSIFICATION	5.553047697237266E-7	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999994392415551	WITHOUT_CLASSIFICATION	5.607584449532384E-7	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999993137658578	WITHOUT_CLASSIFICATION	6.862341422090519E-7	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999994267648229	WITHOUT_CLASSIFICATION	5.732351771094748E-7	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999993995479072	WITHOUT_CLASSIFICATION	6.004520928429474E-7	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999993731430828	WITHOUT_CLASSIFICATION	6.268569171997011E-7	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999993655818813	WITHOUT_CLASSIFICATION	6.344181187516678E-7	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.999999256644482	WITHOUT_CLASSIFICATION	7.433555180943624E-7	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999989047834175	WITHOUT_CLASSIFICATION	1.0952165825694835E-6	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999992949258235	WITHOUT_CLASSIFICATION	7.050741763885299E-7	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.999999198668276	WITHOUT_CLASSIFICATION	8.013317240779138E-7	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.99999940543929	WITHOUT_CLASSIFICATION	5.945607099738916E-7	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999993093114945	WITHOUT_CLASSIFICATION	6.906885055488651E-7	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999992703872179	WITHOUT_CLASSIFICATION	7.296127820018147E-7	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999991757255274	WITHOUT_CLASSIFICATION	8.242744726601113E-7	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999994128438144	WITHOUT_CLASSIFICATION	5.8715618550088E-7	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999907627542409	WITHOUT_CLASSIFICATION	9.237245759072813E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999914223693367	WITHOUT_CLASSIFICATION	8.577630663349981E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999944452370447	WITHOUT_CLASSIFICATION	5.554762955266564E-6	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.999992722685302	WITHOUT_CLASSIFICATION	7.277314698033456E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997974574639921	WITHOUT_CLASSIFICATION	2.025425360079891E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999211946890662	WITHOUT_CLASSIFICATION	7.880531093379114E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999630151059841	WITHOUT_CLASSIFICATION	3.698489401596953E-5	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999784461211001	WITHOUT_CLASSIFICATION	2.155387889997034E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999994149993965	WITHOUT_CLASSIFICATION	5.850006035654334E-7	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999993385004979	WITHOUT_CLASSIFICATION	6.614995019367403E-7	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999993241796038	WITHOUT_CLASSIFICATION	6.758203962317653E-7	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999994033963739	WITHOUT_CLASSIFICATION	5.96603626130224E-7	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999993979135147	WITHOUT_CLASSIFICATION	6.020864853618608E-7	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999993217042712	WITHOUT_CLASSIFICATION	6.782957287908806E-7	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999991251347597	WITHOUT_CLASSIFICATION	8.748652403402021E-7	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999992142866582	WITHOUT_CLASSIFICATION	7.857133417655347E-7	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999993660441315	WITHOUT_CLASSIFICATION	6.339558684101732E-7	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999993175429753	WITHOUT_CLASSIFICATION	6.824570246701361E-7	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999991521692113	WITHOUT_CLASSIFICATION	8.47830788663283E-7	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999990670760691	WITHOUT_CLASSIFICATION	9.329239308914452E-7	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.999999255628412	WITHOUT_CLASSIFICATION	7.44371587971134E-7	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999993115448484	WITHOUT_CLASSIFICATION	6.884551515251646E-7	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999992792883245	WITHOUT_CLASSIFICATION	7.207116754566503E-7	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999991436516505	WITHOUT_CLASSIFICATION	8.56348349400128E-7	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999993255530969	WITHOUT_CLASSIFICATION	6.744469031151742E-7	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999992837679915	WITHOUT_CLASSIFICATION	7.162320085048096E-7	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999992061068831	WITHOUT_CLASSIFICATION	7.938931168489099E-7	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999993711248505	WITHOUT_CLASSIFICATION	6.288751494919592E-7	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999986120223323	WITHOUT_CLASSIFICATION	1.3879776677021942E-6	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999986093584438	WITHOUT_CLASSIFICATION	1.3906415562235441E-6	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999991335616979	WITHOUT_CLASSIFICATION	8.664383021182065E-7	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999991876733773	WITHOUT_CLASSIFICATION	8.123266228773507E-7	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999954808148039	WITHOUT_CLASSIFICATION	4.519185195981788E-6	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999993671912891	WITHOUT_CLASSIFICATION	6.328087108098448E-7	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999926600215854	WITHOUT_CLASSIFICATION	7.339978414632045E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999998926270741	WITHOUT_CLASSIFICATION	1.0737292599019128E-7	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999979887303524	WITHOUT_CLASSIFICATION	2.01126964764857E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999529977863	WITHOUT_CLASSIFICATION	4.700221372073535E-8	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999970559373258	WITHOUT_CLASSIFICATION	2.9440626741799376E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999194025894	WITHOUT_CLASSIFICATION	8.059741067819267E-8	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999194025894	WITHOUT_CLASSIFICATION	8.059741067819267E-8	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999948080135309	WITHOUT_CLASSIFICATION	5.191986469147716E-6	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.999993491918674	WITHOUT_CLASSIFICATION	6.508081326060323E-6	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999998264130506	WITHOUT_CLASSIFICATION	1.73586949381111E-7	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999989850439293	WITHOUT_CLASSIFICATION	1.0149560707606444E-6	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999993675788406	WITHOUT_CLASSIFICATION	6.324211593810544E-7	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999956194893164	WITHOUT_CLASSIFICATION	4.380510683702805E-6	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999990558099813	WITHOUT_CLASSIFICATION	9.441900188507009E-7	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999999533272651	WITHOUT_CLASSIFICATION	4.6672734801212295E-8	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999999819889064	WITHOUT_CLASSIFICATION	1.801109358981013E-8	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999977593387969	WITHOUT_CLASSIFICATION	2.2406612031489787E-6	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.999993557845434	WITHOUT_CLASSIFICATION	6.442154566087552E-6	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999920548593094	WITHOUT_CLASSIFICATION	7.945140690503224E-6	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999982395928697	WITHOUT_CLASSIFICATION	1.7604071302093418E-6	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999986938011577	WITHOUT_CLASSIFICATION	1.306198842275289E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999998939282863	WITHOUT_CLASSIFICATION	1.0607171372003625E-7	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999998939282863	WITHOUT_CLASSIFICATION	1.0607171372003625E-7	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999870341361897	WITHOUT_CLASSIFICATION	1.296586381028169E-5	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999999949881284	WITHOUT_CLASSIFICATION	5.011871527304051E-9	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999804409894	WITHOUT_CLASSIFICATION	1.9559010727291062E-8	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999995786922159	WITHOUT_CLASSIFICATION	4.2130778401699446E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996590246505	WITHOUT_CLASSIFICATION	3.4097534941771836E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999997571068776	WITHOUT_CLASSIFICATION	2.4289312232365486E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999998714445197	WITHOUT_CLASSIFICATION	1.28555480248126E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999997571068776	WITHOUT_CLASSIFICATION	2.4289312232365486E-7	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999954274776646	WITHOUT_CLASSIFICATION	4.572522335424932E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999831376652	WITHOUT_CLASSIFICATION	1.686233483021303E-8	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999998379917526	WITHOUT_CLASSIFICATION	1.6200824748030487E-7	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999995783553188	WITHOUT_CLASSIFICATION	4.216446811040319E-7	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999998279782152	WITHOUT_CLASSIFICATION	1.7202178483977055E-7	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999995884711913	WITHOUT_CLASSIFICATION	4.11528808730212E-7	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999996590304941	WITHOUT_CLASSIFICATION	3.4096950583103336E-7	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999979776523116	WITHOUT_CLASSIFICATION	2.0223476883453145E-6	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999987500233068	WITHOUT_CLASSIFICATION	1.2499766930792566E-6	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999964961508144	WITHOUT_CLASSIFICATION	3.503849185490285E-6	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999992294378262	WITHOUT_CLASSIFICATION	7.705621739167442E-7	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999857607039725	WITHOUT_CLASSIFICATION	1.423929602752856E-5	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999677758530289	WITHOUT_CLASSIFICATION	3.222414697107795E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999965469968454	WITHOUT_CLASSIFICATION	3.453003154674583E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999934720834015	WITHOUT_CLASSIFICATION	6.52791659857877E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999934720834015	WITHOUT_CLASSIFICATION	6.52791659857877E-6	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999998686150493	WITHOUT_CLASSIFICATION	1.313849507643398E-7	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999981457077349	WITHOUT_CLASSIFICATION	1.8542922650496283E-6	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999998218481406	WITHOUT_CLASSIFICATION	1.7815185947819783E-7	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999995823952578	WITHOUT_CLASSIFICATION	4.1760474221644824E-7	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.999999947107067	WITHOUT_CLASSIFICATION	5.2892933182589755E-8	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999997571068776	WITHOUT_CLASSIFICATION	2.4289312232365486E-7	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.999999942348486	WITHOUT_CLASSIFICATION	5.7651513923781854E-8	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.999999998083309	WITHOUT_CLASSIFICATION	1.9166910946076128E-9	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999971330372199	WITHOUT_CLASSIFICATION	2.866962780065108E-6	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999566168424	WITHOUT_CLASSIFICATION	4.33831575772777E-8	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999931289525	WITHOUT_CLASSIFICATION	6.871047446758426E-9	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999744188165	WITHOUT_CLASSIFICATION	2.5581183476357206E-8	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999997862038856	WITHOUT_CLASSIFICATION	2.1379611442573007E-7	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999984110312747	WITHOUT_CLASSIFICATION	1.5889687252157909E-6	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999999921391476	WITHOUT_CLASSIFICATION	7.860852418727234E-9	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999984967787394	WITHOUT_CLASSIFICATION	1.5032212606303794E-6	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999999347473281	WITHOUT_CLASSIFICATION	6.525267200171229E-8	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999754021881	WITHOUT_CLASSIFICATION	2.459781184715134E-8	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999997628752489	WITHOUT_CLASSIFICATION	2.37124750977236E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999979013885262	WITHOUT_CLASSIFICATION	2.0986114739345587E-6	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999999555152017	WITHOUT_CLASSIFICATION	4.4484798338068054E-8	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999857946885113	WITHOUT_CLASSIFICATION	1.4205311488560196E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999999348744544	WITHOUT_CLASSIFICATION	6.512554566101453E-8	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999994488835763	WITHOUT_CLASSIFICATION	5.511164236457314E-7	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999992285817504	WITHOUT_CLASSIFICATION	7.714182495841724E-7	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999993788619967	WITHOUT_CLASSIFICATION	6.211380031496246E-7	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999996118489004	WITHOUT_CLASSIFICATION	3.8815109951060216E-7	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999927621801354	WITHOUT_CLASSIFICATION	7.23781986464176E-6	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999995296493376	WITHOUT_CLASSIFICATION	4.7035066241287604E-7	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999997741927349	WITHOUT_CLASSIFICATION	2.258072651364365E-7	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999999076124206	WITHOUT_CLASSIFICATION	9.238757940103919E-8	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999988079379215	WITHOUT_CLASSIFICATION	1.1920620783949946E-6	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.999999976132206	WITHOUT_CLASSIFICATION	2.3867793896178923E-8	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999999763481711	WITHOUT_CLASSIFICATION	2.365182891683541E-8	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999393252474753	WITHOUT_CLASSIFICATION	6.067475252479266E-5	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999995753408785	WITHOUT_CLASSIFICATION	4.246591216029759E-7	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999996451163948	WITHOUT_CLASSIFICATION	3.54883605154344E-7	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999995355268754	WITHOUT_CLASSIFICATION	4.6447312474649287E-7	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999978282405788	WITHOUT_CLASSIFICATION	2.1717594211436197E-6	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999998771278878	WITHOUT_CLASSIFICATION	1.2287211210206665E-7	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999998613684556	WITHOUT_CLASSIFICATION	1.386315443393101E-7	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999999901740213	WITHOUT_CLASSIFICATION	9.825978648401532E-9	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999999148190287	WITHOUT_CLASSIFICATION	8.518097128569839E-8	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999999558109701	WITHOUT_CLASSIFICATION	4.4189029943633156E-8	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999998201940122	WITHOUT_CLASSIFICATION	1.7980598783171025E-7	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999991657869	WITHOUT_CLASSIFICATION	8.34213084189374E-10	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999784461211001	WITHOUT_CLASSIFICATION	2.155387889997034E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999753033650063	WITHOUT_CLASSIFICATION	2.4696634993637708E-5	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999997267058953	WITHOUT_CLASSIFICATION	2.7329410472538154E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999985115659166	WITHOUT_CLASSIFICATION	1.488434083396447E-6	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999993796242547	WITHOUT_CLASSIFICATION	6.203757454287255E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999831376652	WITHOUT_CLASSIFICATION	1.686233483021303E-8	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999998914946442	WITHOUT_CLASSIFICATION	1.0850535588895378E-7	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999999968516554	WITHOUT_CLASSIFICATION	3.1483445899787364E-9	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999998093125346	WITHOUT_CLASSIFICATION	1.9068746536302872E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999736087045	WITHOUT_CLASSIFICATION	2.6391295442437333E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999736087045	WITHOUT_CLASSIFICATION	2.6391295442437333E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999622614314	WITHOUT_CLASSIFICATION	3.7738568511544094E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999622614314	WITHOUT_CLASSIFICATION	3.7738568511544094E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999622614314	WITHOUT_CLASSIFICATION	3.7738568511544094E-8	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.999995590148618	WITHOUT_CLASSIFICATION	4.40985138191049E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.999995590148618	WITHOUT_CLASSIFICATION	4.40985138191049E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999910213344284	WITHOUT_CLASSIFICATION	8.978665571601763E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999910213344284	WITHOUT_CLASSIFICATION	8.978665571601763E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.999992821644669	WITHOUT_CLASSIFICATION	7.178355331137035E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999998248245515	WITHOUT_CLASSIFICATION	1.7517544852906394E-7	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999994891330009	WITHOUT_CLASSIFICATION	5.108669991706515E-7	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999994891330009	WITHOUT_CLASSIFICATION	5.108669991706515E-7	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999999635461135	WITHOUT_CLASSIFICATION	3.645388643874196E-8	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999991546973089	WITHOUT_CLASSIFICATION	8.453026911131579E-7	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999997176040745	WITHOUT_CLASSIFICATION	2.8239592553377346E-7	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999996854688266	WITHOUT_CLASSIFICATION	3.1453117344294685E-7	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999995127999726	WITHOUT_CLASSIFICATION	4.87200027429376E-7	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999998438476168	WITHOUT_CLASSIFICATION	1.5615238333741745E-7	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999968820957655	WITHOUT_CLASSIFICATION	3.1179042343928477E-6	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999996352361091	WITHOUT_CLASSIFICATION	3.6476389088702134E-7	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999997332154625	WITHOUT_CLASSIFICATION	2.6678453742283986E-7	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999998301629587	WITHOUT_CLASSIFICATION	1.6983704144381814E-7	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.999999898319869	WITHOUT_CLASSIFICATION	1.0168013105342138E-7	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999997668917564	WITHOUT_CLASSIFICATION	2.3310824354102425E-7	TEST
// throw	WITHOUT_CLASSIFICATION	0.999996603996001	WITHOUT_CLASSIFICATION	3.396003999095611E-6	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.999999752856841	WITHOUT_CLASSIFICATION	2.4714315906277546E-7	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.999999935034996	WITHOUT_CLASSIFICATION	6.496500410479079E-8	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999948975986773	WITHOUT_CLASSIFICATION	5.102401322657484E-6	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.999998541183026	WITHOUT_CLASSIFICATION	1.4588169740348745E-6	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999988331975922	WITHOUT_CLASSIFICATION	1.1668024077777973E-6	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999996643212601	WITHOUT_CLASSIFICATION	3.356787399251522E-7	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999830686488161	WITHOUT_CLASSIFICATION	1.6931351183932575E-5	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999570927292	WITHOUT_CLASSIFICATION	4.290727081713502E-8	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999998476392861	WITHOUT_CLASSIFICATION	1.5236071397691212E-7	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999999007699722	WITHOUT_CLASSIFICATION	9.923002768959542E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999678865688	WITHOUT_CLASSIFICATION	3.211343121651822E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999868255379	WITHOUT_CLASSIFICATION	1.317446215460154E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999550679199	WITHOUT_CLASSIFICATION	4.4932080138507324E-8	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999074412316	WITHOUT_CLASSIFICATION	9.255876847364832E-8	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999952448287	WITHOUT_CLASSIFICATION	4.7551712914715924E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999679711988	WITHOUT_CLASSIFICATION	3.2028801173158854E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999868602572	WITHOUT_CLASSIFICATION	1.313974287104315E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999551863316	WITHOUT_CLASSIFICATION	4.48136685051913E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999796004898	WITHOUT_CLASSIFICATION	2.0399510171244234E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999916311473	WITHOUT_CLASSIFICATION	8.36885261667715E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999784231617	WITHOUT_CLASSIFICATION	2.157683824630269E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999916311473	WITHOUT_CLASSIFICATION	8.36885261667715E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999916311473	WITHOUT_CLASSIFICATION	8.36885261667715E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999916311473	WITHOUT_CLASSIFICATION	8.36885261667715E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999916311473	WITHOUT_CLASSIFICATION	8.36885261667715E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999916311473	WITHOUT_CLASSIFICATION	8.36885261667715E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999916311473	WITHOUT_CLASSIFICATION	8.36885261667715E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999784231617	WITHOUT_CLASSIFICATION	2.157683824630269E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999784231617	WITHOUT_CLASSIFICATION	2.157683824630269E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999784231617	WITHOUT_CLASSIFICATION	2.157683824630269E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999784231617	WITHOUT_CLASSIFICATION	2.157683824630269E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999784231617	WITHOUT_CLASSIFICATION	2.157683824630269E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999784231617	WITHOUT_CLASSIFICATION	2.157683824630269E-8	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999999297478412	WITHOUT_CLASSIFICATION	7.025215870999336E-8	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.99999975858478	WITHOUT_CLASSIFICATION	2.414152200989406E-7	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999996226975273	WITHOUT_CLASSIFICATION	3.7730247270220926E-7	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998999586193	WITHOUT_CLASSIFICATION	1.000413807809682E-7	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.99999999507966	WITHOUT_CLASSIFICATION	4.92034000479099E-9	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999999869581618	WITHOUT_CLASSIFICATION	1.3041838199901665E-7	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999999933621483	WITHOUT_CLASSIFICATION	6.63785178224817E-9	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.999999993752903	WITHOUT_CLASSIFICATION	6.247096965495147E-9	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999999650358186	WITHOUT_CLASSIFICATION	3.4964181470021424E-8	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.99999906386399	WITHOUT_CLASSIFICATION	9.361360101701561E-7	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999639275933923	WITHOUT_CLASSIFICATION	3.60724066077653E-5	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999872061551	WITHOUT_CLASSIFICATION	1.2793844792576322E-8	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999991511046987	WITHOUT_CLASSIFICATION	8.488953013490365E-7	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999759663045	WITHOUT_CLASSIFICATION	2.4033695436422444E-8	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999998290454672	WITHOUT_CLASSIFICATION	1.7095453281096915E-7	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.999966373228871	WITHOUT_CLASSIFICATION	3.362677112896793E-5	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999998086316566	WITHOUT_CLASSIFICATION	1.9136834343382052E-7	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999999821416501	WITHOUT_CLASSIFICATION	1.7858349957141783E-8	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999999815556831	WITHOUT_CLASSIFICATION	1.8444316868766083E-8	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.999999988744518	WITHOUT_CLASSIFICATION	1.1255481944599251E-8	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999995631781674	WITHOUT_CLASSIFICATION	4.368218325310978E-7	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999995001974563	WITHOUT_CLASSIFICATION	4.998025436462735E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999998714445197	WITHOUT_CLASSIFICATION	1.28555480248126E-7	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999946236829382	WITHOUT_CLASSIFICATION	5.37631706178542E-6	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.99999824793217	WITHOUT_CLASSIFICATION	1.7520678300028428E-6	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999872377168	WITHOUT_CLASSIFICATION	1.2762283261838469E-8	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999697367373	WITHOUT_CLASSIFICATION	3.02632627673332E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999997949835246	WITHOUT_CLASSIFICATION	2.050164753040109E-7	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999991772051928	WITHOUT_CLASSIFICATION	8.227948071403631E-7	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999999663046972	WITHOUT_CLASSIFICATION	3.3695302718356144E-8	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999998818201293	WITHOUT_CLASSIFICATION	1.1817987065853446E-7	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999875075958	WITHOUT_CLASSIFICATION	1.2492404254893448E-8	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999897619716	WITHOUT_CLASSIFICATION	1.0238028374743747E-8	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999439505939	WITHOUT_CLASSIFICATION	5.604940616049982E-8	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999999816075242	WITHOUT_CLASSIFICATION	1.8392475778287306E-8	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999999163595108	WITHOUT_CLASSIFICATION	8.36404892237751E-8	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999999818041696	WITHOUT_CLASSIFICATION	1.8195830383630375E-8	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999996094057108	WITHOUT_CLASSIFICATION	3.9059428919979956E-7	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999998220184	WITHOUT_CLASSIFICATION	1.779815209637417E-10	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999856912987	WITHOUT_CLASSIFICATION	1.4308701290157128E-8	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999994474175623	WITHOUT_CLASSIFICATION	5.525824377150292E-7	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999998169700596	WITHOUT_CLASSIFICATION	1.8302994048881375E-7	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999995285600692	WITHOUT_CLASSIFICATION	4.7143993073620954E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999986660977501	WITHOUT_CLASSIFICATION	1.3339022498916947E-6	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999986660977501	WITHOUT_CLASSIFICATION	1.3339022498916947E-6	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999999659532938	WITHOUT_CLASSIFICATION	3.404670620305139E-7	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999999659532938	WITHOUT_CLASSIFICATION	3.404670620305139E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999995295272528	WITHOUT_CLASSIFICATION	4.7047274723737555E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999995295272528	WITHOUT_CLASSIFICATION	4.7047274723737555E-7	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999998302519859	WITHOUT_CLASSIFICATION	1.6974801413076465E-7	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.999999983931736	WITHOUT_CLASSIFICATION	1.6068264118066126E-8	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999995049456306	WITHOUT_CLASSIFICATION	4.950543694944566E-7	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999998467481606	WITHOUT_CLASSIFICATION	1.5325183938301123E-7	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999999807361747	WITHOUT_CLASSIFICATION	1.9263825234380624E-8	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999977551561098	WITHOUT_CLASSIFICATION	2.24484389030304E-6	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999988897643579	WITHOUT_CLASSIFICATION	1.1102356420573247E-6	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999871498573	WITHOUT_CLASSIFICATION	1.285014271769367E-8	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999813390867	WITHOUT_CLASSIFICATION	1.866091330497055E-8	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999987219898425	WITHOUT_CLASSIFICATION	1.2780101574133025E-6	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999917319924719	WITHOUT_CLASSIFICATION	8.268007528090313E-6	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999991213129155	WITHOUT_CLASSIFICATION	8.78687084440112E-7	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999703584642	WITHOUT_CLASSIFICATION	2.964153580532096E-8	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999999980774827	WITHOUT_CLASSIFICATION	1.922517273132288E-9	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.999998695085293	WITHOUT_CLASSIFICATION	1.304914706916971E-6	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999986384505406	WITHOUT_CLASSIFICATION	1.361549459344472E-6	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999975724432	WITHOUT_CLASSIFICATION	2.427556934541567E-9	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999992535013641	WITHOUT_CLASSIFICATION	7.464986358695937E-7	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999993534782994	WITHOUT_CLASSIFICATION	6.465217006993236E-7	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999973816351192	WITHOUT_CLASSIFICATION	2.6183648808374313E-6	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999981660712461	WITHOUT_CLASSIFICATION	1.8339287538519234E-6	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999996116513901	WITHOUT_CLASSIFICATION	3.8834860995715146E-7	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999971426525214	WITHOUT_CLASSIFICATION	2.8573474785888457E-6	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999790335954	WITHOUT_CLASSIFICATION	2.0966404689618555E-8	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999994475796358	WITHOUT_CLASSIFICATION	5.524203642382363E-7	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999653820009	WITHOUT_CLASSIFICATION	3.461799902840535E-8	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999978714057103	WITHOUT_CLASSIFICATION	2.1285942897739088E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997396849708	WITHOUT_CLASSIFICATION	2.6031502923178555E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997396849708	WITHOUT_CLASSIFICATION	2.6031502923178555E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997396849708	WITHOUT_CLASSIFICATION	2.6031502923178555E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999979584757	WITHOUT_CLASSIFICATION	2.0415242781784257E-9	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999979584757	WITHOUT_CLASSIFICATION	2.0415242781784257E-9	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999979013885262	WITHOUT_CLASSIFICATION	2.0986114739345587E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999979013885262	WITHOUT_CLASSIFICATION	2.0986114739345587E-6	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999998472259141	WITHOUT_CLASSIFICATION	1.5277408588803684E-7	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999914365945836	WITHOUT_CLASSIFICATION	8.563405416552787E-6	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999994653383363	WITHOUT_CLASSIFICATION	5.346616636562763E-7	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999991601496374	WITHOUT_CLASSIFICATION	8.398503625182276E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997396849708	WITHOUT_CLASSIFICATION	2.6031502923178555E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997396849708	WITHOUT_CLASSIFICATION	2.6031502923178555E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997396849708	WITHOUT_CLASSIFICATION	2.6031502923178555E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999979584757	WITHOUT_CLASSIFICATION	2.0415242781784257E-9	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999979584757	WITHOUT_CLASSIFICATION	2.0415242781784257E-9	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999979584757	WITHOUT_CLASSIFICATION	2.0415242781784257E-9	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999979013885262	WITHOUT_CLASSIFICATION	2.0986114739345587E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999979013885262	WITHOUT_CLASSIFICATION	2.0986114739345587E-6	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999998819719359	WITHOUT_CLASSIFICATION	1.1802806401523347E-7	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999997463283307	WITHOUT_CLASSIFICATION	2.536716693522355E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999977239032114	WITHOUT_CLASSIFICATION	2.2760967886483613E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999977239032114	WITHOUT_CLASSIFICATION	2.2760967886483613E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999977239032114	WITHOUT_CLASSIFICATION	2.2760967886483613E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999977239032114	WITHOUT_CLASSIFICATION	2.2760967886483613E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999977239032114	WITHOUT_CLASSIFICATION	2.2760967886483613E-6	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999998828156912	WITHOUT_CLASSIFICATION	1.1718430888288398E-7	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999993926581678	WITHOUT_CLASSIFICATION	6.073418322601672E-7	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999988021039679	WITHOUT_CLASSIFICATION	1.1978960320935919E-6	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999984988767738	WITHOUT_CLASSIFICATION	1.5011232262424465E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999962554559894	WITHOUT_CLASSIFICATION	3.744544010699741E-6	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999866267402774	WITHOUT_CLASSIFICATION	1.3373259722622666E-5	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999897364941929	WITHOUT_CLASSIFICATION	1.02635058070803E-5	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999998444821055	WITHOUT_CLASSIFICATION	1.5551789446004648E-7	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999995604168307	WITHOUT_CLASSIFICATION	4.395831692736745E-7	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999961079693012	WITHOUT_CLASSIFICATION	3.892030698752836E-6	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.999997189654482	WITHOUT_CLASSIFICATION	2.8103455180475983E-6	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999965961827144	WITHOUT_CLASSIFICATION	3.4038172855213384E-6	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999928563202449	WITHOUT_CLASSIFICATION	7.143679754978744E-6	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999997704753728	WITHOUT_CLASSIFICATION	2.2952462717715766E-7	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999990295683714	WITHOUT_CLASSIFICATION	9.704316286041022E-7	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999956541750297	WITHOUT_CLASSIFICATION	4.345824970318848E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999956541750297	WITHOUT_CLASSIFICATION	4.345824970318848E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999956541750297	WITHOUT_CLASSIFICATION	4.345824970318848E-6	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.999791999107225	WITHOUT_CLASSIFICATION	2.0800089277496175E-4	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9997920756633194	WITHOUT_CLASSIFICATION	2.0792433668054513E-4	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999993019636849	WITHOUT_CLASSIFICATION	6.980363150558424E-7	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999861892619	WITHOUT_CLASSIFICATION	1.3810738102219792E-8	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999996867325781	WITHOUT_CLASSIFICATION	3.132674219323761E-7	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.999999867295254	WITHOUT_CLASSIFICATION	1.3270474608336715E-7	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999997053870248	WITHOUT_CLASSIFICATION	2.9461297517710507E-7	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999996041835902	WITHOUT_CLASSIFICATION	3.9581640985193505E-7	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999983016118202	WITHOUT_CLASSIFICATION	1.6983881797797748E-6	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999151305867	WITHOUT_CLASSIFICATION	8.486941324762616E-8	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999997780205392	WITHOUT_CLASSIFICATION	2.2197946092724414E-7	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999998118061885	WITHOUT_CLASSIFICATION	1.8819381166604265E-7	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999997920917713	WITHOUT_CLASSIFICATION	2.0790822868809472E-7	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999997383623278	WITHOUT_CLASSIFICATION	2.616376722502407E-7	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999998751043513	WITHOUT_CLASSIFICATION	1.2489564868504327E-7	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.999999834871366	WITHOUT_CLASSIFICATION	1.6512863387326383E-7	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999997105009568	WITHOUT_CLASSIFICATION	2.8949904322263934E-7	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999998362210322	WITHOUT_CLASSIFICATION	1.6377896777382636E-7	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999996890065103	WITHOUT_CLASSIFICATION	3.1099348968956985E-7	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999991015103696	WITHOUT_CLASSIFICATION	8.984896304210384E-7	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999996068601529	WITHOUT_CLASSIFICATION	3.9313984712606356E-7	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.999999261489106	WITHOUT_CLASSIFICATION	7.385108939778844E-7	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999999218852955	WITHOUT_CLASSIFICATION	7.811470445083782E-8	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999997893378515	WITHOUT_CLASSIFICATION	2.1066214859949696E-7	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999995561765496	WITHOUT_CLASSIFICATION	4.438234504311693E-7	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999996503389785	WITHOUT_CLASSIFICATION	3.496610214751663E-7	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999997387245642	WITHOUT_CLASSIFICATION	2.612754358293986E-7	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999996434886925	WITHOUT_CLASSIFICATION	3.5651130746261396E-7	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.999997622137279	WITHOUT_CLASSIFICATION	2.3778627209531844E-6	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9999710259718202	WITHOUT_CLASSIFICATION	2.89740281797909E-5	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9999571837623297	WITHOUT_CLASSIFICATION	4.281623767027971E-5	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9999156613814734	WITHOUT_CLASSIFICATION	8.433861852660331E-5	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9999672349007587	WITHOUT_CLASSIFICATION	3.276509924135012E-5	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9999614724839921	WITHOUT_CLASSIFICATION	3.852751600782687E-5	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9999656448213344	WITHOUT_CLASSIFICATION	3.435517866562155E-5	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.9999652509541509	WITHOUT_CLASSIFICATION	3.4749045849024835E-5	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999998867062226	WITHOUT_CLASSIFICATION	1.1329377731127902E-7	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999999095187538	WITHOUT_CLASSIFICATION	9.048124614660152E-8	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999997793521143	WITHOUT_CLASSIFICATION	2.2064788585895513E-7	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.5607870147104407	TEST	0.4392129852895593	WITHOUT_CLASSIFICATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999749375275678	WITHOUT_CLASSIFICATION	2.5062472432067125E-5	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999999781450404	WITHOUT_CLASSIFICATION	2.1854959552401933E-8	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999943446074209	WITHOUT_CLASSIFICATION	5.655392579124022E-6	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999999163316949	WITHOUT_CLASSIFICATION	8.366830513969181E-8	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.999910835128424	WITHOUT_CLASSIFICATION	8.91648715758985E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999939723382697	WITHOUT_CLASSIFICATION	6.027661730218028E-6	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999033474251157	WITHOUT_CLASSIFICATION	9.665257488432193E-5	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999033474251157	WITHOUT_CLASSIFICATION	9.665257488432193E-5	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999955820822247	WITHOUT_CLASSIFICATION	4.417917775341688E-6	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999999791593105	WITHOUT_CLASSIFICATION	2.0840689541415626E-8	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999975727470739	WITHOUT_CLASSIFICATION	2.42725292615592E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9982223569569507	WITHOUT_CLASSIFICATION	0.0017776430430492575	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999792285720777	WITHOUT_CLASSIFICATION	2.0771427922327915E-5	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999991451721325	WITHOUT_CLASSIFICATION	8.548278674750101E-7	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999994612800857	WITHOUT_CLASSIFICATION	5.387199143429006E-7	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999428064121	WITHOUT_CLASSIFICATION	5.719358790930207E-8	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999999169099231	WITHOUT_CLASSIFICATION	8.309007689456032E-8	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999999696492307	WITHOUT_CLASSIFICATION	3.035076942903992E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999676840408	WITHOUT_CLASSIFICATION	3.231595925321824E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999676840408	WITHOUT_CLASSIFICATION	3.231595925321824E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999676840408	WITHOUT_CLASSIFICATION	3.231595925321824E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999676840408	WITHOUT_CLASSIFICATION	3.231595925321824E-8	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999989775177687	WITHOUT_CLASSIFICATION	1.022482231324995E-6	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999993071455155	WITHOUT_CLASSIFICATION	6.928544843837354E-7	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999997855475927	WITHOUT_CLASSIFICATION	2.144524072704473E-7	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999980782901364	WITHOUT_CLASSIFICATION	1.921709863545052E-6	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999978880988281	WITHOUT_CLASSIFICATION	2.1119011719716092E-6	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999999445602599	WITHOUT_CLASSIFICATION	5.543974019279575E-8	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999994842749949	WITHOUT_CLASSIFICATION	5.157250051590146E-7	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999999855483878	WITHOUT_CLASSIFICATION	1.445161219780412E-7	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999999855483878	WITHOUT_CLASSIFICATION	1.445161219780412E-7	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999215321526	WITHOUT_CLASSIFICATION	7.846784748812615E-8	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.999999739955076	WITHOUT_CLASSIFICATION	2.600449240223022E-7	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999870146028883	WITHOUT_CLASSIFICATION	1.298539711170573E-4	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999995714634	WITHOUT_CLASSIFICATION	4.285365934645591E-9	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999995714634	WITHOUT_CLASSIFICATION	4.285365934645591E-9	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999818885159	WITHOUT_CLASSIFICATION	1.811148414358154E-8	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999988832089968	WITHOUT_CLASSIFICATION	1.1167910031382274E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999988832089968	WITHOUT_CLASSIFICATION	1.1167910031382274E-6	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999790359666372	WITHOUT_CLASSIFICATION	2.0964033362788756E-5	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.99999457591368	WITHOUT_CLASSIFICATION	5.424086319993648E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.999999947859753	WITHOUT_CLASSIFICATION	5.214024696178181E-8	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999922324945365	WITHOUT_CLASSIFICATION	7.76750546341469E-6	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999994006463585	WITHOUT_CLASSIFICATION	5.993536414899041E-7	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999851254753	WITHOUT_CLASSIFICATION	1.4874524802929162E-8	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999769090190243	WITHOUT_CLASSIFICATION	2.309098097572372E-5	TEST
//sequential	WITHOUT_CLASSIFICATION	0.999993893197073	WITHOUT_CLASSIFICATION	6.106802926994096E-6	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999758649033	WITHOUT_CLASSIFICATION	2.4135096661260584E-8	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.999999580569434	WITHOUT_CLASSIFICATION	4.194305659684014E-7	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999973380224587	WITHOUT_CLASSIFICATION	2.6619775412520192E-6	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.999999822717466	WITHOUT_CLASSIFICATION	1.7728253398689123E-7	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9943750645986557	WITHOUT_CLASSIFICATION	0.005624935401344337	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.993139662073451	WITHOUT_CLASSIFICATION	0.0068603379265490825	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.999999948228212	WITHOUT_CLASSIFICATION	5.177178793763824E-8	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999999402560216	WITHOUT_CLASSIFICATION	5.974397843259552E-8	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999980671515192	WITHOUT_CLASSIFICATION	1.9328484808050612E-6	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999997575130276	WITHOUT_CLASSIFICATION	2.4248697237869035E-7	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999999052079432	WITHOUT_CLASSIFICATION	9.479205679026831E-7	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999999540435359	WITHOUT_CLASSIFICATION	4.5956464100352824E-8	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999979652294855	WITHOUT_CLASSIFICATION	2.0347705145340606E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999998184056242	WITHOUT_CLASSIFICATION	1.8159437586797318E-7	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999997565351868	WITHOUT_CLASSIFICATION	2.434648132144404E-7	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9997483661434595	WITHOUT_CLASSIFICATION	2.5163385654050966E-4	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999977689425294	WITHOUT_CLASSIFICATION	2.231057470603573E-5	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999798885656803	WITHOUT_CLASSIFICATION	2.011143431967093E-5	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999998682892302	WITHOUT_CLASSIFICATION	1.3171076991397723E-7	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999989750935102	WITHOUT_CLASSIFICATION	1.024906489697449E-6	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999924607116	WITHOUT_CLASSIFICATION	7.53928850185733E-9	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999979252741795	WITHOUT_CLASSIFICATION	2.0747258205723273E-6	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999942827896527	WITHOUT_CLASSIFICATION	5.7172103472563186E-6	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999996957258831	WITHOUT_CLASSIFICATION	3.042741168917457E-7	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9983945111009036	WITHOUT_CLASSIFICATION	0.0016054888990964754	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999984504419808	WITHOUT_CLASSIFICATION	1.5495580192908874E-6	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999998502085239	WITHOUT_CLASSIFICATION	1.4979147611156427E-7	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999976858301193	WITHOUT_CLASSIFICATION	2.314169880786097E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999946852648719	WITHOUT_CLASSIFICATION	5.314735128132814E-6	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999988638480286	WITHOUT_CLASSIFICATION	1.136151971430357E-6	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999928942553319	WITHOUT_CLASSIFICATION	7.105744668109558E-6	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999976858301193	WITHOUT_CLASSIFICATION	2.314169880786097E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999946852648719	WITHOUT_CLASSIFICATION	5.314735128132814E-6	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999996647058857	WITHOUT_CLASSIFICATION	3.3529411432508984E-7	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.999996242909726	WITHOUT_CLASSIFICATION	3.7570902740115574E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.999996242909726	WITHOUT_CLASSIFICATION	3.7570902740115574E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999996250948296	WITHOUT_CLASSIFICATION	3.7490517042010157E-7	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999983082626079	WITHOUT_CLASSIFICATION	1.6917373919511647E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999987578940909	WITHOUT_CLASSIFICATION	1.2421059091370778E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999991650873034	WITHOUT_CLASSIFICATION	8.349126965768372E-7	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999979464024062	WITHOUT_CLASSIFICATION	2.0535975937269806E-6	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999521957265323	WITHOUT_CLASSIFICATION	4.780427346776234E-5	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.999998747927192	WITHOUT_CLASSIFICATION	1.2520728079220625E-6	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999998044359973	WITHOUT_CLASSIFICATION	1.9556400264652066E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999992796347049	WITHOUT_CLASSIFICATION	7.20365295027356E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.999992836192863	WITHOUT_CLASSIFICATION	7.1638071368868346E-6	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999998778392885	WITHOUT_CLASSIFICATION	1.2216071146758073E-7	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999997400223147	WITHOUT_CLASSIFICATION	2.5997768528178594E-7	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999973780051509	WITHOUT_CLASSIFICATION	2.6219948491313883E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998311703324	WITHOUT_CLASSIFICATION	1.6882966747417256E-7	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998311703324	WITHOUT_CLASSIFICATION	1.6882966747417256E-7	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999819022145774	WITHOUT_CLASSIFICATION	1.809778542263907E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999819022145774	WITHOUT_CLASSIFICATION	1.809778542263907E-5	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.999999813853031	WITHOUT_CLASSIFICATION	1.8614696889636592E-7	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999998464737759	WITHOUT_CLASSIFICATION	1.5352622404834437E-7	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999996504642522	WITHOUT_CLASSIFICATION	3.4953574783291764E-7	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999991459477306	WITHOUT_CLASSIFICATION	8.540522693900831E-7	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999923974201479	WITHOUT_CLASSIFICATION	7.602579852147713E-6	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999957966680543	WITHOUT_CLASSIFICATION	4.203331945739299E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999987578940909	WITHOUT_CLASSIFICATION	1.2421059091370778E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999991650873034	WITHOUT_CLASSIFICATION	8.349126965768372E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999992796347049	WITHOUT_CLASSIFICATION	7.20365295027356E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.999992836192863	WITHOUT_CLASSIFICATION	7.1638071368868346E-6	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999999149237521	WITHOUT_CLASSIFICATION	8.50762479366911E-8	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999998538008257	WITHOUT_CLASSIFICATION	1.4619917428881536E-7	TEST
// \v	WITHOUT_CLASSIFICATION	0.999992393988199	WITHOUT_CLASSIFICATION	7.6060118010524945E-6	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999992303299606	WITHOUT_CLASSIFICATION	7.696700394225436E-7	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.999999814394473	WITHOUT_CLASSIFICATION	1.8560552704561434E-7	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999987214726572	WITHOUT_CLASSIFICATION	1.2785273427295632E-6	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999980842674919	WITHOUT_CLASSIFICATION	1.9157325080540927E-6	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999907828678897	WITHOUT_CLASSIFICATION	9.217132110237583E-6	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999983462518943	WITHOUT_CLASSIFICATION	1.653748105695956E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999989210435387	WITHOUT_CLASSIFICATION	1.0789564613347376E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999799157384	WITHOUT_CLASSIFICATION	2.0084261559801014E-8	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999166331821515	WITHOUT_CLASSIFICATION	8.336681784847942E-5	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999996036222968	WITHOUT_CLASSIFICATION	3.9637770321978947E-7	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999976793298995	WITHOUT_CLASSIFICATION	2.3206701004348502E-6	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.999999576883311	WITHOUT_CLASSIFICATION	4.2311668900273867E-7	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999958315301447	WITHOUT_CLASSIFICATION	4.16846985531304E-6	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999992727270378	WITHOUT_CLASSIFICATION	7.272729621394126E-7	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999946646678329	WITHOUT_CLASSIFICATION	5.335332167094027E-6	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999988305591896	WITHOUT_CLASSIFICATION	1.1694408104168867E-6	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999975002072101	WITHOUT_CLASSIFICATION	2.4997927899074274E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999979904047912	WITHOUT_CLASSIFICATION	2.0095952087705914E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999979904047912	WITHOUT_CLASSIFICATION	2.0095952087705914E-6	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999986483768338	WITHOUT_CLASSIFICATION	1.3516231662510096E-6	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999575181450195	WITHOUT_CLASSIFICATION	4.248185498039554E-5	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999987935530726	WITHOUT_CLASSIFICATION	1.2064469273161985E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999985746025669	WITHOUT_CLASSIFICATION	1.425397433120574E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999985746025669	WITHOUT_CLASSIFICATION	1.425397433120574E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.999992393988199	WITHOUT_CLASSIFICATION	7.6060118010524945E-6	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.99999277498538	WITHOUT_CLASSIFICATION	7.225014619971007E-6	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999973862150511	WITHOUT_CLASSIFICATION	2.613784948936006E-6	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999975500429382	WITHOUT_CLASSIFICATION	2.449957061799279E-6	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999981090829	WITHOUT_CLASSIFICATION	1.8909170999544957E-6	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999988157463328	WITHOUT_CLASSIFICATION	1.1842536673290903E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.999963692801045	WITHOUT_CLASSIFICATION	3.630719895491193E-5	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999969726407921	WITHOUT_CLASSIFICATION	3.0273592078913704E-6	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999991555561806	WITHOUT_CLASSIFICATION	8.444438194278658E-7	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999992118869856	WITHOUT_CLASSIFICATION	7.881130144864243E-7	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999900444730806	WITHOUT_CLASSIFICATION	9.955526919304508E-6	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999994294663598	WITHOUT_CLASSIFICATION	5.705336402679188E-7	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999997276761657	WITHOUT_CLASSIFICATION	2.72323834264567E-7	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.99999996784722	WITHOUT_CLASSIFICATION	3.215277994766909E-8	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999997960243218	WITHOUT_CLASSIFICATION	2.0397567821520867E-7	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999997943288992	WITHOUT_CLASSIFICATION	2.056711007512351E-7	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999999669418717	WITHOUT_CLASSIFICATION	3.3058128233430374E-8	TEST
// states	WITHOUT_CLASSIFICATION	0.999990081089238	WITHOUT_CLASSIFICATION	9.918910761934752E-6	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999987749416225	WITHOUT_CLASSIFICATION	1.2250583775197896E-6	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999997047141134	WITHOUT_CLASSIFICATION	2.952858865874117E-7	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999943859554	WITHOUT_CLASSIFICATION	5.614044534883583E-9	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999983046472828	WITHOUT_CLASSIFICATION	1.6953527171915256E-6	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999998087056425	WITHOUT_CLASSIFICATION	1.9129435749279558E-7	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999970922517349	WITHOUT_CLASSIFICATION	2.9077482651462675E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999898522156	WITHOUT_CLASSIFICATION	1.0147784441912735E-8	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999982020099836	WITHOUT_CLASSIFICATION	1.7979900163918014E-6	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999830620826	WITHOUT_CLASSIFICATION	1.6937917398400394E-8	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999988701063593	WITHOUT_CLASSIFICATION	1.1298936406892226E-6	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999946541822	WITHOUT_CLASSIFICATION	5.3458177279845245E-9	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.999999839585493	WITHOUT_CLASSIFICATION	1.6041450707241571E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999303201822	WITHOUT_CLASSIFICATION	6.967981774759807E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999303201822	WITHOUT_CLASSIFICATION	6.967981774759807E-8	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999997399305631	WITHOUT_CLASSIFICATION	2.600694368984587E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999996606728289	WITHOUT_CLASSIFICATION	3.3932717113070916E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999996606728289	WITHOUT_CLASSIFICATION	3.3932717113070916E-7	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999906913687	WITHOUT_CLASSIFICATION	9.308631321393826E-9	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999906913687	WITHOUT_CLASSIFICATION	9.308631321393826E-9	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999986320414308	WITHOUT_CLASSIFICATION	1.367958569098147E-6	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999572577064	WITHOUT_CLASSIFICATION	4.274229365698863E-8	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999968640525	WITHOUT_CLASSIFICATION	3.1359475222457902E-9	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999972419891754	WITHOUT_CLASSIFICATION	2.7580108245719603E-6	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.99999997939549	WITHOUT_CLASSIFICATION	2.060450993569952E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999988298712098	WITHOUT_CLASSIFICATION	1.1701287901618151E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999988298712098	WITHOUT_CLASSIFICATION	1.1701287901618151E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999898522156	WITHOUT_CLASSIFICATION	1.0147784441912735E-8	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999898522156	WITHOUT_CLASSIFICATION	1.0147784441912735E-8	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999898522156	WITHOUT_CLASSIFICATION	1.0147784441912735E-8	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999982020099836	WITHOUT_CLASSIFICATION	1.7979900163918014E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999303201822	WITHOUT_CLASSIFICATION	6.967981774759807E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999303201822	WITHOUT_CLASSIFICATION	6.967981774759807E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999303201822	WITHOUT_CLASSIFICATION	6.967981774759807E-8	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999986320414308	WITHOUT_CLASSIFICATION	1.367958569098147E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999986320414308	WITHOUT_CLASSIFICATION	1.367958569098147E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999986320414308	WITHOUT_CLASSIFICATION	1.367958569098147E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999972419891754	WITHOUT_CLASSIFICATION	2.7580108245719603E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999972419891754	WITHOUT_CLASSIFICATION	2.7580108245719603E-6	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999999838155237	WITHOUT_CLASSIFICATION	1.6184476269515436E-8	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999991716126588	WITHOUT_CLASSIFICATION	8.28387341172364E-7	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999994898684109	WITHOUT_CLASSIFICATION	5.101315890402161E-7	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.999482734490623	WITHOUT_CLASSIFICATION	5.172655093768991E-4	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999999424584661	WITHOUT_CLASSIFICATION	5.7541533951582634E-8	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999998176494962	WITHOUT_CLASSIFICATION	1.8235050375072725E-7	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999998176494962	WITHOUT_CLASSIFICATION	1.8235050375072725E-7	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999999719490124	WITHOUT_CLASSIFICATION	2.805098760050327E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.999963692801045	WITHOUT_CLASSIFICATION	3.630719895491193E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.999963692801045	WITHOUT_CLASSIFICATION	3.630719895491193E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.999963692801045	WITHOUT_CLASSIFICATION	3.630719895491193E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.999963692801045	WITHOUT_CLASSIFICATION	3.630719895491193E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.999963692801045	WITHOUT_CLASSIFICATION	3.630719895491193E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998128347943	WITHOUT_CLASSIFICATION	1.8716520565527549E-7	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998128347943	WITHOUT_CLASSIFICATION	1.8716520565527549E-7	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998128347943	WITHOUT_CLASSIFICATION	1.8716520565527549E-7	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999612256999	WITHOUT_CLASSIFICATION	3.8774300165944154E-8	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999997082370867	WITHOUT_CLASSIFICATION	2.9176291325604715E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999982020099836	WITHOUT_CLASSIFICATION	1.7979900163918014E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999986320414308	WITHOUT_CLASSIFICATION	1.367958569098147E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999986320414308	WITHOUT_CLASSIFICATION	1.367958569098147E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.999963692801045	WITHOUT_CLASSIFICATION	3.630719895491193E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.999963692801045	WITHOUT_CLASSIFICATION	3.630719895491193E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998128347943	WITHOUT_CLASSIFICATION	1.8716520565527549E-7	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999999719490124	WITHOUT_CLASSIFICATION	2.805098760050327E-7	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999976855898702	WITHOUT_CLASSIFICATION	2.31441012983491E-6	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999984538222715	WITHOUT_CLASSIFICATION	1.5461777285819135E-6	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999999669854246	WITHOUT_CLASSIFICATION	3.301457530139885E-8	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999998753325535	WITHOUT_CLASSIFICATION	1.2466744644416967E-7	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999994021738725	WITHOUT_CLASSIFICATION	5.978261274905498E-7	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999995669134011	WITHOUT_CLASSIFICATION	4.3308659885140964E-7	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999614742899716	WITHOUT_CLASSIFICATION	3.852571002837864E-5	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999996200752853	WITHOUT_CLASSIFICATION	3.799247147102577E-7	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999999750029882	WITHOUT_CLASSIFICATION	2.4997011816020718E-8	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999998308211945	WITHOUT_CLASSIFICATION	1.6917880550342357E-7	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999998935014767	WITHOUT_CLASSIFICATION	1.0649852327649629E-7	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999993832296785	WITHOUT_CLASSIFICATION	6.167703215556482E-7	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999997405126312	WITHOUT_CLASSIFICATION	2.594873688435322E-7	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999972148601335	WITHOUT_CLASSIFICATION	2.7851398665635973E-6	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999972349281983	WITHOUT_CLASSIFICATION	2.765071801854111E-6	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999999743620173	WITHOUT_CLASSIFICATION	2.563798275033562E-8	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999999971392204	WITHOUT_CLASSIFICATION	2.8607796989083776E-9	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999965719034772	WITHOUT_CLASSIFICATION	3.4280965227855893E-6	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999797276213361	WITHOUT_CLASSIFICATION	2.027237866381879E-5	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999941467371	WITHOUT_CLASSIFICATION	5.853262800663823E-9	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999988000447517	WITHOUT_CLASSIFICATION	1.1999552482835386E-6	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999995215850648	WITHOUT_CLASSIFICATION	4.784149352154707E-7	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999997421335077	WITHOUT_CLASSIFICATION	2.5786649226806724E-7	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999999939672315	WITHOUT_CLASSIFICATION	6.0327685532279234E-9	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999989576842356	WITHOUT_CLASSIFICATION	1.0423157643709335E-6	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999938379944128	WITHOUT_CLASSIFICATION	6.162005587186923E-6	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999997473617318	WITHOUT_CLASSIFICATION	2.5263826815837026E-7	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999211643674	WITHOUT_CLASSIFICATION	7.883563254857781E-8	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999999392368611	WITHOUT_CLASSIFICATION	6.076313896256958E-8	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.999999938597657	WITHOUT_CLASSIFICATION	6.140234295140936E-8	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999990167542088	WITHOUT_CLASSIFICATION	9.832457912208144E-7	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999747609445	WITHOUT_CLASSIFICATION	2.5239055579832976E-8	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999354310372	WITHOUT_CLASSIFICATION	6.456896278314796E-8	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999923325985	WITHOUT_CLASSIFICATION	7.667401465617635E-9	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999976855898702	WITHOUT_CLASSIFICATION	2.31441012983491E-6	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999799385042	WITHOUT_CLASSIFICATION	2.006149585202931E-8	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999998993280919	WITHOUT_CLASSIFICATION	1.0067190814540788E-7	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999940846903896	WITHOUT_CLASSIFICATION	5.9153096102966105E-6	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999996899736378	WITHOUT_CLASSIFICATION	3.100263622628519E-7	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999996899736378	WITHOUT_CLASSIFICATION	3.100263622628519E-7	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999994656439519	WITHOUT_CLASSIFICATION	5.343560480461545E-7	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999994656439519	WITHOUT_CLASSIFICATION	5.343560480461545E-7	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999991526782991	WITHOUT_CLASSIFICATION	8.473217009444963E-7	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999998861755577	WITHOUT_CLASSIFICATION	1.1382444230431913E-6	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999998719697444	WITHOUT_CLASSIFICATION	1.2803025570841366E-7	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999995981696247	WITHOUT_CLASSIFICATION	4.0183037523335316E-7	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999998792519738	WITHOUT_CLASSIFICATION	1.2074802626478865E-7	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999998326159113	WITHOUT_CLASSIFICATION	1.673840887258711E-7	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999691605327	WITHOUT_CLASSIFICATION	3.0839467315560135E-8	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999999587015234	WITHOUT_CLASSIFICATION	4.129847663483946E-8	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999993609844	WITHOUT_CLASSIFICATION	6.390156073146081E-10	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999991943565276	WITHOUT_CLASSIFICATION	8.056434724394191E-7	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999724489553	WITHOUT_CLASSIFICATION	2.7551044726889513E-8	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999957373892885	WITHOUT_CLASSIFICATION	4.2626107115645314E-6	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999957373892885	WITHOUT_CLASSIFICATION	4.2626107115645314E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999993019967465	WITHOUT_CLASSIFICATION	6.980032534706694E-7	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999983596114377	WITHOUT_CLASSIFICATION	1.640388562416844E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999994612805705	WITHOUT_CLASSIFICATION	5.387194296110428E-7	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999994612805705	WITHOUT_CLASSIFICATION	5.387194296110428E-7	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999980085188754	WITHOUT_CLASSIFICATION	1.9914811245978825E-6	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999964706587	WITHOUT_CLASSIFICATION	3.52934128286097E-9	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999980486089386	WITHOUT_CLASSIFICATION	1.9513910613602454E-6	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999998143300589	WITHOUT_CLASSIFICATION	1.8566994108567502E-7	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999998589564236	WITHOUT_CLASSIFICATION	1.4104357643716035E-7	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999976750272233	WITHOUT_CLASSIFICATION	2.3249727768067693E-6	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999995971472009	WITHOUT_CLASSIFICATION	4.028527991089286E-7	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999999615271122	WITHOUT_CLASSIFICATION	3.847288775066068E-8	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999946476407415	WITHOUT_CLASSIFICATION	5.352359258405826E-6	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999996076596632	WITHOUT_CLASSIFICATION	3.923403367931126E-7	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999996313825599	WITHOUT_CLASSIFICATION	3.686174400804843E-7	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9998776051928937	WITHOUT_CLASSIFICATION	1.2239480710637122E-4	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999999312330735	WITHOUT_CLASSIFICATION	6.876692652860055E-8	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999991722658761	WITHOUT_CLASSIFICATION	8.277341237912076E-7	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999997421137703	WITHOUT_CLASSIFICATION	2.578862296464641E-7	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999891813480004	WITHOUT_CLASSIFICATION	1.081865199953013E-5	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999999317293763	WITHOUT_CLASSIFICATION	6.827062378107166E-8	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999999720781992	WITHOUT_CLASSIFICATION	2.792180068600526E-8	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9998393995463815	WITHOUT_CLASSIFICATION	1.6060045361849482E-4	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999852732495	WITHOUT_CLASSIFICATION	1.4726750596017417E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9977519275917308	WITHOUT_CLASSIFICATION	0.0022480724082691726	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999999445506006	WITHOUT_CLASSIFICATION	5.544939939387693E-8	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999999618347702	WITHOUT_CLASSIFICATION	3.8165229766178195E-8	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999999492413864	WITHOUT_CLASSIFICATION	5.0758613659615907E-8	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999999615451228	WITHOUT_CLASSIFICATION	3.8454877126508625E-8	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999999975759079	WITHOUT_CLASSIFICATION	2.4240921487195628E-9	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.999999648973645	WITHOUT_CLASSIFICATION	3.5102635503679125E-7	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.999999101354004	WITHOUT_CLASSIFICATION	8.986459960551043E-7	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.999998996796692	WITHOUT_CLASSIFICATION	1.0032033080735431E-6	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999996084569097	WITHOUT_CLASSIFICATION	3.915430903959631E-7	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999675312762	WITHOUT_CLASSIFICATION	3.2468723814360907E-8	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999024743426	WITHOUT_CLASSIFICATION	9.752565738855943E-8	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999832261145	WITHOUT_CLASSIFICATION	1.6773885462206214E-8	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999850499967	WITHOUT_CLASSIFICATION	1.4950003301350744E-8	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999850499967	WITHOUT_CLASSIFICATION	1.4950003301350744E-8	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.999999962988515	WITHOUT_CLASSIFICATION	3.701148489662234E-8	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.999999997264421	WITHOUT_CLASSIFICATION	2.7355789308742395E-9	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999184211879183	WITHOUT_CLASSIFICATION	8.15788120817235E-5	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999992867094303	WITHOUT_CLASSIFICATION	7.132905696679164E-7	TEST
// Block	WITHOUT_CLASSIFICATION	0.9999982710041813	WITHOUT_CLASSIFICATION	1.7289958187570473E-6	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999997491685819	WITHOUT_CLASSIFICATION	2.508314180726738E-7	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.999939513253013	WITHOUT_CLASSIFICATION	6.048674698705166E-5	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.999928103354419	WITHOUT_CLASSIFICATION	7.189664558100763E-5	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999396077054069	WITHOUT_CLASSIFICATION	6.0392294593109496E-5	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999967707288959	WITHOUT_CLASSIFICATION	3.2292711041404435E-6	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999355772807	WITHOUT_CLASSIFICATION	6.442271929491118E-8	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999934191065887	WITHOUT_CLASSIFICATION	6.5808934113106865E-6	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999401155236125	WITHOUT_CLASSIFICATION	5.988447638745789E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999945824112368	WITHOUT_CLASSIFICATION	5.417588763137218E-6	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999999641822908	WITHOUT_CLASSIFICATION	3.58177093367417E-8	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999998545202056	WITHOUT_CLASSIFICATION	1.4547979442423338E-7	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999998990936788	WITHOUT_CLASSIFICATION	1.00906321231965E-7	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999999120928358	WITHOUT_CLASSIFICATION	8.790716423818551E-8	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999995491137355	WITHOUT_CLASSIFICATION	4.508862645989346E-7	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999986870882898	WITHOUT_CLASSIFICATION	1.3129117102071788E-6	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999988771573656	WITHOUT_CLASSIFICATION	1.1228426344810513E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999997091187182	WITHOUT_CLASSIFICATION	2.908812818027428E-6	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999997915643691	WITHOUT_CLASSIFICATION	2.0843563081749366E-7	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999995931749159	WITHOUT_CLASSIFICATION	4.068250840886239E-7	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999983226422448	WITHOUT_CLASSIFICATION	1.6773577553417524E-6	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.999999787437721	WITHOUT_CLASSIFICATION	2.1256227895767302E-7	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999785016335	WITHOUT_CLASSIFICATION	2.149836647064613E-8	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999964103108027	WITHOUT_CLASSIFICATION	3.5896891973636764E-6	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999981024202984	WITHOUT_CLASSIFICATION	1.8975797016988183E-6	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999997155755784	WITHOUT_CLASSIFICATION	2.844244215773727E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999393562020062	WITHOUT_CLASSIFICATION	6.0643797993753544E-5	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9944830445988592	WITHOUT_CLASSIFICATION	0.005516955401140766	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999988950867301	WITHOUT_CLASSIFICATION	1.1049132698981353E-6	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999993129939775	WITHOUT_CLASSIFICATION	6.870060225052041E-7	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999992494281861	WITHOUT_CLASSIFICATION	7.505718140513793E-7	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9997593999957761	WITHOUT_CLASSIFICATION	2.4060000422395188E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999925322204612	WITHOUT_CLASSIFICATION	7.467779538688569E-6	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999996768562339	WITHOUT_CLASSIFICATION	3.231437660106622E-7	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999998530753426	WITHOUT_CLASSIFICATION	1.4692465737429039E-7	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999998204726763	WITHOUT_CLASSIFICATION	1.7952732361072838E-7	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999998588824087	WITHOUT_CLASSIFICATION	1.4111759131217866E-7	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999997933029815	WITHOUT_CLASSIFICATION	2.0669701851588857E-7	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999997933029815	WITHOUT_CLASSIFICATION	2.0669701851588857E-7	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.99999953598329	WITHOUT_CLASSIFICATION	4.640167099602341E-7	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999996064970282	WITHOUT_CLASSIFICATION	3.935029717505315E-7	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999989820978429	WITHOUT_CLASSIFICATION	1.0179021571501352E-6	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.999999781286045	WITHOUT_CLASSIFICATION	2.1871395498895088E-7	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999984553695962	WITHOUT_CLASSIFICATION	1.544630403758142E-6	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.999999986698117	WITHOUT_CLASSIFICATION	1.330188298483094E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999395815755	WITHOUT_CLASSIFICATION	6.041842447168375E-8	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999999768042342	WITHOUT_CLASSIFICATION	2.3195765650476387E-8	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999992892038257	WITHOUT_CLASSIFICATION	7.10796174359101E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999950886479	WITHOUT_CLASSIFICATION	4.911352080015779E-9	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999920660436584	WITHOUT_CLASSIFICATION	7.933956341602887E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.999999864311039	WITHOUT_CLASSIFICATION	1.356889609562977E-7	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999994959925239	WITHOUT_CLASSIFICATION	5.040074760194153E-7	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999999288129962	WITHOUT_CLASSIFICATION	7.118700393287109E-8	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999938322314	WITHOUT_CLASSIFICATION	6.167768586562134E-9	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999883763454662	WITHOUT_CLASSIFICATION	1.162365453378818E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999904802301	WITHOUT_CLASSIFICATION	9.519769863857357E-9	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999904550201957	WITHOUT_CLASSIFICATION	9.544979804238805E-6	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999875377995	WITHOUT_CLASSIFICATION	1.2462200443246983E-8	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999944787120258	WITHOUT_CLASSIFICATION	5.521287974078901E-6	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999993478117811	WITHOUT_CLASSIFICATION	6.521882188770963E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.99999823305949	WITHOUT_CLASSIFICATION	1.7669405099533685E-6	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999996577513	WITHOUT_CLASSIFICATION	3.4224865219393643E-10	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999999392161523	WITHOUT_CLASSIFICATION	6.078384778837573E-8	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998772974442	WITHOUT_CLASSIFICATION	1.2270255579672807E-7	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.999989348614068	WITHOUT_CLASSIFICATION	1.0651385932147512E-5	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999990654839271	WITHOUT_CLASSIFICATION	9.345160728164063E-7	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999992568726663	WITHOUT_CLASSIFICATION	7.431273336432732E-7	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999998589653015	WITHOUT_CLASSIFICATION	1.4103469853392977E-7	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999995479820981	WITHOUT_CLASSIFICATION	4.5201790192024375E-7	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999998480423786	WITHOUT_CLASSIFICATION	1.5195762148326765E-7	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999914911566	WITHOUT_CLASSIFICATION	8.50884348394129E-9	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999995479820981	WITHOUT_CLASSIFICATION	4.5201790192024375E-7	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999707473402064	WITHOUT_CLASSIFICATION	2.925265979361273E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999977689425294	WITHOUT_CLASSIFICATION	2.231057470603573E-5	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999998671015484	WITHOUT_CLASSIFICATION	1.3289845160049215E-7	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.999233195410187	WITHOUT_CLASSIFICATION	7.668045898131619E-4	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999992227540253	WITHOUT_CLASSIFICATION	7.772459747208316E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999977239032114	WITHOUT_CLASSIFICATION	2.2760967886483613E-6	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999995759987844	WITHOUT_CLASSIFICATION	4.2400121555848265E-7	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999953264270253	WITHOUT_CLASSIFICATION	4.67357297473563E-6	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999983082626079	WITHOUT_CLASSIFICATION	1.6917373919511647E-6	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999852732495	WITHOUT_CLASSIFICATION	1.4726750596017417E-8	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999994898684109	WITHOUT_CLASSIFICATION	5.101315890402161E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999996105946308	WITHOUT_CLASSIFICATION	3.8940536915801836E-7	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999988796216934	WITHOUT_CLASSIFICATION	1.1203783065423262E-6	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999999330687316	WITHOUT_CLASSIFICATION	6.693126845948408E-8	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999858617271734	WITHOUT_CLASSIFICATION	1.4138272826644466E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999986587734937	WITHOUT_CLASSIFICATION	1.341226506228457E-6	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999304226691687	WITHOUT_CLASSIFICATION	6.957733083127362E-5	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.999999884441776	WITHOUT_CLASSIFICATION	1.1555822403168892E-7	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999997584481691	WITHOUT_CLASSIFICATION	2.4155183080549086E-7	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999998387680954	WITHOUT_CLASSIFICATION	1.6123190450588452E-7	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999978561494575	WITHOUT_CLASSIFICATION	2.1438505425385803E-6	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999971603176333	WITHOUT_CLASSIFICATION	2.8396823666307895E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999997457161799	WITHOUT_CLASSIFICATION	2.5428382011806693E-7	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999998242878064	WITHOUT_CLASSIFICATION	1.7571219366404981E-7	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999997342310417	WITHOUT_CLASSIFICATION	2.657689582182229E-7	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999988466014936	WITHOUT_CLASSIFICATION	1.153398506383119E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999992315779337	WITHOUT_CLASSIFICATION	7.684220662711508E-7	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999678877709	WITHOUT_CLASSIFICATION	3.2112229164744216E-8	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999998386713842	WITHOUT_CLASSIFICATION	1.6132861584147488E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999996229434948	WITHOUT_CLASSIFICATION	3.7705650524469653E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999996229434948	WITHOUT_CLASSIFICATION	3.7705650524469653E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999997702458607	WITHOUT_CLASSIFICATION	2.2975413930680844E-7	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999903904848	WITHOUT_CLASSIFICATION	9.60951508008052E-9	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999979340918	WITHOUT_CLASSIFICATION	2.0659081074168945E-9	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9969576890209375	WITHOUT_CLASSIFICATION	0.0030423109790626087	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9969576890209375	WITHOUT_CLASSIFICATION	0.0030423109790626087	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9969576890209375	WITHOUT_CLASSIFICATION	0.0030423109790626087	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9969576890209375	WITHOUT_CLASSIFICATION	0.0030423109790626087	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999999397204147	WITHOUT_CLASSIFICATION	6.027958530040637E-8	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999997924169494	WITHOUT_CLASSIFICATION	2.0758305054472264E-7	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999992014480196	WITHOUT_CLASSIFICATION	7.985519804261207E-7	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999975832316514	WITHOUT_CLASSIFICATION	2.4167683484896594E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999400109549	WITHOUT_CLASSIFICATION	5.9989045063782E-8	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999649584324596	WITHOUT_CLASSIFICATION	3.5041567540446516E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999880433114829	WITHOUT_CLASSIFICATION	1.1956688517024487E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999880433114829	WITHOUT_CLASSIFICATION	1.1956688517024487E-5	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999648763054	WITHOUT_CLASSIFICATION	3.5123694561096686E-8	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9999586306831655	WITHOUT_CLASSIFICATION	4.136931683452278E-5	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999993090459743	WITHOUT_CLASSIFICATION	6.909540257296917E-7	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9998796423800143	WITHOUT_CLASSIFICATION	1.2035761998571775E-4	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999997321246543	WITHOUT_CLASSIFICATION	2.678753456792353E-7	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999998285797904	WITHOUT_CLASSIFICATION	1.714202096134315E-7	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999998852951454	WITHOUT_CLASSIFICATION	1.1470485463117026E-7	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999940789934287	WITHOUT_CLASSIFICATION	5.921006571191392E-6	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999597305300155	WITHOUT_CLASSIFICATION	4.026946998444844E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999597305300155	WITHOUT_CLASSIFICATION	4.026946998444844E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999914911566	WITHOUT_CLASSIFICATION	8.50884348394129E-9	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999991731156016	WITHOUT_CLASSIFICATION	8.268843984462267E-7	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999992133175846	WITHOUT_CLASSIFICATION	7.866824154838203E-7	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999995732647475	WITHOUT_CLASSIFICATION	4.267352524837957E-7	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999984682166253	WITHOUT_CLASSIFICATION	1.5317833745759366E-6	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9999634811131757	WITHOUT_CLASSIFICATION	3.6518886824306744E-5	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999987695536214	WITHOUT_CLASSIFICATION	1.2304463785205083E-6	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999997569251604	WITHOUT_CLASSIFICATION	2.430748396615092E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999997110720137	WITHOUT_CLASSIFICATION	2.889279863208299E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999997110720137	WITHOUT_CLASSIFICATION	2.889279863208299E-7	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999998747634858	WITHOUT_CLASSIFICATION	1.2523651413027137E-7	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.999999999805157	WITHOUT_CLASSIFICATION	1.9484298833330585E-10	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9998942934215383	WITHOUT_CLASSIFICATION	1.0570657846166731E-4	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999995133618322	WITHOUT_CLASSIFICATION	4.866381678026109E-7	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999999302674899	WITHOUT_CLASSIFICATION	6.973251000204786E-8	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.99996175412375	WITHOUT_CLASSIFICATION	3.8245876250042256E-5	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999999266924917	WITHOUT_CLASSIFICATION	7.33075082255918E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999550745913	WITHOUT_CLASSIFICATION	4.492540878614248E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999550745913	WITHOUT_CLASSIFICATION	4.492540878614248E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999550745913	WITHOUT_CLASSIFICATION	4.492540878614248E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999550745913	WITHOUT_CLASSIFICATION	4.492540878614248E-8	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999900337909	WITHOUT_CLASSIFICATION	9.966208988616061E-9	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999996983746225	WITHOUT_CLASSIFICATION	3.016253774052175E-7	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999763396618545	WITHOUT_CLASSIFICATION	2.3660338145458463E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999986512468454	WITHOUT_CLASSIFICATION	1.3487531545956096E-6	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999991250521373	WITHOUT_CLASSIFICATION	8.749478627367714E-7	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.9999426513370672	WITHOUT_CLASSIFICATION	5.73486629328866E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999997330779804	WITHOUT_CLASSIFICATION	2.6692201960575024E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999977982714078	WITHOUT_CLASSIFICATION	2.201728592283725E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999977982714078	WITHOUT_CLASSIFICATION	2.201728592283725E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999977982714078	WITHOUT_CLASSIFICATION	2.201728592283725E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999997804874139	WITHOUT_CLASSIFICATION	2.1951258607875423E-7	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.999999964974923	WITHOUT_CLASSIFICATION	3.502507691094656E-8	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999992447328093	WITHOUT_CLASSIFICATION	7.552671907878048E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999992447328093	WITHOUT_CLASSIFICATION	7.552671907878048E-7	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.999995985487678	WITHOUT_CLASSIFICATION	4.014512321978056E-6	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999999980727	WITHOUT_CLASSIFICATION	1.9273811271009055E-12	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999988393239508	WITHOUT_CLASSIFICATION	1.1606760490811201E-6	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.999994604878016	WITHOUT_CLASSIFICATION	5.395121984078679E-6	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999771301982	WITHOUT_CLASSIFICATION	2.2869801777366077E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999998747298989	WITHOUT_CLASSIFICATION	1.2527010113930905E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999990404410861	WITHOUT_CLASSIFICATION	9.595589138812626E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999990404410861	WITHOUT_CLASSIFICATION	9.595589138812626E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999996075584164	WITHOUT_CLASSIFICATION	3.924415835742343E-7	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999468410153	WITHOUT_CLASSIFICATION	5.3158984594545927E-8	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999393146901	WITHOUT_CLASSIFICATION	6.068530993813092E-8	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.999998611800273	WITHOUT_CLASSIFICATION	1.388199726986735E-6	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999994026089614	WITHOUT_CLASSIFICATION	5.973910385938093E-7	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999667879644	WITHOUT_CLASSIFICATION	3.321203563140239E-8	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999999552988634	WITHOUT_CLASSIFICATION	4.470113669021252E-8	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999789291847068	WITHOUT_CLASSIFICATION	2.1070815293149513E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999973126590845	WITHOUT_CLASSIFICATION	2.6873409155614964E-6	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999474592016	WITHOUT_CLASSIFICATION	5.2540798443676025E-8	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999998524123427	WITHOUT_CLASSIFICATION	1.4758765737959052E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999938547824	WITHOUT_CLASSIFICATION	6.1452175676516575E-9	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999996470422813	WITHOUT_CLASSIFICATION	3.529577188281472E-7	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999993138848334	WITHOUT_CLASSIFICATION	6.861151665376858E-7	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999504861132	WITHOUT_CLASSIFICATION	4.951388672673997E-8	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999999971677227	WITHOUT_CLASSIFICATION	2.832277342507314E-9	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999998565750796	WITHOUT_CLASSIFICATION	1.4342492038500027E-7	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999375191125	WITHOUT_CLASSIFICATION	6.24808874700907E-8	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999886944387	WITHOUT_CLASSIFICATION	1.1305561300756944E-8	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.999999970164847	WITHOUT_CLASSIFICATION	2.983515312799456E-8	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999880285609	WITHOUT_CLASSIFICATION	1.197143897505957E-8	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999693615162	WITHOUT_CLASSIFICATION	3.063848375079151E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999729371375	WITHOUT_CLASSIFICATION	2.7062862541583577E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999729371375	WITHOUT_CLASSIFICATION	2.7062862541583577E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999729371375	WITHOUT_CLASSIFICATION	2.7062862541583577E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999729371375	WITHOUT_CLASSIFICATION	2.7062862541583577E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999729371375	WITHOUT_CLASSIFICATION	2.7062862541583577E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999729371375	WITHOUT_CLASSIFICATION	2.7062862541583577E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999729371375	WITHOUT_CLASSIFICATION	2.7062862541583577E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999729371375	WITHOUT_CLASSIFICATION	2.7062862541583577E-8	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999907703017	WITHOUT_CLASSIFICATION	9.229698315167843E-9	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999875461753253	WITHOUT_CLASSIFICATION	1.2453824674666797E-5	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.999992036031064	WITHOUT_CLASSIFICATION	7.963968936034498E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999999881571341	WITHOUT_CLASSIFICATION	1.1842865898888555E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999395815755	WITHOUT_CLASSIFICATION	6.041842447168375E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999395815755	WITHOUT_CLASSIFICATION	6.041842447168375E-8	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999991882067609	WITHOUT_CLASSIFICATION	8.117932389899033E-7	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999998667785462	WITHOUT_CLASSIFICATION	1.3322145385457742E-7	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999998036716387	WITHOUT_CLASSIFICATION	1.9632836128373573E-7	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999963415459865	WITHOUT_CLASSIFICATION	3.658454013614386E-6	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999997285594204	WITHOUT_CLASSIFICATION	2.7144057961611375E-7	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999997189137669	WITHOUT_CLASSIFICATION	2.8108623305774523E-7	TEST
// read	WITHOUT_CLASSIFICATION	0.9999989423791644	WITHOUT_CLASSIFICATION	1.0576208356176167E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999996168454693	WITHOUT_CLASSIFICATION	3.831545306248957E-7	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999992972417068	WITHOUT_CLASSIFICATION	7.027582932225991E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999069019322	WITHOUT_CLASSIFICATION	9.30980677251148E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999069019322	WITHOUT_CLASSIFICATION	9.30980677251148E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999069019322	WITHOUT_CLASSIFICATION	9.30980677251148E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999159761816488	WITHOUT_CLASSIFICATION	8.402381835112892E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999159761816488	WITHOUT_CLASSIFICATION	8.402381835112892E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999159761816488	WITHOUT_CLASSIFICATION	8.402381835112892E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999159761816488	WITHOUT_CLASSIFICATION	8.402381835112892E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999159761816488	WITHOUT_CLASSIFICATION	8.402381835112892E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999159761816488	WITHOUT_CLASSIFICATION	8.402381835112892E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999159761816488	WITHOUT_CLASSIFICATION	8.402381835112892E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999159761816488	WITHOUT_CLASSIFICATION	8.402381835112892E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999159761816488	WITHOUT_CLASSIFICATION	8.402381835112892E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999430813078	WITHOUT_CLASSIFICATION	5.691869227016789E-8	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999993288826451	WITHOUT_CLASSIFICATION	6.711173549664721E-7	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999937443662686	WITHOUT_CLASSIFICATION	6.2556337312715625E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999995010627725	WITHOUT_CLASSIFICATION	4.9893722754964E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999159761816488	WITHOUT_CLASSIFICATION	8.402381835112892E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999159761816488	WITHOUT_CLASSIFICATION	8.402381835112892E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999159761816488	WITHOUT_CLASSIFICATION	8.402381835112892E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999223126836	WITHOUT_CLASSIFICATION	7.768731633030899E-8	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999971811294167	WITHOUT_CLASSIFICATION	2.8188705832607514E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999999955381736	WITHOUT_CLASSIFICATION	4.461826378010139E-9	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999998523911958	WITHOUT_CLASSIFICATION	1.4760880409586477E-7	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999998523911958	WITHOUT_CLASSIFICATION	1.4760880409586477E-7	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999995533407705	WITHOUT_CLASSIFICATION	4.4665922953266976E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999999460176793	WITHOUT_CLASSIFICATION	5.3982320734391584E-8	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999643653791	WITHOUT_CLASSIFICATION	3.563462095364685E-8	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999996476535656	WITHOUT_CLASSIFICATION	3.5234643431192717E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999996484560942	WITHOUT_CLASSIFICATION	3.5154390572234976E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999996484560942	WITHOUT_CLASSIFICATION	3.5154390572234976E-7	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999995480426256	WITHOUT_CLASSIFICATION	4.519573743155179E-7	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999052115884	WITHOUT_CLASSIFICATION	9.478841155473214E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999967665154821	WITHOUT_CLASSIFICATION	3.233484518006215E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999137954085925	WITHOUT_CLASSIFICATION	8.620459140752577E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999137954085925	WITHOUT_CLASSIFICATION	8.620459140752577E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999137954085925	WITHOUT_CLASSIFICATION	8.620459140752577E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999999116156835	WITHOUT_CLASSIFICATION	8.838431648136647E-8	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998854353184	WITHOUT_CLASSIFICATION	1.1456468161677253E-7	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998854353184	WITHOUT_CLASSIFICATION	1.1456468161677253E-7	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999998975491461	WITHOUT_CLASSIFICATION	1.0245085397822501E-7	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999998975491461	WITHOUT_CLASSIFICATION	1.0245085397822501E-7	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999997659871622	WITHOUT_CLASSIFICATION	2.3401283765678833E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999999947291865	WITHOUT_CLASSIFICATION	5.2708134998632046E-8	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999997397130554	WITHOUT_CLASSIFICATION	2.602869445110313E-7	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999945946280542	WITHOUT_CLASSIFICATION	5.405371945804725E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.99999806434737	WITHOUT_CLASSIFICATION	1.93565263000505E-6	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999998834671009	WITHOUT_CLASSIFICATION	1.1653289914306672E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999906871423	WITHOUT_CLASSIFICATION	9.312857669704313E-9	TEST
// block	WITHOUT_CLASSIFICATION	0.9999988298712098	WITHOUT_CLASSIFICATION	1.1701287901618151E-6	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999990723275911	WITHOUT_CLASSIFICATION	9.276724090171017E-7	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.99999994076334	WITHOUT_CLASSIFICATION	5.923666005002585E-8	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999157837989958	WITHOUT_CLASSIFICATION	8.421620100426688E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999991788420644	WITHOUT_CLASSIFICATION	8.211579357459056E-7	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999992427362503	WITHOUT_CLASSIFICATION	7.572637496790619E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999997660738441	WITHOUT_CLASSIFICATION	2.339261558389959E-7	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999943812075	WITHOUT_CLASSIFICATION	5.6187925067360326E-9	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999992803959356	WITHOUT_CLASSIFICATION	7.196040643968442E-7	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999957055613303	WITHOUT_CLASSIFICATION	4.294438669679351E-6	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999977286212	WITHOUT_CLASSIFICATION	2.271378750323062E-9	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999486573516714	WITHOUT_CLASSIFICATION	5.13426483287013E-5	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999991787493178	WITHOUT_CLASSIFICATION	8.212506821751002E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999996105946308	WITHOUT_CLASSIFICATION	3.8940536915801836E-7	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9997930350051142	WITHOUT_CLASSIFICATION	2.0696499488578963E-4	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999996589803206	WITHOUT_CLASSIFICATION	3.4101967935645356E-7	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999999960075291	WITHOUT_CLASSIFICATION	3.992471000111433E-9	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999998391506681	WITHOUT_CLASSIFICATION	1.608493317426217E-7	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999950255841272	WITHOUT_CLASSIFICATION	4.974415872823572E-6	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999894021480599	WITHOUT_CLASSIFICATION	1.0597851940117933E-5	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999996707920834	WITHOUT_CLASSIFICATION	3.2920791657161794E-7	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999996981724015	WITHOUT_CLASSIFICATION	3.01827598435915E-7	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999993070138	WITHOUT_CLASSIFICATION	6.929862361233168E-10	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999993271085853	WITHOUT_CLASSIFICATION	6.728914147891294E-7	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999610174146	WITHOUT_CLASSIFICATION	3.89825853886043E-8	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999993153839594	WITHOUT_CLASSIFICATION	6.84616040735275E-7	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.999999977938082	WITHOUT_CLASSIFICATION	2.206191788301114E-8	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.99999984191554	WITHOUT_CLASSIFICATION	1.5808445988920547E-7	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9998592642194433	WITHOUT_CLASSIFICATION	1.407357805566938E-4	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.999999571169382	WITHOUT_CLASSIFICATION	4.2883061807599445E-7	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999999346864497	WITHOUT_CLASSIFICATION	6.531355038747541E-8	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999983623063506	WITHOUT_CLASSIFICATION	1.637693649313294E-6	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999888320783	WITHOUT_CLASSIFICATION	1.116792172172238E-8	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999998865332176	WITHOUT_CLASSIFICATION	1.134667825020395E-7	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999996245234047	WITHOUT_CLASSIFICATION	3.7547659533725957E-7	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999864648547149	WITHOUT_CLASSIFICATION	1.3535145285168585E-5	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999512731117	WITHOUT_CLASSIFICATION	4.872688834323668E-8	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999997067872726	WITHOUT_CLASSIFICATION	2.9321272744686966E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999867341776569	WITHOUT_CLASSIFICATION	1.3265822343043957E-5	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999999328182672	WITHOUT_CLASSIFICATION	6.718173285829669E-8	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999985321344	WITHOUT_CLASSIFICATION	1.467865652182996E-9	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999998739417983	WITHOUT_CLASSIFICATION	1.2605820157664157E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999747625465649	WITHOUT_CLASSIFICATION	2.5237453435125143E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.999999985520556	WITHOUT_CLASSIFICATION	1.4479443887922595E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999301794367	WITHOUT_CLASSIFICATION	6.982056331438224E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999301794367	WITHOUT_CLASSIFICATION	6.982056331438224E-8	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999022422347	WITHOUT_CLASSIFICATION	9.775776530867031E-8	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999022422347	WITHOUT_CLASSIFICATION	9.775776530867031E-8	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999561096112488	WITHOUT_CLASSIFICATION	4.3890388751214035E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999561096112488	WITHOUT_CLASSIFICATION	4.3890388751214035E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.99999946606839	WITHOUT_CLASSIFICATION	5.339316100501994E-7	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.99999946606839	WITHOUT_CLASSIFICATION	5.339316100501994E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998450909846	WITHOUT_CLASSIFICATION	1.5490901539520305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998450909846	WITHOUT_CLASSIFICATION	1.5490901539520305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998450909846	WITHOUT_CLASSIFICATION	1.5490901539520305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998450909846	WITHOUT_CLASSIFICATION	1.5490901539520305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998450909846	WITHOUT_CLASSIFICATION	1.5490901539520305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998450909846	WITHOUT_CLASSIFICATION	1.5490901539520305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998450909846	WITHOUT_CLASSIFICATION	1.5490901539520305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998450909846	WITHOUT_CLASSIFICATION	1.5490901539520305E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998450909846	WITHOUT_CLASSIFICATION	1.5490901539520305E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999997783027557	WITHOUT_CLASSIFICATION	2.2169724426435857E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999997783027557	WITHOUT_CLASSIFICATION	2.2169724426435857E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999997783027557	WITHOUT_CLASSIFICATION	2.2169724426435857E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.999999617586716	WITHOUT_CLASSIFICATION	3.824132840149905E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998361184197	WITHOUT_CLASSIFICATION	1.6388158034827866E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998361184197	WITHOUT_CLASSIFICATION	1.6388158034827866E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998361184197	WITHOUT_CLASSIFICATION	1.6388158034827866E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999992777897501	WITHOUT_CLASSIFICATION	7.222102500594457E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999992777897501	WITHOUT_CLASSIFICATION	7.222102500594457E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999992777897501	WITHOUT_CLASSIFICATION	7.222102500594457E-7	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.99998023039198	WITHOUT_CLASSIFICATION	1.9769608019995703E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999997427513494	WITHOUT_CLASSIFICATION	2.572486506145087E-7	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999884260632067	WITHOUT_CLASSIFICATION	1.1573936793282294E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999883957766748	WITHOUT_CLASSIFICATION	1.1604223325227554E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999883957766748	WITHOUT_CLASSIFICATION	1.1604223325227554E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999883957766748	WITHOUT_CLASSIFICATION	1.1604223325227554E-5	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999982555496532	WITHOUT_CLASSIFICATION	1.7444503468173248E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.999998626836652	WITHOUT_CLASSIFICATION	1.3731633480106253E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.999998626836652	WITHOUT_CLASSIFICATION	1.3731633480106253E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999987148214119	WITHOUT_CLASSIFICATION	1.2851785880395224E-6	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997949116334	WITHOUT_CLASSIFICATION	2.0508836665318334E-7	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997949116334	WITHOUT_CLASSIFICATION	2.0508836665318334E-7	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9914110276684813	WITHOUT_CLASSIFICATION	0.008588972331518731	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999753033650063	WITHOUT_CLASSIFICATION	2.4696634993637708E-5	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999994231658627	WITHOUT_CLASSIFICATION	5.768341373062062E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999989712522267	WITHOUT_CLASSIFICATION	1.0287477732722408E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999989712522267	WITHOUT_CLASSIFICATION	1.0287477732722408E-6	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999998170712269	WITHOUT_CLASSIFICATION	1.8292877317714445E-7	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999982658371566	WITHOUT_CLASSIFICATION	1.7341628434659347E-6	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999983268212569	WITHOUT_CLASSIFICATION	1.6731787431007033E-6	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999999588202294	WITHOUT_CLASSIFICATION	4.1179770524876805E-8	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999993156226807	WITHOUT_CLASSIFICATION	6.843773192571381E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999989712522267	WITHOUT_CLASSIFICATION	1.0287477732722408E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999989712522267	WITHOUT_CLASSIFICATION	1.0287477732722408E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999989712522267	WITHOUT_CLASSIFICATION	1.0287477732722408E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999989712522267	WITHOUT_CLASSIFICATION	1.0287477732722408E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999989712522267	WITHOUT_CLASSIFICATION	1.0287477732722408E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999999501172937	WITHOUT_CLASSIFICATION	4.988270643297909E-8	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999998442196872	WITHOUT_CLASSIFICATION	1.5578031265303488E-7	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999766501823	WITHOUT_CLASSIFICATION	2.3349817695831232E-8	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999996068851785	WITHOUT_CLASSIFICATION	3.931148215692397E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999538162342	WITHOUT_CLASSIFICATION	4.61837658451049E-8	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999997181536356	WITHOUT_CLASSIFICATION	2.8184636428449697E-7	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999755713484434	WITHOUT_CLASSIFICATION	2.4428651556711308E-5	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999993195964577	WITHOUT_CLASSIFICATION	6.804035423484964E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998254440011	WITHOUT_CLASSIFICATION	1.745559988699628E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999995223045137	WITHOUT_CLASSIFICATION	4.776954862975246E-7	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999998205520205	WITHOUT_CLASSIFICATION	1.7944797939076707E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.99999823305949	WITHOUT_CLASSIFICATION	1.7669405099533685E-6	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999998340969257	WITHOUT_CLASSIFICATION	1.6590307422060293E-7	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999992902568005	WITHOUT_CLASSIFICATION	7.097431994951152E-7	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999999955650283	WITHOUT_CLASSIFICATION	4.43497171467788E-9	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999998393843045	WITHOUT_CLASSIFICATION	1.606156954734833E-7	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999998008520455	WITHOUT_CLASSIFICATION	1.99147954559419E-7	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999978438829	WITHOUT_CLASSIFICATION	2.156117073571497E-9	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999999028108766	WITHOUT_CLASSIFICATION	9.718912339017519E-8	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999984292295305	WITHOUT_CLASSIFICATION	1.570770469467328E-6	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999710153770154	WITHOUT_CLASSIFICATION	2.8984622984636886E-5	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999990740514444	WITHOUT_CLASSIFICATION	9.259485556520343E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999950886479	WITHOUT_CLASSIFICATION	4.911352080015779E-9	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999982027267021	WITHOUT_CLASSIFICATION	1.7972732979285319E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999982027267021	WITHOUT_CLASSIFICATION	1.7972732979285319E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999982027267021	WITHOUT_CLASSIFICATION	1.7972732979285319E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999982027267021	WITHOUT_CLASSIFICATION	1.7972732979285319E-6	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999997881752862	WITHOUT_CLASSIFICATION	2.1182471384984E-7	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999995383879378	WITHOUT_CLASSIFICATION	4.6161206223468385E-7	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999603576604	WITHOUT_CLASSIFICATION	3.964233959403853E-8	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999603576604	WITHOUT_CLASSIFICATION	3.964233959403853E-8	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999753839222	WITHOUT_CLASSIFICATION	2.4616077803829332E-8	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999993116927209	WITHOUT_CLASSIFICATION	6.883072790733537E-7	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999958101746337	WITHOUT_CLASSIFICATION	4.189825366314971E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999998499203919	WITHOUT_CLASSIFICATION	1.5007960810895995E-7	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999958656147452	WITHOUT_CLASSIFICATION	4.134385254811081E-6	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999996618295355	WITHOUT_CLASSIFICATION	3.381704645383105E-7	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999992882181282	WITHOUT_CLASSIFICATION	7.117818718679375E-7	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.99999674921358	WITHOUT_CLASSIFICATION	3.2507864199495555E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.99999674921358	WITHOUT_CLASSIFICATION	3.2507864199495555E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.99999674921358	WITHOUT_CLASSIFICATION	3.2507864199495555E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.99999674921358	WITHOUT_CLASSIFICATION	3.2507864199495555E-6	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999865337946	WITHOUT_CLASSIFICATION	1.3466205276292392E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999402660807	WITHOUT_CLASSIFICATION	5.973391930470006E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999402660807	WITHOUT_CLASSIFICATION	5.973391930470006E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999402660807	WITHOUT_CLASSIFICATION	5.973391930470006E-8	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999998551557274	WITHOUT_CLASSIFICATION	1.4484427251919176E-7	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999998368076076	WITHOUT_CLASSIFICATION	1.631923923526947E-7	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999997331029573	WITHOUT_CLASSIFICATION	2.668970426029576E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9969576890209375	WITHOUT_CLASSIFICATION	0.0030423109790626087	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9969576890209375	WITHOUT_CLASSIFICATION	0.0030423109790626087	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999993835309	WITHOUT_CLASSIFICATION	6.164690826042237E-10	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999998836557893	WITHOUT_CLASSIFICATION	1.1634421067878914E-7	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999981548463655	WITHOUT_CLASSIFICATION	1.8451536345976324E-6	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999981548463655	WITHOUT_CLASSIFICATION	1.8451536345976324E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999968920659117	WITHOUT_CLASSIFICATION	3.10793408832842E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999968920659117	WITHOUT_CLASSIFICATION	3.10793408832842E-6	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999998742550495	WITHOUT_CLASSIFICATION	1.257449505301595E-7	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999997707903739	WITHOUT_CLASSIFICATION	2.292096261699338E-7	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.999999428671784	WITHOUT_CLASSIFICATION	5.71328215835154E-7	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.999989196210088	WITHOUT_CLASSIFICATION	1.0803789912046581E-5	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999844693048983	WITHOUT_CLASSIFICATION	1.5530695101708115E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999997745228807	WITHOUT_CLASSIFICATION	2.2547711940567344E-7	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999998860856937	WITHOUT_CLASSIFICATION	1.1391430635365323E-7	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.999998181300982	WITHOUT_CLASSIFICATION	1.818699018013176E-6	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999922489339664	WITHOUT_CLASSIFICATION	7.751066033552598E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999833788199	WITHOUT_CLASSIFICATION	1.662118010767835E-8	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999833788199	WITHOUT_CLASSIFICATION	1.662118010767835E-8	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999999875010292	WITHOUT_CLASSIFICATION	1.2498970815209512E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999999875010292	WITHOUT_CLASSIFICATION	1.2498970815209512E-7	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999999865995601	WITHOUT_CLASSIFICATION	1.3400439802592964E-8	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999263031907	WITHOUT_CLASSIFICATION	7.369680940392691E-8	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999764448682396	WITHOUT_CLASSIFICATION	2.3555131760564228E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999968712859784	WITHOUT_CLASSIFICATION	3.12871402154678E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999968712859784	WITHOUT_CLASSIFICATION	3.12871402154678E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999968712859784	WITHOUT_CLASSIFICATION	3.12871402154678E-6	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999990733727547	WITHOUT_CLASSIFICATION	9.266272451632923E-7	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999993054198978	WITHOUT_CLASSIFICATION	6.945801022167561E-7	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999991479154169	WITHOUT_CLASSIFICATION	8.52084583177202E-7	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999988918949221	WITHOUT_CLASSIFICATION	1.1081050778948517E-6	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999989937098513	WITHOUT_CLASSIFICATION	1.0062901487113493E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999990403439089	WITHOUT_CLASSIFICATION	9.596560912037815E-7	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999993712246483	WITHOUT_CLASSIFICATION	6.287753515895419E-7	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999994616147709	WITHOUT_CLASSIFICATION	5.383852289828688E-7	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999999680313789	WITHOUT_CLASSIFICATION	3.196862105185656E-8	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999657482377	WITHOUT_CLASSIFICATION	3.4251762310661633E-8	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999993557723674	WITHOUT_CLASSIFICATION	6.442276324984465E-7	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999998674287555	WITHOUT_CLASSIFICATION	1.3257124447547164E-7	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999992431893996	WITHOUT_CLASSIFICATION	7.56810600440086E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9969576890209375	WITHOUT_CLASSIFICATION	0.0030423109790626087	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999999849089946	WITHOUT_CLASSIFICATION	1.509100539242223E-8	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999978589400246	WITHOUT_CLASSIFICATION	2.1410599754116897E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999996229434948	WITHOUT_CLASSIFICATION	3.7705650524469653E-7	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9998744532867339	WITHOUT_CLASSIFICATION	1.2554671326609504E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9998744532867339	WITHOUT_CLASSIFICATION	1.2554671326609504E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9998744532867339	WITHOUT_CLASSIFICATION	1.2554671326609504E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9998744532867339	WITHOUT_CLASSIFICATION	1.2554671326609504E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9998744532867339	WITHOUT_CLASSIFICATION	1.2554671326609504E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999577613243984	WITHOUT_CLASSIFICATION	4.223867560165388E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9998744532867339	WITHOUT_CLASSIFICATION	1.2554671326609504E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9998744532867339	WITHOUT_CLASSIFICATION	1.2554671326609504E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9998744532867339	WITHOUT_CLASSIFICATION	1.2554671326609504E-4	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999999287890589	WITHOUT_CLASSIFICATION	7.121094113312868E-8	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999997624508112	WITHOUT_CLASSIFICATION	2.3754918864796813E-7	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9998003304078311	WITHOUT_CLASSIFICATION	1.9966959216881193E-4	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999974036710442	WITHOUT_CLASSIFICATION	2.596328955801271E-6	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999891264795334	WITHOUT_CLASSIFICATION	1.0873520466485383E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999998360619733	WITHOUT_CLASSIFICATION	1.6393802677189124E-7	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999998960758028	WITHOUT_CLASSIFICATION	1.0392419733074862E-7	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999991852499025	WITHOUT_CLASSIFICATION	8.147500975688177E-7	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999992876150546	WITHOUT_CLASSIFICATION	7.12384945278947E-7	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999992876150546	WITHOUT_CLASSIFICATION	7.12384945278947E-7	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999991705784829	WITHOUT_CLASSIFICATION	8.294215170829672E-7	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999991819209567	WITHOUT_CLASSIFICATION	8.180790432134863E-7	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999993085466906	WITHOUT_CLASSIFICATION	6.91453309468679E-7	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999988503297235	WITHOUT_CLASSIFICATION	1.1496702765833702E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999988550648797	WITHOUT_CLASSIFICATION	1.1449351202440134E-6	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999992961377282	WITHOUT_CLASSIFICATION	7.038622717808693E-7	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999992694417393	WITHOUT_CLASSIFICATION	7.30558260777721E-7	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999992531864811	WITHOUT_CLASSIFICATION	7.468135190116591E-7	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999991848162809	WITHOUT_CLASSIFICATION	8.151837191175312E-7	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999990063102966	WITHOUT_CLASSIFICATION	9.936897035131386E-7	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999992124071571	WITHOUT_CLASSIFICATION	7.875928429877471E-7	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999990736397057	WITHOUT_CLASSIFICATION	9.263602941675389E-7	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999987805651821	WITHOUT_CLASSIFICATION	1.21943481796524E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999992209269777	WITHOUT_CLASSIFICATION	7.790730222266365E-7	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999992039439499	WITHOUT_CLASSIFICATION	7.960560500748022E-7	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999991959743535	WITHOUT_CLASSIFICATION	8.040256465113736E-7	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999991236016061	WITHOUT_CLASSIFICATION	8.763983939579679E-7	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999992921474661	WITHOUT_CLASSIFICATION	7.078525339606218E-7	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999988648152017	WITHOUT_CLASSIFICATION	1.1351847983108114E-6	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999990618314109	WITHOUT_CLASSIFICATION	9.381685891947007E-7	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999990983932049	WITHOUT_CLASSIFICATION	9.016067951582888E-7	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999990508679765	WITHOUT_CLASSIFICATION	9.491320236061481E-7	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999992678982748	WITHOUT_CLASSIFICATION	7.321017251945768E-7	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999993927182506	WITHOUT_CLASSIFICATION	6.072817493890805E-7	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999992378487458	WITHOUT_CLASSIFICATION	7.621512543134892E-7	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999989332783098	WITHOUT_CLASSIFICATION	1.0667216902734877E-6	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999993856220151	WITHOUT_CLASSIFICATION	6.143779848797982E-7	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999992712367294	WITHOUT_CLASSIFICATION	7.287632707134037E-7	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.99999929445393	WITHOUT_CLASSIFICATION	7.055460699344837E-7	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999993451344771	WITHOUT_CLASSIFICATION	6.548655229380222E-7	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.99999934019444	WITHOUT_CLASSIFICATION	6.598055599164042E-7	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999992122420115	WITHOUT_CLASSIFICATION	7.877579884196781E-7	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999994537977995	WITHOUT_CLASSIFICATION	5.462022004880218E-7	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999993779181428	WITHOUT_CLASSIFICATION	6.220818573303129E-7	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999991789695238	WITHOUT_CLASSIFICATION	8.210304761707533E-7	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999992851051421	WITHOUT_CLASSIFICATION	7.14894857795734E-7	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999991574660516	WITHOUT_CLASSIFICATION	8.425339483995612E-7	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999993367795587	WITHOUT_CLASSIFICATION	6.632204413917104E-7	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.999999302799126	WITHOUT_CLASSIFICATION	6.972008739288823E-7	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.999998873498364	WITHOUT_CLASSIFICATION	1.1265016360261434E-6	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999991504192506	WITHOUT_CLASSIFICATION	8.495807494553171E-7	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.999998866295166	WITHOUT_CLASSIFICATION	1.1337048340514465E-6	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999991024889269	WITHOUT_CLASSIFICATION	8.975110731694529E-7	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999992148390104	WITHOUT_CLASSIFICATION	7.851609895569761E-7	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999990628736766	WITHOUT_CLASSIFICATION	9.371263233016619E-7	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999993716624342	WITHOUT_CLASSIFICATION	6.283375658197595E-7	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999994651552293	WITHOUT_CLASSIFICATION	5.348447706507102E-7	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999992415616271	WITHOUT_CLASSIFICATION	7.584383730002539E-7	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999992572531274	WITHOUT_CLASSIFICATION	7.427468725553953E-7	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999992248735852	WITHOUT_CLASSIFICATION	7.751264148344237E-7	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999991275071806	WITHOUT_CLASSIFICATION	8.724928194624312E-7	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999993777938578	WITHOUT_CLASSIFICATION	6.222061421007446E-7	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.999999308214378	WITHOUT_CLASSIFICATION	6.917856220711554E-7	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999989704244865	WITHOUT_CLASSIFICATION	1.02957551351789E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999989704244865	WITHOUT_CLASSIFICATION	1.02957551351789E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999994403608524	WITHOUT_CLASSIFICATION	5.596391476127391E-7	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999991878503485	WITHOUT_CLASSIFICATION	8.121496514793318E-7	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999992490647692	WITHOUT_CLASSIFICATION	7.509352308597232E-7	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999993710023904	WITHOUT_CLASSIFICATION	6.289976094821004E-7	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999993887726184	WITHOUT_CLASSIFICATION	6.112273814693852E-7	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999992618051459	WITHOUT_CLASSIFICATION	7.381948540486597E-7	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999994425113357	WITHOUT_CLASSIFICATION	5.574886644273199E-7	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999994470192658	WITHOUT_CLASSIFICATION	5.529807342361545E-7	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999993425621236	WITHOUT_CLASSIFICATION	6.57437876367575E-7	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999993505189084	WITHOUT_CLASSIFICATION	6.494810915537535E-7	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999944700351057	WITHOUT_CLASSIFICATION	5.5299648943002515E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999944700351057	WITHOUT_CLASSIFICATION	5.5299648943002515E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999976882469437	WITHOUT_CLASSIFICATION	2.3117530563089405E-6	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999909265678529	WITHOUT_CLASSIFICATION	9.0734321470527E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.999995866686586	WITHOUT_CLASSIFICATION	4.133313413980163E-6	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.999997968359411	WITHOUT_CLASSIFICATION	2.031640589039475E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999529977863	WITHOUT_CLASSIFICATION	4.700221372073535E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999529977863	WITHOUT_CLASSIFICATION	4.700221372073535E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999529977863	WITHOUT_CLASSIFICATION	4.700221372073535E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999529977863	WITHOUT_CLASSIFICATION	4.700221372073535E-8	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9788852700657565	WITHOUT_CLASSIFICATION	0.021114729934243532	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999986797271287	WITHOUT_CLASSIFICATION	1.320272871231704E-6	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999988770939662	WITHOUT_CLASSIFICATION	1.122906033858678E-6	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999985455268463	WITHOUT_CLASSIFICATION	1.454473153642724E-6	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999989288578142	WITHOUT_CLASSIFICATION	1.0711421858243187E-6	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999991504608405	WITHOUT_CLASSIFICATION	8.495391594470042E-7	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999994065641922	WITHOUT_CLASSIFICATION	5.9343580785351E-7	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999991856606126	WITHOUT_CLASSIFICATION	8.143393873572857E-7	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999991029953871	WITHOUT_CLASSIFICATION	8.970046129984257E-7	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999993647594725	WITHOUT_CLASSIFICATION	6.352405275351802E-7	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999992436274002	WITHOUT_CLASSIFICATION	7.563725997671268E-7	TEST
// line 582	WITHOUT_CLASSIFICATION	0.999999097191637	WITHOUT_CLASSIFICATION	9.028083628644388E-7	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999993033521337	WITHOUT_CLASSIFICATION	6.966478662785184E-7	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999989834842128	WITHOUT_CLASSIFICATION	1.0165157871676508E-6	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999991699462356	WITHOUT_CLASSIFICATION	8.300537644533537E-7	TEST
// line 703	WITHOUT_CLASSIFICATION	0.999998731696502	WITHOUT_CLASSIFICATION	1.2683034979411708E-6	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999992694376793	WITHOUT_CLASSIFICATION	7.305623206914076E-7	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999993099030612	WITHOUT_CLASSIFICATION	6.900969387596296E-7	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999987241352968	WITHOUT_CLASSIFICATION	1.2758647032010372E-6	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999992188760546	WITHOUT_CLASSIFICATION	7.811239454493763E-7	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999990976086606	WITHOUT_CLASSIFICATION	9.023913394772644E-7	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999989600170665	WITHOUT_CLASSIFICATION	1.0399829335401447E-6	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999990299812923	WITHOUT_CLASSIFICATION	9.700187077264866E-7	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999991202436739	WITHOUT_CLASSIFICATION	8.797563261113388E-7	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999990025232559	WITHOUT_CLASSIFICATION	9.974767441191196E-7	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999993802594507	WITHOUT_CLASSIFICATION	6.197405493270715E-7	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999993018014253	WITHOUT_CLASSIFICATION	6.981985747143644E-7	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999992435337701	WITHOUT_CLASSIFICATION	7.564662298134217E-7	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.999999271232526	WITHOUT_CLASSIFICATION	7.287674739716283E-7	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999992359162865	WITHOUT_CLASSIFICATION	7.640837136163809E-7	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999994015378211	WITHOUT_CLASSIFICATION	5.984621789275479E-7	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999992703882208	WITHOUT_CLASSIFICATION	7.296117792821371E-7	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.999999325158545	WITHOUT_CLASSIFICATION	6.748414549324549E-7	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999993666102732	WITHOUT_CLASSIFICATION	6.333897266796448E-7	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999992917623406	WITHOUT_CLASSIFICATION	7.082376593325317E-7	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999991105291185	WITHOUT_CLASSIFICATION	8.894708814260559E-7	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.999999201691356	WITHOUT_CLASSIFICATION	7.98308644010825E-7	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999991878419812	WITHOUT_CLASSIFICATION	8.121580189035525E-7	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999991149008362	WITHOUT_CLASSIFICATION	8.850991638580687E-7	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999991524881359	WITHOUT_CLASSIFICATION	8.475118640273566E-7	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999991666062824	WITHOUT_CLASSIFICATION	8.333937176809045E-7	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999991256866747	WITHOUT_CLASSIFICATION	8.74313325169115E-7	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.999999450705749	WITHOUT_CLASSIFICATION	5.492942508792933E-7	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999992252912475	WITHOUT_CLASSIFICATION	7.747087525502245E-7	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999993949261741	WITHOUT_CLASSIFICATION	6.050738258319417E-7	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999993956584472	WITHOUT_CLASSIFICATION	6.043415528880596E-7	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999992252283736	WITHOUT_CLASSIFICATION	7.747716263231323E-7	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999993562652809	WITHOUT_CLASSIFICATION	6.437347190339457E-7	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999992899145661	WITHOUT_CLASSIFICATION	7.100854338061556E-7	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999992628088054	WITHOUT_CLASSIFICATION	7.371911945769367E-7	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999993659729349	WITHOUT_CLASSIFICATION	6.340270649956543E-7	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999993742855757	WITHOUT_CLASSIFICATION	6.257144241968778E-7	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999992999303488	WITHOUT_CLASSIFICATION	7.000696511869587E-7	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999992072479942	WITHOUT_CLASSIFICATION	7.92752005746841E-7	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999993541300282	WITHOUT_CLASSIFICATION	6.458699718695975E-7	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999992680470744	WITHOUT_CLASSIFICATION	7.319529255664818E-7	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999992902589008	WITHOUT_CLASSIFICATION	7.097410991872929E-7	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999992497347163	WITHOUT_CLASSIFICATION	7.502652836080855E-7	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999990383927202	WITHOUT_CLASSIFICATION	9.616072797480845E-7	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999995125842985	WITHOUT_CLASSIFICATION	4.874157014920268E-7	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999999949881284	WITHOUT_CLASSIFICATION	5.011871527304051E-9	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996590246505	WITHOUT_CLASSIFICATION	3.4097534941771836E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996590246505	WITHOUT_CLASSIFICATION	3.4097534941771836E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996590246505	WITHOUT_CLASSIFICATION	3.4097534941771836E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996590246505	WITHOUT_CLASSIFICATION	3.4097534941771836E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996590246505	WITHOUT_CLASSIFICATION	3.4097534941771836E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996590246505	WITHOUT_CLASSIFICATION	3.4097534941771836E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996590246505	WITHOUT_CLASSIFICATION	3.4097534941771836E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999831376652	WITHOUT_CLASSIFICATION	1.686233483021303E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999831376652	WITHOUT_CLASSIFICATION	1.686233483021303E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999831376652	WITHOUT_CLASSIFICATION	1.686233483021303E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999831376652	WITHOUT_CLASSIFICATION	1.686233483021303E-8	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999965469968454	WITHOUT_CLASSIFICATION	3.453003154674583E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999965469968454	WITHOUT_CLASSIFICATION	3.453003154674583E-6	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999987902025209	WITHOUT_CLASSIFICATION	1.2097974791503283E-6	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999736087045	WITHOUT_CLASSIFICATION	2.6391295442437333E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999736087045	WITHOUT_CLASSIFICATION	2.6391295442437333E-8	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999994983765239	WITHOUT_CLASSIFICATION	5.016234761317907E-7	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999999238706869	WITHOUT_CLASSIFICATION	7.612931311594576E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999796004898	WITHOUT_CLASSIFICATION	2.0399510171244234E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999796004898	WITHOUT_CLASSIFICATION	2.0399510171244234E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999796004898	WITHOUT_CLASSIFICATION	2.0399510171244234E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999796004898	WITHOUT_CLASSIFICATION	2.0399510171244234E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999796004898	WITHOUT_CLASSIFICATION	2.0399510171244234E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999796004898	WITHOUT_CLASSIFICATION	2.0399510171244234E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999796004898	WITHOUT_CLASSIFICATION	2.0399510171244234E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999916311473	WITHOUT_CLASSIFICATION	8.36885261667715E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999784231617	WITHOUT_CLASSIFICATION	2.157683824630269E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999997949835246	WITHOUT_CLASSIFICATION	2.050164753040109E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999997949835246	WITHOUT_CLASSIFICATION	2.050164753040109E-7	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999802931256	WITHOUT_CLASSIFICATION	1.9706874442490182E-8	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999994474175623	WITHOUT_CLASSIFICATION	5.525824377150292E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999994474175623	WITHOUT_CLASSIFICATION	5.525824377150292E-7	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.999999990087216	WITHOUT_CLASSIFICATION	9.912784029555972E-9	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9158363200612969	WITHOUT_CLASSIFICATION	0.08416367993870301	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.999999907590407	WITHOUT_CLASSIFICATION	9.24095929972638E-8	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999999712244294	WITHOUT_CLASSIFICATION	2.8775570558484756E-8	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999991924883465	WITHOUT_CLASSIFICATION	8.07511653564599E-7	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999994320354278	WITHOUT_CLASSIFICATION	5.679645721249109E-7	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999994409173059	WITHOUT_CLASSIFICATION	5.590826940842656E-7	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999999645277947	WITHOUT_CLASSIFICATION	3.547220531549594E-8	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999870146028883	WITHOUT_CLASSIFICATION	1.298539711170573E-4	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999963055555079	WITHOUT_CLASSIFICATION	3.694444492109179E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9982223569569507	WITHOUT_CLASSIFICATION	0.0017776430430492575	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999979546466	WITHOUT_CLASSIFICATION	2.045353438204075E-9	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999428064121	WITHOUT_CLASSIFICATION	5.719358790930207E-8	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999917866749464	WITHOUT_CLASSIFICATION	8.213325053662556E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999996250948296	WITHOUT_CLASSIFICATION	3.7490517042010157E-7	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999999768783492	WITHOUT_CLASSIFICATION	2.3121650867948154E-8	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999998797430769	WITHOUT_CLASSIFICATION	1.2025692307091868E-7	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999979464024062	WITHOUT_CLASSIFICATION	2.0535975937269806E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999992796347049	WITHOUT_CLASSIFICATION	7.20365295027356E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999992796347049	WITHOUT_CLASSIFICATION	7.20365295027356E-7	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999996298715922	WITHOUT_CLASSIFICATION	3.7012840790487824E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999303201822	WITHOUT_CLASSIFICATION	6.967981774759807E-8	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999400183952	WITHOUT_CLASSIFICATION	5.99816047963502E-8	TEST
//switch	WITHOUT_CLASSIFICATION	0.999963692801045	WITHOUT_CLASSIFICATION	3.630719895491193E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999614742899716	WITHOUT_CLASSIFICATION	3.852571002837864E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999614742899716	WITHOUT_CLASSIFICATION	3.852571002837864E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999614742899716	WITHOUT_CLASSIFICATION	3.852571002837864E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999998935014767	WITHOUT_CLASSIFICATION	1.0649852327649629E-7	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999988000447517	WITHOUT_CLASSIFICATION	1.1999552482835386E-6	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999999876308567	WITHOUT_CLASSIFICATION	1.2369143174978798E-8	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.999999970407993	WITHOUT_CLASSIFICATION	2.9592006920944916E-8	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999997109749402	WITHOUT_CLASSIFICATION	2.8902505976195835E-7	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.999999992211674	WITHOUT_CLASSIFICATION	7.788325932869993E-9	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999283466696	WITHOUT_CLASSIFICATION	7.16533303126733E-8	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999991943565276	WITHOUT_CLASSIFICATION	8.056434724394191E-7	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999993609844	WITHOUT_CLASSIFICATION	6.390156073146081E-10	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999997024116088	WITHOUT_CLASSIFICATION	2.9758839122205016E-7	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999997368465824	WITHOUT_CLASSIFICATION	2.6315341763724706E-7	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999999533484718	WITHOUT_CLASSIFICATION	4.665152808761987E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9977519275917308	WITHOUT_CLASSIFICATION	0.0022480724082691726	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999979283305147	WITHOUT_CLASSIFICATION	2.0716694852435975E-6	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999993608325666	WITHOUT_CLASSIFICATION	6.391674335128928E-7	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.999804846761766	WITHOUT_CLASSIFICATION	1.9515323823398023E-4	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999997958654484	WITHOUT_CLASSIFICATION	2.0413455163241757E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999393562020062	WITHOUT_CLASSIFICATION	6.0643797993753544E-5	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999999968126021	WITHOUT_CLASSIFICATION	3.187397951292858E-9	TEST
