// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999999498857365	WITHOUT_CLASSIFICATION	5.01142634000364E-8	TEST
// TODO make an assert here	TEST	0.9979161086968142	WITHOUT_CLASSIFICATION	0.0020838913031858385	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.8700442584486819	WITHOUT_CLASSIFICATION	0.12995574155131806	TEST
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9998429909044978	WITHOUT_CLASSIFICATION	1.5700909550224728E-4	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9999699758297634	WITHOUT_CLASSIFICATION	3.0024170236592698E-5	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999994563057982	WITHOUT_CLASSIFICATION	5.43694201784425E-7	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999994388353151	WITHOUT_CLASSIFICATION	5.6116468485458E-7	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999983358543211	WITHOUT_CLASSIFICATION	1.6641456789851541E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999612178335993	WITHOUT_CLASSIFICATION	3.8782166400724955E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999612178335993	WITHOUT_CLASSIFICATION	3.8782166400724955E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999120139343309	WITHOUT_CLASSIFICATION	8.798606566912627E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999120139343309	WITHOUT_CLASSIFICATION	8.798606566912627E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999960643498798	WITHOUT_CLASSIFICATION	3.935650120195487E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999977149584375	WITHOUT_CLASSIFICATION	2.285041562586147E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999982245711059	WITHOUT_CLASSIFICATION	1.7754288941019018E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999982717514686	WITHOUT_CLASSIFICATION	1.7282485314043418E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999823095070927	WITHOUT_CLASSIFICATION	1.769049290730798E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999823095070927	WITHOUT_CLASSIFICATION	1.769049290730798E-5	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999982704985892	WITHOUT_CLASSIFICATION	1.7295014106292823E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999786386476165	WITHOUT_CLASSIFICATION	2.1361352383444796E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999786386476165	WITHOUT_CLASSIFICATION	2.1361352383444796E-5	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9999178146721718	WITHOUT_CLASSIFICATION	8.218532782821995E-5	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999462226180611	WITHOUT_CLASSIFICATION	5.3777381938906626E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999600128836417	WITHOUT_CLASSIFICATION	3.998711635831299E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999600128836417	WITHOUT_CLASSIFICATION	3.998711635831299E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999600128836417	WITHOUT_CLASSIFICATION	3.998711635831299E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999600128836417	WITHOUT_CLASSIFICATION	3.998711635831299E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999600128836417	WITHOUT_CLASSIFICATION	3.998711635831299E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999600128836417	WITHOUT_CLASSIFICATION	3.998711635831299E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999600128836417	WITHOUT_CLASSIFICATION	3.998711635831299E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999152616136308	WITHOUT_CLASSIFICATION	8.473838636932445E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999152616136308	WITHOUT_CLASSIFICATION	8.473838636932445E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999152616136308	WITHOUT_CLASSIFICATION	8.473838636932445E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999152616136308	WITHOUT_CLASSIFICATION	8.473838636932445E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999152616136308	WITHOUT_CLASSIFICATION	8.473838636932445E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999152616136308	WITHOUT_CLASSIFICATION	8.473838636932445E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999152616136308	WITHOUT_CLASSIFICATION	8.473838636932445E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999575033521685	WITHOUT_CLASSIFICATION	4.249664783158355E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999575033521685	WITHOUT_CLASSIFICATION	4.249664783158355E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999575033521685	WITHOUT_CLASSIFICATION	4.249664783158355E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999575033521685	WITHOUT_CLASSIFICATION	4.249664783158355E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999575033521685	WITHOUT_CLASSIFICATION	4.249664783158355E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999575033521685	WITHOUT_CLASSIFICATION	4.249664783158355E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999829625302405	WITHOUT_CLASSIFICATION	1.7037469759437753E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999829625302405	WITHOUT_CLASSIFICATION	1.7037469759437753E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999829625302405	WITHOUT_CLASSIFICATION	1.7037469759437753E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999829625302405	WITHOUT_CLASSIFICATION	1.7037469759437753E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999829625302405	WITHOUT_CLASSIFICATION	1.7037469759437753E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999829625302405	WITHOUT_CLASSIFICATION	1.7037469759437753E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999794271733141	WITHOUT_CLASSIFICATION	2.0572826685933693E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999794271733141	WITHOUT_CLASSIFICATION	2.0572826685933693E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999794271733141	WITHOUT_CLASSIFICATION	2.0572826685933693E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999794271733141	WITHOUT_CLASSIFICATION	2.0572826685933693E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999794271733141	WITHOUT_CLASSIFICATION	2.0572826685933693E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999794271733141	WITHOUT_CLASSIFICATION	2.0572826685933693E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999794271733141	WITHOUT_CLASSIFICATION	2.0572826685933693E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999813855294226	WITHOUT_CLASSIFICATION	1.8614470577318474E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999813855294226	WITHOUT_CLASSIFICATION	1.8614470577318474E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999813855294226	WITHOUT_CLASSIFICATION	1.8614470577318474E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999813855294226	WITHOUT_CLASSIFICATION	1.8614470577318474E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999149082900219	WITHOUT_CLASSIFICATION	8.509170997808858E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999149082900219	WITHOUT_CLASSIFICATION	8.509170997808858E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999961285419051	WITHOUT_CLASSIFICATION	3.87145809486896E-6	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999998064311418	WITHOUT_CLASSIFICATION	1.935688581346731E-7	TEST
// name	WITHOUT_CLASSIFICATION	0.9999897150345508	WITHOUT_CLASSIFICATION	1.0284965449291805E-5	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999980299676023	WITHOUT_CLASSIFICATION	1.97003239762188E-6	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999978195589633	WITHOUT_CLASSIFICATION	2.1804410367493617E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999987879904455	WITHOUT_CLASSIFICATION	1.212009554509934E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999987879904455	WITHOUT_CLASSIFICATION	1.212009554509934E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999987879904455	WITHOUT_CLASSIFICATION	1.212009554509934E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999987879904455	WITHOUT_CLASSIFICATION	1.212009554509934E-6	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.999999584177619	WITHOUT_CLASSIFICATION	4.158223809214686E-7	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999999043386765	WITHOUT_CLASSIFICATION	9.566132350445057E-8	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.999999115635335	WITHOUT_CLASSIFICATION	8.843646649806458E-7	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999992167262771	WITHOUT_CLASSIFICATION	7.832737229351947E-7	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999988097416898	WITHOUT_CLASSIFICATION	1.1902583101818216E-6	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999887823894	WITHOUT_CLASSIFICATION	1.1217610596295956E-8	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.999998739185488	WITHOUT_CLASSIFICATION	1.2608145120457283E-6	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999998929378788	WITHOUT_CLASSIFICATION	1.07062121233764E-7	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999615999736	WITHOUT_CLASSIFICATION	3.840002640888916E-8	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999974176083131	WITHOUT_CLASSIFICATION	2.582391686834444E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999997745638342	WITHOUT_CLASSIFICATION	2.254361657787561E-7	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999997906980733	WITHOUT_CLASSIFICATION	2.093019265708967E-7	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999953847615217	WITHOUT_CLASSIFICATION	4.615238478227191E-6	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999996137689329	WITHOUT_CLASSIFICATION	3.862310671477935E-7	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999995779309715	WITHOUT_CLASSIFICATION	4.2206902855660805E-7	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999984286203287	WITHOUT_CLASSIFICATION	1.5713796713001452E-6	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999999686926668	WITHOUT_CLASSIFICATION	3.1307333205481095E-8	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999987879904455	WITHOUT_CLASSIFICATION	1.212009554509934E-6	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998259676642	WITHOUT_CLASSIFICATION	1.7403233582128447E-7	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999045137433	WITHOUT_CLASSIFICATION	9.548625675225487E-8	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999993722169059	WITHOUT_CLASSIFICATION	6.277830941462218E-7	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999979382770104	WITHOUT_CLASSIFICATION	2.061722989600554E-6	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999999653982805	WITHOUT_CLASSIFICATION	3.4601719509576173E-8	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999967631866332	WITHOUT_CLASSIFICATION	3.2368133666696736E-6	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999994543844892	WITHOUT_CLASSIFICATION	5.456155107962085E-7	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999986605038267	WITHOUT_CLASSIFICATION	1.3394961733053453E-6	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999976168121092	WITHOUT_CLASSIFICATION	2.383187890802289E-6	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999998848656474	WITHOUT_CLASSIFICATION	1.1513435265225364E-7	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999958545259415	WITHOUT_CLASSIFICATION	4.1454740584164176E-6	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999967969906285	WITHOUT_CLASSIFICATION	3.203009371492444E-6	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999999697825727	WITHOUT_CLASSIFICATION	3.0217427405020006E-8	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999977851844317	WITHOUT_CLASSIFICATION	2.214815568330918E-6	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.999995942927514	WITHOUT_CLASSIFICATION	4.057072485868867E-6	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999906063658772	WITHOUT_CLASSIFICATION	9.393634122774067E-6	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999993625711506	WITHOUT_CLASSIFICATION	6.374288493662659E-7	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999124975267	WITHOUT_CLASSIFICATION	8.750247321098799E-8	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9991723689168771	WITHOUT_CLASSIFICATION	8.276310831228058E-4	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999995430743391	WITHOUT_CLASSIFICATION	4.5692566086900105E-7	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999983090187711	WITHOUT_CLASSIFICATION	1.6909812289117078E-6	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999950244046552	WITHOUT_CLASSIFICATION	4.975595344892878E-6	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999997809453381	WITHOUT_CLASSIFICATION	2.1905466180469637E-7	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9999495449956014	WITHOUT_CLASSIFICATION	5.0455004398649485E-5	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999969449413812	WITHOUT_CLASSIFICATION	3.0550586188365113E-6	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9999900335263473	WITHOUT_CLASSIFICATION	9.966473652675532E-6	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999995363384506	WITHOUT_CLASSIFICATION	4.6366154934950746E-7	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999999324476387	WITHOUT_CLASSIFICATION	6.755236125061773E-8	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999996077544986	WITHOUT_CLASSIFICATION	3.922455013796019E-7	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.99999956381778	WITHOUT_CLASSIFICATION	4.3618221997445697E-7	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999982743740251	WITHOUT_CLASSIFICATION	1.7256259749227651E-6	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.99999914104449	WITHOUT_CLASSIFICATION	8.589555101767735E-7	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.999997922299652	WITHOUT_CLASSIFICATION	2.0777003480766358E-6	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999998208815595	WITHOUT_CLASSIFICATION	1.791184405109064E-7	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999999804600287	WITHOUT_CLASSIFICATION	1.953997140072588E-8	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999994156609607	WITHOUT_CLASSIFICATION	5.843390392923107E-7	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999998969787348	WITHOUT_CLASSIFICATION	1.030212651607742E-7	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999994806278283	WITHOUT_CLASSIFICATION	5.193721717468984E-7	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999995642819042	WITHOUT_CLASSIFICATION	4.3571809581340003E-7	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999970196150141	WITHOUT_CLASSIFICATION	2.980384985952362E-6	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999413140885	WITHOUT_CLASSIFICATION	5.8685911492334686E-8	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998491489155	WITHOUT_CLASSIFICATION	1.5085108450288445E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.999999762821267	WITHOUT_CLASSIFICATION	2.3717873285652042E-7	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999990310444696	WITHOUT_CLASSIFICATION	9.689555303866824E-7	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999990310444696	WITHOUT_CLASSIFICATION	9.689555303866824E-7	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999943142444667	WITHOUT_CLASSIFICATION	5.685755533334574E-6	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999999588819174	WITHOUT_CLASSIFICATION	4.1118082614561695E-8	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999672208020611	WITHOUT_CLASSIFICATION	3.27791979388084E-5	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999997453161386	WITHOUT_CLASSIFICATION	2.5468386148961244E-7	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999986101756068	WITHOUT_CLASSIFICATION	1.389824393285316E-6	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999892770136051	WITHOUT_CLASSIFICATION	1.0722986394906014E-5	TEST
// ???	WITHOUT_CLASSIFICATION	0.999994117936095	WITHOUT_CLASSIFICATION	5.882063904965355E-6	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999788361068159	WITHOUT_CLASSIFICATION	2.116389318404259E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998491489155	WITHOUT_CLASSIFICATION	1.5085108450288445E-6	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999995454790491	WITHOUT_CLASSIFICATION	4.54520950913985E-7	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999972422642281	WITHOUT_CLASSIFICATION	2.757735771759556E-6	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.999999934583646	WITHOUT_CLASSIFICATION	6.541635399288685E-8	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999998658911883	WITHOUT_CLASSIFICATION	1.3410881175547758E-7	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.999999088574584	WITHOUT_CLASSIFICATION	9.114254160436531E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999994401834158	WITHOUT_CLASSIFICATION	5.59816584178388E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999994401834158	WITHOUT_CLASSIFICATION	5.59816584178388E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999994401834158	WITHOUT_CLASSIFICATION	5.59816584178388E-7	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.999999954703153	WITHOUT_CLASSIFICATION	4.5296847029023266E-8	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.99999328938758	WITHOUT_CLASSIFICATION	6.710612419971314E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999984609355042	WITHOUT_CLASSIFICATION	1.5390644958131843E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999926767169838	WITHOUT_CLASSIFICATION	7.323283016172714E-6	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999999747790898	WITHOUT_CLASSIFICATION	2.5220910258095183E-8	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999995625554391	WITHOUT_CLASSIFICATION	4.3744456091795253E-7	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.999999717735304	WITHOUT_CLASSIFICATION	2.822646959574459E-7	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999998820010226	WITHOUT_CLASSIFICATION	1.1799897725463113E-7	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999979073900276	WITHOUT_CLASSIFICATION	2.092609972423369E-6	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999979073900276	WITHOUT_CLASSIFICATION	2.092609972423369E-6	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999975241072867	WITHOUT_CLASSIFICATION	2.4758927133757705E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999983681009433	WITHOUT_CLASSIFICATION	1.6318990566506077E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999986497589668	WITHOUT_CLASSIFICATION	1.3502410332178038E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999986497589668	WITHOUT_CLASSIFICATION	1.3502410332178038E-6	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999991229075904	WITHOUT_CLASSIFICATION	8.770924095865363E-7	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999623701703	WITHOUT_CLASSIFICATION	3.762982972984326E-8	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999964249067164	WITHOUT_CLASSIFICATION	3.575093283563443E-6	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.999999639683959	WITHOUT_CLASSIFICATION	3.6031604098099795E-7	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999995108877902	WITHOUT_CLASSIFICATION	4.891122098056938E-7	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999984944315906	WITHOUT_CLASSIFICATION	1.5055684094583432E-6	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999973310634296	WITHOUT_CLASSIFICATION	2.668936570416061E-6	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999948232183845	WITHOUT_CLASSIFICATION	5.176781615471007E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999987826148573	WITHOUT_CLASSIFICATION	1.2173851426733544E-6	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999989288999355	WITHOUT_CLASSIFICATION	1.071100064580123E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998491489155	WITHOUT_CLASSIFICATION	1.5085108450288445E-6	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999861200217546	WITHOUT_CLASSIFICATION	1.3879978245343809E-5	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999995232035143	WITHOUT_CLASSIFICATION	4.7679648579411206E-7	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999992369263182	WITHOUT_CLASSIFICATION	7.630736818400292E-7	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999995556828659	WITHOUT_CLASSIFICATION	4.4431713410392224E-7	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.999996464710494	WITHOUT_CLASSIFICATION	3.535289506048881E-6	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999822336653413	WITHOUT_CLASSIFICATION	1.7766334658609773E-5	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999993040631757	WITHOUT_CLASSIFICATION	6.959368242979396E-7	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999982469951436	WITHOUT_CLASSIFICATION	1.7530048564003633E-6	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999989294903494	WITHOUT_CLASSIFICATION	1.0705096506005917E-6	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999991296292486	WITHOUT_CLASSIFICATION	8.703707513946295E-7	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999998311691103	WITHOUT_CLASSIFICATION	1.6883088963314498E-7	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999996520186514	WITHOUT_CLASSIFICATION	3.4798134853571535E-7	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999999303766514	WITHOUT_CLASSIFICATION	6.962334862644084E-8	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999995756142391	WITHOUT_CLASSIFICATION	4.243857607596644E-7	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9996768022183524	WITHOUT_CLASSIFICATION	3.2319778164767226E-4	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999998994553119	WITHOUT_CLASSIFICATION	1.0054468811050958E-7	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999996073526792	WITHOUT_CLASSIFICATION	3.9264732071717277E-7	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.999999464432492	WITHOUT_CLASSIFICATION	5.355675080533196E-7	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999999907032088	WITHOUT_CLASSIFICATION	9.296791135052842E-9	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999997123958291	WITHOUT_CLASSIFICATION	2.8760417088129855E-7	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999999351929468	WITHOUT_CLASSIFICATION	6.480705318973602E-8	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999942939897	WITHOUT_CLASSIFICATION	5.7060102766196266E-9	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999960264238	WITHOUT_CLASSIFICATION	3.973576280509318E-9	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999979458469336	WITHOUT_CLASSIFICATION	2.0541530664086705E-6	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999998681076757	WITHOUT_CLASSIFICATION	1.318923242245199E-7	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999986189918524	WITHOUT_CLASSIFICATION	1.3810081476356478E-6	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999959241130317	WITHOUT_CLASSIFICATION	4.075886968294579E-6	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999998581563629	WITHOUT_CLASSIFICATION	1.418436370508265E-7	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999998633815697	WITHOUT_CLASSIFICATION	1.366184304209789E-7	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999994844644342	WITHOUT_CLASSIFICATION	5.155355658181033E-7	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.999999892825889	WITHOUT_CLASSIFICATION	1.0717411102057649E-7	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.99999983101192	WITHOUT_CLASSIFICATION	1.6898808004033185E-7	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999817874089477	WITHOUT_CLASSIFICATION	1.8212591052281087E-5	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999996319704838	WITHOUT_CLASSIFICATION	3.68029516133934E-7	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999994059740801	WITHOUT_CLASSIFICATION	5.940259199475746E-7	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999957816366195	WITHOUT_CLASSIFICATION	4.2183633804986626E-6	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999991392345255	WITHOUT_CLASSIFICATION	8.607654745915551E-7	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999973732372592	WITHOUT_CLASSIFICATION	2.62676274080683E-5	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999997274789971	WITHOUT_CLASSIFICATION	2.725210029432021E-7	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.999999930937185	WITHOUT_CLASSIFICATION	6.906281507320964E-8	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999988818819171	WITHOUT_CLASSIFICATION	1.1181180829492553E-6	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999994598849573	WITHOUT_CLASSIFICATION	5.401150426704999E-7	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999947181321748	WITHOUT_CLASSIFICATION	5.28186782526411E-6	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999992807325	WITHOUT_CLASSIFICATION	7.192674999328035E-7	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999982095752791	WITHOUT_CLASSIFICATION	1.7904247209670964E-6	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999962961989207	WITHOUT_CLASSIFICATION	3.703801079261657E-6	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999984065963333	WITHOUT_CLASSIFICATION	1.5934036666837803E-6	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.999999728274941	WITHOUT_CLASSIFICATION	2.717250589255004E-7	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999998667439516	WITHOUT_CLASSIFICATION	1.332560485036465E-7	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999996407373077	WITHOUT_CLASSIFICATION	3.5926269230454024E-7	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999996432633594	WITHOUT_CLASSIFICATION	3.567366405976449E-7	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999997188475411	WITHOUT_CLASSIFICATION	2.811524588680657E-7	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999998352497088	WITHOUT_CLASSIFICATION	1.6475029110984425E-7	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.999999764807184	WITHOUT_CLASSIFICATION	2.351928161077932E-7	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999974394324497	WITHOUT_CLASSIFICATION	2.560567550275197E-6	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999997620190963	WITHOUT_CLASSIFICATION	2.3798090356187934E-7	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999998325671423	WITHOUT_CLASSIFICATION	1.6743285764435567E-7	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999987621861723	WITHOUT_CLASSIFICATION	1.237813827713941E-6	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999996477854197	WITHOUT_CLASSIFICATION	3.522145802449993E-7	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999998375818663	WITHOUT_CLASSIFICATION	1.624181336375238E-7	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999904228535651	WITHOUT_CLASSIFICATION	9.577146434841947E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999904228535651	WITHOUT_CLASSIFICATION	9.577146434841947E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999971849002027	WITHOUT_CLASSIFICATION	2.815099797237369E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999971849002027	WITHOUT_CLASSIFICATION	2.815099797237369E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999897183978201	WITHOUT_CLASSIFICATION	1.0281602179769902E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999897183978201	WITHOUT_CLASSIFICATION	1.0281602179769902E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999945204720067	WITHOUT_CLASSIFICATION	5.479527993371328E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999945204720067	WITHOUT_CLASSIFICATION	5.479527993371328E-6	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999966724480724	WITHOUT_CLASSIFICATION	3.327551927607117E-6	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999992311168123	WITHOUT_CLASSIFICATION	7.688831877102111E-7	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999982138138147	WITHOUT_CLASSIFICATION	1.7861861852226887E-6	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999961169805921	WITHOUT_CLASSIFICATION	3.883019407928737E-6	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999995684625201	WITHOUT_CLASSIFICATION	4.3153747994619125E-7	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999976787953924	WITHOUT_CLASSIFICATION	2.321204607721106E-6	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999783515420784	WITHOUT_CLASSIFICATION	2.1648457921607663E-5	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999995115641724	WITHOUT_CLASSIFICATION	4.884358274427434E-7	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999987594728621	WITHOUT_CLASSIFICATION	1.240527137891497E-6	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999967511421853	WITHOUT_CLASSIFICATION	3.2488578146259506E-6	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999953765971838	WITHOUT_CLASSIFICATION	4.623402816219855E-6	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999998559322845	WITHOUT_CLASSIFICATION	1.4406771553921012E-7	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999928380511304	WITHOUT_CLASSIFICATION	7.161948869653292E-6	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999925728424756	WITHOUT_CLASSIFICATION	7.427157524462831E-6	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999960414675138	WITHOUT_CLASSIFICATION	3.958532486265252E-6	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999841583473976	WITHOUT_CLASSIFICATION	1.5841652602452512E-5	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999735554583	WITHOUT_CLASSIFICATION	2.6444541668277164E-8	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.999998990580604	WITHOUT_CLASSIFICATION	1.0094193959570977E-6	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999985297976279	WITHOUT_CLASSIFICATION	1.4702023720648855E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999984738742952	WITHOUT_CLASSIFICATION	1.526125704773582E-6	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999985324838953	WITHOUT_CLASSIFICATION	1.4675161047541766E-6	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999990707791628	WITHOUT_CLASSIFICATION	9.292208370430508E-7	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999992217861071	WITHOUT_CLASSIFICATION	7.782138929360001E-7	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999966828943605	WITHOUT_CLASSIFICATION	3.3171056395421606E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999952745610945	WITHOUT_CLASSIFICATION	4.7254389054431555E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999994858226524	WITHOUT_CLASSIFICATION	5.141773474765148E-7	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999953046737218	WITHOUT_CLASSIFICATION	4.69532627825576E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999991796636748	WITHOUT_CLASSIFICATION	8.203363251944694E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999991796636748	WITHOUT_CLASSIFICATION	8.203363251944694E-7	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999957385428246	WITHOUT_CLASSIFICATION	4.261457175330813E-6	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999932390306215	WITHOUT_CLASSIFICATION	6.760969378427675E-6	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999970766629864	WITHOUT_CLASSIFICATION	2.923337013643885E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999997466914743	WITHOUT_CLASSIFICATION	2.5330852570887555E-7	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999773408371587	WITHOUT_CLASSIFICATION	2.2659162841327907E-5	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.999987056437697	WITHOUT_CLASSIFICATION	1.2943562302999705E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999932351601745	WITHOUT_CLASSIFICATION	6.76483982550595E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999932351601745	WITHOUT_CLASSIFICATION	6.76483982550595E-6	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999968943088532	WITHOUT_CLASSIFICATION	3.1056911467343916E-6	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9994235423661747	WITHOUT_CLASSIFICATION	5.764576338252755E-4	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999983420589145	WITHOUT_CLASSIFICATION	1.6579410856044297E-6	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999983420589145	WITHOUT_CLASSIFICATION	1.6579410856044297E-6	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.999995479782119	WITHOUT_CLASSIFICATION	4.520217881038697E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999914820660637	WITHOUT_CLASSIFICATION	8.517933936336417E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999914820660637	WITHOUT_CLASSIFICATION	8.517933936336417E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999967451300001	WITHOUT_CLASSIFICATION	3.2548699997368137E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999967451300001	WITHOUT_CLASSIFICATION	3.2548699997368137E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999878109935112	WITHOUT_CLASSIFICATION	1.2189006488883593E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999878109935112	WITHOUT_CLASSIFICATION	1.2189006488883593E-5	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9999911542128307	WITHOUT_CLASSIFICATION	8.845787169361341E-6	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999977979867251	WITHOUT_CLASSIFICATION	2.2020132750262926E-6	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999963933050512	WITHOUT_CLASSIFICATION	3.6066949488338557E-6	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999992589124905	WITHOUT_CLASSIFICATION	7.410875094514117E-7	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999874582794	WITHOUT_CLASSIFICATION	1.2541720583456518E-8	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999999242574075	WITHOUT_CLASSIFICATION	7.574259250942726E-8	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999989274783013	WITHOUT_CLASSIFICATION	1.0725216986381816E-6	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999998478237823	WITHOUT_CLASSIFICATION	1.521762178381924E-7	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999989274783013	WITHOUT_CLASSIFICATION	1.0725216986381816E-6	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999292212036378	WITHOUT_CLASSIFICATION	7.077879636221294E-5	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999996883986579	WITHOUT_CLASSIFICATION	3.1160134212085123E-7	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999992008441501	WITHOUT_CLASSIFICATION	7.991558498969547E-7	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999994223503528	WITHOUT_CLASSIFICATION	5.776496471716086E-7	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.99999970182661	WITHOUT_CLASSIFICATION	2.981733899696209E-7	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999931851661721	WITHOUT_CLASSIFICATION	6.814833827956004E-6	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999940603187948	WITHOUT_CLASSIFICATION	5.9396812052254535E-6	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.999996691948028	WITHOUT_CLASSIFICATION	3.3080519719294794E-6	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999817779535	WITHOUT_CLASSIFICATION	1.8222046509238866E-8	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999999331077073	WITHOUT_CLASSIFICATION	6.689229270079624E-8	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999995749944963	WITHOUT_CLASSIFICATION	4.2500550360404716E-7	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999772562024999	WITHOUT_CLASSIFICATION	2.2743797500093916E-5	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999987127163207	WITHOUT_CLASSIFICATION	1.2872836793434311E-6	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999986869733554	WITHOUT_CLASSIFICATION	1.313026644635383E-6	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999996549603118	WITHOUT_CLASSIFICATION	3.450396882095889E-7	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999742522883	WITHOUT_CLASSIFICATION	2.574771173230359E-8	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999984927764102	WITHOUT_CLASSIFICATION	1.507223589784921E-6	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999995782425922	WITHOUT_CLASSIFICATION	4.2175740776735457E-7	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999979104783959	WITHOUT_CLASSIFICATION	2.0895216041953776E-6	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999857584908183	WITHOUT_CLASSIFICATION	1.4241509181605784E-5	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999967034581545	WITHOUT_CLASSIFICATION	3.2965418455297346E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999994191286878	WITHOUT_CLASSIFICATION	5.80871312224377E-7	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999996564249283	WITHOUT_CLASSIFICATION	3.435750716768656E-7	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999996608812342	WITHOUT_CLASSIFICATION	3.391187658245797E-7	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999993570824709	WITHOUT_CLASSIFICATION	6.429175290398895E-7	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999998117935083	WITHOUT_CLASSIFICATION	1.8820649176748972E-7	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999997485618297	WITHOUT_CLASSIFICATION	2.5143817035441374E-7	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999993997328079	WITHOUT_CLASSIFICATION	6.002671920494232E-7	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.999999794419328	WITHOUT_CLASSIFICATION	2.0558067212724827E-7	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999992547312389	WITHOUT_CLASSIFICATION	7.452687611839391E-7	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999993759659053	WITHOUT_CLASSIFICATION	6.240340946202052E-7	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999881436084	WITHOUT_CLASSIFICATION	1.1856391756423117E-8	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999841998405	WITHOUT_CLASSIFICATION	1.5800159431828613E-8	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999994266254936	WITHOUT_CLASSIFICATION	5.733745064585914E-7	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999998442732282	WITHOUT_CLASSIFICATION	1.5572677190575278E-7	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999998079790513	WITHOUT_CLASSIFICATION	1.9202094869958602E-7	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999994197245544	WITHOUT_CLASSIFICATION	5.802754455306412E-7	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999999679970106	WITHOUT_CLASSIFICATION	3.200298940810013E-8	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999999959819827	WITHOUT_CLASSIFICATION	4.0180173086805216E-9	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999995819275267	WITHOUT_CLASSIFICATION	4.180724733601327E-7	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999794149884	WITHOUT_CLASSIFICATION	2.0585011601065805E-8	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.999999564364261	WITHOUT_CLASSIFICATION	4.3563573911342285E-7	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999998482694079	WITHOUT_CLASSIFICATION	1.517305920554767E-7	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.999999723371363	WITHOUT_CLASSIFICATION	2.7662863696709276E-7	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999269791134	WITHOUT_CLASSIFICATION	7.302088651252234E-8	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999998450049175	WITHOUT_CLASSIFICATION	1.5499508255825165E-7	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999996211357444	WITHOUT_CLASSIFICATION	3.78864255651987E-7	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999701804503	WITHOUT_CLASSIFICATION	2.981954970629537E-8	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999996068815978	WITHOUT_CLASSIFICATION	3.9311840213292736E-7	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999988587149896	WITHOUT_CLASSIFICATION	1.141285010323789E-6	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999998214685545	WITHOUT_CLASSIFICATION	1.785314455086806E-7	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999996993684214	WITHOUT_CLASSIFICATION	3.0063157868310065E-7	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999844370368178	WITHOUT_CLASSIFICATION	1.5562963182083727E-5	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999998274171603	WITHOUT_CLASSIFICATION	1.725828395636907E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999997706176698	WITHOUT_CLASSIFICATION	2.2938233033289238E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999997706176698	WITHOUT_CLASSIFICATION	2.2938233033289238E-7	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999991517902569	WITHOUT_CLASSIFICATION	8.482097430633657E-7	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999931648375221	WITHOUT_CLASSIFICATION	6.835162477860518E-6	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999259186013	WITHOUT_CLASSIFICATION	7.408139861440148E-8	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999999287524353	WITHOUT_CLASSIFICATION	7.124756478712725E-8	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999998945879073	WITHOUT_CLASSIFICATION	1.0541209278374867E-7	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.999999127424564	WITHOUT_CLASSIFICATION	8.72575435941601E-7	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999962776605248	WITHOUT_CLASSIFICATION	3.7223394752586543E-6	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999999655515289	WITHOUT_CLASSIFICATION	3.444847108486326E-8	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999987377623578	WITHOUT_CLASSIFICATION	1.2622376422378574E-6	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999998604273423	WITHOUT_CLASSIFICATION	1.3957265771348786E-7	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999578706428	WITHOUT_CLASSIFICATION	4.212935721433962E-8	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999578706428	WITHOUT_CLASSIFICATION	4.212935721433962E-8	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999999402958911	WITHOUT_CLASSIFICATION	5.970410891716784E-8	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999999752755453	WITHOUT_CLASSIFICATION	2.472445468319048E-8	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999988696247609	WITHOUT_CLASSIFICATION	1.1303752390557624E-6	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999981935269917	WITHOUT_CLASSIFICATION	1.806473008297651E-6	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999961859591958	WITHOUT_CLASSIFICATION	3.8140408041265963E-6	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.999999904046407	WITHOUT_CLASSIFICATION	9.595359302305424E-8	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999997162828239	WITHOUT_CLASSIFICATION	2.8371717610117107E-6	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999987730332798	WITHOUT_CLASSIFICATION	1.2269667202009385E-6	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999999476397643	WITHOUT_CLASSIFICATION	5.2360235711468294E-8	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999989540485723	WITHOUT_CLASSIFICATION	1.0459514276667485E-6	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999985723630578	WITHOUT_CLASSIFICATION	1.4276369422223407E-6	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999993777613715	WITHOUT_CLASSIFICATION	6.222386284726109E-7	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999999429144443	WITHOUT_CLASSIFICATION	5.708555581680377E-8	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999999429144443	WITHOUT_CLASSIFICATION	5.708555581680377E-8	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999998995947896	WITHOUT_CLASSIFICATION	1.004052103637698E-7	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999986235730628	WITHOUT_CLASSIFICATION	1.3764269371991083E-6	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999983841745617	WITHOUT_CLASSIFICATION	1.615825438383443E-6	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999996398637299	WITHOUT_CLASSIFICATION	3.601362701182815E-7	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999991934311616	WITHOUT_CLASSIFICATION	8.065688384177272E-7	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999991404039338	WITHOUT_CLASSIFICATION	8.59596066256061E-7	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999929170685211	WITHOUT_CLASSIFICATION	7.082931478893728E-6	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.999996932630725	WITHOUT_CLASSIFICATION	3.067369275151297E-6	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999905138336963	WITHOUT_CLASSIFICATION	9.486166303795403E-6	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999998325368245	WITHOUT_CLASSIFICATION	1.6746317550262524E-7	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999988696247609	WITHOUT_CLASSIFICATION	1.1303752390557624E-6	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999968248484232	WITHOUT_CLASSIFICATION	3.175151576653543E-6	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999994828363188	WITHOUT_CLASSIFICATION	5.171636811050916E-7	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999942667612822	WITHOUT_CLASSIFICATION	5.733238717759795E-6	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999999605524076	WITHOUT_CLASSIFICATION	3.944759235290816E-8	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999998261473734	WITHOUT_CLASSIFICATION	1.7385262673357017E-7	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999978573462	WITHOUT_CLASSIFICATION	2.1426537201751103E-9	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999977458955259	WITHOUT_CLASSIFICATION	2.2541044740375533E-6	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.999999704031306	WITHOUT_CLASSIFICATION	2.9596869391744E-7	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999989811518406	WITHOUT_CLASSIFICATION	1.0188481593353797E-6	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999997547314136	WITHOUT_CLASSIFICATION	2.4526858648184335E-7	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999992958826726	WITHOUT_CLASSIFICATION	7.041173273894799E-7	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.99999024455429	WITHOUT_CLASSIFICATION	9.755445710064394E-6	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999971322930179	WITHOUT_CLASSIFICATION	2.86770698214317E-6	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999997637803724	WITHOUT_CLASSIFICATION	2.362196275898882E-7	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999973785156758	WITHOUT_CLASSIFICATION	2.621484324065899E-6	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999998827954555	WITHOUT_CLASSIFICATION	1.172045444324442E-7	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999980077155859	WITHOUT_CLASSIFICATION	1.992284414000133E-6	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999979925070526	WITHOUT_CLASSIFICATION	2.007492947342081E-6	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999887585398869	WITHOUT_CLASSIFICATION	1.1241460113150696E-5	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999976699258654	WITHOUT_CLASSIFICATION	2.330074134723165E-6	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999818714332	WITHOUT_CLASSIFICATION	1.8128566781859665E-8	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999984607985556	WITHOUT_CLASSIFICATION	1.539201444473031E-6	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999995847923198	WITHOUT_CLASSIFICATION	4.152076803555889E-7	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999463098806133	WITHOUT_CLASSIFICATION	5.3690119386836554E-5	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999991382256993	WITHOUT_CLASSIFICATION	8.617743005828807E-7	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.999999846905009	WITHOUT_CLASSIFICATION	1.5309499091391054E-7	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999931482264104	WITHOUT_CLASSIFICATION	6.851773589712243E-6	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999987869128837	WITHOUT_CLASSIFICATION	1.2130871163210873E-6	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999973740948501	WITHOUT_CLASSIFICATION	2.6259051498958314E-6	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999999766276639	WITHOUT_CLASSIFICATION	2.337233607245789E-8	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999801316284965	WITHOUT_CLASSIFICATION	1.9868371503542166E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999801316284965	WITHOUT_CLASSIFICATION	1.9868371503542166E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999998086201655	WITHOUT_CLASSIFICATION	1.9137983443572983E-7	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999997418822899	WITHOUT_CLASSIFICATION	2.581177100217525E-7	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.999999905203562	WITHOUT_CLASSIFICATION	9.479643801472935E-8	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999999205582961	WITHOUT_CLASSIFICATION	7.944170382709964E-8	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.999999015152631	WITHOUT_CLASSIFICATION	9.84847369045371E-7	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999985187438182	WITHOUT_CLASSIFICATION	1.4812561817457116E-6	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.999998491489155	WITHOUT_CLASSIFICATION	1.5085108450288445E-6	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999992082057523	WITHOUT_CLASSIFICATION	7.917942476359854E-7	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999967926213257	WITHOUT_CLASSIFICATION	3.2073786742698176E-6	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999998370092208	WITHOUT_CLASSIFICATION	1.629907792504799E-7	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999999561943733	WITHOUT_CLASSIFICATION	4.38056267095207E-7	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999989738554353	WITHOUT_CLASSIFICATION	1.0261445646459805E-6	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9998259787662286	WITHOUT_CLASSIFICATION	1.7402123377135574E-4	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.999999930937185	WITHOUT_CLASSIFICATION	6.906281507320964E-8	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999789441246	WITHOUT_CLASSIFICATION	2.1055875475762938E-8	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999645627279227	WITHOUT_CLASSIFICATION	3.543727207738632E-5	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999930520322	WITHOUT_CLASSIFICATION	6.947967815120242E-9	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999997740827666	WITHOUT_CLASSIFICATION	2.259172333229846E-7	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999996840825982	WITHOUT_CLASSIFICATION	3.1591740177961885E-7	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999970639126834	WITHOUT_CLASSIFICATION	2.936087316559396E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999974703033381	WITHOUT_CLASSIFICATION	2.5296966619595716E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999974703033381	WITHOUT_CLASSIFICATION	2.5296966619595716E-6	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.999998575945779	WITHOUT_CLASSIFICATION	1.4240542209356269E-6	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999968203055213	WITHOUT_CLASSIFICATION	3.1796944787373264E-6	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999997498591946	WITHOUT_CLASSIFICATION	2.501408053821645E-7	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999971208113684	WITHOUT_CLASSIFICATION	2.8791886316646094E-6	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999979038637473	WITHOUT_CLASSIFICATION	2.0961362525835662E-6	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999999270741794	WITHOUT_CLASSIFICATION	7.292582057849749E-8	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999819301555	WITHOUT_CLASSIFICATION	1.8069844559889426E-8	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999956909019887	WITHOUT_CLASSIFICATION	4.309098011317931E-6	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999995487492798	WITHOUT_CLASSIFICATION	4.5125072018896663E-7	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999999567882949	WITHOUT_CLASSIFICATION	4.321170511751988E-8	TEST
// re-register	WITHOUT_CLASSIFICATION	0.999998230640705	WITHOUT_CLASSIFICATION	1.7693592949189078E-6	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999997221705934	WITHOUT_CLASSIFICATION	2.7782940655326663E-7	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999965217345748	WITHOUT_CLASSIFICATION	3.478265425221419E-6	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.999998904619954	WITHOUT_CLASSIFICATION	1.0953800459448024E-6	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999974721664657	WITHOUT_CLASSIFICATION	2.527833534370374E-6	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999940952811236	WITHOUT_CLASSIFICATION	5.9047188764127395E-6	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999991872772481	WITHOUT_CLASSIFICATION	8.127227518717186E-7	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999996676614393	WITHOUT_CLASSIFICATION	3.3233856068639817E-7	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999998741062857	WITHOUT_CLASSIFICATION	1.2589371428304874E-7	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999986264582553	WITHOUT_CLASSIFICATION	1.3735417446401982E-6	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999997880924409	WITHOUT_CLASSIFICATION	2.1190755901447014E-7	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999997505899343	WITHOUT_CLASSIFICATION	2.4941006572925247E-7	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999995116049751	WITHOUT_CLASSIFICATION	4.883950249516046E-7	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999974244942482	WITHOUT_CLASSIFICATION	2.5755057517315616E-6	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999967023025311	WITHOUT_CLASSIFICATION	3.2976974689041555E-6	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999993987154505	WITHOUT_CLASSIFICATION	6.012845494235268E-7	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999380135725456	WITHOUT_CLASSIFICATION	6.198642745433685E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999994020163439	WITHOUT_CLASSIFICATION	5.979836561377123E-7	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999985999988237	WITHOUT_CLASSIFICATION	1.4000011762127056E-6	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999993793945687	WITHOUT_CLASSIFICATION	6.206054312643329E-7	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999999827483569	WITHOUT_CLASSIFICATION	1.7251643162029624E-8	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.999998104798031	WITHOUT_CLASSIFICATION	1.895201969034176E-6	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.999998298763202	WITHOUT_CLASSIFICATION	1.7012367979764321E-6	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.999986631514032	WITHOUT_CLASSIFICATION	1.3368485967998236E-5	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999905082590176	WITHOUT_CLASSIFICATION	9.491740982343457E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999989317536122	WITHOUT_CLASSIFICATION	1.0682463877399638E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999995442481212	WITHOUT_CLASSIFICATION	4.557518787975554E-7	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999982474873796	WITHOUT_CLASSIFICATION	1.7525126204526908E-6	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999993879966989	WITHOUT_CLASSIFICATION	6.120033012699733E-7	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999997487684298	WITHOUT_CLASSIFICATION	2.5123157022295187E-7	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.999999162708721	WITHOUT_CLASSIFICATION	8.372912789099675E-7	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.999999295324905	WITHOUT_CLASSIFICATION	7.046750949508312E-7	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999992847382797	WITHOUT_CLASSIFICATION	7.152617204083726E-7	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999979353371546	WITHOUT_CLASSIFICATION	2.0646628453366707E-6	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.999991218208085	WITHOUT_CLASSIFICATION	8.781791914951694E-6	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999979353371546	WITHOUT_CLASSIFICATION	2.0646628453366707E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999978473504885	WITHOUT_CLASSIFICATION	2.1526495115961296E-6	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9999892313246714	WITHOUT_CLASSIFICATION	1.0768675328588016E-5	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999991650738963	WITHOUT_CLASSIFICATION	8.349261038260628E-7	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9993708541390387	WITHOUT_CLASSIFICATION	6.291458609612179E-4	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999967577064489	WITHOUT_CLASSIFICATION	3.242293551033379E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999981605530697	WITHOUT_CLASSIFICATION	1.8394469303030522E-6	TEST
// write	WITHOUT_CLASSIFICATION	0.9999961914765458	WITHOUT_CLASSIFICATION	3.8085234541024844E-6	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9997860500338926	WITHOUT_CLASSIFICATION	2.1394996610727516E-4	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999971469182697	WITHOUT_CLASSIFICATION	2.8530817303402267E-6	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999987448137394	WITHOUT_CLASSIFICATION	1.2551862605965844E-6	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999978873565881	WITHOUT_CLASSIFICATION	2.1126434118009517E-6	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999980675555791	WITHOUT_CLASSIFICATION	1.9324444209873737E-6	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999993235578378	WITHOUT_CLASSIFICATION	6.764421621038129E-7	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999998863323949	WITHOUT_CLASSIFICATION	1.1366760500692539E-7	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.999965224554377	WITHOUT_CLASSIFICATION	3.4775445623097015E-5	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9997681984115812	WITHOUT_CLASSIFICATION	2.3180158841879493E-4	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999296250934	WITHOUT_CLASSIFICATION	7.037490649803705E-8	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999979596882462	WITHOUT_CLASSIFICATION	2.040311753716519E-6	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999956400194497	WITHOUT_CLASSIFICATION	4.3599805502258416E-6	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999939492731162	WITHOUT_CLASSIFICATION	6.050726883798069E-6	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.999999349282817	WITHOUT_CLASSIFICATION	6.507171829212427E-7	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999994738057116	WITHOUT_CLASSIFICATION	5.261942882724703E-7	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999950159719381	WITHOUT_CLASSIFICATION	4.984028062006659E-6	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999996759487795	WITHOUT_CLASSIFICATION	3.2405122060404103E-7	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999998661348489	WITHOUT_CLASSIFICATION	1.338651509585787E-7	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999994025597762	WITHOUT_CLASSIFICATION	5.974402238805586E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999998923578824	WITHOUT_CLASSIFICATION	1.0764211756440986E-7	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999999081939376	WITHOUT_CLASSIFICATION	9.180606235191483E-8	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999997745638342	WITHOUT_CLASSIFICATION	2.254361657787561E-7	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.999999705591032	WITHOUT_CLASSIFICATION	2.944089679645741E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999697017529021	WITHOUT_CLASSIFICATION	3.0298247097822137E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999742887058302	WITHOUT_CLASSIFICATION	2.571129416995084E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999753781582095	WITHOUT_CLASSIFICATION	2.4621841790504354E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999993864557859	WITHOUT_CLASSIFICATION	6.135442141383248E-7	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999997232715592	WITHOUT_CLASSIFICATION	2.7672844084611256E-7	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.99999969563134	WITHOUT_CLASSIFICATION	3.04368659975734E-7	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.99999403022095	WITHOUT_CLASSIFICATION	5.969779050016695E-6	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999998522203128	WITHOUT_CLASSIFICATION	1.4777968718911317E-7	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999969613591658	WITHOUT_CLASSIFICATION	3.0386408340932834E-6	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999860964160064	WITHOUT_CLASSIFICATION	1.3903583993494336E-5	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999905630877	WITHOUT_CLASSIFICATION	9.436912212346804E-9	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999948083504857	WITHOUT_CLASSIFICATION	5.1916495143365976E-6	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999109563421	WITHOUT_CLASSIFICATION	8.904365799496774E-8	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999982976309895	WITHOUT_CLASSIFICATION	1.7023690105107584E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999982976309895	WITHOUT_CLASSIFICATION	1.7023690105107584E-6	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999992604200554	WITHOUT_CLASSIFICATION	7.3957994459549E-7	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999997728263497	WITHOUT_CLASSIFICATION	2.27173650222348E-7	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999995245451788	WITHOUT_CLASSIFICATION	4.7545482116506407E-7	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999992280540735	WITHOUT_CLASSIFICATION	7.719459264232478E-7	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999337299926	WITHOUT_CLASSIFICATION	6.627000740885998E-8	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999616314823	WITHOUT_CLASSIFICATION	3.836851766405842E-8	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999976016461425	WITHOUT_CLASSIFICATION	2.3983538575828273E-6	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.999999528561269	WITHOUT_CLASSIFICATION	4.71438731098911E-7	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999992697979588	WITHOUT_CLASSIFICATION	7.302020411489682E-7	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.999999867280602	WITHOUT_CLASSIFICATION	1.3271939792176825E-7	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.999996918134795	WITHOUT_CLASSIFICATION	3.0818652050442714E-6	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999998689078501	WITHOUT_CLASSIFICATION	1.3109214986336618E-7	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999984084116276	WITHOUT_CLASSIFICATION	1.5915883723549656E-6	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999940494459614	WITHOUT_CLASSIFICATION	5.9505540386301906E-6	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999717028157	WITHOUT_CLASSIFICATION	2.8297184267922885E-8	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999994718706487	WITHOUT_CLASSIFICATION	5.281293513250923E-7	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999995131399322	WITHOUT_CLASSIFICATION	4.868600678559221E-7	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.999999617139993	WITHOUT_CLASSIFICATION	3.828600070223615E-7	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999952825653489	WITHOUT_CLASSIFICATION	4.717434651118379E-6	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999991639914538	WITHOUT_CLASSIFICATION	8.360085461275276E-7	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999852490360106	WITHOUT_CLASSIFICATION	1.4750963989344129E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999978704788841	WITHOUT_CLASSIFICATION	2.1295211159580156E-6	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999998590878045	WITHOUT_CLASSIFICATION	1.409121954927023E-7	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999999687799466	WITHOUT_CLASSIFICATION	3.122005335318584E-8	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999756340200241	WITHOUT_CLASSIFICATION	2.4365979975897395E-5	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.999999960424477	WITHOUT_CLASSIFICATION	3.957552296429351E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999997832098558	WITHOUT_CLASSIFICATION	2.1679014415531526E-7	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.999997258801869	WITHOUT_CLASSIFICATION	2.7411981310578267E-6	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999996040126143	WITHOUT_CLASSIFICATION	3.959873855973143E-7	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999981132949141	WITHOUT_CLASSIFICATION	1.8867050859151363E-6	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999989577193725	WITHOUT_CLASSIFICATION	1.0422806274598467E-6	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999988028667895	WITHOUT_CLASSIFICATION	1.1971332105090532E-6	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999751274978	WITHOUT_CLASSIFICATION	2.487250219414183E-8	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999998228938374	WITHOUT_CLASSIFICATION	1.7710616261846124E-7	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999996924661108	WITHOUT_CLASSIFICATION	3.075338892746252E-7	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.999999954095231	WITHOUT_CLASSIFICATION	4.590476903792682E-8	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999810059663771	WITHOUT_CLASSIFICATION	1.8994033622877833E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999729250487172	WITHOUT_CLASSIFICATION	2.707495128291274E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999994991294873	WITHOUT_CLASSIFICATION	5.008705127462536E-7	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999769405478541	WITHOUT_CLASSIFICATION	2.3059452145947264E-5	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999948542614719	WITHOUT_CLASSIFICATION	5.1457385281634525E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999999360729604	WITHOUT_CLASSIFICATION	6.39270395144343E-8	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999870704782036	WITHOUT_CLASSIFICATION	1.292952179635207E-5	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999994464892219	WITHOUT_CLASSIFICATION	5.535107781429109E-7	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999984753802393	WITHOUT_CLASSIFICATION	1.52461976062496E-6	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999101405892	WITHOUT_CLASSIFICATION	8.985941076169024E-8	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999185265495	WITHOUT_CLASSIFICATION	8.147345052226323E-8	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.999999857349968	WITHOUT_CLASSIFICATION	1.4265003187543577E-7	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9999434498646897	WITHOUT_CLASSIFICATION	5.655013531020207E-5	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.999997500846296	WITHOUT_CLASSIFICATION	2.4991537039942088E-6	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999835927024	WITHOUT_CLASSIFICATION	1.640729761477213E-8	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.999999619825287	WITHOUT_CLASSIFICATION	3.801747130872066E-7	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999188153443	WITHOUT_CLASSIFICATION	8.118465561375714E-8	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999911421954	WITHOUT_CLASSIFICATION	8.857804568033343E-9	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999998426728367	WITHOUT_CLASSIFICATION	1.5732716328568936E-7	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999998823236207	WITHOUT_CLASSIFICATION	1.1767637934626978E-7	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999998986464127	WITHOUT_CLASSIFICATION	1.0135358736509515E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999976435070795	WITHOUT_CLASSIFICATION	2.3564929203993336E-6	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999999396800863	WITHOUT_CLASSIFICATION	6.031991369319211E-8	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999406118346	WITHOUT_CLASSIFICATION	5.9388165411647774E-8	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999999068049384	WITHOUT_CLASSIFICATION	9.319506152476152E-8	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999988703011838	WITHOUT_CLASSIFICATION	1.1296988160778492E-6	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999992944125152	WITHOUT_CLASSIFICATION	7.055874848226604E-7	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999014514891	WITHOUT_CLASSIFICATION	9.854851082727457E-8	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999995937922718	WITHOUT_CLASSIFICATION	4.062077283349118E-7	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999670437608342	WITHOUT_CLASSIFICATION	3.295623916569166E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999856390241058	WITHOUT_CLASSIFICATION	1.4360975894239877E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999979003260531	WITHOUT_CLASSIFICATION	2.0996739469442212E-6	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999927884555267	WITHOUT_CLASSIFICATION	7.21154447324993E-6	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999994188172088	WITHOUT_CLASSIFICATION	5.811827912007755E-7	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999995156987138	WITHOUT_CLASSIFICATION	4.84301286060897E-7	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999990412348208	WITHOUT_CLASSIFICATION	9.58765179193891E-7	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999093345774	WITHOUT_CLASSIFICATION	9.066542257120393E-8	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999790268880434	WITHOUT_CLASSIFICATION	2.0973111956511228E-5	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9999305395980408	WITHOUT_CLASSIFICATION	6.946040195919317E-5	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9999550902672081	WITHOUT_CLASSIFICATION	4.490973279205098E-5	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9999444253445603	WITHOUT_CLASSIFICATION	5.557465543968995E-5	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9999419880043855	WITHOUT_CLASSIFICATION	5.801199561453297E-5	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9999483392096806	WITHOUT_CLASSIFICATION	5.166079031941363E-5	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9999499640514665	WITHOUT_CLASSIFICATION	5.0035948533563534E-5	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9999501523154611	WITHOUT_CLASSIFICATION	4.984768453882311E-5	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9999514284574604	WITHOUT_CLASSIFICATION	4.8571542539618035E-5	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9999483563252964	WITHOUT_CLASSIFICATION	5.164367470357207E-5	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9999404491181448	WITHOUT_CLASSIFICATION	5.955088185511792E-5	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.999937488736637	WITHOUT_CLASSIFICATION	6.251126336293389E-5	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.999930324969227	WITHOUT_CLASSIFICATION	6.967503077307419E-5	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9999253925941841	WITHOUT_CLASSIFICATION	7.460740581579774E-5	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.999936534940196	WITHOUT_CLASSIFICATION	6.346505980403937E-5	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9999362544512337	WITHOUT_CLASSIFICATION	6.374554876626719E-5	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9999386923848869	WITHOUT_CLASSIFICATION	6.130761511312497E-5	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.999927351382431	WITHOUT_CLASSIFICATION	7.264861756885325E-5	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.9998975870582126	WITHOUT_CLASSIFICATION	1.0241294178726408E-4	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9999276015437659	WITHOUT_CLASSIFICATION	7.239845623408754E-5	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999990658170458	WITHOUT_CLASSIFICATION	9.341829542675295E-7	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999901172627736	WITHOUT_CLASSIFICATION	9.882737226485955E-6	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999995844889152	WITHOUT_CLASSIFICATION	4.1551108478102696E-7	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999996723982737	WITHOUT_CLASSIFICATION	3.2760172624313573E-7	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999991645342868	WITHOUT_CLASSIFICATION	8.354657131859694E-7	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999999564562947	WITHOUT_CLASSIFICATION	4.354370531565858E-8	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999999065902174	WITHOUT_CLASSIFICATION	9.340978252258323E-8	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999999754422559	WITHOUT_CLASSIFICATION	2.455774403661909E-8	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999998677190761	WITHOUT_CLASSIFICATION	1.3228092383343895E-7	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999996555599073	WITHOUT_CLASSIFICATION	3.4444009273936346E-7	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9929267330647112	WITHOUT_CLASSIFICATION	0.007073266935288801	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999995569785077	WITHOUT_CLASSIFICATION	4.4302149233279974E-7	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999993733097543	WITHOUT_CLASSIFICATION	6.26690245602921E-7	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999994285116914	WITHOUT_CLASSIFICATION	5.714883086246769E-7	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999994285116914	WITHOUT_CLASSIFICATION	5.714883086246769E-7	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999999050164181	WITHOUT_CLASSIFICATION	9.498358192103701E-8	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999957961504679	WITHOUT_CLASSIFICATION	4.203849532188245E-6	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999978286842	WITHOUT_CLASSIFICATION	2.171315892140004E-9	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999990135369784	WITHOUT_CLASSIFICATION	9.864630215867435E-7	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999999964991051	WITHOUT_CLASSIFICATION	3.5008950291829637E-9	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.999987558704294	WITHOUT_CLASSIFICATION	1.2441295706076182E-5	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999968867762506	WITHOUT_CLASSIFICATION	3.113223749353507E-6	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999996992940043	WITHOUT_CLASSIFICATION	3.007059957683126E-7	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.999999851390875	WITHOUT_CLASSIFICATION	1.486091249694025E-7	TEST
// base	WITHOUT_CLASSIFICATION	0.9999975044077999	WITHOUT_CLASSIFICATION	2.495592200154721E-6	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999590646002211	WITHOUT_CLASSIFICATION	4.093539977891817E-5	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999997844986833	WITHOUT_CLASSIFICATION	2.1550131674846491E-7	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9999892295800923	WITHOUT_CLASSIFICATION	1.0770419907749825E-5	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999998118566905	WITHOUT_CLASSIFICATION	1.8814330955499155E-7	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999998254017591	WITHOUT_CLASSIFICATION	1.7459824086696714E-7	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999928112106515	WITHOUT_CLASSIFICATION	7.188789348427269E-6	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999967631866332	WITHOUT_CLASSIFICATION	3.2368133666696736E-6	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999218439879	WITHOUT_CLASSIFICATION	7.815601211213421E-8	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999982218562612	WITHOUT_CLASSIFICATION	1.7781437388343211E-6	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999860033121009	WITHOUT_CLASSIFICATION	1.3996687899250355E-5	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999995454772739	WITHOUT_CLASSIFICATION	4.5452272608350534E-7	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999999983598254	WITHOUT_CLASSIFICATION	1.640174596845388E-9	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999945682845339	WITHOUT_CLASSIFICATION	5.431715466131503E-6	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999992305193992	WITHOUT_CLASSIFICATION	7.694806007203014E-7	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999478836438	WITHOUT_CLASSIFICATION	5.211635628966195E-8	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999975257616613	WITHOUT_CLASSIFICATION	2.4742383387890492E-6	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999997095807612	WITHOUT_CLASSIFICATION	2.904192388145664E-7	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999997986022248	WITHOUT_CLASSIFICATION	2.0139777532752124E-7	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999968305516891	WITHOUT_CLASSIFICATION	3.169448310791819E-6	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999937877205903	WITHOUT_CLASSIFICATION	6.2122794096670714E-6	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999977879122257	WITHOUT_CLASSIFICATION	2.2120877743653027E-6	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999976083380765	WITHOUT_CLASSIFICATION	2.3916619234914633E-6	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.999995072951318	WITHOUT_CLASSIFICATION	4.927048682113794E-6	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999972777311775	WITHOUT_CLASSIFICATION	2.7222688223779266E-6	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999993147940791	WITHOUT_CLASSIFICATION	6.85205920910074E-7	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999988197523886	WITHOUT_CLASSIFICATION	1.1802476114492815E-6	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999945804410002	WITHOUT_CLASSIFICATION	5.419558999746912E-6	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999141769879	WITHOUT_CLASSIFICATION	8.582301212304575E-8	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.999999835238533	WITHOUT_CLASSIFICATION	1.6476146706380623E-7	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999553745236	WITHOUT_CLASSIFICATION	4.462547637868411E-8	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999985640302816	WITHOUT_CLASSIFICATION	1.4359697183585386E-6	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999998256916371	WITHOUT_CLASSIFICATION	1.7430836291215521E-7	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999998055836521	WITHOUT_CLASSIFICATION	1.9441634795170052E-7	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999961908219372	WITHOUT_CLASSIFICATION	3.809178062780256E-6	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999961908219372	WITHOUT_CLASSIFICATION	3.809178062780256E-6	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999999099964705	WITHOUT_CLASSIFICATION	9.00035295253689E-8	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999996920487816	WITHOUT_CLASSIFICATION	3.079512184070925E-7	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.999999725714708	WITHOUT_CLASSIFICATION	2.742852920927911E-7	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999952255374542	WITHOUT_CLASSIFICATION	4.774462545769023E-6	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999605311346299	WITHOUT_CLASSIFICATION	3.946886537012706E-5	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.999999272043627	WITHOUT_CLASSIFICATION	7.279563728895324E-7	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999998620986593	WITHOUT_CLASSIFICATION	1.379013407838205E-7	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999458418956214	WITHOUT_CLASSIFICATION	5.4158104378499576E-5	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999997138394612	WITHOUT_CLASSIFICATION	2.861605388522725E-7	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.999999254961416	WITHOUT_CLASSIFICATION	7.450385839036664E-7	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999994840848749	WITHOUT_CLASSIFICATION	5.15915125104366E-7	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999993428143286	WITHOUT_CLASSIFICATION	6.571856713887876E-7	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999932498030671	WITHOUT_CLASSIFICATION	6.750196932746981E-6	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999958974083872	WITHOUT_CLASSIFICATION	4.10259161274158E-6	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9990334974253945	WITHOUT_CLASSIFICATION	9.665025746056459E-4	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999968363864036	WITHOUT_CLASSIFICATION	3.1636135963866543E-6	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999098122866836	WITHOUT_CLASSIFICATION	9.018771331638935E-5	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999995997254638	WITHOUT_CLASSIFICATION	4.002745361755721E-7	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999977757020138	WITHOUT_CLASSIFICATION	2.224297986282977E-6	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999973732372592	WITHOUT_CLASSIFICATION	2.62676274080683E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999073232828	WITHOUT_CLASSIFICATION	9.267671714229012E-8	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999073232828	WITHOUT_CLASSIFICATION	9.267671714229012E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991802479585	WITHOUT_CLASSIFICATION	8.19752041550543E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991802479585	WITHOUT_CLASSIFICATION	8.19752041550543E-7	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999996323778283	WITHOUT_CLASSIFICATION	3.676221717559925E-7	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999992879613128	WITHOUT_CLASSIFICATION	7.120386871323433E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999968337178688	WITHOUT_CLASSIFICATION	3.166282131000853E-6	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999988966607407	WITHOUT_CLASSIFICATION	1.1033392593276816E-6	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999963933050512	WITHOUT_CLASSIFICATION	3.6066949488338557E-6	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999998587124183	WITHOUT_CLASSIFICATION	1.4128758171336194E-7	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999968303898618	WITHOUT_CLASSIFICATION	3.169610138321445E-6	TEST
// Profile	WITHOUT_CLASSIFICATION	0.999996195276727	WITHOUT_CLASSIFICATION	3.8047232730304163E-6	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999985928816264	WITHOUT_CLASSIFICATION	1.407118373611286E-6	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999986978352924	WITHOUT_CLASSIFICATION	1.3021647075514061E-6	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999983155246481	WITHOUT_CLASSIFICATION	1.6844753519363663E-6	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999998825018339	WITHOUT_CLASSIFICATION	1.1749816610928851E-7	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999989844037047	WITHOUT_CLASSIFICATION	1.015596295324666E-6	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9997932681058398	WITHOUT_CLASSIFICATION	2.0673189416016996E-4	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999996113535141	WITHOUT_CLASSIFICATION	3.886464858034164E-7	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999984081992016	WITHOUT_CLASSIFICATION	1.591800798476302E-6	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.999998261277251	WITHOUT_CLASSIFICATION	1.738722749002771E-6	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999989022038295	WITHOUT_CLASSIFICATION	1.0977961705374187E-6	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9999852831622986	WITHOUT_CLASSIFICATION	1.4716837701440675E-5	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999990195218138	WITHOUT_CLASSIFICATION	9.804781862394224E-7	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999981240508122	WITHOUT_CLASSIFICATION	1.8759491878260409E-6	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.999999755577616	WITHOUT_CLASSIFICATION	2.4442238408422126E-7	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999993840165228	WITHOUT_CLASSIFICATION	6.159834772579204E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999998923578824	WITHOUT_CLASSIFICATION	1.0764211756440986E-7	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999616314823	WITHOUT_CLASSIFICATION	3.836851766405842E-8	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999994194391545	WITHOUT_CLASSIFICATION	5.805608453895966E-7	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999744799729	WITHOUT_CLASSIFICATION	2.552002706794403E-8	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999998007146785	WITHOUT_CLASSIFICATION	1.9928532150634288E-7	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999999382684779	WITHOUT_CLASSIFICATION	6.173152212926977E-8	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999998818126209	WITHOUT_CLASSIFICATION	1.1818737907825024E-7	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999998818126209	WITHOUT_CLASSIFICATION	1.1818737907825024E-7	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.999999975222246	WITHOUT_CLASSIFICATION	2.477775393909645E-8	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999993106264033	WITHOUT_CLASSIFICATION	6.893735966622557E-7	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.999999688708895	WITHOUT_CLASSIFICATION	3.1129110497132917E-7	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999996400289536	WITHOUT_CLASSIFICATION	3.5997104636862423E-7	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999999923892844	WITHOUT_CLASSIFICATION	7.610715557776266E-9	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999995007628547	WITHOUT_CLASSIFICATION	4.992371453487214E-7	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999984516454506	WITHOUT_CLASSIFICATION	1.5483545493367183E-6	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999999874816342	WITHOUT_CLASSIFICATION	1.2518365883840272E-8	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999996815939558	WITHOUT_CLASSIFICATION	3.184060441975382E-7	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999991724974904	WITHOUT_CLASSIFICATION	8.275025095846227E-7	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999954736117966	WITHOUT_CLASSIFICATION	4.526388203345821E-6	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999999444229705	WITHOUT_CLASSIFICATION	5.55770294889451E-8	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999992509002582	WITHOUT_CLASSIFICATION	7.490997418208958E-7	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999987133428052	WITHOUT_CLASSIFICATION	1.2866571947316305E-6	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999992850486012	WITHOUT_CLASSIFICATION	7.149513988147632E-7	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999982138138147	WITHOUT_CLASSIFICATION	1.7861861852226887E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999971873592823	WITHOUT_CLASSIFICATION	2.812640717627023E-6	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999997783858405	WITHOUT_CLASSIFICATION	2.2161415936408182E-7	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999999346890889	WITHOUT_CLASSIFICATION	6.531091121471861E-8	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999540894133668	WITHOUT_CLASSIFICATION	4.591058663309298E-5	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999991745431162	WITHOUT_CLASSIFICATION	8.254568838576555E-7	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999997886967778	WITHOUT_CLASSIFICATION	2.1130322218679325E-6	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999677015682058	WITHOUT_CLASSIFICATION	3.2298431794221304E-5	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999979525172898	WITHOUT_CLASSIFICATION	2.0474827101799005E-6	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999990023199906	WITHOUT_CLASSIFICATION	9.976800094398375E-7	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999998435084368	WITHOUT_CLASSIFICATION	1.564915630904671E-7	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999989642501591	WITHOUT_CLASSIFICATION	1.0357498409052684E-6	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999950135887273	WITHOUT_CLASSIFICATION	4.9864112726748E-6	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999991929901184	WITHOUT_CLASSIFICATION	8.070098815599427E-7	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999992108474278	WITHOUT_CLASSIFICATION	7.891525722844338E-7	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999999219089772	WITHOUT_CLASSIFICATION	7.809102272902112E-8	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999985364275953	WITHOUT_CLASSIFICATION	1.4635724046923462E-6	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999986435723529	WITHOUT_CLASSIFICATION	1.3564276469806392E-6	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9999944102757686	WITHOUT_CLASSIFICATION	5.589724231387809E-6	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999990159956749	WITHOUT_CLASSIFICATION	9.84004325081047E-7	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999998616323573	WITHOUT_CLASSIFICATION	1.383676426604689E-7	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999869151281807	WITHOUT_CLASSIFICATION	1.3084871819123479E-5	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999941811740949	WITHOUT_CLASSIFICATION	5.818825905128018E-6	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999996503685521	WITHOUT_CLASSIFICATION	3.496314478936673E-7	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999979278692629	WITHOUT_CLASSIFICATION	2.072130737079454E-6	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999998850920478	WITHOUT_CLASSIFICATION	1.149079521531769E-7	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999999544423254	WITHOUT_CLASSIFICATION	4.5557674592582614E-8	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999989680115893	WITHOUT_CLASSIFICATION	1.0319884107506841E-6	TEST
// while	WITHOUT_CLASSIFICATION	0.9999960811292616	WITHOUT_CLASSIFICATION	3.918870738315185E-6	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999017759399841	WITHOUT_CLASSIFICATION	9.822406001590113E-5	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999999467668232	WITHOUT_CLASSIFICATION	5.3233176836494224E-8	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999990379198249	WITHOUT_CLASSIFICATION	9.62080175189204E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999843365576	WITHOUT_CLASSIFICATION	1.5663442521740682E-8	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999999063966487	WITHOUT_CLASSIFICATION	9.360335136543303E-8	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999994249986335	WITHOUT_CLASSIFICATION	5.750013664076887E-7	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999436796167231	WITHOUT_CLASSIFICATION	5.6320383276890995E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999659037490884	WITHOUT_CLASSIFICATION	3.409625091157888E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999647810959454	WITHOUT_CLASSIFICATION	3.5218904054487705E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999717270296713	WITHOUT_CLASSIFICATION	2.8272970328781266E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999900157748728	WITHOUT_CLASSIFICATION	9.984225127094245E-6	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999745570997254	WITHOUT_CLASSIFICATION	2.5442900274646933E-5	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999837355988112	WITHOUT_CLASSIFICATION	1.6264401188842485E-5	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.999999332624885	WITHOUT_CLASSIFICATION	6.67375115009729E-7	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.999981411390872	WITHOUT_CLASSIFICATION	1.8588609128034188E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999990391996775	WITHOUT_CLASSIFICATION	9.608003225622716E-7	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9998834316730562	WITHOUT_CLASSIFICATION	1.1656832694387892E-4	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999436796167231	WITHOUT_CLASSIFICATION	5.6320383276890995E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999647810959454	WITHOUT_CLASSIFICATION	3.5218904054487705E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999659037490884	WITHOUT_CLASSIFICATION	3.409625091157888E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999519681669455	WITHOUT_CLASSIFICATION	4.803183305442511E-5	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999644193367846	WITHOUT_CLASSIFICATION	3.558066321540315E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.999979145675395	WITHOUT_CLASSIFICATION	2.0854324604937033E-5	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999991038376268	WITHOUT_CLASSIFICATION	8.961623733123464E-7	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999996194282558	WITHOUT_CLASSIFICATION	3.8057174427470824E-7	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999969515621969	WITHOUT_CLASSIFICATION	3.048437802984699E-6	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999958650666125	WITHOUT_CLASSIFICATION	4.134933387526771E-6	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999983181938075	WITHOUT_CLASSIFICATION	1.6818061924837047E-6	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999984595262309	WITHOUT_CLASSIFICATION	1.5404737691416016E-6	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999998367496783	WITHOUT_CLASSIFICATION	1.6325032170527924E-7	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999998833331945	WITHOUT_CLASSIFICATION	1.1666680551351672E-7	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999999891592772	WITHOUT_CLASSIFICATION	1.084072281183472E-8	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999969750910118	WITHOUT_CLASSIFICATION	3.024908988311739E-6	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999982605546677	WITHOUT_CLASSIFICATION	1.7394453323003432E-6	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999999795872235	WITHOUT_CLASSIFICATION	2.0412776364467183E-8	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999973417555664	WITHOUT_CLASSIFICATION	2.6582444336431648E-6	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999975197511862	WITHOUT_CLASSIFICATION	2.48024881371186E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999986024294303	WITHOUT_CLASSIFICATION	1.397570569796788E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999986024294303	WITHOUT_CLASSIFICATION	1.397570569796788E-6	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999974666440868	WITHOUT_CLASSIFICATION	2.53335591308038E-6	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999993647501586	WITHOUT_CLASSIFICATION	6.352498413770672E-7	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999961513534235	WITHOUT_CLASSIFICATION	3.848646576470088E-6	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999655565489719	WITHOUT_CLASSIFICATION	3.444345102809288E-5	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999984804559677	WITHOUT_CLASSIFICATION	1.519544032278679E-6	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999994500614312	WITHOUT_CLASSIFICATION	5.499385687534543E-7	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999998588687761	WITHOUT_CLASSIFICATION	1.4113122394330587E-7	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999992583525772	WITHOUT_CLASSIFICATION	7.41647422718176E-7	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999997494777121	WITHOUT_CLASSIFICATION	2.505222879402617E-7	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999765153529	WITHOUT_CLASSIFICATION	2.3484647088507996E-8	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999998445236092	WITHOUT_CLASSIFICATION	1.554763907564189E-7	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999847374881194	WITHOUT_CLASSIFICATION	1.5262511880523287E-5	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999987424336775	WITHOUT_CLASSIFICATION	1.2575663225355318E-6	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999985012202248	WITHOUT_CLASSIFICATION	1.4987797751963881E-6	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999993125601221	WITHOUT_CLASSIFICATION	6.874398778981504E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999990741054385	WITHOUT_CLASSIFICATION	9.258945615222338E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999997265866128	WITHOUT_CLASSIFICATION	2.7341338708314255E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999190984609	WITHOUT_CLASSIFICATION	8.090153915108909E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999190984609	WITHOUT_CLASSIFICATION	8.090153915108909E-8	TEST
// colon3	WITHOUT_CLASSIFICATION	0.999995609074866	WITHOUT_CLASSIFICATION	4.390925134047711E-6	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999946561462496	WITHOUT_CLASSIFICATION	5.343853750391619E-6	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999979395931119	WITHOUT_CLASSIFICATION	2.060406888005844E-6	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999939691565181	WITHOUT_CLASSIFICATION	6.030843481926653E-6	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999998115419015	WITHOUT_CLASSIFICATION	1.8845809854646703E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999190984609	WITHOUT_CLASSIFICATION	8.090153915108909E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999190984609	WITHOUT_CLASSIFICATION	8.090153915108909E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999632903938	WITHOUT_CLASSIFICATION	3.6709606166753056E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999632903938	WITHOUT_CLASSIFICATION	3.6709606166753056E-8	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999972594247062	WITHOUT_CLASSIFICATION	2.7405752938784707E-6	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999941228743887	WITHOUT_CLASSIFICATION	5.877125611296624E-6	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999999112482538	WITHOUT_CLASSIFICATION	8.87517461998085E-8	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999996395581832	WITHOUT_CLASSIFICATION	3.604418167606164E-7	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999999934722693	WITHOUT_CLASSIFICATION	6.527730699882862E-8	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999999934722693	WITHOUT_CLASSIFICATION	6.527730699882862E-8	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999995339989747	WITHOUT_CLASSIFICATION	4.660010252813455E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999966870013467	WITHOUT_CLASSIFICATION	3.3129986532049277E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999834493591873	WITHOUT_CLASSIFICATION	1.655064081270966E-5	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999979579275037	WITHOUT_CLASSIFICATION	2.042072496368623E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999622259675	WITHOUT_CLASSIFICATION	3.777403250439066E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999982665375345	WITHOUT_CLASSIFICATION	1.7334624654215246E-6	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999994603815567	WITHOUT_CLASSIFICATION	5.396184431841087E-7	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999997502137621	WITHOUT_CLASSIFICATION	2.4978623796485033E-7	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999995123708946	WITHOUT_CLASSIFICATION	4.876291054094593E-7	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999310761805	WITHOUT_CLASSIFICATION	6.892381948763973E-8	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999903368301604	WITHOUT_CLASSIFICATION	9.663169839694138E-6	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999997328853991	WITHOUT_CLASSIFICATION	2.6711460089472617E-7	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999984750073777	WITHOUT_CLASSIFICATION	1.524992622328526E-6	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999997739291733	WITHOUT_CLASSIFICATION	2.2607082674585295E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999990741054385	WITHOUT_CLASSIFICATION	9.258945615222338E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999190984609	WITHOUT_CLASSIFICATION	8.090153915108909E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999632903938	WITHOUT_CLASSIFICATION	3.6709606166753056E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999982665375345	WITHOUT_CLASSIFICATION	1.7334624654215246E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999982981680374	WITHOUT_CLASSIFICATION	1.7018319625606154E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999982981680374	WITHOUT_CLASSIFICATION	1.7018319625606154E-6	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999999178504244	WITHOUT_CLASSIFICATION	8.214957554192211E-8	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999995060687114	WITHOUT_CLASSIFICATION	4.939312885493644E-7	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999614104478	WITHOUT_CLASSIFICATION	3.85895521580641E-8	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999865689216	WITHOUT_CLASSIFICATION	1.343107837565258E-8	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999995202204012	WITHOUT_CLASSIFICATION	4.797795987947908E-7	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999996470504448	WITHOUT_CLASSIFICATION	3.529495552510808E-7	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999974366408804	WITHOUT_CLASSIFICATION	2.563359119587096E-6	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999953251481536	WITHOUT_CLASSIFICATION	4.674851846491454E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999308927852	WITHOUT_CLASSIFICATION	6.910721490652642E-8	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.999999699138131	WITHOUT_CLASSIFICATION	3.008618689813427E-7	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999982554269391	WITHOUT_CLASSIFICATION	1.7445730609551956E-6	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999756904361	WITHOUT_CLASSIFICATION	2.430956391506551E-8	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999998384554569	WITHOUT_CLASSIFICATION	1.6154454301626964E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999997265866128	WITHOUT_CLASSIFICATION	2.7341338708314255E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999632903938	WITHOUT_CLASSIFICATION	3.6709606166753056E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999966870013467	WITHOUT_CLASSIFICATION	3.3129986532049277E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999834493591873	WITHOUT_CLASSIFICATION	1.655064081270966E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999834493591873	WITHOUT_CLASSIFICATION	1.655064081270966E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999622259675	WITHOUT_CLASSIFICATION	3.777403250439066E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999982665375345	WITHOUT_CLASSIFICATION	1.7334624654215246E-6	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999982665375345	WITHOUT_CLASSIFICATION	1.7334624654215246E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999982981680374	WITHOUT_CLASSIFICATION	1.7018319625606154E-6	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999992878217242	WITHOUT_CLASSIFICATION	7.121782757262752E-7	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999983961796779	WITHOUT_CLASSIFICATION	1.6038203221668691E-6	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999998707534807	WITHOUT_CLASSIFICATION	1.2924651928978942E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999395321150785	WITHOUT_CLASSIFICATION	6.0467884921468455E-5	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.999998312519974	WITHOUT_CLASSIFICATION	1.6874800260556063E-6	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999892893876569	WITHOUT_CLASSIFICATION	1.071061234318723E-5	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.99999960351456	WITHOUT_CLASSIFICATION	3.964854400733987E-7	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999586958538	WITHOUT_CLASSIFICATION	4.130414613489369E-8	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.999999730914089	WITHOUT_CLASSIFICATION	2.690859109619025E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999966870013467	WITHOUT_CLASSIFICATION	3.3129986532049277E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999834493591873	WITHOUT_CLASSIFICATION	1.655064081270966E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999834493591873	WITHOUT_CLASSIFICATION	1.655064081270966E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999622259675	WITHOUT_CLASSIFICATION	3.777403250439066E-8	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999953251481536	WITHOUT_CLASSIFICATION	4.674851846491454E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.999999699138131	WITHOUT_CLASSIFICATION	3.008618689813427E-7	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.999809525287386	WITHOUT_CLASSIFICATION	1.9047471261397588E-4	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999995565967708	WITHOUT_CLASSIFICATION	4.4340322926542707E-7	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999944446811657	WITHOUT_CLASSIFICATION	5.555318834296866E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999944446811657	WITHOUT_CLASSIFICATION	5.555318834296866E-6	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999995194601672	WITHOUT_CLASSIFICATION	4.805398329094832E-7	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999992612604656	WITHOUT_CLASSIFICATION	7.387395345035226E-7	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999842394921783	WITHOUT_CLASSIFICATION	1.5760507821736707E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999999841228695	WITHOUT_CLASSIFICATION	1.5877130491668537E-7	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999989503855115	WITHOUT_CLASSIFICATION	1.0496144885378815E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999989503855115	WITHOUT_CLASSIFICATION	1.0496144885378815E-6	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999994216531717	WITHOUT_CLASSIFICATION	5.783468283118254E-7	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999994216531717	WITHOUT_CLASSIFICATION	5.783468283118254E-7	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999998352887273	WITHOUT_CLASSIFICATION	1.6471127263905426E-7	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999998352887273	WITHOUT_CLASSIFICATION	1.6471127263905426E-7	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.999998746100903	WITHOUT_CLASSIFICATION	1.2538990969685975E-6	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999992387916496	WITHOUT_CLASSIFICATION	7.612083503499236E-7	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999661089506057	WITHOUT_CLASSIFICATION	3.389104939441939E-5	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999997876852325	WITHOUT_CLASSIFICATION	2.1231476748327841E-7	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999999514929164	WITHOUT_CLASSIFICATION	4.850708346454216E-8	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999944058124033	WITHOUT_CLASSIFICATION	5.594187596729221E-6	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999973247007193	WITHOUT_CLASSIFICATION	2.6752992807030996E-6	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999962746469925	WITHOUT_CLASSIFICATION	3.7253530076394453E-6	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999806586379537	WITHOUT_CLASSIFICATION	1.9341362046245346E-5	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999956932721639	WITHOUT_CLASSIFICATION	4.306727836091858E-6	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999998419196143	WITHOUT_CLASSIFICATION	1.580803856619204E-7	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999998110604944	WITHOUT_CLASSIFICATION	1.8893950569678196E-7	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999990356506337	WITHOUT_CLASSIFICATION	9.643493662303758E-7	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999971462706158	WITHOUT_CLASSIFICATION	2.8537293841109755E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999971462706158	WITHOUT_CLASSIFICATION	2.8537293841109755E-6	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999990157409729	WITHOUT_CLASSIFICATION	9.842590270326802E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999998587124183	WITHOUT_CLASSIFICATION	1.4128758171336194E-7	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999966059155286	WITHOUT_CLASSIFICATION	3.3940844712524755E-6	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999554900354	WITHOUT_CLASSIFICATION	4.450996453542542E-8	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999986993667843	WITHOUT_CLASSIFICATION	1.3006332157952727E-6	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999996318283556	WITHOUT_CLASSIFICATION	3.681716443817232E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999998106322008	WITHOUT_CLASSIFICATION	1.8936779925944335E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999998396311729	WITHOUT_CLASSIFICATION	1.6036882698633488E-7	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999998783823264	WITHOUT_CLASSIFICATION	1.2161767362458603E-7	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999554807172	WITHOUT_CLASSIFICATION	4.4519282769277646E-8	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999997195420736	WITHOUT_CLASSIFICATION	2.804579264953607E-7	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.999998549606782	WITHOUT_CLASSIFICATION	1.450393217883732E-6	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999995268060372	WITHOUT_CLASSIFICATION	4.731939627683012E-7	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999990092920201	WITHOUT_CLASSIFICATION	9.907079798701437E-7	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999837622135789	WITHOUT_CLASSIFICATION	1.6237786421120198E-5	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999983835061541	WITHOUT_CLASSIFICATION	1.6164938458383713E-6	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999991898943238	WITHOUT_CLASSIFICATION	8.101056761938482E-7	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.999999939384845	WITHOUT_CLASSIFICATION	6.061515499203025E-8	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999995304851743	WITHOUT_CLASSIFICATION	4.6951482569674734E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999995304851743	WITHOUT_CLASSIFICATION	4.6951482569674734E-7	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999999671089739	WITHOUT_CLASSIFICATION	3.28910261806274E-8	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999884632616635	WITHOUT_CLASSIFICATION	1.1536738336574853E-5	TEST
//[]	WITHOUT_CLASSIFICATION	0.9997402885909892	WITHOUT_CLASSIFICATION	2.597114090107542E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9997402885909892	WITHOUT_CLASSIFICATION	2.597114090107542E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999981821587414	WITHOUT_CLASSIFICATION	1.81784125865255E-6	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999899574410986	WITHOUT_CLASSIFICATION	1.004255890129459E-5	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.99995871042151	WITHOUT_CLASSIFICATION	4.12895784900047E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999737450553202	WITHOUT_CLASSIFICATION	2.625494467982314E-5	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999993090418157	WITHOUT_CLASSIFICATION	6.909581843118933E-7	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999074385642	WITHOUT_CLASSIFICATION	9.256143582928596E-8	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999074385642	WITHOUT_CLASSIFICATION	9.256143582928596E-8	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999709829923	WITHOUT_CLASSIFICATION	2.9017007652686373E-8	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999993600107171	WITHOUT_CLASSIFICATION	6.39989282963382E-7	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999995924535148	WITHOUT_CLASSIFICATION	4.0754648526491016E-7	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999898949138503	WITHOUT_CLASSIFICATION	1.010508614973572E-5	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999884632616635	WITHOUT_CLASSIFICATION	1.1536738336574853E-5	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999821402961543	WITHOUT_CLASSIFICATION	1.7859703845742607E-5	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999995608730304	WITHOUT_CLASSIFICATION	4.391269695984973E-6	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999995608730304	WITHOUT_CLASSIFICATION	4.391269695984973E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999982144388696	WITHOUT_CLASSIFICATION	1.7855611304898427E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999368330904	WITHOUT_CLASSIFICATION	6.31669095585717E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999368330904	WITHOUT_CLASSIFICATION	6.31669095585717E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998116367921	WITHOUT_CLASSIFICATION	1.8836320800651156E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998116367921	WITHOUT_CLASSIFICATION	1.8836320800651156E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998116367921	WITHOUT_CLASSIFICATION	1.8836320800651156E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999368330904	WITHOUT_CLASSIFICATION	6.31669095585717E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999368330904	WITHOUT_CLASSIFICATION	6.31669095585717E-8	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999982144388696	WITHOUT_CLASSIFICATION	1.7855611304898427E-6	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999998970871312	WITHOUT_CLASSIFICATION	1.0291286876332603E-7	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999997945431116	WITHOUT_CLASSIFICATION	2.054568884489915E-7	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999997648101207	WITHOUT_CLASSIFICATION	2.3518987932883102E-7	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999982878970162	WITHOUT_CLASSIFICATION	1.7121029838961359E-6	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999401385108	WITHOUT_CLASSIFICATION	5.986148921696174E-8	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999989054233871	WITHOUT_CLASSIFICATION	1.0945766128642357E-6	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999980421730369	WITHOUT_CLASSIFICATION	1.957826963158782E-6	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999700173228	WITHOUT_CLASSIFICATION	2.998267724422453E-8	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999997195420736	WITHOUT_CLASSIFICATION	2.804579264953607E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999368330904	WITHOUT_CLASSIFICATION	6.31669095585717E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999368330904	WITHOUT_CLASSIFICATION	6.31669095585717E-8	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999553794041	WITHOUT_CLASSIFICATION	4.462059590089347E-8	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999997474165898	WITHOUT_CLASSIFICATION	2.525834101177892E-7	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999966082963478	WITHOUT_CLASSIFICATION	3.391703652063392E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999997744005115	WITHOUT_CLASSIFICATION	2.255994884571631E-7	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999995320711833	WITHOUT_CLASSIFICATION	4.679288167737223E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999299762713	WITHOUT_CLASSIFICATION	7.002372864790521E-8	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999999959803485	WITHOUT_CLASSIFICATION	4.0196514961687635E-8	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999997896031876	WITHOUT_CLASSIFICATION	2.1039681238741633E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999999442209794	WITHOUT_CLASSIFICATION	5.577902060768555E-7	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999387181762	WITHOUT_CLASSIFICATION	6.128182389667274E-8	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999830931717216	WITHOUT_CLASSIFICATION	1.6906828278443574E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999972092469918	WITHOUT_CLASSIFICATION	2.7907530082275586E-6	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.99999949137432	WITHOUT_CLASSIFICATION	5.086256801296806E-7	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999999048465139	WITHOUT_CLASSIFICATION	9.515348610315486E-7	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999840675526	WITHOUT_CLASSIFICATION	1.5932447383977717E-8	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999951280791628	WITHOUT_CLASSIFICATION	4.871920837238683E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999951280791628	WITHOUT_CLASSIFICATION	4.871920837238683E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999951280791628	WITHOUT_CLASSIFICATION	4.871920837238683E-6	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999997843898137	WITHOUT_CLASSIFICATION	2.156101861531249E-7	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.99999991884407	WITHOUT_CLASSIFICATION	8.115592999666073E-8	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999999459749358	WITHOUT_CLASSIFICATION	5.402506424766379E-8	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999999187729656	WITHOUT_CLASSIFICATION	8.122703435977008E-8	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999995628916858	WITHOUT_CLASSIFICATION	4.371083143041884E-7	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999975066828725	WITHOUT_CLASSIFICATION	2.4933171275049586E-6	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999956602151	WITHOUT_CLASSIFICATION	4.339784837682135E-9	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999978503775546	WITHOUT_CLASSIFICATION	2.1496224454728194E-6	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999998843402682	WITHOUT_CLASSIFICATION	1.1565973182224006E-7	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999992061043557	WITHOUT_CLASSIFICATION	7.938956443544735E-7	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999972888806832	WITHOUT_CLASSIFICATION	2.711119316762667E-6	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999988179144085	WITHOUT_CLASSIFICATION	1.1820855914673714E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999709829923	WITHOUT_CLASSIFICATION	2.9017007652686373E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999368330904	WITHOUT_CLASSIFICATION	6.31669095585717E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999368330904	WITHOUT_CLASSIFICATION	6.31669095585717E-8	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999982144388696	WITHOUT_CLASSIFICATION	1.7855611304898427E-6	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999989054233871	WITHOUT_CLASSIFICATION	1.0945766128642357E-6	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999997474165898	WITHOUT_CLASSIFICATION	2.525834101177892E-7	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999997744005115	WITHOUT_CLASSIFICATION	2.255994884571631E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999299762713	WITHOUT_CLASSIFICATION	7.002372864790521E-8	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999966082963478	WITHOUT_CLASSIFICATION	3.391703652063392E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999999959803485	WITHOUT_CLASSIFICATION	4.0196514961687635E-8	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999387181762	WITHOUT_CLASSIFICATION	6.128182389667274E-8	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999999442209794	WITHOUT_CLASSIFICATION	5.577902060768555E-7	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999972092469918	WITHOUT_CLASSIFICATION	2.7907530082275586E-6	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999997773361978	WITHOUT_CLASSIFICATION	2.2266380220308114E-7	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999995127896655	WITHOUT_CLASSIFICATION	4.872103344991297E-7	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999992326041932	WITHOUT_CLASSIFICATION	7.673958068414953E-7	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999998468181068	WITHOUT_CLASSIFICATION	1.531818930572349E-7	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999989357772452	WITHOUT_CLASSIFICATION	1.0642227548278634E-6	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.99999897782916	WITHOUT_CLASSIFICATION	1.0221708400245297E-6	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999993715114035	WITHOUT_CLASSIFICATION	6.284885965086161E-7	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999986033250122	WITHOUT_CLASSIFICATION	1.3966749878705581E-6	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999994384224505	WITHOUT_CLASSIFICATION	5.615775494724478E-7	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999998050301027	WITHOUT_CLASSIFICATION	1.9496989734521048E-7	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999998484143466	WITHOUT_CLASSIFICATION	1.51585653320041E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999999818306122	WITHOUT_CLASSIFICATION	1.8169387796908305E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999993280610916	WITHOUT_CLASSIFICATION	6.719389084030955E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999995903126673	WITHOUT_CLASSIFICATION	4.096873327038662E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999823983388	WITHOUT_CLASSIFICATION	1.7601661270825324E-8	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.999998857624891	WITHOUT_CLASSIFICATION	1.1423751089522372E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999929296282425	WITHOUT_CLASSIFICATION	7.070371757583242E-6	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999995033391402	WITHOUT_CLASSIFICATION	4.966608597516512E-7	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999218689544	WITHOUT_CLASSIFICATION	7.813104557376435E-8	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999996820982586	WITHOUT_CLASSIFICATION	3.1790174134070177E-7	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999998778630605	WITHOUT_CLASSIFICATION	1.2213693942904084E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999616484553	WITHOUT_CLASSIFICATION	3.835154464035397E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999616484553	WITHOUT_CLASSIFICATION	3.835154464035397E-8	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999996673066511	WITHOUT_CLASSIFICATION	3.3269334881090246E-7	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999259367011	WITHOUT_CLASSIFICATION	7.406329888230421E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999152608586838	WITHOUT_CLASSIFICATION	8.473914131627489E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999152608586838	WITHOUT_CLASSIFICATION	8.473914131627489E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999152608586838	WITHOUT_CLASSIFICATION	8.473914131627489E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999008080508331	WITHOUT_CLASSIFICATION	9.919194916679774E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999008080508331	WITHOUT_CLASSIFICATION	9.919194916679774E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999008080508331	WITHOUT_CLASSIFICATION	9.919194916679774E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999008080508331	WITHOUT_CLASSIFICATION	9.919194916679774E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997756527763696	WITHOUT_CLASSIFICATION	2.2434722363035454E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997756527763696	WITHOUT_CLASSIFICATION	2.2434722363035454E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997756527763696	WITHOUT_CLASSIFICATION	2.2434722363035454E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998296013171154	WITHOUT_CLASSIFICATION	1.7039868288467122E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998296013171154	WITHOUT_CLASSIFICATION	1.7039868288467122E-4	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9997957791842373	WITHOUT_CLASSIFICATION	2.0422081576252415E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9998633653193615	WITHOUT_CLASSIFICATION	1.3663468063858763E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999259367011	WITHOUT_CLASSIFICATION	7.406329888230421E-8	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999997899871823	WITHOUT_CLASSIFICATION	2.1001281773021253E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999152608586838	WITHOUT_CLASSIFICATION	8.473914131627489E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999152608586838	WITHOUT_CLASSIFICATION	8.473914131627489E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999008080508331	WITHOUT_CLASSIFICATION	9.919194916679774E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999008080508331	WITHOUT_CLASSIFICATION	9.919194916679774E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999008080508331	WITHOUT_CLASSIFICATION	9.919194916679774E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997756527763696	WITHOUT_CLASSIFICATION	2.2434722363035454E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997756527763696	WITHOUT_CLASSIFICATION	2.2434722363035454E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998296013171154	WITHOUT_CLASSIFICATION	1.7039868288467122E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9998633653193615	WITHOUT_CLASSIFICATION	1.3663468063858763E-4	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999998660077505	WITHOUT_CLASSIFICATION	1.3399224953036894E-7	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999998660077505	WITHOUT_CLASSIFICATION	1.3399224953036894E-7	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999247326639	WITHOUT_CLASSIFICATION	7.526733604630742E-8	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999247326639	WITHOUT_CLASSIFICATION	7.526733604630742E-8	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999963230607781	WITHOUT_CLASSIFICATION	3.676939221759709E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999963230607781	WITHOUT_CLASSIFICATION	3.676939221759709E-6	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999995877240246	WITHOUT_CLASSIFICATION	4.1227597541358633E-7	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999438686542	WITHOUT_CLASSIFICATION	5.613134573570447E-8	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999438686542	WITHOUT_CLASSIFICATION	5.613134573570447E-8	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999999276946021	WITHOUT_CLASSIFICATION	7.230539781837473E-8	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999999276946021	WITHOUT_CLASSIFICATION	7.230539781837473E-8	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999998441403558	WITHOUT_CLASSIFICATION	1.5585964422966443E-7	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999995235784862	WITHOUT_CLASSIFICATION	4.7642151380522283E-7	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999995235784862	WITHOUT_CLASSIFICATION	4.7642151380522283E-7	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999998997881989	WITHOUT_CLASSIFICATION	1.0021180101797787E-7	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999997146464003	WITHOUT_CLASSIFICATION	2.85353599650132E-7	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999998400518475	WITHOUT_CLASSIFICATION	1.599481526277758E-7	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999008080508331	WITHOUT_CLASSIFICATION	9.919194916679774E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999008080508331	WITHOUT_CLASSIFICATION	9.919194916679774E-5	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999998997881989	WITHOUT_CLASSIFICATION	1.0021180101797787E-7	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999998514148977	WITHOUT_CLASSIFICATION	1.4858510231064934E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999988143022389	WITHOUT_CLASSIFICATION	1.185697761078479E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999988143022389	WITHOUT_CLASSIFICATION	1.185697761078479E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999988143022389	WITHOUT_CLASSIFICATION	1.185697761078479E-6	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999997699625826	WITHOUT_CLASSIFICATION	2.3003741754958744E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.9999970224882223	WITHOUT_CLASSIFICATION	2.9775117776938823E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999968756402371	WITHOUT_CLASSIFICATION	3.1243597627786296E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999968756402371	WITHOUT_CLASSIFICATION	3.1243597627786296E-6	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999993481068615	WITHOUT_CLASSIFICATION	6.518931384813253E-7	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999984592417879	WITHOUT_CLASSIFICATION	1.540758212211677E-6	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999982902041729	WITHOUT_CLASSIFICATION	1.7097958271100911E-6	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999974299705291	WITHOUT_CLASSIFICATION	2.5700294709117983E-6	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999995167808471	WITHOUT_CLASSIFICATION	4.832191529568167E-7	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999999601039793	WITHOUT_CLASSIFICATION	3.9896020692857556E-7	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999999601039793	WITHOUT_CLASSIFICATION	3.9896020692857556E-7	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999999870072829	WITHOUT_CLASSIFICATION	1.2992717011877884E-8	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9998136062238251	WITHOUT_CLASSIFICATION	1.863937761748569E-4	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9998136062238251	WITHOUT_CLASSIFICATION	1.863937761748569E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999008080508331	WITHOUT_CLASSIFICATION	9.919194916679774E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999988143022389	WITHOUT_CLASSIFICATION	1.185697761078479E-6	TEST
// args	WITHOUT_CLASSIFICATION	0.9999970224882223	WITHOUT_CLASSIFICATION	2.9775117776938823E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999968756402371	WITHOUT_CLASSIFICATION	3.1243597627786296E-6	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999993481068615	WITHOUT_CLASSIFICATION	6.518931384813253E-7	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999984592417879	WITHOUT_CLASSIFICATION	1.540758212211677E-6	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999982902041729	WITHOUT_CLASSIFICATION	1.7097958271100911E-6	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999974299705291	WITHOUT_CLASSIFICATION	2.5700294709117983E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9998136062238251	WITHOUT_CLASSIFICATION	1.863937761748569E-4	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999985898081916	WITHOUT_CLASSIFICATION	1.4101918085082776E-6	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999991204437156	WITHOUT_CLASSIFICATION	8.795562843088476E-7	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.999999314802422	WITHOUT_CLASSIFICATION	6.851975780432093E-7	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999995952783962	WITHOUT_CLASSIFICATION	4.0472160382055055E-7	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.999999454891885	WITHOUT_CLASSIFICATION	5.451081150587496E-7	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999947198064488	WITHOUT_CLASSIFICATION	5.280193551177824E-6	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999993295505749	WITHOUT_CLASSIFICATION	6.704494251552219E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999993295505749	WITHOUT_CLASSIFICATION	6.704494251552219E-7	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999986266011311	WITHOUT_CLASSIFICATION	1.373398868887637E-6	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999992384286494	WITHOUT_CLASSIFICATION	7.615713506228562E-7	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999993922335936	WITHOUT_CLASSIFICATION	6.07766406337933E-7	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999989908589539	WITHOUT_CLASSIFICATION	1.0091410460997058E-6	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999999417431088	WITHOUT_CLASSIFICATION	5.825689119616316E-7	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999999417431088	WITHOUT_CLASSIFICATION	5.825689119616316E-7	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999989474267289	WITHOUT_CLASSIFICATION	1.0525732711208771E-6	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999985510489173	WITHOUT_CLASSIFICATION	1.4489510827648922E-6	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999994347866742	WITHOUT_CLASSIFICATION	5.65213325824706E-7	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999994347866742	WITHOUT_CLASSIFICATION	5.65213325824706E-7	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999950126826245	WITHOUT_CLASSIFICATION	4.987317375557285E-6	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999994507205856	WITHOUT_CLASSIFICATION	5.492794144866943E-7	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999995167808471	WITHOUT_CLASSIFICATION	4.832191529568167E-7	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999995888594868	WITHOUT_CLASSIFICATION	4.1114051321239576E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999999905236404	WITHOUT_CLASSIFICATION	9.476359591440579E-8	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999998130207118	WITHOUT_CLASSIFICATION	1.869792881916332E-6	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999998209990201	WITHOUT_CLASSIFICATION	1.790009797954539E-7	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999996716458831	WITHOUT_CLASSIFICATION	3.2835411688416814E-7	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999998839050573	WITHOUT_CLASSIFICATION	1.1609494262364251E-7	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999478947315	WITHOUT_CLASSIFICATION	5.210526846767457E-8	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.999999587121725	WITHOUT_CLASSIFICATION	4.128782749682873E-7	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999341750285	WITHOUT_CLASSIFICATION	6.582497144203408E-8	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999341750285	WITHOUT_CLASSIFICATION	6.582497144203408E-8	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999994791989728	WITHOUT_CLASSIFICATION	5.208010271013365E-7	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999994791989728	WITHOUT_CLASSIFICATION	5.208010271013365E-7	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.999999961802123	WITHOUT_CLASSIFICATION	3.819787694502183E-8	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999999502316036	WITHOUT_CLASSIFICATION	4.976839644206391E-8	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999999502316036	WITHOUT_CLASSIFICATION	4.976839644206391E-8	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999999502316036	WITHOUT_CLASSIFICATION	4.976839644206391E-8	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999982669652964	WITHOUT_CLASSIFICATION	1.7330347036402821E-6	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999990861611182	WITHOUT_CLASSIFICATION	9.138388818381136E-7	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999990861611182	WITHOUT_CLASSIFICATION	9.138388818381136E-7	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999998815363974	WITHOUT_CLASSIFICATION	1.1846360250901764E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999998218009647	WITHOUT_CLASSIFICATION	1.7819903528408777E-7	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999997025549274	WITHOUT_CLASSIFICATION	2.9744507253792884E-7	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999991671888575	WITHOUT_CLASSIFICATION	8.328111423473357E-7	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999990264977328	WITHOUT_CLASSIFICATION	9.73502267250592E-7	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999973053285119	WITHOUT_CLASSIFICATION	2.694671488126836E-6	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.99996697911697	WITHOUT_CLASSIFICATION	3.302088302995223E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999993280610916	WITHOUT_CLASSIFICATION	6.719389084030955E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999993280610916	WITHOUT_CLASSIFICATION	6.719389084030955E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999982669652964	WITHOUT_CLASSIFICATION	1.7330347036402821E-6	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999998815363974	WITHOUT_CLASSIFICATION	1.1846360250901764E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998740456215	WITHOUT_CLASSIFICATION	1.2595437838257179E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999998218009647	WITHOUT_CLASSIFICATION	1.7819903528408777E-7	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999997025549274	WITHOUT_CLASSIFICATION	2.9744507253792884E-7	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999998753352073	WITHOUT_CLASSIFICATION	1.2466479274403416E-7	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999985635670493	WITHOUT_CLASSIFICATION	1.4364329507382835E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999985019813757	WITHOUT_CLASSIFICATION	1.4980186242522317E-6	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9998643792559214	WITHOUT_CLASSIFICATION	1.3562074407852284E-4	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999982070759845	WITHOUT_CLASSIFICATION	1.7929240155217884E-6	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999998924279861	WITHOUT_CLASSIFICATION	1.0757201384117526E-7	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999999352049816	WITHOUT_CLASSIFICATION	6.479501838666016E-8	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999998753352073	WITHOUT_CLASSIFICATION	1.2466479274403416E-7	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9998876734197648	WITHOUT_CLASSIFICATION	1.1232658023517312E-4	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9998876734197648	WITHOUT_CLASSIFICATION	1.1232658023517312E-4	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999933524513177	WITHOUT_CLASSIFICATION	6.647548682251689E-6	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999999607324598	WITHOUT_CLASSIFICATION	3.9267540132875505E-8	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999967399680016	WITHOUT_CLASSIFICATION	3.2600319983040907E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999900605161625	WITHOUT_CLASSIFICATION	9.939483837629872E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999990778663763	WITHOUT_CLASSIFICATION	9.221336236710957E-7	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999991150255383	WITHOUT_CLASSIFICATION	8.849744617624606E-7	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999996992877429	WITHOUT_CLASSIFICATION	3.007122570212445E-7	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999997305246527	WITHOUT_CLASSIFICATION	2.694753472227914E-7	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999998184018272	WITHOUT_CLASSIFICATION	1.815981728333254E-7	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999994559575093	WITHOUT_CLASSIFICATION	5.440424908467613E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999901507653012	WITHOUT_CLASSIFICATION	9.849234698698539E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999900605161625	WITHOUT_CLASSIFICATION	9.939483837629872E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999990778663763	WITHOUT_CLASSIFICATION	9.221336236710957E-7	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999999591361886	WITHOUT_CLASSIFICATION	4.086381153961356E-8	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999991087744136	WITHOUT_CLASSIFICATION	8.912255865198744E-7	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999992047647771	WITHOUT_CLASSIFICATION	7.952352227564252E-7	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.999995522141244	WITHOUT_CLASSIFICATION	4.477858756036348E-6	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.999997383920665	WITHOUT_CLASSIFICATION	2.616079335050178E-6	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999857378708038	WITHOUT_CLASSIFICATION	1.4262129196206613E-5	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9997500709316696	WITHOUT_CLASSIFICATION	2.499290683305029E-4	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999986637611142	WITHOUT_CLASSIFICATION	1.3362388857441857E-6	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999979721958959	WITHOUT_CLASSIFICATION	2.0278041041645704E-6	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999860883977003	WITHOUT_CLASSIFICATION	1.3911602299741834E-5	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.999996810858954	WITHOUT_CLASSIFICATION	3.1891410459651074E-6	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.999959988332859	WITHOUT_CLASSIFICATION	4.001166714092862E-5	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999998662357603	WITHOUT_CLASSIFICATION	1.3376423966735243E-7	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999998244963009	WITHOUT_CLASSIFICATION	1.755036992081966E-7	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999967308260228	WITHOUT_CLASSIFICATION	3.269173977295506E-6	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999998604182472	WITHOUT_CLASSIFICATION	1.3958175292592031E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999769522016567	WITHOUT_CLASSIFICATION	2.304779834323537E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999984857167502	WITHOUT_CLASSIFICATION	1.5142832498784832E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999479281856	WITHOUT_CLASSIFICATION	5.207181433930932E-8	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.999998996169276	WITHOUT_CLASSIFICATION	1.0038307239893978E-6	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999769522016567	WITHOUT_CLASSIFICATION	2.304779834323537E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999984857167502	WITHOUT_CLASSIFICATION	1.5142832498784832E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999479281856	WITHOUT_CLASSIFICATION	5.207181433930932E-8	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999993681058899	WITHOUT_CLASSIFICATION	6.31894110182258E-7	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.999999929997699	WITHOUT_CLASSIFICATION	7.00023009244893E-8	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999999609656941	WITHOUT_CLASSIFICATION	3.9034305842681354E-8	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999985609282024	WITHOUT_CLASSIFICATION	1.4390717976647648E-6	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999955754104284	WITHOUT_CLASSIFICATION	4.42458957153107E-6	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999997923911945	WITHOUT_CLASSIFICATION	2.0760880537032995E-7	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999999373513795	WITHOUT_CLASSIFICATION	6.264862050788236E-8	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999999536954145	WITHOUT_CLASSIFICATION	4.630458537450835E-8	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999994083463323	WITHOUT_CLASSIFICATION	5.916536676529044E-7	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999987333355818	WITHOUT_CLASSIFICATION	1.2666644182880604E-6	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9978867062573137	WITHOUT_CLASSIFICATION	0.002113293742686308	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999996663456158	WITHOUT_CLASSIFICATION	3.3365438427453227E-7	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999994922369976	WITHOUT_CLASSIFICATION	5.077630023411243E-7	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999995724667855	WITHOUT_CLASSIFICATION	4.2753321457591594E-7	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9991663717716591	WITHOUT_CLASSIFICATION	8.336282283408344E-4	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999996054007634	WITHOUT_CLASSIFICATION	3.9459923671376066E-7	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999999874859664	WITHOUT_CLASSIFICATION	1.2514033534401655E-8	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.999999497755173	WITHOUT_CLASSIFICATION	5.02244826947859E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999991194249245	WITHOUT_CLASSIFICATION	8.805750755475145E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999991487668906	WITHOUT_CLASSIFICATION	8.512331094797348E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999989048674527	WITHOUT_CLASSIFICATION	1.095132547364612E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999991376653846	WITHOUT_CLASSIFICATION	8.623346154025293E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999991376653846	WITHOUT_CLASSIFICATION	8.623346154025293E-7	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999983886769724	WITHOUT_CLASSIFICATION	1.611323027632893E-6	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999983886769724	WITHOUT_CLASSIFICATION	1.611323027632893E-6	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999977919278183	WITHOUT_CLASSIFICATION	2.208072181675511E-6	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999977919278183	WITHOUT_CLASSIFICATION	2.208072181675511E-6	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999996494692454	WITHOUT_CLASSIFICATION	3.505307546931781E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999998369256208	WITHOUT_CLASSIFICATION	1.630743792312516E-7	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999570159317	WITHOUT_CLASSIFICATION	4.298406840524695E-8	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999987643964087	WITHOUT_CLASSIFICATION	1.235603591298492E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999987794958256	WITHOUT_CLASSIFICATION	1.220504174424604E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999998147866934	WITHOUT_CLASSIFICATION	1.8521330653032717E-7	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999994890424989	WITHOUT_CLASSIFICATION	5.109575011420222E-7	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999995834004847	WITHOUT_CLASSIFICATION	4.1659951524399795E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999993280610916	WITHOUT_CLASSIFICATION	6.719389084030955E-6	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999996494692454	WITHOUT_CLASSIFICATION	3.505307546931781E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999998369256208	WITHOUT_CLASSIFICATION	1.630743792312516E-7	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999570159317	WITHOUT_CLASSIFICATION	4.298406840524695E-8	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999987794958256	WITHOUT_CLASSIFICATION	1.220504174424604E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999998147866934	WITHOUT_CLASSIFICATION	1.8521330653032717E-7	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999980973354208	WITHOUT_CLASSIFICATION	1.9026645792322877E-6	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.999999768225158	WITHOUT_CLASSIFICATION	2.317748420109712E-7	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999996254808186	WITHOUT_CLASSIFICATION	3.745191814222061E-7	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999996254808186	WITHOUT_CLASSIFICATION	3.745191814222061E-7	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999977538773318	WITHOUT_CLASSIFICATION	2.2461226681963745E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999995560699982	WITHOUT_CLASSIFICATION	4.4393000178355363E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999981440672906	WITHOUT_CLASSIFICATION	1.8559327094126516E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999996814936893	WITHOUT_CLASSIFICATION	3.185063107247326E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999996814936893	WITHOUT_CLASSIFICATION	3.185063107247326E-7	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999995137308026	WITHOUT_CLASSIFICATION	4.862691973071763E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999956731075744	WITHOUT_CLASSIFICATION	4.326892425617837E-6	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.99999876732541	WITHOUT_CLASSIFICATION	1.2326745899655605E-6	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999998698560199	WITHOUT_CLASSIFICATION	1.3014398021573467E-7	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999588360721	WITHOUT_CLASSIFICATION	4.1163927883870685E-8	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999995903126673	WITHOUT_CLASSIFICATION	4.096873327038662E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999823983388	WITHOUT_CLASSIFICATION	1.7601661270825324E-8	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.999998857624891	WITHOUT_CLASSIFICATION	1.1423751089522372E-6	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999929296282425	WITHOUT_CLASSIFICATION	7.070371757583242E-6	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999996820982586	WITHOUT_CLASSIFICATION	3.1790174134070177E-7	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999998778630605	WITHOUT_CLASSIFICATION	1.2213693942904084E-7	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999995137308026	WITHOUT_CLASSIFICATION	4.862691973071763E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999956731075744	WITHOUT_CLASSIFICATION	4.326892425617837E-6	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999998698560199	WITHOUT_CLASSIFICATION	1.3014398021573467E-7	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999998642560036	WITHOUT_CLASSIFICATION	1.3574399634489817E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999981440672906	WITHOUT_CLASSIFICATION	1.8559327094126516E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999981440672906	WITHOUT_CLASSIFICATION	1.8559327094126516E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999901507653012	WITHOUT_CLASSIFICATION	9.849234698698539E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999901507653012	WITHOUT_CLASSIFICATION	9.849234698698539E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999992647209022	WITHOUT_CLASSIFICATION	7.352790977452574E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999992647209022	WITHOUT_CLASSIFICATION	7.352790977452574E-7	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999994351975248	WITHOUT_CLASSIFICATION	5.648024751340663E-7	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999996380495343	WITHOUT_CLASSIFICATION	3.6195046570861106E-7	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999990924702802	WITHOUT_CLASSIFICATION	9.075297198401786E-7	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999972281579903	WITHOUT_CLASSIFICATION	2.7718420095954202E-6	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999978537360297	WITHOUT_CLASSIFICATION	2.1462639702564046E-6	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999970942722961	WITHOUT_CLASSIFICATION	2.905727703870196E-6	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999993114324277	WITHOUT_CLASSIFICATION	6.885675723108118E-7	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999324442327	WITHOUT_CLASSIFICATION	6.755576737228592E-8	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999999387341589	WITHOUT_CLASSIFICATION	6.126584098008725E-8	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999997145637919	WITHOUT_CLASSIFICATION	2.854362080666898E-7	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999985091044963	WITHOUT_CLASSIFICATION	1.4908955036765046E-6	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.999999810607012	WITHOUT_CLASSIFICATION	1.8939298798098757E-7	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999989942596479	WITHOUT_CLASSIFICATION	1.0057403521026975E-6	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999993605260259	WITHOUT_CLASSIFICATION	6.394739742426708E-7	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999985333562721	WITHOUT_CLASSIFICATION	1.4666437279083007E-6	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999977888399142	WITHOUT_CLASSIFICATION	2.2111600857431342E-6	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999990690363016	WITHOUT_CLASSIFICATION	9.309636982734034E-7	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999997788873617	WITHOUT_CLASSIFICATION	2.211126383384326E-7	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999999901682791	WITHOUT_CLASSIFICATION	9.831720944687028E-9	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999823983388	WITHOUT_CLASSIFICATION	1.7601661270825324E-8	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999929296282425	WITHOUT_CLASSIFICATION	7.070371757583242E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999616484553	WITHOUT_CLASSIFICATION	3.835154464035397E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999968756402371	WITHOUT_CLASSIFICATION	3.1243597627786296E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999968756402371	WITHOUT_CLASSIFICATION	3.1243597627786296E-6	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999998642560036	WITHOUT_CLASSIFICATION	1.3574399634489817E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999981440672906	WITHOUT_CLASSIFICATION	1.8559327094126516E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999901507653012	WITHOUT_CLASSIFICATION	9.849234698698539E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999992647209022	WITHOUT_CLASSIFICATION	7.352790977452574E-7	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999987803371689	WITHOUT_CLASSIFICATION	1.2196628310704546E-6	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999981808750317	WITHOUT_CLASSIFICATION	1.8191249683319247E-6	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.999999238108794	WITHOUT_CLASSIFICATION	7.618912060147872E-7	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999998282780048	WITHOUT_CLASSIFICATION	1.7172199511548973E-7	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999998959170272	WITHOUT_CLASSIFICATION	1.0408297279860108E-7	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999998959170272	WITHOUT_CLASSIFICATION	1.0408297279860108E-7	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999993416304161	WITHOUT_CLASSIFICATION	6.583695838737239E-7	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999994013290731	WITHOUT_CLASSIFICATION	5.986709268750844E-7	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999994926932454	WITHOUT_CLASSIFICATION	5.0730675469094E-7	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999993304597501	WITHOUT_CLASSIFICATION	6.695402498788108E-7	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999994363580605	WITHOUT_CLASSIFICATION	5.636419393659989E-7	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999994363580605	WITHOUT_CLASSIFICATION	5.636419393659989E-7	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999993976082662	WITHOUT_CLASSIFICATION	6.023917338071197E-7	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.999999786458523	WITHOUT_CLASSIFICATION	2.1354147691625346E-7	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999992984057376	WITHOUT_CLASSIFICATION	7.015942623173133E-7	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999962203450977	WITHOUT_CLASSIFICATION	3.7796549023049214E-6	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.99999906927857	WITHOUT_CLASSIFICATION	9.307214299364848E-7	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999119588413	WITHOUT_CLASSIFICATION	8.80411587237804E-8	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999952021065276	WITHOUT_CLASSIFICATION	4.797893472358266E-6	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999997664300011	WITHOUT_CLASSIFICATION	2.335699989630104E-7	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999990402163398	WITHOUT_CLASSIFICATION	9.597836603088898E-7	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9903870398482599	WITHOUT_CLASSIFICATION	0.009612960151740173	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999999109331432	WITHOUT_CLASSIFICATION	8.906685671965568E-8	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999874058701943	WITHOUT_CLASSIFICATION	1.2594129805786362E-5	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999974726194	WITHOUT_CLASSIFICATION	2.5273805724335425E-9	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999997200900099	WITHOUT_CLASSIFICATION	2.799099901288977E-7	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.999901324342897	WITHOUT_CLASSIFICATION	9.867565710297505E-5	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.999999035347409	WITHOUT_CLASSIFICATION	9.646525909656637E-7	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999856226032011	WITHOUT_CLASSIFICATION	1.4377396798764458E-5	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999998311219617	WITHOUT_CLASSIFICATION	1.6887803822944962E-7	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999967003986886	WITHOUT_CLASSIFICATION	3.2996013115026344E-6	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999984434520811	WITHOUT_CLASSIFICATION	1.556547918845553E-6	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999957589338513	WITHOUT_CLASSIFICATION	4.2410661487517176E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999995937519547	WITHOUT_CLASSIFICATION	4.06248045219616E-7	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999995937519547	WITHOUT_CLASSIFICATION	4.06248045219616E-7	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999998544050255	WITHOUT_CLASSIFICATION	1.4559497459640933E-7	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999996368779736	WITHOUT_CLASSIFICATION	3.63122026398706E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999998396311729	WITHOUT_CLASSIFICATION	1.6036882698633488E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999998396311729	WITHOUT_CLASSIFICATION	1.6036882698633488E-7	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999977673732011	WITHOUT_CLASSIFICATION	2.2326267989010923E-6	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999988147968242	WITHOUT_CLASSIFICATION	1.1852031758565958E-6	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999917759546716	WITHOUT_CLASSIFICATION	8.224045328337375E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.99999993924767	WITHOUT_CLASSIFICATION	6.075233000710841E-8	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.99999993924767	WITHOUT_CLASSIFICATION	6.075233000710841E-8	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.999999362534537	WITHOUT_CLASSIFICATION	6.374654630234364E-7	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999998939826799	WITHOUT_CLASSIFICATION	1.0601732011016442E-7	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999793941922	WITHOUT_CLASSIFICATION	2.0605807817646367E-8	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999999400994435	WITHOUT_CLASSIFICATION	5.990055649075488E-8	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999999242769868	WITHOUT_CLASSIFICATION	7.572301321448555E-8	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999998749150005	WITHOUT_CLASSIFICATION	1.25084999446993E-7	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999997465525471	WITHOUT_CLASSIFICATION	2.53447452938161E-7	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999919576863331	WITHOUT_CLASSIFICATION	8.042313666831095E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999991837631049	WITHOUT_CLASSIFICATION	8.162368949583843E-7	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999997882333005	WITHOUT_CLASSIFICATION	2.1176669960393427E-7	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999901385860114	WITHOUT_CLASSIFICATION	9.861413988671729E-6	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999986772859473	WITHOUT_CLASSIFICATION	1.3227140527894853E-6	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999995887277278	WITHOUT_CLASSIFICATION	4.1127227225535723E-7	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999997977221206	WITHOUT_CLASSIFICATION	2.022778794586575E-7	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.999999656370185	WITHOUT_CLASSIFICATION	3.436298150385323E-7	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999998945660942	WITHOUT_CLASSIFICATION	1.0543390582473073E-7	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999998943216672	WITHOUT_CLASSIFICATION	1.0567833264756951E-7	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.999999399378314	WITHOUT_CLASSIFICATION	6.006216860729276E-7	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999990506204693	WITHOUT_CLASSIFICATION	9.493795306507633E-7	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999985445073152	WITHOUT_CLASSIFICATION	1.4554926847219736E-6	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999995393453458	WITHOUT_CLASSIFICATION	4.6065465421814855E-7	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999988965985694	WITHOUT_CLASSIFICATION	1.1034014304727888E-6	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999986991537007	WITHOUT_CLASSIFICATION	1.300846299299894E-6	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999989997107979	WITHOUT_CLASSIFICATION	1.0002892021007317E-6	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999940824155231	WITHOUT_CLASSIFICATION	5.917584476884169E-6	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999992981593494	WITHOUT_CLASSIFICATION	7.018406505572364E-7	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999660545357638	WITHOUT_CLASSIFICATION	3.394546423620895E-5	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999994858391034	WITHOUT_CLASSIFICATION	5.141608965634687E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999984456956539	WITHOUT_CLASSIFICATION	1.55430434607054E-6	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999931636159	WITHOUT_CLASSIFICATION	6.836384115533419E-9	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999978517149	WITHOUT_CLASSIFICATION	2.1482852086651164E-9	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999997977221206	WITHOUT_CLASSIFICATION	2.022778794586575E-7	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999994858391034	WITHOUT_CLASSIFICATION	5.141608965634687E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999984456956539	WITHOUT_CLASSIFICATION	1.55430434607054E-6	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999978517149	WITHOUT_CLASSIFICATION	2.1482852086651164E-9	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999982871797395	WITHOUT_CLASSIFICATION	1.7128202605338355E-6	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999967671044709	WITHOUT_CLASSIFICATION	3.232895529146274E-6	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999985004800181	WITHOUT_CLASSIFICATION	1.499519981843712E-6	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999968361892357	WITHOUT_CLASSIFICATION	3.163810764255581E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999968715244061	WITHOUT_CLASSIFICATION	3.1284755938290298E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999880063931	WITHOUT_CLASSIFICATION	1.1993606926758145E-8	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999978036164678	WITHOUT_CLASSIFICATION	2.1963835321043733E-6	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999995558154344	WITHOUT_CLASSIFICATION	4.4418456557542097E-7	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999988044303417	WITHOUT_CLASSIFICATION	1.1955696582309947E-6	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.999999560201995	WITHOUT_CLASSIFICATION	4.3979800500886115E-7	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999995053737055	WITHOUT_CLASSIFICATION	4.946262945007961E-6	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999995053737055	WITHOUT_CLASSIFICATION	4.946262945007961E-6	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999989740819947	WITHOUT_CLASSIFICATION	1.025918005371186E-6	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999747967507	WITHOUT_CLASSIFICATION	2.520324938977738E-8	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.999999937708591	WITHOUT_CLASSIFICATION	6.229140898299835E-8	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999984054502545	WITHOUT_CLASSIFICATION	1.5945497454376097E-6	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999038716837	WITHOUT_CLASSIFICATION	9.612831633192256E-8	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999948350960713	WITHOUT_CLASSIFICATION	5.164903928567951E-6	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999994025632934	WITHOUT_CLASSIFICATION	5.97436706608289E-7	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999935006023	WITHOUT_CLASSIFICATION	6.499397650117711E-9	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999995249146076	WITHOUT_CLASSIFICATION	4.750853923528222E-7	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999943239157	WITHOUT_CLASSIFICATION	5.6760842265035155E-9	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999996247773628	WITHOUT_CLASSIFICATION	3.752226372703899E-7	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999927589042	WITHOUT_CLASSIFICATION	7.241095913458229E-9	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999974073551398	WITHOUT_CLASSIFICATION	2.592644860317501E-6	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999998239720481	WITHOUT_CLASSIFICATION	1.7602795193322549E-7	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999995172807872	WITHOUT_CLASSIFICATION	4.827192127791834E-7	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999999865810485	WITHOUT_CLASSIFICATION	1.3418951431920973E-8	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999998107295747	WITHOUT_CLASSIFICATION	1.8927042537600878E-7	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999997320363191	WITHOUT_CLASSIFICATION	2.679636809349342E-7	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.99999974224076	WITHOUT_CLASSIFICATION	2.577592399555583E-7	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.999999281998799	WITHOUT_CLASSIFICATION	7.180012010382707E-7	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9999970352608747	WITHOUT_CLASSIFICATION	2.964739125452607E-6	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999983729736583	WITHOUT_CLASSIFICATION	1.6270263417144767E-6	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999996065467639	WITHOUT_CLASSIFICATION	3.934532361591004E-7	TEST
// others	WITHOUT_CLASSIFICATION	0.9999987789129876	WITHOUT_CLASSIFICATION	1.2210870123772182E-6	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999992180167767	WITHOUT_CLASSIFICATION	7.819832232022901E-7	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999986885090199	WITHOUT_CLASSIFICATION	1.3114909801320342E-6	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999975029511952	WITHOUT_CLASSIFICATION	2.4970488047290556E-6	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999916495506	WITHOUT_CLASSIFICATION	8.350449443495967E-9	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999964534669397	WITHOUT_CLASSIFICATION	3.5465330602637444E-6	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999990996628588	WITHOUT_CLASSIFICATION	9.003371411247417E-7	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999995983339026	WITHOUT_CLASSIFICATION	4.016660974550028E-7	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999998345691729	WITHOUT_CLASSIFICATION	1.6543082711713304E-7	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999962130763966	WITHOUT_CLASSIFICATION	3.7869236033077977E-6	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999950331848819	WITHOUT_CLASSIFICATION	4.966815118114233E-6	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999990267274634	WITHOUT_CLASSIFICATION	9.732725364650215E-7	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999819337535172	WITHOUT_CLASSIFICATION	1.8066246482873553E-5	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999955845518778	WITHOUT_CLASSIFICATION	4.4154481222491835E-6	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.999998632536184	WITHOUT_CLASSIFICATION	1.3674638159844011E-6	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.999999292435361	WITHOUT_CLASSIFICATION	7.075646389666279E-7	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999966702366321	WITHOUT_CLASSIFICATION	3.3297633678731987E-6	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999971011867241	WITHOUT_CLASSIFICATION	2.8988132759116316E-6	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998670985949532	WITHOUT_CLASSIFICATION	1.329014050468783E-4	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999984775624492	WITHOUT_CLASSIFICATION	1.5224375508312863E-6	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999996001537208	WITHOUT_CLASSIFICATION	3.9984627923060496E-7	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999992238917002	WITHOUT_CLASSIFICATION	7.761082998016073E-7	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999999992751195	WITHOUT_CLASSIFICATION	7.248806008134315E-10	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999999730475455	WITHOUT_CLASSIFICATION	2.695245451359244E-8	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999935601807	WITHOUT_CLASSIFICATION	6.439819328064901E-9	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999997514830558	WITHOUT_CLASSIFICATION	2.4851694424359374E-7	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999874380795177	WITHOUT_CLASSIFICATION	1.256192048224465E-5	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999996365017908	WITHOUT_CLASSIFICATION	3.634982092487924E-7	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999996834175877	WITHOUT_CLASSIFICATION	3.16582412364485E-7	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999950903185528	WITHOUT_CLASSIFICATION	4.90968144712162E-6	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999634094945845	WITHOUT_CLASSIFICATION	3.659050541546333E-5	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9997015294861107	WITHOUT_CLASSIFICATION	2.984705138893063E-4	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999986391577494	WITHOUT_CLASSIFICATION	1.3608422506488733E-6	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999998173081305	WITHOUT_CLASSIFICATION	1.826918694760422E-7	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999997761285057	WITHOUT_CLASSIFICATION	2.23871494306906E-7	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999992689048327	WITHOUT_CLASSIFICATION	7.310951672015772E-7	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999423782623511	WITHOUT_CLASSIFICATION	5.762173764878758E-5	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999423782623511	WITHOUT_CLASSIFICATION	5.762173764878758E-5	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999978930722706	WITHOUT_CLASSIFICATION	2.106927729342633E-6	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999961133483851	WITHOUT_CLASSIFICATION	3.886651614790392E-6	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999927488552102	WITHOUT_CLASSIFICATION	7.25114478991046E-6	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999945254368675	WITHOUT_CLASSIFICATION	5.474563132381106E-6	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999996443263922	WITHOUT_CLASSIFICATION	3.556736077763286E-7	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999985539655408	WITHOUT_CLASSIFICATION	1.4460344591045202E-6	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.999954305623972	WITHOUT_CLASSIFICATION	4.569437602797188E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999915761118315	WITHOUT_CLASSIFICATION	8.423888168501619E-6	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999993559902457	WITHOUT_CLASSIFICATION	6.440097543510377E-7	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999999049326848	WITHOUT_CLASSIFICATION	9.50673151468447E-8	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999989751201994	WITHOUT_CLASSIFICATION	1.0248798004816665E-6	TEST
// class or module	WITHOUT_CLASSIFICATION	0.999999409205061	WITHOUT_CLASSIFICATION	5.907949389851013E-7	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999986768344187	WITHOUT_CLASSIFICATION	1.3231655813059698E-6	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999996774340216	WITHOUT_CLASSIFICATION	3.225659783204114E-7	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.999998965781364	WITHOUT_CLASSIFICATION	1.034218635947945E-6	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999969781351511	WITHOUT_CLASSIFICATION	3.021864848883726E-6	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999974564629937	WITHOUT_CLASSIFICATION	2.5435370063027284E-6	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999982587976848	WITHOUT_CLASSIFICATION	1.7412023153157233E-6	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999997396970871	WITHOUT_CLASSIFICATION	2.6030291288245893E-7	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999981667562066	WITHOUT_CLASSIFICATION	1.8332437933528055E-6	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999942685497547	WITHOUT_CLASSIFICATION	5.731450245341773E-6	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999975917336646	WITHOUT_CLASSIFICATION	2.40826633535074E-6	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999992873190371	WITHOUT_CLASSIFICATION	7.126809628761042E-7	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999988973820806	WITHOUT_CLASSIFICATION	1.1026179193660446E-6	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999908886978705	WITHOUT_CLASSIFICATION	9.111302129552494E-6	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999832173226809	WITHOUT_CLASSIFICATION	1.6782677319048622E-5	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.99995501179876	WITHOUT_CLASSIFICATION	4.498820123994996E-5	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999949947207314	WITHOUT_CLASSIFICATION	5.005279268689316E-6	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999998578220347	WITHOUT_CLASSIFICATION	1.4217796520525535E-7	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999998718363775	WITHOUT_CLASSIFICATION	1.2816362256204573E-7	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999999694236557	WITHOUT_CLASSIFICATION	3.0576344414172786E-8	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999997725159576	WITHOUT_CLASSIFICATION	2.274840424276138E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999991345606146	WITHOUT_CLASSIFICATION	8.654393853103536E-7	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999853665613592	WITHOUT_CLASSIFICATION	1.4633438640845536E-5	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999991345606146	WITHOUT_CLASSIFICATION	8.654393853103536E-7	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999998438120746	WITHOUT_CLASSIFICATION	1.5618792534458744E-7	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999996658278703	WITHOUT_CLASSIFICATION	3.3417212979687454E-7	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999996658278703	WITHOUT_CLASSIFICATION	3.3417212979687454E-7	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999996658278703	WITHOUT_CLASSIFICATION	3.3417212979687454E-7	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999998927520865	WITHOUT_CLASSIFICATION	1.0724791351885863E-7	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999998927520865	WITHOUT_CLASSIFICATION	1.0724791351885863E-7	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999848865092597	WITHOUT_CLASSIFICATION	1.5113490740274767E-5	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999991890489932	WITHOUT_CLASSIFICATION	8.109510067748256E-7	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999990254972702	WITHOUT_CLASSIFICATION	9.745027299352787E-7	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999999936085642	WITHOUT_CLASSIFICATION	6.39143593752255E-9	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999983861063731	WITHOUT_CLASSIFICATION	1.6138936268681496E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999845147220745	WITHOUT_CLASSIFICATION	1.5485277925515106E-5	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999996906899185	WITHOUT_CLASSIFICATION	3.0931008147698097E-7	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999991507342529	WITHOUT_CLASSIFICATION	8.49265747138128E-7	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999960825334482	WITHOUT_CLASSIFICATION	3.917466551750054E-6	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999998986163934	WITHOUT_CLASSIFICATION	1.0138360661391049E-7	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999961253645429	WITHOUT_CLASSIFICATION	3.874635457090372E-6	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999997736560933	WITHOUT_CLASSIFICATION	2.2634390661790615E-7	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999999010233127	WITHOUT_CLASSIFICATION	9.897668728472715E-8	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999991400115286	WITHOUT_CLASSIFICATION	8.599884714004539E-7	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999984511166783	WITHOUT_CLASSIFICATION	1.5488833217150594E-6	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999990781939954	WITHOUT_CLASSIFICATION	9.218060045870834E-7	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999997149561528	WITHOUT_CLASSIFICATION	2.8504384720772074E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999990127804744	WITHOUT_CLASSIFICATION	9.87219525540219E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999990127804744	WITHOUT_CLASSIFICATION	9.87219525540219E-7	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999986761372729	WITHOUT_CLASSIFICATION	1.3238627270235214E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999987607974822	WITHOUT_CLASSIFICATION	1.2392025178112336E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999987607974822	WITHOUT_CLASSIFICATION	1.2392025178112336E-6	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999928232043972	WITHOUT_CLASSIFICATION	7.1767956028915E-6	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999987371378093	WITHOUT_CLASSIFICATION	1.2628621906398354E-6	TEST
// load handle	WITHOUT_CLASSIFICATION	0.999998537431386	WITHOUT_CLASSIFICATION	1.4625686140356756E-6	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999958460430118	WITHOUT_CLASSIFICATION	4.153956988227352E-6	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999982935427235	WITHOUT_CLASSIFICATION	1.7064572765285764E-6	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999998385717294	WITHOUT_CLASSIFICATION	1.6142827073098113E-7	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999976399695081	WITHOUT_CLASSIFICATION	2.3600304918959483E-6	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999999247916508	WITHOUT_CLASSIFICATION	7.520834916395938E-8	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999997252278682	WITHOUT_CLASSIFICATION	2.747721317702089E-7	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999991658129836	WITHOUT_CLASSIFICATION	8.341870164120827E-7	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999982464397573	WITHOUT_CLASSIFICATION	1.753560242687565E-6	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999975867055995	WITHOUT_CLASSIFICATION	2.4132944005355995E-6	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999994194391545	WITHOUT_CLASSIFICATION	5.805608453895966E-7	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999997014826792	WITHOUT_CLASSIFICATION	2.9851732071554635E-7	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999991507342529	WITHOUT_CLASSIFICATION	8.49265747138128E-7	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.999902381671499	WITHOUT_CLASSIFICATION	9.761832850097527E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999996587298191	WITHOUT_CLASSIFICATION	3.4127018087204716E-7	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999994825428543	WITHOUT_CLASSIFICATION	5.174571456022671E-7	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999994825428543	WITHOUT_CLASSIFICATION	5.174571456022671E-7	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999993971752585	WITHOUT_CLASSIFICATION	6.028247414722158E-7	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999996471849761	WITHOUT_CLASSIFICATION	3.528150238389241E-7	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999999690555483	WITHOUT_CLASSIFICATION	3.094445167363914E-8	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999988248749451	WITHOUT_CLASSIFICATION	1.1751250550003243E-6	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999994592676794	WITHOUT_CLASSIFICATION	5.407323205721611E-7	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999999459272009	WITHOUT_CLASSIFICATION	5.407279911655391E-8	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999998120811825	WITHOUT_CLASSIFICATION	1.8791881751408163E-7	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999391271621061	WITHOUT_CLASSIFICATION	6.0872837893824334E-5	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999999500542266	WITHOUT_CLASSIFICATION	4.9945773418166494E-8	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999998800012129	WITHOUT_CLASSIFICATION	1.1999878710810264E-7	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999994785578168	WITHOUT_CLASSIFICATION	5.214421832956378E-7	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999997765991561	WITHOUT_CLASSIFICATION	2.2340084399231452E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.999989214621239	WITHOUT_CLASSIFICATION	1.0785378760998159E-5	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999992436216072	WITHOUT_CLASSIFICATION	7.563783927227367E-7	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999975764920285	WITHOUT_CLASSIFICATION	2.4235079714537526E-6	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.999999667519515	WITHOUT_CLASSIFICATION	3.3248048514433037E-7	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999984299496734	WITHOUT_CLASSIFICATION	1.5700503266513487E-6	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999983053425807	WITHOUT_CLASSIFICATION	1.6946574193129006E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999998236398254	WITHOUT_CLASSIFICATION	1.7636017462938814E-7	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999996751797753	WITHOUT_CLASSIFICATION	3.2482022474583346E-7	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.999998972708684	WITHOUT_CLASSIFICATION	1.0272913160541205E-6	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999999407333025	WITHOUT_CLASSIFICATION	5.926669757942447E-8	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999994144429479	WITHOUT_CLASSIFICATION	5.855570520726497E-7	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999591527567	WITHOUT_CLASSIFICATION	4.0847243300375985E-8	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.999999580765098	WITHOUT_CLASSIFICATION	4.1923490202315695E-7	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999996671516383	WITHOUT_CLASSIFICATION	3.3284836175280927E-7	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9998581879700316	WITHOUT_CLASSIFICATION	1.4181202996846115E-4	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999228356497248	WITHOUT_CLASSIFICATION	7.716435027519708E-5	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999670937118	WITHOUT_CLASSIFICATION	3.2906288193959033E-8	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999995841521456	WITHOUT_CLASSIFICATION	4.1584785438764236E-7	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999991636219377	WITHOUT_CLASSIFICATION	8.363780623053954E-7	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999997485102253	WITHOUT_CLASSIFICATION	2.514897746402766E-7	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999928891982357	WITHOUT_CLASSIFICATION	7.1108017642905024E-6	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999982675865976	WITHOUT_CLASSIFICATION	1.7324134024729966E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999987804909002	WITHOUT_CLASSIFICATION	1.2195090998324655E-6	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999935444091047	WITHOUT_CLASSIFICATION	6.455590895312331E-6	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999228356497248	WITHOUT_CLASSIFICATION	7.716435027519708E-5	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999962218700641	WITHOUT_CLASSIFICATION	3.778129935914006E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999987804909002	WITHOUT_CLASSIFICATION	1.2195090998324655E-6	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999927934864941	WITHOUT_CLASSIFICATION	7.206513505942566E-6	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999996636023329	WITHOUT_CLASSIFICATION	3.36397667019066E-7	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999984211729798	WITHOUT_CLASSIFICATION	1.578827020244297E-6	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999995308015076	WITHOUT_CLASSIFICATION	4.6919849238877656E-7	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999974954862003	WITHOUT_CLASSIFICATION	2.504513799669255E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999996396524133	WITHOUT_CLASSIFICATION	3.603475866799279E-7	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999996396524133	WITHOUT_CLASSIFICATION	3.603475866799279E-7	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999950815822269	WITHOUT_CLASSIFICATION	4.918417773010681E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999942631301	WITHOUT_CLASSIFICATION	5.736869842684381E-9	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.99999981203053	WITHOUT_CLASSIFICATION	1.8796946992674845E-7	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.99999981203053	WITHOUT_CLASSIFICATION	1.8796946992674845E-7	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999966301767	WITHOUT_CLASSIFICATION	3.3698231981374565E-9	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9992857234960801	WITHOUT_CLASSIFICATION	7.142765039199515E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9998223631987518	WITHOUT_CLASSIFICATION	1.7763680124820164E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9998223631987518	WITHOUT_CLASSIFICATION	1.7763680124820164E-4	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999991165003895	WITHOUT_CLASSIFICATION	8.834996104633919E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999983151884729	WITHOUT_CLASSIFICATION	1.6848115271233392E-6	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999996524255317	WITHOUT_CLASSIFICATION	3.4757446827927967E-7	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999998532787584	WITHOUT_CLASSIFICATION	1.467212416766376E-7	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999999658619274	WITHOUT_CLASSIFICATION	3.4138072670025945E-8	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.99999951441405	WITHOUT_CLASSIFICATION	4.855859499589188E-7	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999999069715231	WITHOUT_CLASSIFICATION	9.302847696954882E-8	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999990051845432	WITHOUT_CLASSIFICATION	9.948154567657512E-7	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.999999482076571	WITHOUT_CLASSIFICATION	5.179234290439144E-7	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.999998411848174	WITHOUT_CLASSIFICATION	1.5881518261065125E-6	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999994386858304	WITHOUT_CLASSIFICATION	5.613141696346458E-7	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.999999133790415	WITHOUT_CLASSIFICATION	8.662095850504794E-7	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.999999951645137	WITHOUT_CLASSIFICATION	4.835486305438258E-8	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999979794473834	WITHOUT_CLASSIFICATION	2.0205526166384492E-6	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999995883457532	WITHOUT_CLASSIFICATION	4.116542467464659E-7	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999998096674607	WITHOUT_CLASSIFICATION	1.9033253934332748E-7	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999872990400628	WITHOUT_CLASSIFICATION	1.2700959937120641E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999997201404643	WITHOUT_CLASSIFICATION	2.7985953570584E-7	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999998622990385	WITHOUT_CLASSIFICATION	1.3770096142388055E-7	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999999210197099	WITHOUT_CLASSIFICATION	7.898029003507307E-8	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999887608424124	WITHOUT_CLASSIFICATION	1.1239157587631141E-5	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999824347993742	WITHOUT_CLASSIFICATION	1.7565200625800887E-5	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999998166825144	WITHOUT_CLASSIFICATION	1.8331748572454715E-7	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999921044546592	WITHOUT_CLASSIFICATION	7.895545340726092E-6	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999837857354695	WITHOUT_CLASSIFICATION	1.6214264530497453E-5	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999771554239038	WITHOUT_CLASSIFICATION	2.2844576096188844E-5	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999954883716478	WITHOUT_CLASSIFICATION	4.511628352275663E-6	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999981612544724	WITHOUT_CLASSIFICATION	1.8387455277035697E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999406118346	WITHOUT_CLASSIFICATION	5.9388165411647774E-8	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999406118346	WITHOUT_CLASSIFICATION	5.9388165411647774E-8	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999567384724	WITHOUT_CLASSIFICATION	4.3261527634723125E-8	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999997577437566	WITHOUT_CLASSIFICATION	2.4225624350658783E-7	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999965276743247	WITHOUT_CLASSIFICATION	3.4723256753268343E-6	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999992217459295	WITHOUT_CLASSIFICATION	7.782540704931369E-7	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999997683468325	WITHOUT_CLASSIFICATION	2.316531675940327E-7	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999993084453744	WITHOUT_CLASSIFICATION	6.915546255550223E-7	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.999999232196566	WITHOUT_CLASSIFICATION	7.678034339826831E-7	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996353574986	WITHOUT_CLASSIFICATION	3.6464250135621127E-7	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999997325224939	WITHOUT_CLASSIFICATION	2.6747750619094226E-7	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999998930428383	WITHOUT_CLASSIFICATION	1.0695716175077296E-7	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999990028824349	WITHOUT_CLASSIFICATION	9.971175651253505E-7	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.999998800843961	WITHOUT_CLASSIFICATION	1.1991560390439997E-6	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999946968065923	WITHOUT_CLASSIFICATION	5.3031934076998066E-6	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999993832399722	WITHOUT_CLASSIFICATION	6.167600277992858E-7	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999999264019876	WITHOUT_CLASSIFICATION	7.359801229830654E-8	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999996395317718	WITHOUT_CLASSIFICATION	3.604682282203213E-7	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999993494006221	WITHOUT_CLASSIFICATION	6.505993779239773E-7	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999993788615269	WITHOUT_CLASSIFICATION	6.211384731679286E-7	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999979713064969	WITHOUT_CLASSIFICATION	2.0286935029764444E-6	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999974932273491	WITHOUT_CLASSIFICATION	2.506772650868742E-6	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999998374035659	WITHOUT_CLASSIFICATION	1.625964341086899E-7	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999944581898864	WITHOUT_CLASSIFICATION	5.541810113610076E-6	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999998527949556	WITHOUT_CLASSIFICATION	1.4720504439693073E-7	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999998682025096	WITHOUT_CLASSIFICATION	1.3179749034592246E-7	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999999015311739	WITHOUT_CLASSIFICATION	9.846882613356668E-8	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999991893373732	WITHOUT_CLASSIFICATION	8.106626269081735E-7	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999985228785703	WITHOUT_CLASSIFICATION	1.477121429717399E-6	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999978496357214	WITHOUT_CLASSIFICATION	2.150364278689427E-6	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999981313484534	WITHOUT_CLASSIFICATION	1.8686515466343015E-6	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999999432212383	WITHOUT_CLASSIFICATION	5.6778761740625004E-8	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999991496732321	WITHOUT_CLASSIFICATION	8.503267678488423E-7	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999998344812135	WITHOUT_CLASSIFICATION	1.6551878643138012E-7	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999997796561504	WITHOUT_CLASSIFICATION	2.2034384956854846E-7	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999992570650007	WITHOUT_CLASSIFICATION	7.42934999239517E-7	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999997894708442	WITHOUT_CLASSIFICATION	2.1052915578832025E-7	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999987498014433	WITHOUT_CLASSIFICATION	1.250198556624007E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999998339155616	WITHOUT_CLASSIFICATION	1.660844384500416E-7	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999954932238124	WITHOUT_CLASSIFICATION	4.506776187578135E-6	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999828623538	WITHOUT_CLASSIFICATION	1.71376462453578E-8	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999995970828564	WITHOUT_CLASSIFICATION	4.029171436785444E-7	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999993822323487	WITHOUT_CLASSIFICATION	6.177676511534741E-7	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999998575655025	WITHOUT_CLASSIFICATION	1.4243449748569758E-7	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999996844142612	WITHOUT_CLASSIFICATION	3.15585738827071E-7	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999996844142612	WITHOUT_CLASSIFICATION	3.15585738827071E-7	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999945349546646	WITHOUT_CLASSIFICATION	5.465045335391908E-6	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999913594565	WITHOUT_CLASSIFICATION	8.64054349289486E-9	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999999361111311	WITHOUT_CLASSIFICATION	6.388886875720796E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999996039842942	WITHOUT_CLASSIFICATION	3.9601570584003704E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999991194249245	WITHOUT_CLASSIFICATION	8.805750755475145E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999991487668906	WITHOUT_CLASSIFICATION	8.512331094797348E-7	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999998337583622	WITHOUT_CLASSIFICATION	1.6624163779580544E-6	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999963865402629	WITHOUT_CLASSIFICATION	3.6134597370413307E-6	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999970962481166	WITHOUT_CLASSIFICATION	2.903751883275359E-6	TEST
// tc	WITHOUT_CLASSIFICATION	0.9999941126205388	WITHOUT_CLASSIFICATION	5.887379461110782E-6	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999918963684573	WITHOUT_CLASSIFICATION	8.10363154274225E-6	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999981820286609	WITHOUT_CLASSIFICATION	1.8179713391376557E-6	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999969464421644	WITHOUT_CLASSIFICATION	3.0535578355556163E-6	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999991117940407	WITHOUT_CLASSIFICATION	8.882059593044706E-7	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999994987920933	WITHOUT_CLASSIFICATION	5.012079067326805E-7	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999987598155413	WITHOUT_CLASSIFICATION	1.2401844587660828E-6	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999993089152984	WITHOUT_CLASSIFICATION	6.910847016189282E-7	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999967099891828	WITHOUT_CLASSIFICATION	3.29001081713083E-6	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999991848498724	WITHOUT_CLASSIFICATION	8.151501276666669E-7	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999984124657217	WITHOUT_CLASSIFICATION	1.587534278269915E-6	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999994237095348	WITHOUT_CLASSIFICATION	5.762904652509708E-7	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999946065672051	WITHOUT_CLASSIFICATION	5.3934327949609945E-6	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.999999427891089	WITHOUT_CLASSIFICATION	5.721089109774016E-7	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999996698371117	WITHOUT_CLASSIFICATION	3.301628883465518E-7	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999992541679479	WITHOUT_CLASSIFICATION	7.458320520900437E-7	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999986339233574	WITHOUT_CLASSIFICATION	1.3660766425561217E-6	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999993854284561	WITHOUT_CLASSIFICATION	6.145715437820462E-7	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999990261101347	WITHOUT_CLASSIFICATION	9.738898652458114E-7	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999998285514875	WITHOUT_CLASSIFICATION	1.714485124628204E-7	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.999996742612921	WITHOUT_CLASSIFICATION	3.2573870789357235E-6	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999993205657304	WITHOUT_CLASSIFICATION	6.794342696262222E-7	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999913969759479	WITHOUT_CLASSIFICATION	8.60302405214947E-6	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999999423673438	WITHOUT_CLASSIFICATION	5.763265628362411E-8	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999999184830535	WITHOUT_CLASSIFICATION	8.15169465795383E-8	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999954932238124	WITHOUT_CLASSIFICATION	4.506776187578135E-6	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999969573145344	WITHOUT_CLASSIFICATION	3.042685465594183E-6	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999906885215949	WITHOUT_CLASSIFICATION	9.311478405084693E-6	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999906885215949	WITHOUT_CLASSIFICATION	9.311478405084693E-6	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999984571524914	WITHOUT_CLASSIFICATION	1.5428475085496401E-6	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999995019592895	WITHOUT_CLASSIFICATION	4.980407105470257E-7	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999995743274258	WITHOUT_CLASSIFICATION	4.256725741791125E-7	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999976954519394	WITHOUT_CLASSIFICATION	2.3045480607011827E-6	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999998191507592	WITHOUT_CLASSIFICATION	1.8084924089707743E-7	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999998654158083	WITHOUT_CLASSIFICATION	1.345841916627877E-7	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.999999828281634	WITHOUT_CLASSIFICATION	1.717183659945261E-7	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999997332246705	WITHOUT_CLASSIFICATION	2.667753294982059E-7	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999998307459023	WITHOUT_CLASSIFICATION	1.6925409774783747E-7	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999997680043188	WITHOUT_CLASSIFICATION	2.319956812382883E-7	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999996645013386	WITHOUT_CLASSIFICATION	3.35498661470778E-7	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999996930360124	WITHOUT_CLASSIFICATION	3.069639875384957E-7	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.99999994125337	WITHOUT_CLASSIFICATION	5.874663009771522E-8	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999991523788446	WITHOUT_CLASSIFICATION	8.476211554973712E-7	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999750294333917	WITHOUT_CLASSIFICATION	2.4970566608314527E-5	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.999999979001661	WITHOUT_CLASSIFICATION	2.0998338985246962E-8	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999998779600885	WITHOUT_CLASSIFICATION	1.220399116078974E-7	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999998036369027	WITHOUT_CLASSIFICATION	1.9636309748812304E-7	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999998796402235	WITHOUT_CLASSIFICATION	1.203597764856706E-7	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999998350234989	WITHOUT_CLASSIFICATION	1.6497650111362076E-7	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999997700899075	WITHOUT_CLASSIFICATION	2.299100925434957E-7	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999998506295278	WITHOUT_CLASSIFICATION	1.4937047227597605E-7	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999999624079892	WITHOUT_CLASSIFICATION	3.759201076508315E-8	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999998186257664	WITHOUT_CLASSIFICATION	1.8137423356851816E-7	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999620527386	WITHOUT_CLASSIFICATION	3.7947261445287705E-8	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999999456976093	WITHOUT_CLASSIFICATION	5.43023906801109E-8	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.999999566444478	WITHOUT_CLASSIFICATION	4.3355552215146366E-7	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999993477843747	WITHOUT_CLASSIFICATION	6.522156251774245E-7	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999992653081183	WITHOUT_CLASSIFICATION	7.346918816101574E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999996826009386	WITHOUT_CLASSIFICATION	3.173990614195048E-7	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999989086789203	WITHOUT_CLASSIFICATION	1.0913210798042639E-6	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999995483737	WITHOUT_CLASSIFICATION	4.5162629992375856E-7	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999987589660215	WITHOUT_CLASSIFICATION	1.2410339784409656E-6	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.999999989782921	WITHOUT_CLASSIFICATION	1.0217078900659156E-8	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999999494736943	WITHOUT_CLASSIFICATION	5.052630562765955E-8	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999994285212218	WITHOUT_CLASSIFICATION	5.714787781601362E-7	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999990822894969	WITHOUT_CLASSIFICATION	9.177105030835684E-7	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999999456976093	WITHOUT_CLASSIFICATION	5.43023906801109E-8	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.999999566444478	WITHOUT_CLASSIFICATION	4.3355552215146366E-7	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999993477843747	WITHOUT_CLASSIFICATION	6.522156251774245E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999996826009386	WITHOUT_CLASSIFICATION	3.173990614195048E-7	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999859043196	WITHOUT_CLASSIFICATION	1.4095680522109118E-8	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999998496059758	WITHOUT_CLASSIFICATION	1.5039402419192853E-7	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999995612174304	WITHOUT_CLASSIFICATION	4.387825696605362E-7	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999985746617158	WITHOUT_CLASSIFICATION	1.4253382841246812E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999966698136595	WITHOUT_CLASSIFICATION	3.33018634040122E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999998231910567	WITHOUT_CLASSIFICATION	1.7680894317408685E-7	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.999998886121793	WITHOUT_CLASSIFICATION	1.113878207089737E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999991889882834	WITHOUT_CLASSIFICATION	8.110117166909998E-7	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999995812776182	WITHOUT_CLASSIFICATION	4.1872238181951553E-7	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999971025821818	WITHOUT_CLASSIFICATION	2.897417818265778E-6	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999954935644315	WITHOUT_CLASSIFICATION	4.50643556851411E-6	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999998760819744	WITHOUT_CLASSIFICATION	1.2391802569725965E-7	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999999476432692	WITHOUT_CLASSIFICATION	5.235673090558712E-8	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999999897002994	WITHOUT_CLASSIFICATION	1.0299700631860474E-8	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999979854345833	WITHOUT_CLASSIFICATION	2.0145654167002477E-6	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999997525073048	WITHOUT_CLASSIFICATION	2.4749269526169807E-7	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999999511194871	WITHOUT_CLASSIFICATION	4.888051284337265E-8	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999994006356263	WITHOUT_CLASSIFICATION	5.993643736908958E-7	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999999700199632	WITHOUT_CLASSIFICATION	2.998003673909865E-8	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999990822894969	WITHOUT_CLASSIFICATION	9.177105030835684E-7	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999998496059758	WITHOUT_CLASSIFICATION	1.5039402419192853E-7	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999995612174304	WITHOUT_CLASSIFICATION	4.387825696605362E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999966698136595	WITHOUT_CLASSIFICATION	3.33018634040122E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999998231910567	WITHOUT_CLASSIFICATION	1.7680894317408685E-7	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.999998886121793	WITHOUT_CLASSIFICATION	1.113878207089737E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999991889882834	WITHOUT_CLASSIFICATION	8.110117166909998E-7	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999988169793982	WITHOUT_CLASSIFICATION	1.183020601874814E-6	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999942614231743	WITHOUT_CLASSIFICATION	5.738576825724372E-6	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999293405424	WITHOUT_CLASSIFICATION	7.065945757611233E-8	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999997904081782	WITHOUT_CLASSIFICATION	2.095918218429091E-7	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999983449728848	WITHOUT_CLASSIFICATION	1.655027115229669E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999983449728848	WITHOUT_CLASSIFICATION	1.655027115229669E-6	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.999999785002593	WITHOUT_CLASSIFICATION	2.1499740704572543E-7	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999998257426852	WITHOUT_CLASSIFICATION	1.7425731479908813E-7	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999988326771401	WITHOUT_CLASSIFICATION	1.1673228599300683E-6	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999996422959139	WITHOUT_CLASSIFICATION	3.57704086175216E-7	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999995483709961	WITHOUT_CLASSIFICATION	4.516290038681772E-7	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999999157189673	WITHOUT_CLASSIFICATION	8.428103278310063E-8	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999989260745877	WITHOUT_CLASSIFICATION	1.0739254123057453E-6	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999998867477019	WITHOUT_CLASSIFICATION	1.1325229814008252E-7	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.999999162750191	WITHOUT_CLASSIFICATION	8.372498089679724E-7	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999991841337431	WITHOUT_CLASSIFICATION	8.158662569589295E-7	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999999437864933	WITHOUT_CLASSIFICATION	5.621350666795428E-8	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999998670860165	WITHOUT_CLASSIFICATION	1.3291398356701115E-7	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999997067766743	WITHOUT_CLASSIFICATION	2.9322332575700247E-7	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999987056837861	WITHOUT_CLASSIFICATION	1.2943162138862452E-6	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999997958872088	WITHOUT_CLASSIFICATION	2.0411279113028955E-7	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999998004841113	WITHOUT_CLASSIFICATION	1.9951588882304022E-7	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999978034253415	WITHOUT_CLASSIFICATION	2.196574658395906E-6	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999995613507072	WITHOUT_CLASSIFICATION	4.386492928422651E-7	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.999998795552935	WITHOUT_CLASSIFICATION	1.2044470649810748E-6	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999999509233515	WITHOUT_CLASSIFICATION	4.907664858279768E-8	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9997842265708726	WITHOUT_CLASSIFICATION	2.1577342912736198E-4	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999998098997929	WITHOUT_CLASSIFICATION	1.901002070529859E-7	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999998850936165	WITHOUT_CLASSIFICATION	1.1490638345365505E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9971254363353412	WITHOUT_CLASSIFICATION	0.002874563664658907	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997267662796	WITHOUT_CLASSIFICATION	2.732337204068666E-7	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999711952092	WITHOUT_CLASSIFICATION	2.8804790765925114E-8	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999223950964	WITHOUT_CLASSIFICATION	7.760490366180399E-8	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999969348114153	WITHOUT_CLASSIFICATION	3.065188584698284E-6	TEST
// line 326	WITHOUT_CLASSIFICATION	0.999998171518717	WITHOUT_CLASSIFICATION	1.82848128304851E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997267662796	WITHOUT_CLASSIFICATION	2.732337204068666E-7	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999711952092	WITHOUT_CLASSIFICATION	2.8804790765925114E-8	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999987056837861	WITHOUT_CLASSIFICATION	1.2943162138862452E-6	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999976987416844	WITHOUT_CLASSIFICATION	2.3012583155991403E-6	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999998878926575	WITHOUT_CLASSIFICATION	1.1210734247210033E-7	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999996263076115	WITHOUT_CLASSIFICATION	3.736923884297386E-7	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999997231867511	WITHOUT_CLASSIFICATION	2.768132488415194E-7	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999997361884083	WITHOUT_CLASSIFICATION	2.6381159169205E-7	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999996569800662	WITHOUT_CLASSIFICATION	3.430199338208817E-7	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999964669444827	WITHOUT_CLASSIFICATION	3.5330555172899106E-6	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999997516470897	WITHOUT_CLASSIFICATION	2.4835291030726453E-7	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999833666807918	WITHOUT_CLASSIFICATION	1.6633319208167316E-5	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999960196576483	WITHOUT_CLASSIFICATION	3.9803423517846395E-6	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999998759489666	WITHOUT_CLASSIFICATION	1.240510333955755E-7	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999998555748278	WITHOUT_CLASSIFICATION	1.4442517212394169E-7	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.999999740721691	WITHOUT_CLASSIFICATION	2.5927830906128636E-7	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999438508219	WITHOUT_CLASSIFICATION	5.614917797570971E-8	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999877455582	WITHOUT_CLASSIFICATION	1.2254441775261475E-8	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.99999784193991	WITHOUT_CLASSIFICATION	2.1580600900234556E-6	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999999956953243	WITHOUT_CLASSIFICATION	4.304675704766064E-9	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999996367273043	WITHOUT_CLASSIFICATION	3.6327269568913466E-7	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999735304002	WITHOUT_CLASSIFICATION	2.6469599831544648E-8	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999993344895821	WITHOUT_CLASSIFICATION	6.655104179083852E-7	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999999563540277	WITHOUT_CLASSIFICATION	4.364597236504087E-8	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999996643705558	WITHOUT_CLASSIFICATION	3.356294441955285E-7	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999978707853002	WITHOUT_CLASSIFICATION	2.129214699792807E-6	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.99999998412649	WITHOUT_CLASSIFICATION	1.5873509993816064E-8	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999766045935	WITHOUT_CLASSIFICATION	2.3395406439776104E-8	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999996365559747	WITHOUT_CLASSIFICATION	3.634440252715596E-7	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9981115947254441	WITHOUT_CLASSIFICATION	0.0018884052745559436	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999524997643434	WITHOUT_CLASSIFICATION	4.7500235656684267E-5	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.99999936672934	WITHOUT_CLASSIFICATION	6.332706601132931E-7	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999998674392067	WITHOUT_CLASSIFICATION	1.3256079332383243E-7	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.999999904943116	WITHOUT_CLASSIFICATION	9.505688408414181E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999998135113235	WITHOUT_CLASSIFICATION	1.86488676407629E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999998135113235	WITHOUT_CLASSIFICATION	1.86488676407629E-7	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999997067766743	WITHOUT_CLASSIFICATION	2.9322332575700247E-7	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999997493498733	WITHOUT_CLASSIFICATION	2.5065012672684164E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999999798815723	WITHOUT_CLASSIFICATION	2.0118427693195033E-7	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999970516883824	WITHOUT_CLASSIFICATION	2.9483116175876777E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999997272136817	WITHOUT_CLASSIFICATION	2.7278631835502505E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999997272136817	WITHOUT_CLASSIFICATION	2.7278631835502505E-7	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999995223144216	WITHOUT_CLASSIFICATION	4.776855784733525E-7	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999989788218777	WITHOUT_CLASSIFICATION	1.0211781222766491E-6	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.999999696104666	WITHOUT_CLASSIFICATION	3.038953340461867E-7	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999997344447163	WITHOUT_CLASSIFICATION	2.6555528371277737E-7	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999984544626681	WITHOUT_CLASSIFICATION	1.5455373318827867E-6	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999695201708	WITHOUT_CLASSIFICATION	3.047982918867921E-8	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999998902831728	WITHOUT_CLASSIFICATION	1.0971682722536365E-7	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999996660237536	WITHOUT_CLASSIFICATION	3.339762463732736E-7	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998584568064	WITHOUT_CLASSIFICATION	1.41543193552986E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999991113341795	WITHOUT_CLASSIFICATION	8.886658204849045E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999987088009324	WITHOUT_CLASSIFICATION	1.2911990676136357E-6	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999989834531972	WITHOUT_CLASSIFICATION	1.0165468028582526E-6	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999965604375342	WITHOUT_CLASSIFICATION	3.4395624658305503E-6	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999999606113024	WITHOUT_CLASSIFICATION	3.9388697606077355E-8	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999936139430758	WITHOUT_CLASSIFICATION	6.386056924234992E-6	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999876622082221	WITHOUT_CLASSIFICATION	1.2337791777879173E-5	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999996227642577	WITHOUT_CLASSIFICATION	3.772357422960685E-7	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999996227642577	WITHOUT_CLASSIFICATION	3.772357422960685E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999989714988826	WITHOUT_CLASSIFICATION	1.0285011173430622E-6	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999989714988826	WITHOUT_CLASSIFICATION	1.0285011173430622E-6	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999997550251264	WITHOUT_CLASSIFICATION	2.4497487368473836E-7	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999575014065791	WITHOUT_CLASSIFICATION	4.249859342090529E-5	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.999999905058728	WITHOUT_CLASSIFICATION	9.49412719486672E-8	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999997393635431	WITHOUT_CLASSIFICATION	2.6063645681527323E-7	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.999999887956513	WITHOUT_CLASSIFICATION	1.1204348701832343E-7	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999994246978284	WITHOUT_CLASSIFICATION	5.753021714347039E-7	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999998586847528	WITHOUT_CLASSIFICATION	1.413152471610917E-7	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999989834531972	WITHOUT_CLASSIFICATION	1.0165468028582526E-6	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999965604375342	WITHOUT_CLASSIFICATION	3.4395624658305503E-6	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999936139430758	WITHOUT_CLASSIFICATION	6.386056924234992E-6	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999969086332228	WITHOUT_CLASSIFICATION	3.091366777320773E-6	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999993424111062	WITHOUT_CLASSIFICATION	6.575888937422803E-7	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999709069715	WITHOUT_CLASSIFICATION	2.9093028521097376E-8	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999983309147834	WITHOUT_CLASSIFICATION	1.6690852165785135E-6	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999995535877634	WITHOUT_CLASSIFICATION	4.464122366002286E-7	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999989427705036	WITHOUT_CLASSIFICATION	1.0572294963861344E-6	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999996305010111	WITHOUT_CLASSIFICATION	3.694989888372906E-7	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999996156280028	WITHOUT_CLASSIFICATION	3.8437199727413495E-7	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999995502620589	WITHOUT_CLASSIFICATION	4.4973794110048013E-7	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999995016277148	WITHOUT_CLASSIFICATION	4.983722852994525E-7	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999999025912568	WITHOUT_CLASSIFICATION	9.740874327221879E-8	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999994292867528	WITHOUT_CLASSIFICATION	5.707132471899039E-7	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999993220581638	WITHOUT_CLASSIFICATION	6.779418362408379E-7	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999969420830463	WITHOUT_CLASSIFICATION	3.05791695369744E-6	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999993601184348	WITHOUT_CLASSIFICATION	6.398815652419235E-7	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999176773936	WITHOUT_CLASSIFICATION	8.232260646751297E-8	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.99999983499626	WITHOUT_CLASSIFICATION	1.6500373993184635E-7	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999988353704206	WITHOUT_CLASSIFICATION	1.1646295793528274E-6	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999841647128023	WITHOUT_CLASSIFICATION	1.5835287197743045E-5	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.999999825900716	WITHOUT_CLASSIFICATION	1.740992840096759E-7	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999989543323787	WITHOUT_CLASSIFICATION	1.045667621219757E-6	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999993347765573	WITHOUT_CLASSIFICATION	6.652234426626245E-7	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999831257033192	WITHOUT_CLASSIFICATION	1.687429668086631E-5	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999981223627613	WITHOUT_CLASSIFICATION	1.8776372387427094E-6	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999993726972477	WITHOUT_CLASSIFICATION	6.273027523490455E-7	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999969605502468	WITHOUT_CLASSIFICATION	3.0394497533011893E-6	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999995534494265	WITHOUT_CLASSIFICATION	4.465505735616016E-7	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999780604580156	WITHOUT_CLASSIFICATION	2.1939541984419453E-5	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999998555459267	WITHOUT_CLASSIFICATION	1.4445407326315803E-7	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999998559768428	WITHOUT_CLASSIFICATION	1.4402315714103753E-7	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999996778907468	WITHOUT_CLASSIFICATION	3.221092531319999E-7	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999963162552212	WITHOUT_CLASSIFICATION	3.6837447789219945E-6	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999996700483498	WITHOUT_CLASSIFICATION	3.299516502367395E-7	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999999187108012	WITHOUT_CLASSIFICATION	8.128919881346472E-8	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999997720840283	WITHOUT_CLASSIFICATION	2.2791597173872974E-7	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999995616159587	WITHOUT_CLASSIFICATION	4.3838404123080873E-7	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999997697445976	WITHOUT_CLASSIFICATION	2.3025540239760197E-7	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999997666508231	WITHOUT_CLASSIFICATION	2.333491767945571E-7	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999668066648163	WITHOUT_CLASSIFICATION	3.3193335183700117E-5	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999064273986	WITHOUT_CLASSIFICATION	9.357260133647509E-8	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999997609900746	WITHOUT_CLASSIFICATION	2.3900992545049766E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999999798815723	WITHOUT_CLASSIFICATION	2.0118427693195033E-7	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999997697445976	WITHOUT_CLASSIFICATION	2.3025540239760197E-7	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999890590366622	WITHOUT_CLASSIFICATION	1.0940963337718863E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999808944111	WITHOUT_CLASSIFICATION	1.9105588891185384E-8	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999991876077726	WITHOUT_CLASSIFICATION	8.123922274174743E-7	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999983673867765	WITHOUT_CLASSIFICATION	1.6326132234034973E-6	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999983673867765	WITHOUT_CLASSIFICATION	1.6326132234034973E-6	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999999092326168	WITHOUT_CLASSIFICATION	9.076738313039755E-8	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999999477793463	WITHOUT_CLASSIFICATION	5.222065366015435E-8	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999999729688817	WITHOUT_CLASSIFICATION	2.7031118373977696E-8	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999786400233	WITHOUT_CLASSIFICATION	2.135997667421238E-8	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999999210261974	WITHOUT_CLASSIFICATION	7.897380254011187E-8	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999985241223577	WITHOUT_CLASSIFICATION	1.4758776424224862E-6	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999990347570855	WITHOUT_CLASSIFICATION	9.652429145107968E-7	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999978211836138	WITHOUT_CLASSIFICATION	2.178816386134073E-6	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999997442042488	WITHOUT_CLASSIFICATION	2.557957512269864E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999997442042488	WITHOUT_CLASSIFICATION	2.557957512269864E-7	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999993007706418	WITHOUT_CLASSIFICATION	6.992293582902745E-7	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999787479689072	WITHOUT_CLASSIFICATION	2.125203109281023E-5	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999997903712999	WITHOUT_CLASSIFICATION	2.0962869996913079E-7	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999997072614003	WITHOUT_CLASSIFICATION	2.9273859967393437E-7	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.999999773253941	WITHOUT_CLASSIFICATION	2.267460589255037E-7	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999999181187521	WITHOUT_CLASSIFICATION	8.188124790184965E-8	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999995248232	WITHOUT_CLASSIFICATION	4.751768450295246E-10	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.999998131378079	WITHOUT_CLASSIFICATION	1.8686219208866689E-6	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.999998601401535	WITHOUT_CLASSIFICATION	1.398598464996714E-6	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9997058479290265	WITHOUT_CLASSIFICATION	2.941520709735665E-4	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.999971762059333	WITHOUT_CLASSIFICATION	2.8237940667032902E-5	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999948839226808	WITHOUT_CLASSIFICATION	5.116077319247615E-6	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999998718629184	WITHOUT_CLASSIFICATION	1.2813708166757846E-7	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999950032667115	WITHOUT_CLASSIFICATION	4.9967332885433534E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999950032667115	WITHOUT_CLASSIFICATION	4.9967332885433534E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999992612604656	WITHOUT_CLASSIFICATION	7.387395345035226E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999991889882834	WITHOUT_CLASSIFICATION	8.110117166909998E-7	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9996056602669963	WITHOUT_CLASSIFICATION	3.9433973300367247E-4	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999999885840026	WITHOUT_CLASSIFICATION	1.1415997395534383E-8	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999618650122	WITHOUT_CLASSIFICATION	3.813498791583976E-8	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999992467527808	WITHOUT_CLASSIFICATION	7.53247219187435E-7	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999898754823747	WITHOUT_CLASSIFICATION	1.0124517625220178E-5	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999996710759799	WITHOUT_CLASSIFICATION	3.2892402020100376E-7	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999973722074214	WITHOUT_CLASSIFICATION	2.6277925785551213E-6	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999948848381017	WITHOUT_CLASSIFICATION	5.11516189818938E-6	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999996786062958	WITHOUT_CLASSIFICATION	3.213937042733934E-7	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999977971596613	WITHOUT_CLASSIFICATION	2.2028403387228722E-6	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999458603517889	WITHOUT_CLASSIFICATION	5.413964821101102E-5	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999998768699501	WITHOUT_CLASSIFICATION	1.2313005002181937E-7	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999949328885287	WITHOUT_CLASSIFICATION	5.067111471200592E-6	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999996654119209	WITHOUT_CLASSIFICATION	3.345880791418591E-7	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999995568180462	WITHOUT_CLASSIFICATION	4.431819537798265E-7	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999997863951349	WITHOUT_CLASSIFICATION	2.1360486517957723E-7	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999999591223256	WITHOUT_CLASSIFICATION	4.087767441113206E-8	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999999683747965	WITHOUT_CLASSIFICATION	3.1625203548656766E-8	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9999941266501896	WITHOUT_CLASSIFICATION	5.8733498103695675E-6	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999982947376894	WITHOUT_CLASSIFICATION	1.7052623105531378E-6	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999997332100382	WITHOUT_CLASSIFICATION	2.667899616981203E-7	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999996811051098	WITHOUT_CLASSIFICATION	3.188948900992699E-7	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9998286301873864	WITHOUT_CLASSIFICATION	1.7136981261364615E-4	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999923606594858	WITHOUT_CLASSIFICATION	7.639340514206253E-6	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999988207083014	WITHOUT_CLASSIFICATION	1.1792916985916005E-6	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999988987499786	WITHOUT_CLASSIFICATION	1.1012500213767414E-6	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999991530726072	WITHOUT_CLASSIFICATION	8.469273926863346E-7	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999989803724247	WITHOUT_CLASSIFICATION	1.0196275753526329E-6	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999994850903339	WITHOUT_CLASSIFICATION	5.149096661195317E-7	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999997784220466	WITHOUT_CLASSIFICATION	2.2157795352133013E-7	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.999998991288491	WITHOUT_CLASSIFICATION	1.0087115089573996E-6	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999998767117546	WITHOUT_CLASSIFICATION	1.2328824533855534E-7	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999995006358162	WITHOUT_CLASSIFICATION	4.993641837477818E-7	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999998177758466	WITHOUT_CLASSIFICATION	1.822241534047288E-7	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999944671025593	WITHOUT_CLASSIFICATION	5.532897440646987E-6	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999971745645838	WITHOUT_CLASSIFICATION	2.8254354161841062E-6	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999866605665143	WITHOUT_CLASSIFICATION	1.3339433485694104E-5	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999987154253326	WITHOUT_CLASSIFICATION	1.2845746674090498E-6	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999997314265102	WITHOUT_CLASSIFICATION	2.685734896789304E-7	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999995102006626	WITHOUT_CLASSIFICATION	4.897993374024573E-7	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999948485131809	WITHOUT_CLASSIFICATION	5.15148681905603E-6	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999998849048825	WITHOUT_CLASSIFICATION	1.150951176128724E-7	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.99996902352342	WITHOUT_CLASSIFICATION	3.0976476580064674E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999968337178688	WITHOUT_CLASSIFICATION	3.166282131000853E-6	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999988966607407	WITHOUT_CLASSIFICATION	1.1033392593276816E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999308927852	WITHOUT_CLASSIFICATION	6.910721490652642E-8	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999395321150785	WITHOUT_CLASSIFICATION	6.0467884921468455E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997267662796	WITHOUT_CLASSIFICATION	2.732337204068666E-7	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997267662796	WITHOUT_CLASSIFICATION	2.732337204068666E-7	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999999811399011	WITHOUT_CLASSIFICATION	1.88600989032645E-8	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999985135334848	WITHOUT_CLASSIFICATION	1.4864665151510292E-6	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999945682866364	WITHOUT_CLASSIFICATION	5.4317133636908065E-6	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999998132408181	WITHOUT_CLASSIFICATION	1.8675918176170084E-7	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999993568286952	WITHOUT_CLASSIFICATION	6.431713047211498E-7	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999991206636758	WITHOUT_CLASSIFICATION	8.793363242215028E-7	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999998996492657	WITHOUT_CLASSIFICATION	1.0035073429344972E-7	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.999999878620073	WITHOUT_CLASSIFICATION	1.2137992698792803E-7	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999899554354	WITHOUT_CLASSIFICATION	1.0044564569867862E-8	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999989780476847	WITHOUT_CLASSIFICATION	1.0219523152801187E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999998925771365	WITHOUT_CLASSIFICATION	1.0742286344373239E-7	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999998925771365	WITHOUT_CLASSIFICATION	1.0742286344373239E-7	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999998925771365	WITHOUT_CLASSIFICATION	1.0742286344373239E-7	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999968956047	WITHOUT_CLASSIFICATION	3.104395383911056E-9	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999999669162324	WITHOUT_CLASSIFICATION	3.308376762377791E-8	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999994564174223	WITHOUT_CLASSIFICATION	5.435825777163857E-7	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999995397639225	WITHOUT_CLASSIFICATION	4.6023607745937086E-7	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999995397639225	WITHOUT_CLASSIFICATION	4.6023607745937086E-7	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999996826562392	WITHOUT_CLASSIFICATION	3.1734376089776513E-7	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999991744238217	WITHOUT_CLASSIFICATION	8.255761782532451E-7	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999976031328482	WITHOUT_CLASSIFICATION	2.3968671517870624E-6	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999997606743192	WITHOUT_CLASSIFICATION	2.393256809133782E-7	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999990547040176	WITHOUT_CLASSIFICATION	9.452959822390201E-7	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999959193574386	WITHOUT_CLASSIFICATION	4.080642561414679E-6	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999998439050095	WITHOUT_CLASSIFICATION	1.5609499053320037E-7	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999999746692964	WITHOUT_CLASSIFICATION	2.5330703605566524E-8	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999994943986131	WITHOUT_CLASSIFICATION	5.056013867881832E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999997344406756	WITHOUT_CLASSIFICATION	2.655593243973459E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999997344406756	WITHOUT_CLASSIFICATION	2.655593243973459E-7	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999930459439168	WITHOUT_CLASSIFICATION	6.954056083138713E-6	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999701322386846	WITHOUT_CLASSIFICATION	2.9867761315428645E-5	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999991886020515	WITHOUT_CLASSIFICATION	8.113979484274528E-7	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999967893021621	WITHOUT_CLASSIFICATION	3.21069783789112E-6	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999999578387223	WITHOUT_CLASSIFICATION	4.2161277768731304E-8	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999980204106629	WITHOUT_CLASSIFICATION	1.979589337192608E-6	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999963672663938	WITHOUT_CLASSIFICATION	3.632733606125665E-6	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999960713535121	WITHOUT_CLASSIFICATION	3.928646487906475E-6	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999932058227453	WITHOUT_CLASSIFICATION	6.794177254739608E-6	TEST
// POP	WITHOUT_CLASSIFICATION	0.9999809378392819	WITHOUT_CLASSIFICATION	1.9062160718109395E-5	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999999277841202	WITHOUT_CLASSIFICATION	7.221587986283437E-8	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999890667080844	WITHOUT_CLASSIFICATION	1.0933291915615085E-5	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9999910212971068	WITHOUT_CLASSIFICATION	8.978702893255374E-6	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999998567103935	WITHOUT_CLASSIFICATION	1.4328960645625626E-7	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999913610911388	WITHOUT_CLASSIFICATION	8.638908861186898E-6	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999999676936763	WITHOUT_CLASSIFICATION	3.230632364990619E-8	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999994520273927	WITHOUT_CLASSIFICATION	5.479726073494626E-7	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999823996248587	WITHOUT_CLASSIFICATION	1.760037514137322E-5	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999989536033005	WITHOUT_CLASSIFICATION	1.0463966994476083E-6	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.999999942758803	WITHOUT_CLASSIFICATION	5.724119713070954E-8	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999753520090213	WITHOUT_CLASSIFICATION	2.4647990978714432E-5	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999997933759212	WITHOUT_CLASSIFICATION	2.0662407885863034E-7	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999994844216562	WITHOUT_CLASSIFICATION	5.155783437443531E-7	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999719676761646	WITHOUT_CLASSIFICATION	2.8032323835404017E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999942806410095	WITHOUT_CLASSIFICATION	5.719358990574E-6	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999998861121627	WITHOUT_CLASSIFICATION	1.1388783736274947E-7	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999993002277426	WITHOUT_CLASSIFICATION	6.99772257324799E-7	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.999993510733903	WITHOUT_CLASSIFICATION	6.489266097030734E-6	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999021619047	WITHOUT_CLASSIFICATION	9.783809534650593E-8	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999937965305371	WITHOUT_CLASSIFICATION	6.203469462902129E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999446469736806	WITHOUT_CLASSIFICATION	5.535302631939891E-5	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999957163451417	WITHOUT_CLASSIFICATION	4.283654858237023E-6	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999927907725759	WITHOUT_CLASSIFICATION	7.2092274241894126E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999446469736806	WITHOUT_CLASSIFICATION	5.535302631939891E-5	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999966438555223	WITHOUT_CLASSIFICATION	3.3561444776716105E-6	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999871327977127	WITHOUT_CLASSIFICATION	1.2867202287288444E-5	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999763279019069	WITHOUT_CLASSIFICATION	2.3672098093051436E-5	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999995852689142	WITHOUT_CLASSIFICATION	4.1473108582677983E-7	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999987447947475	WITHOUT_CLASSIFICATION	1.2552052524498656E-6	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999998349536514	WITHOUT_CLASSIFICATION	1.6504634863747943E-7	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999989076560254	WITHOUT_CLASSIFICATION	1.0923439746067786E-6	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999916284124815	WITHOUT_CLASSIFICATION	8.371587518601E-6	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999909480195843	WITHOUT_CLASSIFICATION	9.051980415701937E-6	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999659601302726	WITHOUT_CLASSIFICATION	3.403986972735445E-5	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.999962512578666	WITHOUT_CLASSIFICATION	3.748742133392014E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999868996176557	WITHOUT_CLASSIFICATION	1.3100382344298515E-5	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999870181566787	WITHOUT_CLASSIFICATION	1.2981843321404003E-5	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999986302507154	WITHOUT_CLASSIFICATION	1.3697492846049E-6	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999829760344112	WITHOUT_CLASSIFICATION	1.7023965588806245E-5	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999861057134706	WITHOUT_CLASSIFICATION	1.3894286529363542E-5	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999891844992149	WITHOUT_CLASSIFICATION	1.0815500784965634E-5	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999955623877543	WITHOUT_CLASSIFICATION	4.437612245668127E-6	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999987295444412	WITHOUT_CLASSIFICATION	1.270455558779152E-6	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999560349265048	WITHOUT_CLASSIFICATION	4.3965073495137E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999895558510857	WITHOUT_CLASSIFICATION	1.0444148914174257E-5	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999941799300447	WITHOUT_CLASSIFICATION	5.820069955337099E-6	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999747826760192	WITHOUT_CLASSIFICATION	2.521732398065278E-5	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999882441090375	WITHOUT_CLASSIFICATION	1.1755890962485862E-5	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999828268438035	WITHOUT_CLASSIFICATION	1.7173156196589134E-5	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999990095296598	WITHOUT_CLASSIFICATION	9.904703401172673E-7	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999777954276866	WITHOUT_CLASSIFICATION	2.2204572313436727E-5	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999975151815643	WITHOUT_CLASSIFICATION	2.48481843573001E-6	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999995272635717	WITHOUT_CLASSIFICATION	4.7273642832837964E-7	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999992719053605	WITHOUT_CLASSIFICATION	7.280946395330564E-7	TEST
// hash	WITHOUT_CLASSIFICATION	0.9999930002925219	WITHOUT_CLASSIFICATION	6.999707478083119E-6	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999576771858247	WITHOUT_CLASSIFICATION	4.232281417527117E-5	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999983808694367	WITHOUT_CLASSIFICATION	1.619130563253568E-6	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999992684638989	WITHOUT_CLASSIFICATION	7.315361011343475E-7	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999987646183589	WITHOUT_CLASSIFICATION	1.2353816411046624E-6	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999982925477018	WITHOUT_CLASSIFICATION	1.7074522982571276E-6	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999988278955367	WITHOUT_CLASSIFICATION	1.1721044632552567E-6	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9999597593324646	WITHOUT_CLASSIFICATION	4.0240667535417893E-5	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999995586445957	WITHOUT_CLASSIFICATION	4.413554043574879E-7	TEST
// backslash	WITHOUT_CLASSIFICATION	0.999997388221443	WITHOUT_CLASSIFICATION	2.6117785569754443E-6	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999972177077185	WITHOUT_CLASSIFICATION	2.782292281452305E-6	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999993768453893	WITHOUT_CLASSIFICATION	6.23154610638916E-7	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999941475385669	WITHOUT_CLASSIFICATION	5.85246143313136E-6	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999994386066172	WITHOUT_CLASSIFICATION	5.613933827968245E-7	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999982928912405	WITHOUT_CLASSIFICATION	1.707108759460208E-6	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999961533505858	WITHOUT_CLASSIFICATION	3.846649414247666E-6	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999993216818538	WITHOUT_CLASSIFICATION	6.783181463197345E-7	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999987731784471	WITHOUT_CLASSIFICATION	1.2268215527971112E-6	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999997986621173	WITHOUT_CLASSIFICATION	2.0133788272106813E-7	TEST
// space	WITHOUT_CLASSIFICATION	0.9999984853128562	WITHOUT_CLASSIFICATION	1.5146871438485897E-6	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999465524951288	WITHOUT_CLASSIFICATION	5.344750487125099E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999997108371655	WITHOUT_CLASSIFICATION	2.891628344591471E-7	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999999436930982	WITHOUT_CLASSIFICATION	5.630690181134433E-8	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999997986621173	WITHOUT_CLASSIFICATION	2.0133788272106813E-7	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999962026004486	WITHOUT_CLASSIFICATION	3.7973995512874157E-6	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999962026004486	WITHOUT_CLASSIFICATION	3.7973995512874157E-6	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.999993436031216	WITHOUT_CLASSIFICATION	6.56396878399044E-6	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999996168452407	WITHOUT_CLASSIFICATION	3.831547592588191E-7	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999999147361283	WITHOUT_CLASSIFICATION	8.526387178884722E-8	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.999998822500846	WITHOUT_CLASSIFICATION	1.1774991539619132E-6	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999996027531056	WITHOUT_CLASSIFICATION	3.9724689430333096E-7	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999997526882627	WITHOUT_CLASSIFICATION	2.473117373133779E-7	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.999998432821534	WITHOUT_CLASSIFICATION	1.5671784659131478E-6	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9901699037851734	WITHOUT_CLASSIFICATION	0.009830096214826509	TEST
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999998669630686	WITHOUT_CLASSIFICATION	1.3303693140951117E-7	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999935403693315	WITHOUT_CLASSIFICATION	6.459630668492494E-6	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999997586865698	WITHOUT_CLASSIFICATION	2.4131343026296904E-7	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999809047307	WITHOUT_CLASSIFICATION	1.909526930803495E-8	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999934669961736	WITHOUT_CLASSIFICATION	6.533003826332845E-6	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999901172349698	WITHOUT_CLASSIFICATION	9.882765030213017E-6	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999977671921735	WITHOUT_CLASSIFICATION	2.2328078266168215E-6	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999980247260206	WITHOUT_CLASSIFICATION	1.975273979418268E-6	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999995049348065	WITHOUT_CLASSIFICATION	4.950651935456704E-7	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999253389831805	WITHOUT_CLASSIFICATION	7.466101681947859E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999253389831805	WITHOUT_CLASSIFICATION	7.466101681947859E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999253389831805	WITHOUT_CLASSIFICATION	7.466101681947859E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999253389831805	WITHOUT_CLASSIFICATION	7.466101681947859E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999253389831805	WITHOUT_CLASSIFICATION	7.466101681947859E-5	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999976784920993	WITHOUT_CLASSIFICATION	2.321507900718598E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999937003369811	WITHOUT_CLASSIFICATION	6.299663018864514E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999827610134407	WITHOUT_CLASSIFICATION	1.723898655926401E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999997314250838	WITHOUT_CLASSIFICATION	2.685749161427045E-7	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999938006636048	WITHOUT_CLASSIFICATION	6.199336395227602E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999999909400767	WITHOUT_CLASSIFICATION	9.059923291809063E-8	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999971603735938	WITHOUT_CLASSIFICATION	2.839626406297205E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999991166977363	WITHOUT_CLASSIFICATION	8.833022636406023E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999995544555109	WITHOUT_CLASSIFICATION	4.455444890725475E-7	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999986491995196	WITHOUT_CLASSIFICATION	1.3508004803483837E-6	TEST
// line 274	WITHOUT_CLASSIFICATION	0.999998441498483	WITHOUT_CLASSIFICATION	1.5585015168972247E-6	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999977953208226	WITHOUT_CLASSIFICATION	2.204679177439616E-6	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999985184286481	WITHOUT_CLASSIFICATION	1.481571351872309E-6	TEST
// line 314	WITHOUT_CLASSIFICATION	0.999998413682192	WITHOUT_CLASSIFICATION	1.586317807948164E-6	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999985291664937	WITHOUT_CLASSIFICATION	1.470833506326357E-6	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999981786695016	WITHOUT_CLASSIFICATION	1.8213304984503493E-6	TEST
// line 338	WITHOUT_CLASSIFICATION	0.999998287618556	WITHOUT_CLASSIFICATION	1.7123814439816754E-6	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999984491941968	WITHOUT_CLASSIFICATION	1.5508058031545221E-6	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999982806789972	WITHOUT_CLASSIFICATION	1.7193210028205127E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999984941647007	WITHOUT_CLASSIFICATION	1.5058352992420552E-6	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999983241723552	WITHOUT_CLASSIFICATION	1.6758276447278402E-6	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999984332220296	WITHOUT_CLASSIFICATION	1.56677797035383E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999982717514686	WITHOUT_CLASSIFICATION	1.7282485314043418E-6	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999983887481741	WITHOUT_CLASSIFICATION	1.6112518258293109E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.999998162990606	WITHOUT_CLASSIFICATION	1.8370093940354455E-6	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999983428141437	WITHOUT_CLASSIFICATION	1.657185856235816E-6	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999986917255014	WITHOUT_CLASSIFICATION	1.3082744986480449E-6	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999986404121074	WITHOUT_CLASSIFICATION	1.3595878925519252E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999987012073612	WITHOUT_CLASSIFICATION	1.2987926387988545E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999980098985888	WITHOUT_CLASSIFICATION	1.9901014112475305E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999983788683428	WITHOUT_CLASSIFICATION	1.6211316571896265E-6	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999983049045035	WITHOUT_CLASSIFICATION	1.695095496471131E-6	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999982712339389	WITHOUT_CLASSIFICATION	1.7287660610978597E-6	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999985210242642	WITHOUT_CLASSIFICATION	1.4789757357577477E-6	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999984388413434	WITHOUT_CLASSIFICATION	1.561158656546124E-6	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999986131010667	WITHOUT_CLASSIFICATION	1.386898933257444E-6	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999985269745889	WITHOUT_CLASSIFICATION	1.473025411148811E-6	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999986109067319	WITHOUT_CLASSIFICATION	1.389093268182803E-6	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999983886681	WITHOUT_CLASSIFICATION	1.6113319000562744E-6	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999983918110354	WITHOUT_CLASSIFICATION	1.6081889645605021E-6	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999984839000562	WITHOUT_CLASSIFICATION	1.5160999437939643E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.999998510592549	WITHOUT_CLASSIFICATION	1.4894074510850554E-6	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999981834661037	WITHOUT_CLASSIFICATION	1.8165338963634411E-6	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999982917451394	WITHOUT_CLASSIFICATION	1.7082548605362167E-6	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999984498461669	WITHOUT_CLASSIFICATION	1.5501538331714519E-6	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999981780530128	WITHOUT_CLASSIFICATION	1.8219469871510475E-6	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999983811641387	WITHOUT_CLASSIFICATION	1.6188358611702628E-6	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999985332818901	WITHOUT_CLASSIFICATION	1.4667181099014273E-6	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999984855638977	WITHOUT_CLASSIFICATION	1.5144361023017584E-6	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999983970488263	WITHOUT_CLASSIFICATION	1.6029511737495136E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999827610134407	WITHOUT_CLASSIFICATION	1.723898655926401E-5	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999984020240309	WITHOUT_CLASSIFICATION	1.5979759691165136E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999982358346577	WITHOUT_CLASSIFICATION	1.7641653422285975E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999982599406142	WITHOUT_CLASSIFICATION	1.7400593857981355E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999985113755769	WITHOUT_CLASSIFICATION	1.4886244230929022E-6	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999985675008605	WITHOUT_CLASSIFICATION	1.4324991395474982E-6	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999983495867999	WITHOUT_CLASSIFICATION	1.6504132001950716E-6	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999983599376588	WITHOUT_CLASSIFICATION	1.640062341182828E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999985675008605	WITHOUT_CLASSIFICATION	1.4324991395474982E-6	TEST
// line 569	WITHOUT_CLASSIFICATION	0.999998389511056	WITHOUT_CLASSIFICATION	1.610488944105962E-6	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999986011350254	WITHOUT_CLASSIFICATION	1.3988649746534263E-6	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999986043231908	WITHOUT_CLASSIFICATION	1.395676809180296E-6	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999985912084278	WITHOUT_CLASSIFICATION	1.408791572241524E-6	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999983834897788	WITHOUT_CLASSIFICATION	1.6165102213496345E-6	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999981828292661	WITHOUT_CLASSIFICATION	1.81717073396789E-6	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999983853926926	WITHOUT_CLASSIFICATION	1.614607307438694E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999985387012102	WITHOUT_CLASSIFICATION	1.4612987897283025E-6	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999984515599543	WITHOUT_CLASSIFICATION	1.5484400457801357E-6	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999986528687818	WITHOUT_CLASSIFICATION	1.3471312183157827E-6	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999983001371406	WITHOUT_CLASSIFICATION	1.699862859352157E-6	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999983058585412	WITHOUT_CLASSIFICATION	1.6941414587119905E-6	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999982681787999	WITHOUT_CLASSIFICATION	1.731821200078854E-6	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999984873626759	WITHOUT_CLASSIFICATION	1.5126373240135237E-6	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999985624136615	WITHOUT_CLASSIFICATION	1.4375863384892166E-6	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999982928222446	WITHOUT_CLASSIFICATION	1.7071777553831702E-6	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999986196051998	WITHOUT_CLASSIFICATION	1.380394800258101E-6	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999984434304974	WITHOUT_CLASSIFICATION	1.5565695026585744E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999985212598861	WITHOUT_CLASSIFICATION	1.4787401139608645E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999983476492559	WITHOUT_CLASSIFICATION	1.652350744021203E-6	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999985755865889	WITHOUT_CLASSIFICATION	1.4244134111272876E-6	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999987083846059	WITHOUT_CLASSIFICATION	1.2916153941227946E-6	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999981125886941	WITHOUT_CLASSIFICATION	1.887411305937722E-6	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999984625194764	WITHOUT_CLASSIFICATION	1.5374805236787667E-6	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999980479573424	WITHOUT_CLASSIFICATION	1.952042657517756E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999982442164529	WITHOUT_CLASSIFICATION	1.7557835470934698E-6	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999983957444357	WITHOUT_CLASSIFICATION	1.6042555643175162E-6	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999983492446008	WITHOUT_CLASSIFICATION	1.6507553991220969E-6	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999987333530527	WITHOUT_CLASSIFICATION	1.2666469473166E-6	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999985610506958	WITHOUT_CLASSIFICATION	1.4389493041781291E-6	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999986006422382	WITHOUT_CLASSIFICATION	1.39935776166288E-6	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999983707055721	WITHOUT_CLASSIFICATION	1.6292944278820764E-6	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999983940757388	WITHOUT_CLASSIFICATION	1.6059242612082142E-6	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999984230391434	WITHOUT_CLASSIFICATION	1.5769608564747099E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999984674915791	WITHOUT_CLASSIFICATION	1.5325084210173721E-6	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999985992344472	WITHOUT_CLASSIFICATION	1.4007655528019451E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999984682955654	WITHOUT_CLASSIFICATION	1.5317044346475275E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999985781658474	WITHOUT_CLASSIFICATION	1.4218341526387748E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999985441871885	WITHOUT_CLASSIFICATION	1.4558128115709587E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999983462714588	WITHOUT_CLASSIFICATION	1.6537285412610086E-6	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999983916650528	WITHOUT_CLASSIFICATION	1.6083349473361748E-6	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999977377801684	WITHOUT_CLASSIFICATION	2.262219831617476E-6	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999982056059608	WITHOUT_CLASSIFICATION	1.794394039361689E-6	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999979403856962	WITHOUT_CLASSIFICATION	2.059614303770328E-6	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999986383533739	WITHOUT_CLASSIFICATION	1.3616466260675549E-6	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999986254496459	WITHOUT_CLASSIFICATION	1.3745503541077727E-6	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999984937328088	WITHOUT_CLASSIFICATION	1.5062671911625E-6	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999982849876298	WITHOUT_CLASSIFICATION	1.7150123701893426E-6	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999979839876075	WITHOUT_CLASSIFICATION	2.0160123925649556E-6	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999982597169694	WITHOUT_CLASSIFICATION	1.7402830305871448E-6	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999982931095103	WITHOUT_CLASSIFICATION	1.706890489685064E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.999998042905551	WITHOUT_CLASSIFICATION	1.957094449051189E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.999998321206321	WITHOUT_CLASSIFICATION	1.6787936790403996E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999984357018192	WITHOUT_CLASSIFICATION	1.5642981808498112E-6	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999984194275316	WITHOUT_CLASSIFICATION	1.5805724682927397E-6	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999985204494637	WITHOUT_CLASSIFICATION	1.4795505363688978E-6	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999986514642907	WITHOUT_CLASSIFICATION	1.3485357092601259E-6	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999985112852686	WITHOUT_CLASSIFICATION	1.4887147313064707E-6	TEST
// line 871	WITHOUT_CLASSIFICATION	0.999998714401771	WITHOUT_CLASSIFICATION	1.2855982289984244E-6	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999985856797391	WITHOUT_CLASSIFICATION	1.4143202609427733E-6	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999983766138649	WITHOUT_CLASSIFICATION	1.6233861350462798E-6	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999982669753851	WITHOUT_CLASSIFICATION	1.7330246149862188E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999980569907002	WITHOUT_CLASSIFICATION	1.9430092997833477E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999983376407363	WITHOUT_CLASSIFICATION	1.6623592636728735E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.999998303988121	WITHOUT_CLASSIFICATION	1.6960118789742736E-6	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999974126066975	WITHOUT_CLASSIFICATION	2.587393302549968E-6	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999980877034078	WITHOUT_CLASSIFICATION	1.912296592230799E-6	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999984264058484	WITHOUT_CLASSIFICATION	1.5735941515916977E-6	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999976861421733	WITHOUT_CLASSIFICATION	2.31385782670011E-6	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999978283844461	WITHOUT_CLASSIFICATION	2.171615553857408E-6	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999981151345281	WITHOUT_CLASSIFICATION	1.8848654719118407E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999978474361376	WITHOUT_CLASSIFICATION	2.1525638624944575E-6	TEST
// line 936	WITHOUT_CLASSIFICATION	0.999998029791674	WITHOUT_CLASSIFICATION	1.970208326028815E-6	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999979003330572	WITHOUT_CLASSIFICATION	2.099666942789941E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999981965264431	WITHOUT_CLASSIFICATION	1.8034735569445713E-6	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999981816846946	WITHOUT_CLASSIFICATION	1.8183153054148485E-6	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999983321736478	WITHOUT_CLASSIFICATION	1.6678263522057784E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999980023730115	WITHOUT_CLASSIFICATION	1.997626988423527E-6	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999982352750133	WITHOUT_CLASSIFICATION	1.7647249867711255E-6	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999983847528167	WITHOUT_CLASSIFICATION	1.615247183422781E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999982181637223	WITHOUT_CLASSIFICATION	1.781836277826195E-6	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999983387881348	WITHOUT_CLASSIFICATION	1.6612118652047057E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.999997944902074	WITHOUT_CLASSIFICATION	2.0550979259866113E-6	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999981817642856	WITHOUT_CLASSIFICATION	1.8182357144166167E-6	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999982662891743	WITHOUT_CLASSIFICATION	1.7337108256503007E-6	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999982814275421	WITHOUT_CLASSIFICATION	1.7185724579398056E-6	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999984761515429	WITHOUT_CLASSIFICATION	1.5238484570890757E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999983625011037	WITHOUT_CLASSIFICATION	1.6374988962333241E-6	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999984033944738	WITHOUT_CLASSIFICATION	1.5966055261474407E-6	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999984752435419	WITHOUT_CLASSIFICATION	1.524756457993617E-6	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999978940411961	WITHOUT_CLASSIFICATION	2.1059588039007357E-6	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999979552160604	WITHOUT_CLASSIFICATION	2.0447839396229976E-6	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999980710392166	WITHOUT_CLASSIFICATION	1.9289607834538456E-6	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999984555229972	WITHOUT_CLASSIFICATION	1.54447700287548E-6	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999983986186174	WITHOUT_CLASSIFICATION	1.601381382578809E-6	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999985129518658	WITHOUT_CLASSIFICATION	1.4870481341788875E-6	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999984869810011	WITHOUT_CLASSIFICATION	1.5130189988910927E-6	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999987178905945	WITHOUT_CLASSIFICATION	1.2821094055641503E-6	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999983825553582	WITHOUT_CLASSIFICATION	1.617444641823674E-6	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999986162753693	WITHOUT_CLASSIFICATION	1.3837246306534859E-6	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999984117321569	WITHOUT_CLASSIFICATION	1.5882678430887392E-6	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999983361127597	WITHOUT_CLASSIFICATION	1.6638872403598937E-6	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999982669154565	WITHOUT_CLASSIFICATION	1.733084543508351E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999983531153714	WITHOUT_CLASSIFICATION	1.646884628439638E-6	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999985480108665	WITHOUT_CLASSIFICATION	1.4519891333774086E-6	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999981978929623	WITHOUT_CLASSIFICATION	1.8021070377447284E-6	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999986680948592	WITHOUT_CLASSIFICATION	1.331905140828219E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999987299759909	WITHOUT_CLASSIFICATION	1.2700240091193119E-6	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999985169599449	WITHOUT_CLASSIFICATION	1.4830400551624564E-6	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999987384594723	WITHOUT_CLASSIFICATION	1.2615405276544613E-6	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999985548869924	WITHOUT_CLASSIFICATION	1.4451130075948964E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999982831592412	WITHOUT_CLASSIFICATION	1.7168407588368193E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999985179578228	WITHOUT_CLASSIFICATION	1.4820421771702714E-6	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999985489150993	WITHOUT_CLASSIFICATION	1.4510849006930003E-6	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999985942012608	WITHOUT_CLASSIFICATION	1.4057987392857927E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999984714205394	WITHOUT_CLASSIFICATION	1.5285794605911707E-6	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.999998752229658	WITHOUT_CLASSIFICATION	1.2477703421192999E-6	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999987040386752	WITHOUT_CLASSIFICATION	1.2959613247159907E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999987304377052	WITHOUT_CLASSIFICATION	1.2695622948420392E-6	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999987032175031	WITHOUT_CLASSIFICATION	1.2967824969610942E-6	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999988080019879	WITHOUT_CLASSIFICATION	1.191998012132099E-6	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999987841775183	WITHOUT_CLASSIFICATION	1.2158224816731398E-6	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999987816067997	WITHOUT_CLASSIFICATION	1.2183932004313076E-6	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.999998566438444	WITHOUT_CLASSIFICATION	1.4335615559722417E-6	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999983455894822	WITHOUT_CLASSIFICATION	1.6544105178098214E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999981783014386	WITHOUT_CLASSIFICATION	1.8216985615094605E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999983813711709	WITHOUT_CLASSIFICATION	1.6186288291271089E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999984473909999	WITHOUT_CLASSIFICATION	1.552609000079689E-6	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999985434825266	WITHOUT_CLASSIFICATION	1.456517473382206E-6	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999984620220356	WITHOUT_CLASSIFICATION	1.5379779644571384E-6	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999982286273665	WITHOUT_CLASSIFICATION	1.7713726334625175E-6	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999983084932609	WITHOUT_CLASSIFICATION	1.6915067390713812E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999986033370187	WITHOUT_CLASSIFICATION	1.3966629813097548E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.999998620291985	WITHOUT_CLASSIFICATION	1.3797080149515701E-6	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999983924747194	WITHOUT_CLASSIFICATION	1.607525280571155E-6	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999984214669991	WITHOUT_CLASSIFICATION	1.5785330009400489E-6	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999983223040474	WITHOUT_CLASSIFICATION	1.6776959526308938E-6	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999983473372521	WITHOUT_CLASSIFICATION	1.6526627479181468E-6	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999979471164453	WITHOUT_CLASSIFICATION	2.052883554604622E-6	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999982539480434	WITHOUT_CLASSIFICATION	1.7460519566276126E-6	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999982186011657	WITHOUT_CLASSIFICATION	1.7813988344412188E-6	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999980279572919	WITHOUT_CLASSIFICATION	1.9720427082206697E-6	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999979274382005	WITHOUT_CLASSIFICATION	2.072561799468049E-6	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999984683626235	WITHOUT_CLASSIFICATION	1.5316373763761414E-6	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999984975382019	WITHOUT_CLASSIFICATION	1.5024617980882404E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999979770784485	WITHOUT_CLASSIFICATION	2.022921551571163E-6	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999983071181395	WITHOUT_CLASSIFICATION	1.692881860486336E-6	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999984997811919	WITHOUT_CLASSIFICATION	1.5002188080474657E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999984377494993	WITHOUT_CLASSIFICATION	1.5622505006965322E-6	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999983995690972	WITHOUT_CLASSIFICATION	1.600430902855913E-6	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999984897113432	WITHOUT_CLASSIFICATION	1.510288656894291E-6	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999985049180315	WITHOUT_CLASSIFICATION	1.4950819684379272E-6	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999984732637914	WITHOUT_CLASSIFICATION	1.5267362085752694E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999985344200936	WITHOUT_CLASSIFICATION	1.465579906475193E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999981554431512	WITHOUT_CLASSIFICATION	1.8445568488374655E-6	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999986775471742	WITHOUT_CLASSIFICATION	1.3224528257308451E-6	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999984567692366	WITHOUT_CLASSIFICATION	1.5432307633813929E-6	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.999998468921612	WITHOUT_CLASSIFICATION	1.531078387949483E-6	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.999998416863163	WITHOUT_CLASSIFICATION	1.5831368369109485E-6	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999984385089996	WITHOUT_CLASSIFICATION	1.5614910004192743E-6	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999984888324728	WITHOUT_CLASSIFICATION	1.5111675272892233E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999987268769712	WITHOUT_CLASSIFICATION	1.273123028812201E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999985782262392	WITHOUT_CLASSIFICATION	1.4217737608864632E-6	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999986933319427	WITHOUT_CLASSIFICATION	1.3066680572965301E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999985461149276	WITHOUT_CLASSIFICATION	1.4538850723733893E-6	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999987106676782	WITHOUT_CLASSIFICATION	1.2893323217014954E-6	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999984053232553	WITHOUT_CLASSIFICATION	1.594676744637267E-6	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999986630416282	WITHOUT_CLASSIFICATION	1.3369583717398064E-6	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999986356258341	WITHOUT_CLASSIFICATION	1.3643741658105987E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999984981302369	WITHOUT_CLASSIFICATION	1.5018697630469268E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999983194473989	WITHOUT_CLASSIFICATION	1.6805526011658083E-6	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.999998579067906	WITHOUT_CLASSIFICATION	1.4209320939677892E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999984943338232	WITHOUT_CLASSIFICATION	1.5056661768257398E-6	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999987169656148	WITHOUT_CLASSIFICATION	1.2830343852153098E-6	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999985078866985	WITHOUT_CLASSIFICATION	1.492113301427896E-6	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999984834525723	WITHOUT_CLASSIFICATION	1.5165474277827952E-6	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999985068694026	WITHOUT_CLASSIFICATION	1.4931305973758936E-6	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.999998731213626	WITHOUT_CLASSIFICATION	1.26878637389478E-6	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999987312638811	WITHOUT_CLASSIFICATION	1.2687361189865653E-6	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.999998723228087	WITHOUT_CLASSIFICATION	1.2767719129599854E-6	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999987933912429	WITHOUT_CLASSIFICATION	1.2066087570908175E-6	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999987272298745	WITHOUT_CLASSIFICATION	1.2727701255184137E-6	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999987622491351	WITHOUT_CLASSIFICATION	1.2377508649135906E-6	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.999998752211784	WITHOUT_CLASSIFICATION	1.2477882159423263E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999985382594561	WITHOUT_CLASSIFICATION	1.4617405440070368E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999985290171954	WITHOUT_CLASSIFICATION	1.4709828046015008E-6	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999984281520057	WITHOUT_CLASSIFICATION	1.5718479943899996E-6	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999982240143811	WITHOUT_CLASSIFICATION	1.7759856187948137E-6	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.999998385560397	WITHOUT_CLASSIFICATION	1.6144396030353028E-6	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999985693615993	WITHOUT_CLASSIFICATION	1.4306384007942726E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999982209060503	WITHOUT_CLASSIFICATION	1.7790939497842411E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999983910179135	WITHOUT_CLASSIFICATION	1.6089820863989836E-6	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999984872646476	WITHOUT_CLASSIFICATION	1.5127353524224808E-6	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.99999867143178	WITHOUT_CLASSIFICATION	1.32856822000412E-6	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999986533619185	WITHOUT_CLASSIFICATION	1.3466380814543232E-6	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.999998481516212	WITHOUT_CLASSIFICATION	1.5184837880691082E-6	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999987163482686	WITHOUT_CLASSIFICATION	1.2836517313633738E-6	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999987082180037	WITHOUT_CLASSIFICATION	1.2917819962290659E-6	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999987020718494	WITHOUT_CLASSIFICATION	1.297928150618264E-6	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999986796011724	WITHOUT_CLASSIFICATION	1.320398827580611E-6	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999987674158296	WITHOUT_CLASSIFICATION	1.232584170441608E-6	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999987466938287	WITHOUT_CLASSIFICATION	1.253306171325143E-6	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999984845347275	WITHOUT_CLASSIFICATION	1.5154652724325617E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999985750792112	WITHOUT_CLASSIFICATION	1.4249207888169554E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999985211762077	WITHOUT_CLASSIFICATION	1.4788237923417787E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999986536895281	WITHOUT_CLASSIFICATION	1.3463104719556079E-6	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999985559355267	WITHOUT_CLASSIFICATION	1.444064473374876E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999986084274964	WITHOUT_CLASSIFICATION	1.3915725035524714E-6	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999987392692294	WITHOUT_CLASSIFICATION	1.2607307706124807E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999985380522062	WITHOUT_CLASSIFICATION	1.461947793799561E-6	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999987666849273	WITHOUT_CLASSIFICATION	1.2333150727955667E-6	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999986101555386	WITHOUT_CLASSIFICATION	1.3898444613433777E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999986493334182	WITHOUT_CLASSIFICATION	1.3506665818199212E-6	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999987654441793	WITHOUT_CLASSIFICATION	1.2345558207781813E-6	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999987041610304	WITHOUT_CLASSIFICATION	1.2958389696334103E-6	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999984050773499	WITHOUT_CLASSIFICATION	1.5949226501315933E-6	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999986440312638	WITHOUT_CLASSIFICATION	1.3559687361739455E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.999998673297289	WITHOUT_CLASSIFICATION	1.3267027110359908E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999985751104417	WITHOUT_CLASSIFICATION	1.424889558292978E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999947205407904	WITHOUT_CLASSIFICATION	5.279459209508577E-6	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9998056643748967	WITHOUT_CLASSIFICATION	1.9433562510339796E-4	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9998979912165056	WITHOUT_CLASSIFICATION	1.0200878349441323E-4	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999280697284985	WITHOUT_CLASSIFICATION	7.193027150147289E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.999974472321993	WITHOUT_CLASSIFICATION	2.5527678007022404E-5	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999903283993589	WITHOUT_CLASSIFICATION	9.671600641067905E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999955603955472	WITHOUT_CLASSIFICATION	4.439604452825857E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999956865820795	WITHOUT_CLASSIFICATION	4.313417920551495E-6	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999895785874996	WITHOUT_CLASSIFICATION	1.0421412500358738E-5	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999849065771379	WITHOUT_CLASSIFICATION	1.5093422862170766E-5	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999993185547884	WITHOUT_CLASSIFICATION	6.814452116206757E-7	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999980033082818	WITHOUT_CLASSIFICATION	1.9966917182916217E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999932350286923	WITHOUT_CLASSIFICATION	6.76497130761138E-6	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999271144836446	WITHOUT_CLASSIFICATION	7.288551635549947E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999909609009191	WITHOUT_CLASSIFICATION	9.039099080932153E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998228546801934	WITHOUT_CLASSIFICATION	1.7714531980658798E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998517514605194	WITHOUT_CLASSIFICATION	1.4824853948063673E-4	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999700324962021	WITHOUT_CLASSIFICATION	2.9967503797843117E-5	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999011272052	WITHOUT_CLASSIFICATION	9.887279495418243E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999272448749	WITHOUT_CLASSIFICATION	7.275512519403604E-8	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.999998234674314	WITHOUT_CLASSIFICATION	1.7653256859865615E-6	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999986258339048	WITHOUT_CLASSIFICATION	1.3741660952894331E-6	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999996951647134	WITHOUT_CLASSIFICATION	3.04835286542185E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996049269819	WITHOUT_CLASSIFICATION	3.950730181597498E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996049269819	WITHOUT_CLASSIFICATION	3.950730181597498E-7	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999736297226758	WITHOUT_CLASSIFICATION	2.6370277324256804E-5	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.99999613314505	WITHOUT_CLASSIFICATION	3.866854950055656E-6	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999947500470723	WITHOUT_CLASSIFICATION	5.249952927738832E-6	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999993794105144	WITHOUT_CLASSIFICATION	6.205894855397821E-7	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999992839835701	WITHOUT_CLASSIFICATION	7.160164299167991E-7	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999995280628358	WITHOUT_CLASSIFICATION	4.719371641655993E-7	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999998800578703	WITHOUT_CLASSIFICATION	1.19942129642437E-7	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999989081618019	WITHOUT_CLASSIFICATION	1.0918381979778693E-6	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999997209934218	WITHOUT_CLASSIFICATION	2.790065781954235E-7	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999994922466721	WITHOUT_CLASSIFICATION	5.07753327972283E-7	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999880924370939	WITHOUT_CLASSIFICATION	1.190756290622646E-5	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999977703525197	WITHOUT_CLASSIFICATION	2.229647480338155E-6	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.999999994027608	WITHOUT_CLASSIFICATION	5.9723919871237316E-9	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999886172474848	WITHOUT_CLASSIFICATION	1.1382752515263407E-5	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999905637712417	WITHOUT_CLASSIFICATION	9.436228758173463E-6	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999949848256918	WITHOUT_CLASSIFICATION	5.015174308205701E-6	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999992617538542	WITHOUT_CLASSIFICATION	7.382461457306988E-7	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999963684254809	WITHOUT_CLASSIFICATION	3.6315745189669946E-6	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999998679669888	WITHOUT_CLASSIFICATION	1.3203301115728104E-7	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999969627959459	WITHOUT_CLASSIFICATION	3.037204054159466E-6	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999868861532	WITHOUT_CLASSIFICATION	1.3113846877262828E-8	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999967477789908	WITHOUT_CLASSIFICATION	3.252221009199016E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9981938262468902	WITHOUT_CLASSIFICATION	0.0018061737531097917	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999995968306711	WITHOUT_CLASSIFICATION	4.0316932897977304E-7	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9981938262468902	WITHOUT_CLASSIFICATION	0.0018061737531097917	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999996080150462	WITHOUT_CLASSIFICATION	3.91984953809933E-7	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999996573353142	WITHOUT_CLASSIFICATION	3.4266468587396036E-7	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999996286406633	WITHOUT_CLASSIFICATION	3.713593367226496E-7	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999888486764575	WITHOUT_CLASSIFICATION	1.1151323542438594E-5	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999996497374292	WITHOUT_CLASSIFICATION	3.502625708708663E-7	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999961747374962	WITHOUT_CLASSIFICATION	3.825262503711128E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999961747374962	WITHOUT_CLASSIFICATION	3.825262503711128E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999961747374962	WITHOUT_CLASSIFICATION	3.825262503711128E-6	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999885039857404	WITHOUT_CLASSIFICATION	1.1496014259643736E-5	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999549724370788	WITHOUT_CLASSIFICATION	4.502756292129768E-5	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999995100822339	WITHOUT_CLASSIFICATION	4.899177662009887E-7	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999276031355523	WITHOUT_CLASSIFICATION	7.239686444776936E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999276031355523	WITHOUT_CLASSIFICATION	7.239686444776936E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999276031355523	WITHOUT_CLASSIFICATION	7.239686444776936E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999276031355523	WITHOUT_CLASSIFICATION	7.239686444776936E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999276031355523	WITHOUT_CLASSIFICATION	7.239686444776936E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999276031355523	WITHOUT_CLASSIFICATION	7.239686444776936E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999612178335993	WITHOUT_CLASSIFICATION	3.8782166400724955E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999612178335993	WITHOUT_CLASSIFICATION	3.8782166400724955E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999612178335993	WITHOUT_CLASSIFICATION	3.8782166400724955E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999612178335993	WITHOUT_CLASSIFICATION	3.8782166400724955E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999612178335993	WITHOUT_CLASSIFICATION	3.8782166400724955E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999120139343309	WITHOUT_CLASSIFICATION	8.798606566912627E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999120139343309	WITHOUT_CLASSIFICATION	8.798606566912627E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999120139343309	WITHOUT_CLASSIFICATION	8.798606566912627E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999120139343309	WITHOUT_CLASSIFICATION	8.798606566912627E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999120139343309	WITHOUT_CLASSIFICATION	8.798606566912627E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999960643498798	WITHOUT_CLASSIFICATION	3.935650120195487E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999960643498798	WITHOUT_CLASSIFICATION	3.935650120195487E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999960643498798	WITHOUT_CLASSIFICATION	3.935650120195487E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999960643498798	WITHOUT_CLASSIFICATION	3.935650120195487E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999960643498798	WITHOUT_CLASSIFICATION	3.935650120195487E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999960643498798	WITHOUT_CLASSIFICATION	3.935650120195487E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999823095070927	WITHOUT_CLASSIFICATION	1.769049290730798E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999823095070927	WITHOUT_CLASSIFICATION	1.769049290730798E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999823095070927	WITHOUT_CLASSIFICATION	1.769049290730798E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999823095070927	WITHOUT_CLASSIFICATION	1.769049290730798E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999823095070927	WITHOUT_CLASSIFICATION	1.769049290730798E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999786386476165	WITHOUT_CLASSIFICATION	2.1361352383444796E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999786386476165	WITHOUT_CLASSIFICATION	2.1361352383444796E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999786386476165	WITHOUT_CLASSIFICATION	2.1361352383444796E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999786386476165	WITHOUT_CLASSIFICATION	2.1361352383444796E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999786386476165	WITHOUT_CLASSIFICATION	2.1361352383444796E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999827610134407	WITHOUT_CLASSIFICATION	1.723898655926401E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999827610134407	WITHOUT_CLASSIFICATION	1.723898655926401E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999827610134407	WITHOUT_CLASSIFICATION	1.723898655926401E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999827610134407	WITHOUT_CLASSIFICATION	1.723898655926401E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999827610134407	WITHOUT_CLASSIFICATION	1.723898655926401E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999997314250838	WITHOUT_CLASSIFICATION	2.685749161427045E-7	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999999909400767	WITHOUT_CLASSIFICATION	9.059923291809063E-8	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999971603735938	WITHOUT_CLASSIFICATION	2.839626406297205E-6	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999991166977363	WITHOUT_CLASSIFICATION	8.833022636406023E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999995544555109	WITHOUT_CLASSIFICATION	4.455444890725475E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999983151884729	WITHOUT_CLASSIFICATION	1.6848115271233392E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999984941647007	WITHOUT_CLASSIFICATION	1.5058352992420552E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.999998162990606	WITHOUT_CLASSIFICATION	1.8370093940354455E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999987012073612	WITHOUT_CLASSIFICATION	1.2987926387988545E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999980098985888	WITHOUT_CLASSIFICATION	1.9901014112475305E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999981322407804	WITHOUT_CLASSIFICATION	1.8677592195922727E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999983788683428	WITHOUT_CLASSIFICATION	1.6211316571896265E-6	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999981285488629	WITHOUT_CLASSIFICATION	1.8714511370344165E-6	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999981564506412	WITHOUT_CLASSIFICATION	1.843549358753501E-6	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999980522344726	WITHOUT_CLASSIFICATION	1.9477655274093674E-6	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999980816998765	WITHOUT_CLASSIFICATION	1.9183001235846044E-6	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999982306494469	WITHOUT_CLASSIFICATION	1.769350553054523E-6	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999984632386322	WITHOUT_CLASSIFICATION	1.5367613677571926E-6	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999982997122778	WITHOUT_CLASSIFICATION	1.7002877221679365E-6	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999983329644828	WITHOUT_CLASSIFICATION	1.6670355171928985E-6	TEST
// line 342	WITHOUT_CLASSIFICATION	0.999998154607873	WITHOUT_CLASSIFICATION	1.8453921270663948E-6	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999983428602568	WITHOUT_CLASSIFICATION	1.6571397432284618E-6	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999982665151127	WITHOUT_CLASSIFICATION	1.7334848872730666E-6	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999982893255376	WITHOUT_CLASSIFICATION	1.7106744623195981E-6	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999983213287236	WITHOUT_CLASSIFICATION	1.6786712764807123E-6	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999983866906001	WITHOUT_CLASSIFICATION	1.6133093999198867E-6	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999982947605991	WITHOUT_CLASSIFICATION	1.7052394008113256E-6	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999979532659321	WITHOUT_CLASSIFICATION	2.046734067814192E-6	TEST
// line 397	WITHOUT_CLASSIFICATION	0.99999818805367	WITHOUT_CLASSIFICATION	1.8119463299993517E-6	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999979417507876	WITHOUT_CLASSIFICATION	2.0582492123786274E-6	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999981486973692	WITHOUT_CLASSIFICATION	1.8513026306439542E-6	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999983055314514	WITHOUT_CLASSIFICATION	1.6944685485792506E-6	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999985360565382	WITHOUT_CLASSIFICATION	1.463943461826334E-6	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999984821193145	WITHOUT_CLASSIFICATION	1.5178806855058674E-6	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999985403495125	WITHOUT_CLASSIFICATION	1.4596504875375733E-6	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999983620584519	WITHOUT_CLASSIFICATION	1.637941548061235E-6	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999985210114862	WITHOUT_CLASSIFICATION	1.4789885137125922E-6	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999983372453286	WITHOUT_CLASSIFICATION	1.6627546713832799E-6	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999985728633366	WITHOUT_CLASSIFICATION	1.4271366634342801E-6	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999986280264277	WITHOUT_CLASSIFICATION	1.3719735723406436E-6	TEST
// line 488	WITHOUT_CLASSIFICATION	0.999998489466925	WITHOUT_CLASSIFICATION	1.510533074904186E-6	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999983076308294	WITHOUT_CLASSIFICATION	1.6923691706474829E-6	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999983918468494	WITHOUT_CLASSIFICATION	1.6081531507570704E-6	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999978096488977	WITHOUT_CLASSIFICATION	2.190351102344334E-6	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999982626123028	WITHOUT_CLASSIFICATION	1.7373876971678451E-6	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999980058280857	WITHOUT_CLASSIFICATION	1.9941719143448676E-6	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999985712737874	WITHOUT_CLASSIFICATION	1.428726212496302E-6	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999985458633981	WITHOUT_CLASSIFICATION	1.4541366019506144E-6	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999984218640666	WITHOUT_CLASSIFICATION	1.5781359334021943E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999982358346577	WITHOUT_CLASSIFICATION	1.7641653422285975E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999982599406142	WITHOUT_CLASSIFICATION	1.7400593857981355E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999985113755769	WITHOUT_CLASSIFICATION	1.4886244230929022E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999985675008605	WITHOUT_CLASSIFICATION	1.4324991395474982E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999985387012102	WITHOUT_CLASSIFICATION	1.4612987897283025E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999985212598861	WITHOUT_CLASSIFICATION	1.4787401139608645E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999985059194223	WITHOUT_CLASSIFICATION	1.494080577650788E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999983476492559	WITHOUT_CLASSIFICATION	1.652350744021203E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999984674915791	WITHOUT_CLASSIFICATION	1.5325084210173721E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999984682955654	WITHOUT_CLASSIFICATION	1.5317044346475275E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999986067362433	WITHOUT_CLASSIFICATION	1.3932637566920133E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999985781658474	WITHOUT_CLASSIFICATION	1.4218341526387748E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999985441871885	WITHOUT_CLASSIFICATION	1.4558128115709587E-6	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999982970052826	WITHOUT_CLASSIFICATION	1.7029947173777302E-6	TEST
// line 549	WITHOUT_CLASSIFICATION	0.999998291331189	WITHOUT_CLASSIFICATION	1.7086688109019357E-6	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999984269543325	WITHOUT_CLASSIFICATION	1.573045667544522E-6	TEST
// line 558	WITHOUT_CLASSIFICATION	0.999998515554142	WITHOUT_CLASSIFICATION	1.484445858028166E-6	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999987047234418	WITHOUT_CLASSIFICATION	1.2952765583132171E-6	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999987545112569	WITHOUT_CLASSIFICATION	1.2454887431467164E-6	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999985630030822	WITHOUT_CLASSIFICATION	1.4369969178600962E-6	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999984272620072	WITHOUT_CLASSIFICATION	1.572737992851842E-6	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999985434127732	WITHOUT_CLASSIFICATION	1.4565872269133294E-6	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999983424157574	WITHOUT_CLASSIFICATION	1.657584242690047E-6	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999982339586878	WITHOUT_CLASSIFICATION	1.7660413122111766E-6	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999983496713163	WITHOUT_CLASSIFICATION	1.6503286837249199E-6	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999983392475515	WITHOUT_CLASSIFICATION	1.6607524483836853E-6	TEST
// line 623	WITHOUT_CLASSIFICATION	0.999998191958014	WITHOUT_CLASSIFICATION	1.8080419858970505E-6	TEST
// line 627	WITHOUT_CLASSIFICATION	0.999998481449395	WITHOUT_CLASSIFICATION	1.5185506050040122E-6	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999980520331877	WITHOUT_CLASSIFICATION	1.9479668123017044E-6	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999983184559934	WITHOUT_CLASSIFICATION	1.6815440066482111E-6	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999981089625035	WITHOUT_CLASSIFICATION	1.8910374964807567E-6	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999984794499964	WITHOUT_CLASSIFICATION	1.5205500035149057E-6	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999986380828338	WITHOUT_CLASSIFICATION	1.3619171661342076E-6	TEST
// line 661	WITHOUT_CLASSIFICATION	0.999998671061611	WITHOUT_CLASSIFICATION	1.328938388930136E-6	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999985302728752	WITHOUT_CLASSIFICATION	1.4697271247958434E-6	TEST
// line 678	WITHOUT_CLASSIFICATION	0.999998633164901	WITHOUT_CLASSIFICATION	1.366835098950018E-6	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999984144629253	WITHOUT_CLASSIFICATION	1.5855370747202259E-6	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999985281946564	WITHOUT_CLASSIFICATION	1.4718053436570016E-6	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999983488156933	WITHOUT_CLASSIFICATION	1.6511843066464716E-6	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999983626484653	WITHOUT_CLASSIFICATION	1.637351534584319E-6	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999983221458006	WITHOUT_CLASSIFICATION	1.6778541992504755E-6	TEST
// line 727	WITHOUT_CLASSIFICATION	0.999998431156821	WITHOUT_CLASSIFICATION	1.5688431789842593E-6	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999983611076458	WITHOUT_CLASSIFICATION	1.6388923541977042E-6	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999983991643108	WITHOUT_CLASSIFICATION	1.600835689253202E-6	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999983899787653	WITHOUT_CLASSIFICATION	1.6100212346594818E-6	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999983989832437	WITHOUT_CLASSIFICATION	1.6010167563402023E-6	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999981767105196	WITHOUT_CLASSIFICATION	1.8232894804284872E-6	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999986764307224	WITHOUT_CLASSIFICATION	1.3235692776492029E-6	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999986860234326	WITHOUT_CLASSIFICATION	1.3139765673932315E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.999998321206321	WITHOUT_CLASSIFICATION	1.6787936790403996E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999984790538039	WITHOUT_CLASSIFICATION	1.520946196070179E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999984357018192	WITHOUT_CLASSIFICATION	1.5642981808498112E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999980569907002	WITHOUT_CLASSIFICATION	1.9430092997833477E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.999998303988121	WITHOUT_CLASSIFICATION	1.6960118789742736E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999978474361376	WITHOUT_CLASSIFICATION	2.1525638624944575E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999981965264431	WITHOUT_CLASSIFICATION	1.8034735569445713E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999980023730115	WITHOUT_CLASSIFICATION	1.997626988423527E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.999997944902074	WITHOUT_CLASSIFICATION	2.0550979259866113E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999983625011037	WITHOUT_CLASSIFICATION	1.6374988962333241E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999980775317138	WITHOUT_CLASSIFICATION	1.9224682862028464E-6	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999979932275196	WITHOUT_CLASSIFICATION	2.0067724803484347E-6	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999983652881265	WITHOUT_CLASSIFICATION	1.6347118736455606E-6	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999979245088458	WITHOUT_CLASSIFICATION	2.07549115406791E-6	TEST
// line 832	WITHOUT_CLASSIFICATION	0.999998135125699	WITHOUT_CLASSIFICATION	1.8648743010258303E-6	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999986597507918	WITHOUT_CLASSIFICATION	1.3402492082098563E-6	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999985958542613	WITHOUT_CLASSIFICATION	1.40414573866011E-6	TEST
// line 860	WITHOUT_CLASSIFICATION	0.99999826764719	WITHOUT_CLASSIFICATION	1.732352809975706E-6	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999982924955962	WITHOUT_CLASSIFICATION	1.7075044037565945E-6	TEST
// line 866	WITHOUT_CLASSIFICATION	0.999998508599403	WITHOUT_CLASSIFICATION	1.4914005969351988E-6	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999983232910312	WITHOUT_CLASSIFICATION	1.6767089687589492E-6	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999985876065907	WITHOUT_CLASSIFICATION	1.4123934093950491E-6	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999984434728763	WITHOUT_CLASSIFICATION	1.5565271238200728E-6	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999985645323395	WITHOUT_CLASSIFICATION	1.4354676605084553E-6	TEST
// line 890	WITHOUT_CLASSIFICATION	0.999998062243961	WITHOUT_CLASSIFICATION	1.937756039053663E-6	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999977585844052	WITHOUT_CLASSIFICATION	2.24141559481871E-6	TEST
// line 909	WITHOUT_CLASSIFICATION	0.999997904691093	WITHOUT_CLASSIFICATION	2.0953089070858187E-6	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999982994422618	WITHOUT_CLASSIFICATION	1.7005577382229256E-6	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999984236450817	WITHOUT_CLASSIFICATION	1.5763549183021648E-6	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999981219052329	WITHOUT_CLASSIFICATION	1.8780947670604977E-6	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999980636454311	WITHOUT_CLASSIFICATION	1.9363545688704777E-6	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999983732896437	WITHOUT_CLASSIFICATION	1.6267103562543618E-6	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999982900117907	WITHOUT_CLASSIFICATION	1.7099882091883963E-6	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999984470089753	WITHOUT_CLASSIFICATION	1.5529910247569045E-6	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999982825709486	WITHOUT_CLASSIFICATION	1.7174290515145262E-6	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999983178310573	WITHOUT_CLASSIFICATION	1.682168942641197E-6	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999982802305667	WITHOUT_CLASSIFICATION	1.7197694332866243E-6	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999983366667616	WITHOUT_CLASSIFICATION	1.6633332383302614E-6	TEST
// line 983	WITHOUT_CLASSIFICATION	0.999997975591233	WITHOUT_CLASSIFICATION	2.0244087669273883E-6	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999982777413785	WITHOUT_CLASSIFICATION	1.7222586215119433E-6	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999980889466806	WITHOUT_CLASSIFICATION	1.911053319383758E-6	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999981316853662	WITHOUT_CLASSIFICATION	1.8683146337794971E-6	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999984330172035	WITHOUT_CLASSIFICATION	1.566982796611986E-6	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999981761164116	WITHOUT_CLASSIFICATION	1.8238835883092695E-6	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.999998455519588	WITHOUT_CLASSIFICATION	1.5444804119997193E-6	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999985756421153	WITHOUT_CLASSIFICATION	1.4243578847479235E-6	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999985384841437	WITHOUT_CLASSIFICATION	1.4615158563828278E-6	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999982972138874	WITHOUT_CLASSIFICATION	1.7027861125397009E-6	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999986181605379	WITHOUT_CLASSIFICATION	1.3818394621373524E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999985810464913	WITHOUT_CLASSIFICATION	1.4189535087845048E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999987299759909	WITHOUT_CLASSIFICATION	1.2700240091193119E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999986461302631	WITHOUT_CLASSIFICATION	1.353869736879736E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999982831592412	WITHOUT_CLASSIFICATION	1.7168407588368193E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999984714205394	WITHOUT_CLASSIFICATION	1.5285794605911707E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999987304377052	WITHOUT_CLASSIFICATION	1.2695622948420392E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999981783014386	WITHOUT_CLASSIFICATION	1.8216985615094605E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999983813711709	WITHOUT_CLASSIFICATION	1.6186288291271089E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999986033370187	WITHOUT_CLASSIFICATION	1.3966629813097548E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.999998620291985	WITHOUT_CLASSIFICATION	1.3797080149515701E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.999998611371217	WITHOUT_CLASSIFICATION	1.3886287830151907E-6	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999985905417117	WITHOUT_CLASSIFICATION	1.4094582882313752E-6	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999984028170026	WITHOUT_CLASSIFICATION	1.5971829974041628E-6	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999985270384866	WITHOUT_CLASSIFICATION	1.4729615133916968E-6	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999983368627092	WITHOUT_CLASSIFICATION	1.6631372908040072E-6	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999980097562027	WITHOUT_CLASSIFICATION	1.990243797252574E-6	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999986870411797	WITHOUT_CLASSIFICATION	1.3129588203740024E-6	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999987362461823	WITHOUT_CLASSIFICATION	1.2637538176427783E-6	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999987161771877	WITHOUT_CLASSIFICATION	1.2838228123731653E-6	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999985745047212	WITHOUT_CLASSIFICATION	1.4254952787990873E-6	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999986412494353	WITHOUT_CLASSIFICATION	1.3587505647160449E-6	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999985068549561	WITHOUT_CLASSIFICATION	1.4931450439178512E-6	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999986870525231	WITHOUT_CLASSIFICATION	1.3129474768570313E-6	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999985195060987	WITHOUT_CLASSIFICATION	1.4804939012358706E-6	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999987384281229	WITHOUT_CLASSIFICATION	1.2615718769707616E-6	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999986549918085	WITHOUT_CLASSIFICATION	1.3450081914247843E-6	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999986047649433	WITHOUT_CLASSIFICATION	1.3952350566187094E-6	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999986299333481	WITHOUT_CLASSIFICATION	1.37006665192348E-6	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999986236782507	WITHOUT_CLASSIFICATION	1.376321749347809E-6	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999983358194147	WITHOUT_CLASSIFICATION	1.6641805853445818E-6	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.999998584554106	WITHOUT_CLASSIFICATION	1.4154458940886275E-6	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999983548046744	WITHOUT_CLASSIFICATION	1.645195325535299E-6	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999986495173467	WITHOUT_CLASSIFICATION	1.3504826532381256E-6	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999984422495058	WITHOUT_CLASSIFICATION	1.5577504942668896E-6	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999984550878311	WITHOUT_CLASSIFICATION	1.5449121688642842E-6	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999985269811894	WITHOUT_CLASSIFICATION	1.4730188105201917E-6	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999985670053556	WITHOUT_CLASSIFICATION	1.432994644374765E-6	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999985961957818	WITHOUT_CLASSIFICATION	1.4038042182206371E-6	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999985592290472	WITHOUT_CLASSIFICATION	1.4407709527745152E-6	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999984679442643	WITHOUT_CLASSIFICATION	1.5320557357161816E-6	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999984428432933	WITHOUT_CLASSIFICATION	1.557156706712886E-6	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999986678517371	WITHOUT_CLASSIFICATION	1.332148262994538E-6	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999984709325703	WITHOUT_CLASSIFICATION	1.529067429747622E-6	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999985901587845	WITHOUT_CLASSIFICATION	1.4098412155749634E-6	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.999998389347759	WITHOUT_CLASSIFICATION	1.6106522410606028E-6	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999982608183298	WITHOUT_CLASSIFICATION	1.739181670202947E-6	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.999998256332844	WITHOUT_CLASSIFICATION	1.7436671559770992E-6	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999982061368624	WITHOUT_CLASSIFICATION	1.7938631376795543E-6	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999982075666892	WITHOUT_CLASSIFICATION	1.7924333108045417E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999984377494993	WITHOUT_CLASSIFICATION	1.5622505006965322E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999985344200936	WITHOUT_CLASSIFICATION	1.465579906475193E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999981554431512	WITHOUT_CLASSIFICATION	1.8445568488374655E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999986289891761	WITHOUT_CLASSIFICATION	1.371010823904538E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999985782262392	WITHOUT_CLASSIFICATION	1.4217737608864632E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999985461149276	WITHOUT_CLASSIFICATION	1.4538850723733893E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999984981302369	WITHOUT_CLASSIFICATION	1.5018697630469268E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999983194473989	WITHOUT_CLASSIFICATION	1.6805526011658083E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999985382594561	WITHOUT_CLASSIFICATION	1.4617405440070368E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999985290171954	WITHOUT_CLASSIFICATION	1.4709828046015008E-6	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999981496593294	WITHOUT_CLASSIFICATION	1.8503406705303718E-6	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999985395533272	WITHOUT_CLASSIFICATION	1.4604466728383425E-6	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999985501380696	WITHOUT_CLASSIFICATION	1.4498619304227334E-6	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999983428790014	WITHOUT_CLASSIFICATION	1.657120998760458E-6	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999983521331282	WITHOUT_CLASSIFICATION	1.6478668718507801E-6	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999979078067771	WITHOUT_CLASSIFICATION	2.0921932229250496E-6	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999985466007459	WITHOUT_CLASSIFICATION	1.453399254056533E-6	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999983368964865	WITHOUT_CLASSIFICATION	1.6631035133482675E-6	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999985065532483	WITHOUT_CLASSIFICATION	1.4934467517231004E-6	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999984583067041	WITHOUT_CLASSIFICATION	1.5416932959074701E-6	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999983208546712	WITHOUT_CLASSIFICATION	1.6791453287169764E-6	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999984966106963	WITHOUT_CLASSIFICATION	1.503389303631755E-6	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999983098127154	WITHOUT_CLASSIFICATION	1.6901872845973032E-6	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.999998545540286	WITHOUT_CLASSIFICATION	1.4544597139717288E-6	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999985460540173	WITHOUT_CLASSIFICATION	1.453945982677968E-6	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999984556302192	WITHOUT_CLASSIFICATION	1.5443697807587853E-6	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999982774451395	WITHOUT_CLASSIFICATION	1.7225548604610167E-6	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.99999843176154	WITHOUT_CLASSIFICATION	1.5682384599199103E-6	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999983930531084	WITHOUT_CLASSIFICATION	1.6069468916195245E-6	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999987238450939	WITHOUT_CLASSIFICATION	1.2761549060106564E-6	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999985089631939	WITHOUT_CLASSIFICATION	1.4910368061483916E-6	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999985830813989	WITHOUT_CLASSIFICATION	1.416918601084759E-6	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999981923084789	WITHOUT_CLASSIFICATION	1.807691521201901E-6	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999984395459072	WITHOUT_CLASSIFICATION	1.5604540928681893E-6	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999984694878966	WITHOUT_CLASSIFICATION	1.5305121033200937E-6	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999985404766946	WITHOUT_CLASSIFICATION	1.459523305441315E-6	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999986777074507	WITHOUT_CLASSIFICATION	1.3222925493675346E-6	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999986693209502	WITHOUT_CLASSIFICATION	1.3306790498668958E-6	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.999998669504268	WITHOUT_CLASSIFICATION	1.3304957320365564E-6	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999984690680428	WITHOUT_CLASSIFICATION	1.53093195713372E-6	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999982445773259	WITHOUT_CLASSIFICATION	1.7554226740675998E-6	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999985662241505	WITHOUT_CLASSIFICATION	1.4337758495615129E-6	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999985328395069	WITHOUT_CLASSIFICATION	1.4671604930099061E-6	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999984010624993	WITHOUT_CLASSIFICATION	1.5989375007304263E-6	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.999998496708383	WITHOUT_CLASSIFICATION	1.503291616893646E-6	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999985594576927	WITHOUT_CLASSIFICATION	1.4405423074065863E-6	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999987622491351	WITHOUT_CLASSIFICATION	1.2377508649135906E-6	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999985814122495	WITHOUT_CLASSIFICATION	1.418587750516904E-6	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999985542496944	WITHOUT_CLASSIFICATION	1.4457503055255217E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999987135629794	WITHOUT_CLASSIFICATION	1.2864370206423774E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999982209060503	WITHOUT_CLASSIFICATION	1.7790939497842411E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999983910179135	WITHOUT_CLASSIFICATION	1.6089820863989836E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999985750792112	WITHOUT_CLASSIFICATION	1.4249207888169554E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999987742208184	WITHOUT_CLASSIFICATION	1.2257791816102309E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999986536895281	WITHOUT_CLASSIFICATION	1.3463104719556079E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999986084274964	WITHOUT_CLASSIFICATION	1.3915725035524714E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999985380522062	WITHOUT_CLASSIFICATION	1.461947793799561E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.999998673297289	WITHOUT_CLASSIFICATION	1.3267027110359908E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999985751104417	WITHOUT_CLASSIFICATION	1.424889558292978E-6	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999985582794391	WITHOUT_CLASSIFICATION	1.4417205609499245E-6	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999985728000205	WITHOUT_CLASSIFICATION	1.4271999795548528E-6	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999986037720459	WITHOUT_CLASSIFICATION	1.3962279540992325E-6	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999986077747646	WITHOUT_CLASSIFICATION	1.3922252354347648E-6	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999984964496171	WITHOUT_CLASSIFICATION	1.5035503828086658E-6	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999983114519042	WITHOUT_CLASSIFICATION	1.6885480957237874E-6	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999987258579238	WITHOUT_CLASSIFICATION	1.2741420761203701E-6	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999987303913557	WITHOUT_CLASSIFICATION	1.2696086442875943E-6	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999987839149085	WITHOUT_CLASSIFICATION	1.216085091594436E-6	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999984756242557	WITHOUT_CLASSIFICATION	1.5243757442815506E-6	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999984974894989	WITHOUT_CLASSIFICATION	1.5025105010867536E-6	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.99999877952358	WITHOUT_CLASSIFICATION	1.2204764200854813E-6	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999984239435499	WITHOUT_CLASSIFICATION	1.5760564500269539E-6	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999988184490506	WITHOUT_CLASSIFICATION	1.18155094935251E-6	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999985983112971	WITHOUT_CLASSIFICATION	1.401688702900678E-6	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999986498188165	WITHOUT_CLASSIFICATION	1.3501811835080572E-6	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999985718742211	WITHOUT_CLASSIFICATION	1.4281257788617633E-6	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.999998540203788	WITHOUT_CLASSIFICATION	1.4597962119608552E-6	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999985451171732	WITHOUT_CLASSIFICATION	1.4548828267815757E-6	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999987263236104	WITHOUT_CLASSIFICATION	1.2736763895400947E-6	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999988011005749	WITHOUT_CLASSIFICATION	1.1988994250628638E-6	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999987576248727	WITHOUT_CLASSIFICATION	1.2423751272653532E-6	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999987773462653	WITHOUT_CLASSIFICATION	1.2226537347436816E-6	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.999998775620733	WITHOUT_CLASSIFICATION	1.224379266984682E-6	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999987637599416	WITHOUT_CLASSIFICATION	1.2362400584713151E-6	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999986500420066	WITHOUT_CLASSIFICATION	1.3499579934007952E-6	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999987720558406	WITHOUT_CLASSIFICATION	1.2279441593432155E-6	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999987468754995	WITHOUT_CLASSIFICATION	1.253124500526471E-6	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999985965939314	WITHOUT_CLASSIFICATION	1.4034060685731889E-6	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999985825041771	WITHOUT_CLASSIFICATION	1.4174958228569054E-6	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.999998405439457	WITHOUT_CLASSIFICATION	1.5945605429353543E-6	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999980211228737	WITHOUT_CLASSIFICATION	1.9788771262657655E-6	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999984303536454	WITHOUT_CLASSIFICATION	1.5696463545705171E-6	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999981983521343	WITHOUT_CLASSIFICATION	1.8016478656363446E-6	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999986971339152	WITHOUT_CLASSIFICATION	1.3028660847945295E-6	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999985791868528	WITHOUT_CLASSIFICATION	1.4208131473046517E-6	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.999998542718197	WITHOUT_CLASSIFICATION	1.4572818029538557E-6	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999984944242528	WITHOUT_CLASSIFICATION	1.5055757471588266E-6	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999987026706135	WITHOUT_CLASSIFICATION	1.2973293864112215E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999955603955472	WITHOUT_CLASSIFICATION	4.439604452825857E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999956865820795	WITHOUT_CLASSIFICATION	4.313417920551495E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999932350286923	WITHOUT_CLASSIFICATION	6.76497130761138E-6	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999909609009191	WITHOUT_CLASSIFICATION	9.039099080932153E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998228546801934	WITHOUT_CLASSIFICATION	1.7714531980658798E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998517514605194	WITHOUT_CLASSIFICATION	1.4824853948063673E-4	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999700324962021	WITHOUT_CLASSIFICATION	2.9967503797843117E-5	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999730462581733	WITHOUT_CLASSIFICATION	2.6953741826783637E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999986680794938	WITHOUT_CLASSIFICATION	1.3319205062633448E-6	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999985332350162	WITHOUT_CLASSIFICATION	1.4667649837278868E-6	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999986482513727	WITHOUT_CLASSIFICATION	1.351748627321651E-6	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999987381509821	WITHOUT_CLASSIFICATION	1.2618490179816241E-6	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999987016672855	WITHOUT_CLASSIFICATION	1.2983327144687944E-6	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999985179879705	WITHOUT_CLASSIFICATION	1.4820120295242754E-6	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999980906569199	WITHOUT_CLASSIFICATION	1.9093430800802E-6	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999982645517217	WITHOUT_CLASSIFICATION	1.7354482783289702E-6	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999985748659775	WITHOUT_CLASSIFICATION	1.4251340224086482E-6	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999985079707981	WITHOUT_CLASSIFICATION	1.4920292017835165E-6	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999983246450036	WITHOUT_CLASSIFICATION	1.6753549964264202E-6	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999982760862064	WITHOUT_CLASSIFICATION	1.7239137935795817E-6	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.999998351111792	WITHOUT_CLASSIFICATION	1.6488882079405391E-6	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.999998451121359	WITHOUT_CLASSIFICATION	1.5488786409352994E-6	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999982983799082	WITHOUT_CLASSIFICATION	1.7016200919179701E-6	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999983227874931	WITHOUT_CLASSIFICATION	1.6772125068625932E-6	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999985258374142	WITHOUT_CLASSIFICATION	1.4741625857021724E-6	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999984822184852	WITHOUT_CLASSIFICATION	1.5177815148678924E-6	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999983865051094	WITHOUT_CLASSIFICATION	1.613494890619923E-6	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999985401326505	WITHOUT_CLASSIFICATION	1.4598673494524514E-6	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999977947229188	WITHOUT_CLASSIFICATION	2.2052770810607522E-6	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999977614656295	WITHOUT_CLASSIFICATION	2.238534370481621E-6	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999983518424015	WITHOUT_CLASSIFICATION	1.648157598418125E-6	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999965822566611	WITHOUT_CLASSIFICATION	3.41774333886767E-6	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999962270520932	WITHOUT_CLASSIFICATION	3.7729479068093826E-6	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999992889197516	WITHOUT_CLASSIFICATION	7.11080248219658E-7	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.999986144825075	WITHOUT_CLASSIFICATION	1.3855174925161609E-5	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.999999686084396	WITHOUT_CLASSIFICATION	3.139156039179068E-7	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999982858690087	WITHOUT_CLASSIFICATION	1.71413099125574E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999272448749	WITHOUT_CLASSIFICATION	7.275512519403604E-8	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.999998234674314	WITHOUT_CLASSIFICATION	1.7653256859865615E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996049269819	WITHOUT_CLASSIFICATION	3.950730181597498E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996049269819	WITHOUT_CLASSIFICATION	3.950730181597498E-7	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999929390771528	WITHOUT_CLASSIFICATION	7.060922847240996E-6	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999914766259705	WITHOUT_CLASSIFICATION	8.523374029511313E-6	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999997924531231	WITHOUT_CLASSIFICATION	2.0754687689565092E-7	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999985039579264	WITHOUT_CLASSIFICATION	1.4960420735733666E-6	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999974955880893	WITHOUT_CLASSIFICATION	2.504411910732922E-6	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999891124412232	WITHOUT_CLASSIFICATION	1.0887558776868178E-5	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999984852978092	WITHOUT_CLASSIFICATION	1.514702190839513E-6	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999998957032032	WITHOUT_CLASSIFICATION	1.0429679673818735E-7	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999999387024646	WITHOUT_CLASSIFICATION	6.129753537016619E-8	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.999993805804209	WITHOUT_CLASSIFICATION	6.194195790912614E-6	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999693282167113	WITHOUT_CLASSIFICATION	3.067178328877604E-5	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999764678561328	WITHOUT_CLASSIFICATION	2.3532143867259873E-5	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999642282839479	WITHOUT_CLASSIFICATION	3.577171605200111E-5	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999967580660346	WITHOUT_CLASSIFICATION	3.241933965411089E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999992978880443	WITHOUT_CLASSIFICATION	7.021119555890231E-7	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999992978880443	WITHOUT_CLASSIFICATION	7.021119555890231E-7	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999941152747976	WITHOUT_CLASSIFICATION	5.884725202387375E-6	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999998997827562	WITHOUT_CLASSIFICATION	1.002172438816712E-7	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999998384472215	WITHOUT_CLASSIFICATION	1.6155277840768557E-7	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999949464115273	WITHOUT_CLASSIFICATION	5.053588472756581E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996486654488	WITHOUT_CLASSIFICATION	3.513345511577256E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999989543013441	WITHOUT_CLASSIFICATION	1.0456986558729904E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999991892027967	WITHOUT_CLASSIFICATION	8.107972031904804E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999989543013441	WITHOUT_CLASSIFICATION	1.0456986558729904E-6	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999879645643791	WITHOUT_CLASSIFICATION	1.2035435620846354E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999558975604	WITHOUT_CLASSIFICATION	4.4102439639998757E-8	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.999999269539391	WITHOUT_CLASSIFICATION	7.304606090628137E-7	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.999996949038667	WITHOUT_CLASSIFICATION	3.0509613330459565E-6	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999995517678925	WITHOUT_CLASSIFICATION	4.4823210760877624E-7	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999988063114911	WITHOUT_CLASSIFICATION	1.1936885089859941E-6	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999999025783433	WITHOUT_CLASSIFICATION	9.742165685899062E-8	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999991308881357	WITHOUT_CLASSIFICATION	8.691118643090988E-7	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999991422518888	WITHOUT_CLASSIFICATION	8.57748111161886E-7	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999991795792564	WITHOUT_CLASSIFICATION	8.204207434648351E-7	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999982407856691	WITHOUT_CLASSIFICATION	1.7592143308726738E-6	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999773271383011	WITHOUT_CLASSIFICATION	2.2672861698978867E-5	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999746171566902	WITHOUT_CLASSIFICATION	2.5382843309745744E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999940303007862	WITHOUT_CLASSIFICATION	5.969699213894089E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999926570546426	WITHOUT_CLASSIFICATION	7.3429453574147325E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999926570546426	WITHOUT_CLASSIFICATION	7.3429453574147325E-6	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999997615675652	WITHOUT_CLASSIFICATION	2.384324347284147E-7	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999983661313414	WITHOUT_CLASSIFICATION	1.6338686585634804E-6	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999990976740826	WITHOUT_CLASSIFICATION	9.023259174503564E-7	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.999999122859263	WITHOUT_CLASSIFICATION	8.771407370499036E-7	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.999999886366882	WITHOUT_CLASSIFICATION	1.1363311803625138E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999989543013441	WITHOUT_CLASSIFICATION	1.0456986558729904E-6	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999997927794493	WITHOUT_CLASSIFICATION	2.0722055074759412E-7	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999888451384	WITHOUT_CLASSIFICATION	1.1154861588285037E-8	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999935445247083	WITHOUT_CLASSIFICATION	6.455475291660745E-6	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999998350703282	WITHOUT_CLASSIFICATION	1.649296717643456E-7	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999928612533	WITHOUT_CLASSIFICATION	7.138746739611298E-9	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999998995713041	WITHOUT_CLASSIFICATION	1.0042869591548988E-7	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999997845354835	WITHOUT_CLASSIFICATION	2.1546451639474228E-7	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999991412294349	WITHOUT_CLASSIFICATION	8.587705650160154E-7	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999998568278129	WITHOUT_CLASSIFICATION	1.43172187237777E-7	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999937967748054	WITHOUT_CLASSIFICATION	6.203225194695173E-6	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999997461217135	WITHOUT_CLASSIFICATION	2.5387828659029575E-7	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999241017119	WITHOUT_CLASSIFICATION	7.589828813152572E-8	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999997804033891	WITHOUT_CLASSIFICATION	2.1959661091289346E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999938905139664	WITHOUT_CLASSIFICATION	6.109486033681302E-6	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999993214043194	WITHOUT_CLASSIFICATION	6.78595680594368E-7	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999791398933954	WITHOUT_CLASSIFICATION	2.086010660462802E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999998127123385	WITHOUT_CLASSIFICATION	1.8728766153239228E-7	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999979142725874	WITHOUT_CLASSIFICATION	2.0857274126040117E-6	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999971459023738	WITHOUT_CLASSIFICATION	2.8540976262123685E-6	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999973875105234	WITHOUT_CLASSIFICATION	2.6124894766381672E-6	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999992442811936	WITHOUT_CLASSIFICATION	7.55718806374179E-7	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999913141192776	WITHOUT_CLASSIFICATION	8.685880722516972E-6	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999988599692458	WITHOUT_CLASSIFICATION	1.140030754250672E-6	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999993030246482	WITHOUT_CLASSIFICATION	6.969753516541464E-7	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999998849082042	WITHOUT_CLASSIFICATION	1.1509179580978087E-7	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999961186138215	WITHOUT_CLASSIFICATION	3.8813861784889975E-6	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999999807456669	WITHOUT_CLASSIFICATION	1.9254333207433447E-8	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999999324076876	WITHOUT_CLASSIFICATION	6.759231240164716E-8	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999148250823384	WITHOUT_CLASSIFICATION	8.517491766156755E-5	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999989795018561	WITHOUT_CLASSIFICATION	1.0204981438306964E-6	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999993439199274	WITHOUT_CLASSIFICATION	6.560800726638539E-7	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999989711790269	WITHOUT_CLASSIFICATION	1.0288209730865392E-6	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.999996297367642	WITHOUT_CLASSIFICATION	3.702632358154057E-6	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.999999604084601	WITHOUT_CLASSIFICATION	3.959153990228565E-7	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999998657405824	WITHOUT_CLASSIFICATION	1.342594175290484E-7	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999999900571478	WITHOUT_CLASSIFICATION	9.94285216272324E-9	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.999999915691735	WITHOUT_CLASSIFICATION	8.430826498718984E-8	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999998784176358	WITHOUT_CLASSIFICATION	1.215823642526636E-7	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999997932122703	WITHOUT_CLASSIFICATION	2.0678772970908244E-7	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.999999996179725	WITHOUT_CLASSIFICATION	3.820274983172874E-9	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999730462581733	WITHOUT_CLASSIFICATION	2.6953741826783637E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999332407636926	WITHOUT_CLASSIFICATION	6.675923630741374E-5	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999992879613128	WITHOUT_CLASSIFICATION	7.120386871323433E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999968337178688	WITHOUT_CLASSIFICATION	3.166282131000853E-6	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999988966607407	WITHOUT_CLASSIFICATION	1.1033392593276816E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999558975604	WITHOUT_CLASSIFICATION	4.4102439639998757E-8	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999998495317156	WITHOUT_CLASSIFICATION	1.5046828433423324E-7	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999999949381319	WITHOUT_CLASSIFICATION	5.061868185927216E-9	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999994674290253	WITHOUT_CLASSIFICATION	5.325709746321817E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998650726549	WITHOUT_CLASSIFICATION	1.3492734502385804E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998650726549	WITHOUT_CLASSIFICATION	1.3492734502385804E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999994855980053	WITHOUT_CLASSIFICATION	5.144019946215832E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999994855980053	WITHOUT_CLASSIFICATION	5.144019946215832E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999994855980053	WITHOUT_CLASSIFICATION	5.144019946215832E-7	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999930269039037	WITHOUT_CLASSIFICATION	6.973096096393339E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999930269039037	WITHOUT_CLASSIFICATION	6.973096096393339E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999892759818775	WITHOUT_CLASSIFICATION	1.0724018122518378E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999892759818775	WITHOUT_CLASSIFICATION	1.0724018122518378E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999834074934437	WITHOUT_CLASSIFICATION	1.6592506556253113E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999993060789528	WITHOUT_CLASSIFICATION	6.939210472184848E-7	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.999999452033844	WITHOUT_CLASSIFICATION	5.4796615604237E-7	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.999999452033844	WITHOUT_CLASSIFICATION	5.4796615604237E-7	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999996438770034	WITHOUT_CLASSIFICATION	3.561229966940656E-7	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999976553211116	WITHOUT_CLASSIFICATION	2.344678888351487E-6	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999993417102391	WITHOUT_CLASSIFICATION	6.582897610398182E-7	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999991633611813	WITHOUT_CLASSIFICATION	8.366388186970244E-7	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999975970367889	WITHOUT_CLASSIFICATION	2.402963211045984E-6	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999993982960673	WITHOUT_CLASSIFICATION	6.017039326155797E-7	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999969887051346	WITHOUT_CLASSIFICATION	3.0112948653385288E-6	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999990947559553	WITHOUT_CLASSIFICATION	9.05244044778255E-7	TEST
// caller	WITHOUT_CLASSIFICATION	0.99999946722144	WITHOUT_CLASSIFICATION	5.327785601075533E-7	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999997056233937	WITHOUT_CLASSIFICATION	2.9437660624265963E-7	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999998377176602	WITHOUT_CLASSIFICATION	1.622823397523157E-7	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999991189806638	WITHOUT_CLASSIFICATION	8.81019336272571E-7	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999914052542083	WITHOUT_CLASSIFICATION	8.594745791811458E-6	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999992258455381	WITHOUT_CLASSIFICATION	7.741544618267216E-7	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999998479387677	WITHOUT_CLASSIFICATION	1.5206123219532023E-7	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999913811105219	WITHOUT_CLASSIFICATION	8.618889478074247E-6	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999989521884118	WITHOUT_CLASSIFICATION	1.0478115881316802E-6	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999988445010722	WITHOUT_CLASSIFICATION	1.1554989277648468E-6	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.999999258449766	WITHOUT_CLASSIFICATION	7.415502339101097E-7	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999823939236887	WITHOUT_CLASSIFICATION	1.76060763113703E-5	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999069028497	WITHOUT_CLASSIFICATION	9.309715035678309E-8	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999997951978021	WITHOUT_CLASSIFICATION	2.0480219777188083E-7	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999993039803455	WITHOUT_CLASSIFICATION	6.96019654454204E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999147656496	WITHOUT_CLASSIFICATION	8.523435031332476E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999510675047	WITHOUT_CLASSIFICATION	4.8932495292597036E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999998651278719	WITHOUT_CLASSIFICATION	1.3487212809381756E-7	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999847275899	WITHOUT_CLASSIFICATION	1.5272410102908532E-7	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999034085092	WITHOUT_CLASSIFICATION	9.659149080584236E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999214565173	WITHOUT_CLASSIFICATION	7.854348272892961E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999549086892	WITHOUT_CLASSIFICATION	4.5091310883663896E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998757152878	WITHOUT_CLASSIFICATION	1.2428471227722935E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999301601974	WITHOUT_CLASSIFICATION	6.983980262748379E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999599054162	WITHOUT_CLASSIFICATION	4.009458367824418E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999146514144	WITHOUT_CLASSIFICATION	8.534858573558597E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999599054162	WITHOUT_CLASSIFICATION	4.009458367824418E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999599054162	WITHOUT_CLASSIFICATION	4.009458367824418E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999599054162	WITHOUT_CLASSIFICATION	4.009458367824418E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999599054162	WITHOUT_CLASSIFICATION	4.009458367824418E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999599054162	WITHOUT_CLASSIFICATION	4.009458367824418E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999599054162	WITHOUT_CLASSIFICATION	4.009458367824418E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999146514144	WITHOUT_CLASSIFICATION	8.534858573558597E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999146514144	WITHOUT_CLASSIFICATION	8.534858573558597E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999146514144	WITHOUT_CLASSIFICATION	8.534858573558597E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999146514144	WITHOUT_CLASSIFICATION	8.534858573558597E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999146514144	WITHOUT_CLASSIFICATION	8.534858573558597E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999146514144	WITHOUT_CLASSIFICATION	8.534858573558597E-8	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999998113339258	WITHOUT_CLASSIFICATION	1.886660740868233E-7	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.999999428419154	WITHOUT_CLASSIFICATION	5.715808459017744E-7	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999989898039614	WITHOUT_CLASSIFICATION	1.01019603867644E-6	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998065340113	WITHOUT_CLASSIFICATION	1.9346598862266927E-7	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999435120315	WITHOUT_CLASSIFICATION	5.6487968492077695E-8	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999997813272793	WITHOUT_CLASSIFICATION	2.1867272071417488E-7	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999999361057506	WITHOUT_CLASSIFICATION	6.389424951188176E-8	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999625892337	WITHOUT_CLASSIFICATION	3.741076628284667E-8	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999998387594009	WITHOUT_CLASSIFICATION	1.6124059919088317E-7	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.999996776180699	WITHOUT_CLASSIFICATION	3.223819300909334E-6	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.999961789251145	WITHOUT_CLASSIFICATION	3.821074885490765E-5	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999461617948	WITHOUT_CLASSIFICATION	5.383820518457904E-8	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999953613384308	WITHOUT_CLASSIFICATION	4.6386615691900225E-6	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999435315963	WITHOUT_CLASSIFICATION	5.6468403746352665E-8	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999981357560428	WITHOUT_CLASSIFICATION	1.8642439572208534E-6	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999451110770206	WITHOUT_CLASSIFICATION	5.488892297937061E-5	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999996134309004	WITHOUT_CLASSIFICATION	3.8656909957131447E-7	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999999256076391	WITHOUT_CLASSIFICATION	7.439236089665149E-8	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999999665939336	WITHOUT_CLASSIFICATION	3.340606633621869E-8	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999414207165	WITHOUT_CLASSIFICATION	5.8579283429582426E-8	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999956823058642	WITHOUT_CLASSIFICATION	4.317694135821023E-6	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999988549636517	WITHOUT_CLASSIFICATION	1.1450363482577606E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999991892027967	WITHOUT_CLASSIFICATION	8.107972031904804E-7	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.999998573749658	WITHOUT_CLASSIFICATION	1.426250342092569E-6	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999950255015307	WITHOUT_CLASSIFICATION	4.9744984692557724E-6	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999553492127	WITHOUT_CLASSIFICATION	4.4650787240370244E-8	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999997848762968	WITHOUT_CLASSIFICATION	2.1512370317928482E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999993524588012	WITHOUT_CLASSIFICATION	6.475411987034845E-7	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999972888878633	WITHOUT_CLASSIFICATION	2.7111121365822692E-6	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999998655849006	WITHOUT_CLASSIFICATION	1.3441509933138657E-7	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999996013373006	WITHOUT_CLASSIFICATION	3.9866269943713485E-7	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999997791901075	WITHOUT_CLASSIFICATION	2.2080989246479936E-7	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999592256189	WITHOUT_CLASSIFICATION	4.077438106335356E-8	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999998404738387	WITHOUT_CLASSIFICATION	1.5952616129573218E-7	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999998388448907	WITHOUT_CLASSIFICATION	1.611551093506466E-7	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999997679890787	WITHOUT_CLASSIFICATION	2.3201092120664012E-7	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999998626255936	WITHOUT_CLASSIFICATION	1.3737440643453096E-7	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999993359770454	WITHOUT_CLASSIFICATION	6.640229545823273E-7	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999935104321	WITHOUT_CLASSIFICATION	6.489567876618515E-9	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999246002179	WITHOUT_CLASSIFICATION	7.539978215400237E-8	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999989928106424	WITHOUT_CLASSIFICATION	1.0071893576154437E-6	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999985880475224	WITHOUT_CLASSIFICATION	1.4119524776324535E-6	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999963319347109	WITHOUT_CLASSIFICATION	3.668065289110949E-6	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999952571647976	WITHOUT_CLASSIFICATION	4.742835202385138E-6	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999952571647976	WITHOUT_CLASSIFICATION	4.742835202385138E-6	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999987656690658	WITHOUT_CLASSIFICATION	1.2343309342134453E-6	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999987656690658	WITHOUT_CLASSIFICATION	1.2343309342134453E-6	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999981634340874	WITHOUT_CLASSIFICATION	1.8365659125416576E-6	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999981634340874	WITHOUT_CLASSIFICATION	1.8365659125416576E-6	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999241345295	WITHOUT_CLASSIFICATION	7.586547055963842E-8	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999999596205763	WITHOUT_CLASSIFICATION	4.0379423637868345E-8	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999975669616842	WITHOUT_CLASSIFICATION	2.4330383157125788E-6	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.999997737303662	WITHOUT_CLASSIFICATION	2.2626963379943024E-6	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999999709923231	WITHOUT_CLASSIFICATION	2.900767699826984E-8	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.999979709757505	WITHOUT_CLASSIFICATION	2.0290242494997685E-5	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999972582826492	WITHOUT_CLASSIFICATION	2.7417173509267654E-6	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999783954242	WITHOUT_CLASSIFICATION	2.1604575877798816E-8	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999091368833	WITHOUT_CLASSIFICATION	9.086311671244728E-8	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999987695011502	WITHOUT_CLASSIFICATION	1.2304988497857572E-6	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999923194838358	WITHOUT_CLASSIFICATION	7.680516164188171E-6	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999827587538899	WITHOUT_CLASSIFICATION	1.7241246110201547E-5	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999998602572503	WITHOUT_CLASSIFICATION	1.3974274968471314E-7	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999999975317444	WITHOUT_CLASSIFICATION	2.468255617942324E-9	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999993560289225	WITHOUT_CLASSIFICATION	6.439710774911406E-7	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999967715635038	WITHOUT_CLASSIFICATION	3.228436496149605E-6	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999727900427	WITHOUT_CLASSIFICATION	2.720995725788427E-8	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999987326098911	WITHOUT_CLASSIFICATION	1.2673901088222683E-6	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999983972363036	WITHOUT_CLASSIFICATION	1.6027636964637325E-6	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.999994813510086	WITHOUT_CLASSIFICATION	5.186489913994854E-6	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.999996990084397	WITHOUT_CLASSIFICATION	3.009915602988556E-6	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999996036981925	WITHOUT_CLASSIFICATION	3.9630180751218215E-7	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999966756577808	WITHOUT_CLASSIFICATION	3.3243422191756183E-6	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.999999948749578	WITHOUT_CLASSIFICATION	5.125042215284862E-8	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999993362361403	WITHOUT_CLASSIFICATION	6.637638595565318E-7	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999998127528541	WITHOUT_CLASSIFICATION	1.8724714593362166E-7	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999942607816423	WITHOUT_CLASSIFICATION	5.7392183577459536E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997115007628	WITHOUT_CLASSIFICATION	2.8849923717710803E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997115007628	WITHOUT_CLASSIFICATION	2.8849923717710803E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997115007628	WITHOUT_CLASSIFICATION	2.8849923717710803E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999999986440648	WITHOUT_CLASSIFICATION	1.3559351896598106E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999999986440648	WITHOUT_CLASSIFICATION	1.3559351896598106E-8	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999938905139664	WITHOUT_CLASSIFICATION	6.109486033681302E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999938905139664	WITHOUT_CLASSIFICATION	6.109486033681302E-6	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999994442704199	WITHOUT_CLASSIFICATION	5.557295801390252E-7	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.999992007733864	WITHOUT_CLASSIFICATION	7.992266136057727E-6	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999986969478234	WITHOUT_CLASSIFICATION	1.3030521765378033E-6	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999985797621004	WITHOUT_CLASSIFICATION	1.4202378996890083E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997115007628	WITHOUT_CLASSIFICATION	2.8849923717710803E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997115007628	WITHOUT_CLASSIFICATION	2.8849923717710803E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997115007628	WITHOUT_CLASSIFICATION	2.8849923717710803E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999999986440648	WITHOUT_CLASSIFICATION	1.3559351896598106E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999999986440648	WITHOUT_CLASSIFICATION	1.3559351896598106E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999999986440648	WITHOUT_CLASSIFICATION	1.3559351896598106E-8	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999938905139664	WITHOUT_CLASSIFICATION	6.109486033681302E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999938905139664	WITHOUT_CLASSIFICATION	6.109486033681302E-6	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999411177855	WITHOUT_CLASSIFICATION	5.888221447687083E-8	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999992502824837	WITHOUT_CLASSIFICATION	7.497175162567613E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999988020231512	WITHOUT_CLASSIFICATION	1.1979768487890358E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999988020231512	WITHOUT_CLASSIFICATION	1.1979768487890358E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999988020231512	WITHOUT_CLASSIFICATION	1.1979768487890358E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999988020231512	WITHOUT_CLASSIFICATION	1.1979768487890358E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999988020231512	WITHOUT_CLASSIFICATION	1.1979768487890358E-6	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999997740479148	WITHOUT_CLASSIFICATION	2.2595208508702618E-7	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.999998394114445	WITHOUT_CLASSIFICATION	1.6058855549504767E-6	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.999996950049571	WITHOUT_CLASSIFICATION	3.0499504289394898E-6	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999961378655178	WITHOUT_CLASSIFICATION	3.862134482202538E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999981038831917	WITHOUT_CLASSIFICATION	1.8961168084025295E-6	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999974151843785	WITHOUT_CLASSIFICATION	2.584815621483079E-6	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999817131448392	WITHOUT_CLASSIFICATION	1.8286855160884065E-5	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999995828312135	WITHOUT_CLASSIFICATION	4.1716878643202525E-7	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999985029215811	WITHOUT_CLASSIFICATION	1.4970784188442423E-6	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999983723860691	WITHOUT_CLASSIFICATION	1.6276139307598688E-6	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999989250887646	WITHOUT_CLASSIFICATION	1.0749112352889162E-6	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.999997171114368	WITHOUT_CLASSIFICATION	2.828885632029845E-6	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999946602561668	WITHOUT_CLASSIFICATION	5.339743833254619E-6	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999994659271201	WITHOUT_CLASSIFICATION	5.340728799132644E-7	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999975413366918	WITHOUT_CLASSIFICATION	2.4586633082402403E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999861667283372	WITHOUT_CLASSIFICATION	1.3833271662733309E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999861667283372	WITHOUT_CLASSIFICATION	1.3833271662733309E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999861667283372	WITHOUT_CLASSIFICATION	1.3833271662733309E-5	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9997127687593717	WITHOUT_CLASSIFICATION	2.8723124062834157E-4	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9997129344533671	WITHOUT_CLASSIFICATION	2.870655466328697E-4	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999994206936034	WITHOUT_CLASSIFICATION	5.793063966488E-7	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999998799875918	WITHOUT_CLASSIFICATION	1.2001240827994423E-7	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999995717372294	WITHOUT_CLASSIFICATION	4.282627705193886E-7	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999998232255083	WITHOUT_CLASSIFICATION	1.7677449172798866E-7	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999996181547683	WITHOUT_CLASSIFICATION	3.818452316764506E-7	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999994042334578	WITHOUT_CLASSIFICATION	5.957665421987051E-7	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999987943931054	WITHOUT_CLASSIFICATION	1.2056068946552975E-6	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999082710167	WITHOUT_CLASSIFICATION	9.172898340393244E-8	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999997967619899	WITHOUT_CLASSIFICATION	2.0323801007640366E-7	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999997539597766	WITHOUT_CLASSIFICATION	2.460402234069713E-7	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999995492550381	WITHOUT_CLASSIFICATION	4.5074496180131426E-7	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999989929470592	WITHOUT_CLASSIFICATION	1.0070529408285738E-6	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999995859374452	WITHOUT_CLASSIFICATION	4.140625548061136E-7	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999996998107505	WITHOUT_CLASSIFICATION	3.001892494420672E-7	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.99999942962422	WITHOUT_CLASSIFICATION	5.703757800402734E-7	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999991189310498	WITHOUT_CLASSIFICATION	8.810689502307606E-7	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999985668441184	WITHOUT_CLASSIFICATION	1.4331558816133902E-6	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999993116765803	WITHOUT_CLASSIFICATION	6.883234198037704E-7	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999992649091106	WITHOUT_CLASSIFICATION	7.350908892969432E-7	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999995513475048	WITHOUT_CLASSIFICATION	4.4865249510957407E-7	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999998548970369	WITHOUT_CLASSIFICATION	1.4510296308162377E-7	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999995994491956	WITHOUT_CLASSIFICATION	4.0055080437136177E-7	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.999998387146729	WITHOUT_CLASSIFICATION	1.6128532710418951E-6	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999987575114839	WITHOUT_CLASSIFICATION	1.242488516014411E-6	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999990310255623	WITHOUT_CLASSIFICATION	9.689744376791333E-7	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999987905173833	WITHOUT_CLASSIFICATION	1.2094826167150795E-6	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999950822464128	WITHOUT_CLASSIFICATION	4.917753587222715E-6	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9999504323635406	WITHOUT_CLASSIFICATION	4.9567636459390956E-5	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9999406291079879	WITHOUT_CLASSIFICATION	5.937089201210235E-5	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9999182245810052	WITHOUT_CLASSIFICATION	8.17754189948177E-5	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9999479677793608	WITHOUT_CLASSIFICATION	5.203222063911495E-5	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9999459508158804	WITHOUT_CLASSIFICATION	5.404918411948476E-5	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9999466012957082	WITHOUT_CLASSIFICATION	5.339870429167583E-5	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.999947491665205	WITHOUT_CLASSIFICATION	5.250833479511703E-5	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.999999544266735	WITHOUT_CLASSIFICATION	4.557332650475141E-7	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999992567937952	WITHOUT_CLASSIFICATION	7.432062046880779E-7	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999998120629922	WITHOUT_CLASSIFICATION	1.8793700789309274E-7	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.8279996685330421	TEST	0.17200033146695798	WITHOUT_CLASSIFICATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999927718693262	WITHOUT_CLASSIFICATION	7.228130673748886E-6	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999999903970096	WITHOUT_CLASSIFICATION	9.602990535451588E-9	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999980336573736	WITHOUT_CLASSIFICATION	1.9663426263614514E-6	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999997550927557	WITHOUT_CLASSIFICATION	2.449072442406849E-7	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999698719970554	WITHOUT_CLASSIFICATION	3.012800294457332E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999927695086918	WITHOUT_CLASSIFICATION	7.230491308249995E-6	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998855557929678	WITHOUT_CLASSIFICATION	1.1444420703216705E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998855557929678	WITHOUT_CLASSIFICATION	1.1444420703216705E-4	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999940051122231	WITHOUT_CLASSIFICATION	5.994887776833834E-6	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999998108076706	WITHOUT_CLASSIFICATION	1.8919232942774758E-7	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999960603421819	WITHOUT_CLASSIFICATION	3.9396578180083795E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9988385009106875	WITHOUT_CLASSIFICATION	0.0011614990893125115	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999893197525014	WITHOUT_CLASSIFICATION	1.0680247498521666E-5	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.999998199259608	WITHOUT_CLASSIFICATION	1.800740391970691E-6	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999994829108406	WITHOUT_CLASSIFICATION	5.170891594285966E-7	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998491159108	WITHOUT_CLASSIFICATION	1.5088408921081633E-7	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.999999891918167	WITHOUT_CLASSIFICATION	1.0808183298213842E-7	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999998883856547	WITHOUT_CLASSIFICATION	1.1161434539472834E-7	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999374359875	WITHOUT_CLASSIFICATION	6.256401251240172E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999374359875	WITHOUT_CLASSIFICATION	6.256401251240172E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999374359875	WITHOUT_CLASSIFICATION	6.256401251240172E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999374359875	WITHOUT_CLASSIFICATION	6.256401251240172E-8	TEST
// try both	WITHOUT_CLASSIFICATION	0.999997148436664	WITHOUT_CLASSIFICATION	2.8515633359170466E-6	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999975814454376	WITHOUT_CLASSIFICATION	2.418554562358676E-6	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999986371037799	WITHOUT_CLASSIFICATION	1.3628962201159888E-6	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999978099962238	WITHOUT_CLASSIFICATION	2.1900037762596448E-6	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999983160244611	WITHOUT_CLASSIFICATION	1.683975538858235E-6	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999997439034954	WITHOUT_CLASSIFICATION	2.560965045194762E-7	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999989428222964	WITHOUT_CLASSIFICATION	1.0571777035007027E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999996292455837	WITHOUT_CLASSIFICATION	3.7075441634559435E-7	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999996292455837	WITHOUT_CLASSIFICATION	3.7075441634559435E-7	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999292593795	WITHOUT_CLASSIFICATION	7.074062052519338E-8	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.999999846123279	WITHOUT_CLASSIFICATION	1.5387672098647012E-7	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999981739779252	WITHOUT_CLASSIFICATION	1.8260220748129053E-5	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999754411615	WITHOUT_CLASSIFICATION	2.4558838442173975E-8	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999754411615	WITHOUT_CLASSIFICATION	2.4558838442173975E-8	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999233454047	WITHOUT_CLASSIFICATION	7.665459529557978E-8	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999955288704415	WITHOUT_CLASSIFICATION	4.471129558480576E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999955288704415	WITHOUT_CLASSIFICATION	4.471129558480576E-6	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999662856422864	WITHOUT_CLASSIFICATION	3.37143577135924E-5	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999923737421681	WITHOUT_CLASSIFICATION	7.626257831996166E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999997182563306	WITHOUT_CLASSIFICATION	2.817436694460823E-7	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999964938576379	WITHOUT_CLASSIFICATION	3.506142362032625E-6	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999995932250058	WITHOUT_CLASSIFICATION	4.0677499429542126E-7	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999733768088	WITHOUT_CLASSIFICATION	2.6623191179131257E-8	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.999990757833471	WITHOUT_CLASSIFICATION	9.24216652888468E-6	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9999920198135728	WITHOUT_CLASSIFICATION	7.980186427206715E-6	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999998327904482	WITHOUT_CLASSIFICATION	1.6720955174844783E-7	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999989506238116	WITHOUT_CLASSIFICATION	1.0493761884417924E-6	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999941068022336	WITHOUT_CLASSIFICATION	5.893197766376225E-6	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999996281947792	WITHOUT_CLASSIFICATION	3.718052208857726E-7	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9943524057630934	WITHOUT_CLASSIFICATION	0.005647594236906647	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9938000303088548	WITHOUT_CLASSIFICATION	0.006199969691145221	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999999436176694	WITHOUT_CLASSIFICATION	5.638233058158224E-8	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999998618709836	WITHOUT_CLASSIFICATION	1.3812901647174585E-7	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999951190765072	WITHOUT_CLASSIFICATION	4.8809234927834574E-6	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.999998927944911	WITHOUT_CLASSIFICATION	1.072055088999257E-6	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999983423675427	WITHOUT_CLASSIFICATION	1.6576324572121537E-6	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.999999970693706	WITHOUT_CLASSIFICATION	2.9306293993304273E-8	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999976149814633	WITHOUT_CLASSIFICATION	2.3850185366565098E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999972810214285	WITHOUT_CLASSIFICATION	2.718978571592236E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.999997900518277	WITHOUT_CLASSIFICATION	2.099481723122994E-6	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999921434695478	WITHOUT_CLASSIFICATION	7.856530452191113E-6	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999265005640902	WITHOUT_CLASSIFICATION	7.34994359098198E-5	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999713116160864	WITHOUT_CLASSIFICATION	2.8688383913521345E-5	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999992525627686	WITHOUT_CLASSIFICATION	7.474372314952252E-7	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999986902578656	WITHOUT_CLASSIFICATION	1.3097421344074778E-6	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999823367979	WITHOUT_CLASSIFICATION	1.766320206892456E-8	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999988507377751	WITHOUT_CLASSIFICATION	1.1492622248413268E-6	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999900345898945	WITHOUT_CLASSIFICATION	9.965410105498945E-6	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999988250390244	WITHOUT_CLASSIFICATION	1.1749609756706798E-6	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9998993210911458	WITHOUT_CLASSIFICATION	1.0067890885419069E-4	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999981068346392	WITHOUT_CLASSIFICATION	1.893165360720688E-6	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.999999863624598	WITHOUT_CLASSIFICATION	1.3637540197267642E-7	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999955965314589	WITHOUT_CLASSIFICATION	4.4034685411372595E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999749885100644	WITHOUT_CLASSIFICATION	2.5011489935540005E-5	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999988160801937	WITHOUT_CLASSIFICATION	1.1839198063227457E-6	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999879269006731	WITHOUT_CLASSIFICATION	1.2073099326877816E-5	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999955965314589	WITHOUT_CLASSIFICATION	4.4034685411372595E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999749885100644	WITHOUT_CLASSIFICATION	2.5011489935540005E-5	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999993256590487	WITHOUT_CLASSIFICATION	6.743409513445547E-7	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999977502375785	WITHOUT_CLASSIFICATION	2.24976242145086E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999977502375785	WITHOUT_CLASSIFICATION	2.24976242145086E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999998048782714	WITHOUT_CLASSIFICATION	1.9512172859894945E-6	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999993947556952	WITHOUT_CLASSIFICATION	6.052443047813137E-7	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.99999642816883	WITHOUT_CLASSIFICATION	3.5718311698951738E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999972346725167	WITHOUT_CLASSIFICATION	2.765327483425154E-6	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999855587010562	WITHOUT_CLASSIFICATION	1.444129894388718E-5	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999179054171523	WITHOUT_CLASSIFICATION	8.209458284777925E-5	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999947025074714	WITHOUT_CLASSIFICATION	5.297492528693397E-6	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999993102105463	WITHOUT_CLASSIFICATION	6.897894537500555E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.999997828508843	WITHOUT_CLASSIFICATION	2.1714911570023068E-6	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999882878780048	WITHOUT_CLASSIFICATION	1.1712121995188873E-5	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999999168712579	WITHOUT_CLASSIFICATION	8.312874207991393E-8	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999993020827972	WITHOUT_CLASSIFICATION	6.979172028180272E-7	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999975623904513	WITHOUT_CLASSIFICATION	2.4376095487781273E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999992921776736	WITHOUT_CLASSIFICATION	7.078223263882239E-7	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999992921776736	WITHOUT_CLASSIFICATION	7.078223263882239E-7	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999464094794532	WITHOUT_CLASSIFICATION	5.359052054677815E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999464094794532	WITHOUT_CLASSIFICATION	5.359052054677815E-5	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999993773280811	WITHOUT_CLASSIFICATION	6.226719189192321E-7	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999995570863425	WITHOUT_CLASSIFICATION	4.4291365758204427E-7	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999991077956205	WITHOUT_CLASSIFICATION	8.922043796174911E-7	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999990333670333	WITHOUT_CLASSIFICATION	9.666329666783592E-7	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999935586593202	WITHOUT_CLASSIFICATION	6.441340679885894E-6	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999952736021439	WITHOUT_CLASSIFICATION	4.726397856092846E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.99999642816883	WITHOUT_CLASSIFICATION	3.5718311698951738E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999972346725167	WITHOUT_CLASSIFICATION	2.765327483425154E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.999997828508843	WITHOUT_CLASSIFICATION	2.1714911570023068E-6	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999882878780048	WITHOUT_CLASSIFICATION	1.1712121995188873E-5	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999999441017785	WITHOUT_CLASSIFICATION	5.589822150775082E-8	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999994831689805	WITHOUT_CLASSIFICATION	5.168310195365987E-7	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999862195248419	WITHOUT_CLASSIFICATION	1.3780475158088318E-5	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999990146930892	WITHOUT_CLASSIFICATION	9.85306910769818E-7	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999994727815482	WITHOUT_CLASSIFICATION	5.272184517387109E-7	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999987702279772	WITHOUT_CLASSIFICATION	1.2297720227495155E-6	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999988320714649	WITHOUT_CLASSIFICATION	1.1679285350601967E-6	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999774249752831	WITHOUT_CLASSIFICATION	2.257502471696598E-5	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999983668960329	WITHOUT_CLASSIFICATION	1.6331039670130532E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999983732151057	WITHOUT_CLASSIFICATION	1.626784894369588E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999971915375	WITHOUT_CLASSIFICATION	2.808462405272797E-9	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999753774432337	WITHOUT_CLASSIFICATION	2.462255676619161E-5	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999988677839098	WITHOUT_CLASSIFICATION	1.1322160902403493E-6	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999929577211906	WITHOUT_CLASSIFICATION	7.042278809393458E-6	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999978381613787	WITHOUT_CLASSIFICATION	2.161838621227766E-6	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999991186344854	WITHOUT_CLASSIFICATION	8.81365514510538E-7	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999973063595204	WITHOUT_CLASSIFICATION	2.6936404795366537E-6	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.999982993953203	WITHOUT_CLASSIFICATION	1.7006046796967247E-5	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999953379590557	WITHOUT_CLASSIFICATION	4.662040944352835E-6	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999925102982351	WITHOUT_CLASSIFICATION	7.4897017648564686E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999994303884435	WITHOUT_CLASSIFICATION	5.696115564953464E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999994303884435	WITHOUT_CLASSIFICATION	5.696115564953464E-6	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.999998824979552	WITHOUT_CLASSIFICATION	1.1750204480591625E-6	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999652333192655	WITHOUT_CLASSIFICATION	3.476668073454623E-5	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999996803514193	WITHOUT_CLASSIFICATION	3.196485806651821E-7	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999979715191415	WITHOUT_CLASSIFICATION	2.0284808585619343E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999979715191415	WITHOUT_CLASSIFICATION	2.0284808585619343E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999862195248419	WITHOUT_CLASSIFICATION	1.3780475158088318E-5	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999926218860177	WITHOUT_CLASSIFICATION	7.37811398231359E-6	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.999996091575185	WITHOUT_CLASSIFICATION	3.908424814938551E-6	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999978460700374	WITHOUT_CLASSIFICATION	2.153929962614875E-6	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999978062620479	WITHOUT_CLASSIFICATION	2.193737952086485E-6	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999997862131372	WITHOUT_CLASSIFICATION	2.137868627952142E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999345246958108	WITHOUT_CLASSIFICATION	6.547530418918287E-5	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999959170938655	WITHOUT_CLASSIFICATION	4.082906134485236E-6	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999983478857082	WITHOUT_CLASSIFICATION	1.6521142917786116E-6	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999975098436844	WITHOUT_CLASSIFICATION	2.49015631561799E-6	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999836801550706	WITHOUT_CLASSIFICATION	1.6319844929388232E-5	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999973190045993	WITHOUT_CLASSIFICATION	2.6809954006537558E-6	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999995552310375	WITHOUT_CLASSIFICATION	4.447689625143348E-7	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999996661671574	WITHOUT_CLASSIFICATION	3.3383284251493643E-7	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999993053020044	WITHOUT_CLASSIFICATION	6.94697995533427E-7	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999986880946081	WITHOUT_CLASSIFICATION	1.3119053919005558E-6	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999998253391216	WITHOUT_CLASSIFICATION	1.7466087840517348E-7	TEST
// states	WITHOUT_CLASSIFICATION	0.9999747653353875	WITHOUT_CLASSIFICATION	2.523466461234997E-5	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999978757152882	WITHOUT_CLASSIFICATION	2.124284711746297E-6	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999998710390684	WITHOUT_CLASSIFICATION	1.2896093153661226E-7	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999905669645	WITHOUT_CLASSIFICATION	9.433035521450296E-9	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999967910018495	WITHOUT_CLASSIFICATION	3.2089981505722728E-6	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999993145025817	WITHOUT_CLASSIFICATION	6.854974181876523E-7	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999909718024711	WITHOUT_CLASSIFICATION	9.0281975289696E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999833435644	WITHOUT_CLASSIFICATION	1.6656435612635803E-8	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999972097575615	WITHOUT_CLASSIFICATION	2.790242438502877E-6	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999813607354	WITHOUT_CLASSIFICATION	1.8639264474523448E-8	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999984831896501	WITHOUT_CLASSIFICATION	1.5168103498479897E-6	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999945234792	WITHOUT_CLASSIFICATION	5.476520757782748E-9	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999995090529372	WITHOUT_CLASSIFICATION	4.90947062740545E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997559570689	WITHOUT_CLASSIFICATION	2.440429311147113E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997559570689	WITHOUT_CLASSIFICATION	2.440429311147113E-7	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999997765973742	WITHOUT_CLASSIFICATION	2.2340262574368523E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999993361925659	WITHOUT_CLASSIFICATION	6.63807434088742E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999993361925659	WITHOUT_CLASSIFICATION	6.63807434088742E-7	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999962525101	WITHOUT_CLASSIFICATION	3.747489896725051E-8	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999962525101	WITHOUT_CLASSIFICATION	3.747489896725051E-8	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999969751067115	WITHOUT_CLASSIFICATION	3.0248932884831953E-6	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999202852312	WITHOUT_CLASSIFICATION	7.971476878452153E-8	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999885638632	WITHOUT_CLASSIFICATION	1.1436136930652448E-8	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999915010534209	WITHOUT_CLASSIFICATION	8.498946579063033E-6	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999760016842	WITHOUT_CLASSIFICATION	2.3998315802595444E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999968756402371	WITHOUT_CLASSIFICATION	3.1243597627786296E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999968756402371	WITHOUT_CLASSIFICATION	3.1243597627786296E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999833435644	WITHOUT_CLASSIFICATION	1.6656435612635803E-8	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999833435644	WITHOUT_CLASSIFICATION	1.6656435612635803E-8	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999833435644	WITHOUT_CLASSIFICATION	1.6656435612635803E-8	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999972097575615	WITHOUT_CLASSIFICATION	2.790242438502877E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997559570689	WITHOUT_CLASSIFICATION	2.440429311147113E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997559570689	WITHOUT_CLASSIFICATION	2.440429311147113E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997559570689	WITHOUT_CLASSIFICATION	2.440429311147113E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999969751067115	WITHOUT_CLASSIFICATION	3.0248932884831953E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999969751067115	WITHOUT_CLASSIFICATION	3.0248932884831953E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999969751067115	WITHOUT_CLASSIFICATION	3.0248932884831953E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999915010534209	WITHOUT_CLASSIFICATION	8.498946579063033E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999915010534209	WITHOUT_CLASSIFICATION	8.498946579063033E-6	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999999410376018	WITHOUT_CLASSIFICATION	5.896239810227323E-8	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999978801704495	WITHOUT_CLASSIFICATION	2.1198295504562796E-6	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999990589571952	WITHOUT_CLASSIFICATION	9.410428048988674E-7	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9998918410418872	WITHOUT_CLASSIFICATION	1.0815895811282908E-4	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.999999863007629	WITHOUT_CLASSIFICATION	1.3699237096795045E-7	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999995651783959	WITHOUT_CLASSIFICATION	4.348216039582622E-7	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999995651783959	WITHOUT_CLASSIFICATION	4.348216039582622E-7	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999993322046644	WITHOUT_CLASSIFICATION	6.677953355866676E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999345246958108	WITHOUT_CLASSIFICATION	6.547530418918287E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999345246958108	WITHOUT_CLASSIFICATION	6.547530418918287E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999345246958108	WITHOUT_CLASSIFICATION	6.547530418918287E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999345246958108	WITHOUT_CLASSIFICATION	6.547530418918287E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999345246958108	WITHOUT_CLASSIFICATION	6.547530418918287E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999993228642439	WITHOUT_CLASSIFICATION	6.771357560081046E-7	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999993228642439	WITHOUT_CLASSIFICATION	6.771357560081046E-7	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999993228642439	WITHOUT_CLASSIFICATION	6.771357560081046E-7	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999998900278302	WITHOUT_CLASSIFICATION	1.0997216972607477E-7	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.999999556113585	WITHOUT_CLASSIFICATION	4.43886414989459E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999972097575615	WITHOUT_CLASSIFICATION	2.790242438502877E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999969751067115	WITHOUT_CLASSIFICATION	3.0248932884831953E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999969751067115	WITHOUT_CLASSIFICATION	3.0248932884831953E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999345246958108	WITHOUT_CLASSIFICATION	6.547530418918287E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999345246958108	WITHOUT_CLASSIFICATION	6.547530418918287E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999993228642439	WITHOUT_CLASSIFICATION	6.771357560081046E-7	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999993322046644	WITHOUT_CLASSIFICATION	6.677953355866676E-7	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999961657721755	WITHOUT_CLASSIFICATION	3.834227824463399E-6	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999973709767032	WITHOUT_CLASSIFICATION	2.6290232969674585E-6	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999998537846958	WITHOUT_CLASSIFICATION	1.462153041354291E-7	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999997465193892	WITHOUT_CLASSIFICATION	2.5348061090329325E-7	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.999998226855911	WITHOUT_CLASSIFICATION	1.77314408896824E-6	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999988316088104	WITHOUT_CLASSIFICATION	1.1683911895646764E-6	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999693310016805	WITHOUT_CLASSIFICATION	3.066899831941917E-5	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999991624092568	WITHOUT_CLASSIFICATION	8.375907432536466E-7	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999999524310187	WITHOUT_CLASSIFICATION	4.756898127153268E-8	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999995475413281	WITHOUT_CLASSIFICATION	4.524586718677725E-7	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999996276900484	WITHOUT_CLASSIFICATION	3.7230995157583863E-7	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999973403144543	WITHOUT_CLASSIFICATION	2.659685545822498E-6	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.999999190202921	WITHOUT_CLASSIFICATION	8.097970790058059E-7	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.999983614589116	WITHOUT_CLASSIFICATION	1.6385410884062105E-5	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999926438825877	WITHOUT_CLASSIFICATION	7.356117412315283E-6	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.999999842531308	WITHOUT_CLASSIFICATION	1.574686919583946E-7	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999999439825659	WITHOUT_CLASSIFICATION	5.601743423724646E-8	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999969750692036	WITHOUT_CLASSIFICATION	3.0249307965025725E-6	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999684414197326	WITHOUT_CLASSIFICATION	3.1558580267375936E-5	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999572682968	WITHOUT_CLASSIFICATION	4.27317033030206E-8	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999911746629266	WITHOUT_CLASSIFICATION	8.825337073381203E-6	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999986322202565	WITHOUT_CLASSIFICATION	1.36777974352099E-6	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999992694281316	WITHOUT_CLASSIFICATION	7.305718684704494E-7	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999999941986154	WITHOUT_CLASSIFICATION	5.80138457861996E-9	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999993532825102	WITHOUT_CLASSIFICATION	6.467174899030994E-7	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999965622913077	WITHOUT_CLASSIFICATION	3.4377086922459105E-6	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999990831900256	WITHOUT_CLASSIFICATION	9.1680997433192E-7	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.999999792444397	WITHOUT_CLASSIFICATION	2.075556031039294E-7	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999998481078722	WITHOUT_CLASSIFICATION	1.5189212771743217E-7	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999999049228693	WITHOUT_CLASSIFICATION	9.507713070556142E-8	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999984674102222	WITHOUT_CLASSIFICATION	1.5325897777071008E-6	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999708970476	WITHOUT_CLASSIFICATION	2.9102952469782473E-8	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999408141292	WITHOUT_CLASSIFICATION	5.918587071655652E-8	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.999999972538116	WITHOUT_CLASSIFICATION	2.7461884063059344E-8	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999961657721755	WITHOUT_CLASSIFICATION	3.834227824463399E-6	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.999999767937414	WITHOUT_CLASSIFICATION	2.3206258589897783E-7	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999998609045087	WITHOUT_CLASSIFICATION	1.3909549125378166E-7	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999981090935652	WITHOUT_CLASSIFICATION	1.8909064348380845E-6	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999988989065366	WITHOUT_CLASSIFICATION	1.1010934634110636E-6	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999988989065366	WITHOUT_CLASSIFICATION	1.1010934634110636E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.999999192664063	WITHOUT_CLASSIFICATION	8.073359370173057E-7	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.999999192664063	WITHOUT_CLASSIFICATION	8.073359370173057E-7	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999994462832729	WITHOUT_CLASSIFICATION	5.537167271173576E-7	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999997844099516	WITHOUT_CLASSIFICATION	2.1559004839314602E-6	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999996989623425	WITHOUT_CLASSIFICATION	3.0103765747998633E-7	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999991375205965	WITHOUT_CLASSIFICATION	8.624794035060064E-7	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999997040610112	WITHOUT_CLASSIFICATION	2.9593898875295503E-7	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.999999593012644	WITHOUT_CLASSIFICATION	4.069873560116792E-7	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999998603607366	WITHOUT_CLASSIFICATION	1.3963926339176052E-7	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999995573668399	WITHOUT_CLASSIFICATION	4.4263316008743356E-7	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999914989034	WITHOUT_CLASSIFICATION	8.501096600959509E-9	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999985077506447	WITHOUT_CLASSIFICATION	1.4922493552992875E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999084178204	WITHOUT_CLASSIFICATION	9.158217968114647E-8	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999991341110146	WITHOUT_CLASSIFICATION	8.658889854795248E-7	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999991341110146	WITHOUT_CLASSIFICATION	8.658889854795248E-7	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.99999909517462	WITHOUT_CLASSIFICATION	9.04825379938707E-7	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999990713044886	WITHOUT_CLASSIFICATION	9.28695511455804E-7	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999984941988559	WITHOUT_CLASSIFICATION	1.5058011440997188E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999984941988559	WITHOUT_CLASSIFICATION	1.5058011440997188E-6	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999985750916164	WITHOUT_CLASSIFICATION	1.4249083835906032E-6	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999918142265	WITHOUT_CLASSIFICATION	8.185773527591074E-9	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999975403422885	WITHOUT_CLASSIFICATION	2.45965771150656E-6	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999995909593096	WITHOUT_CLASSIFICATION	4.090406903846628E-7	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999998655009995	WITHOUT_CLASSIFICATION	1.3449900047678618E-7	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999966983922166	WITHOUT_CLASSIFICATION	3.301607783401179E-6	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999987407061504	WITHOUT_CLASSIFICATION	1.2592938496494631E-6	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999996128538517	WITHOUT_CLASSIFICATION	3.871461481672787E-7	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.999971709803816	WITHOUT_CLASSIFICATION	2.8290196183953873E-5	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999987064189669	WITHOUT_CLASSIFICATION	1.29358103313088E-6	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999964279420087	WITHOUT_CLASSIFICATION	3.572057991207864E-6	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999208606891901	WITHOUT_CLASSIFICATION	7.913931080994065E-5	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999996660578292	WITHOUT_CLASSIFICATION	3.339421708180449E-7	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.999998055540229	WITHOUT_CLASSIFICATION	1.9444597709542357E-6	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.999999491744343	WITHOUT_CLASSIFICATION	5.082556569041078E-7	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999364550477076	WITHOUT_CLASSIFICATION	6.354495229247633E-5	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999999272387157	WITHOUT_CLASSIFICATION	7.276128431766235E-8	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999999397555565	WITHOUT_CLASSIFICATION	6.024444345272791E-8	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999975853782848	WITHOUT_CLASSIFICATION	2.414621715284743E-6	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999999985864268	WITHOUT_CLASSIFICATION	1.4135731995518788E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.997962816579335	WITHOUT_CLASSIFICATION	0.0020371834206649704	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.999999679159258	WITHOUT_CLASSIFICATION	3.2084074200024553E-7	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999995722034002	WITHOUT_CLASSIFICATION	4.277965998518043E-7	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999995220405355	WITHOUT_CLASSIFICATION	4.779594644782627E-7	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999998536693782	WITHOUT_CLASSIFICATION	1.4633062189305486E-7	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999999925253084	WITHOUT_CLASSIFICATION	7.474691696297503E-9	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999994576147787	WITHOUT_CLASSIFICATION	5.423852213177438E-7	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999992137234811	WITHOUT_CLASSIFICATION	7.862765189967239E-7	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999976761382381	WITHOUT_CLASSIFICATION	2.323861761923003E-6	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999997581647605	WITHOUT_CLASSIFICATION	2.418352395370369E-7	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999610276951	WITHOUT_CLASSIFICATION	3.89723049888831E-8	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999998301587494	WITHOUT_CLASSIFICATION	1.6984125070815737E-7	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999607354093	WITHOUT_CLASSIFICATION	3.926459069534151E-8	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999247571776	WITHOUT_CLASSIFICATION	7.524282243307022E-8	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999247571776	WITHOUT_CLASSIFICATION	7.524282243307022E-8	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999998467162231	WITHOUT_CLASSIFICATION	1.5328377695302733E-7	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999999889468366	WITHOUT_CLASSIFICATION	1.1053163389433954E-8	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999975914134391	WITHOUT_CLASSIFICATION	2.4085865608888324E-6	TEST
// Init	WITHOUT_CLASSIFICATION	0.999998390968764	WITHOUT_CLASSIFICATION	1.609031235934896E-6	TEST
// Block	WITHOUT_CLASSIFICATION	0.9999960577037843	WITHOUT_CLASSIFICATION	3.942296215624076E-6	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.999999539645681	WITHOUT_CLASSIFICATION	4.6035431890703635E-7	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9998589515222993	WITHOUT_CLASSIFICATION	1.4104847770076052E-4	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9998614592569399	WITHOUT_CLASSIFICATION	1.3854074306019276E-4	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999466287852151	WITHOUT_CLASSIFICATION	5.3371214784998314E-5	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999940375542723	WITHOUT_CLASSIFICATION	5.962445727731638E-6	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999998859571322	WITHOUT_CLASSIFICATION	1.1404286779421092E-7	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.99997250311119	WITHOUT_CLASSIFICATION	2.7496888809994278E-5	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999153810477431	WITHOUT_CLASSIFICATION	8.461895225682942E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999862447611402	WITHOUT_CLASSIFICATION	1.3755238859873342E-5	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999998932124797	WITHOUT_CLASSIFICATION	1.0678752029760169E-7	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999996505181976	WITHOUT_CLASSIFICATION	3.49481802370992E-7	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999993695608215	WITHOUT_CLASSIFICATION	6.304391784727609E-7	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999997151514245	WITHOUT_CLASSIFICATION	2.8484857550709473E-7	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999985704859484	WITHOUT_CLASSIFICATION	1.4295140514650658E-6	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999990194361255	WITHOUT_CLASSIFICATION	9.805638746009737E-7	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999986554560527	WITHOUT_CLASSIFICATION	1.3445439472139216E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999994858226524	WITHOUT_CLASSIFICATION	5.141773474765148E-7	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999997265527968	WITHOUT_CLASSIFICATION	2.73447203244966E-7	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999982020654349	WITHOUT_CLASSIFICATION	1.79793456509931E-6	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999922431290277	WITHOUT_CLASSIFICATION	7.756870972280641E-6	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999998407185795	WITHOUT_CLASSIFICATION	1.5928142044392102E-7	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999840879461	WITHOUT_CLASSIFICATION	1.591205387064776E-8	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999956521723035	WITHOUT_CLASSIFICATION	4.347827696603754E-6	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999925761008495	WITHOUT_CLASSIFICATION	7.423899150593992E-6	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999985293272504	WITHOUT_CLASSIFICATION	1.4706727496178793E-6	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999928717529472	WITHOUT_CLASSIFICATION	7.128247052872615E-6	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9986252826023623	WITHOUT_CLASSIFICATION	0.0013747173976376575	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999959025782126	WITHOUT_CLASSIFICATION	4.097421787420968E-6	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999998506795199	WITHOUT_CLASSIFICATION	1.4932048001840434E-7	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999950561479544	WITHOUT_CLASSIFICATION	4.943852045613951E-6	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9996697801859696	WITHOUT_CLASSIFICATION	3.302198140303545E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999846049851422	WITHOUT_CLASSIFICATION	1.5395014857794453E-5	TEST
// value equality	WITHOUT_CLASSIFICATION	0.999999607059874	WITHOUT_CLASSIFICATION	3.9294012604697926E-7	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999997541351741	WITHOUT_CLASSIFICATION	2.458648259460144E-7	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999994924652821	WITHOUT_CLASSIFICATION	5.075347179393419E-7	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999996427834986	WITHOUT_CLASSIFICATION	3.5721650132339663E-7	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999995429320464	WITHOUT_CLASSIFICATION	4.5706795361167287E-7	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999995429320464	WITHOUT_CLASSIFICATION	4.5706795361167287E-7	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999986271837734	WITHOUT_CLASSIFICATION	1.3728162266504554E-6	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999994785745975	WITHOUT_CLASSIFICATION	5.214254025233589E-7	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999985711950186	WITHOUT_CLASSIFICATION	1.4288049814402896E-6	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999979858676316	WITHOUT_CLASSIFICATION	2.0141323684489304E-6	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.999998035055288	WITHOUT_CLASSIFICATION	1.9649447120884578E-6	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999068791767	WITHOUT_CLASSIFICATION	9.312082333673751E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999616484553	WITHOUT_CLASSIFICATION	3.835154464035397E-8	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999999690712901	WITHOUT_CLASSIFICATION	3.0928709988453424E-8	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.99999897209441	WITHOUT_CLASSIFICATION	1.027905589950635E-6	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999893124557	WITHOUT_CLASSIFICATION	1.0687544408758592E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999898949138503	WITHOUT_CLASSIFICATION	1.010508614973572E-5	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999997899871823	WITHOUT_CLASSIFICATION	2.1001281773021253E-7	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999990245781283	WITHOUT_CLASSIFICATION	9.754218716259845E-7	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999996888046491	WITHOUT_CLASSIFICATION	3.111953510074545E-7	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.999999977866323	WITHOUT_CLASSIFICATION	2.2133676952726907E-8	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999988724064843	WITHOUT_CLASSIFICATION	1.1275935157000726E-6	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999808944111	WITHOUT_CLASSIFICATION	1.9105588891185384E-8	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999829343590586	WITHOUT_CLASSIFICATION	1.706564094135436E-5	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.999999994993117	WITHOUT_CLASSIFICATION	5.006883012743715E-9	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.999998930301931	WITHOUT_CLASSIFICATION	1.0696980689777514E-6	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999985483818303	WITHOUT_CLASSIFICATION	1.4516181696637462E-6	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999996128635618	WITHOUT_CLASSIFICATION	3.871364381935723E-6	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999925788926	WITHOUT_CLASSIFICATION	7.421107390628392E-9	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999996797128443	WITHOUT_CLASSIFICATION	3.2028715568585186E-7	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998584568064	WITHOUT_CLASSIFICATION	1.41543193552986E-7	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999673294644547	WITHOUT_CLASSIFICATION	3.2670535545322055E-5	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999986518823761	WITHOUT_CLASSIFICATION	1.3481176239145249E-6	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.999998881696454	WITHOUT_CLASSIFICATION	1.1183035459829273E-6	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999994405788766	WITHOUT_CLASSIFICATION	5.594211234017379E-7	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999993188739347	WITHOUT_CLASSIFICATION	6.81126065341704E-7	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999994554592858	WITHOUT_CLASSIFICATION	5.445407141259677E-7	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999852960394	WITHOUT_CLASSIFICATION	1.4703960583899369E-8	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999993188739347	WITHOUT_CLASSIFICATION	6.81126065341704E-7	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9998408190499055	WITHOUT_CLASSIFICATION	1.591809500944552E-4	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999265005640902	WITHOUT_CLASSIFICATION	7.34994359098198E-5	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.999999921625438	WITHOUT_CLASSIFICATION	7.837456192267114E-8	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9995482250217084	WITHOUT_CLASSIFICATION	4.5177497829169565E-4	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999988210132035	WITHOUT_CLASSIFICATION	1.1789867965663711E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999988020231512	WITHOUT_CLASSIFICATION	1.1979768487890358E-6	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999990781633463	WITHOUT_CLASSIFICATION	9.218366536867612E-7	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999971645012041	WITHOUT_CLASSIFICATION	2.835498795808551E-6	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999993947556952	WITHOUT_CLASSIFICATION	6.052443047813137E-7	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999999985864268	WITHOUT_CLASSIFICATION	1.4135731995518788E-8	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999990589571952	WITHOUT_CLASSIFICATION	9.410428048988674E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999982981680374	WITHOUT_CLASSIFICATION	1.7018319625606154E-6	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999975606687806	WITHOUT_CLASSIFICATION	2.439331219338474E-6	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999995833332678	WITHOUT_CLASSIFICATION	4.166667322935629E-7	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999797190229547	WITHOUT_CLASSIFICATION	2.0280977045295404E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.999996295981356	WITHOUT_CLASSIFICATION	3.7040186440085054E-6	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999935556199596	WITHOUT_CLASSIFICATION	6.444380040296249E-6	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999994038375623	WITHOUT_CLASSIFICATION	5.961624377742242E-7	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999998252066259	WITHOUT_CLASSIFICATION	1.7479337417229532E-7	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999993234111159	WITHOUT_CLASSIFICATION	6.765888840144551E-7	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999924202515198	WITHOUT_CLASSIFICATION	7.579748480130846E-6	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999908607748682	WITHOUT_CLASSIFICATION	9.139225131787673E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999992929055068	WITHOUT_CLASSIFICATION	7.070944931631222E-7	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999996909797306	WITHOUT_CLASSIFICATION	3.090202694557618E-7	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.999999538736018	WITHOUT_CLASSIFICATION	4.6126398198424967E-7	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999981322407804	WITHOUT_CLASSIFICATION	1.8677592195922727E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.999998510592549	WITHOUT_CLASSIFICATION	1.4894074510850554E-6	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999997845140537	WITHOUT_CLASSIFICATION	2.154859462044316E-7	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999956909019887	WITHOUT_CLASSIFICATION	4.309098011317931E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999976435070795	WITHOUT_CLASSIFICATION	2.3564929203993336E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999976435070795	WITHOUT_CLASSIFICATION	2.3564929203993336E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999995304851743	WITHOUT_CLASSIFICATION	4.6951482569674734E-7	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999877352718	WITHOUT_CLASSIFICATION	1.226472825466302E-8	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999942631301	WITHOUT_CLASSIFICATION	5.736869842684381E-9	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9971254363353412	WITHOUT_CLASSIFICATION	0.002874563664658907	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9971254363353412	WITHOUT_CLASSIFICATION	0.002874563664658907	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9971254363353412	WITHOUT_CLASSIFICATION	0.002874563664658907	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9971254363353412	WITHOUT_CLASSIFICATION	0.002874563664658907	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999998137171675	WITHOUT_CLASSIFICATION	1.8628283249472585E-7	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999999048465139	WITHOUT_CLASSIFICATION	9.515348610315486E-7	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999985200771061	WITHOUT_CLASSIFICATION	1.4799228939744252E-6	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999999814668501	WITHOUT_CLASSIFICATION	1.8533149930371115E-8	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999997267662796	WITHOUT_CLASSIFICATION	2.732337204068666E-7	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999557966280429	WITHOUT_CLASSIFICATION	4.42033719570841E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999817874089477	WITHOUT_CLASSIFICATION	1.8212591052281087E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999817874089477	WITHOUT_CLASSIFICATION	1.8212591052281087E-5	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999153368118	WITHOUT_CLASSIFICATION	8.466318821925018E-8	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9999248889381362	WITHOUT_CLASSIFICATION	7.511106186379374E-5	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999998457746097	WITHOUT_CLASSIFICATION	1.5422539030498004E-7	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999554043849855	WITHOUT_CLASSIFICATION	4.459561501438595E-5	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.99999949137432	WITHOUT_CLASSIFICATION	5.086256801296806E-7	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999994529323726	WITHOUT_CLASSIFICATION	5.470676273859407E-7	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999996836843248	WITHOUT_CLASSIFICATION	3.163156751856416E-7	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999950139502675	WITHOUT_CLASSIFICATION	4.986049732568651E-6	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999253389831805	WITHOUT_CLASSIFICATION	7.466101681947859E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999253389831805	WITHOUT_CLASSIFICATION	7.466101681947859E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999852960394	WITHOUT_CLASSIFICATION	1.4703960583899369E-8	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999983024061165	WITHOUT_CLASSIFICATION	1.697593883434848E-6	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999983395456293	WITHOUT_CLASSIFICATION	1.6604543706009393E-6	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999992324569016	WITHOUT_CLASSIFICATION	7.675430985046969E-7	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999995105240271	WITHOUT_CLASSIFICATION	4.894759727893055E-7	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9999337508223562	WITHOUT_CLASSIFICATION	6.62491776437893E-5	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999956983470426	WITHOUT_CLASSIFICATION	4.301652957425213E-6	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999981128257449	WITHOUT_CLASSIFICATION	1.8871742550854574E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999989048674527	WITHOUT_CLASSIFICATION	1.095132547364612E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999989048674527	WITHOUT_CLASSIFICATION	1.095132547364612E-6	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999999754184836	WITHOUT_CLASSIFICATION	2.458151627870248E-8	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.999999999512623	WITHOUT_CLASSIFICATION	4.873770349312077E-10	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999700959627784	WITHOUT_CLASSIFICATION	2.9904037221590228E-5	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999991376653846	WITHOUT_CLASSIFICATION	8.623346154025293E-7	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999997665188904	WITHOUT_CLASSIFICATION	2.3348110964723232E-7	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9999353018230638	WITHOUT_CLASSIFICATION	6.469817693613088E-5	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999993125601221	WITHOUT_CLASSIFICATION	6.874398778981504E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999999818306122	WITHOUT_CLASSIFICATION	1.8169387796908305E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999999818306122	WITHOUT_CLASSIFICATION	1.8169387796908305E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999999818306122	WITHOUT_CLASSIFICATION	1.8169387796908305E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999999818306122	WITHOUT_CLASSIFICATION	1.8169387796908305E-7	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.99999993924767	WITHOUT_CLASSIFICATION	6.075233000710841E-8	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999095816756	WITHOUT_CLASSIFICATION	9.041832447185696E-8	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999872990400628	WITHOUT_CLASSIFICATION	1.2700959937120641E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999980675469458	WITHOUT_CLASSIFICATION	1.932453054205325E-6	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999979736738234	WITHOUT_CLASSIFICATION	2.026326176561028E-6	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.9999206387114098	WITHOUT_CLASSIFICATION	7.936128859022935E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999990741054385	WITHOUT_CLASSIFICATION	9.258945615222338E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999993280610916	WITHOUT_CLASSIFICATION	6.719389084030955E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999993280610916	WITHOUT_CLASSIFICATION	6.719389084030955E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999993280610916	WITHOUT_CLASSIFICATION	6.719389084030955E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999995560699982	WITHOUT_CLASSIFICATION	4.4393000178355363E-7	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999999400028065	WITHOUT_CLASSIFICATION	5.999719356795133E-8	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999991345606146	WITHOUT_CLASSIFICATION	8.654393853103536E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999991345606146	WITHOUT_CLASSIFICATION	8.654393853103536E-7	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999921044546592	WITHOUT_CLASSIFICATION	7.895545340726092E-6	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999999774172	WITHOUT_CLASSIFICATION	2.2582842953041552E-11	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.99999955009663	WITHOUT_CLASSIFICATION	4.4990336995366033E-7	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9999894028170183	WITHOUT_CLASSIFICATION	1.0597182981668451E-5	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999446535882	WITHOUT_CLASSIFICATION	5.534641184160895E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999997265866128	WITHOUT_CLASSIFICATION	2.7341338708314255E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999995903126673	WITHOUT_CLASSIFICATION	4.096873327038662E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999995903126673	WITHOUT_CLASSIFICATION	4.096873327038662E-6	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999996814936893	WITHOUT_CLASSIFICATION	3.185063107247326E-7	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.999999945331111	WITHOUT_CLASSIFICATION	5.466888884260211E-8	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999973746291	WITHOUT_CLASSIFICATION	2.6253707933931474E-9	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999978962115502	WITHOUT_CLASSIFICATION	2.1037884497964414E-6	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999997367780795	WITHOUT_CLASSIFICATION	2.632219205693519E-7	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999711274833	WITHOUT_CLASSIFICATION	2.8872516596023926E-8	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999998671270324	WITHOUT_CLASSIFICATION	1.3287296771520044E-7	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999575033521685	WITHOUT_CLASSIFICATION	4.249664783158355E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999938006636048	WITHOUT_CLASSIFICATION	6.199336395227602E-6	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999998381932246	WITHOUT_CLASSIFICATION	1.6180677529281798E-7	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999997600094049	WITHOUT_CLASSIFICATION	2.3999059512841756E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999823983388	WITHOUT_CLASSIFICATION	1.7601661270825324E-8	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999992647209022	WITHOUT_CLASSIFICATION	7.352790977452574E-7	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999917720334508	WITHOUT_CLASSIFICATION	8.22796654914674E-6	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999998930428383	WITHOUT_CLASSIFICATION	1.0695716175077296E-7	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999999575846364	WITHOUT_CLASSIFICATION	4.241536353291652E-8	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999998633021224	WITHOUT_CLASSIFICATION	1.3669787763678775E-7	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999998764957411	WITHOUT_CLASSIFICATION	1.235042589017473E-7	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999218689544	WITHOUT_CLASSIFICATION	7.813104557376435E-8	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999999130193726	WITHOUT_CLASSIFICATION	8.69806273321664E-8	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999931636159	WITHOUT_CLASSIFICATION	6.836384115533419E-9	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999859043196	WITHOUT_CLASSIFICATION	1.4095680522109118E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999998135113235	WITHOUT_CLASSIFICATION	1.86488676407629E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999998135113235	WITHOUT_CLASSIFICATION	1.86488676407629E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999998135113235	WITHOUT_CLASSIFICATION	1.86488676407629E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999998135113235	WITHOUT_CLASSIFICATION	1.86488676407629E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999998135113235	WITHOUT_CLASSIFICATION	1.86488676407629E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999998135113235	WITHOUT_CLASSIFICATION	1.86488676407629E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999998135113235	WITHOUT_CLASSIFICATION	1.86488676407629E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999998135113235	WITHOUT_CLASSIFICATION	1.86488676407629E-7	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.999999905058728	WITHOUT_CLASSIFICATION	9.49412719486672E-8	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999780203360743	WITHOUT_CLASSIFICATION	2.1979663925752074E-5	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999956405753126	WITHOUT_CLASSIFICATION	4.359424687368542E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999978473504885	WITHOUT_CLASSIFICATION	2.1526495115961296E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999616484553	WITHOUT_CLASSIFICATION	3.835154464035397E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999616484553	WITHOUT_CLASSIFICATION	3.835154464035397E-8	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999990552082393	WITHOUT_CLASSIFICATION	9.447917607500974E-7	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999990673595524	WITHOUT_CLASSIFICATION	9.326404475722295E-7	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999992439953063	WITHOUT_CLASSIFICATION	7.56004693740589E-7	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999967234932712	WITHOUT_CLASSIFICATION	3.2765067289385935E-6	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999994285212218	WITHOUT_CLASSIFICATION	5.714787781601362E-7	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.999999347885381	WITHOUT_CLASSIFICATION	6.521146189872974E-7	TEST
// read	WITHOUT_CLASSIFICATION	0.9999973548543529	WITHOUT_CLASSIFICATION	2.645145647094158E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999984738742952	WITHOUT_CLASSIFICATION	1.526125704773582E-6	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999996555599073	WITHOUT_CLASSIFICATION	3.4444009273936346E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999190984609	WITHOUT_CLASSIFICATION	8.090153915108909E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999190984609	WITHOUT_CLASSIFICATION	8.090153915108909E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999190984609	WITHOUT_CLASSIFICATION	8.090153915108909E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999152608586838	WITHOUT_CLASSIFICATION	8.473914131627489E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999152608586838	WITHOUT_CLASSIFICATION	8.473914131627489E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999152608586838	WITHOUT_CLASSIFICATION	8.473914131627489E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999152608586838	WITHOUT_CLASSIFICATION	8.473914131627489E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999152608586838	WITHOUT_CLASSIFICATION	8.473914131627489E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999152608586838	WITHOUT_CLASSIFICATION	8.473914131627489E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999152608586838	WITHOUT_CLASSIFICATION	8.473914131627489E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999152608586838	WITHOUT_CLASSIFICATION	8.473914131627489E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999152608586838	WITHOUT_CLASSIFICATION	8.473914131627489E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999998959170272	WITHOUT_CLASSIFICATION	1.0408297279860108E-7	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999975867055995	WITHOUT_CLASSIFICATION	2.4132944005355995E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999952745610945	WITHOUT_CLASSIFICATION	4.7254389054431555E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999981605530697	WITHOUT_CLASSIFICATION	1.8394469303030522E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999152608586838	WITHOUT_CLASSIFICATION	8.473914131627489E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999152608586838	WITHOUT_CLASSIFICATION	8.473914131627489E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999152608586838	WITHOUT_CLASSIFICATION	8.473914131627489E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999994926932454	WITHOUT_CLASSIFICATION	5.0730675469094E-7	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999968715244061	WITHOUT_CLASSIFICATION	3.1284755938290298E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999999920035425	WITHOUT_CLASSIFICATION	7.996457417863936E-9	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999991893373732	WITHOUT_CLASSIFICATION	8.106626269081735E-7	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999991893373732	WITHOUT_CLASSIFICATION	8.106626269081735E-7	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999985746617158	WITHOUT_CLASSIFICATION	1.4253382841246812E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999999798815723	WITHOUT_CLASSIFICATION	2.0118427693195033E-7	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.999999943728226	WITHOUT_CLASSIFICATION	5.6271773954653975E-8	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999997124228802	WITHOUT_CLASSIFICATION	2.8757711979189493E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999991796636748	WITHOUT_CLASSIFICATION	8.203363251944694E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999991796636748	WITHOUT_CLASSIFICATION	8.203363251944694E-7	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.999999400611141	WITHOUT_CLASSIFICATION	5.993888589231897E-7	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999996741576234	WITHOUT_CLASSIFICATION	3.258423766215633E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999966870013467	WITHOUT_CLASSIFICATION	3.3129986532049277E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999008080508331	WITHOUT_CLASSIFICATION	9.919194916679774E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999008080508331	WITHOUT_CLASSIFICATION	9.919194916679774E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999008080508331	WITHOUT_CLASSIFICATION	9.919194916679774E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999994363580605	WITHOUT_CLASSIFICATION	5.636419393659989E-7	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999996587298191	WITHOUT_CLASSIFICATION	3.4127018087204716E-7	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999996587298191	WITHOUT_CLASSIFICATION	3.4127018087204716E-7	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999994783891399	WITHOUT_CLASSIFICATION	5.216108599856539E-7	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999994783891399	WITHOUT_CLASSIFICATION	5.216108599856539E-7	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999988169793982	WITHOUT_CLASSIFICATION	1.183020601874814E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999997272136817	WITHOUT_CLASSIFICATION	2.7278631835502505E-7	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999997840411388	WITHOUT_CLASSIFICATION	2.1595886124032803E-7	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999878109935112	WITHOUT_CLASSIFICATION	1.2189006488883593E-5	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999950159719381	WITHOUT_CLASSIFICATION	4.984028062006659E-6	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999996668619778	WITHOUT_CLASSIFICATION	3.331380220803352E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999622259675	WITHOUT_CLASSIFICATION	3.777403250439066E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999968756402371	WITHOUT_CLASSIFICATION	3.1243597627786296E-6	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999988964438308	WITHOUT_CLASSIFICATION	1.1035561691819088E-6	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999868600337	WITHOUT_CLASSIFICATION	1.3139966435466068E-8	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.999989214621239	WITHOUT_CLASSIFICATION	1.0785378760998159E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999978496357214	WITHOUT_CLASSIFICATION	2.150364278689427E-6	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999993657073379	WITHOUT_CLASSIFICATION	6.34292662091111E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999998902831728	WITHOUT_CLASSIFICATION	1.0971682722536365E-7	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999500048758	WITHOUT_CLASSIFICATION	4.9995124146116954E-8	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999947049120782	WITHOUT_CLASSIFICATION	5.2950879217805214E-6	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999984545714776	WITHOUT_CLASSIFICATION	1.5454285224018826E-6	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999817779535	WITHOUT_CLASSIFICATION	1.8222046509238866E-8	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999770673133231	WITHOUT_CLASSIFICATION	2.2932686676885804E-5	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999990512376811	WITHOUT_CLASSIFICATION	9.487623189934798E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999982981680374	WITHOUT_CLASSIFICATION	1.7018319625606154E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9998136062238251	WITHOUT_CLASSIFICATION	1.863937761748569E-4	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999988081975139	WITHOUT_CLASSIFICATION	1.191802486148032E-6	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999999938322631	WITHOUT_CLASSIFICATION	6.167736827170721E-9	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999994016499607	WITHOUT_CLASSIFICATION	5.983500392993107E-7	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999836027809322	WITHOUT_CLASSIFICATION	1.6397219067755756E-5	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999668066648163	WITHOUT_CLASSIFICATION	3.3193335183700117E-5	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999997114489838	WITHOUT_CLASSIFICATION	2.8855101627281296E-7	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999982587447005	WITHOUT_CLASSIFICATION	1.7412552995015933E-6	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999982498868	WITHOUT_CLASSIFICATION	1.7501131476995123E-9	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999993513239984	WITHOUT_CLASSIFICATION	6.486760015292564E-7	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999998909369031	WITHOUT_CLASSIFICATION	1.0906309691533609E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999991204437156	WITHOUT_CLASSIFICATION	8.795562843088476E-7	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.999999645278551	WITHOUT_CLASSIFICATION	3.547214488994052E-7	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999994191286878	WITHOUT_CLASSIFICATION	5.80871312224377E-7	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999976867922843	WITHOUT_CLASSIFICATION	2.3132077156771955E-6	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.999998368450585	WITHOUT_CLASSIFICATION	1.6315494150189487E-6	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999998538737166	WITHOUT_CLASSIFICATION	1.461262833270455E-7	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999947198064488	WITHOUT_CLASSIFICATION	5.280193551177824E-6	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999935006023	WITHOUT_CLASSIFICATION	6.499397650117711E-9	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999998866363811	WITHOUT_CLASSIFICATION	1.133636189149252E-7	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999991496732321	WITHOUT_CLASSIFICATION	8.503267678488423E-7	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999968042844491	WITHOUT_CLASSIFICATION	3.1957155507706806E-6	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999997086506526	WITHOUT_CLASSIFICATION	2.913493474052745E-7	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999976010119374	WITHOUT_CLASSIFICATION	2.3989880626216565E-6	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999395321150785	WITHOUT_CLASSIFICATION	6.0467884921468455E-5	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999995991908321	WITHOUT_CLASSIFICATION	4.008091678852742E-7	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999977401728	WITHOUT_CLASSIFICATION	2.259827194061143E-9	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999990608990464	WITHOUT_CLASSIFICATION	9.391009534789541E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999697017529021	WITHOUT_CLASSIFICATION	3.0298247097822137E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.999999931798807	WITHOUT_CLASSIFICATION	6.820119310892946E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999999841228695	WITHOUT_CLASSIFICATION	1.5877130491668537E-7	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999999841228695	WITHOUT_CLASSIFICATION	1.5877130491668537E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999999905236404	WITHOUT_CLASSIFICATION	9.476359591440579E-8	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999999905236404	WITHOUT_CLASSIFICATION	9.476359591440579E-8	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998670985949532	WITHOUT_CLASSIFICATION	1.329014050468783E-4	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998670985949532	WITHOUT_CLASSIFICATION	1.329014050468783E-4	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999970196150141	WITHOUT_CLASSIFICATION	2.980384985952362E-6	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999970196150141	WITHOUT_CLASSIFICATION	2.980384985952362E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991802479585	WITHOUT_CLASSIFICATION	8.19752041550543E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991802479585	WITHOUT_CLASSIFICATION	8.19752041550543E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991802479585	WITHOUT_CLASSIFICATION	8.19752041550543E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991802479585	WITHOUT_CLASSIFICATION	8.19752041550543E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991802479585	WITHOUT_CLASSIFICATION	8.19752041550543E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991802479585	WITHOUT_CLASSIFICATION	8.19752041550543E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991802479585	WITHOUT_CLASSIFICATION	8.19752041550543E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991802479585	WITHOUT_CLASSIFICATION	8.19752041550543E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999991802479585	WITHOUT_CLASSIFICATION	8.19752041550543E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999998130207118	WITHOUT_CLASSIFICATION	1.869792881916332E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999998130207118	WITHOUT_CLASSIFICATION	1.869792881916332E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999998130207118	WITHOUT_CLASSIFICATION	1.869792881916332E-6	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999991113341795	WITHOUT_CLASSIFICATION	8.886658204849045E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998491489155	WITHOUT_CLASSIFICATION	1.5085108450288445E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998491489155	WITHOUT_CLASSIFICATION	1.5085108450288445E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998491489155	WITHOUT_CLASSIFICATION	1.5085108450288445E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999996068815978	WITHOUT_CLASSIFICATION	3.9311840213292736E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999996068815978	WITHOUT_CLASSIFICATION	3.9311840213292736E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999996068815978	WITHOUT_CLASSIFICATION	3.9311840213292736E-7	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999742887058302	WITHOUT_CLASSIFICATION	2.571129416995084E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999991445559335	WITHOUT_CLASSIFICATION	8.554440664261913E-7	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999829625302405	WITHOUT_CLASSIFICATION	1.7037469759437753E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999813855294226	WITHOUT_CLASSIFICATION	1.8614470577318474E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999813855294226	WITHOUT_CLASSIFICATION	1.8614470577318474E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999813855294226	WITHOUT_CLASSIFICATION	1.8614470577318474E-5	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999963003489639	WITHOUT_CLASSIFICATION	3.69965103617745E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.99999676137532	WITHOUT_CLASSIFICATION	3.2386246799385833E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.99999676137532	WITHOUT_CLASSIFICATION	3.2386246799385833E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.999999762821267	WITHOUT_CLASSIFICATION	2.3717873285652042E-7	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997574075905	WITHOUT_CLASSIFICATION	2.42592409485099E-7	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997574075905	WITHOUT_CLASSIFICATION	2.42592409485099E-7	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9985019892580322	WITHOUT_CLASSIFICATION	0.001498010741967811	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999332407636926	WITHOUT_CLASSIFICATION	6.675923630741374E-5	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999958904378935	WITHOUT_CLASSIFICATION	4.109562106480021E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999982669652964	WITHOUT_CLASSIFICATION	1.7330347036402821E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999982669652964	WITHOUT_CLASSIFICATION	1.7330347036402821E-6	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999986101756068	WITHOUT_CLASSIFICATION	1.389824393285316E-6	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999991513625525	WITHOUT_CLASSIFICATION	8.486374474081259E-7	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999977311360266	WITHOUT_CLASSIFICATION	2.2688639733695504E-6	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999999955721953	WITHOUT_CLASSIFICATION	4.427804709954359E-9	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999913140534105	WITHOUT_CLASSIFICATION	8.685946589421603E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999982669652964	WITHOUT_CLASSIFICATION	1.7330347036402821E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999982669652964	WITHOUT_CLASSIFICATION	1.7330347036402821E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999982669652964	WITHOUT_CLASSIFICATION	1.7330347036402821E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999982669652964	WITHOUT_CLASSIFICATION	1.7330347036402821E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999982669652964	WITHOUT_CLASSIFICATION	1.7330347036402821E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999998236398254	WITHOUT_CLASSIFICATION	1.7636017462938814E-7	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999998339155616	WITHOUT_CLASSIFICATION	1.660844384500416E-7	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999517017747	WITHOUT_CLASSIFICATION	4.8298225398188086E-8	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999987088009324	WITHOUT_CLASSIFICATION	1.2911990676136357E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999998099122865	WITHOUT_CLASSIFICATION	1.9008771342398474E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999989830405782	WITHOUT_CLASSIFICATION	1.0169594217817117E-6	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999837406846018	WITHOUT_CLASSIFICATION	1.6259315398226465E-5	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999999382684779	WITHOUT_CLASSIFICATION	6.173152212926977E-8	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998740456215	WITHOUT_CLASSIFICATION	1.2595437838257179E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999984434520811	WITHOUT_CLASSIFICATION	1.556547918845553E-6	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999996751797753	WITHOUT_CLASSIFICATION	3.2482022474583346E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999996128635618	WITHOUT_CLASSIFICATION	3.871364381935723E-6	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.999999693849183	WITHOUT_CLASSIFICATION	3.0615081706332124E-7	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999983681009433	WITHOUT_CLASSIFICATION	1.6318990566506077E-6	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999999985377411	WITHOUT_CLASSIFICATION	1.462258823405683E-9	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999997665702279	WITHOUT_CLASSIFICATION	2.3342977201082666E-7	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999996071095305	WITHOUT_CLASSIFICATION	3.9289046952002436E-7	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.999999991676816	WITHOUT_CLASSIFICATION	8.323183936901743E-9	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999998347831358	WITHOUT_CLASSIFICATION	1.6521686407426875E-7	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999997162828239	WITHOUT_CLASSIFICATION	2.8371717610117107E-6	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999936746928071	WITHOUT_CLASSIFICATION	6.325307192967484E-6	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999991724974904	WITHOUT_CLASSIFICATION	8.275025095846227E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999893124557	WITHOUT_CLASSIFICATION	1.0687544408758592E-8	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999985019813757	WITHOUT_CLASSIFICATION	1.4980186242522317E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999985019813757	WITHOUT_CLASSIFICATION	1.4980186242522317E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999985019813757	WITHOUT_CLASSIFICATION	1.4980186242522317E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999985019813757	WITHOUT_CLASSIFICATION	1.4980186242522317E-6	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999993968646448	WITHOUT_CLASSIFICATION	6.031353552359415E-7	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.999999290173707	WITHOUT_CLASSIFICATION	7.098262928303701E-7	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999998890320773	WITHOUT_CLASSIFICATION	1.109679227750974E-7	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999998890320773	WITHOUT_CLASSIFICATION	1.109679227750974E-7	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999998604182472	WITHOUT_CLASSIFICATION	1.3958175292592031E-7	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999980373786898	WITHOUT_CLASSIFICATION	1.962621310235691E-6	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999962218700641	WITHOUT_CLASSIFICATION	3.778129935914006E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.99999945908667	WITHOUT_CLASSIFICATION	5.409133299426595E-7	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999575014065791	WITHOUT_CLASSIFICATION	4.249859342090529E-5	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.999996223648112	WITHOUT_CLASSIFICATION	3.7763518879628253E-6	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999993212194438	WITHOUT_CLASSIFICATION	6.787805561377923E-7	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999939274693839	WITHOUT_CLASSIFICATION	6.072530616084986E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999939274693839	WITHOUT_CLASSIFICATION	6.072530616084986E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999939274693839	WITHOUT_CLASSIFICATION	6.072530616084986E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999939274693839	WITHOUT_CLASSIFICATION	6.072530616084986E-6	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.999999952242687	WITHOUT_CLASSIFICATION	4.7757313102272015E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999997832098558	WITHOUT_CLASSIFICATION	2.1679014415531526E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999997832098558	WITHOUT_CLASSIFICATION	2.1679014415531526E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999997832098558	WITHOUT_CLASSIFICATION	2.1679014415531526E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999998106322008	WITHOUT_CLASSIFICATION	1.8936779925944335E-7	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999992683438778	WITHOUT_CLASSIFICATION	7.316561222580502E-7	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999996526662868	WITHOUT_CLASSIFICATION	3.473337132511406E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9971254363353412	WITHOUT_CLASSIFICATION	0.002874563664658907	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9971254363353412	WITHOUT_CLASSIFICATION	0.002874563664658907	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.99999999762051	WITHOUT_CLASSIFICATION	2.3794899764899992E-9	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999174453589	WITHOUT_CLASSIFICATION	8.25546410865281E-8	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.999994279959858	WITHOUT_CLASSIFICATION	5.720040141962912E-6	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.999994279959858	WITHOUT_CLASSIFICATION	5.720040141962912E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999971873592823	WITHOUT_CLASSIFICATION	2.812640717627023E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999971873592823	WITHOUT_CLASSIFICATION	2.812640717627023E-6	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999993302142467	WITHOUT_CLASSIFICATION	6.697857533131518E-7	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999960974265617	WITHOUT_CLASSIFICATION	3.9025734383432645E-6	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999987392052174	WITHOUT_CLASSIFICATION	1.260794782645654E-6	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.999989225280788	WITHOUT_CLASSIFICATION	1.077471921206347E-5	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999736875912231	WITHOUT_CLASSIFICATION	2.6312408776992515E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999993503399466	WITHOUT_CLASSIFICATION	6.496600534043758E-7	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999995232035143	WITHOUT_CLASSIFICATION	4.7679648579411206E-7	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999763425087886	WITHOUT_CLASSIFICATION	2.3657491211447197E-5	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999931412757855	WITHOUT_CLASSIFICATION	6.858724214465389E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999843365576	WITHOUT_CLASSIFICATION	1.5663442521740682E-8	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999843365576	WITHOUT_CLASSIFICATION	1.5663442521740682E-8	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999995756142391	WITHOUT_CLASSIFICATION	4.243857607596644E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999995756142391	WITHOUT_CLASSIFICATION	4.243857607596644E-7	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999999677466398	WITHOUT_CLASSIFICATION	3.225336017618289E-8	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999101405892	WITHOUT_CLASSIFICATION	8.985941076169024E-8	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999717270296713	WITHOUT_CLASSIFICATION	2.8272970328781266E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999937003369811	WITHOUT_CLASSIFICATION	6.299663018864514E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999937003369811	WITHOUT_CLASSIFICATION	6.299663018864514E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999937003369811	WITHOUT_CLASSIFICATION	6.299663018864514E-6	TEST
// line 286	WITHOUT_CLASSIFICATION	0.999998421177852	WITHOUT_CLASSIFICATION	1.5788221480265855E-6	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999985989197625	WITHOUT_CLASSIFICATION	1.4010802374421675E-6	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999984458174656	WITHOUT_CLASSIFICATION	1.5541825343813758E-6	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999980556651958	WITHOUT_CLASSIFICATION	1.944334804126415E-6	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999983153578863	WITHOUT_CLASSIFICATION	1.6846421137456445E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999984020240309	WITHOUT_CLASSIFICATION	1.5979759691165136E-6	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999986661331574	WITHOUT_CLASSIFICATION	1.3338668427325925E-6	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999979189384003	WITHOUT_CLASSIFICATION	2.0810615997572915E-6	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999999822692678	WITHOUT_CLASSIFICATION	1.773073229662679E-8	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.999999929997699	WITHOUT_CLASSIFICATION	7.00023009244893E-8	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999991281856458	WITHOUT_CLASSIFICATION	8.718143540772804E-7	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999987580159823	WITHOUT_CLASSIFICATION	1.241984017821369E-6	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999988395182393	WITHOUT_CLASSIFICATION	1.1604817607009372E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9971254363353412	WITHOUT_CLASSIFICATION	0.002874563664658907	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999999456830718	WITHOUT_CLASSIFICATION	5.431692811897842E-8	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999970639126834	WITHOUT_CLASSIFICATION	2.936087316559396E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999976435070795	WITHOUT_CLASSIFICATION	2.3564929203993336E-6	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999312739819648	WITHOUT_CLASSIFICATION	6.8726018035129E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999312739819648	WITHOUT_CLASSIFICATION	6.8726018035129E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999312739819648	WITHOUT_CLASSIFICATION	6.8726018035129E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999312739819648	WITHOUT_CLASSIFICATION	6.8726018035129E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999312739819648	WITHOUT_CLASSIFICATION	6.8726018035129E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999276031355523	WITHOUT_CLASSIFICATION	7.239686444776936E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999312739819648	WITHOUT_CLASSIFICATION	6.8726018035129E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999312739819648	WITHOUT_CLASSIFICATION	6.8726018035129E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999312739819648	WITHOUT_CLASSIFICATION	6.8726018035129E-5	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999992317600036	WITHOUT_CLASSIFICATION	7.682399963721294E-7	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999996247556853	WITHOUT_CLASSIFICATION	3.75244314685431E-7	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9998659882431314	WITHOUT_CLASSIFICATION	1.3401175686857738E-4	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999945840845781	WITHOUT_CLASSIFICATION	5.415915421953674E-6	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999532205037602	WITHOUT_CLASSIFICATION	4.6779496239696416E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999997108371655	WITHOUT_CLASSIFICATION	2.891628344591471E-7	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999996962211054	WITHOUT_CLASSIFICATION	3.037788945689708E-7	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999985029798603	WITHOUT_CLASSIFICATION	1.4970201397889516E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999984539084021	WITHOUT_CLASSIFICATION	1.5460915978843422E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999984539084021	WITHOUT_CLASSIFICATION	1.5460915978843422E-6	TEST
// line 625	WITHOUT_CLASSIFICATION	0.99999844082012	WITHOUT_CLASSIFICATION	1.559179880025757E-6	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999982994207587	WITHOUT_CLASSIFICATION	1.7005792413437821E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999985059194223	WITHOUT_CLASSIFICATION	1.494080577650788E-6	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999982286179862	WITHOUT_CLASSIFICATION	1.7713820138258747E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999982442164529	WITHOUT_CLASSIFICATION	1.7557835470934698E-6	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999985695355376	WITHOUT_CLASSIFICATION	1.4304644625100538E-6	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999985973234589	WITHOUT_CLASSIFICATION	1.4026765411192852E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999986067362433	WITHOUT_CLASSIFICATION	1.3932637566920133E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999983462714588	WITHOUT_CLASSIFICATION	1.6537285412610086E-6	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999981771244746	WITHOUT_CLASSIFICATION	1.8228755255003942E-6	TEST
// line 812	WITHOUT_CLASSIFICATION	0.999998531710569	WITHOUT_CLASSIFICATION	1.468289431017435E-6	TEST
// line 827	WITHOUT_CLASSIFICATION	0.999998418152613	WITHOUT_CLASSIFICATION	1.5818473869050943E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.999998042905551	WITHOUT_CLASSIFICATION	1.957094449051189E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999984790538039	WITHOUT_CLASSIFICATION	1.520946196070179E-6	TEST
// line 864	WITHOUT_CLASSIFICATION	0.999998469621099	WITHOUT_CLASSIFICATION	1.5303789009821526E-6	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999985158316543	WITHOUT_CLASSIFICATION	1.4841683455876024E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999983376407363	WITHOUT_CLASSIFICATION	1.6623592636728735E-6	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999984704101291	WITHOUT_CLASSIFICATION	1.529589870827708E-6	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999978716110802	WITHOUT_CLASSIFICATION	2.1283889197357565E-6	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999981685385461	WITHOUT_CLASSIFICATION	1.8314614540068784E-6	TEST
// line 970	WITHOUT_CLASSIFICATION	0.999998124396273	WITHOUT_CLASSIFICATION	1.8756037269404614E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999982181637223	WITHOUT_CLASSIFICATION	1.781836277826195E-6	TEST
// line 991	WITHOUT_CLASSIFICATION	0.999998413462576	WITHOUT_CLASSIFICATION	1.5865374239806984E-6	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999986114902867	WITHOUT_CLASSIFICATION	1.3885097133683457E-6	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999983412909866	WITHOUT_CLASSIFICATION	1.65870901336927E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999980775317138	WITHOUT_CLASSIFICATION	1.9224682862028464E-6	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999985774637821	WITHOUT_CLASSIFICATION	1.4225362179859552E-6	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999984865005529	WITHOUT_CLASSIFICATION	1.5134994470689082E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999983531153714	WITHOUT_CLASSIFICATION	1.646884628439638E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999985810464913	WITHOUT_CLASSIFICATION	1.4189535087845048E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999986461302631	WITHOUT_CLASSIFICATION	1.353869736879736E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999985179578228	WITHOUT_CLASSIFICATION	1.4820421771702714E-6	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999987232757356	WITHOUT_CLASSIFICATION	1.2767242644866695E-6	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999985792231647	WITHOUT_CLASSIFICATION	1.420776835301501E-6	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999983047091384	WITHOUT_CLASSIFICATION	1.6952908614688885E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999984473909999	WITHOUT_CLASSIFICATION	1.552609000079689E-6	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999982179922291	WITHOUT_CLASSIFICATION	1.7820077708260385E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.999998611371217	WITHOUT_CLASSIFICATION	1.3886287830151907E-6	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999986310962492	WITHOUT_CLASSIFICATION	1.3689037507691745E-6	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999979591685048	WITHOUT_CLASSIFICATION	2.0408314952333385E-6	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.99999831755295	WITHOUT_CLASSIFICATION	1.6824470499392122E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999979770784485	WITHOUT_CLASSIFICATION	2.022921551571163E-6	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999983627596503	WITHOUT_CLASSIFICATION	1.63724034980368E-6	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999984976557829	WITHOUT_CLASSIFICATION	1.502344217118871E-6	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999982653925621	WITHOUT_CLASSIFICATION	1.7346074378976905E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999986289891761	WITHOUT_CLASSIFICATION	1.371010823904538E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999987268769712	WITHOUT_CLASSIFICATION	1.273123028812201E-6	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999985222946912	WITHOUT_CLASSIFICATION	1.477705308858862E-6	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999983592014439	WITHOUT_CLASSIFICATION	1.6407985561279173E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999984943338232	WITHOUT_CLASSIFICATION	1.5056661768257398E-6	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999983895589042	WITHOUT_CLASSIFICATION	1.6104410957898755E-6	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999986496356793	WITHOUT_CLASSIFICATION	1.3503643207088825E-6	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999985904730484	WITHOUT_CLASSIFICATION	1.409526951586655E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999980493095274	WITHOUT_CLASSIFICATION	1.950690472602786E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999980493095274	WITHOUT_CLASSIFICATION	1.950690472602786E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999987135629794	WITHOUT_CLASSIFICATION	1.2864370206423774E-6	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999982798111491	WITHOUT_CLASSIFICATION	1.7201888508881006E-6	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999985298766261	WITHOUT_CLASSIFICATION	1.4701233740135417E-6	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999986311174065	WITHOUT_CLASSIFICATION	1.3688825934319957E-6	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999986943953579	WITHOUT_CLASSIFICATION	1.3056046420178935E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999985211762077	WITHOUT_CLASSIFICATION	1.4788237923417787E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999987742208184	WITHOUT_CLASSIFICATION	1.2257791816102309E-6	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999987654441793	WITHOUT_CLASSIFICATION	1.2345558207781813E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999986493334182	WITHOUT_CLASSIFICATION	1.3506665818199212E-6	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999986059328996	WITHOUT_CLASSIFICATION	1.3940671004023587E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999874638206961	WITHOUT_CLASSIFICATION	1.253617930393171E-5	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999874638206961	WITHOUT_CLASSIFICATION	1.253617930393171E-5	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999947205407904	WITHOUT_CLASSIFICATION	5.279459209508577E-6	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.999974472321993	WITHOUT_CLASSIFICATION	2.5527678007022404E-5	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999903283993589	WITHOUT_CLASSIFICATION	9.671600641067905E-6	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999950795203382	WITHOUT_CLASSIFICATION	4.920479661873674E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999272448749	WITHOUT_CLASSIFICATION	7.275512519403604E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999272448749	WITHOUT_CLASSIFICATION	7.275512519403604E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999272448749	WITHOUT_CLASSIFICATION	7.275512519403604E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999272448749	WITHOUT_CLASSIFICATION	7.275512519403604E-8	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9981938262468902	WITHOUT_CLASSIFICATION	0.0018061737531097917	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999999112462677	WITHOUT_CLASSIFICATION	8.875373229996718E-8	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999984360515335	WITHOUT_CLASSIFICATION	1.563948466517491E-6	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999980886026398	WITHOUT_CLASSIFICATION	1.911397360197147E-6	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999984916261596	WITHOUT_CLASSIFICATION	1.5083738404478064E-6	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999984177748621	WITHOUT_CLASSIFICATION	1.5822251379321783E-6	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999986762127716	WITHOUT_CLASSIFICATION	1.3237872284398904E-6	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999984692356364	WITHOUT_CLASSIFICATION	1.5307643635396053E-6	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999982350500964	WITHOUT_CLASSIFICATION	1.764949903565277E-6	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999986484381449	WITHOUT_CLASSIFICATION	1.3515618549949118E-6	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999985248969999	WITHOUT_CLASSIFICATION	1.4751030000775503E-6	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999984086004152	WITHOUT_CLASSIFICATION	1.5913995848262509E-6	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999984911595289	WITHOUT_CLASSIFICATION	1.508840471025017E-6	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999983161449638	WITHOUT_CLASSIFICATION	1.683855036179995E-6	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999983476574548	WITHOUT_CLASSIFICATION	1.6523425453053119E-6	TEST
// line 703	WITHOUT_CLASSIFICATION	0.999997935765956	WITHOUT_CLASSIFICATION	2.0642340440676567E-6	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999985973234589	WITHOUT_CLASSIFICATION	1.4026765411192852E-6	TEST
// line 814	WITHOUT_CLASSIFICATION	0.999998582854929	WITHOUT_CLASSIFICATION	1.4171450710009324E-6	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999981165945693	WITHOUT_CLASSIFICATION	1.8834054307245537E-6	TEST
// line 854	WITHOUT_CLASSIFICATION	0.999998477436313	WITHOUT_CLASSIFICATION	1.5225636870286334E-6	TEST
// line 872	WITHOUT_CLASSIFICATION	0.999998454770117	WITHOUT_CLASSIFICATION	1.545229883038302E-6	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999979627228898	WITHOUT_CLASSIFICATION	2.0372771102659177E-6	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999981272893691	WITHOUT_CLASSIFICATION	1.872710630935991E-6	TEST
// line 958	WITHOUT_CLASSIFICATION	0.999998271693273	WITHOUT_CLASSIFICATION	1.728306727008908E-6	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999981224529447	WITHOUT_CLASSIFICATION	1.8775470553066538E-6	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999984940345256	WITHOUT_CLASSIFICATION	1.5059654744190333E-6	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999984881976774	WITHOUT_CLASSIFICATION	1.511802322489385E-6	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999984689319115	WITHOUT_CLASSIFICATION	1.531068088536473E-6	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999985352083882	WITHOUT_CLASSIFICATION	1.4647916117424776E-6	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999985463952469	WITHOUT_CLASSIFICATION	1.4536047530933423E-6	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999987282923174	WITHOUT_CLASSIFICATION	1.271707682641908E-6	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999984536198444	WITHOUT_CLASSIFICATION	1.5463801555956133E-6	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999985467468882	WITHOUT_CLASSIFICATION	1.4532531118759616E-6	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999986812669527	WITHOUT_CLASSIFICATION	1.3187330473662347E-6	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999985846538549	WITHOUT_CLASSIFICATION	1.415346145043944E-6	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999982378211392	WITHOUT_CLASSIFICATION	1.762178860870347E-6	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999984363003744	WITHOUT_CLASSIFICATION	1.5636996255458358E-6	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999984671993196	WITHOUT_CLASSIFICATION	1.5328006803619553E-6	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999983999487331	WITHOUT_CLASSIFICATION	1.600051267027204E-6	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999983139304502	WITHOUT_CLASSIFICATION	1.6860695498058816E-6	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999982024603605	WITHOUT_CLASSIFICATION	1.7975396394528084E-6	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999982451382574	WITHOUT_CLASSIFICATION	1.7548617425417062E-6	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999987358224581	WITHOUT_CLASSIFICATION	1.2641775418799055E-6	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999985064504621	WITHOUT_CLASSIFICATION	1.4935495379077294E-6	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999986915794614	WITHOUT_CLASSIFICATION	1.3084205385408252E-6	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999986908409544	WITHOUT_CLASSIFICATION	1.3091590455096022E-6	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999984536195897	WITHOUT_CLASSIFICATION	1.5463804102851045E-6	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.999998524587803	WITHOUT_CLASSIFICATION	1.4754121968704922E-6	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999986079352373	WITHOUT_CLASSIFICATION	1.392064762735791E-6	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.999998589113602	WITHOUT_CLASSIFICATION	1.4108863979706663E-6	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999985810179781	WITHOUT_CLASSIFICATION	1.4189820217966986E-6	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999985424968126	WITHOUT_CLASSIFICATION	1.4575031873089875E-6	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999985950947371	WITHOUT_CLASSIFICATION	1.404905262877401E-6	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999985559397219	WITHOUT_CLASSIFICATION	1.4440602782289343E-6	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999985477791682	WITHOUT_CLASSIFICATION	1.4522208317953026E-6	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999984047063624	WITHOUT_CLASSIFICATION	1.5952936376740746E-6	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999983018873533	WITHOUT_CLASSIFICATION	1.6981126466223437E-6	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999984029078899	WITHOUT_CLASSIFICATION	1.5970921101047529E-6	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999981388253326	WITHOUT_CLASSIFICATION	1.8611746674469301E-6	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999994793679096	WITHOUT_CLASSIFICATION	5.20632090479554E-7	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999998997827562	WITHOUT_CLASSIFICATION	1.002172438816712E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996486654488	WITHOUT_CLASSIFICATION	3.513345511577256E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996486654488	WITHOUT_CLASSIFICATION	3.513345511577256E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996486654488	WITHOUT_CLASSIFICATION	3.513345511577256E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996486654488	WITHOUT_CLASSIFICATION	3.513345511577256E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996486654488	WITHOUT_CLASSIFICATION	3.513345511577256E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996486654488	WITHOUT_CLASSIFICATION	3.513345511577256E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996486654488	WITHOUT_CLASSIFICATION	3.513345511577256E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999558975604	WITHOUT_CLASSIFICATION	4.4102439639998757E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999558975604	WITHOUT_CLASSIFICATION	4.4102439639998757E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999558975604	WITHOUT_CLASSIFICATION	4.4102439639998757E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999558975604	WITHOUT_CLASSIFICATION	4.4102439639998757E-8	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999940303007862	WITHOUT_CLASSIFICATION	5.969699213894089E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999940303007862	WITHOUT_CLASSIFICATION	5.969699213894089E-6	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999998477594788	WITHOUT_CLASSIFICATION	1.5224052107655656E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998650726549	WITHOUT_CLASSIFICATION	1.3492734502385804E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998650726549	WITHOUT_CLASSIFICATION	1.3492734502385804E-7	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999995095196499	WITHOUT_CLASSIFICATION	4.904803501361414E-7	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999995629400932	WITHOUT_CLASSIFICATION	4.370599067470753E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999301601974	WITHOUT_CLASSIFICATION	6.983980262748379E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999301601974	WITHOUT_CLASSIFICATION	6.983980262748379E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999301601974	WITHOUT_CLASSIFICATION	6.983980262748379E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999301601974	WITHOUT_CLASSIFICATION	6.983980262748379E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999301601974	WITHOUT_CLASSIFICATION	6.983980262748379E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999301601974	WITHOUT_CLASSIFICATION	6.983980262748379E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999301601974	WITHOUT_CLASSIFICATION	6.983980262748379E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999599054162	WITHOUT_CLASSIFICATION	4.009458367824418E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999146514144	WITHOUT_CLASSIFICATION	8.534858573558597E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999993524588012	WITHOUT_CLASSIFICATION	6.475411987034845E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999993524588012	WITHOUT_CLASSIFICATION	6.475411987034845E-7	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999437564266	WITHOUT_CLASSIFICATION	5.624357337048402E-8	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999989928106424	WITHOUT_CLASSIFICATION	1.0071893576154437E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999989928106424	WITHOUT_CLASSIFICATION	1.0071893576154437E-6	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999962406528	WITHOUT_CLASSIFICATION	3.7593471636436665E-9	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.999573842363655	WITHOUT_CLASSIFICATION	4.2615763634497675E-4	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999999582832365	WITHOUT_CLASSIFICATION	4.171676345550857E-8	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999999652986391	WITHOUT_CLASSIFICATION	3.470136084392983E-8	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999995021071596	WITHOUT_CLASSIFICATION	4.978928403675022E-7	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999994138021071	WITHOUT_CLASSIFICATION	5.861978927678775E-7	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999987786586504	WITHOUT_CLASSIFICATION	1.2213413495997982E-6	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999998426809903	WITHOUT_CLASSIFICATION	1.5731900968295222E-7	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.999981739779252	WITHOUT_CLASSIFICATION	1.8260220748129053E-5	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999949369051361	WITHOUT_CLASSIFICATION	5.063094863869387E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9988385009106875	WITHOUT_CLASSIFICATION	0.0011614990893125115	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999951315657	WITHOUT_CLASSIFICATION	4.868434254437965E-9	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999998491159108	WITHOUT_CLASSIFICATION	1.5088408921081633E-7	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.999998322367859	WITHOUT_CLASSIFICATION	1.6776321410963304E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999998048782714	WITHOUT_CLASSIFICATION	1.9512172859894945E-6	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999999809986411	WITHOUT_CLASSIFICATION	1.9001358947030812E-8	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999503026477	WITHOUT_CLASSIFICATION	4.96973524376109E-8	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999855587010562	WITHOUT_CLASSIFICATION	1.444129894388718E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.999997828508843	WITHOUT_CLASSIFICATION	2.1714911570023068E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.999997828508843	WITHOUT_CLASSIFICATION	2.1714911570023068E-6	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999995963558328	WITHOUT_CLASSIFICATION	4.036441671690476E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997559570689	WITHOUT_CLASSIFICATION	2.440429311147113E-7	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999770982003	WITHOUT_CLASSIFICATION	2.29017996377671E-8	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999345246958108	WITHOUT_CLASSIFICATION	6.547530418918287E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999693310016805	WITHOUT_CLASSIFICATION	3.066899831941917E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999693310016805	WITHOUT_CLASSIFICATION	3.066899831941917E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999693310016805	WITHOUT_CLASSIFICATION	3.066899831941917E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999996276900484	WITHOUT_CLASSIFICATION	3.7230995157583863E-7	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999911746629266	WITHOUT_CLASSIFICATION	8.825337073381203E-6	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999999563188955	WITHOUT_CLASSIFICATION	4.368110450077078E-8	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999999417615363	WITHOUT_CLASSIFICATION	5.8238463827694815E-8	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.999998344585035	WITHOUT_CLASSIFICATION	1.6554149650835058E-6	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999998821626593	WITHOUT_CLASSIFICATION	1.1783734069103515E-7	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.999999755480728	WITHOUT_CLASSIFICATION	2.44519272031798E-7	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999985077506447	WITHOUT_CLASSIFICATION	1.4922493552992875E-6	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999914989034	WITHOUT_CLASSIFICATION	8.501096600959509E-9	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999993448742501	WITHOUT_CLASSIFICATION	6.551257499312507E-7	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999996063206198	WITHOUT_CLASSIFICATION	3.9367938014308185E-7	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999996164673798	WITHOUT_CLASSIFICATION	3.8353262026595444E-7	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.997962816579335	WITHOUT_CLASSIFICATION	0.0020371834206649704	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999979464015207	WITHOUT_CLASSIFICATION	2.0535984792290896E-6	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999467238098	WITHOUT_CLASSIFICATION	5.327619016621779E-8	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999997321020603	WITHOUT_CLASSIFICATION	2.6789793972310297E-7	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999994659687055	WITHOUT_CLASSIFICATION	5.340312945167044E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999928717529472	WITHOUT_CLASSIFICATION	7.128247052872615E-6	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999999119113685	WITHOUT_CLASSIFICATION	8.808863142618766E-8	TEST
