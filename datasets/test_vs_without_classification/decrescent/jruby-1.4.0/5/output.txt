// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999982740610577	WITHOUT_CLASSIFICATION	1.725938942304821E-6	TEST
// TODO make an assert here	TEST	0.9964728200498528	WITHOUT_CLASSIFICATION	0.0035271799501471945	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.5284823333712072	WITHOUT_CLASSIFICATION	0.4715176666287927	TEST
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9998009904936852	WITHOUT_CLASSIFICATION	1.9900950631475587E-4	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9999884574602391	WITHOUT_CLASSIFICATION	1.1542539760990587E-5	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999948509175638	WITHOUT_CLASSIFICATION	5.149082436143686E-6	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999999667557983	WITHOUT_CLASSIFICATION	3.3244201713844326E-8	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999991070462576	WITHOUT_CLASSIFICATION	8.929537424030193E-7	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999908277233177	WITHOUT_CLASSIFICATION	9.172276682262065E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999908277233177	WITHOUT_CLASSIFICATION	9.172276682262065E-6	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999852565998268	WITHOUT_CLASSIFICATION	1.4743400173178319E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999852565998268	WITHOUT_CLASSIFICATION	1.4743400173178319E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999851738963605	WITHOUT_CLASSIFICATION	1.4826103639530943E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999978007908499	WITHOUT_CLASSIFICATION	2.1992091501893864E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999989745841824	WITHOUT_CLASSIFICATION	1.0254158175807013E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999989833605327	WITHOUT_CLASSIFICATION	1.0166394672581977E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999949122133722	WITHOUT_CLASSIFICATION	5.087786627791929E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999949122133722	WITHOUT_CLASSIFICATION	5.087786627791929E-6	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999988995300804	WITHOUT_CLASSIFICATION	1.1004699196401072E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999939890094975	WITHOUT_CLASSIFICATION	6.010990502534117E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999939890094975	WITHOUT_CLASSIFICATION	6.010990502534117E-6	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.999969081968013	WITHOUT_CLASSIFICATION	3.0918031986956945E-5	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.999979211108504	WITHOUT_CLASSIFICATION	2.078889149596412E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999991080425885	WITHOUT_CLASSIFICATION	8.919574114982377E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999991080425885	WITHOUT_CLASSIFICATION	8.919574114982377E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999991080425885	WITHOUT_CLASSIFICATION	8.919574114982377E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999991080425885	WITHOUT_CLASSIFICATION	8.919574114982377E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999991080425885	WITHOUT_CLASSIFICATION	8.919574114982377E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999991080425885	WITHOUT_CLASSIFICATION	8.919574114982377E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999991080425885	WITHOUT_CLASSIFICATION	8.919574114982377E-6	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999835835079429	WITHOUT_CLASSIFICATION	1.64164920570565E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999835835079429	WITHOUT_CLASSIFICATION	1.64164920570565E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999835835079429	WITHOUT_CLASSIFICATION	1.64164920570565E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999835835079429	WITHOUT_CLASSIFICATION	1.64164920570565E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999835835079429	WITHOUT_CLASSIFICATION	1.64164920570565E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999835835079429	WITHOUT_CLASSIFICATION	1.64164920570565E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999835835079429	WITHOUT_CLASSIFICATION	1.64164920570565E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999818608139693	WITHOUT_CLASSIFICATION	1.8139186030642863E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999818608139693	WITHOUT_CLASSIFICATION	1.8139186030642863E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999818608139693	WITHOUT_CLASSIFICATION	1.8139186030642863E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999818608139693	WITHOUT_CLASSIFICATION	1.8139186030642863E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999818608139693	WITHOUT_CLASSIFICATION	1.8139186030642863E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999818608139693	WITHOUT_CLASSIFICATION	1.8139186030642863E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999943348414001	WITHOUT_CLASSIFICATION	5.665158599950563E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999943348414001	WITHOUT_CLASSIFICATION	5.665158599950563E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999943348414001	WITHOUT_CLASSIFICATION	5.665158599950563E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999943348414001	WITHOUT_CLASSIFICATION	5.665158599950563E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999943348414001	WITHOUT_CLASSIFICATION	5.665158599950563E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999943348414001	WITHOUT_CLASSIFICATION	5.665158599950563E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999933068712462	WITHOUT_CLASSIFICATION	6.69312875386069E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999933068712462	WITHOUT_CLASSIFICATION	6.69312875386069E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999933068712462	WITHOUT_CLASSIFICATION	6.69312875386069E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999933068712462	WITHOUT_CLASSIFICATION	6.69312875386069E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999933068712462	WITHOUT_CLASSIFICATION	6.69312875386069E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999933068712462	WITHOUT_CLASSIFICATION	6.69312875386069E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999933068712462	WITHOUT_CLASSIFICATION	6.69312875386069E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999928119026893	WITHOUT_CLASSIFICATION	7.1880973107581636E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999928119026893	WITHOUT_CLASSIFICATION	7.1880973107581636E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999928119026893	WITHOUT_CLASSIFICATION	7.1880973107581636E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999928119026893	WITHOUT_CLASSIFICATION	7.1880973107581636E-6	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999763536928321	WITHOUT_CLASSIFICATION	2.364630716795652E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999763536928321	WITHOUT_CLASSIFICATION	2.364630716795652E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999989595388181	WITHOUT_CLASSIFICATION	1.0404611818580564E-6	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999998702311867	WITHOUT_CLASSIFICATION	1.297688132214259E-7	TEST
// name	WITHOUT_CLASSIFICATION	0.9999972544900746	WITHOUT_CLASSIFICATION	2.7455099254677635E-6	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.999999146455617	WITHOUT_CLASSIFICATION	8.535443829663888E-7	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999996076139563	WITHOUT_CLASSIFICATION	3.9238604367433783E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999993957387769	WITHOUT_CLASSIFICATION	6.042612229363177E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999993957387769	WITHOUT_CLASSIFICATION	6.042612229363177E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999993957387769	WITHOUT_CLASSIFICATION	6.042612229363177E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999993957387769	WITHOUT_CLASSIFICATION	6.042612229363177E-7	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999999263546685	WITHOUT_CLASSIFICATION	7.364533145935714E-8	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999999814725282	WITHOUT_CLASSIFICATION	1.8527471707749022E-8	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999997953004128	WITHOUT_CLASSIFICATION	2.0469958724700334E-7	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.999999866231682	WITHOUT_CLASSIFICATION	1.3376831785975262E-7	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999985581026443	WITHOUT_CLASSIFICATION	1.4418973557020386E-6	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999882097792	WITHOUT_CLASSIFICATION	1.1790220759902907E-8	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999996987913929	WITHOUT_CLASSIFICATION	3.0120860714815523E-7	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.999999968140462	WITHOUT_CLASSIFICATION	3.1859538028859154E-8	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.999999955602226	WITHOUT_CLASSIFICATION	4.439777398015952E-8	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999992275250366	WITHOUT_CLASSIFICATION	7.724749634076853E-7	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999844270029	WITHOUT_CLASSIFICATION	1.5572997174890554E-8	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999999398331619	WITHOUT_CLASSIFICATION	6.016683807709676E-8	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999941264810371	WITHOUT_CLASSIFICATION	5.8735189629374975E-6	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999999596267782	WITHOUT_CLASSIFICATION	4.0373221660369704E-8	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997595968722	WITHOUT_CLASSIFICATION	2.4040312777621953E-7	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999963582913368	WITHOUT_CLASSIFICATION	3.6417086632619297E-6	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999999853546988	WITHOUT_CLASSIFICATION	1.464530117792777E-8	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999993957387769	WITHOUT_CLASSIFICATION	6.042612229363177E-7	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.999999953868224	WITHOUT_CLASSIFICATION	4.613177596353821E-8	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999251193086	WITHOUT_CLASSIFICATION	7.488069138494505E-8	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997355057139	WITHOUT_CLASSIFICATION	2.64494286115664E-7	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999992907766385	WITHOUT_CLASSIFICATION	7.09223361622568E-7	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999999862713242	WITHOUT_CLASSIFICATION	1.3728675770259617E-8	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999994154366485	WITHOUT_CLASSIFICATION	5.845633515795699E-7	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999998728674657	WITHOUT_CLASSIFICATION	1.271325343315703E-7	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999993717155647	WITHOUT_CLASSIFICATION	6.28284435140584E-7	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999988525157316	WITHOUT_CLASSIFICATION	1.1474842683836305E-6	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999996781647658	WITHOUT_CLASSIFICATION	3.2183523417970106E-7	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999376806366842	WITHOUT_CLASSIFICATION	6.231936331578537E-5	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.999999207867606	WITHOUT_CLASSIFICATION	7.92132394097094E-7	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999998119973574	WITHOUT_CLASSIFICATION	1.8800264265781954E-7	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999987129627661	WITHOUT_CLASSIFICATION	1.2870372339450493E-6	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999975765249312	WITHOUT_CLASSIFICATION	2.423475068956624E-6	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999969670865331	WITHOUT_CLASSIFICATION	3.0329134668746413E-6	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.999999701844362	WITHOUT_CLASSIFICATION	2.9815563804435014E-7	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999737175046	WITHOUT_CLASSIFICATION	2.628249529843068E-8	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9981239110022848	WITHOUT_CLASSIFICATION	0.0018760889977152253	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999993038914174	WITHOUT_CLASSIFICATION	6.96108582510572E-7	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999994328818059	WITHOUT_CLASSIFICATION	5.671181940306159E-7	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999984461024962	WITHOUT_CLASSIFICATION	1.5538975037875928E-6	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999998671169154	WITHOUT_CLASSIFICATION	1.3288308460926696E-7	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9999762936192674	WITHOUT_CLASSIFICATION	2.3706380732591592E-5	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999996091986656	WITHOUT_CLASSIFICATION	3.9080133445714543E-7	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9999932710245056	WITHOUT_CLASSIFICATION	6.728975494312068E-6	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999998492581498	WITHOUT_CLASSIFICATION	1.5074185026921693E-7	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999999037930852	WITHOUT_CLASSIFICATION	9.620691481006154E-8	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999696526308	WITHOUT_CLASSIFICATION	3.0347369124166396E-8	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999999540357714	WITHOUT_CLASSIFICATION	4.596422870941275E-8	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999996415383477	WITHOUT_CLASSIFICATION	3.5846165222086374E-7	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999997077298222	WITHOUT_CLASSIFICATION	2.922701778328657E-7	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999992312192655	WITHOUT_CLASSIFICATION	7.68780734636358E-7	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999427761219	WITHOUT_CLASSIFICATION	5.7223878200840966E-8	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.999999989099295	WITHOUT_CLASSIFICATION	1.0900705021954243E-8	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.999999876951595	WITHOUT_CLASSIFICATION	1.2304840499505702E-7	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999999682239169	WITHOUT_CLASSIFICATION	3.177608314215002E-8	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999053822276	WITHOUT_CLASSIFICATION	9.46177724436217E-8	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999992440153701	WITHOUT_CLASSIFICATION	7.559846300145268E-7	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996448857492	WITHOUT_CLASSIFICATION	3.551142507510162E-7	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999998899684153	WITHOUT_CLASSIFICATION	1.1003158469639421E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999074019424	WITHOUT_CLASSIFICATION	9.259805756983185E-8	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999984540898504	WITHOUT_CLASSIFICATION	1.5459101496692915E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999992753717858	WITHOUT_CLASSIFICATION	7.246282141380858E-7	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999992753717858	WITHOUT_CLASSIFICATION	7.246282141380858E-7	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999931811858853	WITHOUT_CLASSIFICATION	6.818814114657987E-6	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999999893694309	WITHOUT_CLASSIFICATION	1.0630569115002027E-8	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999923296338397	WITHOUT_CLASSIFICATION	7.670366160335655E-6	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999999287383489	WITHOUT_CLASSIFICATION	7.12616511004284E-8	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999998144182541	WITHOUT_CLASSIFICATION	1.855817458334816E-7	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999967119338399	WITHOUT_CLASSIFICATION	3.288066160076363E-6	TEST
// ???	WITHOUT_CLASSIFICATION	0.9999967730262306	WITHOUT_CLASSIFICATION	3.226973769319144E-6	TEST
// PID	WITHOUT_CLASSIFICATION	0.999992872257806	WITHOUT_CLASSIFICATION	7.127742194052197E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999074019424	WITHOUT_CLASSIFICATION	9.259805756983185E-8	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999449197025	WITHOUT_CLASSIFICATION	5.5080297554812E-8	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999989470753359	WITHOUT_CLASSIFICATION	1.0529246640648023E-6	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999960235333	WITHOUT_CLASSIFICATION	3.976466687130583E-9	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999818028976	WITHOUT_CLASSIFICATION	1.819710230487807E-8	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999998676540242	WITHOUT_CLASSIFICATION	1.3234597587150365E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998182756475	WITHOUT_CLASSIFICATION	1.8172435236084916E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998182756475	WITHOUT_CLASSIFICATION	1.8172435236084916E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998182756475	WITHOUT_CLASSIFICATION	1.8172435236084916E-7	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999999866767724	WITHOUT_CLASSIFICATION	1.3323227692291278E-8	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999977260858343	WITHOUT_CLASSIFICATION	2.2739141657453902E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999998328783946	WITHOUT_CLASSIFICATION	1.6712160557921138E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999974759267456	WITHOUT_CLASSIFICATION	2.524073254400384E-6	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999998422805619	WITHOUT_CLASSIFICATION	1.577194380263283E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999998938671049	WITHOUT_CLASSIFICATION	1.061328951568827E-7	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999999609330774	WITHOUT_CLASSIFICATION	3.906692257736532E-8	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999257957046	WITHOUT_CLASSIFICATION	7.420429537947499E-8	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999999383454187	WITHOUT_CLASSIFICATION	6.165458130120033E-7	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999999383454187	WITHOUT_CLASSIFICATION	6.165458130120033E-7	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999993759485375	WITHOUT_CLASSIFICATION	6.240514625611067E-7	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999984774937795	WITHOUT_CLASSIFICATION	1.522506220600267E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999993511805115	WITHOUT_CLASSIFICATION	6.488194885165504E-7	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999993511805115	WITHOUT_CLASSIFICATION	6.488194885165504E-7	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999997246889334	WITHOUT_CLASSIFICATION	2.7531106660006164E-7	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999536743883	WITHOUT_CLASSIFICATION	4.63256117354109E-8	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999991254119271	WITHOUT_CLASSIFICATION	8.745880728813181E-7	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999997737586523	WITHOUT_CLASSIFICATION	2.2624134757831514E-7	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999995775115875	WITHOUT_CLASSIFICATION	4.224884124991577E-7	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999997840322001	WITHOUT_CLASSIFICATION	2.159677998020364E-7	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999986701730716	WITHOUT_CLASSIFICATION	1.3298269283751666E-6	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999975916685828	WITHOUT_CLASSIFICATION	2.4083314172475147E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999997724440992	WITHOUT_CLASSIFICATION	2.2755590092967704E-7	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999998873217646	WITHOUT_CLASSIFICATION	1.1267823548505236E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999074019424	WITHOUT_CLASSIFICATION	9.259805756983185E-8	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999941195237534	WITHOUT_CLASSIFICATION	5.880476246586106E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999210578008	WITHOUT_CLASSIFICATION	7.894219919921842E-8	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999997733420929	WITHOUT_CLASSIFICATION	2.2665790705655385E-7	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999979538961701	WITHOUT_CLASSIFICATION	2.0461038298355218E-6	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999992027110249	WITHOUT_CLASSIFICATION	7.972889750091081E-7	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999883228478992	WITHOUT_CLASSIFICATION	1.1677152100691488E-5	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999993509683246	WITHOUT_CLASSIFICATION	6.490316754361694E-7	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999984381931616	WITHOUT_CLASSIFICATION	1.5618068384503327E-6	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999998294998083	WITHOUT_CLASSIFICATION	1.705001917759562E-7	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999993552558359	WITHOUT_CLASSIFICATION	6.447441641330653E-7	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999999522004431	WITHOUT_CLASSIFICATION	4.779955675027767E-8	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999335521725	WITHOUT_CLASSIFICATION	6.644782746883012E-8	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999999232271154	WITHOUT_CLASSIFICATION	7.677288464337123E-8	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999999395357743	WITHOUT_CLASSIFICATION	6.046422566928586E-8	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9997965443947046	WITHOUT_CLASSIFICATION	2.0345560529545418E-4	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999999794290839	WITHOUT_CLASSIFICATION	2.057091598604082E-8	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999999599220853	WITHOUT_CLASSIFICATION	4.007791461069854E-8	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999997632841869	WITHOUT_CLASSIFICATION	2.3671581319095987E-7	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999999940908417	WITHOUT_CLASSIFICATION	5.909158336979972E-9	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999999702438783	WITHOUT_CLASSIFICATION	2.975612162289957E-8	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999999823119353	WITHOUT_CLASSIFICATION	1.7688064628641175E-8	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999991490705	WITHOUT_CLASSIFICATION	8.509295413922945E-10	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999996795589	WITHOUT_CLASSIFICATION	3.2044106326094227E-10	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999992926820238	WITHOUT_CLASSIFICATION	7.073179761055645E-7	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999999559499589	WITHOUT_CLASSIFICATION	4.405004105859613E-8	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.999999577367523	WITHOUT_CLASSIFICATION	4.2263247706648145E-7	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999965427914947	WITHOUT_CLASSIFICATION	3.4572085053792073E-6	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.999999980482136	WITHOUT_CLASSIFICATION	1.9517864035910143E-8	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999906033221	WITHOUT_CLASSIFICATION	9.396677802441034E-9	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999998753318324	WITHOUT_CLASSIFICATION	1.2466816751201716E-7	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.999999986963244	WITHOUT_CLASSIFICATION	1.3036755956947396E-8	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999999114746125	WITHOUT_CLASSIFICATION	8.852538751686256E-8	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999896153428641	WITHOUT_CLASSIFICATION	1.0384657135964676E-5	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999996403382828	WITHOUT_CLASSIFICATION	3.596617171242301E-7	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999997989387375	WITHOUT_CLASSIFICATION	2.0106126264538357E-7	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999987215263332	WITHOUT_CLASSIFICATION	1.2784736668514793E-6	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997498471247	WITHOUT_CLASSIFICATION	2.501528753455478E-7	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999740684087527	WITHOUT_CLASSIFICATION	2.593159124722533E-5	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999998843103645	WITHOUT_CLASSIFICATION	1.15689635625796E-7	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999331485494	WITHOUT_CLASSIFICATION	6.685145052297127E-8	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999999394729773	WITHOUT_CLASSIFICATION	6.052702272733877E-8	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999998925468607	WITHOUT_CLASSIFICATION	1.074531392929522E-7	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999994037122238	WITHOUT_CLASSIFICATION	5.962877760657029E-7	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999999136753885	WITHOUT_CLASSIFICATION	8.632461147127564E-8	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999996902925645	WITHOUT_CLASSIFICATION	3.0970743551330726E-7	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999993238030174	WITHOUT_CLASSIFICATION	6.761969826357208E-7	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999994269869384	WITHOUT_CLASSIFICATION	5.730130615037295E-7	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.999999922542543	WITHOUT_CLASSIFICATION	7.7457456944097E-8	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999999689590922	WITHOUT_CLASSIFICATION	3.104090782287637E-8	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.999999967012408	WITHOUT_CLASSIFICATION	3.298759200161636E-8	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999999434230442	WITHOUT_CLASSIFICATION	5.6576955695520676E-8	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.99999995320822	WITHOUT_CLASSIFICATION	4.679177998374748E-8	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999998420464328	WITHOUT_CLASSIFICATION	1.5795356716616518E-7	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999999603769482	WITHOUT_CLASSIFICATION	3.962305182143494E-8	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999996350459708	WITHOUT_CLASSIFICATION	3.6495402920659054E-7	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999999907334914	WITHOUT_CLASSIFICATION	9.266508509963946E-9	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999999909333769	WITHOUT_CLASSIFICATION	9.066623110462409E-9	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999999494663518	WITHOUT_CLASSIFICATION	5.053364813914945E-8	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999999557776784	WITHOUT_CLASSIFICATION	4.4222321564003734E-8	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999999546644072	WITHOUT_CLASSIFICATION	4.533559275967062E-8	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999967061721453	WITHOUT_CLASSIFICATION	3.2938278547995666E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999967061721453	WITHOUT_CLASSIFICATION	3.2938278547995666E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999991894938688	WITHOUT_CLASSIFICATION	8.1050613116823E-7	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999991894938688	WITHOUT_CLASSIFICATION	8.1050613116823E-7	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999961288353326	WITHOUT_CLASSIFICATION	3.87116466734684E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999961288353326	WITHOUT_CLASSIFICATION	3.87116466734684E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999976336234482	WITHOUT_CLASSIFICATION	2.3663765517628684E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999976336234482	WITHOUT_CLASSIFICATION	2.3663765517628684E-6	TEST
// long name option	WITHOUT_CLASSIFICATION	0.999998654122746	WITHOUT_CLASSIFICATION	1.3458772539862238E-6	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999996879215542	WITHOUT_CLASSIFICATION	3.1207844572480837E-7	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996410874991	WITHOUT_CLASSIFICATION	3.5891250104538E-7	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999946597602122	WITHOUT_CLASSIFICATION	5.340239787759612E-6	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999997545624293	WITHOUT_CLASSIFICATION	2.4543757076264404E-7	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.999986147906865	WITHOUT_CLASSIFICATION	1.385209313493172E-5	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999922246855458	WITHOUT_CLASSIFICATION	7.77531445420041E-6	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999137630481	WITHOUT_CLASSIFICATION	8.623695195750341E-8	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999998638044597	WITHOUT_CLASSIFICATION	1.3619554036673457E-7	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999991341442552	WITHOUT_CLASSIFICATION	8.658557447776017E-7	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999993968791443	WITHOUT_CLASSIFICATION	6.031208557650285E-7	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999678188762	WITHOUT_CLASSIFICATION	3.218112374376348E-8	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999977130922288	WITHOUT_CLASSIFICATION	2.2869077712017603E-6	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.999999056871021	WITHOUT_CLASSIFICATION	9.431289791007426E-7	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.999999769322534	WITHOUT_CLASSIFICATION	2.3067746587918527E-7	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999957445779446	WITHOUT_CLASSIFICATION	4.2554220554448E-6	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.999999997665689	WITHOUT_CLASSIFICATION	2.334310984080828E-9	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999997126738183	WITHOUT_CLASSIFICATION	2.873261816790002E-7	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999972269866928	WITHOUT_CLASSIFICATION	2.773013307182108E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999997616490597	WITHOUT_CLASSIFICATION	2.3835094021267923E-7	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999998113976454	WITHOUT_CLASSIFICATION	1.8860235470494433E-7	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999982796238837	WITHOUT_CLASSIFICATION	1.720376116320968E-6	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999993524656454	WITHOUT_CLASSIFICATION	6.475343545090649E-7	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999980534371663	WITHOUT_CLASSIFICATION	1.946562833686775E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999951133885356	WITHOUT_CLASSIFICATION	4.886611464320537E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999980811061892	WITHOUT_CLASSIFICATION	1.9188938109536203E-6	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999981554916947	WITHOUT_CLASSIFICATION	1.8445083052868672E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999997251209984	WITHOUT_CLASSIFICATION	2.7487900157556033E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999997251209984	WITHOUT_CLASSIFICATION	2.7487900157556033E-7	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999980543641616	WITHOUT_CLASSIFICATION	1.94563583845868E-6	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999976195790095	WITHOUT_CLASSIFICATION	2.380420990510424E-6	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999971665276745	WITHOUT_CLASSIFICATION	2.8334723255307423E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999993500793698	WITHOUT_CLASSIFICATION	6.499206301605415E-7	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.999992622679668	WITHOUT_CLASSIFICATION	7.377320331929045E-6	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999959823209875	WITHOUT_CLASSIFICATION	4.017679012540484E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999972672302341	WITHOUT_CLASSIFICATION	2.7327697659531664E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999972672302341	WITHOUT_CLASSIFICATION	2.7327697659531664E-6	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999993874788868	WITHOUT_CLASSIFICATION	6.125211132585876E-7	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9993495117778848	WITHOUT_CLASSIFICATION	6.504882221151526E-4	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999991267896485	WITHOUT_CLASSIFICATION	8.732103515433509E-7	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999991267896485	WITHOUT_CLASSIFICATION	8.732103515433509E-7	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.999999510004361	WITHOUT_CLASSIFICATION	4.899956389159715E-7	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999974245934758	WITHOUT_CLASSIFICATION	2.5754065241566646E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999974245934758	WITHOUT_CLASSIFICATION	2.5754065241566646E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999993987332013	WITHOUT_CLASSIFICATION	6.012667985903159E-7	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999993987332013	WITHOUT_CLASSIFICATION	6.012667985903159E-7	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999931362879794	WITHOUT_CLASSIFICATION	6.863712020553596E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999931362879794	WITHOUT_CLASSIFICATION	6.863712020553596E-6	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9999965343013301	WITHOUT_CLASSIFICATION	3.465698669916791E-6	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.99999918714345	WITHOUT_CLASSIFICATION	8.128565500074425E-7	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999995936216162	WITHOUT_CLASSIFICATION	4.0637838391788125E-7	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999998348352684	WITHOUT_CLASSIFICATION	1.6516473150590042E-7	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999983032173	WITHOUT_CLASSIFICATION	1.6967828139542574E-9	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999999896357222	WITHOUT_CLASSIFICATION	1.0364277702088557E-8	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999994177186737	WITHOUT_CLASSIFICATION	5.822813262014092E-7	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999999907930721	WITHOUT_CLASSIFICATION	9.206927908000416E-9	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999994177186737	WITHOUT_CLASSIFICATION	5.822813262014092E-7	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9997088716352492	WITHOUT_CLASSIFICATION	2.9112836475075833E-4	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999997435320177	WITHOUT_CLASSIFICATION	2.564679822805397E-7	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999997840505934	WITHOUT_CLASSIFICATION	2.1594940645052906E-7	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999994203009859	WITHOUT_CLASSIFICATION	5.796990141928688E-7	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999999281464305	WITHOUT_CLASSIFICATION	7.185356949657098E-8	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999996344035231	WITHOUT_CLASSIFICATION	3.655964769107506E-7	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999950748837809	WITHOUT_CLASSIFICATION	4.925116219033917E-6	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999984601186951	WITHOUT_CLASSIFICATION	1.5398813048459723E-6	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999985282741	WITHOUT_CLASSIFICATION	1.4717258538392022E-9	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999999825982845	WITHOUT_CLASSIFICATION	1.7401715430299776E-8	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999998710895531	WITHOUT_CLASSIFICATION	1.289104469522075E-7	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999958025426372	WITHOUT_CLASSIFICATION	4.1974573627819505E-6	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999996681990645	WITHOUT_CLASSIFICATION	3.3180093549420947E-7	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999997484532642	WITHOUT_CLASSIFICATION	2.5154673574588087E-7	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999997296233433	WITHOUT_CLASSIFICATION	2.7037665674925094E-7	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999815445895	WITHOUT_CLASSIFICATION	1.8455410597179695E-8	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999991990345298	WITHOUT_CLASSIFICATION	8.009654701259972E-7	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999996291885924	WITHOUT_CLASSIFICATION	3.7081140761620296E-7	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999995213624249	WITHOUT_CLASSIFICATION	4.786375751936027E-7	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999967025185238	WITHOUT_CLASSIFICATION	3.2974814761202536E-6	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999978983360581	WITHOUT_CLASSIFICATION	2.101663941816157E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999998516331735	WITHOUT_CLASSIFICATION	1.483668264755584E-7	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999997552217605	WITHOUT_CLASSIFICATION	2.4477823945268883E-7	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999998433057445	WITHOUT_CLASSIFICATION	1.566942553680353E-7	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999991318752586	WITHOUT_CLASSIFICATION	8.681247414086365E-7	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999999631831971	WITHOUT_CLASSIFICATION	3.68168029118569E-8	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.999999873151673	WITHOUT_CLASSIFICATION	1.2684832703826738E-7	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999995554028501	WITHOUT_CLASSIFICATION	4.445971498744503E-7	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999848946748	WITHOUT_CLASSIFICATION	1.5105325234978897E-8	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999998833263507	WITHOUT_CLASSIFICATION	1.1667364933630149E-7	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999999103512349	WITHOUT_CLASSIFICATION	8.964876506808794E-8	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999972675148	WITHOUT_CLASSIFICATION	2.732485346161502E-9	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999962312741	WITHOUT_CLASSIFICATION	3.768725799726343E-9	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999993010016567	WITHOUT_CLASSIFICATION	6.989983433420173E-7	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999755012824	WITHOUT_CLASSIFICATION	2.4498717580184252E-8	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999999501470266	WITHOUT_CLASSIFICATION	4.9852973408727885E-8	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999358408067	WITHOUT_CLASSIFICATION	6.415919331532309E-8	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999999886527309	WITHOUT_CLASSIFICATION	1.134726901047179E-8	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999999984422189	WITHOUT_CLASSIFICATION	1.5577810831923586E-9	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999999498289931	WITHOUT_CLASSIFICATION	5.0171006919215753E-8	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999871869691	WITHOUT_CLASSIFICATION	1.2813030889713326E-8	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999339742522	WITHOUT_CLASSIFICATION	6.60257478167042E-8	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999514341547	WITHOUT_CLASSIFICATION	4.8565845326311144E-8	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999333936079	WITHOUT_CLASSIFICATION	6.660639199710389E-8	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999498840275	WITHOUT_CLASSIFICATION	5.011597251458346E-8	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999162499078	WITHOUT_CLASSIFICATION	8.375009210398662E-8	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999995522491623	WITHOUT_CLASSIFICATION	4.477508378001998E-7	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999944668947	WITHOUT_CLASSIFICATION	5.533105387797155E-9	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999993392848114	WITHOUT_CLASSIFICATION	6.607151884773779E-7	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999995039584033	WITHOUT_CLASSIFICATION	4.960415967644997E-7	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999999709068443	WITHOUT_CLASSIFICATION	2.9093155725328412E-8	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.999999909532374	WITHOUT_CLASSIFICATION	9.046762601812045E-8	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999897465269816	WITHOUT_CLASSIFICATION	1.025347301834019E-5	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999998684803691	WITHOUT_CLASSIFICATION	1.315196308099746E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.999999953684297	WITHOUT_CLASSIFICATION	4.631570294048082E-8	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.999999953684297	WITHOUT_CLASSIFICATION	4.631570294048082E-8	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999986576064185	WITHOUT_CLASSIFICATION	1.3423935814266204E-6	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999993312624764	WITHOUT_CLASSIFICATION	6.687375236055486E-6	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999603950261	WITHOUT_CLASSIFICATION	3.960497392068598E-8	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999999651294008	WITHOUT_CLASSIFICATION	3.4870599174377564E-8	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999997926478313	WITHOUT_CLASSIFICATION	2.07352168561758E-7	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999993067051544	WITHOUT_CLASSIFICATION	6.932948456218012E-7	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999980463386884	WITHOUT_CLASSIFICATION	1.9536613115703394E-6	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999999966289914	WITHOUT_CLASSIFICATION	3.371008586681434E-9	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999996644057781	WITHOUT_CLASSIFICATION	3.3559422182798515E-7	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999998890235434	WITHOUT_CLASSIFICATION	1.1097645653412529E-7	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999922316982	WITHOUT_CLASSIFICATION	7.76830185803484E-9	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999922316982	WITHOUT_CLASSIFICATION	7.76830185803484E-9	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.99999980101685	WITHOUT_CLASSIFICATION	1.9898314993550272E-7	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999999945779896	WITHOUT_CLASSIFICATION	5.422010398485387E-9	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999972072555243	WITHOUT_CLASSIFICATION	2.7927444757752575E-6	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999997827701447	WITHOUT_CLASSIFICATION	2.1722985525841694E-7	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999989665264741	WITHOUT_CLASSIFICATION	1.033473525830641E-6	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999814475103	WITHOUT_CLASSIFICATION	1.8552489742086237E-8	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999999001188361	WITHOUT_CLASSIFICATION	9.988116389342974E-7	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999996482446218	WITHOUT_CLASSIFICATION	3.517553780860029E-7	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999999928606429	WITHOUT_CLASSIFICATION	7.1393571260299966E-9	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.999999496715455	WITHOUT_CLASSIFICATION	5.032845450839347E-7	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999998980732252	WITHOUT_CLASSIFICATION	1.0192677483515224E-7	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999990256650904	WITHOUT_CLASSIFICATION	9.743349095631071E-7	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999999630843855	WITHOUT_CLASSIFICATION	3.691561440283468E-8	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999999630843855	WITHOUT_CLASSIFICATION	3.691561440283468E-8	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999999750211116	WITHOUT_CLASSIFICATION	2.4978888335416036E-8	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999996535158457	WITHOUT_CLASSIFICATION	3.4648415426730745E-7	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999994510591782	WITHOUT_CLASSIFICATION	5.489408217293571E-7	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.99999952967812	WITHOUT_CLASSIFICATION	4.703218800173149E-7	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999999119453914	WITHOUT_CLASSIFICATION	8.805460871027597E-8	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999998974461568	WITHOUT_CLASSIFICATION	1.0255384331344112E-7	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999980056742976	WITHOUT_CLASSIFICATION	1.994325702332823E-6	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999993290464602	WITHOUT_CLASSIFICATION	6.709535397296625E-7	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.999999025541184	WITHOUT_CLASSIFICATION	9.744588159413843E-7	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999999635253581	WITHOUT_CLASSIFICATION	3.647464182667109E-8	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999972072555243	WITHOUT_CLASSIFICATION	2.7927444757752575E-6	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999976900148578	WITHOUT_CLASSIFICATION	2.3099851422491895E-6	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999986133013128	WITHOUT_CLASSIFICATION	1.386698687199338E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999941368537661	WITHOUT_CLASSIFICATION	5.863146233792382E-6	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999999854548723	WITHOUT_CLASSIFICATION	1.4545127546139593E-8	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999999647247587	WITHOUT_CLASSIFICATION	3.527524124987233E-8	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999931653858	WITHOUT_CLASSIFICATION	6.834614266659413E-9	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999991632155109	WITHOUT_CLASSIFICATION	8.367844892019586E-7	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999998921292705	WITHOUT_CLASSIFICATION	1.0787072943747375E-7	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999998911230101	WITHOUT_CLASSIFICATION	1.0887698989795498E-7	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999999380436222	WITHOUT_CLASSIFICATION	6.195637783990941E-8	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999998637126344	WITHOUT_CLASSIFICATION	1.3628736567897908E-7	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999934740521483	WITHOUT_CLASSIFICATION	6.5259478516472286E-6	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999981936450951	WITHOUT_CLASSIFICATION	1.8063549047627905E-6	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999989963208471	WITHOUT_CLASSIFICATION	1.0036791528719787E-6	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999947247714632	WITHOUT_CLASSIFICATION	5.2752285367117254E-6	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999998041858024	WITHOUT_CLASSIFICATION	1.9581419769825596E-7	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999992041028903	WITHOUT_CLASSIFICATION	7.958971096105227E-7	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999996204185252	WITHOUT_CLASSIFICATION	3.795814747919222E-7	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999982128011313	WITHOUT_CLASSIFICATION	1.7871988686333042E-6	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999983415491652	WITHOUT_CLASSIFICATION	1.6584508347038181E-6	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999894130828	WITHOUT_CLASSIFICATION	1.0586917220061114E-8	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999994752117217	WITHOUT_CLASSIFICATION	5.247882782934635E-7	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999998544306936	WITHOUT_CLASSIFICATION	1.4556930651069096E-7	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999966470661185	WITHOUT_CLASSIFICATION	3.352933881413418E-6	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999996418138483	WITHOUT_CLASSIFICATION	3.581861517299713E-7	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.99999991528737	WITHOUT_CLASSIFICATION	8.471263012829327E-8	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999957776364632	WITHOUT_CLASSIFICATION	4.222363536749946E-6	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.999999380841714	WITHOUT_CLASSIFICATION	6.191582859592655E-7	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999992927026	WITHOUT_CLASSIFICATION	7.072974000327358E-7	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999999526085751	WITHOUT_CLASSIFICATION	4.739142502868389E-8	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999904615814941	WITHOUT_CLASSIFICATION	9.538418505897635E-6	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999904615814941	WITHOUT_CLASSIFICATION	9.538418505897635E-6	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999995316422013	WITHOUT_CLASSIFICATION	4.6835779867814887E-7	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999995722862143	WITHOUT_CLASSIFICATION	4.277137857446108E-7	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999729863926	WITHOUT_CLASSIFICATION	2.7013607296236843E-8	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999998598643319	WITHOUT_CLASSIFICATION	1.4013566805782008E-7	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.999997116105113	WITHOUT_CLASSIFICATION	2.883894886948397E-6	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999997014360162	WITHOUT_CLASSIFICATION	2.985639838229905E-7	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999999074019424	WITHOUT_CLASSIFICATION	9.259805756983185E-8	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999993176668658	WITHOUT_CLASSIFICATION	6.823331342848014E-7	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999946834169032	WITHOUT_CLASSIFICATION	5.3165830967785865E-6	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999997804343114	WITHOUT_CLASSIFICATION	2.1956568855690876E-7	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999998628455392	WITHOUT_CLASSIFICATION	1.3715446078234932E-7	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999989953768417	WITHOUT_CLASSIFICATION	1.0046231582476094E-6	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999893570497532	WITHOUT_CLASSIFICATION	1.064295024685621E-5	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999331485494	WITHOUT_CLASSIFICATION	6.685145052297127E-8	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999962433485	WITHOUT_CLASSIFICATION	3.756651506384425E-9	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999753007689035	WITHOUT_CLASSIFICATION	2.4699231096481566E-5	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999984367364	WITHOUT_CLASSIFICATION	1.5632636427674811E-9	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999666331999	WITHOUT_CLASSIFICATION	3.3366800202305143E-8	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999999463532832	WITHOUT_CLASSIFICATION	5.36467167968256E-8	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999970851490465	WITHOUT_CLASSIFICATION	2.9148509536152895E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999992300042535	WITHOUT_CLASSIFICATION	7.699957464059197E-7	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999992300042535	WITHOUT_CLASSIFICATION	7.699957464059197E-7	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999998162038212	WITHOUT_CLASSIFICATION	1.837961789757746E-7	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999996797351994	WITHOUT_CLASSIFICATION	3.2026480056817036E-7	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.999999866998546	WITHOUT_CLASSIFICATION	1.3300145398734074E-7	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999988704275805	WITHOUT_CLASSIFICATION	1.1295724194532964E-6	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999989054984271	WITHOUT_CLASSIFICATION	1.0945015729099112E-6	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999999855486679	WITHOUT_CLASSIFICATION	1.4451332197832175E-8	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999979754681	WITHOUT_CLASSIFICATION	2.024531973346256E-9	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999998966698681	WITHOUT_CLASSIFICATION	1.0333013192455364E-7	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999996989155857	WITHOUT_CLASSIFICATION	3.010844143422118E-7	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999999621425368	WITHOUT_CLASSIFICATION	3.785746310000407E-8	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999991252287915	WITHOUT_CLASSIFICATION	8.747712085974986E-7	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.999999787763535	WITHOUT_CLASSIFICATION	2.1223646489132582E-7	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999976854856637	WITHOUT_CLASSIFICATION	2.3145143361981807E-6	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999997335024834	WITHOUT_CLASSIFICATION	2.664975165721239E-7	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999984768463412	WITHOUT_CLASSIFICATION	1.523153658824459E-6	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999988920493526	WITHOUT_CLASSIFICATION	1.107950647407824E-6	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999996516057551	WITHOUT_CLASSIFICATION	3.4839424495752284E-7	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.999999743964811	WITHOUT_CLASSIFICATION	2.5603518899000234E-7	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999725758647	WITHOUT_CLASSIFICATION	2.7424135343910985E-8	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.99999910485748	WITHOUT_CLASSIFICATION	8.951425200828445E-7	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999999635933123	WITHOUT_CLASSIFICATION	3.6406687726493574E-8	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.999999597560056	WITHOUT_CLASSIFICATION	4.024399439721202E-7	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999998555896285	WITHOUT_CLASSIFICATION	1.4441037153905304E-7	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999997836487071	WITHOUT_CLASSIFICATION	2.1635129288690276E-7	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999997224582711	WITHOUT_CLASSIFICATION	2.775417289350657E-7	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999999736703017	WITHOUT_CLASSIFICATION	2.6329698381293222E-8	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999845463513333	WITHOUT_CLASSIFICATION	1.545364866673015E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999998611277024	WITHOUT_CLASSIFICATION	1.3887229751341477E-7	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999987629335396	WITHOUT_CLASSIFICATION	1.2370664603931652E-6	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999995440691493	WITHOUT_CLASSIFICATION	4.5593085077258023E-7	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999999948966847	WITHOUT_CLASSIFICATION	5.103315347975464E-9	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999983811146531	WITHOUT_CLASSIFICATION	1.6188853468072837E-6	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999995888281223	WITHOUT_CLASSIFICATION	4.1117187766022134E-7	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.9999931239129924	WITHOUT_CLASSIFICATION	6.87608700757134E-6	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999945178884937	WITHOUT_CLASSIFICATION	5.482111506260533E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999397056424	WITHOUT_CLASSIFICATION	6.02943575647192E-8	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999407850617	WITHOUT_CLASSIFICATION	5.9214938283528805E-8	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999997187648125	WITHOUT_CLASSIFICATION	2.8123518747138623E-7	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999999417994873	WITHOUT_CLASSIFICATION	5.8200512695889714E-8	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.99999994025865	WITHOUT_CLASSIFICATION	5.974134993802638E-8	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.999999889830832	WITHOUT_CLASSIFICATION	1.1016916806519392E-7	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999997841035371	WITHOUT_CLASSIFICATION	2.1589646292446446E-7	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999995552854184	WITHOUT_CLASSIFICATION	4.4471458165182596E-7	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999999427413569	WITHOUT_CLASSIFICATION	5.725864310886704E-7	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999985630697088	WITHOUT_CLASSIFICATION	1.4369302911653847E-6	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999999427413569	WITHOUT_CLASSIFICATION	5.725864310886704E-7	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999131459796	WITHOUT_CLASSIFICATION	8.685402036532113E-8	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9999972224961853	WITHOUT_CLASSIFICATION	2.7775038147963246E-6	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999998541326129	WITHOUT_CLASSIFICATION	1.4586738696399855E-7	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9994830680913813	WITHOUT_CLASSIFICATION	5.169319086187705E-4	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999980483898139	WITHOUT_CLASSIFICATION	1.9516101861228253E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999996433891126	WITHOUT_CLASSIFICATION	3.566108872676691E-7	TEST
// write	WITHOUT_CLASSIFICATION	0.9999990906074923	WITHOUT_CLASSIFICATION	9.093925076817553E-7	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9998082461915643	WITHOUT_CLASSIFICATION	1.9175380843574258E-4	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999998571424201	WITHOUT_CLASSIFICATION	1.4285757986314603E-7	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999918733516157	WITHOUT_CLASSIFICATION	8.126648384243527E-6	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999974503451502	WITHOUT_CLASSIFICATION	2.549654849742664E-6	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999995348014545	WITHOUT_CLASSIFICATION	4.6519854549101915E-7	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999994937379086	WITHOUT_CLASSIFICATION	5.06262091409526E-7	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999999878770971	WITHOUT_CLASSIFICATION	1.2122902980758676E-8	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999844552910987	WITHOUT_CLASSIFICATION	1.5544708901258474E-5	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9998283428726188	WITHOUT_CLASSIFICATION	1.7165712738128767E-4	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999959597099	WITHOUT_CLASSIFICATION	4.040290125660008E-9	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999994075965689	WITHOUT_CLASSIFICATION	5.924034310191235E-7	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999983539692602	WITHOUT_CLASSIFICATION	1.6460307399104567E-6	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999987156436045	WITHOUT_CLASSIFICATION	1.284356395526459E-6	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999998834624749	WITHOUT_CLASSIFICATION	1.1653752508813218E-7	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999998861673005	WITHOUT_CLASSIFICATION	1.1383269957510159E-7	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999981967845718	WITHOUT_CLASSIFICATION	1.803215428251333E-6	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999998974499953	WITHOUT_CLASSIFICATION	1.0255000470495465E-7	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999999513520031	WITHOUT_CLASSIFICATION	4.8647996939489093E-8	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999993816008707	WITHOUT_CLASSIFICATION	6.183991293544382E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999999892764505	WITHOUT_CLASSIFICATION	1.0723549503150865E-7	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999999734967852	WITHOUT_CLASSIFICATION	2.6503214789886E-8	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999844270029	WITHOUT_CLASSIFICATION	1.5572997174890554E-8	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999997342683866	WITHOUT_CLASSIFICATION	2.6573161343957385E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999758630141876	WITHOUT_CLASSIFICATION	2.4136985812382356E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999748358456786	WITHOUT_CLASSIFICATION	2.5164154321384706E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999811305673231	WITHOUT_CLASSIFICATION	1.8869432676861447E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999999212882501	WITHOUT_CLASSIFICATION	7.871174996227916E-8	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999310971102	WITHOUT_CLASSIFICATION	6.890288983537981E-8	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999998635792237	WITHOUT_CLASSIFICATION	1.3642077626404832E-7	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999979450777656	WITHOUT_CLASSIFICATION	2.0549222342452486E-6	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999558667296	WITHOUT_CLASSIFICATION	4.413327043568124E-8	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999964395188783	WITHOUT_CLASSIFICATION	3.560481121573933E-6	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999928801164218	WITHOUT_CLASSIFICATION	7.119883578089808E-6	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999921739214	WITHOUT_CLASSIFICATION	7.82607853566842E-9	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.999997210610994	WITHOUT_CLASSIFICATION	2.7893890060104067E-6	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999840605267	WITHOUT_CLASSIFICATION	1.593947330139213E-8	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999993457727046	WITHOUT_CLASSIFICATION	6.542272954487999E-7	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999993457727046	WITHOUT_CLASSIFICATION	6.542272954487999E-7	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.999999837532478	WITHOUT_CLASSIFICATION	1.6246752189316663E-7	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.99999972780124	WITHOUT_CLASSIFICATION	2.721987599792114E-7	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999999136439176	WITHOUT_CLASSIFICATION	8.635608236467757E-8	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999990082455754	WITHOUT_CLASSIFICATION	9.917544245279758E-7	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999908134768	WITHOUT_CLASSIFICATION	9.186523249759263E-9	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999931376384	WITHOUT_CLASSIFICATION	6.862361573687929E-9	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999994026291561	WITHOUT_CLASSIFICATION	5.973708439707247E-7	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999998422520747	WITHOUT_CLASSIFICATION	1.5774792529073957E-7	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.999999397527064	WITHOUT_CLASSIFICATION	6.024729360182802E-7	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999840220162	WITHOUT_CLASSIFICATION	1.5977983745412595E-8	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999994680949252	WITHOUT_CLASSIFICATION	5.319050746764109E-7	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999818909122	WITHOUT_CLASSIFICATION	1.8109087851917192E-8	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999994764973729	WITHOUT_CLASSIFICATION	5.235026271103613E-7	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999996904293359	WITHOUT_CLASSIFICATION	3.0957066407503337E-7	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999901192181	WITHOUT_CLASSIFICATION	9.88078182215939E-9	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999999303388409	WITHOUT_CLASSIFICATION	6.966115904116006E-8	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999998875309105	WITHOUT_CLASSIFICATION	1.1246908957986702E-7	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999999713412331	WITHOUT_CLASSIFICATION	2.8658766990401767E-8	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999992866316896	WITHOUT_CLASSIFICATION	7.133683105210816E-7	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999998922325685	WITHOUT_CLASSIFICATION	1.0776743150150333E-7	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999533757387594	WITHOUT_CLASSIFICATION	4.662426124059064E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999825856401459	WITHOUT_CLASSIFICATION	1.7414359854208673E-5	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999999926697166	WITHOUT_CLASSIFICATION	7.330283361156532E-9	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999999950021398	WITHOUT_CLASSIFICATION	4.997860168157682E-9	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999916250701925	WITHOUT_CLASSIFICATION	8.37492980760382E-6	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999938147238	WITHOUT_CLASSIFICATION	6.185276235437703E-9	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999369405056	WITHOUT_CLASSIFICATION	6.30594943829352E-8	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999989792475585	WITHOUT_CLASSIFICATION	1.0207524414340557E-6	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999998753789401	WITHOUT_CLASSIFICATION	1.2462105990584326E-7	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999993455916819	WITHOUT_CLASSIFICATION	6.544083181007414E-7	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999998907178069	WITHOUT_CLASSIFICATION	1.0928219301508381E-7	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.999999678375981	WITHOUT_CLASSIFICATION	3.2162401895247707E-7	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999963367585	WITHOUT_CLASSIFICATION	3.6632415125599873E-9	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999999786318072	WITHOUT_CLASSIFICATION	2.1368192738003037E-8	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999634801893	WITHOUT_CLASSIFICATION	3.6519810676047665E-8	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999941323845	WITHOUT_CLASSIFICATION	5.867615393474302E-9	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999862243858567	WITHOUT_CLASSIFICATION	1.377561414322395E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999836555271122	WITHOUT_CLASSIFICATION	1.63444728877639E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.999999529517353	WITHOUT_CLASSIFICATION	4.70482646877088E-7	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999854402887903	WITHOUT_CLASSIFICATION	1.4559711209780195E-5	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999931014890454	WITHOUT_CLASSIFICATION	6.8985109546728896E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999998792101061	WITHOUT_CLASSIFICATION	1.2078989387342953E-7	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999986986850989	WITHOUT_CLASSIFICATION	1.3013149010894368E-6	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.999999962086389	WITHOUT_CLASSIFICATION	3.791361099804145E-8	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999987368139194	WITHOUT_CLASSIFICATION	1.2631860806389715E-6	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999998745521186	WITHOUT_CLASSIFICATION	1.254478815049107E-7	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999074335958	WITHOUT_CLASSIFICATION	9.256640409037498E-8	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999999802396072	WITHOUT_CLASSIFICATION	1.976039277474635E-8	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9999757157517364	WITHOUT_CLASSIFICATION	2.428424826369029E-5	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999996457389634	WITHOUT_CLASSIFICATION	3.542610365410696E-7	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999889993082	WITHOUT_CLASSIFICATION	1.1000691858259801E-8	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999997796666115	WITHOUT_CLASSIFICATION	2.2033338847832313E-7	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999712802242	WITHOUT_CLASSIFICATION	2.871977587123005E-8	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.999999996782953	WITHOUT_CLASSIFICATION	3.2170469210448872E-9	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.99999993900897	WITHOUT_CLASSIFICATION	6.099103006568176E-8	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999999830402877	WITHOUT_CLASSIFICATION	1.6959712307663005E-8	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999999851435227	WITHOUT_CLASSIFICATION	1.485647734652454E-8	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998293898736	WITHOUT_CLASSIFICATION	1.7061012630820644E-7	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999999826517477	WITHOUT_CLASSIFICATION	1.7348252267966726E-8	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999863140429	WITHOUT_CLASSIFICATION	1.3685957124619228E-8	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999999834316815	WITHOUT_CLASSIFICATION	1.6568318505191465E-8	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.999999689764435	WITHOUT_CLASSIFICATION	3.1023556501361945E-7	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999998366244603	WITHOUT_CLASSIFICATION	1.6337553968819306E-7	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999719189816	WITHOUT_CLASSIFICATION	2.808101835460776E-8	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999998622704639	WITHOUT_CLASSIFICATION	1.3772953616487048E-7	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999790406231631	WITHOUT_CLASSIFICATION	2.095937683687227E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999893797462063	WITHOUT_CLASSIFICATION	1.0620253793731258E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999988661222478	WITHOUT_CLASSIFICATION	1.1338777521972033E-6	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999975284915106	WITHOUT_CLASSIFICATION	2.4715084894192463E-6	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999997803055035	WITHOUT_CLASSIFICATION	2.1969449647169614E-7	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999992081353817	WITHOUT_CLASSIFICATION	7.918646183235775E-7	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999997362211608	WITHOUT_CLASSIFICATION	2.637788392458864E-7	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999440682932	WITHOUT_CLASSIFICATION	5.593170688793908E-8	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999769496358862	WITHOUT_CLASSIFICATION	2.305036411367873E-5	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.999972842181276	WITHOUT_CLASSIFICATION	2.715781872402405E-5	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9999797288309031	WITHOUT_CLASSIFICATION	2.0271169096896712E-5	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9999748494322546	WITHOUT_CLASSIFICATION	2.5150567745481008E-5	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9999693134318913	WITHOUT_CLASSIFICATION	3.0686568108572417E-5	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9999795284800322	WITHOUT_CLASSIFICATION	2.047151996781668E-5	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9999799705238205	WITHOUT_CLASSIFICATION	2.0029476179574535E-5	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9999795915864127	WITHOUT_CLASSIFICATION	2.0408413587301602E-5	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9999797026423655	WITHOUT_CLASSIFICATION	2.029735763458642E-5	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9999774696384703	WITHOUT_CLASSIFICATION	2.2530361529627578E-5	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9999763238839332	WITHOUT_CLASSIFICATION	2.3676116066750075E-5	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.999972968216045	WITHOUT_CLASSIFICATION	2.703178395497715E-5	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9999683373990667	WITHOUT_CLASSIFICATION	3.166260093336805E-5	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9999628412307939	WITHOUT_CLASSIFICATION	3.715876920605132E-5	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.99997363302829	WITHOUT_CLASSIFICATION	2.636697170997551E-5	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9999728568837275	WITHOUT_CLASSIFICATION	2.7143116272391367E-5	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9999732486708166	WITHOUT_CLASSIFICATION	2.6751329183434297E-5	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.9999693565941833	WITHOUT_CLASSIFICATION	3.064340581670882E-5	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.9999552506618015	WITHOUT_CLASSIFICATION	4.474933819848182E-5	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9999678657836368	WITHOUT_CLASSIFICATION	3.2134216363059475E-5	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999999185649285	WITHOUT_CLASSIFICATION	8.14350715249631E-8	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999941463472767	WITHOUT_CLASSIFICATION	5.853652723299784E-6	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999996529413572	WITHOUT_CLASSIFICATION	3.4705864274314836E-7	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999997968862653	WITHOUT_CLASSIFICATION	2.031137347461475E-7	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999994415137077	WITHOUT_CLASSIFICATION	5.584862923212761E-7	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999999927630115	WITHOUT_CLASSIFICATION	7.236988430070154E-9	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999999916892802	WITHOUT_CLASSIFICATION	8.310719715523673E-9	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999994602630367	WITHOUT_CLASSIFICATION	5.397369632706509E-7	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999229724388	WITHOUT_CLASSIFICATION	7.702756123428782E-8	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999995390732211	WITHOUT_CLASSIFICATION	4.609267788265716E-7	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9411508018922135	WITHOUT_CLASSIFICATION	0.05884919810778647	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999997878443436	WITHOUT_CLASSIFICATION	2.1215565631299898E-7	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999953879783928	WITHOUT_CLASSIFICATION	4.612021607140001E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999997203205966	WITHOUT_CLASSIFICATION	2.796794034399636E-7	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999997203205966	WITHOUT_CLASSIFICATION	2.796794034399636E-7	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999999765601648	WITHOUT_CLASSIFICATION	2.3439835158417257E-8	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999936168958161	WITHOUT_CLASSIFICATION	6.383104183845369E-6	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999807976538	WITHOUT_CLASSIFICATION	1.9202346210795177E-8	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.999999722798409	WITHOUT_CLASSIFICATION	2.772015910163417E-7	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999999759700079	WITHOUT_CLASSIFICATION	2.402999213795944E-8	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999989674619186	WITHOUT_CLASSIFICATION	1.0325380813732612E-6	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999989570846686	WITHOUT_CLASSIFICATION	1.0429153313647246E-6	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999999483122304	WITHOUT_CLASSIFICATION	5.1687769552722835E-8	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999999197010435	WITHOUT_CLASSIFICATION	8.029895656252563E-8	TEST
// base	WITHOUT_CLASSIFICATION	0.99999925906231	WITHOUT_CLASSIFICATION	7.409376899593607E-7	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.999759172125572	WITHOUT_CLASSIFICATION	2.4082787442806171E-4	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999786583907	WITHOUT_CLASSIFICATION	2.134160932375403E-8	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.999995459080099	WITHOUT_CLASSIFICATION	4.540919900990021E-6	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999989528342669	WITHOUT_CLASSIFICATION	1.0471657330385116E-6	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.999999924126797	WITHOUT_CLASSIFICATION	7.587320300967054E-8	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999957532249159	WITHOUT_CLASSIFICATION	4.246775084254538E-6	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999994154366485	WITHOUT_CLASSIFICATION	5.845633515795699E-7	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999379202221	WITHOUT_CLASSIFICATION	6.207977786484517E-8	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999993699368819	WITHOUT_CLASSIFICATION	6.300631181630519E-7	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999954145503043	WITHOUT_CLASSIFICATION	4.585449695811647E-6	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.999999723244806	WITHOUT_CLASSIFICATION	2.767551940173883E-7	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.999999998531803	WITHOUT_CLASSIFICATION	1.4681970419172622E-9	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.999998283608941	WITHOUT_CLASSIFICATION	1.7163910589373065E-6	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.999999339770775	WITHOUT_CLASSIFICATION	6.602292248533174E-7	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999492481644	WITHOUT_CLASSIFICATION	5.07518356007453E-8	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999993431429484	WITHOUT_CLASSIFICATION	6.568570515635122E-7	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999999405895562	WITHOUT_CLASSIFICATION	5.941044373055674E-8	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999998567075404	WITHOUT_CLASSIFICATION	1.4329245959179122E-7	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999983967633193	WITHOUT_CLASSIFICATION	1.6032366807083758E-6	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.999998279897566	WITHOUT_CLASSIFICATION	1.7201024340161252E-6	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999992074983545	WITHOUT_CLASSIFICATION	7.92501645529875E-7	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999994867533468	WITHOUT_CLASSIFICATION	5.132466532051663E-7	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999970088358696	WITHOUT_CLASSIFICATION	2.9911641302898313E-6	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999979913128486	WITHOUT_CLASSIFICATION	2.0086871514436153E-6	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999997405952393	WITHOUT_CLASSIFICATION	2.5940476066795866E-7	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999997486282599	WITHOUT_CLASSIFICATION	2.51371740172732E-7	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999991998455093	WITHOUT_CLASSIFICATION	8.001544907619946E-7	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999843174262	WITHOUT_CLASSIFICATION	1.568257381096405E-8	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999999232572191	WITHOUT_CLASSIFICATION	7.674278085316608E-8	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999937537296	WITHOUT_CLASSIFICATION	6.2462703599402305E-9	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999997998906143	WITHOUT_CLASSIFICATION	2.001093857809871E-7	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.99999995102484	WITHOUT_CLASSIFICATION	4.897516009692919E-8	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999999283567734	WITHOUT_CLASSIFICATION	7.1643226536804E-8	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999981956513156	WITHOUT_CLASSIFICATION	1.8043486844063344E-6	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999981956513156	WITHOUT_CLASSIFICATION	1.8043486844063344E-6	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999999623800576	WITHOUT_CLASSIFICATION	3.7619942341313365E-8	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999998368509245	WITHOUT_CLASSIFICATION	1.631490754466273E-7	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999998697318103	WITHOUT_CLASSIFICATION	1.3026818966730755E-7	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999996532534522	WITHOUT_CLASSIFICATION	3.4674654780524095E-7	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999897148378343	WITHOUT_CLASSIFICATION	1.0285162165728027E-5	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999998693013874	WITHOUT_CLASSIFICATION	1.3069861259356675E-7	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999999170963991	WITHOUT_CLASSIFICATION	8.29036008478475E-8	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.999979465223877	WITHOUT_CLASSIFICATION	2.0534776122984054E-5	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.999999683708509	WITHOUT_CLASSIFICATION	3.162914910005054E-7	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999994089792976	WITHOUT_CLASSIFICATION	5.910207023725478E-7	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999995571864169	WITHOUT_CLASSIFICATION	4.4281358311340845E-7	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999998225695123	WITHOUT_CLASSIFICATION	1.7743048770714026E-7	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999933364323604	WITHOUT_CLASSIFICATION	6.663567639633642E-6	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999993631436225	WITHOUT_CLASSIFICATION	6.368563775090959E-7	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9992443322635296	WITHOUT_CLASSIFICATION	7.556677364705211E-4	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999989087289476	WITHOUT_CLASSIFICATION	1.091271052370568E-6	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999845639001459	WITHOUT_CLASSIFICATION	1.543609985416654E-5	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.999999806061437	WITHOUT_CLASSIFICATION	1.939385630389344E-7	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999972937332594	WITHOUT_CLASSIFICATION	2.7062667405936137E-6	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999740684087527	WITHOUT_CLASSIFICATION	2.593159124722533E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999612213453	WITHOUT_CLASSIFICATION	3.87786546863474E-8	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999612213453	WITHOUT_CLASSIFICATION	3.87786546863474E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998584467021	WITHOUT_CLASSIFICATION	1.415532979738764E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998584467021	WITHOUT_CLASSIFICATION	1.415532979738764E-7	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999998999254831	WITHOUT_CLASSIFICATION	1.0007451688390432E-7	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999997148664399	WITHOUT_CLASSIFICATION	2.851335601026111E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999988861484068	WITHOUT_CLASSIFICATION	1.1138515932373023E-6	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999996862491725	WITHOUT_CLASSIFICATION	3.1375082760929075E-7	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999995936216162	WITHOUT_CLASSIFICATION	4.0637838391788125E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999705932081	WITHOUT_CLASSIFICATION	2.940679192529454E-8	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999975135240684	WITHOUT_CLASSIFICATION	2.486475931469436E-6	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999993057072343	WITHOUT_CLASSIFICATION	6.942927656757241E-7	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999996315280112	WITHOUT_CLASSIFICATION	3.6847198872990494E-7	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999997140444923	WITHOUT_CLASSIFICATION	2.859555077213653E-7	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999990878963786	WITHOUT_CLASSIFICATION	9.121036213768305E-7	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999999171775448	WITHOUT_CLASSIFICATION	8.282245520497742E-8	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999998474078164	WITHOUT_CLASSIFICATION	1.5259218353558825E-7	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.999910120792271	WITHOUT_CLASSIFICATION	8.987920772897796E-5	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999998011860377	WITHOUT_CLASSIFICATION	1.988139623116939E-7	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999994380139333	WITHOUT_CLASSIFICATION	5.619860666016719E-7	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999962920952539	WITHOUT_CLASSIFICATION	3.7079047460371083E-6	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999997169015526	WITHOUT_CLASSIFICATION	2.830984473305619E-7	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9999949735579915	WITHOUT_CLASSIFICATION	5.026442008457944E-6	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999990070608004	WITHOUT_CLASSIFICATION	9.929391996892039E-7	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999993245895294	WITHOUT_CLASSIFICATION	6.754104706012898E-7	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999999628097151	WITHOUT_CLASSIFICATION	3.719028483462373E-8	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999996611054934	WITHOUT_CLASSIFICATION	3.3889450659213964E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999999892764505	WITHOUT_CLASSIFICATION	1.0723549503150865E-7	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999931376384	WITHOUT_CLASSIFICATION	6.862361573687929E-9	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999998535174536	WITHOUT_CLASSIFICATION	1.46482546471012E-7	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999860456135	WITHOUT_CLASSIFICATION	1.3954386630988065E-8	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999999406253516	WITHOUT_CLASSIFICATION	5.937464840323094E-8	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999995716535822	WITHOUT_CLASSIFICATION	4.283464178026804E-7	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999999963581211	WITHOUT_CLASSIFICATION	3.6418789049866774E-8	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999999963581211	WITHOUT_CLASSIFICATION	3.6418789049866774E-8	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999911284755	WITHOUT_CLASSIFICATION	8.871524557023274E-9	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999998683249367	WITHOUT_CLASSIFICATION	1.316750633304263E-7	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999569957104	WITHOUT_CLASSIFICATION	4.300428955452322E-8	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999999293999287	WITHOUT_CLASSIFICATION	7.060007132522882E-8	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.999999999159451	WITHOUT_CLASSIFICATION	8.405488769927851E-10	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999999489779985	WITHOUT_CLASSIFICATION	5.102200151307929E-8	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999998860042475	WITHOUT_CLASSIFICATION	1.1399575246410789E-7	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.999999998666129	WITHOUT_CLASSIFICATION	1.333870970764719E-9	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999996645169136	WITHOUT_CLASSIFICATION	3.35483086500558E-7	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999991407211588	WITHOUT_CLASSIFICATION	8.59278841206322E-7	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999996049195932	WITHOUT_CLASSIFICATION	3.9508040682122804E-7	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999999916570723	WITHOUT_CLASSIFICATION	8.342927702575927E-9	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999995914336659	WITHOUT_CLASSIFICATION	4.085663341064292E-7	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.999999120556048	WITHOUT_CLASSIFICATION	8.794439519529418E-7	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999514139896	WITHOUT_CLASSIFICATION	4.8586010400151254E-8	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996410874991	WITHOUT_CLASSIFICATION	3.5891250104538E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999983551511347	WITHOUT_CLASSIFICATION	1.6448488652538522E-6	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999999247688359	WITHOUT_CLASSIFICATION	7.523116414311667E-8	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999999877516063	WITHOUT_CLASSIFICATION	1.2248393789497441E-8	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999359637776705	WITHOUT_CLASSIFICATION	6.403622232962504E-5	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999998306608235	WITHOUT_CLASSIFICATION	1.6933917642355439E-7	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999992681117329	WITHOUT_CLASSIFICATION	7.318882670755362E-7	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999855121585808	WITHOUT_CLASSIFICATION	1.4487841419321964E-5	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999993353132235	WITHOUT_CLASSIFICATION	6.646867765619968E-7	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999998053948612	WITHOUT_CLASSIFICATION	1.9460513890169499E-7	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999996915096117	WITHOUT_CLASSIFICATION	3.0849038831301574E-7	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999998300969576	WITHOUT_CLASSIFICATION	1.6990304245858242E-7	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999991919805545	WITHOUT_CLASSIFICATION	8.080194454953453E-7	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999506320416	WITHOUT_CLASSIFICATION	4.9367958443046065E-8	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.999999313500875	WITHOUT_CLASSIFICATION	6.864991249818833E-7	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999999188610845	WITHOUT_CLASSIFICATION	8.113891547610782E-8	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999992376625094	WITHOUT_CLASSIFICATION	7.623374906431344E-7	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999989294066487	WITHOUT_CLASSIFICATION	1.0705933512365783E-6	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9999992598249419	WITHOUT_CLASSIFICATION	7.401750580033428E-7	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999977849512368	WITHOUT_CLASSIFICATION	2.2150487632089486E-6	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.999999987738401	WITHOUT_CLASSIFICATION	1.2261598964976803E-8	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999902188751569	WITHOUT_CLASSIFICATION	9.781124843033872E-6	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999963918173798	WITHOUT_CLASSIFICATION	3.608182620328964E-6	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999999475362624	WITHOUT_CLASSIFICATION	5.246373762304482E-8	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999996683889346	WITHOUT_CLASSIFICATION	3.3161106531023946E-7	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999856280533	WITHOUT_CLASSIFICATION	1.4371946762817944E-8	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999999920740554	WITHOUT_CLASSIFICATION	7.925944641370394E-9	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999997122648401	WITHOUT_CLASSIFICATION	2.8773515992627195E-7	TEST
// while	WITHOUT_CLASSIFICATION	0.9999984524289838	WITHOUT_CLASSIFICATION	1.5475710162945175E-6	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999503095245167	WITHOUT_CLASSIFICATION	4.969047548329E-5	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999999726468376	WITHOUT_CLASSIFICATION	2.735316238259731E-8	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999998587599723	WITHOUT_CLASSIFICATION	1.4124002765542063E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999849776252	WITHOUT_CLASSIFICATION	1.5022374841021962E-8	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999999422059698	WITHOUT_CLASSIFICATION	5.7794030347983215E-8	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999997925579507	WITHOUT_CLASSIFICATION	2.0744204938634846E-7	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999798826843138	WITHOUT_CLASSIFICATION	2.011731568616455E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999811350895089	WITHOUT_CLASSIFICATION	1.8864910491019152E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999787385912096	WITHOUT_CLASSIFICATION	2.1261408790441996E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999851291237201	WITHOUT_CLASSIFICATION	1.4870876279931244E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999954625025423	WITHOUT_CLASSIFICATION	4.5374974576779505E-6	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999893513967066	WITHOUT_CLASSIFICATION	1.0648603293363888E-5	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999947000571949	WITHOUT_CLASSIFICATION	5.299942805056923E-6	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999998996084323	WITHOUT_CLASSIFICATION	1.0039156770339643E-7	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999766516452767	WITHOUT_CLASSIFICATION	2.334835472333683E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999998908462898	WITHOUT_CLASSIFICATION	1.0915371019287375E-7	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.999945776285483	WITHOUT_CLASSIFICATION	5.422371451702489E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999798826843138	WITHOUT_CLASSIFICATION	2.011731568616455E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999787385912096	WITHOUT_CLASSIFICATION	2.1261408790441996E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999811350895089	WITHOUT_CLASSIFICATION	1.8864910491019152E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999790843700866	WITHOUT_CLASSIFICATION	2.0915629913430216E-5	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999865110326576	WITHOUT_CLASSIFICATION	1.348896734243889E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999958047657738	WITHOUT_CLASSIFICATION	4.195234226253489E-6	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999998272811222	WITHOUT_CLASSIFICATION	1.727188777878526E-7	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999998543343801	WITHOUT_CLASSIFICATION	1.456656198532337E-7	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999992453074068	WITHOUT_CLASSIFICATION	7.546925932263752E-7	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999989813230736	WITHOUT_CLASSIFICATION	1.0186769263726456E-6	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999997217058687	WITHOUT_CLASSIFICATION	2.782941313098241E-7	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.999999592212393	WITHOUT_CLASSIFICATION	4.077876069743401E-7	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999999616984993	WITHOUT_CLASSIFICATION	3.830150077489086E-8	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999999782788933	WITHOUT_CLASSIFICATION	2.1721106725283962E-8	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999999840278463	WITHOUT_CLASSIFICATION	1.597215374900039E-8	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999992483397182	WITHOUT_CLASSIFICATION	7.51660281735706E-7	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999993843043449	WITHOUT_CLASSIFICATION	6.156956550938032E-7	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999999830442878	WITHOUT_CLASSIFICATION	1.6955712230839723E-8	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999994986181351	WITHOUT_CLASSIFICATION	5.013818649631902E-7	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999996875664359	WITHOUT_CLASSIFICATION	3.1243356413998136E-7	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.999999063530713	WITHOUT_CLASSIFICATION	9.364692870363304E-7	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.999999063530713	WITHOUT_CLASSIFICATION	9.364692870363304E-7	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999997788790183	WITHOUT_CLASSIFICATION	2.211209818979884E-7	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999997602761189	WITHOUT_CLASSIFICATION	2.3972388109203953E-7	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999994940070481	WITHOUT_CLASSIFICATION	5.059929518841816E-7	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999915080935358	WITHOUT_CLASSIFICATION	8.491906464118853E-6	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999997961342124	WITHOUT_CLASSIFICATION	2.0386578755242234E-7	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999999762246323	WITHOUT_CLASSIFICATION	2.3775367754452743E-8	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999999635407053	WITHOUT_CLASSIFICATION	3.645929471826025E-8	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999997221953286	WITHOUT_CLASSIFICATION	2.778046713955858E-7	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999998854815643	WITHOUT_CLASSIFICATION	1.1451843580874275E-7	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999927670676	WITHOUT_CLASSIFICATION	7.232932299258621E-9	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999998739965502	WITHOUT_CLASSIFICATION	1.260034497619499E-7	TEST
//                }	WITHOUT_CLASSIFICATION	0.999997086845799	WITHOUT_CLASSIFICATION	2.913154200952559E-6	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999999168823124	WITHOUT_CLASSIFICATION	8.311768759404653E-8	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999999149970132	WITHOUT_CLASSIFICATION	8.500298669962404E-8	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.999999883648673	WITHOUT_CLASSIFICATION	1.163513270585895E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999997741114887	WITHOUT_CLASSIFICATION	2.2588851124302587E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999999125132103	WITHOUT_CLASSIFICATION	8.748678961140644E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999128964184	WITHOUT_CLASSIFICATION	8.710358158318044E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999128964184	WITHOUT_CLASSIFICATION	8.710358158318044E-8	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9999987697893215	WITHOUT_CLASSIFICATION	1.2302106786168175E-6	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999981950317224	WITHOUT_CLASSIFICATION	1.8049682776104836E-6	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999870266576175	WITHOUT_CLASSIFICATION	1.2973342382553493E-5	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.999996854635603	WITHOUT_CLASSIFICATION	3.145364397110276E-6	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999999700590946	WITHOUT_CLASSIFICATION	2.994090537983755E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999128964184	WITHOUT_CLASSIFICATION	8.710358158318044E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999128964184	WITHOUT_CLASSIFICATION	8.710358158318044E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999939654768	WITHOUT_CLASSIFICATION	6.03452319210335E-9	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999939654768	WITHOUT_CLASSIFICATION	6.03452319210335E-9	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999984032817284	WITHOUT_CLASSIFICATION	1.5967182716116368E-6	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999961194597504	WITHOUT_CLASSIFICATION	3.8805402495019654E-6	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999999669415613	WITHOUT_CLASSIFICATION	3.30584386290686E-8	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999999251533055	WITHOUT_CLASSIFICATION	7.484669454309727E-8	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999847449816	WITHOUT_CLASSIFICATION	1.52550183674909E-8	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999847449816	WITHOUT_CLASSIFICATION	1.52550183674909E-8	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999999181999802	WITHOUT_CLASSIFICATION	8.1800019691321E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999998130974596	WITHOUT_CLASSIFICATION	1.8690254041211086E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999995379551812	WITHOUT_CLASSIFICATION	4.620448187990042E-6	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.999999760745559	WITHOUT_CLASSIFICATION	2.392544410438223E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999937763433	WITHOUT_CLASSIFICATION	6.223656703023114E-9	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.999999646556835	WITHOUT_CLASSIFICATION	3.5344316496107334E-7	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.99999955200588	WITHOUT_CLASSIFICATION	4.4799412010639437E-7	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999999112227721	WITHOUT_CLASSIFICATION	8.877722790169359E-8	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999997184436331	WITHOUT_CLASSIFICATION	2.8155636689050293E-7	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999877443921	WITHOUT_CLASSIFICATION	1.2255607842758082E-8	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999927920233832	WITHOUT_CLASSIFICATION	7.207976616853065E-6	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999999012470795	WITHOUT_CLASSIFICATION	9.875292055298792E-8	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999991904700403	WITHOUT_CLASSIFICATION	8.095299597118644E-7	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999458911408	WITHOUT_CLASSIFICATION	5.4108859201818156E-8	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999997741114887	WITHOUT_CLASSIFICATION	2.2588851124302587E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999128964184	WITHOUT_CLASSIFICATION	8.710358158318044E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999939654768	WITHOUT_CLASSIFICATION	6.03452319210335E-9	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.999999646556835	WITHOUT_CLASSIFICATION	3.5344316496107334E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999995757270574	WITHOUT_CLASSIFICATION	4.2427294261394187E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999995757270574	WITHOUT_CLASSIFICATION	4.2427294261394187E-7	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999997516102453	WITHOUT_CLASSIFICATION	2.483897546411893E-7	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999277373156	WITHOUT_CLASSIFICATION	7.226268433296937E-8	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999934787376	WITHOUT_CLASSIFICATION	6.521262386305973E-9	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999964167982	WITHOUT_CLASSIFICATION	3.5832018454845777E-9	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.999999101940944	WITHOUT_CLASSIFICATION	8.98059055973265E-7	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999998937052678	WITHOUT_CLASSIFICATION	1.0629473216593014E-7	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.999999738170558	WITHOUT_CLASSIFICATION	2.6182944209247074E-7	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999983859372362	WITHOUT_CLASSIFICATION	1.6140627637480983E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999930234762	WITHOUT_CLASSIFICATION	6.976523835216006E-9	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.999999946400684	WITHOUT_CLASSIFICATION	5.359931597880914E-8	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999995021185821	WITHOUT_CLASSIFICATION	4.97881417906443E-7	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999935479558	WITHOUT_CLASSIFICATION	6.452044189171435E-9	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999999429277685	WITHOUT_CLASSIFICATION	5.7072231568863047E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999999125132103	WITHOUT_CLASSIFICATION	8.748678961140644E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999939654768	WITHOUT_CLASSIFICATION	6.03452319210335E-9	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999998130974596	WITHOUT_CLASSIFICATION	1.8690254041211086E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999995379551812	WITHOUT_CLASSIFICATION	4.620448187990042E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999995379551812	WITHOUT_CLASSIFICATION	4.620448187990042E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999937763433	WITHOUT_CLASSIFICATION	6.223656703023114E-9	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.999999646556835	WITHOUT_CLASSIFICATION	3.5344316496107334E-7	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.999999646556835	WITHOUT_CLASSIFICATION	3.5344316496107334E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999995757270574	WITHOUT_CLASSIFICATION	4.2427294261394187E-7	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999994057177507	WITHOUT_CLASSIFICATION	5.942822493198845E-7	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999981828006447	WITHOUT_CLASSIFICATION	1.8171993552507072E-6	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999292230521	WITHOUT_CLASSIFICATION	7.077694793561144E-8	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999902147401275	WITHOUT_CLASSIFICATION	9.785259872517567E-6	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999995730811728	WITHOUT_CLASSIFICATION	4.269188272737441E-7	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999676004005075	WITHOUT_CLASSIFICATION	3.239959949246574E-5	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999999029107164	WITHOUT_CLASSIFICATION	9.70892835269941E-8	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999894249898	WITHOUT_CLASSIFICATION	1.057501018163017E-8	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999999258135357	WITHOUT_CLASSIFICATION	7.418646425500177E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999998130974596	WITHOUT_CLASSIFICATION	1.8690254041211086E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999995379551812	WITHOUT_CLASSIFICATION	4.620448187990042E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999995379551812	WITHOUT_CLASSIFICATION	4.620448187990042E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999937763433	WITHOUT_CLASSIFICATION	6.223656703023114E-9	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999983859372362	WITHOUT_CLASSIFICATION	1.6140627637480983E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.999999946400684	WITHOUT_CLASSIFICATION	5.359931597880914E-8	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9984373725267889	WITHOUT_CLASSIFICATION	0.0015626274732110765	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999998223353628	WITHOUT_CLASSIFICATION	1.776646371877026E-7	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999964902259025	WITHOUT_CLASSIFICATION	3.509774097416521E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999964902259025	WITHOUT_CLASSIFICATION	3.509774097416521E-6	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999998659204917	WITHOUT_CLASSIFICATION	1.340795082478431E-7	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999996216286199	WITHOUT_CLASSIFICATION	3.783713802012154E-7	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999990978753256	WITHOUT_CLASSIFICATION	9.021246745056942E-7	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999421455443	WITHOUT_CLASSIFICATION	5.7854455709378016E-8	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999997845873052	WITHOUT_CLASSIFICATION	2.1541269491664876E-7	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999997845873052	WITHOUT_CLASSIFICATION	2.1541269491664876E-7	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999998979267967	WITHOUT_CLASSIFICATION	1.0207320333959294E-7	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999998979267967	WITHOUT_CLASSIFICATION	1.0207320333959294E-7	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999730794247	WITHOUT_CLASSIFICATION	2.692057522038534E-8	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999730794247	WITHOUT_CLASSIFICATION	2.692057522038534E-8	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999992470853084	WITHOUT_CLASSIFICATION	7.52914691553389E-7	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.99999978406497	WITHOUT_CLASSIFICATION	2.159350299339866E-7	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999976076425456	WITHOUT_CLASSIFICATION	2.3923574543736226E-6	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.999999960230493	WITHOUT_CLASSIFICATION	3.976950711764461E-8	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999999873855137	WITHOUT_CLASSIFICATION	1.2614486430136886E-8	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999978911445662	WITHOUT_CLASSIFICATION	2.1088554337880945E-6	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999992946829458	WITHOUT_CLASSIFICATION	7.053170542965439E-7	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999987373715696	WITHOUT_CLASSIFICATION	1.262628430400752E-6	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.99997983495111	WITHOUT_CLASSIFICATION	2.0165048890064032E-5	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999786052477408	WITHOUT_CLASSIFICATION	2.139475225904615E-5	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999999787871339	WITHOUT_CLASSIFICATION	2.1212866094473125E-8	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999999770460813	WITHOUT_CLASSIFICATION	2.2953918699732497E-8	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999989807420099	WITHOUT_CLASSIFICATION	1.0192579902063988E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999983895438158	WITHOUT_CLASSIFICATION	1.6104561841863398E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999983895438158	WITHOUT_CLASSIFICATION	1.6104561841863398E-6	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999986047186388	WITHOUT_CLASSIFICATION	1.3952813612734526E-6	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999705932081	WITHOUT_CLASSIFICATION	2.940679192529454E-8	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999997699920444	WITHOUT_CLASSIFICATION	2.3000795565098227E-7	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999883233336	WITHOUT_CLASSIFICATION	1.1676666457553643E-8	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999998526128248	WITHOUT_CLASSIFICATION	1.4738717522947453E-7	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.999999561781854	WITHOUT_CLASSIFICATION	4.3821814597430416E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999997905548325	WITHOUT_CLASSIFICATION	2.0944516750942878E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999998360475743	WITHOUT_CLASSIFICATION	1.639524257795834E-7	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999929056401	WITHOUT_CLASSIFICATION	7.094359943107847E-9	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.999999981412067	WITHOUT_CLASSIFICATION	1.8587932886155658E-8	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999674883053	WITHOUT_CLASSIFICATION	3.2511694760321095E-8	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999992927631293	WITHOUT_CLASSIFICATION	7.072368706172311E-7	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999998115365873	WITHOUT_CLASSIFICATION	1.884634126019625E-7	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999987097936544	WITHOUT_CLASSIFICATION	1.2902063455731184E-6	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999859206813707	WITHOUT_CLASSIFICATION	1.4079318629252686E-5	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999983427772785	WITHOUT_CLASSIFICATION	1.6572227215876498E-6	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999996803407246	WITHOUT_CLASSIFICATION	3.196592753728105E-7	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999999398581993	WITHOUT_CLASSIFICATION	6.014180072001592E-8	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998823322838	WITHOUT_CLASSIFICATION	1.176677161534523E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998823322838	WITHOUT_CLASSIFICATION	1.176677161534523E-7	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999999514896454	WITHOUT_CLASSIFICATION	4.8510354496254954E-8	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999993734282714	WITHOUT_CLASSIFICATION	6.265717286116115E-6	TEST
//[]	WITHOUT_CLASSIFICATION	0.999885588931021	WITHOUT_CLASSIFICATION	1.144110689790125E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.999885588931021	WITHOUT_CLASSIFICATION	1.144110689790125E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999976694797704	WITHOUT_CLASSIFICATION	2.330520229519985E-6	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999957285871611	WITHOUT_CLASSIFICATION	4.27141283887953E-6	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999838627780915	WITHOUT_CLASSIFICATION	1.613722190851549E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999871992666786	WITHOUT_CLASSIFICATION	1.2800733321445259E-5	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999997769232303	WITHOUT_CLASSIFICATION	2.2307676969033618E-7	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999814066501	WITHOUT_CLASSIFICATION	1.8593349818908898E-8	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999814066501	WITHOUT_CLASSIFICATION	1.8593349818908898E-8	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999984072312	WITHOUT_CLASSIFICATION	1.5927688399318693E-9	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999996852355079	WITHOUT_CLASSIFICATION	3.1476449216169884E-7	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999999542170284	WITHOUT_CLASSIFICATION	4.5782971635558E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999944731889705	WITHOUT_CLASSIFICATION	5.526811029469697E-6	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.999993734282714	WITHOUT_CLASSIFICATION	6.265717286116115E-6	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999927606600307	WITHOUT_CLASSIFICATION	7.23933996931273E-6	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999985889770103	WITHOUT_CLASSIFICATION	1.411022989756116E-6	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999985889770103	WITHOUT_CLASSIFICATION	1.411022989756116E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999991811860279	WITHOUT_CLASSIFICATION	8.188139720170918E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999991824002	WITHOUT_CLASSIFICATION	8.175997982781707E-9	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999991824002	WITHOUT_CLASSIFICATION	8.175997982781707E-9	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999400246025	WITHOUT_CLASSIFICATION	5.997539751424563E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999400246025	WITHOUT_CLASSIFICATION	5.997539751424563E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999400246025	WITHOUT_CLASSIFICATION	5.997539751424563E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999991824002	WITHOUT_CLASSIFICATION	8.175997982781707E-9	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999991824002	WITHOUT_CLASSIFICATION	8.175997982781707E-9	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999991811860279	WITHOUT_CLASSIFICATION	8.188139720170918E-7	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999999670603	WITHOUT_CLASSIFICATION	3.2939699969171984E-8	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999998492673512	WITHOUT_CLASSIFICATION	1.5073264880081946E-7	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999991835685169	WITHOUT_CLASSIFICATION	8.164314830270411E-7	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999993856455907	WITHOUT_CLASSIFICATION	6.143544093414836E-7	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999877216658	WITHOUT_CLASSIFICATION	1.2278334273763242E-8	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999994151546544	WITHOUT_CLASSIFICATION	5.848453455702298E-7	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999994730585218	WITHOUT_CLASSIFICATION	5.269414781990568E-7	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999596925307	WITHOUT_CLASSIFICATION	4.03074692668726E-8	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999674883053	WITHOUT_CLASSIFICATION	3.2511694760321095E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999991824002	WITHOUT_CLASSIFICATION	8.175997982781707E-9	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999991824002	WITHOUT_CLASSIFICATION	8.175997982781707E-9	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999752915276	WITHOUT_CLASSIFICATION	2.4708472377752376E-8	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999998828997104	WITHOUT_CLASSIFICATION	1.1710028962591414E-7	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999990033841609	WITHOUT_CLASSIFICATION	9.966158390906256E-7	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999999879313949	WITHOUT_CLASSIFICATION	1.2068605105317826E-7	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999998048020928	WITHOUT_CLASSIFICATION	1.9519790710134909E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999258450059	WITHOUT_CLASSIFICATION	7.415499418634342E-8	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999810591257	WITHOUT_CLASSIFICATION	1.8940874206445097E-8	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999998944476896	WITHOUT_CLASSIFICATION	1.0555231049710543E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999999744820225	WITHOUT_CLASSIFICATION	2.5517977498979094E-7	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999392061083	WITHOUT_CLASSIFICATION	6.079389162360318E-8	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999924196268336	WITHOUT_CLASSIFICATION	7.58037316643247E-6	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999963713716914	WITHOUT_CLASSIFICATION	3.6286283087182548E-6	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999998534174577	WITHOUT_CLASSIFICATION	1.465825424300647E-7	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999998181124737	WITHOUT_CLASSIFICATION	1.818875262955606E-7	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.999999995363335	WITHOUT_CLASSIFICATION	4.636665010203193E-9	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999986850086113	WITHOUT_CLASSIFICATION	1.3149913887587257E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999986850086113	WITHOUT_CLASSIFICATION	1.3149913887587257E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999986850086113	WITHOUT_CLASSIFICATION	1.3149913887587257E-6	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999999792078695	WITHOUT_CLASSIFICATION	2.079213047135782E-8	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999922566067	WITHOUT_CLASSIFICATION	7.743393225279265E-9	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999999826438921	WITHOUT_CLASSIFICATION	1.735610788214741E-8	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999999308350965	WITHOUT_CLASSIFICATION	6.916490347833024E-8	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999999154443951	WITHOUT_CLASSIFICATION	8.455560481632839E-8	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999994885821331	WITHOUT_CLASSIFICATION	5.114178669645224E-7	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.999999999490978	WITHOUT_CLASSIFICATION	5.09022107871238E-10	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999993953632399	WITHOUT_CLASSIFICATION	6.046367600683159E-7	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999998993872867	WITHOUT_CLASSIFICATION	1.0061271335262283E-7	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999994365990565	WITHOUT_CLASSIFICATION	5.634009434696736E-7	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999989554756935	WITHOUT_CLASSIFICATION	1.0445243064481645E-6	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999994491574796	WITHOUT_CLASSIFICATION	5.508425202898725E-7	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999984072312	WITHOUT_CLASSIFICATION	1.5927688399318693E-9	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999991824002	WITHOUT_CLASSIFICATION	8.175997982781707E-9	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999991824002	WITHOUT_CLASSIFICATION	8.175997982781707E-9	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999991811860279	WITHOUT_CLASSIFICATION	8.188139720170918E-7	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999994151546544	WITHOUT_CLASSIFICATION	5.848453455702298E-7	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999998828997104	WITHOUT_CLASSIFICATION	1.1710028962591414E-7	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999999879313949	WITHOUT_CLASSIFICATION	1.2068605105317826E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999258450059	WITHOUT_CLASSIFICATION	7.415499418634342E-8	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999990033841609	WITHOUT_CLASSIFICATION	9.966158390906256E-7	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999810591257	WITHOUT_CLASSIFICATION	1.8940874206445097E-8	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999392061083	WITHOUT_CLASSIFICATION	6.079389162360318E-8	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.999999744820225	WITHOUT_CLASSIFICATION	2.5517977498979094E-7	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999963713716914	WITHOUT_CLASSIFICATION	3.6286283087182548E-6	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999999537864632	WITHOUT_CLASSIFICATION	4.621353666683592E-8	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999999170482534	WITHOUT_CLASSIFICATION	8.295174663364537E-8	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.999999785380668	WITHOUT_CLASSIFICATION	2.1461933199808603E-7	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999801161826	WITHOUT_CLASSIFICATION	1.988381745331182E-8	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999999106524711	WITHOUT_CLASSIFICATION	8.934752897364546E-8	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999995213097895	WITHOUT_CLASSIFICATION	4.786902105313405E-7	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999994078236897	WITHOUT_CLASSIFICATION	5.921763104099609E-7	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.999998983976917	WITHOUT_CLASSIFICATION	1.0160230830091165E-6	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.999999874214685	WITHOUT_CLASSIFICATION	1.2578531504052615E-7	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999053047793	WITHOUT_CLASSIFICATION	9.469522070649231E-8	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999999330067484	WITHOUT_CLASSIFICATION	6.699325167897237E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999675250464	WITHOUT_CLASSIFICATION	3.2474953612709435E-8	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999984275875222	WITHOUT_CLASSIFICATION	1.5724124777552707E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999997213345392	WITHOUT_CLASSIFICATION	2.786654607778182E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999929540271	WITHOUT_CLASSIFICATION	7.045972870204158E-9	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999211380898	WITHOUT_CLASSIFICATION	7.886191021850364E-8	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999985338386562	WITHOUT_CLASSIFICATION	1.4661613438733696E-6	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999999302882571	WITHOUT_CLASSIFICATION	6.971174283743207E-8	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999999992250581	WITHOUT_CLASSIFICATION	7.749418990996129E-9	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999999723779381	WITHOUT_CLASSIFICATION	2.7622061791260662E-8	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999999942646396	WITHOUT_CLASSIFICATION	5.7353603961137405E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999541428842	WITHOUT_CLASSIFICATION	4.5857115807209275E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999541428842	WITHOUT_CLASSIFICATION	4.5857115807209275E-8	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999994892845541	WITHOUT_CLASSIFICATION	5.107154459524933E-7	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999905744276	WITHOUT_CLASSIFICATION	9.425572351055854E-9	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999566689853496	WITHOUT_CLASSIFICATION	4.333101465037842E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999566689853496	WITHOUT_CLASSIFICATION	4.333101465037842E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999566689853496	WITHOUT_CLASSIFICATION	4.333101465037842E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999519611248155	WITHOUT_CLASSIFICATION	4.803887518435353E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999519611248155	WITHOUT_CLASSIFICATION	4.803887518435353E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999519611248155	WITHOUT_CLASSIFICATION	4.803887518435353E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999519611248155	WITHOUT_CLASSIFICATION	4.803887518435353E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998498409717127	WITHOUT_CLASSIFICATION	1.5015902828736417E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998498409717127	WITHOUT_CLASSIFICATION	1.5015902828736417E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998498409717127	WITHOUT_CLASSIFICATION	1.5015902828736417E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998731269701958	WITHOUT_CLASSIFICATION	1.2687302980413792E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998731269701958	WITHOUT_CLASSIFICATION	1.2687302980413792E-4	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9998429764008946	WITHOUT_CLASSIFICATION	1.5702359910537342E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999016330524094	WITHOUT_CLASSIFICATION	9.836694759052257E-5	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999905744276	WITHOUT_CLASSIFICATION	9.425572351055854E-9	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999230924008	WITHOUT_CLASSIFICATION	7.690759923484874E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999566689853496	WITHOUT_CLASSIFICATION	4.333101465037842E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999566689853496	WITHOUT_CLASSIFICATION	4.333101465037842E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999519611248155	WITHOUT_CLASSIFICATION	4.803887518435353E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999519611248155	WITHOUT_CLASSIFICATION	4.803887518435353E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999519611248155	WITHOUT_CLASSIFICATION	4.803887518435353E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998498409717127	WITHOUT_CLASSIFICATION	1.5015902828736417E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998498409717127	WITHOUT_CLASSIFICATION	1.5015902828736417E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998731269701958	WITHOUT_CLASSIFICATION	1.2687302980413792E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999016330524094	WITHOUT_CLASSIFICATION	9.836694759052257E-5	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999756127996	WITHOUT_CLASSIFICATION	2.438720036965757E-8	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999756127996	WITHOUT_CLASSIFICATION	2.438720036965757E-8	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999633861834	WITHOUT_CLASSIFICATION	3.661381659983402E-8	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999633861834	WITHOUT_CLASSIFICATION	3.661381659983402E-8	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999989303633242	WITHOUT_CLASSIFICATION	1.0696366758078825E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999989303633242	WITHOUT_CLASSIFICATION	1.0696366758078825E-6	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.999999751013097	WITHOUT_CLASSIFICATION	2.489869030211505E-7	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998534359161	WITHOUT_CLASSIFICATION	1.465640838671408E-7	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998534359161	WITHOUT_CLASSIFICATION	1.465640838671408E-7	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999999658047654	WITHOUT_CLASSIFICATION	3.419523462092911E-8	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999999658047654	WITHOUT_CLASSIFICATION	3.419523462092911E-8	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999998100424273	WITHOUT_CLASSIFICATION	1.8995757271530103E-7	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999999116407804	WITHOUT_CLASSIFICATION	8.835921962759046E-8	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999999116407804	WITHOUT_CLASSIFICATION	8.835921962759046E-8	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999359328469	WITHOUT_CLASSIFICATION	6.406715314029456E-8	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999997308311345	WITHOUT_CLASSIFICATION	2.691688655110198E-7	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999143962812	WITHOUT_CLASSIFICATION	8.560371878479451E-8	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999519611248155	WITHOUT_CLASSIFICATION	4.803887518435353E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999519611248155	WITHOUT_CLASSIFICATION	4.803887518435353E-5	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999359328469	WITHOUT_CLASSIFICATION	6.406715314029456E-8	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999995928160655	WITHOUT_CLASSIFICATION	4.071839343716479E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999995785287928	WITHOUT_CLASSIFICATION	4.2147120710628793E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999995785287928	WITHOUT_CLASSIFICATION	4.2147120710628793E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999995785287928	WITHOUT_CLASSIFICATION	4.2147120710628793E-7	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999999150617649	WITHOUT_CLASSIFICATION	8.493823502440088E-8	TEST
// args	WITHOUT_CLASSIFICATION	0.9999989435474151	WITHOUT_CLASSIFICATION	1.0564525848918259E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999991756000546	WITHOUT_CLASSIFICATION	8.243999453911955E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999991756000546	WITHOUT_CLASSIFICATION	8.243999453911955E-7	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999999100723654	WITHOUT_CLASSIFICATION	8.992763462682981E-8	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999996140491544	WITHOUT_CLASSIFICATION	3.8595084570869593E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.999999602672709	WITHOUT_CLASSIFICATION	3.973272910565229E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999990943603057	WITHOUT_CLASSIFICATION	9.056396944139734E-7	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999998732924474	WITHOUT_CLASSIFICATION	1.267075525937561E-7	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999999899484442	WITHOUT_CLASSIFICATION	1.005155579799673E-7	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999999899484442	WITHOUT_CLASSIFICATION	1.005155579799673E-7	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999999946344748	WITHOUT_CLASSIFICATION	5.365525259048762E-9	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9998639952373536	WITHOUT_CLASSIFICATION	1.3600476264640142E-4	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9998639952373536	WITHOUT_CLASSIFICATION	1.3600476264640142E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999519611248155	WITHOUT_CLASSIFICATION	4.803887518435353E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999995785287928	WITHOUT_CLASSIFICATION	4.2147120710628793E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.9999989435474151	WITHOUT_CLASSIFICATION	1.0564525848918259E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999991756000546	WITHOUT_CLASSIFICATION	8.243999453911955E-7	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999999100723654	WITHOUT_CLASSIFICATION	8.992763462682981E-8	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999996140491544	WITHOUT_CLASSIFICATION	3.8595084570869593E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.999999602672709	WITHOUT_CLASSIFICATION	3.973272910565229E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999990943603057	WITHOUT_CLASSIFICATION	9.056396944139734E-7	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9998639952373536	WITHOUT_CLASSIFICATION	1.3600476264640142E-4	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999996256892271	WITHOUT_CLASSIFICATION	3.743107728974938E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999998184915346	WITHOUT_CLASSIFICATION	1.8150846526519212E-7	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999998210471469	WITHOUT_CLASSIFICATION	1.7895285308039687E-7	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999999571309575	WITHOUT_CLASSIFICATION	4.286904247573102E-8	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999998344757088	WITHOUT_CLASSIFICATION	1.6552429109335673E-7	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999989525810477	WITHOUT_CLASSIFICATION	1.0474189523349925E-6	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998104657432	WITHOUT_CLASSIFICATION	1.8953425685328753E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998104657432	WITHOUT_CLASSIFICATION	1.8953425685328753E-7	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999997581673842	WITHOUT_CLASSIFICATION	2.4183261577385655E-7	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999998402527479	WITHOUT_CLASSIFICATION	1.5974725222040212E-7	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.999999888422376	WITHOUT_CLASSIFICATION	1.1157762404771791E-7	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999998996933201	WITHOUT_CLASSIFICATION	1.0030667978167771E-7	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999999879717949	WITHOUT_CLASSIFICATION	1.2028205090545356E-7	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999999879717949	WITHOUT_CLASSIFICATION	1.2028205090545356E-7	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999998938415292	WITHOUT_CLASSIFICATION	1.0615847077208602E-7	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999998287238404	WITHOUT_CLASSIFICATION	1.7127615956883845E-7	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999998761013231	WITHOUT_CLASSIFICATION	1.2389867692141677E-7	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999998761013231	WITHOUT_CLASSIFICATION	1.2389867692141677E-7	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999992268160944	WITHOUT_CLASSIFICATION	7.731839055657843E-7	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999999377147023	WITHOUT_CLASSIFICATION	6.22852976931583E-8	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999998732924474	WITHOUT_CLASSIFICATION	1.267075525937561E-7	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999998529095473	WITHOUT_CLASSIFICATION	1.4709045272171744E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999387110561	WITHOUT_CLASSIFICATION	6.128894385177471E-8	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996943489127	WITHOUT_CLASSIFICATION	3.056510873526869E-7	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.999999874490811	WITHOUT_CLASSIFICATION	1.255091889264448E-7	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999997582522678	WITHOUT_CLASSIFICATION	2.417477321716794E-7	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999998522408938	WITHOUT_CLASSIFICATION	1.477591060850653E-7	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999812192791	WITHOUT_CLASSIFICATION	1.8780720863627247E-8	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999999515949392	WITHOUT_CLASSIFICATION	4.8405060754293654E-8	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999954911399	WITHOUT_CLASSIFICATION	4.508860109249345E-9	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999954911399	WITHOUT_CLASSIFICATION	4.508860109249345E-9	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999998933447581	WITHOUT_CLASSIFICATION	1.0665524190273132E-7	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999998933447581	WITHOUT_CLASSIFICATION	1.0665524190273132E-7	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999906454901	WITHOUT_CLASSIFICATION	9.354510016477533E-9	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998816217043	WITHOUT_CLASSIFICATION	1.1837829570550629E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998816217043	WITHOUT_CLASSIFICATION	1.1837829570550629E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998816217043	WITHOUT_CLASSIFICATION	1.1837829570550629E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991891295111	WITHOUT_CLASSIFICATION	8.108704888150388E-7	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999999243611188	WITHOUT_CLASSIFICATION	7.563888114680826E-8	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999999243611188	WITHOUT_CLASSIFICATION	7.563888114680826E-8	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999997695217407	WITHOUT_CLASSIFICATION	2.304782592676212E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999999752576967	WITHOUT_CLASSIFICATION	2.474230336624374E-8	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999997262641231	WITHOUT_CLASSIFICATION	2.73735876789064E-7	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999998580447781	WITHOUT_CLASSIFICATION	1.4195522192845853E-7	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999997770113473	WITHOUT_CLASSIFICATION	2.2298865275502055E-7	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999994680025229	WITHOUT_CLASSIFICATION	5.319974770969568E-7	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999331584420975	WITHOUT_CLASSIFICATION	6.684155790250897E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999984275875222	WITHOUT_CLASSIFICATION	1.5724124777552707E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999984275875222	WITHOUT_CLASSIFICATION	1.5724124777552707E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991891295111	WITHOUT_CLASSIFICATION	8.108704888150388E-7	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999997695217407	WITHOUT_CLASSIFICATION	2.304782592676212E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998614925452	WITHOUT_CLASSIFICATION	1.385074548400281E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999999752576967	WITHOUT_CLASSIFICATION	2.474230336624374E-8	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999997262641231	WITHOUT_CLASSIFICATION	2.73735876789064E-7	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999833990317	WITHOUT_CLASSIFICATION	1.660096827696902E-8	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999996514799749	WITHOUT_CLASSIFICATION	3.4852002500947617E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999985649841102	WITHOUT_CLASSIFICATION	1.4350158897300447E-6	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9999370865360256	WITHOUT_CLASSIFICATION	6.291346397433137E-5	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999977236390079	WITHOUT_CLASSIFICATION	2.276360992250703E-6	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999794729391	WITHOUT_CLASSIFICATION	2.0527060999373194E-8	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999999906294823	WITHOUT_CLASSIFICATION	9.370517715880045E-9	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999833990317	WITHOUT_CLASSIFICATION	1.660096827696902E-8	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999757587113697	WITHOUT_CLASSIFICATION	2.424128863034925E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999757587113697	WITHOUT_CLASSIFICATION	2.424128863034925E-5	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999973336969612	WITHOUT_CLASSIFICATION	2.6663030387888066E-6	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999999855003496	WITHOUT_CLASSIFICATION	1.4499650450112395E-8	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.999998931181261	WITHOUT_CLASSIFICATION	1.0688187389462451E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999985694188991	WITHOUT_CLASSIFICATION	1.4305811010114928E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999991199176114	WITHOUT_CLASSIFICATION	8.800823886567849E-7	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999998447497831	WITHOUT_CLASSIFICATION	1.5525021689215522E-7	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.999999900543007	WITHOUT_CLASSIFICATION	9.945699298665967E-8	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999999396281852	WITHOUT_CLASSIFICATION	6.03718147835415E-8	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999274830839	WITHOUT_CLASSIFICATION	7.251691612650348E-8	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999996369138455	WITHOUT_CLASSIFICATION	3.630861544941881E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999987602006439	WITHOUT_CLASSIFICATION	1.2397993560549792E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999985694188991	WITHOUT_CLASSIFICATION	1.4305811010114928E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999991199176114	WITHOUT_CLASSIFICATION	8.800823886567849E-7	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999999870844003	WITHOUT_CLASSIFICATION	1.2915599587054974E-8	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999995679459968	WITHOUT_CLASSIFICATION	4.320540031941422E-7	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999997690866926	WITHOUT_CLASSIFICATION	2.3091330720788618E-7	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999970701099917	WITHOUT_CLASSIFICATION	2.929890008217714E-6	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999979904457279	WITHOUT_CLASSIFICATION	2.0095542720718126E-6	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999950461737643	WITHOUT_CLASSIFICATION	4.953826235645059E-6	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9998914955580468	WITHOUT_CLASSIFICATION	1.0850444195312152E-4	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999990012470111	WITHOUT_CLASSIFICATION	9.98752988848719E-7	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999975861904614	WITHOUT_CLASSIFICATION	2.413809538513916E-6	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999944257946709	WITHOUT_CLASSIFICATION	5.574205329168856E-6	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999983751355389	WITHOUT_CLASSIFICATION	1.6248644611567157E-6	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9999888201759171	WITHOUT_CLASSIFICATION	1.117982408284738E-5	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999999418681523	WITHOUT_CLASSIFICATION	5.8131847649452316E-8	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.999999916171832	WITHOUT_CLASSIFICATION	8.382816795311494E-8	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999989117724015	WITHOUT_CLASSIFICATION	1.0882275985066887E-6	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999861022262	WITHOUT_CLASSIFICATION	1.3897773924033326E-8	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999922958814161	WITHOUT_CLASSIFICATION	7.704118583886743E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999997032930485	WITHOUT_CLASSIFICATION	2.967069513866554E-7	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.999999980946706	WITHOUT_CLASSIFICATION	1.9053294125116927E-8	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999998295989079	WITHOUT_CLASSIFICATION	1.7040109215951074E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999922958814161	WITHOUT_CLASSIFICATION	7.704118583886743E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999997032930485	WITHOUT_CLASSIFICATION	2.967069513866554E-7	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.999999980946706	WITHOUT_CLASSIFICATION	1.9053294125116927E-8	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999998180711095	WITHOUT_CLASSIFICATION	1.819288905610727E-7	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999936653351	WITHOUT_CLASSIFICATION	6.334664884735863E-9	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999999872004216	WITHOUT_CLASSIFICATION	1.2799578359100864E-8	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999990318631963	WITHOUT_CLASSIFICATION	9.681368036923572E-7	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.999998553883664	WITHOUT_CLASSIFICATION	1.446116336007052E-6	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999998709134265	WITHOUT_CLASSIFICATION	1.2908657354461506E-7	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999999922947115	WITHOUT_CLASSIFICATION	7.705288584493263E-9	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999999954724941	WITHOUT_CLASSIFICATION	4.527505956979118E-9	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999998525008373	WITHOUT_CLASSIFICATION	1.4749916259571432E-7	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999997532928301	WITHOUT_CLASSIFICATION	2.4670716987281866E-7	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9956841176893022	WITHOUT_CLASSIFICATION	0.0043158823106977775	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999998188421224	WITHOUT_CLASSIFICATION	1.8115787758951375E-7	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999997491505005	WITHOUT_CLASSIFICATION	2.5084949943964005E-7	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999998419206608	WITHOUT_CLASSIFICATION	1.5807933918751434E-7	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9993103887812195	WITHOUT_CLASSIFICATION	6.896112187804714E-4	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999995486498687	WITHOUT_CLASSIFICATION	4.5135013125979377E-7	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.999999983766462	WITHOUT_CLASSIFICATION	1.6233537956583894E-8	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999996818343634	WITHOUT_CLASSIFICATION	3.181656366550021E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999998296691023	WITHOUT_CLASSIFICATION	1.7033089769526245E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999996209005456	WITHOUT_CLASSIFICATION	3.790994543304065E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999997840931807	WITHOUT_CLASSIFICATION	2.1590681920435478E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999997027726046	WITHOUT_CLASSIFICATION	2.9722739538009385E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999997027726046	WITHOUT_CLASSIFICATION	2.9722739538009385E-7	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999992761495303	WITHOUT_CLASSIFICATION	7.238504696531523E-7	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999992761495303	WITHOUT_CLASSIFICATION	7.238504696531523E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999993530766511	WITHOUT_CLASSIFICATION	6.469233488543582E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999993530766511	WITHOUT_CLASSIFICATION	6.469233488543582E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999996471662218	WITHOUT_CLASSIFICATION	3.5283377825341337E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999722248226	WITHOUT_CLASSIFICATION	2.777517745288499E-8	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999813144682	WITHOUT_CLASSIFICATION	1.8685531760573282E-8	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999990282578335	WITHOUT_CLASSIFICATION	9.717421664952146E-7	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999988335040397	WITHOUT_CLASSIFICATION	1.1664959602800307E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999199589636	WITHOUT_CLASSIFICATION	8.00410363292228E-8	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999998540886157	WITHOUT_CLASSIFICATION	1.4591138426177406E-7	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999998835206281	WITHOUT_CLASSIFICATION	1.164793719515053E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999984275875222	WITHOUT_CLASSIFICATION	1.5724124777552707E-6	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999996471662218	WITHOUT_CLASSIFICATION	3.5283377825341337E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999722248226	WITHOUT_CLASSIFICATION	2.777517745288499E-8	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999813144682	WITHOUT_CLASSIFICATION	1.8685531760573282E-8	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999988335040397	WITHOUT_CLASSIFICATION	1.1664959602800307E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999199589636	WITHOUT_CLASSIFICATION	8.00410363292228E-8	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999994694723036	WITHOUT_CLASSIFICATION	5.305276964595502E-7	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.999999941984207	WITHOUT_CLASSIFICATION	5.801579288556184E-8	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999985063004138	WITHOUT_CLASSIFICATION	1.493699586203195E-6	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999985063004138	WITHOUT_CLASSIFICATION	1.493699586203195E-6	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999995507070708	WITHOUT_CLASSIFICATION	4.4929292917091135E-7	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998253880517	WITHOUT_CLASSIFICATION	1.7461194829038732E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999117434226	WITHOUT_CLASSIFICATION	8.825657729640957E-8	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999997521537206	WITHOUT_CLASSIFICATION	2.4784627931895564E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999997521537206	WITHOUT_CLASSIFICATION	2.4784627931895564E-7	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999996245018967	WITHOUT_CLASSIFICATION	3.7549810321543435E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999989240134725	WITHOUT_CLASSIFICATION	1.075986527518754E-6	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999457092549	WITHOUT_CLASSIFICATION	5.4290745003020064E-8	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999999389786507	WITHOUT_CLASSIFICATION	6.102134930776256E-8	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999922584759	WITHOUT_CLASSIFICATION	7.741524007898324E-9	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999997213345392	WITHOUT_CLASSIFICATION	2.786654607778182E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999929540271	WITHOUT_CLASSIFICATION	7.045972870204158E-9	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999211380898	WITHOUT_CLASSIFICATION	7.886191021850364E-8	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999985338386562	WITHOUT_CLASSIFICATION	1.4661613438733696E-6	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999999723779381	WITHOUT_CLASSIFICATION	2.7622061791260662E-8	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999999942646396	WITHOUT_CLASSIFICATION	5.7353603961137405E-8	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999996245018967	WITHOUT_CLASSIFICATION	3.7549810321543435E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999989240134725	WITHOUT_CLASSIFICATION	1.075986527518754E-6	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999999389786507	WITHOUT_CLASSIFICATION	6.102134930776256E-8	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999785199885	WITHOUT_CLASSIFICATION	2.148001147304536E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999117434226	WITHOUT_CLASSIFICATION	8.825657729640957E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999117434226	WITHOUT_CLASSIFICATION	8.825657729640957E-8	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999987602006439	WITHOUT_CLASSIFICATION	1.2397993560549792E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999987602006439	WITHOUT_CLASSIFICATION	1.2397993560549792E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998913413642	WITHOUT_CLASSIFICATION	1.0865863578045169E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998913413642	WITHOUT_CLASSIFICATION	1.0865863578045169E-7	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999473703998	WITHOUT_CLASSIFICATION	5.2629600203334375E-8	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999999499785773	WITHOUT_CLASSIFICATION	5.002142278497217E-8	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999997855823687	WITHOUT_CLASSIFICATION	2.144176313350976E-7	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999945964479496	WITHOUT_CLASSIFICATION	5.403552050295956E-6	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999997957943039	WITHOUT_CLASSIFICATION	2.0420569599795752E-7	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999997972542418	WITHOUT_CLASSIFICATION	2.027457581536653E-7	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.999999713829151	WITHOUT_CLASSIFICATION	2.861708489712869E-7	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999684299791	WITHOUT_CLASSIFICATION	3.157002092059452E-8	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999999496203815	WITHOUT_CLASSIFICATION	5.037961853811778E-8	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999999572581614	WITHOUT_CLASSIFICATION	4.274183856547852E-8	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.999999812242205	WITHOUT_CLASSIFICATION	1.8775779499865685E-7	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999999621712279	WITHOUT_CLASSIFICATION	3.7828772149702844E-8	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999998024467633	WITHOUT_CLASSIFICATION	1.9755323662744458E-7	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999508412181	WITHOUT_CLASSIFICATION	4.9158781922904345E-8	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999996913491841	WITHOUT_CLASSIFICATION	3.086508159345489E-7	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999997274990498	WITHOUT_CLASSIFICATION	2.7250095017991715E-7	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999996077185556	WITHOUT_CLASSIFICATION	3.9228144445670176E-7	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999999640087313	WITHOUT_CLASSIFICATION	3.599126866424509E-8	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999999819829306	WITHOUT_CLASSIFICATION	1.8017069382096838E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999929540271	WITHOUT_CLASSIFICATION	7.045972870204158E-9	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999985338386562	WITHOUT_CLASSIFICATION	1.4661613438733696E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999541428842	WITHOUT_CLASSIFICATION	4.5857115807209275E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999991756000546	WITHOUT_CLASSIFICATION	8.243999453911955E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999991756000546	WITHOUT_CLASSIFICATION	8.243999453911955E-7	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999785199885	WITHOUT_CLASSIFICATION	2.148001147304536E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999117434226	WITHOUT_CLASSIFICATION	8.825657729640957E-8	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999987602006439	WITHOUT_CLASSIFICATION	1.2397993560549792E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998913413642	WITHOUT_CLASSIFICATION	1.0865863578045169E-7	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.999999914047023	WITHOUT_CLASSIFICATION	8.595297690408686E-8	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999990381050387	WITHOUT_CLASSIFICATION	9.618949613437756E-7	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.999999877939008	WITHOUT_CLASSIFICATION	1.2206099198943598E-7	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999997651293819	WITHOUT_CLASSIFICATION	2.3487061798599603E-7	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999456114418	WITHOUT_CLASSIFICATION	5.4388558286662693E-8	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999456114418	WITHOUT_CLASSIFICATION	5.4388558286662693E-8	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999998738959291	WITHOUT_CLASSIFICATION	1.2610407084918933E-7	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999999060800858	WITHOUT_CLASSIFICATION	9.391991423729225E-8	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999346035612	WITHOUT_CLASSIFICATION	6.539643883301373E-8	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999998853546035	WITHOUT_CLASSIFICATION	1.1464539659168327E-7	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999999598224668	WITHOUT_CLASSIFICATION	4.017753313124368E-8	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999999598224668	WITHOUT_CLASSIFICATION	4.017753313124368E-8	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999998312622508	WITHOUT_CLASSIFICATION	1.6873774915766174E-7	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999999223735476	WITHOUT_CLASSIFICATION	7.762645245307666E-8	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999996417159099	WITHOUT_CLASSIFICATION	3.582840900810785E-7	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999968756436024	WITHOUT_CLASSIFICATION	3.1243563974615396E-6	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.999998971339927	WITHOUT_CLASSIFICATION	1.0286600730935447E-6	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999893176365	WITHOUT_CLASSIFICATION	1.0682363435520063E-8	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999983789166452	WITHOUT_CLASSIFICATION	1.6210833547660646E-6	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999690479117	WITHOUT_CLASSIFICATION	3.095208828955003E-8	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999956622333745	WITHOUT_CLASSIFICATION	4.337766625527887E-6	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9961380383124752	WITHOUT_CLASSIFICATION	0.0038619616875247053	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999997579751196	WITHOUT_CLASSIFICATION	2.4202488031319733E-7	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.999998786346174	WITHOUT_CLASSIFICATION	1.213653825971717E-6	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999978254033	WITHOUT_CLASSIFICATION	2.1745967449005694E-9	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999999470440877	WITHOUT_CLASSIFICATION	5.2955912269951266E-8	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999834179853667	WITHOUT_CLASSIFICATION	1.6582014633242112E-5	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999973407422685	WITHOUT_CLASSIFICATION	2.6592577314532975E-6	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999996158440764	WITHOUT_CLASSIFICATION	3.841559236991179E-7	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999999490975231	WITHOUT_CLASSIFICATION	5.0902476929293175E-8	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999991924277961	WITHOUT_CLASSIFICATION	8.075722039432546E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.99999947526799	WITHOUT_CLASSIFICATION	5.247320099948523E-7	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999984088974643	WITHOUT_CLASSIFICATION	1.5911025357433448E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999999330733422	WITHOUT_CLASSIFICATION	6.69266577505269E-8	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999999330733422	WITHOUT_CLASSIFICATION	6.69266577505269E-8	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999999674779851	WITHOUT_CLASSIFICATION	3.252201486160872E-8	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999999208447005	WITHOUT_CLASSIFICATION	7.915529952281746E-8	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999998360475743	WITHOUT_CLASSIFICATION	1.639524257795834E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999998360475743	WITHOUT_CLASSIFICATION	1.639524257795834E-7	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999944644105571	WITHOUT_CLASSIFICATION	5.535589442979845E-6	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999998219285917	WITHOUT_CLASSIFICATION	1.7807140817632699E-7	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999894500545993	WITHOUT_CLASSIFICATION	1.0549945400731228E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999929401043	WITHOUT_CLASSIFICATION	7.059895676793912E-9	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999929401043	WITHOUT_CLASSIFICATION	7.059895676793912E-9	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999999374808841	WITHOUT_CLASSIFICATION	6.251911591180746E-8	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.99999997445283	WITHOUT_CLASSIFICATION	2.5547169993901702E-8	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999978037104	WITHOUT_CLASSIFICATION	2.196289530975039E-9	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999999701079115	WITHOUT_CLASSIFICATION	2.9892088528359534E-8	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.999999983379452	WITHOUT_CLASSIFICATION	1.6620547991816913E-8	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999998433861546	WITHOUT_CLASSIFICATION	1.566138454876565E-7	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999999499043469	WITHOUT_CLASSIFICATION	5.009565308768386E-8	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999956928266422	WITHOUT_CLASSIFICATION	4.307173357806045E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999998411927475	WITHOUT_CLASSIFICATION	1.5880725235149606E-7	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999997657804549	WITHOUT_CLASSIFICATION	2.3421954519023434E-7	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999992841408698	WITHOUT_CLASSIFICATION	7.158591302738962E-7	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999996040706632	WITHOUT_CLASSIFICATION	3.9592933682202E-7	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999999176735531	WITHOUT_CLASSIFICATION	8.23264469081284E-8	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999998319605062	WITHOUT_CLASSIFICATION	1.6803949375926639E-7	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999996601707924	WITHOUT_CLASSIFICATION	3.3982920755682985E-7	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.999999981899169	WITHOUT_CLASSIFICATION	1.810083092179086E-8	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999926784698	WITHOUT_CLASSIFICATION	7.321530132412677E-9	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999997918432827	WITHOUT_CLASSIFICATION	2.0815671735522405E-7	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999995564878837	WITHOUT_CLASSIFICATION	4.4351211616637424E-7	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999997456550921	WITHOUT_CLASSIFICATION	2.543449079105949E-7	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999999581211441	WITHOUT_CLASSIFICATION	4.187885598728808E-8	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999997698187973	WITHOUT_CLASSIFICATION	2.3018120261778357E-7	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999994127109857	WITHOUT_CLASSIFICATION	5.872890142255993E-7	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999998573568466	WITHOUT_CLASSIFICATION	1.4264315336870673E-7	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999932970114478	WITHOUT_CLASSIFICATION	6.702988552239912E-6	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999996673138405	WITHOUT_CLASSIFICATION	3.326861594820159E-7	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999768642287025	WITHOUT_CLASSIFICATION	2.3135771297543017E-5	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999999626870644	WITHOUT_CLASSIFICATION	3.7312935604376233E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999996346173119	WITHOUT_CLASSIFICATION	3.653826880653681E-7	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999926467237	WITHOUT_CLASSIFICATION	7.353276388410469E-9	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999999119382	WITHOUT_CLASSIFICATION	8.806178922943407E-11	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999998319605062	WITHOUT_CLASSIFICATION	1.6803949375926639E-7	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999999626870644	WITHOUT_CLASSIFICATION	3.7312935604376233E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999996346173119	WITHOUT_CLASSIFICATION	3.653826880653681E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999999119382	WITHOUT_CLASSIFICATION	8.806178922943407E-11	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999992490372169	WITHOUT_CLASSIFICATION	7.509627830323375E-7	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999991296634972	WITHOUT_CLASSIFICATION	8.703365028600622E-7	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999996017472814	WITHOUT_CLASSIFICATION	3.982527185958077E-7	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.999995642855804	WITHOUT_CLASSIFICATION	4.357144196028912E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999972236492397	WITHOUT_CLASSIFICATION	2.7763507602061046E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999960635744	WITHOUT_CLASSIFICATION	3.9364255888870085E-9	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999994513175392	WITHOUT_CLASSIFICATION	5.486824607471183E-7	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999999048981829	WITHOUT_CLASSIFICATION	9.51018170711278E-8	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999998150972218	WITHOUT_CLASSIFICATION	1.8490277822155382E-7	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999997880496811	WITHOUT_CLASSIFICATION	2.1195031875087155E-7	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999953615839355	WITHOUT_CLASSIFICATION	4.638416064519422E-6	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999953615839355	WITHOUT_CLASSIFICATION	4.638416064519422E-6	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999993351588499	WITHOUT_CLASSIFICATION	6.648411501115597E-7	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999956074113	WITHOUT_CLASSIFICATION	4.39258870181627E-9	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999942181599	WITHOUT_CLASSIFICATION	5.781840106006505E-9	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999994807042204	WITHOUT_CLASSIFICATION	5.192957795386822E-7	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999821879878	WITHOUT_CLASSIFICATION	1.7812012201254285E-8	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999985087993993	WITHOUT_CLASSIFICATION	1.4912006006496468E-6	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999998476033589	WITHOUT_CLASSIFICATION	1.523966410130757E-7	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999898654535	WITHOUT_CLASSIFICATION	1.0134546479287416E-8	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.999999788694106	WITHOUT_CLASSIFICATION	2.1130589391603705E-7	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999997126308	WITHOUT_CLASSIFICATION	2.873692402357972E-10	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999998989120772	WITHOUT_CLASSIFICATION	1.0108792287116127E-7	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999994173409	WITHOUT_CLASSIFICATION	5.826592057441513E-10	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999993951202539	WITHOUT_CLASSIFICATION	6.04879746162386E-7	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999999169958677	WITHOUT_CLASSIFICATION	8.300413229434519E-8	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999998737804116	WITHOUT_CLASSIFICATION	1.2621958850641166E-7	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999999963749342	WITHOUT_CLASSIFICATION	3.62506586455738E-9	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999999648555663	WITHOUT_CLASSIFICATION	3.51444336677031E-8	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999999532405898	WITHOUT_CLASSIFICATION	4.6759410247630976E-8	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999999598065963	WITHOUT_CLASSIFICATION	4.0193403635516393E-8	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999999365862611	WITHOUT_CLASSIFICATION	6.341373895591443E-8	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9999992108016713	WITHOUT_CLASSIFICATION	7.891983287378969E-7	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999995916740703	WITHOUT_CLASSIFICATION	4.0832592978074765E-7	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999999502834974	WITHOUT_CLASSIFICATION	4.971650261440809E-8	TEST
// others	WITHOUT_CLASSIFICATION	0.9999995513633956	WITHOUT_CLASSIFICATION	4.486366044199602E-7	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999998551313614	WITHOUT_CLASSIFICATION	1.4486863858360256E-7	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999991055478784	WITHOUT_CLASSIFICATION	8.944521216887936E-7	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999906445346002	WITHOUT_CLASSIFICATION	9.355465399840393E-6	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999888583192	WITHOUT_CLASSIFICATION	1.114168079715007E-8	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999994240611625	WITHOUT_CLASSIFICATION	5.759388374682588E-7	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999999058445892	WITHOUT_CLASSIFICATION	9.415541089117951E-8	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999999587449887	WITHOUT_CLASSIFICATION	4.125501139462616E-8	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999999812115083	WITHOUT_CLASSIFICATION	1.878849164951042E-8	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999989317259235	WITHOUT_CLASSIFICATION	1.0682740764582042E-6	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999983483589612	WITHOUT_CLASSIFICATION	1.6516410387535218E-6	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999998008299621	WITHOUT_CLASSIFICATION	1.991700378286301E-7	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.999997921354109	WITHOUT_CLASSIFICATION	2.0786458909708007E-6	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999988226930383	WITHOUT_CLASSIFICATION	1.1773069616312563E-6	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999997065016819	WITHOUT_CLASSIFICATION	2.934983180943498E-7	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999998505100609	WITHOUT_CLASSIFICATION	1.4948993910987946E-7	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999941475644527	WITHOUT_CLASSIFICATION	5.852435547264192E-6	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999995741904301	WITHOUT_CLASSIFICATION	4.2580956989036503E-7	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999972956274576	WITHOUT_CLASSIFICATION	2.7043725423880578E-5	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999996286922572	WITHOUT_CLASSIFICATION	3.713077426982304E-7	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999998381298945	WITHOUT_CLASSIFICATION	1.618701056138505E-7	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999996239374013	WITHOUT_CLASSIFICATION	3.760625987397861E-7	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999999948942193	WITHOUT_CLASSIFICATION	5.105780697706992E-9	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999999934561168	WITHOUT_CLASSIFICATION	6.543883180219928E-9	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.999999995110764	WITHOUT_CLASSIFICATION	4.889235994957815E-9	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999998063471015	WITHOUT_CLASSIFICATION	1.936528985614016E-7	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999980716333987	WITHOUT_CLASSIFICATION	1.9283666014100744E-6	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999996275800486	WITHOUT_CLASSIFICATION	3.724199514981472E-7	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.999999946272082	WITHOUT_CLASSIFICATION	5.372791807776547E-8	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999784297190034	WITHOUT_CLASSIFICATION	2.1570280996584957E-5	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999960590920621	WITHOUT_CLASSIFICATION	3.940907937825449E-6	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999481977827197	WITHOUT_CLASSIFICATION	5.180221728021413E-5	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999998659590754	WITHOUT_CLASSIFICATION	1.3404092449491838E-7	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999288332012	WITHOUT_CLASSIFICATION	7.116679883750482E-8	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999997955670578	WITHOUT_CLASSIFICATION	2.0443294216215153E-7	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999997428380909	WITHOUT_CLASSIFICATION	2.5716190917461563E-7	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999936121148871	WITHOUT_CLASSIFICATION	6.387885112829671E-6	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999936121148871	WITHOUT_CLASSIFICATION	6.387885112829671E-6	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999997845049874	WITHOUT_CLASSIFICATION	2.1549501252585582E-7	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.999997988812541	WITHOUT_CLASSIFICATION	2.01118745912256E-6	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999994894273071	WITHOUT_CLASSIFICATION	5.105726927947256E-7	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999995194688724	WITHOUT_CLASSIFICATION	4.805311275062668E-7	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999998918465823	WITHOUT_CLASSIFICATION	1.0815341766423501E-7	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999990044193874	WITHOUT_CLASSIFICATION	9.95580612621689E-7	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999265758791562	WITHOUT_CLASSIFICATION	7.342412084378591E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999993844082872	WITHOUT_CLASSIFICATION	6.155917127918717E-7	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999997289952585	WITHOUT_CLASSIFICATION	2.7100474155038403E-7	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999999955996461	WITHOUT_CLASSIFICATION	4.400353887191182E-9	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999997149104438	WITHOUT_CLASSIFICATION	2.850895562624633E-7	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999997892387578	WITHOUT_CLASSIFICATION	2.1076124235294115E-7	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999991110277251	WITHOUT_CLASSIFICATION	8.889722748602554E-7	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999999699367357	WITHOUT_CLASSIFICATION	3.006326421468566E-8	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999992398407549	WITHOUT_CLASSIFICATION	7.601592451671856E-7	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999983839707678	WITHOUT_CLASSIFICATION	1.6160292321837537E-6	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999994555711943	WITHOUT_CLASSIFICATION	5.444288057585844E-7	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999997313414681	WITHOUT_CLASSIFICATION	2.6865853195017074E-7	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999998572424201	WITHOUT_CLASSIFICATION	1.4275757976051152E-7	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999995775816037	WITHOUT_CLASSIFICATION	4.2241839623061165E-7	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999990019639223	WITHOUT_CLASSIFICATION	9.980360776833715E-7	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999997346669739	WITHOUT_CLASSIFICATION	2.653330261053458E-7	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999985828054951	WITHOUT_CLASSIFICATION	1.4171945048997162E-6	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999996853386126	WITHOUT_CLASSIFICATION	3.146613873633162E-7	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999983464673912	WITHOUT_CLASSIFICATION	1.6535326088574411E-6	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999972544873901	WITHOUT_CLASSIFICATION	2.745512609931627E-6	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999981343909758	WITHOUT_CLASSIFICATION	1.8656090240875103E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999989369244304	WITHOUT_CLASSIFICATION	1.0630755695111518E-6	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.999999906582525	WITHOUT_CLASSIFICATION	9.341747499440856E-8	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999998833668857	WITHOUT_CLASSIFICATION	1.1663311430740419E-7	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999999904393873	WITHOUT_CLASSIFICATION	9.560612731836732E-9	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999986986455	WITHOUT_CLASSIFICATION	1.3013544999716998E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999706352152	WITHOUT_CLASSIFICATION	2.936478480560326E-7	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.999995204266783	WITHOUT_CLASSIFICATION	4.7957332170292525E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999706352152	WITHOUT_CLASSIFICATION	2.936478480560326E-7	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999999356869704	WITHOUT_CLASSIFICATION	6.431302963721005E-8	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999987292706001	WITHOUT_CLASSIFICATION	1.2707293999179031E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999987292706001	WITHOUT_CLASSIFICATION	1.2707293999179031E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999987292706001	WITHOUT_CLASSIFICATION	1.2707293999179031E-6	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999998306447689	WITHOUT_CLASSIFICATION	1.6935523108067982E-7	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999998306447689	WITHOUT_CLASSIFICATION	1.6935523108067982E-7	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999980616863041	WITHOUT_CLASSIFICATION	1.9383136958885324E-6	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999998720839951	WITHOUT_CLASSIFICATION	1.2791600496039532E-7	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.999999887657969	WITHOUT_CLASSIFICATION	1.1234203098809173E-7	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999999962038121	WITHOUT_CLASSIFICATION	3.7961879838649654E-9	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999982374455617	WITHOUT_CLASSIFICATION	1.7625544383190351E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999950586924987	WITHOUT_CLASSIFICATION	4.9413075012633676E-6	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999998983428569	WITHOUT_CLASSIFICATION	1.0165714313391302E-7	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999997714138162	WITHOUT_CLASSIFICATION	2.2858618382838256E-7	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999983371777389	WITHOUT_CLASSIFICATION	1.6628222610321156E-6	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999999794695877	WITHOUT_CLASSIFICATION	2.053041225353474E-8	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999991821590485	WITHOUT_CLASSIFICATION	8.178409516188761E-7	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999999459828761	WITHOUT_CLASSIFICATION	5.401712389895656E-8	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999999836777306	WITHOUT_CLASSIFICATION	1.6322269423960784E-8	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999997966607955	WITHOUT_CLASSIFICATION	2.033392045479355E-7	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999997331963347	WITHOUT_CLASSIFICATION	2.668036652855741E-7	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999998210724668	WITHOUT_CLASSIFICATION	1.7892753312876007E-7	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999996812952309	WITHOUT_CLASSIFICATION	3.187047691594162E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999997947384835	WITHOUT_CLASSIFICATION	2.052615165265307E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999997947384835	WITHOUT_CLASSIFICATION	2.052615165265307E-7	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999995420863261	WITHOUT_CLASSIFICATION	4.57913673917583E-7	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999998569060521	WITHOUT_CLASSIFICATION	1.4309394797486236E-7	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999998569060521	WITHOUT_CLASSIFICATION	1.4309394797486236E-7	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999940471946243	WITHOUT_CLASSIFICATION	5.952805375670433E-6	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999996803002686	WITHOUT_CLASSIFICATION	3.196997312814114E-7	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999997650146188	WITHOUT_CLASSIFICATION	2.3498538118189986E-7	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999983838040913	WITHOUT_CLASSIFICATION	1.6161959087186872E-6	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999993141893496	WITHOUT_CLASSIFICATION	6.858106502821409E-7	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999999753740714	WITHOUT_CLASSIFICATION	2.462592855600219E-8	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999993469001792	WITHOUT_CLASSIFICATION	6.530998207915875E-7	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999999696877487	WITHOUT_CLASSIFICATION	3.031225121109353E-8	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999266841678	WITHOUT_CLASSIFICATION	7.331583218466133E-8	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999997400315103	WITHOUT_CLASSIFICATION	2.5996848975422205E-7	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999991432645399	WITHOUT_CLASSIFICATION	8.567354600748718E-7	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999996291387154	WITHOUT_CLASSIFICATION	3.7086128460488187E-7	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999998535174536	WITHOUT_CLASSIFICATION	1.46482546471012E-7	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999999576490071	WITHOUT_CLASSIFICATION	4.235099297680688E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999997714138162	WITHOUT_CLASSIFICATION	2.2858618382838256E-7	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.999954733299783	WITHOUT_CLASSIFICATION	4.5266700216882364E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998184508064	WITHOUT_CLASSIFICATION	1.815491935430378E-7	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999998394097938	WITHOUT_CLASSIFICATION	1.6059020624378963E-7	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999998394097938	WITHOUT_CLASSIFICATION	1.6059020624378963E-7	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999998290801038	WITHOUT_CLASSIFICATION	1.7091989619659147E-7	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999999243621989	WITHOUT_CLASSIFICATION	7.563780110963125E-8	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999999915275505	WITHOUT_CLASSIFICATION	8.472449483492948E-9	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999993152106197	WITHOUT_CLASSIFICATION	6.847893802375479E-7	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999301162306	WITHOUT_CLASSIFICATION	6.988376954423873E-8	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999999416605044	WITHOUT_CLASSIFICATION	5.8339495621521065E-8	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999210265227	WITHOUT_CLASSIFICATION	7.897347733202717E-8	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.999657055255962	WITHOUT_CLASSIFICATION	3.429447440379648E-4	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999999820225406	WITHOUT_CLASSIFICATION	1.797745940312029E-8	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999999355797456	WITHOUT_CLASSIFICATION	6.442025438236315E-8	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999995764976413	WITHOUT_CLASSIFICATION	4.235023587476104E-7	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999997930712893	WITHOUT_CLASSIFICATION	2.069287107022074E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999361522966974	WITHOUT_CLASSIFICATION	6.384770330258564E-5	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999995335961354	WITHOUT_CLASSIFICATION	4.664038646796323E-7	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999993963270071	WITHOUT_CLASSIFICATION	6.036729929214618E-7	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999998612147075	WITHOUT_CLASSIFICATION	1.3878529243039238E-7	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999996105014036	WITHOUT_CLASSIFICATION	3.894985964337279E-7	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999993818852528	WITHOUT_CLASSIFICATION	6.181147472171698E-7	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999999971554159	WITHOUT_CLASSIFICATION	2.8445841010135802E-8	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999998782375531	WITHOUT_CLASSIFICATION	1.2176244691434497E-7	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999997673753522	WITHOUT_CLASSIFICATION	2.3262464770733135E-7	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999999885327593	WITHOUT_CLASSIFICATION	1.146724073573837E-8	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999996758086873	WITHOUT_CLASSIFICATION	3.241913127150779E-7	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999985432755	WITHOUT_CLASSIFICATION	1.4567244867405391E-9	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999999144268961	WITHOUT_CLASSIFICATION	8.557310391620302E-8	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999999153958391	WITHOUT_CLASSIFICATION	8.460416087431457E-8	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999044944955223	WITHOUT_CLASSIFICATION	9.550550447761379E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999716151319294	WITHOUT_CLASSIFICATION	2.8384868070479368E-5	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999978340051	WITHOUT_CLASSIFICATION	2.1659949558875265E-9	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.999999048644556	WITHOUT_CLASSIFICATION	9.513554440426713E-7	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999999607700242	WITHOUT_CLASSIFICATION	3.9229975773556866E-8	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999999532069666	WITHOUT_CLASSIFICATION	4.6793033416880786E-8	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999988691159509	WITHOUT_CLASSIFICATION	1.130884049074515E-6	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999931518768809	WITHOUT_CLASSIFICATION	6.848123119080531E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999969297285329	WITHOUT_CLASSIFICATION	3.0702714671029835E-6	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999983541515209	WITHOUT_CLASSIFICATION	1.6458484789873356E-6	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999716151319294	WITHOUT_CLASSIFICATION	2.8384868070479368E-5	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999976947190382	WITHOUT_CLASSIFICATION	2.3052809618644234E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999969297285329	WITHOUT_CLASSIFICATION	3.0702714671029835E-6	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.999999217154155	WITHOUT_CLASSIFICATION	7.828458451083983E-7	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999999560049961	WITHOUT_CLASSIFICATION	4.3995003890887134E-8	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999996668937853	WITHOUT_CLASSIFICATION	3.3310621462383355E-7	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999998377957711	WITHOUT_CLASSIFICATION	1.6220422887620555E-7	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999984621429787	WITHOUT_CLASSIFICATION	1.5378570213430814E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999999690807324	WITHOUT_CLASSIFICATION	3.0919267535887533E-8	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999999690807324	WITHOUT_CLASSIFICATION	3.0919267535887533E-8	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999989741002024	WITHOUT_CLASSIFICATION	1.0258997974963484E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999983418774	WITHOUT_CLASSIFICATION	1.6581225919577634E-9	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999166133011	WITHOUT_CLASSIFICATION	8.338669895293005E-8	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999166133011	WITHOUT_CLASSIFICATION	8.338669895293005E-8	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999986880752	WITHOUT_CLASSIFICATION	1.3119246888318232E-9	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9994437286948459	WITHOUT_CLASSIFICATION	5.56271305154187E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9999119571844509	WITHOUT_CLASSIFICATION	8.804281554908076E-5	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9999119571844509	WITHOUT_CLASSIFICATION	8.804281554908076E-5	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.999999413523042	WITHOUT_CLASSIFICATION	5.864769580470613E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.999998844485226	WITHOUT_CLASSIFICATION	1.1555147740014912E-6	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999998133684024	WITHOUT_CLASSIFICATION	1.8663159763571103E-7	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999999130451489	WITHOUT_CLASSIFICATION	8.695485101012243E-8	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999999917752075	WITHOUT_CLASSIFICATION	8.224792513038422E-9	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999999337617888	WITHOUT_CLASSIFICATION	6.623821121436606E-8	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999996651044235	WITHOUT_CLASSIFICATION	3.3489557647830765E-7	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999991278359052	WITHOUT_CLASSIFICATION	8.721640948434315E-7	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999997603483721	WITHOUT_CLASSIFICATION	2.396516278586153E-7	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.999999472913817	WITHOUT_CLASSIFICATION	5.270861830584684E-7	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999996064056339	WITHOUT_CLASSIFICATION	3.935943661092176E-7	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999996716698237	WITHOUT_CLASSIFICATION	3.283301763175628E-7	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999999075879084	WITHOUT_CLASSIFICATION	9.241209166710758E-8	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999986563456308	WITHOUT_CLASSIFICATION	1.3436543692222635E-6	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999996915652206	WITHOUT_CLASSIFICATION	3.084347793430651E-7	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999999586993857	WITHOUT_CLASSIFICATION	4.130061436333404E-8	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999545305777621	WITHOUT_CLASSIFICATION	4.546942223796603E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999998720993879	WITHOUT_CLASSIFICATION	1.2790061202249174E-7	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999998081829911	WITHOUT_CLASSIFICATION	1.9181700891381772E-7	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999999194624161	WITHOUT_CLASSIFICATION	8.053758386549797E-8	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999984829993541	WITHOUT_CLASSIFICATION	1.5170006458465907E-6	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999955771898879	WITHOUT_CLASSIFICATION	4.4228101121351344E-6	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999997466552009	WITHOUT_CLASSIFICATION	2.533447991577628E-7	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999968975373085	WITHOUT_CLASSIFICATION	3.1024626915590394E-6	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999933570985992	WITHOUT_CLASSIFICATION	6.642901400933725E-6	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999907146382934	WITHOUT_CLASSIFICATION	9.285361706690834E-6	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.999998487846093	WITHOUT_CLASSIFICATION	1.5121539069929373E-6	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999989313241958	WITHOUT_CLASSIFICATION	1.0686758041998123E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999863140429	WITHOUT_CLASSIFICATION	1.3685957124619228E-8	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999863140429	WITHOUT_CLASSIFICATION	1.3685957124619228E-8	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999998672977755	WITHOUT_CLASSIFICATION	1.3270222454763145E-7	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999998204306496	WITHOUT_CLASSIFICATION	1.7956935041191864E-7	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999974788399557	WITHOUT_CLASSIFICATION	2.5211600443529904E-6	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999995252784726	WITHOUT_CLASSIFICATION	4.747215274316597E-7	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999988284008069	WITHOUT_CLASSIFICATION	1.1715991930209392E-6	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999996906053021	WITHOUT_CLASSIFICATION	3.093946978777392E-7	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999995427712894	WITHOUT_CLASSIFICATION	4.5722871056006237E-7	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998923960782	WITHOUT_CLASSIFICATION	1.076039217581778E-7	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999999504817464	WITHOUT_CLASSIFICATION	4.9518253552884965E-8	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999304261449	WITHOUT_CLASSIFICATION	6.957385518719391E-8	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999996566281503	WITHOUT_CLASSIFICATION	3.4337184972334154E-7	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999996974148565	WITHOUT_CLASSIFICATION	3.025851435055253E-7	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999982587193725	WITHOUT_CLASSIFICATION	1.7412806274665719E-6	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999998232169142	WITHOUT_CLASSIFICATION	1.7678308575127618E-7	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999999947790783	WITHOUT_CLASSIFICATION	5.2209217119658185E-9	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999999300025731	WITHOUT_CLASSIFICATION	6.999742695379254E-8	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999999446466968	WITHOUT_CLASSIFICATION	5.5353303255997444E-8	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999998563377511	WITHOUT_CLASSIFICATION	1.4366224894357772E-7	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999991720452897	WITHOUT_CLASSIFICATION	8.279547103993422E-7	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.999999921971596	WITHOUT_CLASSIFICATION	7.802840396776816E-8	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999999515870703	WITHOUT_CLASSIFICATION	4.841292966007661E-8	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999987674215144	WITHOUT_CLASSIFICATION	1.232578485647939E-6	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999998353527754	WITHOUT_CLASSIFICATION	1.6464722475818816E-7	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999723118173	WITHOUT_CLASSIFICATION	2.768818279314909E-8	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999999741951963	WITHOUT_CLASSIFICATION	2.5804803723286528E-8	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999999917028742	WITHOUT_CLASSIFICATION	8.297125801238229E-8	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999956854237746	WITHOUT_CLASSIFICATION	4.314576225495392E-6	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999995858600819	WITHOUT_CLASSIFICATION	4.141399181724803E-7	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999995433844598	WITHOUT_CLASSIFICATION	4.5661554009368475E-7	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999999864661178	WITHOUT_CLASSIFICATION	1.3533882196693888E-8	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999997743637916	WITHOUT_CLASSIFICATION	2.2563620830785617E-7	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999997833249101	WITHOUT_CLASSIFICATION	2.1667508992183282E-7	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999999300208225	WITHOUT_CLASSIFICATION	6.997917751048492E-8	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999997775827469	WITHOUT_CLASSIFICATION	2.2241725314759072E-7	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999998964535401	WITHOUT_CLASSIFICATION	1.0354645986402651E-7	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999995263703014	WITHOUT_CLASSIFICATION	4.7362969855043526E-7	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999999901828606	WITHOUT_CLASSIFICATION	9.817139398685713E-8	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999994082806605	WITHOUT_CLASSIFICATION	5.917193395394121E-7	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999922498883	WITHOUT_CLASSIFICATION	7.750111703784398E-9	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999998452399166	WITHOUT_CLASSIFICATION	1.5476008346135788E-7	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999973303424707	WITHOUT_CLASSIFICATION	2.669657529291132E-6	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999999559149971	WITHOUT_CLASSIFICATION	4.4085002898484814E-8	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999574918429	WITHOUT_CLASSIFICATION	4.250815706904207E-8	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999574918429	WITHOUT_CLASSIFICATION	4.250815706904207E-8	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999984285207375	WITHOUT_CLASSIFICATION	1.5714792625758408E-6	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999889566612	WITHOUT_CLASSIFICATION	1.104333882826847E-8	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.999999895998869	WITHOUT_CLASSIFICATION	1.0400113099603662E-7	TEST
// return	WITHOUT_CLASSIFICATION	0.9999998933515512	WITHOUT_CLASSIFICATION	1.0664844888698679E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999998296691023	WITHOUT_CLASSIFICATION	1.7033089769526245E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999996209005456	WITHOUT_CLASSIFICATION	3.790994543304065E-7	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999996303580698	WITHOUT_CLASSIFICATION	3.696419301680617E-7	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999987743709264	WITHOUT_CLASSIFICATION	1.2256290735819185E-6	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999985885720445	WITHOUT_CLASSIFICATION	1.411427955448144E-6	TEST
// tc	WITHOUT_CLASSIFICATION	0.9999980093535547	WITHOUT_CLASSIFICATION	1.99064644539687E-6	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999984623561778	WITHOUT_CLASSIFICATION	1.5376438221701673E-6	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999995984679949	WITHOUT_CLASSIFICATION	4.0153200507328486E-7	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999992932316022	WITHOUT_CLASSIFICATION	7.067683978428578E-7	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999998707297921	WITHOUT_CLASSIFICATION	1.292702077823692E-7	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999358910033	WITHOUT_CLASSIFICATION	6.410899666487207E-8	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999993906590979	WITHOUT_CLASSIFICATION	6.09340902106256E-7	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999998556536991	WITHOUT_CLASSIFICATION	1.443463009770094E-7	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999989386223048	WITHOUT_CLASSIFICATION	1.0613776951630744E-6	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999037836025	WITHOUT_CLASSIFICATION	9.621639753205152E-8	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999993127906652	WITHOUT_CLASSIFICATION	6.87209334808043E-7	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999186041166	WITHOUT_CLASSIFICATION	8.1395883374232E-8	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999995762535834	WITHOUT_CLASSIFICATION	4.237464166636015E-7	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999992478760036	WITHOUT_CLASSIFICATION	7.521239964274469E-7	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999997165855106	WITHOUT_CLASSIFICATION	2.8341448936640057E-7	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999997571492747	WITHOUT_CLASSIFICATION	2.428507253212755E-7	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999997298092919	WITHOUT_CLASSIFICATION	2.701907081118244E-7	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999998534924232	WITHOUT_CLASSIFICATION	1.4650757681946398E-7	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999998690086983	WITHOUT_CLASSIFICATION	1.3099130163589603E-7	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999997478116723	WITHOUT_CLASSIFICATION	2.5218832757864103E-7	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999992886372998	WITHOUT_CLASSIFICATION	7.113627002849079E-7	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999996007274795	WITHOUT_CLASSIFICATION	3.99272520614994E-7	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999987223071549	WITHOUT_CLASSIFICATION	1.2776928451030857E-6	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999999868342637	WITHOUT_CLASSIFICATION	1.3165736280539425E-8	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999998568358215	WITHOUT_CLASSIFICATION	1.431641786479272E-7	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999994082806605	WITHOUT_CLASSIFICATION	5.917193395394121E-7	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999987644015862	WITHOUT_CLASSIFICATION	1.2355984138102642E-6	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999995691485889	WITHOUT_CLASSIFICATION	4.308514111406401E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999995691485889	WITHOUT_CLASSIFICATION	4.308514111406401E-7	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.999998398251707	WITHOUT_CLASSIFICATION	1.601748292901523E-6	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999508918069	WITHOUT_CLASSIFICATION	4.910819306159533E-8	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999997305124486	WITHOUT_CLASSIFICATION	2.6948755140303143E-7	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999995947682958	WITHOUT_CLASSIFICATION	4.0523170426151943E-7	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.999999688514161	WITHOUT_CLASSIFICATION	3.1148583893780664E-7	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999997406116582	WITHOUT_CLASSIFICATION	2.5938834184539866E-7	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999996429354528	WITHOUT_CLASSIFICATION	3.5706454711214195E-7	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999994811934594	WITHOUT_CLASSIFICATION	5.188065405397824E-7	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999996659573175	WITHOUT_CLASSIFICATION	3.3404268245111157E-7	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999995161444892	WITHOUT_CLASSIFICATION	4.838555107303936E-7	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.999999331876235	WITHOUT_CLASSIFICATION	6.681237649417201E-7	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999992748286891	WITHOUT_CLASSIFICATION	7.25171310860877E-7	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999999275213649	WITHOUT_CLASSIFICATION	7.247863502844475E-8	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.999999590949338	WITHOUT_CLASSIFICATION	4.0905066204524955E-7	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.999994593902916	WITHOUT_CLASSIFICATION	5.406097083981178E-6	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999999963290711	WITHOUT_CLASSIFICATION	3.670928956036564E-9	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999997972970913	WITHOUT_CLASSIFICATION	2.0270290878626182E-7	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999996304757641	WITHOUT_CLASSIFICATION	3.6952423593162173E-7	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999998393790586	WITHOUT_CLASSIFICATION	1.6062094149033738E-7	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999997673431037	WITHOUT_CLASSIFICATION	2.326568962778963E-7	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999996869425362	WITHOUT_CLASSIFICATION	3.130574638059071E-7	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999997976398355	WITHOUT_CLASSIFICATION	2.0236016447810167E-7	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999999914286233	WITHOUT_CLASSIFICATION	8.571376659976306E-9	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999999856014955	WITHOUT_CLASSIFICATION	1.4398504463232156E-8	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999942449884	WITHOUT_CLASSIFICATION	5.755011648111286E-9	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999999308423906	WITHOUT_CLASSIFICATION	6.915760937737328E-8	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999999193136128	WITHOUT_CLASSIFICATION	8.068638728259358E-8	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999998454834567	WITHOUT_CLASSIFICATION	1.5451654334398317E-7	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999998672376131	WITHOUT_CLASSIFICATION	1.3276238694335558E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999999526288098	WITHOUT_CLASSIFICATION	4.737119029606253E-8	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999997607878854	WITHOUT_CLASSIFICATION	2.39212114555044E-7	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999999073578753	WITHOUT_CLASSIFICATION	9.264212469196545E-8	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999996281024386	WITHOUT_CLASSIFICATION	3.718975614738389E-7	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.999999987927661	WITHOUT_CLASSIFICATION	1.207233899278277E-8	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999999933834005	WITHOUT_CLASSIFICATION	6.6165995459250746E-9	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999997648272415	WITHOUT_CLASSIFICATION	2.3517275841402272E-7	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999401153228	WITHOUT_CLASSIFICATION	5.988467714782991E-8	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999999308423906	WITHOUT_CLASSIFICATION	6.915760937737328E-8	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999999193136128	WITHOUT_CLASSIFICATION	8.068638728259358E-8	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999998454834567	WITHOUT_CLASSIFICATION	1.5451654334398317E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999999526288098	WITHOUT_CLASSIFICATION	4.737119029606253E-8	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999859739535	WITHOUT_CLASSIFICATION	1.4026046460140075E-8	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999837688628	WITHOUT_CLASSIFICATION	1.6231137207837972E-8	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999997471425006	WITHOUT_CLASSIFICATION	2.52857499400163E-7	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999997062472206	WITHOUT_CLASSIFICATION	2.937527795381298E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999995688084571	WITHOUT_CLASSIFICATION	4.311915429473595E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999627179946	WITHOUT_CLASSIFICATION	3.7282005395711606E-8	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999998853151469	WITHOUT_CLASSIFICATION	1.1468485304773557E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999999042166189	WITHOUT_CLASSIFICATION	9.578338112608968E-8	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999998963449314	WITHOUT_CLASSIFICATION	1.0365506863219943E-7	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999992394048198	WITHOUT_CLASSIFICATION	7.605951800865314E-7	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999983365220939	WITHOUT_CLASSIFICATION	1.6634779061087261E-6	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999999284898745	WITHOUT_CLASSIFICATION	7.151012548318973E-8	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999999945119593	WITHOUT_CLASSIFICATION	5.4880406824246626E-9	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999999986646664	WITHOUT_CLASSIFICATION	1.335333635351375E-9	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999992518049526	WITHOUT_CLASSIFICATION	7.481950472994762E-7	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999999687279371	WITHOUT_CLASSIFICATION	3.127206295419588E-8	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999999916729374	WITHOUT_CLASSIFICATION	8.327062692714558E-9	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999998345394336	WITHOUT_CLASSIFICATION	1.6546056638302482E-7	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999999903527329	WITHOUT_CLASSIFICATION	9.647267183441369E-9	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999401153228	WITHOUT_CLASSIFICATION	5.988467714782991E-8	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999837688628	WITHOUT_CLASSIFICATION	1.6231137207837972E-8	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999997471425006	WITHOUT_CLASSIFICATION	2.52857499400163E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999995688084571	WITHOUT_CLASSIFICATION	4.311915429473595E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999627179946	WITHOUT_CLASSIFICATION	3.7282005395711606E-8	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999998853151469	WITHOUT_CLASSIFICATION	1.1468485304773557E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999999042166189	WITHOUT_CLASSIFICATION	9.578338112608968E-8	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999998726373309	WITHOUT_CLASSIFICATION	1.2736266912049302E-7	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.99999875142226	WITHOUT_CLASSIFICATION	1.2485777400241247E-6	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999731799343	WITHOUT_CLASSIFICATION	2.6820065757165252E-8	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999970714132	WITHOUT_CLASSIFICATION	2.9285868108152876E-9	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999986645660741	WITHOUT_CLASSIFICATION	1.3354339259417337E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999986645660741	WITHOUT_CLASSIFICATION	1.3354339259417337E-6	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999999713632873	WITHOUT_CLASSIFICATION	2.8636712633588295E-8	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999999918954269	WITHOUT_CLASSIFICATION	8.104573253379136E-9	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999992843380509	WITHOUT_CLASSIFICATION	7.156619491207054E-7	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999999224741517	WITHOUT_CLASSIFICATION	7.752584826020339E-8	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.999999918814081	WITHOUT_CLASSIFICATION	8.118591897785642E-8	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999999679792876	WITHOUT_CLASSIFICATION	3.2020712348117E-8	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999995325092489	WITHOUT_CLASSIFICATION	4.674907511701001E-7	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999999924406797	WITHOUT_CLASSIFICATION	7.559320304623822E-9	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999998270250203	WITHOUT_CLASSIFICATION	1.729749796564747E-7	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999998151909529	WITHOUT_CLASSIFICATION	1.8480904698688106E-7	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999999756861059	WITHOUT_CLASSIFICATION	2.431389403143445E-8	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.99999999414248	WITHOUT_CLASSIFICATION	5.857520132647872E-9	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999994515410725	WITHOUT_CLASSIFICATION	5.48458927527616E-7	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999995731500915	WITHOUT_CLASSIFICATION	4.2684990854029275E-7	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999999916162591	WITHOUT_CLASSIFICATION	8.383741009008828E-9	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999999784203824	WITHOUT_CLASSIFICATION	2.1579617625161182E-8	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999998609304392	WITHOUT_CLASSIFICATION	1.3906956070940204E-7	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999999784632697	WITHOUT_CLASSIFICATION	2.153673024173569E-8	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999996819265278	WITHOUT_CLASSIFICATION	3.180734723003996E-7	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999999963001267	WITHOUT_CLASSIFICATION	3.699873351782567E-9	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9997354549133821	WITHOUT_CLASSIFICATION	2.6454508661784775E-4	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999999232676555	WITHOUT_CLASSIFICATION	7.673234453162491E-8	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999858102188	WITHOUT_CLASSIFICATION	1.418978115128767E-8	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9959881133422633	WITHOUT_CLASSIFICATION	0.004011886657736663	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999617182029	WITHOUT_CLASSIFICATION	3.8281797093406714E-8	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999960216576	WITHOUT_CLASSIFICATION	3.97834233186914E-9	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999982198037	WITHOUT_CLASSIFICATION	1.7801963594119257E-9	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999991063120658	WITHOUT_CLASSIFICATION	8.936879342021981E-7	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999989403579179	WITHOUT_CLASSIFICATION	1.0596420820789722E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999617182029	WITHOUT_CLASSIFICATION	3.8281797093406714E-8	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999960216576	WITHOUT_CLASSIFICATION	3.97834233186914E-9	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999995731500915	WITHOUT_CLASSIFICATION	4.2684990854029275E-7	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.999999257767448	WITHOUT_CLASSIFICATION	7.422325520540657E-7	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999999747863234	WITHOUT_CLASSIFICATION	2.521367648003578E-8	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999999750754622	WITHOUT_CLASSIFICATION	2.492453778572026E-8	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999999594986181	WITHOUT_CLASSIFICATION	4.0501381990789604E-8	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999999687329484	WITHOUT_CLASSIFICATION	3.126705164694783E-8	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999982447952738	WITHOUT_CLASSIFICATION	1.7552047262567365E-6	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999993347773771	WITHOUT_CLASSIFICATION	6.652226228808983E-7	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999999186552176	WITHOUT_CLASSIFICATION	8.134478232671153E-8	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.999991964661636	WITHOUT_CLASSIFICATION	8.035338364005204E-6	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999993868797953	WITHOUT_CLASSIFICATION	6.131202047050849E-7	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999999685969708	WITHOUT_CLASSIFICATION	3.140302911468615E-8	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999998438303631	WITHOUT_CLASSIFICATION	1.5616963688598585E-7	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.999999873212313	WITHOUT_CLASSIFICATION	1.2678768700794923E-7	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999809080724	WITHOUT_CLASSIFICATION	1.9091927596163255E-8	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999993252252	WITHOUT_CLASSIFICATION	6.747747582858149E-10	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999991923846386	WITHOUT_CLASSIFICATION	8.07615361349391E-7	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.999999999452947	WITHOUT_CLASSIFICATION	5.470529121205083E-10	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999998892378217	WITHOUT_CLASSIFICATION	1.1076217828568116E-7	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999524000412	WITHOUT_CLASSIFICATION	4.7599958695082015E-8	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999998264797202	WITHOUT_CLASSIFICATION	1.7352027983873326E-7	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.999999977371387	WITHOUT_CLASSIFICATION	2.2628613067931132E-8	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999726303586	WITHOUT_CLASSIFICATION	2.7369641556417936E-8	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999999077603877	WITHOUT_CLASSIFICATION	9.223961226964297E-8	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999999025889	WITHOUT_CLASSIFICATION	9.74110141483911E-11	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999977658411	WITHOUT_CLASSIFICATION	2.2341588301722364E-9	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999998999691591	WITHOUT_CLASSIFICATION	1.0003084092503831E-7	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9984669336137963	WITHOUT_CLASSIFICATION	0.0015330663862036188	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999982129791428	WITHOUT_CLASSIFICATION	1.7870208571638329E-6	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999996241589254	WITHOUT_CLASSIFICATION	3.7584107457529794E-7	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999687852342	WITHOUT_CLASSIFICATION	3.1214765822268344E-8	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999999944139855	WITHOUT_CLASSIFICATION	5.586014515666912E-9	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999819932751	WITHOUT_CLASSIFICATION	1.8006724929259817E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999819932751	WITHOUT_CLASSIFICATION	1.8006724929259817E-8	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999994515410725	WITHOUT_CLASSIFICATION	5.48458927527616E-7	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999865504269	WITHOUT_CLASSIFICATION	1.3449573201905195E-8	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999999721911185	WITHOUT_CLASSIFICATION	2.7808881479054074E-8	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.999999220623811	WITHOUT_CLASSIFICATION	7.793761890784488E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999740692244	WITHOUT_CLASSIFICATION	2.5930775647956915E-8	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999740692244	WITHOUT_CLASSIFICATION	2.5930775647956915E-8	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.999999962302597	WITHOUT_CLASSIFICATION	3.769740305793155E-8	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999996109150597	WITHOUT_CLASSIFICATION	3.890849402571529E-7	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999341054769	WITHOUT_CLASSIFICATION	6.589452295702532E-8	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999999311237849	WITHOUT_CLASSIFICATION	6.887621499346425E-8	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999996596565391	WITHOUT_CLASSIFICATION	3.40343460800109E-7	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999805558805	WITHOUT_CLASSIFICATION	1.9444119609314534E-8	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999998418766933	WITHOUT_CLASSIFICATION	1.5812330658817093E-7	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999999201992797	WITHOUT_CLASSIFICATION	7.980072028668267E-8	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998592230459	WITHOUT_CLASSIFICATION	1.4077695419874708E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999997793457395	WITHOUT_CLASSIFICATION	2.2065426057242362E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999995185444805	WITHOUT_CLASSIFICATION	4.814555194241881E-7	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999997581013039	WITHOUT_CLASSIFICATION	2.4189869598358667E-7	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999981656490969	WITHOUT_CLASSIFICATION	1.8343509030226465E-6	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999999950524793	WITHOUT_CLASSIFICATION	4.947520733256485E-9	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999984807831339	WITHOUT_CLASSIFICATION	1.51921686613196E-6	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999972784430693	WITHOUT_CLASSIFICATION	2.721556930827593E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999019335895	WITHOUT_CLASSIFICATION	9.806641049819261E-8	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999019335895	WITHOUT_CLASSIFICATION	9.806641049819261E-8	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999997075505456	WITHOUT_CLASSIFICATION	2.9244945444347737E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999997075505456	WITHOUT_CLASSIFICATION	2.9244945444347737E-7	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999353921486	WITHOUT_CLASSIFICATION	6.460785141649827E-8	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999984715691805	WITHOUT_CLASSIFICATION	1.528430819397391E-6	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999858069272	WITHOUT_CLASSIFICATION	1.4193072893420518E-8	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999999054022518	WITHOUT_CLASSIFICATION	9.459774814283076E-8	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999999828596213	WITHOUT_CLASSIFICATION	1.7140378653682746E-8	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999998553029168	WITHOUT_CLASSIFICATION	1.4469708324341064E-7	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999999819896597	WITHOUT_CLASSIFICATION	1.801034033583817E-8	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999997581013039	WITHOUT_CLASSIFICATION	2.4189869598358667E-7	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999981656490969	WITHOUT_CLASSIFICATION	1.8343509030226465E-6	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999984807831339	WITHOUT_CLASSIFICATION	1.51921686613196E-6	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999976179957902	WITHOUT_CLASSIFICATION	2.3820042098692736E-6	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999978268506154	WITHOUT_CLASSIFICATION	2.1731493844520123E-6	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999645538504	WITHOUT_CLASSIFICATION	3.5446149519256154E-8	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999988900983049	WITHOUT_CLASSIFICATION	1.1099016951532461E-6	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999999022468699	WITHOUT_CLASSIFICATION	9.775313005895402E-8	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999986816302878	WITHOUT_CLASSIFICATION	1.3183697121253602E-6	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999996356355554	WITHOUT_CLASSIFICATION	3.6436444458037426E-7	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999997033847966	WITHOUT_CLASSIFICATION	2.966152035107999E-7	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.999999539999224	WITHOUT_CLASSIFICATION	4.600007759714192E-7	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.999999809271945	WITHOUT_CLASSIFICATION	1.907280549525137E-7	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999999679991256	WITHOUT_CLASSIFICATION	3.200087441833554E-8	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999996307088006	WITHOUT_CLASSIFICATION	3.692911993121841E-7	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999995662575024	WITHOUT_CLASSIFICATION	4.337424975724291E-7	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999981330617209	WITHOUT_CLASSIFICATION	1.8669382791378774E-6	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999995471653546	WITHOUT_CLASSIFICATION	4.528346454368462E-7	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999476479376	WITHOUT_CLASSIFICATION	5.235206242593728E-8	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999997925824198	WITHOUT_CLASSIFICATION	2.074175801768003E-7	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999996931360494	WITHOUT_CLASSIFICATION	3.068639505211411E-7	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999967834800483	WITHOUT_CLASSIFICATION	3.2165199516095864E-6	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999750092384	WITHOUT_CLASSIFICATION	2.4990761527324463E-8	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.999999889987105	WITHOUT_CLASSIFICATION	1.1001289496064346E-7	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999997265457603	WITHOUT_CLASSIFICATION	2.734542397373925E-7	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999939373111506	WITHOUT_CLASSIFICATION	6.0626888494785364E-6	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999998308763934	WITHOUT_CLASSIFICATION	1.6912360656725415E-7	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999997877022813	WITHOUT_CLASSIFICATION	2.1229771880181028E-7	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999999143255384	WITHOUT_CLASSIFICATION	8.567446161531502E-8	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.999999874481898	WITHOUT_CLASSIFICATION	1.2551810204172376E-7	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999970822189305	WITHOUT_CLASSIFICATION	2.9177810694622E-6	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999999875752669	WITHOUT_CLASSIFICATION	1.2424733129277733E-8	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999999743027203	WITHOUT_CLASSIFICATION	2.5697279788285893E-8	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999999736150076	WITHOUT_CLASSIFICATION	2.6384992418215184E-8	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999996230779918	WITHOUT_CLASSIFICATION	3.7692200823770137E-7	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999999313717918	WITHOUT_CLASSIFICATION	6.862820823786175E-8	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999999947441396	WITHOUT_CLASSIFICATION	5.255860392540922E-9	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999998760645296	WITHOUT_CLASSIFICATION	1.2393547044191296E-7	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999999547015771	WITHOUT_CLASSIFICATION	4.529842285777104E-8	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999999512010047	WITHOUT_CLASSIFICATION	4.879899526008425E-8	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999998489311596	WITHOUT_CLASSIFICATION	1.5106884052625079E-7	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999946146183188	WITHOUT_CLASSIFICATION	5.385381681140533E-6	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999277788234	WITHOUT_CLASSIFICATION	7.222117666284333E-8	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999999021956872	WITHOUT_CLASSIFICATION	9.780431281215729E-8	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999999721911185	WITHOUT_CLASSIFICATION	2.7808881479054074E-8	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999999512010047	WITHOUT_CLASSIFICATION	4.879899526008425E-8	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999817000289313	WITHOUT_CLASSIFICATION	1.8299971068801852E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999956722013	WITHOUT_CLASSIFICATION	4.327798772096343E-9	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999998632125052	WITHOUT_CLASSIFICATION	1.36787494706204E-7	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999984440078008	WITHOUT_CLASSIFICATION	1.5559921992041442E-6	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999984440078008	WITHOUT_CLASSIFICATION	1.5559921992041442E-6	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999996585453804	WITHOUT_CLASSIFICATION	3.414546195524784E-7	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999999973910196	WITHOUT_CLASSIFICATION	2.6089803288803815E-9	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999999150424419	WITHOUT_CLASSIFICATION	8.495755806274248E-8	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999847859176	WITHOUT_CLASSIFICATION	1.5214082365775805E-8	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999997511766026	WITHOUT_CLASSIFICATION	2.4882339739254595E-7	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999998563087665	WITHOUT_CLASSIFICATION	1.4369123346172844E-7	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999991896731615	WITHOUT_CLASSIFICATION	8.103268383990544E-7	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999998151544525	WITHOUT_CLASSIFICATION	1.848455474711801E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999213786719	WITHOUT_CLASSIFICATION	7.862132807952158E-8	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999213786719	WITHOUT_CLASSIFICATION	7.862132807952158E-8	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999997676954058	WITHOUT_CLASSIFICATION	2.3230459416823808E-7	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999928751063158	WITHOUT_CLASSIFICATION	7.124893684197467E-6	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999999825186991	WITHOUT_CLASSIFICATION	1.748130086055369E-8	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999999536593485	WITHOUT_CLASSIFICATION	4.6340651569970464E-8	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999999401512941	WITHOUT_CLASSIFICATION	5.984870582367965E-8	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999999935264007	WITHOUT_CLASSIFICATION	6.4735993749531475E-9	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999996394249	WITHOUT_CLASSIFICATION	3.605751432596983E-10	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999282421506	WITHOUT_CLASSIFICATION	7.175784937118025E-8	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999998222624188	WITHOUT_CLASSIFICATION	1.77737581294777E-7	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999653636114785	WITHOUT_CLASSIFICATION	3.463638852156524E-5	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999903105671774	WITHOUT_CLASSIFICATION	9.689432822581793E-6	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999975652389556	WITHOUT_CLASSIFICATION	2.43476104438895E-6	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999999590157147	WITHOUT_CLASSIFICATION	4.098428533511035E-8	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999982465291402	WITHOUT_CLASSIFICATION	1.7534708598402295E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999982465291402	WITHOUT_CLASSIFICATION	1.7534708598402295E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999996216286199	WITHOUT_CLASSIFICATION	3.783713802012154E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999999042166189	WITHOUT_CLASSIFICATION	9.578338112608968E-8	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999506596844181	WITHOUT_CLASSIFICATION	4.934031558193212E-5	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.999999992951397	WITHOUT_CLASSIFICATION	7.04860308356599E-9	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999916843674	WITHOUT_CLASSIFICATION	8.315632666051156E-9	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999999316611119	WITHOUT_CLASSIFICATION	6.833888813090347E-8	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.999997874846375	WITHOUT_CLASSIFICATION	2.125153625098246E-6	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999984605256728	WITHOUT_CLASSIFICATION	1.5394743272267403E-6	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999955395582384	WITHOUT_CLASSIFICATION	4.460441761631361E-6	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999984098130958	WITHOUT_CLASSIFICATION	1.5901869042239866E-6	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999999559774967	WITHOUT_CLASSIFICATION	4.402250332088404E-8	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999994257658246	WITHOUT_CLASSIFICATION	5.742341754056822E-7	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999419015876294	WITHOUT_CLASSIFICATION	5.809841237054012E-5	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999844702486	WITHOUT_CLASSIFICATION	1.552975134616078E-8	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999989017814571	WITHOUT_CLASSIFICATION	1.0982185429025177E-6	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999771614554	WITHOUT_CLASSIFICATION	2.283854471668812E-8	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999999059471709	WITHOUT_CLASSIFICATION	9.405282907685206E-8	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999999817352927	WITHOUT_CLASSIFICATION	1.826470734413928E-8	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.999999993386244	WITHOUT_CLASSIFICATION	6.6137560344380705E-9	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999999926029532	WITHOUT_CLASSIFICATION	7.3970468607031936E-9	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9999990091790913	WITHOUT_CLASSIFICATION	9.90820908625615E-7	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999996005273158	WITHOUT_CLASSIFICATION	3.9947268417092766E-7	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999998257585552	WITHOUT_CLASSIFICATION	1.7424144488821683E-7	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999998294402602	WITHOUT_CLASSIFICATION	1.705597396733413E-7	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9996053448754132	WITHOUT_CLASSIFICATION	3.9465512458675595E-4	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.999998964605707	WITHOUT_CLASSIFICATION	1.0353942930081243E-6	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.999999911717752	WITHOUT_CLASSIFICATION	8.828224798866635E-8	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999998720729723	WITHOUT_CLASSIFICATION	1.279270277242987E-7	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999998514920521	WITHOUT_CLASSIFICATION	1.485079478602308E-7	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999995575544489	WITHOUT_CLASSIFICATION	4.424455510644219E-7	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999998416723587	WITHOUT_CLASSIFICATION	1.5832764136752234E-7	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999999595359257	WITHOUT_CLASSIFICATION	4.04640743103252E-8	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999997728657671	WITHOUT_CLASSIFICATION	2.2713423273642304E-7	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999995242236047	WITHOUT_CLASSIFICATION	4.757763952895045E-7	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999989630234205	WITHOUT_CLASSIFICATION	1.036976579529181E-6	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999754909926	WITHOUT_CLASSIFICATION	2.4509007384216895E-8	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999979921769797	WITHOUT_CLASSIFICATION	2.007823020204976E-6	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999974501145099	WITHOUT_CLASSIFICATION	2.5498854900976193E-6	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999955358068464	WITHOUT_CLASSIFICATION	4.464193153559204E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.999999278314365	WITHOUT_CLASSIFICATION	7.216856350214329E-7	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999999563934872	WITHOUT_CLASSIFICATION	4.3606512850644224E-8	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.999999971675182	WITHOUT_CLASSIFICATION	2.832481811952959E-8	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999924801829115	WITHOUT_CLASSIFICATION	7.519817088522406E-6	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999999868824739	WITHOUT_CLASSIFICATION	1.311752601218689E-8	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9999878369478589	WITHOUT_CLASSIFICATION	1.2163052141233034E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999988861484068	WITHOUT_CLASSIFICATION	1.1138515932373023E-6	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999996862491725	WITHOUT_CLASSIFICATION	3.1375082760929075E-7	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999930234762	WITHOUT_CLASSIFICATION	6.976523835216006E-9	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999902147401275	WITHOUT_CLASSIFICATION	9.785259872517567E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999617182029	WITHOUT_CLASSIFICATION	3.8281797093406714E-8	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999617182029	WITHOUT_CLASSIFICATION	3.8281797093406714E-8	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999999921900139	WITHOUT_CLASSIFICATION	7.809986203568678E-9	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999992993322906	WITHOUT_CLASSIFICATION	7.006677094235964E-7	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999980812134559	WITHOUT_CLASSIFICATION	1.918786544062708E-6	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.999999675533794	WITHOUT_CLASSIFICATION	3.244662060278817E-7	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999994316698427	WITHOUT_CLASSIFICATION	5.683301572374792E-7	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999993760023695	WITHOUT_CLASSIFICATION	6.239976303922974E-7	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.999999898830153	WITHOUT_CLASSIFICATION	1.0116984702525543E-7	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999143235693	WITHOUT_CLASSIFICATION	8.567643071306707E-8	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999931030509	WITHOUT_CLASSIFICATION	6.896949089094487E-9	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.999999765364631	WITHOUT_CLASSIFICATION	2.34635369020636E-7	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.999999977432091	WITHOUT_CLASSIFICATION	2.2567909044811853E-8	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.999999977432091	WITHOUT_CLASSIFICATION	2.2567909044811853E-8	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.999999977432091	WITHOUT_CLASSIFICATION	2.2567909044811853E-8	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999974125777	WITHOUT_CLASSIFICATION	2.587422378480718E-9	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999999833978601	WITHOUT_CLASSIFICATION	1.6602139886944478E-8	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999998600856571	WITHOUT_CLASSIFICATION	1.399143429011456E-7	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999625045857	WITHOUT_CLASSIFICATION	3.749541439710187E-8	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999625045857	WITHOUT_CLASSIFICATION	3.749541439710187E-8	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999999379065417	WITHOUT_CLASSIFICATION	6.20934583466958E-8	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999980258720595	WITHOUT_CLASSIFICATION	1.9741279404696213E-6	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999983371183981	WITHOUT_CLASSIFICATION	1.6628816019013166E-6	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999998634604439	WITHOUT_CLASSIFICATION	1.365395560339399E-7	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.99999976918882	WITHOUT_CLASSIFICATION	2.308111799274965E-7	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999980332315764	WITHOUT_CLASSIFICATION	1.966768423683498E-6	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999998301422034	WITHOUT_CLASSIFICATION	1.6985779655580818E-7	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999999039413815	WITHOUT_CLASSIFICATION	9.605861860029551E-8	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.999999697899725	WITHOUT_CLASSIFICATION	3.0210027501963304E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999999417657836	WITHOUT_CLASSIFICATION	5.823421645634192E-8	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999999417657836	WITHOUT_CLASSIFICATION	5.823421645634192E-8	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999966447093361	WITHOUT_CLASSIFICATION	3.3552906639072447E-6	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999930520857543	WITHOUT_CLASSIFICATION	6.947914245730378E-6	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999994137863807	WITHOUT_CLASSIFICATION	5.862136193302163E-7	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999985919213296	WITHOUT_CLASSIFICATION	1.4080786703992134E-6	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.999999970683583	WITHOUT_CLASSIFICATION	2.9316417042938486E-8	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999994680462824	WITHOUT_CLASSIFICATION	5.31953717586479E-7	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999990234205832	WITHOUT_CLASSIFICATION	9.765794168525253E-7	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999991419710077	WITHOUT_CLASSIFICATION	8.58028992289652E-7	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.999997060694273	WITHOUT_CLASSIFICATION	2.9393057269968424E-6	TEST
// POP	WITHOUT_CLASSIFICATION	0.9999926387063287	WITHOUT_CLASSIFICATION	7.361293671196039E-6	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999999301858644	WITHOUT_CLASSIFICATION	6.981413558146531E-8	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999945582019804	WITHOUT_CLASSIFICATION	5.441798019642281E-6	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9999968040414201	WITHOUT_CLASSIFICATION	3.1959585798406097E-6	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999996791350269	WITHOUT_CLASSIFICATION	3.2086497311521386E-7	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999936136597875	WITHOUT_CLASSIFICATION	6.386340212450638E-6	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.999999982206796	WITHOUT_CLASSIFICATION	1.7793203929430507E-8	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999998399274048	WITHOUT_CLASSIFICATION	1.6007259522245485E-7	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999612862138005	WITHOUT_CLASSIFICATION	3.871378619942961E-5	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999998223211195	WITHOUT_CLASSIFICATION	1.7767888051414238E-7	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.999999986204435	WITHOUT_CLASSIFICATION	1.3795564927964503E-8	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999962623909892	WITHOUT_CLASSIFICATION	3.7376090108492597E-6	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999998548042588	WITHOUT_CLASSIFICATION	1.4519574112626835E-7	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999995875716989	WITHOUT_CLASSIFICATION	4.124283011074203E-7	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999918291612799	WITHOUT_CLASSIFICATION	8.170838720054252E-6	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999981001730817	WITHOUT_CLASSIFICATION	1.8998269182932096E-6	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999999124644698	WITHOUT_CLASSIFICATION	8.75355301717295E-8	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999997233860319	WITHOUT_CLASSIFICATION	2.7661396815631854E-7	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999968750137529	WITHOUT_CLASSIFICATION	3.1249862470357964E-6	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999702804533	WITHOUT_CLASSIFICATION	2.971954670358112E-8	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999983671735646	WITHOUT_CLASSIFICATION	1.6328264353888744E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999706207299914	WITHOUT_CLASSIFICATION	2.937927000857954E-5	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999991698424036	WITHOUT_CLASSIFICATION	8.30157596427687E-7	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999980808375551	WITHOUT_CLASSIFICATION	1.9191624448646854E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999706207299914	WITHOUT_CLASSIFICATION	2.937927000857954E-5	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999992375615833	WITHOUT_CLASSIFICATION	7.624384166926293E-7	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999868195691551	WITHOUT_CLASSIFICATION	1.3180430844934256E-5	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999942712364153	WITHOUT_CLASSIFICATION	5.7287635847613955E-6	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.999999269245341	WITHOUT_CLASSIFICATION	7.307546590227862E-7	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999996560478165	WITHOUT_CLASSIFICATION	3.4395218351724674E-7	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999997586693407	WITHOUT_CLASSIFICATION	2.413306593548617E-7	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999998693773212	WITHOUT_CLASSIFICATION	1.306226787074947E-7	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999975535500737	WITHOUT_CLASSIFICATION	2.446449926237805E-6	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.999996700119232	WITHOUT_CLASSIFICATION	3.299880767891864E-6	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999857059049648	WITHOUT_CLASSIFICATION	1.4294095035095505E-5	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.999984581786385	WITHOUT_CLASSIFICATION	1.5418213614912922E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999936953260447	WITHOUT_CLASSIFICATION	6.304673955409928E-6	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999935168501992	WITHOUT_CLASSIFICATION	6.483149800735227E-6	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999992651754573	WITHOUT_CLASSIFICATION	7.348245426518211E-7	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999947812072562	WITHOUT_CLASSIFICATION	5.218792743786195E-6	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999972112370235	WITHOUT_CLASSIFICATION	2.7887629765357376E-6	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999980037773001	WITHOUT_CLASSIFICATION	1.996222699988367E-6	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999978845472468	WITHOUT_CLASSIFICATION	2.1154527532492356E-6	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999993053797273	WITHOUT_CLASSIFICATION	6.946202728039482E-7	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999819453035118	WITHOUT_CLASSIFICATION	1.805469648820077E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999966631344646	WITHOUT_CLASSIFICATION	3.336865535597439E-6	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999991266430295	WITHOUT_CLASSIFICATION	8.73356970630441E-7	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999889793098172	WITHOUT_CLASSIFICATION	1.1020690182769587E-5	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999946128346904	WITHOUT_CLASSIFICATION	5.387165309674786E-6	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999888428485673	WITHOUT_CLASSIFICATION	1.1157151432788553E-5	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999998387331421	WITHOUT_CLASSIFICATION	1.6126685792773792E-7	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999920883023388	WITHOUT_CLASSIFICATION	7.911697661223513E-6	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999993267695353	WITHOUT_CLASSIFICATION	6.732304646355395E-7	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999998537672219	WITHOUT_CLASSIFICATION	1.462327780664711E-7	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999998380391448	WITHOUT_CLASSIFICATION	1.6196085517683987E-7	TEST
// hash	WITHOUT_CLASSIFICATION	0.9999957784041973	WITHOUT_CLASSIFICATION	4.221595802725448E-6	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999634437048723	WITHOUT_CLASSIFICATION	3.655629512753192E-5	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999618732419164	WITHOUT_CLASSIFICATION	3.812675808361483E-5	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999998557861592	WITHOUT_CLASSIFICATION	1.4421384079505705E-7	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999996505207406	WITHOUT_CLASSIFICATION	3.4947925941945023E-7	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999992558751055	WITHOUT_CLASSIFICATION	7.441248945279407E-7	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999995678219284	WITHOUT_CLASSIFICATION	4.3217807157156236E-7	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9999862898186084	WITHOUT_CLASSIFICATION	1.3710181391546598E-5	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999999219877677	WITHOUT_CLASSIFICATION	7.801223236025805E-8	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999993380749775	WITHOUT_CLASSIFICATION	6.619250225984624E-7	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999985316221763	WITHOUT_CLASSIFICATION	1.4683778236161785E-6	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.999999640623715	WITHOUT_CLASSIFICATION	3.5937628490754763E-7	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999984312751523	WITHOUT_CLASSIFICATION	1.5687248476273562E-6	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999998373154892	WITHOUT_CLASSIFICATION	1.6268451069397626E-7	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999994571592175	WITHOUT_CLASSIFICATION	5.428407825910522E-7	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999988828597549	WITHOUT_CLASSIFICATION	1.1171402450982864E-6	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999998115568421	WITHOUT_CLASSIFICATION	1.8844315791569212E-7	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999993666545294	WITHOUT_CLASSIFICATION	6.333454707233777E-7	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999999167120492	WITHOUT_CLASSIFICATION	8.328795081127896E-8	TEST
// space	WITHOUT_CLASSIFICATION	0.9999997400663785	WITHOUT_CLASSIFICATION	2.5993362145254597E-7	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.999977199539519	WITHOUT_CLASSIFICATION	2.2800460481044658E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999997720934485	WITHOUT_CLASSIFICATION	2.2790655156034574E-7	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999999691579563	WITHOUT_CLASSIFICATION	3.084204370338464E-8	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999999167120492	WITHOUT_CLASSIFICATION	8.328795081127896E-8	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999381310601656	WITHOUT_CLASSIFICATION	6.186893983435637E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999381310601656	WITHOUT_CLASSIFICATION	6.186893983435637E-5	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.999985100464959	WITHOUT_CLASSIFICATION	1.4899535041049959E-5	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.999999813502769	WITHOUT_CLASSIFICATION	1.8649723104524701E-7	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999999709230118	WITHOUT_CLASSIFICATION	2.9076988105889252E-8	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.999999125524988	WITHOUT_CLASSIFICATION	8.7447501182157E-7	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999995085891975	WITHOUT_CLASSIFICATION	4.914108025168155E-7	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999999364984425	WITHOUT_CLASSIFICATION	6.350155743419816E-8	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999996035359751	WITHOUT_CLASSIFICATION	3.9646402498483386E-7	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9788605756453971	WITHOUT_CLASSIFICATION	0.021139424354602906	TEST
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999999221610982	WITHOUT_CLASSIFICATION	7.783890177856011E-8	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999992424837069	WITHOUT_CLASSIFICATION	7.57516293029154E-7	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.999999108626416	WITHOUT_CLASSIFICATION	8.913735841311432E-7	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999872575348	WITHOUT_CLASSIFICATION	1.274246522300189E-8	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999984712416407	WITHOUT_CLASSIFICATION	1.5287583592910425E-6	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999973013458712	WITHOUT_CLASSIFICATION	2.698654128900477E-6	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999982905946734	WITHOUT_CLASSIFICATION	1.7094053266451146E-6	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999984453069616	WITHOUT_CLASSIFICATION	1.5546930383235173E-6	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999996679359906	WITHOUT_CLASSIFICATION	3.320640094095818E-7	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999725043447676	WITHOUT_CLASSIFICATION	2.749565523238876E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999725043447676	WITHOUT_CLASSIFICATION	2.749565523238876E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999725043447676	WITHOUT_CLASSIFICATION	2.749565523238876E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999725043447676	WITHOUT_CLASSIFICATION	2.749565523238876E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999725043447676	WITHOUT_CLASSIFICATION	2.749565523238876E-5	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999986764215055	WITHOUT_CLASSIFICATION	1.3235784944213968E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999974622664147	WITHOUT_CLASSIFICATION	2.5377335853331737E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999941237960424	WITHOUT_CLASSIFICATION	5.876203957660904E-6	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.999999959966917	WITHOUT_CLASSIFICATION	4.00330829212883E-8	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999967448439715	WITHOUT_CLASSIFICATION	3.2551560285331974E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999999974772797	WITHOUT_CLASSIFICATION	2.5227203033418054E-8	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999992924815506	WITHOUT_CLASSIFICATION	7.07518449385803E-7	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999997466457216	WITHOUT_CLASSIFICATION	2.533542785067325E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999997990460007	WITHOUT_CLASSIFICATION	2.0095399933415377E-7	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999993342145984	WITHOUT_CLASSIFICATION	6.657854016443219E-7	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999993772401199	WITHOUT_CLASSIFICATION	6.227598802062113E-7	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999988376335978	WITHOUT_CLASSIFICATION	1.1623664021815219E-6	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999990329543589	WITHOUT_CLASSIFICATION	9.67045641062652E-7	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999991331919377	WITHOUT_CLASSIFICATION	8.668080621875515E-7	TEST
// line 317	WITHOUT_CLASSIFICATION	0.999999157013075	WITHOUT_CLASSIFICATION	8.42986924989501E-7	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999989325645644	WITHOUT_CLASSIFICATION	1.0674354356994278E-6	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999990005653023	WITHOUT_CLASSIFICATION	9.994346976327888E-7	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999990341693068	WITHOUT_CLASSIFICATION	9.658306932545054E-7	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999990849561481	WITHOUT_CLASSIFICATION	9.150438519617646E-7	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999990527485116	WITHOUT_CLASSIFICATION	9.472514883784088E-7	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999990572955894	WITHOUT_CLASSIFICATION	9.427044105452622E-7	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999991346307154	WITHOUT_CLASSIFICATION	8.653692846059537E-7	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999989833605327	WITHOUT_CLASSIFICATION	1.0166394672581977E-6	TEST
// line 378	WITHOUT_CLASSIFICATION	0.999999056226325	WITHOUT_CLASSIFICATION	9.437736748620231E-7	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999988736961285	WITHOUT_CLASSIFICATION	1.1263038714933616E-6	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999994366934752	WITHOUT_CLASSIFICATION	5.633065246924359E-7	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999994424490413	WITHOUT_CLASSIFICATION	5.575509586978811E-7	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999994922761173	WITHOUT_CLASSIFICATION	5.077238826319839E-7	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999995139736207	WITHOUT_CLASSIFICATION	4.860263792562894E-7	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999992638679402	WITHOUT_CLASSIFICATION	7.361320597626235E-7	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999993862129728	WITHOUT_CLASSIFICATION	6.137870272133875E-7	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999992912810289	WITHOUT_CLASSIFICATION	7.087189711530489E-7	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999992768263498	WITHOUT_CLASSIFICATION	7.231736502095608E-7	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999994682982211	WITHOUT_CLASSIFICATION	5.317017788197794E-7	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999994307163363	WITHOUT_CLASSIFICATION	5.692836635953495E-7	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999995131312238	WITHOUT_CLASSIFICATION	4.8686877606341E-7	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999994704222567	WITHOUT_CLASSIFICATION	5.295777433086575E-7	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999994992915148	WITHOUT_CLASSIFICATION	5.007084852542392E-7	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999994539387091	WITHOUT_CLASSIFICATION	5.460612908412568E-7	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999994293574932	WITHOUT_CLASSIFICATION	5.706425068970094E-7	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999994210431952	WITHOUT_CLASSIFICATION	5.789568049006897E-7	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999994400143909	WITHOUT_CLASSIFICATION	5.59985609075149E-7	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999993236159148	WITHOUT_CLASSIFICATION	6.763840850992569E-7	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999993667208726	WITHOUT_CLASSIFICATION	6.332791273360814E-7	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999993709362356	WITHOUT_CLASSIFICATION	6.290637643927779E-7	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999994051613169	WITHOUT_CLASSIFICATION	5.948386831258418E-7	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999994391582708	WITHOUT_CLASSIFICATION	5.608417290652E-7	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999994954077375	WITHOUT_CLASSIFICATION	5.045922625468686E-7	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999994481581519	WITHOUT_CLASSIFICATION	5.518418480016713E-7	TEST
// line 525	WITHOUT_CLASSIFICATION	0.999999384461506	WITHOUT_CLASSIFICATION	6.155384940127799E-7	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999941237960424	WITHOUT_CLASSIFICATION	5.876203957660904E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999993196042063	WITHOUT_CLASSIFICATION	6.803957937707805E-7	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999994195600517	WITHOUT_CLASSIFICATION	5.804399482871662E-7	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999992973417305	WITHOUT_CLASSIFICATION	7.026582693342141E-7	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999994834192913	WITHOUT_CLASSIFICATION	5.165807087558584E-7	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999994810098671	WITHOUT_CLASSIFICATION	5.189901328361798E-7	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999994140976416	WITHOUT_CLASSIFICATION	5.859023584203409E-7	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999993193067512	WITHOUT_CLASSIFICATION	6.806932489094222E-7	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999994815811664	WITHOUT_CLASSIFICATION	5.184188335605187E-7	TEST
// line 569	WITHOUT_CLASSIFICATION	0.999999433911264	WITHOUT_CLASSIFICATION	5.660887359314582E-7	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999994829971275	WITHOUT_CLASSIFICATION	5.170028724688063E-7	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999994608310091	WITHOUT_CLASSIFICATION	5.39168991019583E-7	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999994548882813	WITHOUT_CLASSIFICATION	5.4511171868467E-7	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999994328840809	WITHOUT_CLASSIFICATION	5.67115919105494E-7	TEST
// line 604	WITHOUT_CLASSIFICATION	0.999999393396119	WITHOUT_CLASSIFICATION	6.066038809721555E-7	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999994285367255	WITHOUT_CLASSIFICATION	5.714632745049884E-7	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999994857183658	WITHOUT_CLASSIFICATION	5.142816340953557E-7	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999993202216239	WITHOUT_CLASSIFICATION	6.79778376196525E-7	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999994835601367	WITHOUT_CLASSIFICATION	5.164398633607507E-7	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999992988604786	WITHOUT_CLASSIFICATION	7.011395213949105E-7	TEST
// line 638	WITHOUT_CLASSIFICATION	0.999999232521793	WITHOUT_CLASSIFICATION	7.674782069247812E-7	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999992851815721	WITHOUT_CLASSIFICATION	7.148184278865368E-7	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999994555140365	WITHOUT_CLASSIFICATION	5.444859634522129E-7	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999994800955657	WITHOUT_CLASSIFICATION	5.19904434337093E-7	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999993964038185	WITHOUT_CLASSIFICATION	6.035961814800184E-7	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999994786712499	WITHOUT_CLASSIFICATION	5.213287499929653E-7	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999994549526983	WITHOUT_CLASSIFICATION	5.450473017517173E-7	TEST
// line 672	WITHOUT_CLASSIFICATION	0.999999413317779	WITHOUT_CLASSIFICATION	5.866822210335528E-7	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999993948450712	WITHOUT_CLASSIFICATION	6.051549288480646E-7	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999994057566414	WITHOUT_CLASSIFICATION	5.942433585495464E-7	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999994890479095	WITHOUT_CLASSIFICATION	5.109520905906315E-7	TEST
// line 720	WITHOUT_CLASSIFICATION	0.999999265263182	WITHOUT_CLASSIFICATION	7.347368181844907E-7	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999993873763257	WITHOUT_CLASSIFICATION	6.126236744240276E-7	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999992347834947	WITHOUT_CLASSIFICATION	7.652165053070817E-7	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999991840702784	WITHOUT_CLASSIFICATION	8.159297215007653E-7	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999993172259434	WITHOUT_CLASSIFICATION	6.827740566117296E-7	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999992360431329	WITHOUT_CLASSIFICATION	7.639568671693992E-7	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999994521827423	WITHOUT_CLASSIFICATION	5.478172576913741E-7	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999994912677341	WITHOUT_CLASSIFICATION	5.087322658276117E-7	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999994824611846	WITHOUT_CLASSIFICATION	5.175388153859522E-7	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999994200813828	WITHOUT_CLASSIFICATION	5.799186172689514E-7	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999993025296711	WITHOUT_CLASSIFICATION	6.974703289599756E-7	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999994199602223	WITHOUT_CLASSIFICATION	5.80039777675052E-7	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999993810354951	WITHOUT_CLASSIFICATION	6.189645049317967E-7	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999994822313472	WITHOUT_CLASSIFICATION	5.177686527311422E-7	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999993529441731	WITHOUT_CLASSIFICATION	6.470558269283706E-7	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999994300102569	WITHOUT_CLASSIFICATION	5.699897430785189E-7	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999993632513939	WITHOUT_CLASSIFICATION	6.367486060431753E-7	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999994087438578	WITHOUT_CLASSIFICATION	5.912561421561586E-7	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999993988112811	WITHOUT_CLASSIFICATION	6.011887190383876E-7	TEST
// line 803	WITHOUT_CLASSIFICATION	0.999998975096382	WITHOUT_CLASSIFICATION	1.024903618000391E-6	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999993294313507	WITHOUT_CLASSIFICATION	6.705686493119316E-7	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999992395563095	WITHOUT_CLASSIFICATION	7.604436904947159E-7	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999994665967205	WITHOUT_CLASSIFICATION	5.334032796447105E-7	TEST
// line 818	WITHOUT_CLASSIFICATION	0.999999444769908	WITHOUT_CLASSIFICATION	5.552300918937227E-7	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999992571008495	WITHOUT_CLASSIFICATION	7.428991504991312E-7	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999993069124041	WITHOUT_CLASSIFICATION	6.93087595899973E-7	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999991403615975	WITHOUT_CLASSIFICATION	8.596384025577521E-7	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999991999101463	WITHOUT_CLASSIFICATION	8.000898537071666E-7	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999992230762162	WITHOUT_CLASSIFICATION	7.76923783790591E-7	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999991224000038	WITHOUT_CLASSIFICATION	8.775999962639991E-7	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999993233335531	WITHOUT_CLASSIFICATION	6.766664467826491E-7	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999994002846219	WITHOUT_CLASSIFICATION	5.997153780991749E-7	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999993663550525	WITHOUT_CLASSIFICATION	6.336449475351315E-7	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999994309002709	WITHOUT_CLASSIFICATION	5.69099729120466E-7	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999993755848876	WITHOUT_CLASSIFICATION	6.244151123699047E-7	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999994108013549	WITHOUT_CLASSIFICATION	5.891986451470127E-7	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999993890457729	WITHOUT_CLASSIFICATION	6.109542272323396E-7	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999994386296228	WITHOUT_CLASSIFICATION	5.613703771500332E-7	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999993658073083	WITHOUT_CLASSIFICATION	6.34192691756375E-7	TEST
// line 883	WITHOUT_CLASSIFICATION	0.99999920482529	WITHOUT_CLASSIFICATION	7.951747100158868E-7	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999991308968568	WITHOUT_CLASSIFICATION	8.691031433318418E-7	TEST
// line 896	WITHOUT_CLASSIFICATION	0.999999361639702	WITHOUT_CLASSIFICATION	6.383602979617965E-7	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999993400827026	WITHOUT_CLASSIFICATION	6.599172973740641E-7	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999989327762727	WITHOUT_CLASSIFICATION	1.0672237273187395E-6	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999993424619097	WITHOUT_CLASSIFICATION	6.575380903094648E-7	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999994379838204	WITHOUT_CLASSIFICATION	5.620161795704601E-7	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999991413468249	WITHOUT_CLASSIFICATION	8.586531749985528E-7	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999990470285515	WITHOUT_CLASSIFICATION	9.529714485730124E-7	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999992840728242	WITHOUT_CLASSIFICATION	7.159271758326938E-7	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999990477064764	WITHOUT_CLASSIFICATION	9.522935236241343E-7	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999991814703236	WITHOUT_CLASSIFICATION	8.185296764707968E-7	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999993136458221	WITHOUT_CLASSIFICATION	6.863541778910102E-7	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999993683214774	WITHOUT_CLASSIFICATION	6.316785226008254E-7	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999993346539745	WITHOUT_CLASSIFICATION	6.653460255517667E-7	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999994243866915	WITHOUT_CLASSIFICATION	5.756133084629994E-7	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999993237104534	WITHOUT_CLASSIFICATION	6.762895466198629E-7	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999993918886309	WITHOUT_CLASSIFICATION	6.081113691141995E-7	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999994158856562	WITHOUT_CLASSIFICATION	5.841143438007197E-7	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999993135695707	WITHOUT_CLASSIFICATION	6.864304292522304E-7	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999993627682434	WITHOUT_CLASSIFICATION	6.372317564723761E-7	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999992608682374	WITHOUT_CLASSIFICATION	7.391317626215346E-7	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999993340582123	WITHOUT_CLASSIFICATION	6.659417876781111E-7	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999993456253127	WITHOUT_CLASSIFICATION	6.543746873354883E-7	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999993805168498	WITHOUT_CLASSIFICATION	6.194831502125571E-7	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999993215051783	WITHOUT_CLASSIFICATION	6.784948215478174E-7	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999994024829201	WITHOUT_CLASSIFICATION	5.975170798765369E-7	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999992925876683	WITHOUT_CLASSIFICATION	7.074123316224031E-7	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999994431927316	WITHOUT_CLASSIFICATION	5.56807268521309E-7	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999991749230396	WITHOUT_CLASSIFICATION	8.250769603881539E-7	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999990124095594	WITHOUT_CLASSIFICATION	9.875904405571064E-7	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999991549611817	WITHOUT_CLASSIFICATION	8.450388181749793E-7	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999994686096036	WITHOUT_CLASSIFICATION	5.31390396306559E-7	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999993992373609	WITHOUT_CLASSIFICATION	6.007626391123216E-7	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999993220563989	WITHOUT_CLASSIFICATION	6.779436011370189E-7	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999993707265121	WITHOUT_CLASSIFICATION	6.292734878037217E-7	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999995285742403	WITHOUT_CLASSIFICATION	4.7142575969729065E-7	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999992928632531	WITHOUT_CLASSIFICATION	7.071367469785627E-7	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999994801830855	WITHOUT_CLASSIFICATION	5.1981691453958E-7	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999994128934208	WITHOUT_CLASSIFICATION	5.87106579171686E-7	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999992383498915	WITHOUT_CLASSIFICATION	7.616501085463365E-7	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999992681986271	WITHOUT_CLASSIFICATION	7.318013729083534E-7	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999993834108439	WITHOUT_CLASSIFICATION	6.16589156060839E-7	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.999999436629814	WITHOUT_CLASSIFICATION	5.633701859203057E-7	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999991769550332	WITHOUT_CLASSIFICATION	8.230449668920422E-7	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.999999492817993	WITHOUT_CLASSIFICATION	5.071820070387602E-7	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999993975255116	WITHOUT_CLASSIFICATION	6.024744884355117E-7	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999992996619318	WITHOUT_CLASSIFICATION	7.003380682210856E-7	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999995011367424	WITHOUT_CLASSIFICATION	4.988632575723803E-7	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999994205559682	WITHOUT_CLASSIFICATION	5.79444031856041E-7	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999992482781077	WITHOUT_CLASSIFICATION	7.51721892341023E-7	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999993003491289	WITHOUT_CLASSIFICATION	6.996508712096826E-7	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.99999933857474	WITHOUT_CLASSIFICATION	6.614252600981013E-7	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999993316489658	WITHOUT_CLASSIFICATION	6.683510341675066E-7	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999994345179459	WITHOUT_CLASSIFICATION	5.654820540887788E-7	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999994335164235	WITHOUT_CLASSIFICATION	5.664835765535435E-7	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999995094550639	WITHOUT_CLASSIFICATION	4.905449360627056E-7	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999994742128023	WITHOUT_CLASSIFICATION	5.257871977428494E-7	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999994961267575	WITHOUT_CLASSIFICATION	5.038732424551738E-7	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999995241562386	WITHOUT_CLASSIFICATION	4.7584376135844924E-7	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999994719225529	WITHOUT_CLASSIFICATION	5.28077446986993E-7	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999994779210507	WITHOUT_CLASSIFICATION	5.220789493292226E-7	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999994065370336	WITHOUT_CLASSIFICATION	5.934629663903697E-7	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999992371483727	WITHOUT_CLASSIFICATION	7.628516273558956E-7	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999992785209202	WITHOUT_CLASSIFICATION	7.214790798054002E-7	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999993194195756	WITHOUT_CLASSIFICATION	6.805804243020274E-7	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.999999384227312	WITHOUT_CLASSIFICATION	6.157726878889078E-7	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999993959114517	WITHOUT_CLASSIFICATION	6.040885482337529E-7	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999992860139042	WITHOUT_CLASSIFICATION	7.13986095839198E-7	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999991517264925	WITHOUT_CLASSIFICATION	8.482735074894038E-7	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999991948244193	WITHOUT_CLASSIFICATION	8.051755805757962E-7	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999994180406648	WITHOUT_CLASSIFICATION	5.819593351548821E-7	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999993405183201	WITHOUT_CLASSIFICATION	6.594816798714722E-7	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999992110863154	WITHOUT_CLASSIFICATION	7.889136846728276E-7	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999993439128428	WITHOUT_CLASSIFICATION	6.560871571268246E-7	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999992830867738	WITHOUT_CLASSIFICATION	7.169132262955744E-7	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999991381696097	WITHOUT_CLASSIFICATION	8.618303903553806E-7	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999991863809943	WITHOUT_CLASSIFICATION	8.136190058295369E-7	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999992739278992	WITHOUT_CLASSIFICATION	7.260721007358772E-7	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999992494089331	WITHOUT_CLASSIFICATION	7.505910667172838E-7	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999990823678768	WITHOUT_CLASSIFICATION	9.176321232603096E-7	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999991093995615	WITHOUT_CLASSIFICATION	8.906004384468457E-7	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.99999927374648	WITHOUT_CLASSIFICATION	7.262535200026224E-7	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999993160618125	WITHOUT_CLASSIFICATION	6.83938187435347E-7	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999990251433991	WITHOUT_CLASSIFICATION	9.748566009434813E-7	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999991132664573	WITHOUT_CLASSIFICATION	8.867335427253691E-7	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999993145277897	WITHOUT_CLASSIFICATION	6.854722103283918E-7	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999992608070016	WITHOUT_CLASSIFICATION	7.3919299837516E-7	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999992370635349	WITHOUT_CLASSIFICATION	7.629364652426982E-7	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999992770105309	WITHOUT_CLASSIFICATION	7.229894690896768E-7	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999993178935549	WITHOUT_CLASSIFICATION	6.821064450382047E-7	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999991287265813	WITHOUT_CLASSIFICATION	8.712734188558861E-7	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.999999268547311	WITHOUT_CLASSIFICATION	7.314526889642656E-7	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999991031860734	WITHOUT_CLASSIFICATION	8.96813926499245E-7	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999994959661038	WITHOUT_CLASSIFICATION	5.040338961930876E-7	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999991897167456	WITHOUT_CLASSIFICATION	8.102832544512904E-7	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999993022237293	WITHOUT_CLASSIFICATION	6.977762707362672E-7	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999994117412053	WITHOUT_CLASSIFICATION	5.882587946865183E-7	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999992879281787	WITHOUT_CLASSIFICATION	7.120718213386273E-7	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999993378282473	WITHOUT_CLASSIFICATION	6.621717526214869E-7	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999995229706373	WITHOUT_CLASSIFICATION	4.770293626251741E-7	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.999999415798259	WITHOUT_CLASSIFICATION	5.842017410372827E-7	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999995088079079	WITHOUT_CLASSIFICATION	4.911920921333177E-7	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999994625722655	WITHOUT_CLASSIFICATION	5.374277344921511E-7	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999994852529298	WITHOUT_CLASSIFICATION	5.14747070283706E-7	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.99999937729878	WITHOUT_CLASSIFICATION	6.227012200907937E-7	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.999999467694323	WITHOUT_CLASSIFICATION	5.323056770366078E-7	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999994344723023	WITHOUT_CLASSIFICATION	5.65527697659907E-7	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999994284047978	WITHOUT_CLASSIFICATION	5.715952022238861E-7	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.999999334839114	WITHOUT_CLASSIFICATION	6.651608861332137E-7	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999994831827246	WITHOUT_CLASSIFICATION	5.168172754706737E-7	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999993168637876	WITHOUT_CLASSIFICATION	6.831362124296778E-7	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.999999499081894	WITHOUT_CLASSIFICATION	5.009181060136586E-7	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999993197727669	WITHOUT_CLASSIFICATION	6.802272331795106E-7	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999994338043813	WITHOUT_CLASSIFICATION	5.661956187679899E-7	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999993186831779	WITHOUT_CLASSIFICATION	6.813168220811986E-7	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.999999504278163	WITHOUT_CLASSIFICATION	4.957218370246942E-7	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999995049807391	WITHOUT_CLASSIFICATION	4.950192609860841E-7	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.999999477990201	WITHOUT_CLASSIFICATION	5.220097990567873E-7	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999994437670752	WITHOUT_CLASSIFICATION	5.562329247887422E-7	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999995147612356	WITHOUT_CLASSIFICATION	4.852387643548184E-7	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999995064481607	WITHOUT_CLASSIFICATION	4.935518393557416E-7	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999994794179468	WITHOUT_CLASSIFICATION	5.205820532103535E-7	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.99999944361223	WITHOUT_CLASSIFICATION	5.563877699116926E-7	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999994104245875	WITHOUT_CLASSIFICATION	5.895754124397778E-7	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999993845871021	WITHOUT_CLASSIFICATION	6.154128977957556E-7	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999993352552049	WITHOUT_CLASSIFICATION	6.647447951206752E-7	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999992136397772	WITHOUT_CLASSIFICATION	7.863602227640601E-7	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999993879017391	WITHOUT_CLASSIFICATION	6.120982607416287E-7	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999992631766071	WITHOUT_CLASSIFICATION	7.3682339280734E-7	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999992093589719	WITHOUT_CLASSIFICATION	7.906410281121058E-7	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999992597225663	WITHOUT_CLASSIFICATION	7.402774335839546E-7	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999994068599205	WITHOUT_CLASSIFICATION	5.931400793892945E-7	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999994759121107	WITHOUT_CLASSIFICATION	5.24087889251565E-7	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999994273223156	WITHOUT_CLASSIFICATION	5.726776843971701E-7	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999994985787479	WITHOUT_CLASSIFICATION	5.014212520428591E-7	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999994718322138	WITHOUT_CLASSIFICATION	5.281677861465471E-7	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.999999394462949	WITHOUT_CLASSIFICATION	6.055370509649166E-7	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999994342079545	WITHOUT_CLASSIFICATION	5.657920454486651E-7	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999994965435471	WITHOUT_CLASSIFICATION	5.034564529102422E-7	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.999999464091624	WITHOUT_CLASSIFICATION	5.359083759393554E-7	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999994263589276	WITHOUT_CLASSIFICATION	5.736410724177361E-7	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999994281394622	WITHOUT_CLASSIFICATION	5.718605378300953E-7	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999993449619154	WITHOUT_CLASSIFICATION	6.550380844274493E-7	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.999999433844497	WITHOUT_CLASSIFICATION	5.661555029119739E-7	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.999999309461149	WITHOUT_CLASSIFICATION	6.905388510722972E-7	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999994166985121	WITHOUT_CLASSIFICATION	5.833014877779809E-7	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999995176253795	WITHOUT_CLASSIFICATION	4.823746204687835E-7	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999994343236435	WITHOUT_CLASSIFICATION	5.6567635646736E-7	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999995051545113	WITHOUT_CLASSIFICATION	4.948454886129781E-7	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999994454147947	WITHOUT_CLASSIFICATION	5.54585205387692E-7	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999994082046938	WITHOUT_CLASSIFICATION	5.917953062293853E-7	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999995049559002	WITHOUT_CLASSIFICATION	4.950440998765517E-7	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999994593480468	WITHOUT_CLASSIFICATION	5.406519532882489E-7	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999992991133051	WITHOUT_CLASSIFICATION	7.008866949499255E-7	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999994432979135	WITHOUT_CLASSIFICATION	5.567020865854305E-7	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.999999431377104	WITHOUT_CLASSIFICATION	5.686228959649241E-7	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.999999358030182	WITHOUT_CLASSIFICATION	6.419698179084487E-7	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999985208701795	WITHOUT_CLASSIFICATION	1.4791298205483324E-6	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9998724424564033	WITHOUT_CLASSIFICATION	1.2755754359675345E-4	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999556997024998	WITHOUT_CLASSIFICATION	4.430029750028885E-5	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.999977441054724	WITHOUT_CLASSIFICATION	2.2558945276037092E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999941565327536	WITHOUT_CLASSIFICATION	5.843467246388956E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999978645480535	WITHOUT_CLASSIFICATION	2.135451946453854E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999914801272736	WITHOUT_CLASSIFICATION	8.519872726402641E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999922209011518	WITHOUT_CLASSIFICATION	7.779098848116773E-6	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999917461777872	WITHOUT_CLASSIFICATION	8.253822212823227E-6	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.999990737303236	WITHOUT_CLASSIFICATION	9.262696764098724E-6	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.999999574745821	WITHOUT_CLASSIFICATION	4.252541790572479E-7	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999992610054765	WITHOUT_CLASSIFICATION	7.389945234848014E-7	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999958243842298	WITHOUT_CLASSIFICATION	4.175615770144257E-6	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999481232485805	WITHOUT_CLASSIFICATION	5.187675141957739E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999942697633062	WITHOUT_CLASSIFICATION	5.7302366937635695E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999059146479795	WITHOUT_CLASSIFICATION	9.408535202048917E-5	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.999950572908259	WITHOUT_CLASSIFICATION	4.942709174116189E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.999985058470537	WITHOUT_CLASSIFICATION	1.4941529463070326E-5	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999128261464	WITHOUT_CLASSIFICATION	8.717385354948283E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999719380277	WITHOUT_CLASSIFICATION	2.806197237293053E-8	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999979174801356	WITHOUT_CLASSIFICATION	2.082519864446084E-6	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999992552351695	WITHOUT_CLASSIFICATION	7.447648305346099E-7	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999998143427995	WITHOUT_CLASSIFICATION	1.856572005259733E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999647664087	WITHOUT_CLASSIFICATION	3.52335911822265E-8	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999647664087	WITHOUT_CLASSIFICATION	3.52335911822265E-8	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999928259130306	WITHOUT_CLASSIFICATION	7.1740869693622685E-6	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999796846111515	WITHOUT_CLASSIFICATION	2.0315388848515146E-5	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999965229725511	WITHOUT_CLASSIFICATION	3.4770274488465556E-6	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999997478171895	WITHOUT_CLASSIFICATION	2.5218281046155106E-7	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999995827665488	WITHOUT_CLASSIFICATION	4.172334511662085E-7	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999998491844773	WITHOUT_CLASSIFICATION	1.5081552282978689E-7	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999999691321543	WITHOUT_CLASSIFICATION	3.086784574423097E-8	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999992059865874	WITHOUT_CLASSIFICATION	7.940134125472554E-7	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.999999776845584	WITHOUT_CLASSIFICATION	2.2315441580823888E-7	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999994671039036	WITHOUT_CLASSIFICATION	5.328960964467441E-7	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999950496437332	WITHOUT_CLASSIFICATION	4.950356266751414E-6	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.999984157505538	WITHOUT_CLASSIFICATION	1.58424944619971E-5	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999999962566718	WITHOUT_CLASSIFICATION	3.743328154550172E-9	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999964099190296	WITHOUT_CLASSIFICATION	3.5900809703994035E-6	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999966145946321	WITHOUT_CLASSIFICATION	3.38540536782636E-6	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999971204836934	WITHOUT_CLASSIFICATION	2.879516306538634E-6	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999995327566504	WITHOUT_CLASSIFICATION	4.672433495325716E-7	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999988643356251	WITHOUT_CLASSIFICATION	1.1356643748648174E-6	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999999736584835	WITHOUT_CLASSIFICATION	2.6341516554821847E-8	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999982812617451	WITHOUT_CLASSIFICATION	1.7187382548928106E-6	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999966904856	WITHOUT_CLASSIFICATION	3.309514382379827E-9	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999989717477901	WITHOUT_CLASSIFICATION	1.0282522099615358E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.983382920399371	WITHOUT_CLASSIFICATION	0.01661707960062901	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999996523050104	WITHOUT_CLASSIFICATION	3.4769498968842873E-7	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.983382920399371	WITHOUT_CLASSIFICATION	0.01661707960062901	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999995210753645	WITHOUT_CLASSIFICATION	4.78924635566456E-7	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999996013221697	WITHOUT_CLASSIFICATION	3.9867783022131016E-7	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999970246270414	WITHOUT_CLASSIFICATION	2.97537295848522E-6	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999957410462259	WITHOUT_CLASSIFICATION	4.258953774128335E-6	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999999251496852	WITHOUT_CLASSIFICATION	7.485031476840886E-8	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999984871848171	WITHOUT_CLASSIFICATION	1.5128151828679957E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999984871848171	WITHOUT_CLASSIFICATION	1.5128151828679957E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999984871848171	WITHOUT_CLASSIFICATION	1.5128151828679957E-6	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999986990080166	WITHOUT_CLASSIFICATION	1.3009919833259278E-6	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999939641893374	WITHOUT_CLASSIFICATION	6.035810662616603E-6	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999998556123171	WITHOUT_CLASSIFICATION	1.443876828789856E-7	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999717560121114	WITHOUT_CLASSIFICATION	2.824398788865559E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999717560121114	WITHOUT_CLASSIFICATION	2.824398788865559E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999717560121114	WITHOUT_CLASSIFICATION	2.824398788865559E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999717560121114	WITHOUT_CLASSIFICATION	2.824398788865559E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999717560121114	WITHOUT_CLASSIFICATION	2.824398788865559E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999717560121114	WITHOUT_CLASSIFICATION	2.824398788865559E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999908277233177	WITHOUT_CLASSIFICATION	9.172276682262065E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999908277233177	WITHOUT_CLASSIFICATION	9.172276682262065E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999908277233177	WITHOUT_CLASSIFICATION	9.172276682262065E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999908277233177	WITHOUT_CLASSIFICATION	9.172276682262065E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999908277233177	WITHOUT_CLASSIFICATION	9.172276682262065E-6	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999852565998268	WITHOUT_CLASSIFICATION	1.4743400173178319E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999852565998268	WITHOUT_CLASSIFICATION	1.4743400173178319E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999852565998268	WITHOUT_CLASSIFICATION	1.4743400173178319E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999852565998268	WITHOUT_CLASSIFICATION	1.4743400173178319E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999852565998268	WITHOUT_CLASSIFICATION	1.4743400173178319E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999851738963605	WITHOUT_CLASSIFICATION	1.4826103639530943E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999851738963605	WITHOUT_CLASSIFICATION	1.4826103639530943E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999851738963605	WITHOUT_CLASSIFICATION	1.4826103639530943E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999851738963605	WITHOUT_CLASSIFICATION	1.4826103639530943E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999851738963605	WITHOUT_CLASSIFICATION	1.4826103639530943E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999851738963605	WITHOUT_CLASSIFICATION	1.4826103639530943E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999949122133722	WITHOUT_CLASSIFICATION	5.087786627791929E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999949122133722	WITHOUT_CLASSIFICATION	5.087786627791929E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999949122133722	WITHOUT_CLASSIFICATION	5.087786627791929E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999949122133722	WITHOUT_CLASSIFICATION	5.087786627791929E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999949122133722	WITHOUT_CLASSIFICATION	5.087786627791929E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999939890094975	WITHOUT_CLASSIFICATION	6.010990502534117E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999939890094975	WITHOUT_CLASSIFICATION	6.010990502534117E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999939890094975	WITHOUT_CLASSIFICATION	6.010990502534117E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999939890094975	WITHOUT_CLASSIFICATION	6.010990502534117E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999939890094975	WITHOUT_CLASSIFICATION	6.010990502534117E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999941237960424	WITHOUT_CLASSIFICATION	5.876203957660904E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999941237960424	WITHOUT_CLASSIFICATION	5.876203957660904E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999941237960424	WITHOUT_CLASSIFICATION	5.876203957660904E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999941237960424	WITHOUT_CLASSIFICATION	5.876203957660904E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999941237960424	WITHOUT_CLASSIFICATION	5.876203957660904E-6	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.999999959966917	WITHOUT_CLASSIFICATION	4.00330829212883E-8	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999999974772797	WITHOUT_CLASSIFICATION	2.5227203033418054E-8	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999992924815506	WITHOUT_CLASSIFICATION	7.07518449385803E-7	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999997466457216	WITHOUT_CLASSIFICATION	2.533542785067325E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999997990460007	WITHOUT_CLASSIFICATION	2.0095399933415377E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.999998844485226	WITHOUT_CLASSIFICATION	1.1555147740014912E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999990527485116	WITHOUT_CLASSIFICATION	9.472514883784088E-7	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999988736961285	WITHOUT_CLASSIFICATION	1.1263038714933616E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999995139736207	WITHOUT_CLASSIFICATION	4.860263792562894E-7	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999992638679402	WITHOUT_CLASSIFICATION	7.361320597626235E-7	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999991830105681	WITHOUT_CLASSIFICATION	8.169894318244796E-7	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999993862129728	WITHOUT_CLASSIFICATION	6.137870272133875E-7	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999992324320265	WITHOUT_CLASSIFICATION	7.675679734927117E-7	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999990772738274	WITHOUT_CLASSIFICATION	9.227261726167873E-7	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999992226245822	WITHOUT_CLASSIFICATION	7.773754179010548E-7	TEST
// line 324	WITHOUT_CLASSIFICATION	0.999998921926291	WITHOUT_CLASSIFICATION	1.0780737089746292E-6	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999989580544317	WITHOUT_CLASSIFICATION	1.041945568329303E-6	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999989954123902	WITHOUT_CLASSIFICATION	1.0045876097780249E-6	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999990545567854	WITHOUT_CLASSIFICATION	9.454432146699344E-7	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999990824998507	WITHOUT_CLASSIFICATION	9.175001491849807E-7	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999989690760457	WITHOUT_CLASSIFICATION	1.0309239543530654E-6	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999991556548953	WITHOUT_CLASSIFICATION	8.443451046264168E-7	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999990361678472	WITHOUT_CLASSIFICATION	9.63832152712324E-7	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999991203318207	WITHOUT_CLASSIFICATION	8.796681794133971E-7	TEST
// line 368	WITHOUT_CLASSIFICATION	0.99999903251795	WITHOUT_CLASSIFICATION	9.674820499964496E-7	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999990953677599	WITHOUT_CLASSIFICATION	9.046322400876962E-7	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999990081563955	WITHOUT_CLASSIFICATION	9.918436044930695E-7	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999988308470157	WITHOUT_CLASSIFICATION	1.1691529843788352E-6	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999990120048803	WITHOUT_CLASSIFICATION	9.87995119638784E-7	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999992333303731	WITHOUT_CLASSIFICATION	7.666696267860253E-7	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999991844580526	WITHOUT_CLASSIFICATION	8.155419474153051E-7	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999992989879363	WITHOUT_CLASSIFICATION	7.010120637408349E-7	TEST
// line 445	WITHOUT_CLASSIFICATION	0.999999487668422	WITHOUT_CLASSIFICATION	5.123315779529621E-7	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999994208453327	WITHOUT_CLASSIFICATION	5.79154667307922E-7	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999994886903161	WITHOUT_CLASSIFICATION	5.113096839181119E-7	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999994477946481	WITHOUT_CLASSIFICATION	5.522053519259203E-7	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999994689850548	WITHOUT_CLASSIFICATION	5.310149452409426E-7	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999994201569092	WITHOUT_CLASSIFICATION	5.798430907678367E-7	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999994543539633	WITHOUT_CLASSIFICATION	5.456460367021364E-7	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999993874844185	WITHOUT_CLASSIFICATION	6.125155814134645E-7	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999994255577039	WITHOUT_CLASSIFICATION	5.744422961663328E-7	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999993994470879	WITHOUT_CLASSIFICATION	6.005529120441517E-7	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999994284202898	WITHOUT_CLASSIFICATION	5.71579710255001E-7	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999990892851285	WITHOUT_CLASSIFICATION	9.107148715473228E-7	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999994041677325	WITHOUT_CLASSIFICATION	5.958322675959498E-7	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999993243164036	WITHOUT_CLASSIFICATION	6.756835963132576E-7	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999994383953275	WITHOUT_CLASSIFICATION	5.616046725434277E-7	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999993471193079	WITHOUT_CLASSIFICATION	6.528806920416854E-7	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999994013068524	WITHOUT_CLASSIFICATION	5.986931476340618E-7	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999994195600517	WITHOUT_CLASSIFICATION	5.804399482871662E-7	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999992973417305	WITHOUT_CLASSIFICATION	7.026582693342141E-7	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999994834192913	WITHOUT_CLASSIFICATION	5.165807087558584E-7	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999994815811664	WITHOUT_CLASSIFICATION	5.184188335605187E-7	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999994857183658	WITHOUT_CLASSIFICATION	5.142816340953557E-7	TEST
// line 672	WITHOUT_CLASSIFICATION	0.999999413317779	WITHOUT_CLASSIFICATION	5.866822210335528E-7	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999993594121953	WITHOUT_CLASSIFICATION	6.405878046530735E-7	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999993948450712	WITHOUT_CLASSIFICATION	6.051549288480646E-7	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999993810354951	WITHOUT_CLASSIFICATION	6.189645049317967E-7	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999993529441731	WITHOUT_CLASSIFICATION	6.470558269283706E-7	TEST
// line 785	WITHOUT_CLASSIFICATION	0.999999463494401	WITHOUT_CLASSIFICATION	5.365055989800973E-7	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999994300102569	WITHOUT_CLASSIFICATION	5.699897430785189E-7	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999993632513939	WITHOUT_CLASSIFICATION	6.367486060431753E-7	TEST
// line 534	WITHOUT_CLASSIFICATION	0.999999311697989	WITHOUT_CLASSIFICATION	6.883020110269615E-7	TEST
// line 549	WITHOUT_CLASSIFICATION	0.999999416279735	WITHOUT_CLASSIFICATION	5.837202650460223E-7	TEST
// line 552	WITHOUT_CLASSIFICATION	0.999999395913492	WITHOUT_CLASSIFICATION	6.040865079185537E-7	TEST
// line 558	WITHOUT_CLASSIFICATION	0.999999427738117	WITHOUT_CLASSIFICATION	5.722618829722916E-7	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999994509045569	WITHOUT_CLASSIFICATION	5.490954431039886E-7	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999994567928712	WITHOUT_CLASSIFICATION	5.432071287663296E-7	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999994918969343	WITHOUT_CLASSIFICATION	5.081030658264053E-7	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999994361312571	WITHOUT_CLASSIFICATION	5.638687428711124E-7	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999994463607786	WITHOUT_CLASSIFICATION	5.536392213148415E-7	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999993803706568	WITHOUT_CLASSIFICATION	6.196293430775811E-7	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999993392075505	WITHOUT_CLASSIFICATION	6.607924495693694E-7	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999994148766995	WITHOUT_CLASSIFICATION	5.851233005591232E-7	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999993813332214	WITHOUT_CLASSIFICATION	6.186667785960907E-7	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999991843080183	WITHOUT_CLASSIFICATION	8.156919817533706E-7	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999993984164842	WITHOUT_CLASSIFICATION	6.015835158679387E-7	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999992204325148	WITHOUT_CLASSIFICATION	7.795674853737753E-7	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999992744359646	WITHOUT_CLASSIFICATION	7.255640354012789E-7	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999992041456389	WITHOUT_CLASSIFICATION	7.958543611125063E-7	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999994275781392	WITHOUT_CLASSIFICATION	5.724218607847515E-7	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999995056482179	WITHOUT_CLASSIFICATION	4.943517820592461E-7	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999994144007167	WITHOUT_CLASSIFICATION	5.855992832729879E-7	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999994463546616	WITHOUT_CLASSIFICATION	5.536453383356011E-7	TEST
// line 678	WITHOUT_CLASSIFICATION	0.999999460323723	WITHOUT_CLASSIFICATION	5.396762769121071E-7	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999993425615205	WITHOUT_CLASSIFICATION	6.574384794968623E-7	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999994210414004	WITHOUT_CLASSIFICATION	5.789585996108853E-7	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999993961997411	WITHOUT_CLASSIFICATION	6.038002589822113E-7	TEST
// line 706	WITHOUT_CLASSIFICATION	0.999999421880659	WITHOUT_CLASSIFICATION	5.781193408618487E-7	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999993149126056	WITHOUT_CLASSIFICATION	6.850873943240773E-7	TEST
// line 727	WITHOUT_CLASSIFICATION	0.99999936648633	WITHOUT_CLASSIFICATION	6.335136699008137E-7	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999992744504572	WITHOUT_CLASSIFICATION	7.255495428302672E-7	TEST
// line 753	WITHOUT_CLASSIFICATION	0.999999320446434	WITHOUT_CLASSIFICATION	6.795535659266544E-7	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999993990724638	WITHOUT_CLASSIFICATION	6.009275361645082E-7	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999992920315666	WITHOUT_CLASSIFICATION	7.079684334042922E-7	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999992487199222	WITHOUT_CLASSIFICATION	7.512800778955725E-7	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999993796969641	WITHOUT_CLASSIFICATION	6.203030360652929E-7	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999994592667732	WITHOUT_CLASSIFICATION	5.407332268613337E-7	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999993233335531	WITHOUT_CLASSIFICATION	6.766664467826491E-7	TEST
// line 845	WITHOUT_CLASSIFICATION	0.999999440415064	WITHOUT_CLASSIFICATION	5.595849360287758E-7	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999994002846219	WITHOUT_CLASSIFICATION	5.997153780991749E-7	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999991308968568	WITHOUT_CLASSIFICATION	8.691031433318418E-7	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999993400827026	WITHOUT_CLASSIFICATION	6.599172973740641E-7	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999990477064764	WITHOUT_CLASSIFICATION	9.522935236241343E-7	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999993683214774	WITHOUT_CLASSIFICATION	6.316785226008254E-7	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999993237104534	WITHOUT_CLASSIFICATION	6.762895466198629E-7	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999992608682374	WITHOUT_CLASSIFICATION	7.391317626215346E-7	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999994024829201	WITHOUT_CLASSIFICATION	5.975170798765369E-7	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.999999075000943	WITHOUT_CLASSIFICATION	9.249990570907141E-7	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999991829720998	WITHOUT_CLASSIFICATION	8.170279002828297E-7	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999993187619991	WITHOUT_CLASSIFICATION	6.812380009220913E-7	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999991490786675	WITHOUT_CLASSIFICATION	8.509213326254415E-7	TEST
// line 832	WITHOUT_CLASSIFICATION	0.99999909611542	WITHOUT_CLASSIFICATION	9.03884579923517E-7	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999993968262951	WITHOUT_CLASSIFICATION	6.031737048419175E-7	TEST
// line 857	WITHOUT_CLASSIFICATION	0.999999458144605	WITHOUT_CLASSIFICATION	5.418553950019203E-7	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999993563950849	WITHOUT_CLASSIFICATION	6.436049151713105E-7	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999992259339281	WITHOUT_CLASSIFICATION	7.740660719323097E-7	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999994104694191	WITHOUT_CLASSIFICATION	5.895305809580423E-7	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999993562606186	WITHOUT_CLASSIFICATION	6.437393813284593E-7	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999994535695614	WITHOUT_CLASSIFICATION	5.464304385018733E-7	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999994040340155	WITHOUT_CLASSIFICATION	5.959659845216765E-7	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999994234056726	WITHOUT_CLASSIFICATION	5.765943274772012E-7	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999992911736627	WITHOUT_CLASSIFICATION	7.088263372475586E-7	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999991843669862	WITHOUT_CLASSIFICATION	8.156330137659186E-7	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999992750547062	WITHOUT_CLASSIFICATION	7.24945293855317E-7	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999993353312244	WITHOUT_CLASSIFICATION	6.646687756435069E-7	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999994214585797	WITHOUT_CLASSIFICATION	5.785414203882645E-7	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999992774631808	WITHOUT_CLASSIFICATION	7.225368191346249E-7	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999992189670933	WITHOUT_CLASSIFICATION	7.810329066609939E-7	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999993332619922	WITHOUT_CLASSIFICATION	6.667380078940948E-7	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999993994678477	WITHOUT_CLASSIFICATION	6.005321523062857E-7	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999993622336131	WITHOUT_CLASSIFICATION	6.377663869095146E-7	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999993973934113	WITHOUT_CLASSIFICATION	6.026065886951018E-7	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999994180583005	WITHOUT_CLASSIFICATION	5.819416995329495E-7	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999993807804518	WITHOUT_CLASSIFICATION	6.192195481854586E-7	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999993891963727	WITHOUT_CLASSIFICATION	6.108036273295823E-7	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999991114592623	WITHOUT_CLASSIFICATION	8.885407376787344E-7	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999992501172753	WITHOUT_CLASSIFICATION	7.498827245808674E-7	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999991207697149	WITHOUT_CLASSIFICATION	8.792302850456082E-7	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999991732970845	WITHOUT_CLASSIFICATION	8.267029154671038E-7	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999993545115883	WITHOUT_CLASSIFICATION	6.454884117085553E-7	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999992497907023	WITHOUT_CLASSIFICATION	7.502092977492856E-7	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.999999412804432	WITHOUT_CLASSIFICATION	5.871955679593268E-7	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999994319714096	WITHOUT_CLASSIFICATION	5.680285903475562E-7	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999994548216715	WITHOUT_CLASSIFICATION	5.451783285058911E-7	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999993767565235	WITHOUT_CLASSIFICATION	6.232434764888471E-7	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999994940171484	WITHOUT_CLASSIFICATION	5.059828516076504E-7	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999994368482514	WITHOUT_CLASSIFICATION	5.631517485846924E-7	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999993975255116	WITHOUT_CLASSIFICATION	6.024744884355117E-7	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999994112259204	WITHOUT_CLASSIFICATION	5.887740796655227E-7	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999992482781077	WITHOUT_CLASSIFICATION	7.51721892341023E-7	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999994345179459	WITHOUT_CLASSIFICATION	5.654820540887788E-7	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999994742128023	WITHOUT_CLASSIFICATION	5.257871977428494E-7	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999992785209202	WITHOUT_CLASSIFICATION	7.214790798054002E-7	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999993194195756	WITHOUT_CLASSIFICATION	6.805804243020274E-7	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999994180406648	WITHOUT_CLASSIFICATION	5.819593351548821E-7	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999993405183201	WITHOUT_CLASSIFICATION	6.594816798714722E-7	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999993176479774	WITHOUT_CLASSIFICATION	6.823520224271331E-7	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999994387745657	WITHOUT_CLASSIFICATION	5.612254342941701E-7	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.999999334591817	WITHOUT_CLASSIFICATION	6.654081829347034E-7	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999993562206659	WITHOUT_CLASSIFICATION	6.43779334001781E-7	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999993857153164	WITHOUT_CLASSIFICATION	6.142846835958552E-7	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999991474581292	WITHOUT_CLASSIFICATION	8.525418708447729E-7	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999994799834994	WITHOUT_CLASSIFICATION	5.200165005733961E-7	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999994864684174	WITHOUT_CLASSIFICATION	5.135315826173448E-7	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999994522743273	WITHOUT_CLASSIFICATION	5.477256727855724E-7	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.999999406417339	WITHOUT_CLASSIFICATION	5.935826609875965E-7	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.999999416566955	WITHOUT_CLASSIFICATION	5.834330451084316E-7	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999992599303299	WITHOUT_CLASSIFICATION	7.400696701357735E-7	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999994795637085	WITHOUT_CLASSIFICATION	5.20436291532401E-7	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999994313209559	WITHOUT_CLASSIFICATION	5.68679044096143E-7	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999995008094485	WITHOUT_CLASSIFICATION	4.991905514404549E-7	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999994266019046	WITHOUT_CLASSIFICATION	5.733980954856696E-7	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999993349841553	WITHOUT_CLASSIFICATION	6.650158447853883E-7	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999994477309131	WITHOUT_CLASSIFICATION	5.522690868392797E-7	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999993823326158	WITHOUT_CLASSIFICATION	6.176673842805476E-7	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.999999372121001	WITHOUT_CLASSIFICATION	6.278789989698634E-7	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999994396855288	WITHOUT_CLASSIFICATION	5.603144711333625E-7	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999991862191728	WITHOUT_CLASSIFICATION	8.137808271292523E-7	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.999999412261794	WITHOUT_CLASSIFICATION	5.877382059430607E-7	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999991183688316	WITHOUT_CLASSIFICATION	8.816311683799846E-7	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999992490506309	WITHOUT_CLASSIFICATION	7.509493690766677E-7	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999993878588649	WITHOUT_CLASSIFICATION	6.121411350374917E-7	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999994288236461	WITHOUT_CLASSIFICATION	5.711763539043882E-7	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999993878936484	WITHOUT_CLASSIFICATION	6.121063516097876E-7	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999994101776056	WITHOUT_CLASSIFICATION	5.89822394404471E-7	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999993824726868	WITHOUT_CLASSIFICATION	6.175273131590717E-7	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999992229299911	WITHOUT_CLASSIFICATION	7.77070008986851E-7	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.999999428788438	WITHOUT_CLASSIFICATION	5.712115619814653E-7	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999993546743948	WITHOUT_CLASSIFICATION	6.453256050834968E-7	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999993599317782	WITHOUT_CLASSIFICATION	6.400682216670455E-7	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999992896242813	WITHOUT_CLASSIFICATION	7.103757187100857E-7	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999992675819257	WITHOUT_CLASSIFICATION	7.324180743500493E-7	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999992945079029	WITHOUT_CLASSIFICATION	7.05492097092082E-7	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999992078932173	WITHOUT_CLASSIFICATION	7.921067826242887E-7	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999991785328639	WITHOUT_CLASSIFICATION	8.214671361051518E-7	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999992608070016	WITHOUT_CLASSIFICATION	7.3919299837516E-7	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.999999268547311	WITHOUT_CLASSIFICATION	7.314526889642656E-7	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999991031860734	WITHOUT_CLASSIFICATION	8.96813926499245E-7	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999994297362498	WITHOUT_CLASSIFICATION	5.702637502838127E-7	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.999999415798259	WITHOUT_CLASSIFICATION	5.842017410372827E-7	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999994625722655	WITHOUT_CLASSIFICATION	5.374277344921511E-7	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999994284047978	WITHOUT_CLASSIFICATION	5.715952022238861E-7	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.999999334839114	WITHOUT_CLASSIFICATION	6.651608861332137E-7	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.99999944361223	WITHOUT_CLASSIFICATION	5.563877699116926E-7	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999994104245875	WITHOUT_CLASSIFICATION	5.895754124397778E-7	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999990708410907	WITHOUT_CLASSIFICATION	9.291589092487856E-7	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999992046304881	WITHOUT_CLASSIFICATION	7.953695120062358E-7	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999993066643806	WITHOUT_CLASSIFICATION	6.933356193933585E-7	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999991802298754	WITHOUT_CLASSIFICATION	8.197701244985792E-7	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999991871643804	WITHOUT_CLASSIFICATION	8.128356194481031E-7	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.999998984702637	WITHOUT_CLASSIFICATION	1.0152973628871004E-6	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.999999307131799	WITHOUT_CLASSIFICATION	6.928682010227368E-7	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999992093521898	WITHOUT_CLASSIFICATION	7.906478100847159E-7	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999993524453709	WITHOUT_CLASSIFICATION	6.475546291068184E-7	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999993253549961	WITHOUT_CLASSIFICATION	6.74645003832614E-7	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999992598088957	WITHOUT_CLASSIFICATION	7.401911042114031E-7	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999992957132491	WITHOUT_CLASSIFICATION	7.042867509297834E-7	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999992309523421	WITHOUT_CLASSIFICATION	7.690476578848526E-7	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999993093582822	WITHOUT_CLASSIFICATION	6.906417177464272E-7	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999993062077597	WITHOUT_CLASSIFICATION	6.937922403977544E-7	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999992367715456	WITHOUT_CLASSIFICATION	7.632284543779937E-7	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999992043468181	WITHOUT_CLASSIFICATION	7.95653181770159E-7	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999993326092077	WITHOUT_CLASSIFICATION	6.673907922238303E-7	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999994092589581	WITHOUT_CLASSIFICATION	5.907410418829588E-7	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999994890219719	WITHOUT_CLASSIFICATION	5.109780280588543E-7	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999993753342549	WITHOUT_CLASSIFICATION	6.246657451071291E-7	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999994057148082	WITHOUT_CLASSIFICATION	5.942851918310389E-7	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999992363296182	WITHOUT_CLASSIFICATION	7.636703818773795E-7	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999992894585715	WITHOUT_CLASSIFICATION	7.105414284022298E-7	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999993098116412	WITHOUT_CLASSIFICATION	6.901883587569066E-7	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999993899843714	WITHOUT_CLASSIFICATION	6.100156286958667E-7	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999994955335022	WITHOUT_CLASSIFICATION	5.044664978538971E-7	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999994687544927	WITHOUT_CLASSIFICATION	5.312455072960229E-7	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999994785501736	WITHOUT_CLASSIFICATION	5.214498265157007E-7	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999993829782894	WITHOUT_CLASSIFICATION	6.17021710708217E-7	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999992217965648	WITHOUT_CLASSIFICATION	7.782034353093109E-7	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999994639021353	WITHOUT_CLASSIFICATION	5.360978646803159E-7	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999994347884	WITHOUT_CLASSIFICATION	5.652115999736582E-7	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999992315260363	WITHOUT_CLASSIFICATION	7.684739636614964E-7	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999992804799892	WITHOUT_CLASSIFICATION	7.195200107006333E-7	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999994253751294	WITHOUT_CLASSIFICATION	5.746248705274548E-7	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999995065814088	WITHOUT_CLASSIFICATION	4.934185912292706E-7	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999993515702165	WITHOUT_CLASSIFICATION	6.484297835630938E-7	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999993644620888	WITHOUT_CLASSIFICATION	6.355379111165781E-7	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999994991126216	WITHOUT_CLASSIFICATION	5.008873782876836E-7	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999992631766071	WITHOUT_CLASSIFICATION	7.3682339280734E-7	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999992093589719	WITHOUT_CLASSIFICATION	7.906410281121058E-7	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999994281394622	WITHOUT_CLASSIFICATION	5.718605378300953E-7	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999994941838396	WITHOUT_CLASSIFICATION	5.058161603198867E-7	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.999999433844497	WITHOUT_CLASSIFICATION	5.661555029119739E-7	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999994166985121	WITHOUT_CLASSIFICATION	5.833014877779809E-7	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999994343236435	WITHOUT_CLASSIFICATION	5.6567635646736E-7	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.999999431377104	WITHOUT_CLASSIFICATION	5.686228959649241E-7	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.999999358030182	WITHOUT_CLASSIFICATION	6.419698179084487E-7	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999994485468944	WITHOUT_CLASSIFICATION	5.514531056554859E-7	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999994680142792	WITHOUT_CLASSIFICATION	5.319857209200161E-7	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999994037783128	WITHOUT_CLASSIFICATION	5.962216871740282E-7	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999994292132732	WITHOUT_CLASSIFICATION	5.707867266590044E-7	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999992958895657	WITHOUT_CLASSIFICATION	7.0411043420624E-7	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999992323521121	WITHOUT_CLASSIFICATION	7.676478878848691E-7	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999995023785604	WITHOUT_CLASSIFICATION	4.976214396388959E-7	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999994309515755	WITHOUT_CLASSIFICATION	5.6904842443095E-7	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999995232368663	WITHOUT_CLASSIFICATION	4.767631338270725E-7	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999994178979722	WITHOUT_CLASSIFICATION	5.821020278900758E-7	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999992999051607	WITHOUT_CLASSIFICATION	7.000948393353635E-7	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999994795401443	WITHOUT_CLASSIFICATION	5.204598556697812E-7	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999993532207702	WITHOUT_CLASSIFICATION	6.467792297909862E-7	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999994301057773	WITHOUT_CLASSIFICATION	5.698942225957071E-7	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999994292906534	WITHOUT_CLASSIFICATION	5.707093465821389E-7	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999994083256218	WITHOUT_CLASSIFICATION	5.916743781251034E-7	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999992127783934	WITHOUT_CLASSIFICATION	7.872216065380915E-7	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999993327066182	WITHOUT_CLASSIFICATION	6.67293381909151E-7	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999992695687506	WITHOUT_CLASSIFICATION	7.304312493950551E-7	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.999999499387789	WITHOUT_CLASSIFICATION	5.006122110919497E-7	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999995272560959	WITHOUT_CLASSIFICATION	4.7274390404023704E-7	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999994787181069	WITHOUT_CLASSIFICATION	5.212818929968853E-7	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999994232080862	WITHOUT_CLASSIFICATION	5.767919137971713E-7	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.99999949637305	WITHOUT_CLASSIFICATION	5.036269501125002E-7	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.999999491420913	WITHOUT_CLASSIFICATION	5.085790868567924E-7	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999993813396881	WITHOUT_CLASSIFICATION	6.186603118290924E-7	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999994870385123	WITHOUT_CLASSIFICATION	5.129614876176214E-7	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999994550237918	WITHOUT_CLASSIFICATION	5.44976208117492E-7	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999993472223244	WITHOUT_CLASSIFICATION	6.527776756186595E-7	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999994251949732	WITHOUT_CLASSIFICATION	5.748050267631163E-7	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999993433155225	WITHOUT_CLASSIFICATION	6.566844774260964E-7	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999990438435095	WITHOUT_CLASSIFICATION	9.561564904781634E-7	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999993744108813	WITHOUT_CLASSIFICATION	6.255891186750348E-7	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999992905643569	WITHOUT_CLASSIFICATION	7.094356431584484E-7	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999994659434528	WITHOUT_CLASSIFICATION	5.340565472817906E-7	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.999999385381195	WITHOUT_CLASSIFICATION	6.146188048798318E-7	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999993420659613	WITHOUT_CLASSIFICATION	6.579340386757067E-7	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999991484496776	WITHOUT_CLASSIFICATION	8.515503223594178E-7	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999994666995544	WITHOUT_CLASSIFICATION	5.333004456770909E-7	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999914801272736	WITHOUT_CLASSIFICATION	8.519872726402641E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999922209011518	WITHOUT_CLASSIFICATION	7.779098848116773E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999958243842298	WITHOUT_CLASSIFICATION	4.175615770144257E-6	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999942697633062	WITHOUT_CLASSIFICATION	5.7302366937635695E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999059146479795	WITHOUT_CLASSIFICATION	9.408535202048917E-5	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.999950572908259	WITHOUT_CLASSIFICATION	4.942709174116189E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.999985058470537	WITHOUT_CLASSIFICATION	1.4941529463070326E-5	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999728878301894	WITHOUT_CLASSIFICATION	2.7112169810650137E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.999999476953886	WITHOUT_CLASSIFICATION	5.230461139902242E-7	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999993988767434	WITHOUT_CLASSIFICATION	6.011232566627847E-7	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999993900261107	WITHOUT_CLASSIFICATION	6.099738892802856E-7	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999994572293927	WITHOUT_CLASSIFICATION	5.42770607381447E-7	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999994532108973	WITHOUT_CLASSIFICATION	5.467891027076172E-7	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999993834783159	WITHOUT_CLASSIFICATION	6.165216840269772E-7	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999992334711952	WITHOUT_CLASSIFICATION	7.665288046784358E-7	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999993137695211	WITHOUT_CLASSIFICATION	6.862304788720302E-7	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999993421910267	WITHOUT_CLASSIFICATION	6.578089731864528E-7	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999993789485042	WITHOUT_CLASSIFICATION	6.210514957641293E-7	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999992519537017	WITHOUT_CLASSIFICATION	7.480462984503318E-7	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999991630116252	WITHOUT_CLASSIFICATION	8.369883748835519E-7	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999993318804328	WITHOUT_CLASSIFICATION	6.681195671569285E-7	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999993754302533	WITHOUT_CLASSIFICATION	6.245697465767939E-7	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.999999365162592	WITHOUT_CLASSIFICATION	6.348374080057807E-7	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999992364786409	WITHOUT_CLASSIFICATION	7.635213591761569E-7	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999993869877405	WITHOUT_CLASSIFICATION	6.130122594842066E-7	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999993556468617	WITHOUT_CLASSIFICATION	6.443531382014643E-7	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999992844186565	WITHOUT_CLASSIFICATION	7.155813435772351E-7	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999994361682912	WITHOUT_CLASSIFICATION	5.638317087551475E-7	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.999999014925929	WITHOUT_CLASSIFICATION	9.850740710124727E-7	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999990086382006	WITHOUT_CLASSIFICATION	9.913617994681165E-7	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999993279072937	WITHOUT_CLASSIFICATION	6.720927062994355E-7	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999994594595193	WITHOUT_CLASSIFICATION	5.405404807712781E-7	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999976049421738	WITHOUT_CLASSIFICATION	2.3950578261859753E-6	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999991813960274	WITHOUT_CLASSIFICATION	8.186039726422754E-7	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999954220247512	WITHOUT_CLASSIFICATION	4.577975248815017E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999997904310249	WITHOUT_CLASSIFICATION	2.0956897511205897E-7	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999976865371142	WITHOUT_CLASSIFICATION	2.313462885806867E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999719380277	WITHOUT_CLASSIFICATION	2.806197237293053E-8	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999979174801356	WITHOUT_CLASSIFICATION	2.082519864446084E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999647664087	WITHOUT_CLASSIFICATION	3.52335911822265E-8	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999647664087	WITHOUT_CLASSIFICATION	3.52335911822265E-8	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999955268566821	WITHOUT_CLASSIFICATION	4.473143317823157E-6	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.999996079548464	WITHOUT_CLASSIFICATION	3.920451535997048E-6	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999998584978846	WITHOUT_CLASSIFICATION	1.4150211531345676E-7	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999991900350784	WITHOUT_CLASSIFICATION	8.099649216428901E-7	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999992374989473	WITHOUT_CLASSIFICATION	7.625010528558197E-7	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999971570580645	WITHOUT_CLASSIFICATION	2.8429419355612607E-6	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.999999389865073	WITHOUT_CLASSIFICATION	6.101349269386008E-7	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999999812074151	WITHOUT_CLASSIFICATION	1.879258485685517E-8	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999999851724434	WITHOUT_CLASSIFICATION	1.4827556592702584E-8	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999990087928714	WITHOUT_CLASSIFICATION	9.912071285952725E-7	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999979581315215	WITHOUT_CLASSIFICATION	2.0418684784252843E-6	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.999996928621733	WITHOUT_CLASSIFICATION	3.071378267013614E-6	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999986815448465	WITHOUT_CLASSIFICATION	1.3184551534574232E-6	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999991361435377	WITHOUT_CLASSIFICATION	8.638564622758108E-7	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999999120217306	WITHOUT_CLASSIFICATION	8.797826940655085E-8	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999999120217306	WITHOUT_CLASSIFICATION	8.797826940655085E-8	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999908891396726	WITHOUT_CLASSIFICATION	9.110860327273365E-6	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999999927303823	WITHOUT_CLASSIFICATION	7.2696176147393E-9	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999856192499	WITHOUT_CLASSIFICATION	1.438075014558337E-8	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999995503702136	WITHOUT_CLASSIFICATION	4.4962978644474063E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997149315263	WITHOUT_CLASSIFICATION	2.850684736776884E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998448501292	WITHOUT_CLASSIFICATION	1.551498708483224E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999999167101205	WITHOUT_CLASSIFICATION	8.328987958493795E-8	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998448501292	WITHOUT_CLASSIFICATION	1.551498708483224E-7	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999890811386143	WITHOUT_CLASSIFICATION	1.0918861385686342E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999841335518	WITHOUT_CLASSIFICATION	1.5866448238220038E-8	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.999999525348195	WITHOUT_CLASSIFICATION	4.7465180490311406E-7	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999988871021878	WITHOUT_CLASSIFICATION	1.1128978122759696E-6	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999999102177335	WITHOUT_CLASSIFICATION	8.978226645762297E-8	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999997535610745	WITHOUT_CLASSIFICATION	2.464389255172556E-7	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999997343602346	WITHOUT_CLASSIFICATION	2.656397653870494E-7	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999980290266693	WITHOUT_CLASSIFICATION	1.9709733305981915E-6	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999998825512586	WITHOUT_CLASSIFICATION	1.174487413949456E-6	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999976087052248	WITHOUT_CLASSIFICATION	2.391294775154749E-6	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999995956501607	WITHOUT_CLASSIFICATION	4.043498393378427E-7	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999875006192247	WITHOUT_CLASSIFICATION	1.2499380775199518E-5	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999719013069731	WITHOUT_CLASSIFICATION	2.8098693026913842E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.999996966184857	WITHOUT_CLASSIFICATION	3.0338151430988022E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999962120139865	WITHOUT_CLASSIFICATION	3.787986013449833E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999962120139865	WITHOUT_CLASSIFICATION	3.787986013449833E-6	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999999386755755	WITHOUT_CLASSIFICATION	6.132442454798631E-8	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999984348255109	WITHOUT_CLASSIFICATION	1.5651744890936896E-6	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999999287768638	WITHOUT_CLASSIFICATION	7.122313610066749E-8	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999997660805293	WITHOUT_CLASSIFICATION	2.3391947056278367E-7	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.999999973713488	WITHOUT_CLASSIFICATION	2.6286512033168866E-8	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998448501292	WITHOUT_CLASSIFICATION	1.551498708483224E-7	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.999999971222471	WITHOUT_CLASSIFICATION	2.8777528999393233E-8	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999986941732	WITHOUT_CLASSIFICATION	1.3058268472751437E-9	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999965366073517	WITHOUT_CLASSIFICATION	3.463392648261095E-6	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999813089759	WITHOUT_CLASSIFICATION	1.869102403670357E-8	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999956020423	WITHOUT_CLASSIFICATION	4.39795766842929E-9	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999794410643	WITHOUT_CLASSIFICATION	2.055893570371458E-8	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999998744977806	WITHOUT_CLASSIFICATION	1.2550221932655643E-7	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999981788358305	WITHOUT_CLASSIFICATION	1.82116416941161E-6	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999999945659683	WITHOUT_CLASSIFICATION	5.434031664849985E-9	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999992205414845	WITHOUT_CLASSIFICATION	7.79458515531905E-7	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999999576376215	WITHOUT_CLASSIFICATION	4.236237852092616E-8	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999789951662	WITHOUT_CLASSIFICATION	2.1004833833066534E-8	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999997839629916	WITHOUT_CLASSIFICATION	2.1603700846593702E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999986574794247	WITHOUT_CLASSIFICATION	1.3425205752758656E-6	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999999373073127	WITHOUT_CLASSIFICATION	6.269268718719982E-8	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999892925321188	WITHOUT_CLASSIFICATION	1.0707467881172288E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999999696379831	WITHOUT_CLASSIFICATION	3.036201691032532E-8	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999995841212932	WITHOUT_CLASSIFICATION	4.1587870675559686E-7	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999991341284302	WITHOUT_CLASSIFICATION	8.658715697329928E-7	TEST
// no block	WITHOUT_CLASSIFICATION	0.999999575418428	WITHOUT_CLASSIFICATION	4.245815720386551E-7	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999991860572959	WITHOUT_CLASSIFICATION	8.13942704235466E-7	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999959867263868	WITHOUT_CLASSIFICATION	4.0132736131798565E-6	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999995182983091	WITHOUT_CLASSIFICATION	4.81701690926395E-7	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999997142055196	WITHOUT_CLASSIFICATION	2.8579448042588204E-7	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.999999928103836	WITHOUT_CLASSIFICATION	7.18961640790682E-8	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.999999407244104	WITHOUT_CLASSIFICATION	5.927558961048115E-7	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999999868195054	WITHOUT_CLASSIFICATION	1.3180494729746633E-8	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999999812557362	WITHOUT_CLASSIFICATION	1.8744263877581138E-8	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999679877837184	WITHOUT_CLASSIFICATION	3.2012216281506076E-5	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999997595385992	WITHOUT_CLASSIFICATION	2.4046140078146394E-7	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999997306840561	WITHOUT_CLASSIFICATION	2.693159438423275E-7	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999996777059479	WITHOUT_CLASSIFICATION	3.2229405211172374E-7	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999986528561764	WITHOUT_CLASSIFICATION	1.3471438235950259E-6	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999999133298958	WITHOUT_CLASSIFICATION	8.667010411771607E-8	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999998614794726	WITHOUT_CLASSIFICATION	1.3852052735805362E-7	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999999949562527	WITHOUT_CLASSIFICATION	5.0437473932267E-9	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999999542023175	WITHOUT_CLASSIFICATION	4.579768261701058E-8	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999999703793112	WITHOUT_CLASSIFICATION	2.9620688745894514E-8	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999998980670348	WITHOUT_CLASSIFICATION	1.0193296514103245E-7	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999992721386	WITHOUT_CLASSIFICATION	7.278613514947889E-10	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999728878301894	WITHOUT_CLASSIFICATION	2.7112169810650137E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999829839124159	WITHOUT_CLASSIFICATION	1.7016087584161675E-5	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999997148664399	WITHOUT_CLASSIFICATION	2.851335601026111E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999988861484068	WITHOUT_CLASSIFICATION	1.1138515932373023E-6	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999996862491725	WITHOUT_CLASSIFICATION	3.1375082760929075E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999841335518	WITHOUT_CLASSIFICATION	1.5866448238220038E-8	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999998637742028	WITHOUT_CLASSIFICATION	1.3622579716544589E-7	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999999979908661	WITHOUT_CLASSIFICATION	2.0091339233864193E-9	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999997756917727	WITHOUT_CLASSIFICATION	2.2430822733079493E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999826877278	WITHOUT_CLASSIFICATION	1.731227217074158E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999826877278	WITHOUT_CLASSIFICATION	1.731227217074158E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999510658556	WITHOUT_CLASSIFICATION	4.893414437136815E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999510658556	WITHOUT_CLASSIFICATION	4.893414437136815E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999510658556	WITHOUT_CLASSIFICATION	4.893414437136815E-8	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999968926262848	WITHOUT_CLASSIFICATION	3.107373715143351E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999968926262848	WITHOUT_CLASSIFICATION	3.107373715143351E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999929643335222	WITHOUT_CLASSIFICATION	7.0356664778050376E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999929643335222	WITHOUT_CLASSIFICATION	7.0356664778050376E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999959481580117	WITHOUT_CLASSIFICATION	4.051841988236953E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999999122094385	WITHOUT_CLASSIFICATION	8.779056159680204E-8	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999996955613613	WITHOUT_CLASSIFICATION	3.0443863876020924E-7	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999996955613613	WITHOUT_CLASSIFICATION	3.0443863876020924E-7	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999999851806727	WITHOUT_CLASSIFICATION	1.4819327280763227E-8	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999996525508315	WITHOUT_CLASSIFICATION	3.474491686360227E-7	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999996201909032	WITHOUT_CLASSIFICATION	3.798090967629365E-7	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999998602889606	WITHOUT_CLASSIFICATION	1.3971103939431378E-7	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.99999965770527	WITHOUT_CLASSIFICATION	3.422947300504615E-7	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999999290831563	WITHOUT_CLASSIFICATION	7.091684377033619E-8	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999971759270749	WITHOUT_CLASSIFICATION	2.82407292504542E-6	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.999999724377057	WITHOUT_CLASSIFICATION	2.7562294299490823E-7	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999998526721859	WITHOUT_CLASSIFICATION	1.4732781402864286E-7	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999999029578256	WITHOUT_CLASSIFICATION	9.704217444835106E-8	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999999413442175	WITHOUT_CLASSIFICATION	5.8655782549312377E-8	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999998550724496	WITHOUT_CLASSIFICATION	1.4492755040254772E-7	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999976042528972	WITHOUT_CLASSIFICATION	2.3957471028905507E-6	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999998328613309	WITHOUT_CLASSIFICATION	1.671386691037722E-7	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999999430437689	WITHOUT_CLASSIFICATION	5.6956231047570556E-8	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999970493632702	WITHOUT_CLASSIFICATION	2.950636729901714E-6	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999988049919974	WITHOUT_CLASSIFICATION	1.195008002539407E-6	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.999999161260046	WITHOUT_CLASSIFICATION	8.387399539285835E-7	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999996301813695	WITHOUT_CLASSIFICATION	3.6981863049542927E-7	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999892950919604	WITHOUT_CLASSIFICATION	1.0704908039539085E-5	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999592047318	WITHOUT_CLASSIFICATION	4.079526809722005E-8	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999998578819738	WITHOUT_CLASSIFICATION	1.4211802621498545E-7	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999999366041412	WITHOUT_CLASSIFICATION	6.339585882059769E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999999978840051	WITHOUT_CLASSIFICATION	2.1159948972699327E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999888711886	WITHOUT_CLASSIFICATION	1.112881136321563E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999572233844	WITHOUT_CLASSIFICATION	4.2776615546329626E-8	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999196158919	WITHOUT_CLASSIFICATION	8.038410814088508E-8	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999667079829	WITHOUT_CLASSIFICATION	3.3292017155610454E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999790466121	WITHOUT_CLASSIFICATION	2.095338790257184E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999889798268	WITHOUT_CLASSIFICATION	1.102017314247921E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999576409649	WITHOUT_CLASSIFICATION	4.2359034988553134E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999877186967	WITHOUT_CLASSIFICATION	1.2281303185368192E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999935408017	WITHOUT_CLASSIFICATION	6.459198273374206E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999808280516	WITHOUT_CLASSIFICATION	1.91719483349479E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999935408017	WITHOUT_CLASSIFICATION	6.459198273374206E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999935408017	WITHOUT_CLASSIFICATION	6.459198273374206E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999935408017	WITHOUT_CLASSIFICATION	6.459198273374206E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999935408017	WITHOUT_CLASSIFICATION	6.459198273374206E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999935408017	WITHOUT_CLASSIFICATION	6.459198273374206E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999935408017	WITHOUT_CLASSIFICATION	6.459198273374206E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999808280516	WITHOUT_CLASSIFICATION	1.91719483349479E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999808280516	WITHOUT_CLASSIFICATION	1.91719483349479E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999808280516	WITHOUT_CLASSIFICATION	1.91719483349479E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999808280516	WITHOUT_CLASSIFICATION	1.91719483349479E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999808280516	WITHOUT_CLASSIFICATION	1.91719483349479E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999808280516	WITHOUT_CLASSIFICATION	1.91719483349479E-8	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999998652414117	WITHOUT_CLASSIFICATION	1.347585883373308E-7	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.99999985969624	WITHOUT_CLASSIFICATION	1.4030376007650612E-7	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999997858618903	WITHOUT_CLASSIFICATION	2.141381096078311E-7	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999999935611026	WITHOUT_CLASSIFICATION	6.438897405212726E-8	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999975630612	WITHOUT_CLASSIFICATION	2.436938800419388E-9	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999220657293	WITHOUT_CLASSIFICATION	7.793427069718315E-8	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999999954555215	WITHOUT_CLASSIFICATION	4.544478362434094E-9	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999962472003	WITHOUT_CLASSIFICATION	3.752799650957766E-9	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999999741547506	WITHOUT_CLASSIFICATION	2.5845249439802294E-8	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999994241651585	WITHOUT_CLASSIFICATION	5.758348413805869E-7	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.999972382804453	WITHOUT_CLASSIFICATION	2.761719554707116E-5	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999911128761	WITHOUT_CLASSIFICATION	8.887123870229146E-9	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999988600101773	WITHOUT_CLASSIFICATION	1.1399898227004124E-6	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999710156302	WITHOUT_CLASSIFICATION	2.8984369689801935E-8	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999998930178211	WITHOUT_CLASSIFICATION	1.0698217885230638E-7	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999813177024551	WITHOUT_CLASSIFICATION	1.8682297544914548E-5	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999997688446778	WITHOUT_CLASSIFICATION	2.3115532226046918E-7	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999999885979345	WITHOUT_CLASSIFICATION	1.140206547703134E-8	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999999703634472	WITHOUT_CLASSIFICATION	2.9636552664769078E-8	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999949134389	WITHOUT_CLASSIFICATION	5.086561102211485E-9	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999996973161812	WITHOUT_CLASSIFICATION	3.0268381887870726E-7	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.999999710312408	WITHOUT_CLASSIFICATION	2.8968759205511754E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999999167101205	WITHOUT_CLASSIFICATION	8.328987958493795E-8	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999956516877266	WITHOUT_CLASSIFICATION	4.348312273354745E-6	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.999998551525466	WITHOUT_CLASSIFICATION	1.448474533997422E-6	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999896035212	WITHOUT_CLASSIFICATION	1.0396478796452662E-8	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.999999972199059	WITHOUT_CLASSIFICATION	2.7800940989951026E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999998594148013	WITHOUT_CLASSIFICATION	1.4058519861141725E-7	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.999999402140727	WITHOUT_CLASSIFICATION	5.978592729808605E-7	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999999666568996	WITHOUT_CLASSIFICATION	3.3343100394540127E-8	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999999238798675	WITHOUT_CLASSIFICATION	7.612013253070709E-8	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999908809802	WITHOUT_CLASSIFICATION	9.119019780643856E-9	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999921825649	WITHOUT_CLASSIFICATION	7.817435024452717E-9	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999459794584	WITHOUT_CLASSIFICATION	5.4020541559338154E-8	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999999882935019	WITHOUT_CLASSIFICATION	1.1706498055056484E-8	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.99999994260602	WITHOUT_CLASSIFICATION	5.739397998645186E-8	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999999856787289	WITHOUT_CLASSIFICATION	1.4321271174923482E-8	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.999999752605405	WITHOUT_CLASSIFICATION	2.473945949687701E-7	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999999196888	WITHOUT_CLASSIFICATION	8.031126886996363E-11	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999909893249	WITHOUT_CLASSIFICATION	9.010675180000243E-9	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999996148275289	WITHOUT_CLASSIFICATION	3.8517247116382397E-7	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.999999690839273	WITHOUT_CLASSIFICATION	3.091607271001517E-7	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999994407013018	WITHOUT_CLASSIFICATION	5.592986982571207E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999983229183107	WITHOUT_CLASSIFICATION	1.6770816892818915E-6	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999983229183107	WITHOUT_CLASSIFICATION	1.6770816892818915E-6	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999997199039421	WITHOUT_CLASSIFICATION	2.800960579845782E-7	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999997199039421	WITHOUT_CLASSIFICATION	2.800960579845782E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999996621329666	WITHOUT_CLASSIFICATION	3.3786703331245455E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999996621329666	WITHOUT_CLASSIFICATION	3.3786703331245455E-7	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.999999853428013	WITHOUT_CLASSIFICATION	1.465719869980636E-7	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999999902830221	WITHOUT_CLASSIFICATION	9.71697781430214E-9	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999996198628148	WITHOUT_CLASSIFICATION	3.801371852362043E-7	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999998928302541	WITHOUT_CLASSIFICATION	1.0716974582957549E-7	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999999821643786	WITHOUT_CLASSIFICATION	1.7835621444398714E-8	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999982235910654	WITHOUT_CLASSIFICATION	1.7764089346831885E-6	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999993392295606	WITHOUT_CLASSIFICATION	6.607704393232472E-7	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999883815152	WITHOUT_CLASSIFICATION	1.1618484882893798E-8	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999761021544	WITHOUT_CLASSIFICATION	2.3897845560468357E-8	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999992185118441	WITHOUT_CLASSIFICATION	7.814881558426167E-7	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999876028054091	WITHOUT_CLASSIFICATION	1.2397194590853667E-5	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999994796223326	WITHOUT_CLASSIFICATION	5.203776675002619E-7	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999814751613	WITHOUT_CLASSIFICATION	1.8524838713364018E-8	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999999985379264	WITHOUT_CLASSIFICATION	1.4620736081939562E-9	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999990948232841	WITHOUT_CLASSIFICATION	9.0517671588299E-7	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999986515830147	WITHOUT_CLASSIFICATION	1.348416985378651E-6	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999989850981	WITHOUT_CLASSIFICATION	1.014901925039491E-9	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999996512470194	WITHOUT_CLASSIFICATION	3.487529806658525E-7	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.999999803925447	WITHOUT_CLASSIFICATION	1.960745530968859E-7	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999978119211798	WITHOUT_CLASSIFICATION	2.1880788201681522E-6	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999985865657499	WITHOUT_CLASSIFICATION	1.4134342501065231E-6	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999998086170806	WITHOUT_CLASSIFICATION	1.9138291946407933E-7	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999982910165218	WITHOUT_CLASSIFICATION	1.7089834782440358E-6	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999890947883	WITHOUT_CLASSIFICATION	1.0905211656803304E-8	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999994183185105	WITHOUT_CLASSIFICATION	5.816814894958231E-7	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999837074781	WITHOUT_CLASSIFICATION	1.629252195045117E-8	TEST
// sic	WITHOUT_CLASSIFICATION	0.999998534511512	WITHOUT_CLASSIFICATION	1.465488488023321E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999804812688	WITHOUT_CLASSIFICATION	1.9518731200341725E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999804812688	WITHOUT_CLASSIFICATION	1.9518731200341725E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999804812688	WITHOUT_CLASSIFICATION	1.9518731200341725E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999991033973	WITHOUT_CLASSIFICATION	8.966028007725834E-10	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999991033973	WITHOUT_CLASSIFICATION	8.966028007725834E-10	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999986574794247	WITHOUT_CLASSIFICATION	1.3425205752758656E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999986574794247	WITHOUT_CLASSIFICATION	1.3425205752758656E-6	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999041972584	WITHOUT_CLASSIFICATION	9.580274165003168E-8	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999937335133223	WITHOUT_CLASSIFICATION	6.266486677622377E-6	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999996469154256	WITHOUT_CLASSIFICATION	3.5308457434950893E-7	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999994621373517	WITHOUT_CLASSIFICATION	5.378626482387253E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999804812688	WITHOUT_CLASSIFICATION	1.9518731200341725E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999804812688	WITHOUT_CLASSIFICATION	1.9518731200341725E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999804812688	WITHOUT_CLASSIFICATION	1.9518731200341725E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999991033973	WITHOUT_CLASSIFICATION	8.966028007725834E-10	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999991033973	WITHOUT_CLASSIFICATION	8.966028007725834E-10	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999991033973	WITHOUT_CLASSIFICATION	8.966028007725834E-10	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999986574794247	WITHOUT_CLASSIFICATION	1.3425205752758656E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999986574794247	WITHOUT_CLASSIFICATION	1.3425205752758656E-6	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999998962446424	WITHOUT_CLASSIFICATION	1.0375535753585605E-7	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999997864885888	WITHOUT_CLASSIFICATION	2.1351141114748585E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999985666914285	WITHOUT_CLASSIFICATION	1.433308571478524E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999985666914285	WITHOUT_CLASSIFICATION	1.433308571478524E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999985666914285	WITHOUT_CLASSIFICATION	1.433308571478524E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999985666914285	WITHOUT_CLASSIFICATION	1.433308571478524E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999985666914285	WITHOUT_CLASSIFICATION	1.433308571478524E-6	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999999312712993	WITHOUT_CLASSIFICATION	6.872870067891977E-8	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999995810144988	WITHOUT_CLASSIFICATION	4.189855012574311E-7	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999992676715131	WITHOUT_CLASSIFICATION	7.323284867707655E-7	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999973305717909	WITHOUT_CLASSIFICATION	2.6694282091203273E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999974450105851	WITHOUT_CLASSIFICATION	2.5549894149850206E-6	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999929056964613	WITHOUT_CLASSIFICATION	7.094303538714343E-6	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999906107378311	WITHOUT_CLASSIFICATION	9.389262168789329E-6	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999998958115734	WITHOUT_CLASSIFICATION	1.0418842653194314E-7	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999997550443986	WITHOUT_CLASSIFICATION	2.44955601367904E-7	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.999997605851933	WITHOUT_CLASSIFICATION	2.3941480669858754E-6	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999982787009335	WITHOUT_CLASSIFICATION	1.7212990664339777E-6	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999981186457447	WITHOUT_CLASSIFICATION	1.8813542552959674E-6	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999937391816703	WITHOUT_CLASSIFICATION	6.2608183296454266E-6	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999998196443453	WITHOUT_CLASSIFICATION	1.8035565481473864E-7	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999992376524235	WITHOUT_CLASSIFICATION	7.623475764393441E-7	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999965113428811	WITHOUT_CLASSIFICATION	3.488657118856717E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999965113428811	WITHOUT_CLASSIFICATION	3.488657118856717E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999965113428811	WITHOUT_CLASSIFICATION	3.488657118856717E-6	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9997963564491148	WITHOUT_CLASSIFICATION	2.0364355088524683E-4	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9997964070047688	WITHOUT_CLASSIFICATION	2.0359299523131871E-4	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999995529990945	WITHOUT_CLASSIFICATION	4.4700090556065626E-7	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999884038242	WITHOUT_CLASSIFICATION	1.1596175756964584E-8	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999998613717133	WITHOUT_CLASSIFICATION	1.3862828670857942E-7	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999998615365945	WITHOUT_CLASSIFICATION	1.3846340550331786E-7	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999997542414083	WITHOUT_CLASSIFICATION	2.4575859168798273E-7	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999996748117334	WITHOUT_CLASSIFICATION	3.2518826661770325E-7	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.999998571912228	WITHOUT_CLASSIFICATION	1.4280877721037578E-6	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999411629815	WITHOUT_CLASSIFICATION	5.883701855342977E-8	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999998601101555	WITHOUT_CLASSIFICATION	1.3988984457450648E-7	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999999025584816	WITHOUT_CLASSIFICATION	9.744151841108448E-8	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999998487546412	WITHOUT_CLASSIFICATION	1.512453586645864E-7	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999998173138163	WITHOUT_CLASSIFICATION	1.8268618360762951E-7	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.999999902722976	WITHOUT_CLASSIFICATION	9.727702399095379E-8	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999998653154198	WITHOUT_CLASSIFICATION	1.3468458017554284E-7	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.999999805290163	WITHOUT_CLASSIFICATION	1.9470983706078443E-7	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999998815128204	WITHOUT_CLASSIFICATION	1.1848717956329251E-7	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999997882340207	WITHOUT_CLASSIFICATION	2.1176597935935002E-7	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999994097287669	WITHOUT_CLASSIFICATION	5.90271233085609E-7	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999997343941408	WITHOUT_CLASSIFICATION	2.6560585909661953E-7	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999995321882834	WITHOUT_CLASSIFICATION	4.6781171661694215E-7	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999999258776502	WITHOUT_CLASSIFICATION	7.412234981972175E-8	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999998499803238	WITHOUT_CLASSIFICATION	1.5001967624242586E-7	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999996670289397	WITHOUT_CLASSIFICATION	3.329710602269115E-7	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999997218534618	WITHOUT_CLASSIFICATION	2.7814653814553924E-7	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999998121597113	WITHOUT_CLASSIFICATION	1.8784028871356637E-7	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.999999753842882	WITHOUT_CLASSIFICATION	2.461571180726799E-7	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999983038511642	WITHOUT_CLASSIFICATION	1.696148835812722E-6	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9999785358014899	WITHOUT_CLASSIFICATION	2.1464198510027934E-5	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9999744014282833	WITHOUT_CLASSIFICATION	2.5598571716583507E-5	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9999507242432022	WITHOUT_CLASSIFICATION	4.927575679784159E-5	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9999802695307074	WITHOUT_CLASSIFICATION	1.9730469292663665E-5	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9999773033119425	WITHOUT_CLASSIFICATION	2.2696688057630522E-5	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9999793398905782	WITHOUT_CLASSIFICATION	2.0660109421818152E-5	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.9999791461257752	WITHOUT_CLASSIFICATION	2.0853874224902053E-5	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999999019442859	WITHOUT_CLASSIFICATION	9.805571404313437E-8	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999999456391422	WITHOUT_CLASSIFICATION	5.4360857812621284E-8	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999998012624863	WITHOUT_CLASSIFICATION	1.9873751374711813E-7	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.6776739820565054	TEST	0.3223260179434947	WITHOUT_CLASSIFICATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.999983019974994	WITHOUT_CLASSIFICATION	1.698002500606809E-5	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.999999972284669	WITHOUT_CLASSIFICATION	2.7715331111583134E-8	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999963326541079	WITHOUT_CLASSIFICATION	3.6673458921866785E-6	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999999495359846	WITHOUT_CLASSIFICATION	5.0464015447885105E-8	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999175962545241	WITHOUT_CLASSIFICATION	8.24037454757696E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999965321532711	WITHOUT_CLASSIFICATION	3.46784672881874E-6	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999214468684704	WITHOUT_CLASSIFICATION	7.855313152954133E-5	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999214468684704	WITHOUT_CLASSIFICATION	7.855313152954133E-5	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999972287923333	WITHOUT_CLASSIFICATION	2.771207666672365E-6	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999999894178488	WITHOUT_CLASSIFICATION	1.058215124800185E-8	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999984594815923	WITHOUT_CLASSIFICATION	1.5405184077739442E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9976309063386759	WITHOUT_CLASSIFICATION	0.002369093661323967	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999587002846141	WITHOUT_CLASSIFICATION	4.1299715386004686E-5	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999991540101811	WITHOUT_CLASSIFICATION	8.459898187249193E-7	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999996590261634	WITHOUT_CLASSIFICATION	3.4097383651861414E-7	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999674028075	WITHOUT_CLASSIFICATION	3.2597192502608035E-8	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999999426253595	WITHOUT_CLASSIFICATION	5.737464038294863E-8	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999999725343539	WITHOUT_CLASSIFICATION	2.746564608528527E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999843745356	WITHOUT_CLASSIFICATION	1.5625464339449064E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999843745356	WITHOUT_CLASSIFICATION	1.5625464339449064E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999843745356	WITHOUT_CLASSIFICATION	1.5625464339449064E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999843745356	WITHOUT_CLASSIFICATION	1.5625464339449064E-8	TEST
// try both	WITHOUT_CLASSIFICATION	0.999999182683275	WITHOUT_CLASSIFICATION	8.173167250104515E-7	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999994319959176	WITHOUT_CLASSIFICATION	5.680040824793223E-7	TEST
// just windows	WITHOUT_CLASSIFICATION	0.999999761302205	WITHOUT_CLASSIFICATION	2.3869779492655153E-7	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999987855174104	WITHOUT_CLASSIFICATION	1.2144825896086417E-6	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999978478533579	WITHOUT_CLASSIFICATION	2.152146642223549E-6	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.999999958266291	WITHOUT_CLASSIFICATION	4.173370900344456E-8	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999997226408961	WITHOUT_CLASSIFICATION	2.7735910392357896E-7	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999999101307407	WITHOUT_CLASSIFICATION	8.986925923655637E-8	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999999101307407	WITHOUT_CLASSIFICATION	8.986925923655637E-8	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999426863458	WITHOUT_CLASSIFICATION	5.7313654242432835E-8	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999997479738515	WITHOUT_CLASSIFICATION	2.520261485353441E-7	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999163717550869	WITHOUT_CLASSIFICATION	8.362824491319207E-5	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999981610491	WITHOUT_CLASSIFICATION	1.8389508782754756E-9	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999981610491	WITHOUT_CLASSIFICATION	1.8389508782754756E-9	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999891166613	WITHOUT_CLASSIFICATION	1.088333871141206E-8	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999991137317935	WITHOUT_CLASSIFICATION	8.862682063809876E-7	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999991137317935	WITHOUT_CLASSIFICATION	8.862682063809876E-7	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999850156018684	WITHOUT_CLASSIFICATION	1.4984398131763879E-5	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999966719981287	WITHOUT_CLASSIFICATION	3.328001871357044E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.999999979601224	WITHOUT_CLASSIFICATION	2.0398776036679704E-8	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999826882791143	WITHOUT_CLASSIFICATION	1.7311720885752152E-5	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.999999621855087	WITHOUT_CLASSIFICATION	3.7814491301712563E-7	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999853612147	WITHOUT_CLASSIFICATION	1.463878538309314E-8	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999908565035107	WITHOUT_CLASSIFICATION	9.143496489183806E-6	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9999966799228325	WITHOUT_CLASSIFICATION	3.320077167592451E-6	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999825364001	WITHOUT_CLASSIFICATION	1.7463599884631255E-8	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999996754881652	WITHOUT_CLASSIFICATION	3.2451183481439377E-7	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999966854860777	WITHOUT_CLASSIFICATION	3.3145139223964577E-6	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999998976017427	WITHOUT_CLASSIFICATION	1.0239825725130677E-7	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9954726591190697	WITHOUT_CLASSIFICATION	0.00452734088093027	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9944331855012792	WITHOUT_CLASSIFICATION	0.005566814498720717	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999999696349947	WITHOUT_CLASSIFICATION	3.036500538413945E-8	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999999469110056	WITHOUT_CLASSIFICATION	5.308899428793457E-8	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999986169784421	WITHOUT_CLASSIFICATION	1.3830215579005638E-6	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999998941546617	WITHOUT_CLASSIFICATION	1.0584533818322609E-7	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999992822943414	WITHOUT_CLASSIFICATION	7.177056585852602E-7	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999998955553043	WITHOUT_CLASSIFICATION	1.0444469570391948E-7	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.999997578854752	WITHOUT_CLASSIFICATION	2.4211452479518252E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999998622249958	WITHOUT_CLASSIFICATION	1.3777500422373355E-7	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999997383288295	WITHOUT_CLASSIFICATION	2.616711704256732E-7	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9998343906085041	WITHOUT_CLASSIFICATION	1.656093914959097E-4	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999825287048937	WITHOUT_CLASSIFICATION	1.747129510637593E-5	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999765924558806	WITHOUT_CLASSIFICATION	2.340754411948914E-5	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999999201171178	WITHOUT_CLASSIFICATION	7.988288218182192E-8	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.999998684128006	WITHOUT_CLASSIFICATION	1.3158719940034972E-6	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999961646188	WITHOUT_CLASSIFICATION	3.835381236774203E-9	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999984242778016	WITHOUT_CLASSIFICATION	1.5757221984132615E-6	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999952104297232	WITHOUT_CLASSIFICATION	4.789570276826562E-6	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.999999699403227	WITHOUT_CLASSIFICATION	3.0059677308616795E-7	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9986470558729398	WITHOUT_CLASSIFICATION	0.0013529441270602517	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999980970780505	WITHOUT_CLASSIFICATION	1.9029219493633097E-6	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999999476703539	WITHOUT_CLASSIFICATION	5.2329645952226864E-8	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999969367988787	WITHOUT_CLASSIFICATION	3.0632011212429565E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.999995315120184	WITHOUT_CLASSIFICATION	4.684879816032742E-6	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999994201503237	WITHOUT_CLASSIFICATION	5.79849676179015E-7	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999960455909093	WITHOUT_CLASSIFICATION	3.954409090713885E-6	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999969367988787	WITHOUT_CLASSIFICATION	3.0632011212429565E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.999995315120184	WITHOUT_CLASSIFICATION	4.684879816032742E-6	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999998052388692	WITHOUT_CLASSIFICATION	1.9476113077702433E-7	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999951737452326	WITHOUT_CLASSIFICATION	4.826254767388199E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999951737452326	WITHOUT_CLASSIFICATION	4.826254767388199E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999997141560893	WITHOUT_CLASSIFICATION	2.858439106365907E-7	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999994052419597	WITHOUT_CLASSIFICATION	5.947580403205276E-7	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999992255912846	WITHOUT_CLASSIFICATION	7.74408715314359E-7	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999994656068881	WITHOUT_CLASSIFICATION	5.343931119278932E-7	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999982928799396	WITHOUT_CLASSIFICATION	1.7071200603160175E-6	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999620300650327	WITHOUT_CLASSIFICATION	3.796993496727898E-5	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999989968891217	WITHOUT_CLASSIFICATION	1.0031108782262533E-6	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999999066228209	WITHOUT_CLASSIFICATION	9.337717908538601E-8	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.999999471685963	WITHOUT_CLASSIFICATION	5.283140369194008E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.999993962108617	WITHOUT_CLASSIFICATION	6.037891382964273E-6	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999998895672334	WITHOUT_CLASSIFICATION	1.1043276668236088E-7	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999997856687783	WITHOUT_CLASSIFICATION	2.1433122170173823E-7	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999968878003918	WITHOUT_CLASSIFICATION	3.1121996083296147E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998594550655	WITHOUT_CLASSIFICATION	1.4054493451502972E-7	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998594550655	WITHOUT_CLASSIFICATION	1.4054493451502972E-7	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999841727198582	WITHOUT_CLASSIFICATION	1.5827280141799413E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999841727198582	WITHOUT_CLASSIFICATION	1.5827280141799413E-5	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.999999858176224	WITHOUT_CLASSIFICATION	1.4182377588261936E-7	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999998927121317	WITHOUT_CLASSIFICATION	1.0728786824649888E-7	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999997290398287	WITHOUT_CLASSIFICATION	2.709601713253643E-7	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999991102049346	WITHOUT_CLASSIFICATION	8.897950654059179E-7	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999886023131581	WITHOUT_CLASSIFICATION	1.139768684183128E-5	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999967102736619	WITHOUT_CLASSIFICATION	3.28972633805913E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999992255912846	WITHOUT_CLASSIFICATION	7.74408715314359E-7	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999994656068881	WITHOUT_CLASSIFICATION	5.343931119278932E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.999999471685963	WITHOUT_CLASSIFICATION	5.283140369194008E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.999993962108617	WITHOUT_CLASSIFICATION	6.037891382964273E-6	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999999280816074	WITHOUT_CLASSIFICATION	7.191839264824743E-8	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999999010137971	WITHOUT_CLASSIFICATION	9.898620291055828E-8	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999945754858938	WITHOUT_CLASSIFICATION	5.424514106300455E-6	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999994274993145	WITHOUT_CLASSIFICATION	5.72500685467023E-7	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999998309176584	WITHOUT_CLASSIFICATION	1.6908234161192937E-7	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999992143604416	WITHOUT_CLASSIFICATION	7.856395582954797E-7	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.999998996031053	WITHOUT_CLASSIFICATION	1.0039689469665972E-6	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999926470191034	WITHOUT_CLASSIFICATION	7.3529808965670995E-6	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999975171318087	WITHOUT_CLASSIFICATION	2.4828681912760572E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999982945867556	WITHOUT_CLASSIFICATION	1.705413244524073E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999602133254	WITHOUT_CLASSIFICATION	3.978667462691295E-8	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9998608117419309	WITHOUT_CLASSIFICATION	1.391882580690166E-4	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999995855800143	WITHOUT_CLASSIFICATION	4.144199856083229E-7	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999946587942444	WITHOUT_CLASSIFICATION	5.3412057556236174E-6	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999995350855404	WITHOUT_CLASSIFICATION	4.6491445950860424E-7	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999975165095996	WITHOUT_CLASSIFICATION	2.4834904004765754E-6	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999996616007855	WITHOUT_CLASSIFICATION	3.383992144966585E-7	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999950892690166	WITHOUT_CLASSIFICATION	4.910730983302619E-6	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999991875756956	WITHOUT_CLASSIFICATION	8.124243043419864E-7	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999983188803925	WITHOUT_CLASSIFICATION	1.681119607520099E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999985648669603	WITHOUT_CLASSIFICATION	1.4351330397300729E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999985648669603	WITHOUT_CLASSIFICATION	1.4351330397300729E-6	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999986891974673	WITHOUT_CLASSIFICATION	1.3108025327480964E-6	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999789888444659	WITHOUT_CLASSIFICATION	2.10111555341284E-5	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.999997389566134	WITHOUT_CLASSIFICATION	2.61043386599961E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999990552503651	WITHOUT_CLASSIFICATION	9.447496347934367E-7	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999990552503651	WITHOUT_CLASSIFICATION	9.447496347934367E-7	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999945754858938	WITHOUT_CLASSIFICATION	5.424514106300455E-6	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999937999095799	WITHOUT_CLASSIFICATION	6.20009042011373E-6	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999973691025682	WITHOUT_CLASSIFICATION	2.6308974318794597E-6	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999979935901021	WITHOUT_CLASSIFICATION	2.006409897905321E-6	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999988214028503	WITHOUT_CLASSIFICATION	1.1785971496575463E-6	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999990860888394	WITHOUT_CLASSIFICATION	9.139111605377597E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999768843985058	WITHOUT_CLASSIFICATION	2.3115601494154395E-5	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999971716678816	WITHOUT_CLASSIFICATION	2.8283321183692123E-6	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999995180826812	WITHOUT_CLASSIFICATION	4.819173189312725E-7	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.999999422989771	WITHOUT_CLASSIFICATION	5.77010229107895E-7	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999900834604918	WITHOUT_CLASSIFICATION	9.916539508249702E-6	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999995446246173	WITHOUT_CLASSIFICATION	4.5537538271052837E-7	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999998625800223	WITHOUT_CLASSIFICATION	1.374199776765809E-7	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999999775203227	WITHOUT_CLASSIFICATION	2.247967736298778E-8	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999998361375138	WITHOUT_CLASSIFICATION	1.638624861395521E-7	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.999999903782195	WITHOUT_CLASSIFICATION	9.621780499910374E-8	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999999715887958	WITHOUT_CLASSIFICATION	2.841120408588239E-8	TEST
// states	WITHOUT_CLASSIFICATION	0.9999921248976478	WITHOUT_CLASSIFICATION	7.875102352282928E-6	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999989405609784	WITHOUT_CLASSIFICATION	1.0594390215990782E-6	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999997392076458	WITHOUT_CLASSIFICATION	2.6079235417525023E-7	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999977064717	WITHOUT_CLASSIFICATION	2.293528227450742E-9	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.999998770889932	WITHOUT_CLASSIFICATION	1.2291100679408455E-6	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999998527097018	WITHOUT_CLASSIFICATION	1.4729029812897587E-7	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999978974181768	WITHOUT_CLASSIFICATION	2.1025818231829517E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999999993013664	WITHOUT_CLASSIFICATION	6.986336029361456E-9	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999987157676352	WITHOUT_CLASSIFICATION	1.284232364830128E-6	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999865133393	WITHOUT_CLASSIFICATION	1.3486660634530414E-8	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999993031474372	WITHOUT_CLASSIFICATION	6.968525628177987E-7	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999958102311	WITHOUT_CLASSIFICATION	4.18976886358692E-9	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999998489017183	WITHOUT_CLASSIFICATION	1.5109828157300626E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999956563738	WITHOUT_CLASSIFICATION	4.3436261969405795E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999956563738	WITHOUT_CLASSIFICATION	4.3436261969405795E-8	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999996923136745	WITHOUT_CLASSIFICATION	3.0768632552884135E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999997809628887	WITHOUT_CLASSIFICATION	2.190371113409729E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999997809628887	WITHOUT_CLASSIFICATION	2.190371113409729E-7	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999946995646	WITHOUT_CLASSIFICATION	5.300435425565762E-9	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999946995646	WITHOUT_CLASSIFICATION	5.300435425565762E-9	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999989567265508	WITHOUT_CLASSIFICATION	1.0432734492088349E-6	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999689690954	WITHOUT_CLASSIFICATION	3.1030904543353025E-8	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999998223054	WITHOUT_CLASSIFICATION	1.7769460569303054E-9	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999979217329612	WITHOUT_CLASSIFICATION	2.0782670387768056E-6	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999855383236	WITHOUT_CLASSIFICATION	1.4461676401065592E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999991756000546	WITHOUT_CLASSIFICATION	8.243999453911955E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999991756000546	WITHOUT_CLASSIFICATION	8.243999453911955E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999999993013664	WITHOUT_CLASSIFICATION	6.986336029361456E-9	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999999993013664	WITHOUT_CLASSIFICATION	6.986336029361456E-9	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999999993013664	WITHOUT_CLASSIFICATION	6.986336029361456E-9	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999987157676352	WITHOUT_CLASSIFICATION	1.284232364830128E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999956563738	WITHOUT_CLASSIFICATION	4.3436261969405795E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999956563738	WITHOUT_CLASSIFICATION	4.3436261969405795E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999956563738	WITHOUT_CLASSIFICATION	4.3436261969405795E-8	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999989567265508	WITHOUT_CLASSIFICATION	1.0432734492088349E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999989567265508	WITHOUT_CLASSIFICATION	1.0432734492088349E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999989567265508	WITHOUT_CLASSIFICATION	1.0432734492088349E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999979217329612	WITHOUT_CLASSIFICATION	2.0782670387768056E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999979217329612	WITHOUT_CLASSIFICATION	2.0782670387768056E-6	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.999999984867555	WITHOUT_CLASSIFICATION	1.5132444968170496E-8	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999994806825836	WITHOUT_CLASSIFICATION	5.193174165083342E-7	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999999652102696	WITHOUT_CLASSIFICATION	3.47897303943364E-7	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9996520448096979	WITHOUT_CLASSIFICATION	3.47955190302114E-4	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999999561215749	WITHOUT_CLASSIFICATION	4.387842500802856E-8	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999998719694516	WITHOUT_CLASSIFICATION	1.2803054838002445E-7	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999998719694516	WITHOUT_CLASSIFICATION	1.2803054838002445E-7	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999998029323788	WITHOUT_CLASSIFICATION	1.9706762122181964E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999768843985058	WITHOUT_CLASSIFICATION	2.3115601494154395E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999768843985058	WITHOUT_CLASSIFICATION	2.3115601494154395E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999768843985058	WITHOUT_CLASSIFICATION	2.3115601494154395E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999768843985058	WITHOUT_CLASSIFICATION	2.3115601494154395E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999768843985058	WITHOUT_CLASSIFICATION	2.3115601494154395E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998066404946	WITHOUT_CLASSIFICATION	1.9335950534902023E-7	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998066404946	WITHOUT_CLASSIFICATION	1.9335950534902023E-7	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998066404946	WITHOUT_CLASSIFICATION	1.9335950534902023E-7	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.99999997088973	WITHOUT_CLASSIFICATION	2.9110269841369305E-8	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999997242266226	WITHOUT_CLASSIFICATION	2.7577337737127154E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999987157676352	WITHOUT_CLASSIFICATION	1.284232364830128E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999989567265508	WITHOUT_CLASSIFICATION	1.0432734492088349E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999989567265508	WITHOUT_CLASSIFICATION	1.0432734492088349E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999768843985058	WITHOUT_CLASSIFICATION	2.3115601494154395E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999768843985058	WITHOUT_CLASSIFICATION	2.3115601494154395E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998066404946	WITHOUT_CLASSIFICATION	1.9335950534902023E-7	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999998029323788	WITHOUT_CLASSIFICATION	1.9706762122181964E-7	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999982718068873	WITHOUT_CLASSIFICATION	1.7281931126094146E-6	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.999998810748057	WITHOUT_CLASSIFICATION	1.1892519430845168E-6	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999999644891006	WITHOUT_CLASSIFICATION	3.551089955165255E-8	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999998658798784	WITHOUT_CLASSIFICATION	1.3412012154712931E-7	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999996927043633	WITHOUT_CLASSIFICATION	3.0729563676921513E-7	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999997974419115	WITHOUT_CLASSIFICATION	2.0255808849844766E-7	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999751681687452	WITHOUT_CLASSIFICATION	2.4831831254740893E-5	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999996971705952	WITHOUT_CLASSIFICATION	3.0282940476033555E-7	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999999838035143	WITHOUT_CLASSIFICATION	1.6196485702030463E-8	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999998514056243	WITHOUT_CLASSIFICATION	1.4859437571130608E-7	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999999090631597	WITHOUT_CLASSIFICATION	9.093684026468284E-8	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999995031863087	WITHOUT_CLASSIFICATION	4.968136913234318E-7	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999997488949494	WITHOUT_CLASSIFICATION	2.5110505059457586E-7	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999982878943492	WITHOUT_CLASSIFICATION	1.712105650688592E-6	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999974113248921	WITHOUT_CLASSIFICATION	2.588675107882305E-6	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999999845978442	WITHOUT_CLASSIFICATION	1.5402155719295043E-8	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999999984028193	WITHOUT_CLASSIFICATION	1.5971806925081517E-9	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999883374070888	WITHOUT_CLASSIFICATION	1.1662592911202416E-5	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999873505587256	WITHOUT_CLASSIFICATION	1.2649441274444928E-5	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999963222259	WITHOUT_CLASSIFICATION	3.6777740428502646E-9	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999992427744012	WITHOUT_CLASSIFICATION	7.572255987939173E-7	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999996997732565	WITHOUT_CLASSIFICATION	3.002267434644532E-7	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999998264372865	WITHOUT_CLASSIFICATION	1.7356271358287243E-7	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999999966179595	WITHOUT_CLASSIFICATION	3.3820405900254027E-9	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999995063296298	WITHOUT_CLASSIFICATION	4.936703702468925E-7	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999973247208992	WITHOUT_CLASSIFICATION	2.675279100787689E-6	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999998461923963	WITHOUT_CLASSIFICATION	1.538076036311011E-7	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999579456501	WITHOUT_CLASSIFICATION	4.2054349898187017E-8	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999999539630297	WITHOUT_CLASSIFICATION	4.603697028574112E-8	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999999645233307	WITHOUT_CLASSIFICATION	3.547666926455272E-8	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999994044803588	WITHOUT_CLASSIFICATION	5.955196411791811E-7	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999855326941	WITHOUT_CLASSIFICATION	1.4467306029686533E-8	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999633157974	WITHOUT_CLASSIFICATION	3.668420264119511E-8	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999962045502	WITHOUT_CLASSIFICATION	3.79544987884594E-9	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999982718068873	WITHOUT_CLASSIFICATION	1.7281931126094146E-6	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999893449829	WITHOUT_CLASSIFICATION	1.0655017129341419E-8	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999999402750934	WITHOUT_CLASSIFICATION	5.97249065801499E-8	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999946980611121	WITHOUT_CLASSIFICATION	5.301938887865838E-6	TEST
// silence	WITHOUT_CLASSIFICATION	0.999999827113254	WITHOUT_CLASSIFICATION	1.7288674601430118E-7	TEST
// silence	WITHOUT_CLASSIFICATION	0.999999827113254	WITHOUT_CLASSIFICATION	1.7288674601430118E-7	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999996721904747	WITHOUT_CLASSIFICATION	3.2780952530219885E-7	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999996721904747	WITHOUT_CLASSIFICATION	3.2780952530219885E-7	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999992434372367	WITHOUT_CLASSIFICATION	7.565627634057131E-7	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999994580650393	WITHOUT_CLASSIFICATION	5.419349606701294E-7	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999272073792	WITHOUT_CLASSIFICATION	7.27926208779835E-8	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999997901594885	WITHOUT_CLASSIFICATION	2.0984051147051183E-7	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999030899142	WITHOUT_CLASSIFICATION	9.69100859430533E-8	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.999999916110923	WITHOUT_CLASSIFICATION	8.388907699485317E-8	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999648855892	WITHOUT_CLASSIFICATION	3.511441079476002E-8	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999999729368614	WITHOUT_CLASSIFICATION	2.7063138624526574E-8	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999997471816	WITHOUT_CLASSIFICATION	2.52818463558976E-10	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999994451493307	WITHOUT_CLASSIFICATION	5.54850669308075E-7	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999847465904	WITHOUT_CLASSIFICATION	1.5253409649619338E-8	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999976693929845	WITHOUT_CLASSIFICATION	2.3306070155990428E-6	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999976693929845	WITHOUT_CLASSIFICATION	2.3306070155990428E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999994940319538	WITHOUT_CLASSIFICATION	5.059680462758113E-7	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999988322604436	WITHOUT_CLASSIFICATION	1.167739556466388E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999995246366398	WITHOUT_CLASSIFICATION	4.7536336021006137E-7	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999995246366398	WITHOUT_CLASSIFICATION	4.7536336021006137E-7	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999983896600945	WITHOUT_CLASSIFICATION	1.610339905503271E-6	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999972172694	WITHOUT_CLASSIFICATION	2.7827305323248627E-9	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999990477772467	WITHOUT_CLASSIFICATION	9.522227533338065E-7	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999998965166733	WITHOUT_CLASSIFICATION	1.0348332674479504E-7	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999160929497	WITHOUT_CLASSIFICATION	8.390705035248991E-8	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999985140640616	WITHOUT_CLASSIFICATION	1.4859359384649207E-6	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999996782559949	WITHOUT_CLASSIFICATION	3.2174400510481677E-7	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999999540022642	WITHOUT_CLASSIFICATION	4.599773585825527E-8	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999966263623032	WITHOUT_CLASSIFICATION	3.3736376967030604E-6	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999997133736572	WITHOUT_CLASSIFICATION	2.866263427444111E-7	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999996535279234	WITHOUT_CLASSIFICATION	3.464720766705729E-7	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999126314635107	WITHOUT_CLASSIFICATION	8.736853648931293E-5	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999999584047299	WITHOUT_CLASSIFICATION	4.159527024066814E-8	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999993952173788	WITHOUT_CLASSIFICATION	6.047826212597703E-7	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999998125181015	WITHOUT_CLASSIFICATION	1.8748189846889347E-7	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999922377633608	WITHOUT_CLASSIFICATION	7.76223663923479E-6	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999999589623705	WITHOUT_CLASSIFICATION	4.1037629573298075E-8	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999999863060046	WITHOUT_CLASSIFICATION	1.3693995495212052E-8	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999100316082711	WITHOUT_CLASSIFICATION	8.996839172896786E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999840970627	WITHOUT_CLASSIFICATION	1.5902937280749854E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9972437446017952	WITHOUT_CLASSIFICATION	0.0027562553982048064	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999999559203778	WITHOUT_CLASSIFICATION	4.4079622062783366E-8	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999999658832343	WITHOUT_CLASSIFICATION	3.411676577689677E-8	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999999584624163	WITHOUT_CLASSIFICATION	4.153758376506139E-8	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999999745592865	WITHOUT_CLASSIFICATION	2.5440713435451102E-8	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999999980242777	WITHOUT_CLASSIFICATION	1.9757222799134936E-9	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999997361679603	WITHOUT_CLASSIFICATION	2.638320396150804E-7	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999995112928496	WITHOUT_CLASSIFICATION	4.887071504014897E-7	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999992792198759	WITHOUT_CLASSIFICATION	7.207801240525169E-7	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999985795811493	WITHOUT_CLASSIFICATION	1.4204188506233116E-6	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999458990575	WITHOUT_CLASSIFICATION	5.410094241162217E-8	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999998313546278	WITHOUT_CLASSIFICATION	1.6864537232813142E-7	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999838898037	WITHOUT_CLASSIFICATION	1.6110196381151737E-8	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999810897698	WITHOUT_CLASSIFICATION	1.8910230151569676E-8	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999810897698	WITHOUT_CLASSIFICATION	1.8910230151569676E-8	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999146120193	WITHOUT_CLASSIFICATION	8.538798063298477E-8	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999999965272565	WITHOUT_CLASSIFICATION	3.4727436372235036E-9	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999665058588088	WITHOUT_CLASSIFICATION	3.349414119132873E-5	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999992168761639	WITHOUT_CLASSIFICATION	7.831238360074909E-7	TEST
// Block	WITHOUT_CLASSIFICATION	0.9999987353923773	WITHOUT_CLASSIFICATION	1.2646076226397562E-6	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999998444128507	WITHOUT_CLASSIFICATION	1.5558714917582124E-7	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999673770887525	WITHOUT_CLASSIFICATION	3.2622911247477575E-5	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999635824928726	WITHOUT_CLASSIFICATION	3.641750712730057E-5	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999482960320281	WITHOUT_CLASSIFICATION	5.170396797178357E-5	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999960596401677	WITHOUT_CLASSIFICATION	3.940359832288881E-6	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.999999977487366	WITHOUT_CLASSIFICATION	2.2512633917122416E-8	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999953845866786	WITHOUT_CLASSIFICATION	4.6154133213901275E-6	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999620296052046	WITHOUT_CLASSIFICATION	3.7970394795402435E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999973814727331	WITHOUT_CLASSIFICATION	2.6185272667930376E-6	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999999747214932	WITHOUT_CLASSIFICATION	2.5278506738198477E-8	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999998701066697	WITHOUT_CLASSIFICATION	1.2989333028055133E-7	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999998966612894	WITHOUT_CLASSIFICATION	1.0333871061855244E-7	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999999358824798	WITHOUT_CLASSIFICATION	6.411752017398365E-8	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999997900480653	WITHOUT_CLASSIFICATION	2.0995193471680965E-7	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999991048869377	WITHOUT_CLASSIFICATION	8.951130622106198E-7	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.999999485877465	WITHOUT_CLASSIFICATION	5.14122535060564E-7	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999980811061892	WITHOUT_CLASSIFICATION	1.9188938109536203E-6	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999998669866326	WITHOUT_CLASSIFICATION	1.330133673575968E-7	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999998247143465	WITHOUT_CLASSIFICATION	1.7528565361541172E-7	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.999998684365089	WITHOUT_CLASSIFICATION	1.3156349111055634E-6	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999998477454768	WITHOUT_CLASSIFICATION	1.5225452317032964E-7	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999837803036	WITHOUT_CLASSIFICATION	1.6219696328548117E-8	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.999996032160577	WITHOUT_CLASSIFICATION	3.967839422999815E-6	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999988492244565	WITHOUT_CLASSIFICATION	1.1507755435251742E-6	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999998747332604	WITHOUT_CLASSIFICATION	1.2526673971464377E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999451794355246	WITHOUT_CLASSIFICATION	5.482056447543576E-5	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9930813604861704	WITHOUT_CLASSIFICATION	0.0069186395138296775	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999991218331522	WITHOUT_CLASSIFICATION	8.781668477520837E-7	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999994301558826	WITHOUT_CLASSIFICATION	5.698441174339676E-7	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999993672632379	WITHOUT_CLASSIFICATION	6.327367620749779E-7	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9995469871001704	WITHOUT_CLASSIFICATION	4.530128998295536E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999964982980517	WITHOUT_CLASSIFICATION	3.501701948279205E-6	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999995899655957	WITHOUT_CLASSIFICATION	4.100344043201723E-7	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999999093369596	WITHOUT_CLASSIFICATION	9.066304040069374E-8	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999998679162978	WITHOUT_CLASSIFICATION	1.3208370223070974E-7	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999998924197369	WITHOUT_CLASSIFICATION	1.0758026309450887E-7	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999998770415621	WITHOUT_CLASSIFICATION	1.2295843783692496E-7	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999998770415621	WITHOUT_CLASSIFICATION	1.2295843783692496E-7	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999997287742135	WITHOUT_CLASSIFICATION	2.712257865002969E-7	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999997282031685	WITHOUT_CLASSIFICATION	2.7179683147040984E-7	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999993166698768	WITHOUT_CLASSIFICATION	6.833301232093621E-7	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999998060385762	WITHOUT_CLASSIFICATION	1.9396142373875633E-7	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999985405507229	WITHOUT_CLASSIFICATION	1.4594492770150766E-6	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999882114486	WITHOUT_CLASSIFICATION	1.1788551262298514E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999541428842	WITHOUT_CLASSIFICATION	4.5857115807209275E-8	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999999706164957	WITHOUT_CLASSIFICATION	2.9383504291682966E-8	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999989969903089	WITHOUT_CLASSIFICATION	1.0030096911018871E-6	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999978326645	WITHOUT_CLASSIFICATION	2.1673355271562253E-9	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999944731889705	WITHOUT_CLASSIFICATION	5.526811029469697E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999230924008	WITHOUT_CLASSIFICATION	7.690759923484874E-8	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999993856719073	WITHOUT_CLASSIFICATION	6.143280926276537E-7	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999999452284302	WITHOUT_CLASSIFICATION	5.4771569902736237E-8	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999830539076	WITHOUT_CLASSIFICATION	1.6946092525643214E-8	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999899466327085	WITHOUT_CLASSIFICATION	1.0053367291428215E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999956722013	WITHOUT_CLASSIFICATION	4.327798772096343E-9	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999948233449555	WITHOUT_CLASSIFICATION	5.176655044446119E-6	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999941714135	WITHOUT_CLASSIFICATION	5.828586530598725E-9	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.999991581832202	WITHOUT_CLASSIFICATION	8.418167797984136E-6	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999995437796475	WITHOUT_CLASSIFICATION	4.56220352563302E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999990868593036	WITHOUT_CLASSIFICATION	9.131406962667634E-7	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999997507385	WITHOUT_CLASSIFICATION	2.4926151175898296E-10	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999999469502906	WITHOUT_CLASSIFICATION	5.304970931041295E-8	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998592230459	WITHOUT_CLASSIFICATION	1.4077695419874708E-7	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.99999545110879	WITHOUT_CLASSIFICATION	4.548891210061221E-6	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999992739464222	WITHOUT_CLASSIFICATION	7.260535778422788E-7	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.999999665352692	WITHOUT_CLASSIFICATION	3.346473080419515E-7	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.99999983568147	WITHOUT_CLASSIFICATION	1.6431853003394846E-7	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999997973271685	WITHOUT_CLASSIFICATION	2.026728314291469E-7	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999998242786619	WITHOUT_CLASSIFICATION	1.7572133815003285E-7	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999845608377	WITHOUT_CLASSIFICATION	1.5439162202465887E-8	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999997973271685	WITHOUT_CLASSIFICATION	2.026728314291469E-7	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999716871369554	WITHOUT_CLASSIFICATION	2.8312863044562627E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999825287048937	WITHOUT_CLASSIFICATION	1.747129510637593E-5	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999998364905742	WITHOUT_CLASSIFICATION	1.6350942578360724E-7	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9988950921806969	WITHOUT_CLASSIFICATION	0.0011049078193030373	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.999999717741034	WITHOUT_CLASSIFICATION	2.8225896599912776E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999985666914285	WITHOUT_CLASSIFICATION	1.433308571478524E-6	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999997021302932	WITHOUT_CLASSIFICATION	2.9786970680785063E-7	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999950491778026	WITHOUT_CLASSIFICATION	4.950822197426854E-6	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999994052419597	WITHOUT_CLASSIFICATION	5.947580403205276E-7	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999840970627	WITHOUT_CLASSIFICATION	1.5902937280749854E-8	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999999652102696	WITHOUT_CLASSIFICATION	3.47897303943364E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999995757270574	WITHOUT_CLASSIFICATION	4.2427294261394187E-7	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999986707761515	WITHOUT_CLASSIFICATION	1.3292238484766932E-6	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999999679697922	WITHOUT_CLASSIFICATION	3.2030207767383004E-8	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999821467555061	WITHOUT_CLASSIFICATION	1.7853244493932817E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999988270736756	WITHOUT_CLASSIFICATION	1.172926324422094E-6	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999575295760087	WITHOUT_CLASSIFICATION	4.2470423991361075E-5	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999999069656729	WITHOUT_CLASSIFICATION	9.303432710635606E-8	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999190038487	WITHOUT_CLASSIFICATION	8.09961513108891E-8	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999997285832757	WITHOUT_CLASSIFICATION	2.71416724275049E-7	TEST
// expected	WITHOUT_CLASSIFICATION	0.999998855306018	WITHOUT_CLASSIFICATION	1.1446939820043557E-6	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999977460138749	WITHOUT_CLASSIFICATION	2.253986125111424E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999998372925827	WITHOUT_CLASSIFICATION	1.627074172880559E-7	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999997359754924	WITHOUT_CLASSIFICATION	2.6402450756741466E-7	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999998204242898	WITHOUT_CLASSIFICATION	1.7957571027556226E-7	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999991830105681	WITHOUT_CLASSIFICATION	8.169894318244796E-7	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999994400143909	WITHOUT_CLASSIFICATION	5.59985609075149E-7	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999821181003	WITHOUT_CLASSIFICATION	1.7881899715611076E-8	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999998966698681	WITHOUT_CLASSIFICATION	1.0333013192455364E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998293898736	WITHOUT_CLASSIFICATION	1.7061012630820644E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998293898736	WITHOUT_CLASSIFICATION	1.7061012630820644E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998823322838	WITHOUT_CLASSIFICATION	1.176677161534523E-7	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.999999995016626	WITHOUT_CLASSIFICATION	4.9833740987465194E-9	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999983418774	WITHOUT_CLASSIFICATION	1.6581225919577634E-9	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9959881133422633	WITHOUT_CLASSIFICATION	0.004011886657736663	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9959881133422633	WITHOUT_CLASSIFICATION	0.004011886657736663	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9959881133422633	WITHOUT_CLASSIFICATION	0.004011886657736663	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9959881133422633	WITHOUT_CLASSIFICATION	0.004011886657736663	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999999205814085	WITHOUT_CLASSIFICATION	7.941859150257778E-8	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999998181124737	WITHOUT_CLASSIFICATION	1.818875262955606E-7	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999994295724475	WITHOUT_CLASSIFICATION	5.704275524841625E-7	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999973759009397	WITHOUT_CLASSIFICATION	2.6240990602327502E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999617182029	WITHOUT_CLASSIFICATION	3.8281797093406714E-8	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.999977525114393	WITHOUT_CLASSIFICATION	2.2474885606990518E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999896153428641	WITHOUT_CLASSIFICATION	1.0384657135964676E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999896153428641	WITHOUT_CLASSIFICATION	1.0384657135964676E-5	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999814539087	WITHOUT_CLASSIFICATION	1.8546091306799124E-8	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9999698344613418	WITHOUT_CLASSIFICATION	3.0165538658164236E-5	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999994664780252	WITHOUT_CLASSIFICATION	5.335219747998841E-7	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9995397700927285	WITHOUT_CLASSIFICATION	4.6022990727158695E-4	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999998534174577	WITHOUT_CLASSIFICATION	1.465825424300647E-7	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999998601718592	WITHOUT_CLASSIFICATION	1.398281408213339E-7	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999400556219	WITHOUT_CLASSIFICATION	5.994437822964725E-8	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999920105990755	WITHOUT_CLASSIFICATION	7.98940092456371E-6	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999725043447676	WITHOUT_CLASSIFICATION	2.749565523238876E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999725043447676	WITHOUT_CLASSIFICATION	2.749565523238876E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999845608377	WITHOUT_CLASSIFICATION	1.5439162202465887E-8	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999993991933934	WITHOUT_CLASSIFICATION	6.008066065720105E-7	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999994359620545	WITHOUT_CLASSIFICATION	5.640379455101271E-7	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999996907022686	WITHOUT_CLASSIFICATION	3.092977314359551E-7	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999989646984625	WITHOUT_CLASSIFICATION	1.0353015375351525E-6	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9999724596555793	WITHOUT_CLASSIFICATION	2.754034442076316E-5	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999993323376607	WITHOUT_CLASSIFICATION	6.676623393664114E-7	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999998676838934	WITHOUT_CLASSIFICATION	1.3231610653217443E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999997840931807	WITHOUT_CLASSIFICATION	2.1590681920435478E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999997840931807	WITHOUT_CLASSIFICATION	2.1590681920435478E-7	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999999426174068	WITHOUT_CLASSIFICATION	5.738259315570701E-8	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999997785508	WITHOUT_CLASSIFICATION	2.2144922944331787E-10	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999700194871585	WITHOUT_CLASSIFICATION	2.998051284151361E-5	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999997027726046	WITHOUT_CLASSIFICATION	2.9722739538009385E-7	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999999680489061	WITHOUT_CLASSIFICATION	3.1951093825850955E-8	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9999710058319984	WITHOUT_CLASSIFICATION	2.899416800170478E-5	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.999999883648673	WITHOUT_CLASSIFICATION	1.163513270585895E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999675250464	WITHOUT_CLASSIFICATION	3.2474953612709435E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999675250464	WITHOUT_CLASSIFICATION	3.2474953612709435E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999675250464	WITHOUT_CLASSIFICATION	3.2474953612709435E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999675250464	WITHOUT_CLASSIFICATION	3.2474953612709435E-8	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999929401043	WITHOUT_CLASSIFICATION	7.059895676793912E-9	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999998171561431	WITHOUT_CLASSIFICATION	1.8284385692998402E-7	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999545305777621	WITHOUT_CLASSIFICATION	4.546942223796603E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999995792271199	WITHOUT_CLASSIFICATION	4.2077288008865454E-7	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999992061153926	WITHOUT_CLASSIFICATION	7.93884607339152E-7	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.999965341700471	WITHOUT_CLASSIFICATION	3.465829952888815E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999997741114887	WITHOUT_CLASSIFICATION	2.2588851124302587E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999984275875222	WITHOUT_CLASSIFICATION	1.5724124777552707E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999984275875222	WITHOUT_CLASSIFICATION	1.5724124777552707E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999984275875222	WITHOUT_CLASSIFICATION	1.5724124777552707E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998253880517	WITHOUT_CLASSIFICATION	1.7461194829038732E-7	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999999759636969	WITHOUT_CLASSIFICATION	2.4036303095696692E-8	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999706352152	WITHOUT_CLASSIFICATION	2.936478480560326E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999706352152	WITHOUT_CLASSIFICATION	2.936478480560326E-7	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999968975373085	WITHOUT_CLASSIFICATION	3.1024626915590394E-6	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999999994393	WITHOUT_CLASSIFICATION	5.606295896162836E-13	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999992649460914	WITHOUT_CLASSIFICATION	7.350539087205176E-7	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.999996448461344	WITHOUT_CLASSIFICATION	3.551538656088405E-6	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999292948396	WITHOUT_CLASSIFICATION	7.070516036267678E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999999125132103	WITHOUT_CLASSIFICATION	8.748678961140644E-8	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999997213345392	WITHOUT_CLASSIFICATION	2.786654607778182E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999997213345392	WITHOUT_CLASSIFICATION	2.786654607778182E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999997521537206	WITHOUT_CLASSIFICATION	2.4784627931895564E-7	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999563105411	WITHOUT_CLASSIFICATION	4.36894589291849E-8	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999011202421	WITHOUT_CLASSIFICATION	9.88797579536196E-8	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999991125307507	WITHOUT_CLASSIFICATION	8.87469249445564E-7	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999994092665411	WITHOUT_CLASSIFICATION	5.907334589040256E-7	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999710755934	WITHOUT_CLASSIFICATION	2.8924406666358558E-8	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999999744191773	WITHOUT_CLASSIFICATION	2.5580822649483598E-8	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999818608139693	WITHOUT_CLASSIFICATION	1.8139186030642863E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999967448439715	WITHOUT_CLASSIFICATION	3.2551560285331974E-6	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999648470763	WITHOUT_CLASSIFICATION	3.5152923768151E-8	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999999108983707	WITHOUT_CLASSIFICATION	8.91016292752012E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999929540271	WITHOUT_CLASSIFICATION	7.045972870204158E-9	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998913413642	WITHOUT_CLASSIFICATION	1.0865863578045169E-7	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999995062106405	WITHOUT_CLASSIFICATION	4.937893595594937E-7	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999304261449	WITHOUT_CLASSIFICATION	6.957385518719391E-8	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999999987558932	WITHOUT_CLASSIFICATION	1.2441067940397654E-9	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999999576849583	WITHOUT_CLASSIFICATION	4.2315041701137334E-8	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999671929167	WITHOUT_CLASSIFICATION	3.280708329621399E-8	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999999992250581	WITHOUT_CLASSIFICATION	7.749418990996129E-9	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999999776380952	WITHOUT_CLASSIFICATION	2.236190470414391E-8	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999926467237	WITHOUT_CLASSIFICATION	7.353276388410469E-9	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999859739535	WITHOUT_CLASSIFICATION	1.4026046460140075E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999819932751	WITHOUT_CLASSIFICATION	1.8006724929259817E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999819932751	WITHOUT_CLASSIFICATION	1.8006724929259817E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999819932751	WITHOUT_CLASSIFICATION	1.8006724929259817E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999819932751	WITHOUT_CLASSIFICATION	1.8006724929259817E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999819932751	WITHOUT_CLASSIFICATION	1.8006724929259817E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999819932751	WITHOUT_CLASSIFICATION	1.8006724929259817E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999819932751	WITHOUT_CLASSIFICATION	1.8006724929259817E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999819932751	WITHOUT_CLASSIFICATION	1.8006724929259817E-8	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999858069272	WITHOUT_CLASSIFICATION	1.4193072893420518E-8	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999911859570206	WITHOUT_CLASSIFICATION	8.814042979476747E-6	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999910427265106	WITHOUT_CLASSIFICATION	8.957273489390435E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999131459796	WITHOUT_CLASSIFICATION	8.685402036532113E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999541428842	WITHOUT_CLASSIFICATION	4.5857115807209275E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999541428842	WITHOUT_CLASSIFICATION	4.5857115807209275E-8	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999994738930924	WITHOUT_CLASSIFICATION	5.261069076897976E-7	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999999499544749	WITHOUT_CLASSIFICATION	5.0045525028095766E-8	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999998970709366	WITHOUT_CLASSIFICATION	1.0292906337203482E-7	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999980807818297	WITHOUT_CLASSIFICATION	1.919218170288366E-6	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999997648272415	WITHOUT_CLASSIFICATION	2.3517275841402272E-7	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999997961759394	WITHOUT_CLASSIFICATION	2.0382406069058548E-7	TEST
// read	WITHOUT_CLASSIFICATION	0.9999994577046789	WITHOUT_CLASSIFICATION	5.422953209983715E-7	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999997616490597	WITHOUT_CLASSIFICATION	2.3835094021267923E-7	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999995390732211	WITHOUT_CLASSIFICATION	4.609267788265716E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999128964184	WITHOUT_CLASSIFICATION	8.710358158318044E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999128964184	WITHOUT_CLASSIFICATION	8.710358158318044E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999128964184	WITHOUT_CLASSIFICATION	8.710358158318044E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999566689853496	WITHOUT_CLASSIFICATION	4.333101465037842E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999566689853496	WITHOUT_CLASSIFICATION	4.333101465037842E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999566689853496	WITHOUT_CLASSIFICATION	4.333101465037842E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999566689853496	WITHOUT_CLASSIFICATION	4.333101465037842E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999566689853496	WITHOUT_CLASSIFICATION	4.333101465037842E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999566689853496	WITHOUT_CLASSIFICATION	4.333101465037842E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999566689853496	WITHOUT_CLASSIFICATION	4.333101465037842E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999566689853496	WITHOUT_CLASSIFICATION	4.333101465037842E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999566689853496	WITHOUT_CLASSIFICATION	4.333101465037842E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999456114418	WITHOUT_CLASSIFICATION	5.4388558286662693E-8	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999996291387154	WITHOUT_CLASSIFICATION	3.7086128460488187E-7	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999951133885356	WITHOUT_CLASSIFICATION	4.886611464320537E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999996433891126	WITHOUT_CLASSIFICATION	3.566108872676691E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999566689853496	WITHOUT_CLASSIFICATION	4.333101465037842E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999566689853496	WITHOUT_CLASSIFICATION	4.333101465037842E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999566689853496	WITHOUT_CLASSIFICATION	4.333101465037842E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999346035612	WITHOUT_CLASSIFICATION	6.539643883301373E-8	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999972236492397	WITHOUT_CLASSIFICATION	2.7763507602061046E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999999968010314	WITHOUT_CLASSIFICATION	3.198968579254449E-9	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999999917028742	WITHOUT_CLASSIFICATION	8.297125801238229E-8	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999999917028742	WITHOUT_CLASSIFICATION	8.297125801238229E-8	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999997062472206	WITHOUT_CLASSIFICATION	2.937527795381298E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999999721911185	WITHOUT_CLASSIFICATION	2.7808881479054074E-8	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999749832157	WITHOUT_CLASSIFICATION	2.5016784371998992E-8	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.999999848781554	WITHOUT_CLASSIFICATION	1.5121844597839973E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999997251209984	WITHOUT_CLASSIFICATION	2.7487900157556033E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999997251209984	WITHOUT_CLASSIFICATION	2.7487900157556033E-7	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999993228211345	WITHOUT_CLASSIFICATION	6.771788654610848E-7	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.99999988879472	WITHOUT_CLASSIFICATION	1.1120528010538135E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999998130974596	WITHOUT_CLASSIFICATION	1.8690254041211086E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999519611248155	WITHOUT_CLASSIFICATION	4.803887518435353E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999519611248155	WITHOUT_CLASSIFICATION	4.803887518435353E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999519611248155	WITHOUT_CLASSIFICATION	4.803887518435353E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999999598224668	WITHOUT_CLASSIFICATION	4.017753313124368E-8	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998184508064	WITHOUT_CLASSIFICATION	1.815491935430378E-7	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998184508064	WITHOUT_CLASSIFICATION	1.815491935430378E-7	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999999315749291	WITHOUT_CLASSIFICATION	6.842507101814888E-8	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999999315749291	WITHOUT_CLASSIFICATION	6.842507101814888E-8	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999998726373309	WITHOUT_CLASSIFICATION	1.2736266912049302E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999740692244	WITHOUT_CLASSIFICATION	2.5930775647956915E-8	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999995714407499	WITHOUT_CLASSIFICATION	4.2855925007761797E-7	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999931362879794	WITHOUT_CLASSIFICATION	6.863712020553596E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999981967845718	WITHOUT_CLASSIFICATION	1.803215428251333E-6	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999999309150804	WITHOUT_CLASSIFICATION	6.908491948769833E-8	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999937763433	WITHOUT_CLASSIFICATION	6.223656703023114E-9	TEST
// block	WITHOUT_CLASSIFICATION	0.9999991756000546	WITHOUT_CLASSIFICATION	8.243999453911955E-7	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999997248067262	WITHOUT_CLASSIFICATION	2.751932738722103E-7	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999699796427	WITHOUT_CLASSIFICATION	3.002035722663035E-8	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999361522966974	WITHOUT_CLASSIFICATION	6.384770330258564E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999995858600819	WITHOUT_CLASSIFICATION	4.141399181724803E-7	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999993026484294	WITHOUT_CLASSIFICATION	6.973515706044986E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999998418766933	WITHOUT_CLASSIFICATION	1.5812330658817093E-7	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999978711941	WITHOUT_CLASSIFICATION	2.1288058844352064E-9	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999995260997486	WITHOUT_CLASSIFICATION	4.7390025142744643E-7	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999964987256191	WITHOUT_CLASSIFICATION	3.50127438090873E-6	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999985282741	WITHOUT_CLASSIFICATION	1.4717258538392022E-9	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999650137522506	WITHOUT_CLASSIFICATION	3.4986247749517794E-5	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999990185198815	WITHOUT_CLASSIFICATION	9.814801184962399E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999995757270574	WITHOUT_CLASSIFICATION	4.2427294261394187E-7	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9998639952373536	WITHOUT_CLASSIFICATION	1.3600476264640142E-4	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999997810638672	WITHOUT_CLASSIFICATION	2.18936132811775E-7	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999999977316402	WITHOUT_CLASSIFICATION	2.268359852278952E-9	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999999088227342	WITHOUT_CLASSIFICATION	9.117726580720246E-8	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999916728298345	WITHOUT_CLASSIFICATION	8.327170165463478E-6	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999946146183188	WITHOUT_CLASSIFICATION	5.385381681140533E-6	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.999999835239497	WITHOUT_CLASSIFICATION	1.6476050305641647E-7	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999998500345598	WITHOUT_CLASSIFICATION	1.4996544015840044E-7	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999992719673	WITHOUT_CLASSIFICATION	7.280326995884733E-10	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999995640155619	WITHOUT_CLASSIFICATION	4.3598443818694565E-7	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999654855298	WITHOUT_CLASSIFICATION	3.4514470245714304E-8	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999998184915346	WITHOUT_CLASSIFICATION	1.8150846526519212E-7	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999795605385	WITHOUT_CLASSIFICATION	2.0439461463854294E-8	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999998516331735	WITHOUT_CLASSIFICATION	1.483668264755584E-7	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999479513928367	WITHOUT_CLASSIFICATION	5.2048607163343617E-5	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999997611298492	WITHOUT_CLASSIFICATION	2.3887015082879705E-7	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999999474249623	WITHOUT_CLASSIFICATION	5.257503758633939E-8	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999989525810477	WITHOUT_CLASSIFICATION	1.0474189523349925E-6	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999898654535	WITHOUT_CLASSIFICATION	1.0134546479287416E-8	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999998897504744	WITHOUT_CLASSIFICATION	1.1024952558857497E-7	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999997743637916	WITHOUT_CLASSIFICATION	2.2563620830785617E-7	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999836090222055	WITHOUT_CLASSIFICATION	1.6390977794530298E-5	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.999999946643948	WITHOUT_CLASSIFICATION	5.335605206691177E-8	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999997103400811	WITHOUT_CLASSIFICATION	2.8965991894226447E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999902147401275	WITHOUT_CLASSIFICATION	9.785259872517567E-6	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999999625503362	WITHOUT_CLASSIFICATION	3.7449663835290334E-8	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999978238429	WITHOUT_CLASSIFICATION	2.1761570970844435E-9	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999998998661447	WITHOUT_CLASSIFICATION	1.0013385532856962E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999758630141876	WITHOUT_CLASSIFICATION	2.4136985812382356E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999999870710826	WITHOUT_CLASSIFICATION	1.2928917374811826E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999421455443	WITHOUT_CLASSIFICATION	5.7854455709378016E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999421455443	WITHOUT_CLASSIFICATION	5.7854455709378016E-8	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999387110561	WITHOUT_CLASSIFICATION	6.128894385177471E-8	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999387110561	WITHOUT_CLASSIFICATION	6.128894385177471E-8	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999972956274576	WITHOUT_CLASSIFICATION	2.7043725423880578E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999972956274576	WITHOUT_CLASSIFICATION	2.7043725423880578E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996448857492	WITHOUT_CLASSIFICATION	3.551142507510162E-7	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996448857492	WITHOUT_CLASSIFICATION	3.551142507510162E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998584467021	WITHOUT_CLASSIFICATION	1.415532979738764E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998584467021	WITHOUT_CLASSIFICATION	1.415532979738764E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998584467021	WITHOUT_CLASSIFICATION	1.415532979738764E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998584467021	WITHOUT_CLASSIFICATION	1.415532979738764E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998584467021	WITHOUT_CLASSIFICATION	1.415532979738764E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998584467021	WITHOUT_CLASSIFICATION	1.415532979738764E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998584467021	WITHOUT_CLASSIFICATION	1.415532979738764E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998584467021	WITHOUT_CLASSIFICATION	1.415532979738764E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998584467021	WITHOUT_CLASSIFICATION	1.415532979738764E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996943489127	WITHOUT_CLASSIFICATION	3.056510873526869E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996943489127	WITHOUT_CLASSIFICATION	3.056510873526869E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996943489127	WITHOUT_CLASSIFICATION	3.056510873526869E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999997793457395	WITHOUT_CLASSIFICATION	2.2065426057242362E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999074019424	WITHOUT_CLASSIFICATION	9.259805756983185E-8	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999074019424	WITHOUT_CLASSIFICATION	9.259805756983185E-8	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999074019424	WITHOUT_CLASSIFICATION	9.259805756983185E-8	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999993392848114	WITHOUT_CLASSIFICATION	6.607151884773779E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999993392848114	WITHOUT_CLASSIFICATION	6.607151884773779E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999993392848114	WITHOUT_CLASSIFICATION	6.607151884773779E-7	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999748358456786	WITHOUT_CLASSIFICATION	2.5164154321384706E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999998362440427	WITHOUT_CLASSIFICATION	1.6375595738299953E-7	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999943348414001	WITHOUT_CLASSIFICATION	5.665158599950563E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999928119026893	WITHOUT_CLASSIFICATION	7.1880973107581636E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999928119026893	WITHOUT_CLASSIFICATION	7.1880973107581636E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999928119026893	WITHOUT_CLASSIFICATION	7.1880973107581636E-6	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.999998762017794	WITHOUT_CLASSIFICATION	1.2379822059411135E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999989460484818	WITHOUT_CLASSIFICATION	1.0539515181420295E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999989460484818	WITHOUT_CLASSIFICATION	1.0539515181420295E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999984540898504	WITHOUT_CLASSIFICATION	1.5459101496692915E-6	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997494156028	WITHOUT_CLASSIFICATION	2.505843972152108E-7	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997494156028	WITHOUT_CLASSIFICATION	2.505843972152108E-7	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9939456606627214	WITHOUT_CLASSIFICATION	0.0060543393372786665	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999829839124159	WITHOUT_CLASSIFICATION	1.7016087584161675E-5	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999994664198927	WITHOUT_CLASSIFICATION	5.335801072998443E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991891295111	WITHOUT_CLASSIFICATION	8.108704888150388E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991891295111	WITHOUT_CLASSIFICATION	8.108704888150388E-7	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999998144182541	WITHOUT_CLASSIFICATION	1.855817458334816E-7	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999988891495537	WITHOUT_CLASSIFICATION	1.1108504463391535E-6	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999988131936203	WITHOUT_CLASSIFICATION	1.1868063797316878E-6	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999999725831608	WITHOUT_CLASSIFICATION	2.7416839162097613E-8	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999995914393777	WITHOUT_CLASSIFICATION	4.0856062229762094E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991891295111	WITHOUT_CLASSIFICATION	8.108704888150388E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991891295111	WITHOUT_CLASSIFICATION	8.108704888150388E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991891295111	WITHOUT_CLASSIFICATION	8.108704888150388E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991891295111	WITHOUT_CLASSIFICATION	8.108704888150388E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999991891295111	WITHOUT_CLASSIFICATION	8.108704888150388E-7	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999999971554159	WITHOUT_CLASSIFICATION	2.8445841010135802E-8	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999999901828606	WITHOUT_CLASSIFICATION	9.817139398685713E-8	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999902865849	WITHOUT_CLASSIFICATION	9.713415060616635E-9	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999995185444805	WITHOUT_CLASSIFICATION	4.814555194241881E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999781141216	WITHOUT_CLASSIFICATION	2.1885878541291236E-8	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998593108075	WITHOUT_CLASSIFICATION	1.406891925913848E-7	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999447699772523	WITHOUT_CLASSIFICATION	5.52300227475788E-5	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999995716535822	WITHOUT_CLASSIFICATION	4.283464178026804E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998614925452	WITHOUT_CLASSIFICATION	1.385074548400281E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.99999947526799	WITHOUT_CLASSIFICATION	5.247320099948523E-7	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999998782375531	WITHOUT_CLASSIFICATION	1.2176244691434497E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999990868593036	WITHOUT_CLASSIFICATION	9.131406962667634E-7	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999999402024834	WITHOUT_CLASSIFICATION	5.97975166765617E-8	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999984774937795	WITHOUT_CLASSIFICATION	1.522506220600267E-6	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999999924696477	WITHOUT_CLASSIFICATION	7.530352290326591E-9	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999999606824967	WITHOUT_CLASSIFICATION	3.9317503268448285E-8	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999998758378273	WITHOUT_CLASSIFICATION	1.241621727413722E-7	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999991219822	WITHOUT_CLASSIFICATION	8.780176936728656E-10	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999999346108995	WITHOUT_CLASSIFICATION	6.538910045501085E-8	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999999001188361	WITHOUT_CLASSIFICATION	9.988116389342974E-7	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999739594920017	WITHOUT_CLASSIFICATION	2.604050799829974E-5	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999991407211588	WITHOUT_CLASSIFICATION	8.59278841206322E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999978326645	WITHOUT_CLASSIFICATION	2.1673355271562253E-9	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999985649841102	WITHOUT_CLASSIFICATION	1.4350158897300447E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999985649841102	WITHOUT_CLASSIFICATION	1.4350158897300447E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999985649841102	WITHOUT_CLASSIFICATION	1.4350158897300447E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999985649841102	WITHOUT_CLASSIFICATION	1.4350158897300447E-6	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999998877275112	WITHOUT_CLASSIFICATION	1.122724887302557E-7	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999997498430815	WITHOUT_CLASSIFICATION	2.5015691854198166E-7	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999681638274	WITHOUT_CLASSIFICATION	3.1836172680317914E-8	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999681638274	WITHOUT_CLASSIFICATION	3.1836172680317914E-8	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999861022262	WITHOUT_CLASSIFICATION	1.3897773924033326E-8	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999996612856574	WITHOUT_CLASSIFICATION	3.3871434261986704E-7	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999976947190382	WITHOUT_CLASSIFICATION	2.3052809618644234E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999892141904	WITHOUT_CLASSIFICATION	1.0785809602869148E-7	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999984715691805	WITHOUT_CLASSIFICATION	1.528430819397391E-6	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999996195550229	WITHOUT_CLASSIFICATION	3.804449770858938E-7	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999994231298297	WITHOUT_CLASSIFICATION	5.768701703523926E-7	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999975368409653	WITHOUT_CLASSIFICATION	2.463159034664822E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999975368409653	WITHOUT_CLASSIFICATION	2.463159034664822E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999975368409653	WITHOUT_CLASSIFICATION	2.463159034664822E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999975368409653	WITHOUT_CLASSIFICATION	2.463159034664822E-6	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999842381209	WITHOUT_CLASSIFICATION	1.5761879196485608E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999369405056	WITHOUT_CLASSIFICATION	6.30594943829352E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999369405056	WITHOUT_CLASSIFICATION	6.30594943829352E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999369405056	WITHOUT_CLASSIFICATION	6.30594943829352E-8	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999997905548325	WITHOUT_CLASSIFICATION	2.0944516750942878E-7	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999998730984296	WITHOUT_CLASSIFICATION	1.2690157041864048E-7	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999997882595699	WITHOUT_CLASSIFICATION	2.117404300170025E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9959881133422633	WITHOUT_CLASSIFICATION	0.004011886657736663	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9959881133422633	WITHOUT_CLASSIFICATION	0.004011886657736663	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999995548837	WITHOUT_CLASSIFICATION	4.4511628774115625E-10	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999155072911	WITHOUT_CLASSIFICATION	8.449270891986803E-8	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999990642377289	WITHOUT_CLASSIFICATION	9.357622711865526E-7	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999990642377289	WITHOUT_CLASSIFICATION	9.357622711865526E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999983551511347	WITHOUT_CLASSIFICATION	1.6448488652538522E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999983551511347	WITHOUT_CLASSIFICATION	1.6448488652538522E-6	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999998299644977	WITHOUT_CLASSIFICATION	1.7003550236805754E-7	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999992190781548	WITHOUT_CLASSIFICATION	7.809218452591865E-7	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999994225198677	WITHOUT_CLASSIFICATION	5.774801323200635E-7	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999893560203781	WITHOUT_CLASSIFICATION	1.064397962192629E-5	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999848539156859	WITHOUT_CLASSIFICATION	1.5146084314165764E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.999999825642357	WITHOUT_CLASSIFICATION	1.7435764300719026E-7	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999210578008	WITHOUT_CLASSIFICATION	7.894219919921842E-8	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.99999891233502	WITHOUT_CLASSIFICATION	1.0876649800114517E-6	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999956437221541	WITHOUT_CLASSIFICATION	4.356277845873845E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999849776252	WITHOUT_CLASSIFICATION	1.5022374841021962E-8	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999849776252	WITHOUT_CLASSIFICATION	1.5022374841021962E-8	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999999395357743	WITHOUT_CLASSIFICATION	6.046422566928586E-8	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999999395357743	WITHOUT_CLASSIFICATION	6.046422566928586E-8	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999999543573276	WITHOUT_CLASSIFICATION	4.5642672445025024E-8	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999998745521186	WITHOUT_CLASSIFICATION	1.254478815049107E-7	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999851291237201	WITHOUT_CLASSIFICATION	1.4870876279931244E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999974622664147	WITHOUT_CLASSIFICATION	2.5377335853331737E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999974622664147	WITHOUT_CLASSIFICATION	2.5377335853331737E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999974622664147	WITHOUT_CLASSIFICATION	2.5377335853331737E-6	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999993204474508	WITHOUT_CLASSIFICATION	6.795525491895811E-7	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999994948825474	WITHOUT_CLASSIFICATION	5.051174526937844E-7	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999993330229758	WITHOUT_CLASSIFICATION	6.669770241325473E-7	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999992361124529	WITHOUT_CLASSIFICATION	7.638875470851197E-7	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999992877206753	WITHOUT_CLASSIFICATION	7.122793248415195E-7	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999993196042063	WITHOUT_CLASSIFICATION	6.803957937707805E-7	TEST
// line 551	WITHOUT_CLASSIFICATION	0.999999424963305	WITHOUT_CLASSIFICATION	5.750366951172172E-7	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999996744877023	WITHOUT_CLASSIFICATION	3.2551229764927873E-7	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999999802924652	WITHOUT_CLASSIFICATION	1.9707534826988383E-8	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999936653351	WITHOUT_CLASSIFICATION	6.334664884735863E-9	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999997438186616	WITHOUT_CLASSIFICATION	2.5618133840221676E-7	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999999271117361	WITHOUT_CLASSIFICATION	7.288826383683372E-8	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.999999499670762	WITHOUT_CLASSIFICATION	5.003292379460326E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9959881133422633	WITHOUT_CLASSIFICATION	0.004011886657736663	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.999999992301894	WITHOUT_CLASSIFICATION	7.698106019218333E-9	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999970851490465	WITHOUT_CLASSIFICATION	2.9148509536152895E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998293898736	WITHOUT_CLASSIFICATION	1.7061012630820644E-7	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999031855014381	WITHOUT_CLASSIFICATION	9.681449856195249E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999031855014381	WITHOUT_CLASSIFICATION	9.681449856195249E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999031855014381	WITHOUT_CLASSIFICATION	9.681449856195249E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999031855014381	WITHOUT_CLASSIFICATION	9.681449856195249E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999031855014381	WITHOUT_CLASSIFICATION	9.681449856195249E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999717560121114	WITHOUT_CLASSIFICATION	2.824398788865559E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999031855014381	WITHOUT_CLASSIFICATION	9.681449856195249E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999031855014381	WITHOUT_CLASSIFICATION	9.681449856195249E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999031855014381	WITHOUT_CLASSIFICATION	9.681449856195249E-5	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.999999942776104	WITHOUT_CLASSIFICATION	5.722389601481728E-8	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999997842509637	WITHOUT_CLASSIFICATION	2.1574903623729647E-7	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9997315868878773	WITHOUT_CLASSIFICATION	2.6841311212272246E-4	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999971226118111	WITHOUT_CLASSIFICATION	2.877388188931149E-6	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999954261640804	WITHOUT_CLASSIFICATION	4.573835919551304E-6	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999997720934485	WITHOUT_CLASSIFICATION	2.2790655156034574E-7	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999191452499	WITHOUT_CLASSIFICATION	8.085475011463934E-8	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999994192034515	WITHOUT_CLASSIFICATION	5.807965484896484E-7	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999993585063355	WITHOUT_CLASSIFICATION	6.414936645681563E-7	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999993585063355	WITHOUT_CLASSIFICATION	6.414936645681563E-7	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999994079225443	WITHOUT_CLASSIFICATION	5.920774557164925E-7	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999994061779086	WITHOUT_CLASSIFICATION	5.938220914128244E-7	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999993594121953	WITHOUT_CLASSIFICATION	6.405878046530735E-7	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999991845590641	WITHOUT_CLASSIFICATION	8.154409358487036E-7	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999991840702784	WITHOUT_CLASSIFICATION	8.159297215007653E-7	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999994954834464	WITHOUT_CLASSIFICATION	5.045165535798102E-7	TEST
// line 766	WITHOUT_CLASSIFICATION	0.999999468806058	WITHOUT_CLASSIFICATION	5.311939421231161E-7	TEST
// line 785	WITHOUT_CLASSIFICATION	0.999999463494401	WITHOUT_CLASSIFICATION	5.365055989800973E-7	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999994087438578	WITHOUT_CLASSIFICATION	5.912561421561586E-7	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999992958304104	WITHOUT_CLASSIFICATION	7.041695897542446E-7	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999993706331713	WITHOUT_CLASSIFICATION	6.293668286861405E-7	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999993301233117	WITHOUT_CLASSIFICATION	6.698766883393933E-7	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999991224000038	WITHOUT_CLASSIFICATION	8.775999962639991E-7	TEST
// line 845	WITHOUT_CLASSIFICATION	0.999999440415064	WITHOUT_CLASSIFICATION	5.595849360287758E-7	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999994212782575	WITHOUT_CLASSIFICATION	5.787217424844141E-7	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999994143856693	WITHOUT_CLASSIFICATION	5.856143307505655E-7	TEST
// line 896	WITHOUT_CLASSIFICATION	0.999999361639702	WITHOUT_CLASSIFICATION	6.383602979617965E-7	TEST
// line 911	WITHOUT_CLASSIFICATION	0.99999934641675	WITHOUT_CLASSIFICATION	6.535832500307113E-7	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999991814612526	WITHOUT_CLASSIFICATION	8.185387475162389E-7	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999993300060865	WITHOUT_CLASSIFICATION	6.699939135496025E-7	TEST
// line 970	WITHOUT_CLASSIFICATION	0.999999362288206	WITHOUT_CLASSIFICATION	6.377117941407715E-7	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999993135695707	WITHOUT_CLASSIFICATION	6.864304292522304E-7	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999993205068114	WITHOUT_CLASSIFICATION	6.794931886127426E-7	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999993963365218	WITHOUT_CLASSIFICATION	6.03663478169594E-7	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999993394527148	WITHOUT_CLASSIFICATION	6.605472852240456E-7	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.999999075000943	WITHOUT_CLASSIFICATION	9.249990570907141E-7	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999994618142324	WITHOUT_CLASSIFICATION	5.381857676228632E-7	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999993686718942	WITHOUT_CLASSIFICATION	6.313281058102556E-7	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999993834108439	WITHOUT_CLASSIFICATION	6.16589156060839E-7	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999994368482514	WITHOUT_CLASSIFICATION	5.631517485846924E-7	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999994112259204	WITHOUT_CLASSIFICATION	5.887740796655227E-7	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999993003491289	WITHOUT_CLASSIFICATION	6.996508712096826E-7	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999995150648687	WITHOUT_CLASSIFICATION	4.849351312804122E-7	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999994395181167	WITHOUT_CLASSIFICATION	5.604818832296848E-7	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999991818915064	WITHOUT_CLASSIFICATION	8.181084935160781E-7	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.999999384227312	WITHOUT_CLASSIFICATION	6.157726878889078E-7	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.999999248690978	WITHOUT_CLASSIFICATION	7.51309021909202E-7	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999993176479774	WITHOUT_CLASSIFICATION	6.823520224271331E-7	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999993750710068	WITHOUT_CLASSIFICATION	6.24928993167662E-7	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999990114806214	WITHOUT_CLASSIFICATION	9.885193785443406E-7	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999992602391289	WITHOUT_CLASSIFICATION	7.397608711381756E-7	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999990251433991	WITHOUT_CLASSIFICATION	9.748566009434813E-7	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999992146696645	WITHOUT_CLASSIFICATION	7.853303354729388E-7	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.99999929932856	WITHOUT_CLASSIFICATION	7.00671439943922E-7	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999991603386874	WITHOUT_CLASSIFICATION	8.39661312626968E-7	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999994297362498	WITHOUT_CLASSIFICATION	5.702637502838127E-7	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999995229706373	WITHOUT_CLASSIFICATION	4.770293626251741E-7	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999993237253024	WITHOUT_CLASSIFICATION	6.76274697557076E-7	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999993339746335	WITHOUT_CLASSIFICATION	6.660253665449631E-7	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999993168637876	WITHOUT_CLASSIFICATION	6.831362124296778E-7	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999992389459781	WITHOUT_CLASSIFICATION	7.610540218781636E-7	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999994467305569	WITHOUT_CLASSIFICATION	5.532694430961325E-7	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999993841035814	WITHOUT_CLASSIFICATION	6.158964187525515E-7	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.999999104026445	WITHOUT_CLASSIFICATION	8.95973555119634E-7	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.999999104026445	WITHOUT_CLASSIFICATION	8.95973555119634E-7	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999994991126216	WITHOUT_CLASSIFICATION	5.008873782876836E-7	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999992914634621	WITHOUT_CLASSIFICATION	7.085365379266096E-7	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999993383876508	WITHOUT_CLASSIFICATION	6.616123492437269E-7	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999994424738463	WITHOUT_CLASSIFICATION	5.57526153726997E-7	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999993616487598	WITHOUT_CLASSIFICATION	6.383512402008761E-7	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999993449619154	WITHOUT_CLASSIFICATION	6.550380844274493E-7	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999994941838396	WITHOUT_CLASSIFICATION	5.058161603198867E-7	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999995050868551	WITHOUT_CLASSIFICATION	4.949131448594208E-7	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999994082046938	WITHOUT_CLASSIFICATION	5.917953062293853E-7	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999994108123577	WITHOUT_CLASSIFICATION	5.891876423399217E-7	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999956129316063	WITHOUT_CLASSIFICATION	4.387068393765125E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999956129316063	WITHOUT_CLASSIFICATION	4.387068393765125E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999985208701795	WITHOUT_CLASSIFICATION	1.4791298205483324E-6	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999941565327536	WITHOUT_CLASSIFICATION	5.843467246388956E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999978645480535	WITHOUT_CLASSIFICATION	2.135451946453854E-6	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999981276223602	WITHOUT_CLASSIFICATION	1.872377639733167E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999719380277	WITHOUT_CLASSIFICATION	2.806197237293053E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999719380277	WITHOUT_CLASSIFICATION	2.806197237293053E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999719380277	WITHOUT_CLASSIFICATION	2.806197237293053E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999719380277	WITHOUT_CLASSIFICATION	2.806197237293053E-8	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.983382920399371	WITHOUT_CLASSIFICATION	0.01661707960062901	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999993379650257	WITHOUT_CLASSIFICATION	6.620349743493448E-7	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999991154664767	WITHOUT_CLASSIFICATION	8.845335232325244E-7	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999989636073323	WITHOUT_CLASSIFICATION	1.0363926676316343E-6	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999990279461639	WITHOUT_CLASSIFICATION	9.72053836173047E-7	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999993269324003	WITHOUT_CLASSIFICATION	6.730675996521064E-7	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999994580353947	WITHOUT_CLASSIFICATION	5.419646052547137E-7	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999994122263336	WITHOUT_CLASSIFICATION	5.877736663896325E-7	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999993740753523	WITHOUT_CLASSIFICATION	6.259246476669452E-7	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999994944469704	WITHOUT_CLASSIFICATION	5.055530296323046E-7	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999994565212711	WITHOUT_CLASSIFICATION	5.434787289516464E-7	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999993550827353	WITHOUT_CLASSIFICATION	6.449172647802336E-7	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999994379743732	WITHOUT_CLASSIFICATION	5.620256267652543E-7	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999992700177126	WITHOUT_CLASSIFICATION	7.299822873480666E-7	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999993962777113	WITHOUT_CLASSIFICATION	6.037222887553485E-7	TEST
// line 703	WITHOUT_CLASSIFICATION	0.999999114874477	WITHOUT_CLASSIFICATION	8.851255229265473E-7	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999994680750492	WITHOUT_CLASSIFICATION	5.319249507491019E-7	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999994439788814	WITHOUT_CLASSIFICATION	5.560211185301057E-7	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999990932290677	WITHOUT_CLASSIFICATION	9.06770932271103E-7	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999994398607885	WITHOUT_CLASSIFICATION	5.601392114898637E-7	TEST
// line 872	WITHOUT_CLASSIFICATION	0.999999346768321	WITHOUT_CLASSIFICATION	6.532316790541249E-7	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999992698092581	WITHOUT_CLASSIFICATION	7.301907418004468E-7	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999993082792309	WITHOUT_CLASSIFICATION	6.917207691077531E-7	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999993652868089	WITHOUT_CLASSIFICATION	6.347131910876671E-7	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999992780979325	WITHOUT_CLASSIFICATION	7.219020674954619E-7	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999994577688295	WITHOUT_CLASSIFICATION	5.422311704735652E-7	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999993954193555	WITHOUT_CLASSIFICATION	6.045806445426811E-7	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999992349341583	WITHOUT_CLASSIFICATION	7.650658416052326E-7	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999993628476447	WITHOUT_CLASSIFICATION	6.371523552782405E-7	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999993206070568	WITHOUT_CLASSIFICATION	6.793929432965439E-7	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999994589000396	WITHOUT_CLASSIFICATION	5.410999603311294E-7	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999993473549265	WITHOUT_CLASSIFICATION	6.526450734603868E-7	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999993072154063	WITHOUT_CLASSIFICATION	6.927845937251922E-7	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999994334529198	WITHOUT_CLASSIFICATION	5.665470802161414E-7	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999993652948765	WITHOUT_CLASSIFICATION	6.347051234878086E-7	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999991107374139	WITHOUT_CLASSIFICATION	8.892625862163437E-7	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999992870732632	WITHOUT_CLASSIFICATION	7.129267367352477E-7	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999992739728928	WITHOUT_CLASSIFICATION	7.260271072589966E-7	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999992130877937	WITHOUT_CLASSIFICATION	7.869122062340672E-7	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999992521451727	WITHOUT_CLASSIFICATION	7.478548272665143E-7	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999992751687006	WITHOUT_CLASSIFICATION	7.248312994995133E-7	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999992203748674	WITHOUT_CLASSIFICATION	7.796251324925607E-7	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999995028687574	WITHOUT_CLASSIFICATION	4.971312426480913E-7	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999993157001358	WITHOUT_CLASSIFICATION	6.842998640939456E-7	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999994576244965	WITHOUT_CLASSIFICATION	5.423755035010476E-7	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.999999450051949	WITHOUT_CLASSIFICATION	5.499480509811364E-7	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999993106343301	WITHOUT_CLASSIFICATION	6.893656698359026E-7	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999994177763555	WITHOUT_CLASSIFICATION	5.822236444683961E-7	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999993604265518	WITHOUT_CLASSIFICATION	6.395734481730837E-7	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999993502438681	WITHOUT_CLASSIFICATION	6.497561318329745E-7	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999994254468076	WITHOUT_CLASSIFICATION	5.745531923343911E-7	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999994346916506	WITHOUT_CLASSIFICATION	5.653083494503869E-7	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999993698623756	WITHOUT_CLASSIFICATION	6.30137624362168E-7	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999992873292465	WITHOUT_CLASSIFICATION	7.126707535644417E-7	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999994208052302	WITHOUT_CLASSIFICATION	5.791947698581996E-7	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999993508234074	WITHOUT_CLASSIFICATION	6.491765926485614E-7	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999993828431296	WITHOUT_CLASSIFICATION	6.171568704408916E-7	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999993238632302	WITHOUT_CLASSIFICATION	6.761367697470266E-7	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999992464998944	WITHOUT_CLASSIFICATION	7.535001057394111E-7	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999996947437659	WITHOUT_CLASSIFICATION	3.052562340525614E-7	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999999927303823	WITHOUT_CLASSIFICATION	7.2696176147393E-9	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997149315263	WITHOUT_CLASSIFICATION	2.850684736776884E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997149315263	WITHOUT_CLASSIFICATION	2.850684736776884E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997149315263	WITHOUT_CLASSIFICATION	2.850684736776884E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997149315263	WITHOUT_CLASSIFICATION	2.850684736776884E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997149315263	WITHOUT_CLASSIFICATION	2.850684736776884E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997149315263	WITHOUT_CLASSIFICATION	2.850684736776884E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997149315263	WITHOUT_CLASSIFICATION	2.850684736776884E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999841335518	WITHOUT_CLASSIFICATION	1.5866448238220038E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999841335518	WITHOUT_CLASSIFICATION	1.5866448238220038E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999841335518	WITHOUT_CLASSIFICATION	1.5866448238220038E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999841335518	WITHOUT_CLASSIFICATION	1.5866448238220038E-8	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.999996966184857	WITHOUT_CLASSIFICATION	3.0338151430988022E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.999996966184857	WITHOUT_CLASSIFICATION	3.0338151430988022E-6	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999986939937883	WITHOUT_CLASSIFICATION	1.3060062116286577E-6	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999826877278	WITHOUT_CLASSIFICATION	1.731227217074158E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999826877278	WITHOUT_CLASSIFICATION	1.731227217074158E-8	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999998192689675	WITHOUT_CLASSIFICATION	1.807310323555737E-7	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999999466262094	WITHOUT_CLASSIFICATION	5.337379054271136E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999877186967	WITHOUT_CLASSIFICATION	1.2281303185368192E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999877186967	WITHOUT_CLASSIFICATION	1.2281303185368192E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999877186967	WITHOUT_CLASSIFICATION	1.2281303185368192E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999877186967	WITHOUT_CLASSIFICATION	1.2281303185368192E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999877186967	WITHOUT_CLASSIFICATION	1.2281303185368192E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999877186967	WITHOUT_CLASSIFICATION	1.2281303185368192E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999877186967	WITHOUT_CLASSIFICATION	1.2281303185368192E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999935408017	WITHOUT_CLASSIFICATION	6.459198273374206E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999808280516	WITHOUT_CLASSIFICATION	1.91719483349479E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999998594148013	WITHOUT_CLASSIFICATION	1.4058519861141725E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999998594148013	WITHOUT_CLASSIFICATION	1.4058519861141725E-7	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999879105234	WITHOUT_CLASSIFICATION	1.2089476544456176E-8	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999996148275289	WITHOUT_CLASSIFICATION	3.8517247116382397E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999996148275289	WITHOUT_CLASSIFICATION	3.8517247116382397E-7	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999876061341	WITHOUT_CLASSIFICATION	1.2393865881897885E-8	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9378332489115422	WITHOUT_CLASSIFICATION	0.06216675108845769	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999999184072887	WITHOUT_CLASSIFICATION	8.159271123480467E-8	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999999722329238	WITHOUT_CLASSIFICATION	2.7767076287750156E-8	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999995720781999	WITHOUT_CLASSIFICATION	4.279218001056573E-7	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999995480202583	WITHOUT_CLASSIFICATION	4.519797417117026E-7	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999996032314898	WITHOUT_CLASSIFICATION	3.9676851014246863E-7	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999999771421816	WITHOUT_CLASSIFICATION	2.2857818493465192E-8	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999163717550869	WITHOUT_CLASSIFICATION	8.362824491319207E-5	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999967227358947	WITHOUT_CLASSIFICATION	3.277264105318013E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9976309063386759	WITHOUT_CLASSIFICATION	0.002369093661323967	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999989628711	WITHOUT_CLASSIFICATION	1.037128984456153E-9	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999674028075	WITHOUT_CLASSIFICATION	3.2597192502608035E-8	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999917796776574	WITHOUT_CLASSIFICATION	8.220322342673643E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999997141560893	WITHOUT_CLASSIFICATION	2.858439106365907E-7	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999999856302658	WITHOUT_CLASSIFICATION	1.4369734186527311E-8	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999078782168	WITHOUT_CLASSIFICATION	9.212178315076488E-8	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999982928799396	WITHOUT_CLASSIFICATION	1.7071200603160175E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.999999471685963	WITHOUT_CLASSIFICATION	5.283140369194008E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.999999471685963	WITHOUT_CLASSIFICATION	5.283140369194008E-7	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999996651344665	WITHOUT_CLASSIFICATION	3.3486553356527673E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999956563738	WITHOUT_CLASSIFICATION	4.3436261969405795E-8	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999555808882	WITHOUT_CLASSIFICATION	4.441911191026787E-8	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999768843985058	WITHOUT_CLASSIFICATION	2.3115601494154395E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999751681687452	WITHOUT_CLASSIFICATION	2.4831831254740893E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999751681687452	WITHOUT_CLASSIFICATION	2.4831831254740893E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999751681687452	WITHOUT_CLASSIFICATION	2.4831831254740893E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999999090631597	WITHOUT_CLASSIFICATION	9.093684026468284E-8	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999992427744012	WITHOUT_CLASSIFICATION	7.572255987939173E-7	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999999928854111	WITHOUT_CLASSIFICATION	7.114588938197039E-9	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999999866575509	WITHOUT_CLASSIFICATION	1.3342449092583436E-8	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999996736852343	WITHOUT_CLASSIFICATION	3.263147656591178E-7	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999925205849	WITHOUT_CLASSIFICATION	7.479415057853643E-9	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999512449035	WITHOUT_CLASSIFICATION	4.875509656183608E-8	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999994451493307	WITHOUT_CLASSIFICATION	5.54850669308075E-7	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999997471816	WITHOUT_CLASSIFICATION	2.52818463558976E-10	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.999999800407005	WITHOUT_CLASSIFICATION	1.9959299506698364E-7	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999998404681031	WITHOUT_CLASSIFICATION	1.5953189703323154E-7	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999999792820049	WITHOUT_CLASSIFICATION	2.0717995015481356E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9972437446017952	WITHOUT_CLASSIFICATION	0.0027562553982048064	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999956909739834	WITHOUT_CLASSIFICATION	4.309026016573615E-6	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999993431967742	WITHOUT_CLASSIFICATION	6.56803225861439E-7	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9997254289395815	WITHOUT_CLASSIFICATION	2.7457106041855995E-4	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999998762801332	WITHOUT_CLASSIFICATION	1.237198667329324E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999451794355246	WITHOUT_CLASSIFICATION	5.482056447543576E-5	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999999986642266	WITHOUT_CLASSIFICATION	1.3357734131413449E-9	TEST
