// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999978060429313	WITHOUT_CLASSIFICATION	2.1939570687676115E-6	TEST
// TODO make an assert here	TEST	0.9998343562146277	WITHOUT_CLASSIFICATION	1.6564378537226712E-4	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.9863880695159634	WITHOUT_CLASSIFICATION	0.01361193048403652	TEST
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9998739859634941	WITHOUT_CLASSIFICATION	1.2601403650583224E-4	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9999019640025258	WITHOUT_CLASSIFICATION	9.803599747418354E-5	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999920251154832	WITHOUT_CLASSIFICATION	7.974884516715683E-6	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999958404716628	WITHOUT_CLASSIFICATION	4.159528337158166E-6	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999924779997464	WITHOUT_CLASSIFICATION	7.522000253566168E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998930849325077	WITHOUT_CLASSIFICATION	1.0691506749228315E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998930849325077	WITHOUT_CLASSIFICATION	1.0691506749228315E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998354508706971	WITHOUT_CLASSIFICATION	1.6454912930286033E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998354508706971	WITHOUT_CLASSIFICATION	1.6454912930286033E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.99991083892322	WITHOUT_CLASSIFICATION	8.916107678001301E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999923057182745	WITHOUT_CLASSIFICATION	7.694281725580852E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999924991299082	WITHOUT_CLASSIFICATION	7.5008700917706565E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.999992705682948	WITHOUT_CLASSIFICATION	7.294317052045717E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999388009421085	WITHOUT_CLASSIFICATION	6.119905789144548E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999388009421085	WITHOUT_CLASSIFICATION	6.119905789144548E-5	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999923509511623	WITHOUT_CLASSIFICATION	7.6490488377237E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999285932557567	WITHOUT_CLASSIFICATION	7.140674424329366E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999285932557567	WITHOUT_CLASSIFICATION	7.140674424329366E-5	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.999876417252945	WITHOUT_CLASSIFICATION	1.2358274705492862E-4	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999058862976047	WITHOUT_CLASSIFICATION	9.411370239526307E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998802715901821	WITHOUT_CLASSIFICATION	1.1972840981793713E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998802715901821	WITHOUT_CLASSIFICATION	1.1972840981793713E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998802715901821	WITHOUT_CLASSIFICATION	1.1972840981793713E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998802715901821	WITHOUT_CLASSIFICATION	1.1972840981793713E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998802715901821	WITHOUT_CLASSIFICATION	1.1972840981793713E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998802715901821	WITHOUT_CLASSIFICATION	1.1972840981793713E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998802715901821	WITHOUT_CLASSIFICATION	1.1972840981793713E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998384112444517	WITHOUT_CLASSIFICATION	1.6158875554816047E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998384112444517	WITHOUT_CLASSIFICATION	1.6158875554816047E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998384112444517	WITHOUT_CLASSIFICATION	1.6158875554816047E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998384112444517	WITHOUT_CLASSIFICATION	1.6158875554816047E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998384112444517	WITHOUT_CLASSIFICATION	1.6158875554816047E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998384112444517	WITHOUT_CLASSIFICATION	1.6158875554816047E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998384112444517	WITHOUT_CLASSIFICATION	1.6158875554816047E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998978401800779	WITHOUT_CLASSIFICATION	1.0215981992204482E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998978401800779	WITHOUT_CLASSIFICATION	1.0215981992204482E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998978401800779	WITHOUT_CLASSIFICATION	1.0215981992204482E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998978401800779	WITHOUT_CLASSIFICATION	1.0215981992204482E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998978401800779	WITHOUT_CLASSIFICATION	1.0215981992204482E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998978401800779	WITHOUT_CLASSIFICATION	1.0215981992204482E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999399020751006	WITHOUT_CLASSIFICATION	6.009792489950032E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999399020751006	WITHOUT_CLASSIFICATION	6.009792489950032E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999399020751006	WITHOUT_CLASSIFICATION	6.009792489950032E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999399020751006	WITHOUT_CLASSIFICATION	6.009792489950032E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999399020751006	WITHOUT_CLASSIFICATION	6.009792489950032E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999399020751006	WITHOUT_CLASSIFICATION	6.009792489950032E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999298780391573	WITHOUT_CLASSIFICATION	7.012196084266265E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999298780391573	WITHOUT_CLASSIFICATION	7.012196084266265E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999298780391573	WITHOUT_CLASSIFICATION	7.012196084266265E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999298780391573	WITHOUT_CLASSIFICATION	7.012196084266265E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999298780391573	WITHOUT_CLASSIFICATION	7.012196084266265E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999298780391573	WITHOUT_CLASSIFICATION	7.012196084266265E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999298780391573	WITHOUT_CLASSIFICATION	7.012196084266265E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999426410159451	WITHOUT_CLASSIFICATION	5.735898405487078E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999426410159451	WITHOUT_CLASSIFICATION	5.735898405487078E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999426410159451	WITHOUT_CLASSIFICATION	5.735898405487078E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999426410159451	WITHOUT_CLASSIFICATION	5.735898405487078E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9998821546528247	WITHOUT_CLASSIFICATION	1.1784534717530702E-4	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9998821546528247	WITHOUT_CLASSIFICATION	1.1784534717530702E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999763484049884	WITHOUT_CLASSIFICATION	2.3651595011670425E-5	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999986695791414	WITHOUT_CLASSIFICATION	1.3304208585995192E-6	TEST
// name	WITHOUT_CLASSIFICATION	0.9999838886457214	WITHOUT_CLASSIFICATION	1.611135427851434E-5	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999968186475426	WITHOUT_CLASSIFICATION	3.1813524573963906E-6	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999904212498265	WITHOUT_CLASSIFICATION	9.578750173502489E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999956123257104	WITHOUT_CLASSIFICATION	4.3876742896190995E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999956123257104	WITHOUT_CLASSIFICATION	4.3876742896190995E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999956123257104	WITHOUT_CLASSIFICATION	4.3876742896190995E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999956123257104	WITHOUT_CLASSIFICATION	4.3876742896190995E-6	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999891545987473	WITHOUT_CLASSIFICATION	1.084540125266046E-5	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999990164414709	WITHOUT_CLASSIFICATION	9.835585290156348E-7	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999933448885218	WITHOUT_CLASSIFICATION	6.655111478233787E-6	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999963748315484	WITHOUT_CLASSIFICATION	3.625168451706822E-6	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.999995662425863	WITHOUT_CLASSIFICATION	4.337574137008303E-6	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999359062914	WITHOUT_CLASSIFICATION	6.409370857832284E-8	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999938658390465	WITHOUT_CLASSIFICATION	6.1341609534922945E-6	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999995325007923	WITHOUT_CLASSIFICATION	4.674992075746153E-7	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999996618199547	WITHOUT_CLASSIFICATION	3.381800453688381E-7	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999912810121523	WITHOUT_CLASSIFICATION	8.718987847749088E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999994428228945	WITHOUT_CLASSIFICATION	5.571771054889877E-7	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999983382708236	WITHOUT_CLASSIFICATION	1.6617291764397059E-6	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999739850421615	WITHOUT_CLASSIFICATION	2.6014957838496752E-5	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.999994414887498	WITHOUT_CLASSIFICATION	5.585112502104277E-6	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999997226388709	WITHOUT_CLASSIFICATION	2.7736112909012343E-6	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999981302795394	WITHOUT_CLASSIFICATION	1.8697204605784206E-6	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999987032340176	WITHOUT_CLASSIFICATION	1.2967659824205231E-6	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999956123257104	WITHOUT_CLASSIFICATION	4.3876742896190995E-6	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985483513412	WITHOUT_CLASSIFICATION	1.451648658882574E-6	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999994206558657	WITHOUT_CLASSIFICATION	5.793441342249545E-7	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999997127417631	WITHOUT_CLASSIFICATION	2.8725823689451005E-6	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999832173266714	WITHOUT_CLASSIFICATION	1.6782673328612633E-5	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999996503713664	WITHOUT_CLASSIFICATION	3.496286335780726E-7	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999927477527574	WITHOUT_CLASSIFICATION	7.252247242706389E-6	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999982485528862	WITHOUT_CLASSIFICATION	1.751447113774917E-6	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999987839156799	WITHOUT_CLASSIFICATION	1.2160843200811409E-6	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999964800217244	WITHOUT_CLASSIFICATION	3.519978275665318E-6	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999987574104446	WITHOUT_CLASSIFICATION	1.242589555316045E-6	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999719803052237	WITHOUT_CLASSIFICATION	2.8019694776253826E-5	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999837699422507	WITHOUT_CLASSIFICATION	1.62300577492364E-5	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.999999844422624	WITHOUT_CLASSIFICATION	1.5557737602668085E-7	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999948998877477	WITHOUT_CLASSIFICATION	5.100112252352475E-6	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999788861849599	WITHOUT_CLASSIFICATION	2.111381504012438E-5	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999467648591424	WITHOUT_CLASSIFICATION	5.323514085767093E-5	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999951261535832	WITHOUT_CLASSIFICATION	4.873846416769642E-6	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999994903917783	WITHOUT_CLASSIFICATION	5.096082216048182E-7	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9998514515328388	WITHOUT_CLASSIFICATION	1.485484671611977E-4	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999992433952997	WITHOUT_CLASSIFICATION	7.566047004021869E-7	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999972625172692	WITHOUT_CLASSIFICATION	2.7374827308626746E-6	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999701726991154	WITHOUT_CLASSIFICATION	2.982730088463416E-5	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999980045792041	WITHOUT_CLASSIFICATION	1.995420795940226E-6	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9998387605811883	WITHOUT_CLASSIFICATION	1.6123941881186063E-4	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999934179100066	WITHOUT_CLASSIFICATION	6.582089993459057E-6	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.999966967803499	WITHOUT_CLASSIFICATION	3.303219650089319E-5	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999971895884168	WITHOUT_CLASSIFICATION	2.810411583263203E-6	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999990016036149	WITHOUT_CLASSIFICATION	9.983963850637142E-7	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999973766936081	WITHOUT_CLASSIFICATION	2.6233063919325514E-6	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999980829992031	WITHOUT_CLASSIFICATION	1.917000796893831E-6	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999939653361597	WITHOUT_CLASSIFICATION	6.034663840332413E-6	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999972430520774	WITHOUT_CLASSIFICATION	2.7569479226778307E-6	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999969300365701	WITHOUT_CLASSIFICATION	3.069963429952493E-6	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999994771136648	WITHOUT_CLASSIFICATION	5.22886335248026E-7	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.999999939936844	WITHOUT_CLASSIFICATION	6.006315595383551E-8	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999970892890894	WITHOUT_CLASSIFICATION	2.9107109107276677E-6	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999992598445782	WITHOUT_CLASSIFICATION	7.401554217476693E-7	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.999999382297017	WITHOUT_CLASSIFICATION	6.177029829657466E-7	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999942093062781	WITHOUT_CLASSIFICATION	5.790693721870618E-6	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999738590687544	WITHOUT_CLASSIFICATION	2.6140931245664668E-5	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999993012642149	WITHOUT_CLASSIFICATION	6.987357850731775E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999939460276753	WITHOUT_CLASSIFICATION	6.053972324662677E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999978558431936	WITHOUT_CLASSIFICATION	2.1441568065583014E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999937127543583	WITHOUT_CLASSIFICATION	6.287245641652496E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999937127543583	WITHOUT_CLASSIFICATION	6.287245641652496E-6	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999871700088445	WITHOUT_CLASSIFICATION	1.2829991155511864E-5	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999996130872516	WITHOUT_CLASSIFICATION	3.869127484256816E-7	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9998268055901052	WITHOUT_CLASSIFICATION	1.7319440989478857E-4	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999992941145625	WITHOUT_CLASSIFICATION	7.058854376063117E-7	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999649499639263	WITHOUT_CLASSIFICATION	3.505003607379976E-5	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999822356767959	WITHOUT_CLASSIFICATION	1.776432320415522E-5	TEST
// ???	WITHOUT_CLASSIFICATION	0.999959839489705	WITHOUT_CLASSIFICATION	4.016051029497579E-5	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999221711210631	WITHOUT_CLASSIFICATION	7.782887893689619E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999939460276753	WITHOUT_CLASSIFICATION	6.053972324662677E-6	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999989153437133	WITHOUT_CLASSIFICATION	1.0846562866929363E-6	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999913031628948	WITHOUT_CLASSIFICATION	8.696837105245413E-6	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999991191379428	WITHOUT_CLASSIFICATION	8.808620570409291E-7	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999987824773408	WITHOUT_CLASSIFICATION	1.217522659283095E-6	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999960593456624	WITHOUT_CLASSIFICATION	3.940654337511996E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999997921406839	WITHOUT_CLASSIFICATION	2.078593161066359E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999997921406839	WITHOUT_CLASSIFICATION	2.078593161066359E-6	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999997921406839	WITHOUT_CLASSIFICATION	2.078593161066359E-6	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999996497938992	WITHOUT_CLASSIFICATION	3.502061007955068E-7	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999900189605239	WITHOUT_CLASSIFICATION	9.981039476102833E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999988136370284	WITHOUT_CLASSIFICATION	1.1863629715772623E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999292465190086	WITHOUT_CLASSIFICATION	7.075348099137769E-5	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999996035659148	WITHOUT_CLASSIFICATION	3.964340852111684E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999978965502594	WITHOUT_CLASSIFICATION	2.103449740608559E-6	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999987587929638	WITHOUT_CLASSIFICATION	1.2412070361622415E-6	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999977678312917	WITHOUT_CLASSIFICATION	2.232168708347025E-6	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999897789353797	WITHOUT_CLASSIFICATION	1.0221064620362986E-5	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999897789353797	WITHOUT_CLASSIFICATION	1.0221064620362986E-5	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.999990567371963	WITHOUT_CLASSIFICATION	9.432628037034962E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999926581115851	WITHOUT_CLASSIFICATION	7.341888414909201E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999946178571422	WITHOUT_CLASSIFICATION	5.382142857723198E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999946178571422	WITHOUT_CLASSIFICATION	5.382142857723198E-6	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999927392728925	WITHOUT_CLASSIFICATION	7.260727107576553E-6	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999997867364091	WITHOUT_CLASSIFICATION	2.1326359085535488E-7	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999902783229941	WITHOUT_CLASSIFICATION	9.721677005883936E-6	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999985158768318	WITHOUT_CLASSIFICATION	1.4841231683162864E-6	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999983781829208	WITHOUT_CLASSIFICATION	1.6218170791915583E-6	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.999994909735595	WITHOUT_CLASSIFICATION	5.090264404904639E-6	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999832590359568	WITHOUT_CLASSIFICATION	1.6740964043200658E-5	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999823137502799	WITHOUT_CLASSIFICATION	1.768624972007524E-5	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999833488258145	WITHOUT_CLASSIFICATION	1.6651174185471812E-5	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999992419918515	WITHOUT_CLASSIFICATION	7.58008148502655E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999939460276753	WITHOUT_CLASSIFICATION	6.053972324662677E-6	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999810977354143	WITHOUT_CLASSIFICATION	1.890226458566435E-5	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999978322291923	WITHOUT_CLASSIFICATION	2.1677708077167295E-6	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999935132932398	WITHOUT_CLASSIFICATION	6.4867067602422565E-6	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999972138532486	WITHOUT_CLASSIFICATION	2.7861467514847597E-6	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999605541801739	WITHOUT_CLASSIFICATION	3.9445819826025507E-5	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999477615913864	WITHOUT_CLASSIFICATION	5.22384086135951E-5	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999962399539849	WITHOUT_CLASSIFICATION	3.760046015012714E-6	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999898170217404	WITHOUT_CLASSIFICATION	1.0182978259684932E-5	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999966983794015	WITHOUT_CLASSIFICATION	3.3016205984947403E-6	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999945571964521	WITHOUT_CLASSIFICATION	5.442803547944565E-6	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999990733897398	WITHOUT_CLASSIFICATION	9.266102601569485E-7	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999996728367335	WITHOUT_CLASSIFICATION	3.2716326641609436E-7	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999996774686595	WITHOUT_CLASSIFICATION	3.2253134052857096E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999981976602496	WITHOUT_CLASSIFICATION	1.8023397503288867E-6	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9995556270530281	WITHOUT_CLASSIFICATION	4.4437294697179504E-4	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999991501913219	WITHOUT_CLASSIFICATION	8.498086780709828E-7	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999937400240962	WITHOUT_CLASSIFICATION	6.259975903808657E-6	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999942229944112	WITHOUT_CLASSIFICATION	5.777005588702433E-6	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999999214458712	WITHOUT_CLASSIFICATION	7.855412875407102E-8	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999973081962952	WITHOUT_CLASSIFICATION	2.6918037047377328E-6	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999998614015696	WITHOUT_CLASSIFICATION	1.385984304525464E-7	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999723010591	WITHOUT_CLASSIFICATION	2.7698940967282614E-8	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999650978366	WITHOUT_CLASSIFICATION	3.490216337589506E-8	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999918252916239	WITHOUT_CLASSIFICATION	8.174708376127718E-6	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999993906003573	WITHOUT_CLASSIFICATION	6.093996427898821E-7	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999959417437903	WITHOUT_CLASSIFICATION	4.058256209686644E-6	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999808704606608	WITHOUT_CLASSIFICATION	1.9129539339212623E-5	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999994412245191	WITHOUT_CLASSIFICATION	5.587754808884898E-7	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999997350057683	WITHOUT_CLASSIFICATION	2.649942316527113E-7	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999966499373281	WITHOUT_CLASSIFICATION	3.3500626720306944E-6	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999991497183365	WITHOUT_CLASSIFICATION	8.502816635725891E-7	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999995013903672	WITHOUT_CLASSIFICATION	4.986096328289044E-7	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999877913055819	WITHOUT_CLASSIFICATION	1.22086944181406E-5	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999958412781759	WITHOUT_CLASSIFICATION	4.158721824231262E-6	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999964492140995	WITHOUT_CLASSIFICATION	3.5507859005268626E-6	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999887712902789	WITHOUT_CLASSIFICATION	1.1228709721123893E-5	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999952482805241	WITHOUT_CLASSIFICATION	4.75171947584369E-6	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999309344486587	WITHOUT_CLASSIFICATION	6.906555134141885E-5	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999977159668306	WITHOUT_CLASSIFICATION	2.2840331694015055E-6	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999994187413026	WITHOUT_CLASSIFICATION	5.812586973491201E-7	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999927398070835	WITHOUT_CLASSIFICATION	7.260192916583501E-6	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999980798670287	WITHOUT_CLASSIFICATION	1.92013297124615E-6	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999955296998135	WITHOUT_CLASSIFICATION	4.470300186523154E-6	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999982737512512	WITHOUT_CLASSIFICATION	1.7262487488676907E-6	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999922728827711	WITHOUT_CLASSIFICATION	7.727117228905764E-6	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999886587791492	WITHOUT_CLASSIFICATION	1.1341220850706741E-5	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999926269310215	WITHOUT_CLASSIFICATION	7.37306897850481E-6	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999997503638087	WITHOUT_CLASSIFICATION	2.4963619124966927E-7	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999997245108327	WITHOUT_CLASSIFICATION	2.7548916730023187E-7	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999984531368997	WITHOUT_CLASSIFICATION	1.546863100246135E-6	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999982043506904	WITHOUT_CLASSIFICATION	1.7956493095545267E-6	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999970916437718	WITHOUT_CLASSIFICATION	2.9083562282352575E-6	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999994410474086	WITHOUT_CLASSIFICATION	5.589525914028319E-7	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999994832969498	WITHOUT_CLASSIFICATION	5.167030501867428E-7	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999970230509504	WITHOUT_CLASSIFICATION	2.976949049661416E-6	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999964717740407	WITHOUT_CLASSIFICATION	3.528225959348462E-6	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.999999081531547	WITHOUT_CLASSIFICATION	9.184684530447798E-7	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999859093633379	WITHOUT_CLASSIFICATION	1.4090636661993049E-5	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999989531714224	WITHOUT_CLASSIFICATION	1.0468285776050918E-6	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999992216565494	WITHOUT_CLASSIFICATION	7.783434506607702E-7	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999659583090224	WITHOUT_CLASSIFICATION	3.404169097769028E-5	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999659583090224	WITHOUT_CLASSIFICATION	3.404169097769028E-5	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999857045862208	WITHOUT_CLASSIFICATION	1.4295413779162351E-5	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999857045862208	WITHOUT_CLASSIFICATION	1.4295413779162351E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999327359162218	WITHOUT_CLASSIFICATION	6.726408377815551E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999327359162218	WITHOUT_CLASSIFICATION	6.726408377815551E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999699424721344	WITHOUT_CLASSIFICATION	3.0057527865601372E-5	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999699424721344	WITHOUT_CLASSIFICATION	3.0057527865601372E-5	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999966499202588	WITHOUT_CLASSIFICATION	3.3500797412140283E-6	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999956451530579	WITHOUT_CLASSIFICATION	4.354846942006889E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999901434640377	WITHOUT_CLASSIFICATION	9.856535962315919E-6	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999862851323904	WITHOUT_CLASSIFICATION	1.3714867609722735E-5	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999950055081261	WITHOUT_CLASSIFICATION	4.994491873803284E-6	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999904431868104	WITHOUT_CLASSIFICATION	9.55681318968983E-6	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999325096673524	WITHOUT_CLASSIFICATION	6.749033264761507E-5	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999975962808564	WITHOUT_CLASSIFICATION	2.403719143685528E-6	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999939644673628	WITHOUT_CLASSIFICATION	6.035532637319738E-6	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999918190826509	WITHOUT_CLASSIFICATION	8.180917349138034E-6	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999917394916216	WITHOUT_CLASSIFICATION	8.26050837845511E-6	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999991462193412	WITHOUT_CLASSIFICATION	8.537806589750354E-7	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999849159281141	WITHOUT_CLASSIFICATION	1.5084071885923233E-5	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999850006763458	WITHOUT_CLASSIFICATION	1.4999323654253319E-5	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999923021496954	WITHOUT_CLASSIFICATION	7.697850304686904E-6	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999815780525865	WITHOUT_CLASSIFICATION	1.842194741343536E-5	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999995842904077	WITHOUT_CLASSIFICATION	4.1570959239584746E-7	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999966026133148	WITHOUT_CLASSIFICATION	3.397386685288163E-6	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999948497000588	WITHOUT_CLASSIFICATION	5.150299941137381E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999942852549867	WITHOUT_CLASSIFICATION	5.714745013205433E-6	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999958341865226	WITHOUT_CLASSIFICATION	4.1658134773683285E-6	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999957753923785	WITHOUT_CLASSIFICATION	4.2246076216073436E-6	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999971959231281	WITHOUT_CLASSIFICATION	2.804076871967589E-6	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999960421674626	WITHOUT_CLASSIFICATION	3.957832537424754E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999934546402595	WITHOUT_CLASSIFICATION	6.5453597405883975E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999930289809319	WITHOUT_CLASSIFICATION	6.971019068015708E-6	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999935148361617	WITHOUT_CLASSIFICATION	6.485163838294926E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999964073069819	WITHOUT_CLASSIFICATION	3.592693018120362E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999964073069819	WITHOUT_CLASSIFICATION	3.592693018120362E-6	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999950042705705	WITHOUT_CLASSIFICATION	4.995729429519645E-6	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999795011849284	WITHOUT_CLASSIFICATION	2.0498815071624298E-5	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999880674018242	WITHOUT_CLASSIFICATION	1.1932598175860321E-5	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999986206445595	WITHOUT_CLASSIFICATION	1.3793554405811199E-6	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.999965907355137	WITHOUT_CLASSIFICATION	3.4092644862874774E-5	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999698215643824	WITHOUT_CLASSIFICATION	3.0178435617503886E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999819771906533	WITHOUT_CLASSIFICATION	1.8022809346738867E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999819771906533	WITHOUT_CLASSIFICATION	1.8022809346738867E-5	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999946002504748	WITHOUT_CLASSIFICATION	5.399749525197171E-6	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9992677532941463	WITHOUT_CLASSIFICATION	7.322467058536256E-4	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999877444076513	WITHOUT_CLASSIFICATION	1.2255592348780512E-5	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999877444076513	WITHOUT_CLASSIFICATION	1.2255592348780512E-5	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999957445512899	WITHOUT_CLASSIFICATION	4.255448710102411E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999678371563553	WITHOUT_CLASSIFICATION	3.216284364472051E-5	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999678371563553	WITHOUT_CLASSIFICATION	3.216284364472051E-5	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999919699439249	WITHOUT_CLASSIFICATION	8.030056075136365E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999919699439249	WITHOUT_CLASSIFICATION	8.030056075136365E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999527203159128	WITHOUT_CLASSIFICATION	4.727968408730348E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999527203159128	WITHOUT_CLASSIFICATION	4.727968408730348E-5	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9999613840579976	WITHOUT_CLASSIFICATION	3.861594200241483E-5	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999962936793121	WITHOUT_CLASSIFICATION	3.706320688027556E-6	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999853271381208	WITHOUT_CLASSIFICATION	1.467286187925826E-5	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999984440486774	WITHOUT_CLASSIFICATION	1.5559513225708208E-6	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999339526741	WITHOUT_CLASSIFICATION	6.604732590012632E-8	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999997468925519	WITHOUT_CLASSIFICATION	2.531074481045022E-7	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999930678484875	WITHOUT_CLASSIFICATION	6.932151512507998E-6	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999995037772206	WITHOUT_CLASSIFICATION	4.962227794380512E-7	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999930678484875	WITHOUT_CLASSIFICATION	6.932151512507998E-6	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9997975106622516	WITHOUT_CLASSIFICATION	2.024893377482503E-4	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999988198737197	WITHOUT_CLASSIFICATION	1.180126280245265E-6	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999954227485158	WITHOUT_CLASSIFICATION	4.577251484120637E-6	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999961523699711	WITHOUT_CLASSIFICATION	3.847630028906624E-6	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999989756293348	WITHOUT_CLASSIFICATION	1.024370665142089E-6	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999171652209226	WITHOUT_CLASSIFICATION	8.283477907748343E-5	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999893220806455	WITHOUT_CLASSIFICATION	1.0677919354406302E-5	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999937574457454	WITHOUT_CLASSIFICATION	6.242554254618823E-6	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999998717993394	WITHOUT_CLASSIFICATION	1.282006606952361E-7	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999994241186689	WITHOUT_CLASSIFICATION	5.758813310441059E-7	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.99999811179246	WITHOUT_CLASSIFICATION	1.8882075400493632E-6	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999425417447362	WITHOUT_CLASSIFICATION	5.7458255263926605E-5	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999943321972012	WITHOUT_CLASSIFICATION	5.667802798786022E-6	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999956904207367	WITHOUT_CLASSIFICATION	4.30957926335645E-6	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999981552351442	WITHOUT_CLASSIFICATION	1.844764855650112E-6	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.999999691584919	WITHOUT_CLASSIFICATION	3.0841508099443166E-7	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.999997045061237	WITHOUT_CLASSIFICATION	2.954938762899733E-6	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999974756413214	WITHOUT_CLASSIFICATION	2.5243586786805738E-6	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999871331453863	WITHOUT_CLASSIFICATION	1.2866854613708467E-5	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.999928231810816	WITHOUT_CLASSIFICATION	7.176818918400754E-5	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999790907774612	WITHOUT_CLASSIFICATION	2.0909222538782438E-5	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999996287387766	WITHOUT_CLASSIFICATION	3.7126122339480284E-7	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.999999080555392	WITHOUT_CLASSIFICATION	9.194446079987479E-7	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999988323134773	WITHOUT_CLASSIFICATION	1.1676865226832128E-6	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999970849854162	WITHOUT_CLASSIFICATION	2.915014583865835E-6	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999992378764565	WITHOUT_CLASSIFICATION	7.621235434909476E-7	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999983168094534	WITHOUT_CLASSIFICATION	1.6831905465588442E-6	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999948960683163	WITHOUT_CLASSIFICATION	5.103931683729977E-6	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.999999495303914	WITHOUT_CLASSIFICATION	5.046960859124102E-7	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999988876399458	WITHOUT_CLASSIFICATION	1.1123600541953818E-6	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.999998506415598	WITHOUT_CLASSIFICATION	1.4935844019503829E-6	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999249504868	WITHOUT_CLASSIFICATION	7.50495130829135E-8	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999105980744	WITHOUT_CLASSIFICATION	8.940192566422501E-8	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999986364979334	WITHOUT_CLASSIFICATION	1.3635020665272761E-6	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.999998970447231	WITHOUT_CLASSIFICATION	1.0295527691313934E-6	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999990570856341	WITHOUT_CLASSIFICATION	9.429143659895835E-7	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999990887071544	WITHOUT_CLASSIFICATION	9.112928456654598E-7	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999995083117337	WITHOUT_CLASSIFICATION	4.916882662670681E-7	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999999004171309	WITHOUT_CLASSIFICATION	9.958286905642067E-8	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999992945362693	WITHOUT_CLASSIFICATION	7.054637306198402E-7	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999998304202897	WITHOUT_CLASSIFICATION	1.6957971041662392E-7	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999985559923288	WITHOUT_CLASSIFICATION	1.4440076712338235E-6	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999992608299574	WITHOUT_CLASSIFICATION	7.391700425548153E-7	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999993972994148	WITHOUT_CLASSIFICATION	6.027005852218213E-7	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999997489388145	WITHOUT_CLASSIFICATION	2.510611855557583E-7	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999986284851058	WITHOUT_CLASSIFICATION	1.3715148941634119E-6	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999973002913016	WITHOUT_CLASSIFICATION	2.699708698430456E-6	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999998644582959	WITHOUT_CLASSIFICATION	1.3554170400923313E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999973402191402	WITHOUT_CLASSIFICATION	2.659780859876324E-6	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999893114469824	WITHOUT_CLASSIFICATION	1.0688553017564459E-5	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999971457203627	WITHOUT_CLASSIFICATION	2.854279637411605E-6	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999988400817603	WITHOUT_CLASSIFICATION	1.1599182397167822E-6	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999600860045909	WITHOUT_CLASSIFICATION	3.99139954092336E-5	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999977461536544	WITHOUT_CLASSIFICATION	2.2538463455868877E-6	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999980719349875	WITHOUT_CLASSIFICATION	1.9280650126294856E-6	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999980719349875	WITHOUT_CLASSIFICATION	1.9280650126294856E-6	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999945070587508	WITHOUT_CLASSIFICATION	5.492941249250039E-6	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999617256339879	WITHOUT_CLASSIFICATION	3.827436601209026E-5	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999993527803972	WITHOUT_CLASSIFICATION	6.472196028360264E-7	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999981671048876	WITHOUT_CLASSIFICATION	1.8328951124295252E-6	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.99999946797102	WITHOUT_CLASSIFICATION	5.320289799319966E-7	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999955005130516	WITHOUT_CLASSIFICATION	4.499486948282187E-6	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999673522884925	WITHOUT_CLASSIFICATION	3.264771150735042E-5	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999997699667834	WITHOUT_CLASSIFICATION	2.3003321671003725E-7	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999972220315859	WITHOUT_CLASSIFICATION	2.777968414142206E-6	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999991646731223	WITHOUT_CLASSIFICATION	8.353268777051338E-7	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999996513776702	WITHOUT_CLASSIFICATION	3.4862232967569765E-7	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999996513776702	WITHOUT_CLASSIFICATION	3.4862232967569765E-7	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999998010224705	WITHOUT_CLASSIFICATION	1.989775293936003E-7	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999999102314271	WITHOUT_CLASSIFICATION	8.97685728657624E-8	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999985811884464	WITHOUT_CLASSIFICATION	1.4188115535907557E-6	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999957786512917	WITHOUT_CLASSIFICATION	4.221348708205805E-6	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999906795747663	WITHOUT_CLASSIFICATION	9.320425233719814E-6	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999997198639856	WITHOUT_CLASSIFICATION	2.801360143606899E-7	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999889322461422	WITHOUT_CLASSIFICATION	1.1067753857914999E-5	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999925722839732	WITHOUT_CLASSIFICATION	7.427716026833805E-6	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999998278463872	WITHOUT_CLASSIFICATION	1.721536128934758E-7	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999958742595835	WITHOUT_CLASSIFICATION	4.12574041652956E-6	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999956661037911	WITHOUT_CLASSIFICATION	4.333896208911284E-6	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999966131007971	WITHOUT_CLASSIFICATION	3.386899202881708E-6	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999995961316893	WITHOUT_CLASSIFICATION	4.038683106766374E-7	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999995961316893	WITHOUT_CLASSIFICATION	4.038683106766374E-7	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999990355633653	WITHOUT_CLASSIFICATION	9.644366346235305E-7	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.999990149500418	WITHOUT_CLASSIFICATION	9.850499582035665E-6	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999963525837349	WITHOUT_CLASSIFICATION	3.647416265272615E-6	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.999999414191908	WITHOUT_CLASSIFICATION	5.858080920542584E-7	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999986140123373	WITHOUT_CLASSIFICATION	1.3859876628150923E-6	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999909596248455	WITHOUT_CLASSIFICATION	9.040375154432505E-6	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999811018253271	WITHOUT_CLASSIFICATION	1.889817467295634E-5	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999951848932043	WITHOUT_CLASSIFICATION	4.815106795735007E-6	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999802924100969	WITHOUT_CLASSIFICATION	1.970758990307779E-5	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.999999391863859	WITHOUT_CLASSIFICATION	6.081361409193162E-7	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999985811884464	WITHOUT_CLASSIFICATION	1.4188115535907557E-6	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999936642868379	WITHOUT_CLASSIFICATION	6.335713162179322E-6	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999911160842904	WITHOUT_CLASSIFICATION	8.883915709615239E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999457266806646	WITHOUT_CLASSIFICATION	5.427331933531876E-5	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999996139508844	WITHOUT_CLASSIFICATION	3.860491156685382E-7	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.999999350692745	WITHOUT_CLASSIFICATION	6.493072550245654E-7	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999414889957	WITHOUT_CLASSIFICATION	5.851100431819211E-8	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999837371372696	WITHOUT_CLASSIFICATION	1.626286273035946E-5	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999990448457932	WITHOUT_CLASSIFICATION	9.55154206808877E-7	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999923950015056	WITHOUT_CLASSIFICATION	7.604998494339971E-6	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999989966392195	WITHOUT_CLASSIFICATION	1.0033607804275738E-6	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999975931351879	WITHOUT_CLASSIFICATION	2.406864812095428E-6	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999081915940544	WITHOUT_CLASSIFICATION	9.18084059456825E-5	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999818260359506	WITHOUT_CLASSIFICATION	1.8173964049368672E-5	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999984161027902	WITHOUT_CLASSIFICATION	1.5838972097291051E-6	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999885656566807	WITHOUT_CLASSIFICATION	1.1434343319344214E-5	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999993554847806	WITHOUT_CLASSIFICATION	6.44515219307982E-7	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999893921887816	WITHOUT_CLASSIFICATION	1.060781121839665E-5	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999985316372054	WITHOUT_CLASSIFICATION	1.4683627946463979E-6	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999890130066996	WITHOUT_CLASSIFICATION	1.0986993300285757E-5	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999925423077076	WITHOUT_CLASSIFICATION	7.457692292366989E-6	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999533174689	WITHOUT_CLASSIFICATION	4.668253095261279E-8	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999993453969414	WITHOUT_CLASSIFICATION	6.546030585827415E-7	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999984190985574	WITHOUT_CLASSIFICATION	1.5809014426391498E-6	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9995147897729345	WITHOUT_CLASSIFICATION	4.8521022706543847E-4	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999907610514087	WITHOUT_CLASSIFICATION	9.238948591294517E-6	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.999997055164392	WITHOUT_CLASSIFICATION	2.9448356080242804E-6	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999636751684033	WITHOUT_CLASSIFICATION	3.632483159667002E-5	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999801818543863	WITHOUT_CLASSIFICATION	1.9818145613661915E-5	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.999988382630205	WITHOUT_CLASSIFICATION	1.1617369795087197E-5	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999998744327414	WITHOUT_CLASSIFICATION	1.2556725855723946E-7	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.999927061693181	WITHOUT_CLASSIFICATION	7.293830681896925E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.999927061693181	WITHOUT_CLASSIFICATION	7.293830681896925E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.999998354515372	WITHOUT_CLASSIFICATION	1.6454846279621022E-6	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999982852150274	WITHOUT_CLASSIFICATION	1.7147849724994388E-6	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999996164111918	WITHOUT_CLASSIFICATION	3.8358880814473763E-7	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999997365386062	WITHOUT_CLASSIFICATION	2.634613937494164E-7	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.999998016473182	WITHOUT_CLASSIFICATION	1.9835268179731226E-6	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999955280653425	WITHOUT_CLASSIFICATION	4.471934657478749E-6	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999939460276753	WITHOUT_CLASSIFICATION	6.053972324662677E-6	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999981269002146	WITHOUT_CLASSIFICATION	1.8730997853207454E-6	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999674343407814	WITHOUT_CLASSIFICATION	3.2565659218596E-5	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999991981785447	WITHOUT_CLASSIFICATION	8.018214552737405E-7	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999950270912413	WITHOUT_CLASSIFICATION	4.972908758643083E-6	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999900516945381	WITHOUT_CLASSIFICATION	9.948305461867862E-6	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9987831305195457	WITHOUT_CLASSIFICATION	0.001216869480454312	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999994187413026	WITHOUT_CLASSIFICATION	5.812586973491201E-7	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.999999628810034	WITHOUT_CLASSIFICATION	3.7118996603134907E-7	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9998870866950941	WITHOUT_CLASSIFICATION	1.1291330490600007E-4	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999588673385	WITHOUT_CLASSIFICATION	4.1132661384779867E-8	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999985624719568	WITHOUT_CLASSIFICATION	1.437528043112879E-6	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999979140704784	WITHOUT_CLASSIFICATION	2.0859295215198627E-6	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999498160018016	WITHOUT_CLASSIFICATION	5.018399819842155E-5	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999899668583483	WITHOUT_CLASSIFICATION	1.0033141651773958E-5	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999899668583483	WITHOUT_CLASSIFICATION	1.0033141651773958E-5	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999958772154401	WITHOUT_CLASSIFICATION	4.122784559844387E-6	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999784803108971	WITHOUT_CLASSIFICATION	2.1519689102902712E-5	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999994465323945	WITHOUT_CLASSIFICATION	5.534676055563735E-7	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999864970779331	WITHOUT_CLASSIFICATION	1.3502922066975128E-5	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999948522892624	WITHOUT_CLASSIFICATION	5.147710737638953E-6	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999998139574858	WITHOUT_CLASSIFICATION	1.860425142025735E-7	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999998897989707	WITHOUT_CLASSIFICATION	1.1020102920295287E-7	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999858954148078	WITHOUT_CLASSIFICATION	1.4104585192291874E-5	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999977525372976	WITHOUT_CLASSIFICATION	2.247462702484757E-6	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999994313311545	WITHOUT_CLASSIFICATION	5.686688455653104E-7	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999886564185401	WITHOUT_CLASSIFICATION	1.1343581459856822E-5	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999995619547374	WITHOUT_CLASSIFICATION	4.380452626776054E-7	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999968353623394	WITHOUT_CLASSIFICATION	3.164637660586917E-6	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999983420830487	WITHOUT_CLASSIFICATION	1.657916951308511E-6	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999861190970298	WITHOUT_CLASSIFICATION	1.3880902970171829E-5	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999803494307494	WITHOUT_CLASSIFICATION	1.965056925050767E-5	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999976396369433	WITHOUT_CLASSIFICATION	2.3603630566706944E-6	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999994239702834	WITHOUT_CLASSIFICATION	5.760297167279815E-7	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999993271345836	WITHOUT_CLASSIFICATION	6.728654163325131E-7	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999951104314894	WITHOUT_CLASSIFICATION	4.88956851061188E-6	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999994124556526	WITHOUT_CLASSIFICATION	5.875443474286822E-7	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999994586048714	WITHOUT_CLASSIFICATION	5.413951285926943E-7	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999965760251684	WITHOUT_CLASSIFICATION	3.4239748315997146E-6	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999982514382327	WITHOUT_CLASSIFICATION	1.748561767209176E-6	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999932474491876	WITHOUT_CLASSIFICATION	6.752550812407733E-6	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999932232453637	WITHOUT_CLASSIFICATION	6.77675463635062E-6	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9998318417903496	WITHOUT_CLASSIFICATION	1.6815820965049202E-4	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999977680792819	WITHOUT_CLASSIFICATION	2.2319207181638417E-6	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999954523663556	WITHOUT_CLASSIFICATION	4.547633644386397E-6	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999969407296175	WITHOUT_CLASSIFICATION	3.059270382414373E-6	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999998945418704	WITHOUT_CLASSIFICATION	1.0545812952362658E-7	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999930663628752	WITHOUT_CLASSIFICATION	6.9336371248330946E-6	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999861311874693	WITHOUT_CLASSIFICATION	1.386881253074763E-5	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.999952659282082	WITHOUT_CLASSIFICATION	4.7340717918033965E-5	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999535777913287	WITHOUT_CLASSIFICATION	4.64222086713257E-5	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999947065628123	WITHOUT_CLASSIFICATION	5.293437187722067E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999969268646223	WITHOUT_CLASSIFICATION	3.0731353777452875E-6	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999912206604139	WITHOUT_CLASSIFICATION	8.779339586011089E-6	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999927402558502	WITHOUT_CLASSIFICATION	7.259744149882801E-6	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999976739519899	WITHOUT_CLASSIFICATION	2.326048010152689E-6	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999902984607246	WITHOUT_CLASSIFICATION	9.701539275413188E-6	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999941509999272	WITHOUT_CLASSIFICATION	5.849000072886994E-6	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.999994143426106	WITHOUT_CLASSIFICATION	5.856573893969397E-6	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999905799927841	WITHOUT_CLASSIFICATION	9.420007215958679E-6	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999873558605216	WITHOUT_CLASSIFICATION	1.2644139478444046E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999905799927841	WITHOUT_CLASSIFICATION	9.420007215958679E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999499795931583	WITHOUT_CLASSIFICATION	5.00204068417465E-5	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9999494027303231	WITHOUT_CLASSIFICATION	5.0597269677082975E-5	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999984455332768	WITHOUT_CLASSIFICATION	1.5544667232354614E-6	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9993640632084637	WITHOUT_CLASSIFICATION	6.35936791536282E-4	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999959682344123	WITHOUT_CLASSIFICATION	4.031765587688855E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999974565259985	WITHOUT_CLASSIFICATION	2.5434740015106058E-6	TEST
// write	WITHOUT_CLASSIFICATION	0.9999828383894214	WITHOUT_CLASSIFICATION	1.7161610578612627E-5	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9989263920764827	WITHOUT_CLASSIFICATION	0.0010736079235173059	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999821240408255	WITHOUT_CLASSIFICATION	1.7875959174449946E-5	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999976469105597	WITHOUT_CLASSIFICATION	2.3530894403223644E-6	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999969771746066	WITHOUT_CLASSIFICATION	3.0228253933534124E-6	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999960930748985	WITHOUT_CLASSIFICATION	3.9069251015762375E-6	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999965841638755	WITHOUT_CLASSIFICATION	3.4158361245965434E-6	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999991247397467	WITHOUT_CLASSIFICATION	8.752602531298397E-7	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999861155463983	WITHOUT_CLASSIFICATION	1.3884453601648316E-5	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9997390474813963	WITHOUT_CLASSIFICATION	2.609525186036556E-4	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999996317940465	WITHOUT_CLASSIFICATION	3.6820595348724593E-7	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999926346310938	WITHOUT_CLASSIFICATION	7.365368906298755E-6	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999883316157478	WITHOUT_CLASSIFICATION	1.1668384252077137E-5	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999882241565676	WITHOUT_CLASSIFICATION	1.1775843432410724E-5	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999987265239204	WITHOUT_CLASSIFICATION	1.273476079618518E-6	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999985409128199	WITHOUT_CLASSIFICATION	1.4590871800859866E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999941597769001	WITHOUT_CLASSIFICATION	5.840223099965982E-6	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.999998074938284	WITHOUT_CLASSIFICATION	1.9250617159720365E-6	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.999999565972976	WITHOUT_CLASSIFICATION	4.3402702401123857E-7	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999977329153866	WITHOUT_CLASSIFICATION	2.2670846133938337E-6	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999993048693985	WITHOUT_CLASSIFICATION	6.951306015039799E-7	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999995890094863	WITHOUT_CLASSIFICATION	4.109905136758369E-7	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999994428228945	WITHOUT_CLASSIFICATION	5.571771054889877E-7	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999903137753319	WITHOUT_CLASSIFICATION	9.68622466812189E-6	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999175885239857	WITHOUT_CLASSIFICATION	8.24114760142426E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999418765084521	WITHOUT_CLASSIFICATION	5.8123491547961086E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999346547140635	WITHOUT_CLASSIFICATION	6.534528593646485E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999953783101335	WITHOUT_CLASSIFICATION	4.6216898665243435E-6	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999980542101959	WITHOUT_CLASSIFICATION	1.945789803936953E-6	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999984105512497	WITHOUT_CLASSIFICATION	1.5894487502091746E-6	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.999991123724297	WITHOUT_CLASSIFICATION	8.876275703055781E-6	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999989800815448	WITHOUT_CLASSIFICATION	1.0199184553206288E-6	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999182116654828	WITHOUT_CLASSIFICATION	8.178833451720672E-5	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999268967881103	WITHOUT_CLASSIFICATION	7.310321188961907E-5	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999497697023	WITHOUT_CLASSIFICATION	5.023029770375374E-8	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999482916059181	WITHOUT_CLASSIFICATION	5.170839408182001E-5	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999996961000243	WITHOUT_CLASSIFICATION	3.0389997567550325E-7	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999908654220445	WITHOUT_CLASSIFICATION	9.134577955486118E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999908654220445	WITHOUT_CLASSIFICATION	9.134577955486118E-6	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.999998524911601	WITHOUT_CLASSIFICATION	1.4750883989858398E-6	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999994609328786	WITHOUT_CLASSIFICATION	5.390671214160394E-7	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.99999785658366	WITHOUT_CLASSIFICATION	2.143416339939373E-6	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999969366867144	WITHOUT_CLASSIFICATION	3.0633132855364444E-6	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999997199919974	WITHOUT_CLASSIFICATION	2.8000800262063844E-7	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999998925778353	WITHOUT_CLASSIFICATION	1.074221647072867E-7	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.999996205467795	WITHOUT_CLASSIFICATION	3.7945322049793037E-6	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999983526691839	WITHOUT_CLASSIFICATION	1.6473308161000819E-6	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999985592902175	WITHOUT_CLASSIFICATION	1.4407097824088805E-6	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999995546523531	WITHOUT_CLASSIFICATION	4.4534764678131313E-7	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999900413574702	WITHOUT_CLASSIFICATION	9.958642529778468E-6	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999982314747237	WITHOUT_CLASSIFICATION	1.7685252763158134E-6	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999841176835557	WITHOUT_CLASSIFICATION	1.5882316444295187E-5	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999858258502233	WITHOUT_CLASSIFICATION	1.4174149776525541E-5	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999982309194368	WITHOUT_CLASSIFICATION	1.7690805631230127E-6	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999991520631443	WITHOUT_CLASSIFICATION	8.479368557765282E-7	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999974882070854	WITHOUT_CLASSIFICATION	2.511792914597946E-6	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999995092169327	WITHOUT_CLASSIFICATION	4.907830673443396E-7	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.999900150747191	WITHOUT_CLASSIFICATION	9.984925280905452E-5	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999988707795694	WITHOUT_CLASSIFICATION	1.1292204306698535E-6	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999514367449315	WITHOUT_CLASSIFICATION	4.856325506838713E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999839971716574	WITHOUT_CLASSIFICATION	1.600282834255791E-5	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999996926665221	WITHOUT_CLASSIFICATION	3.0733347791780006E-7	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999996563952627	WITHOUT_CLASSIFICATION	3.436047373226777E-7	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.999966125959251	WITHOUT_CLASSIFICATION	3.387404074905924E-5	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999198537353	WITHOUT_CLASSIFICATION	8.014626470168107E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999993327481718	WITHOUT_CLASSIFICATION	6.672518282668751E-7	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999870121278385	WITHOUT_CLASSIFICATION	1.298787216159513E-5	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.999998422939339	WITHOUT_CLASSIFICATION	1.5770606609575808E-6	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999968715451152	WITHOUT_CLASSIFICATION	3.1284548847978627E-6	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999508237590334	WITHOUT_CLASSIFICATION	4.917624096667236E-5	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999947566155503	WITHOUT_CLASSIFICATION	5.243384449773659E-6	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.999999953120184	WITHOUT_CLASSIFICATION	4.68798159183556E-8	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999985647924347	WITHOUT_CLASSIFICATION	1.4352075653385274E-6	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999996991886235	WITHOUT_CLASSIFICATION	3.0081137641518153E-7	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999339455664	WITHOUT_CLASSIFICATION	6.605443356777377E-8	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999486375765139	WITHOUT_CLASSIFICATION	5.136242348615463E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999237116705872	WITHOUT_CLASSIFICATION	7.628832941277153E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999963488652457	WITHOUT_CLASSIFICATION	3.6511347543142388E-6	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999385509222931	WITHOUT_CLASSIFICATION	6.144907770693302E-5	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.99998003215744	WITHOUT_CLASSIFICATION	1.9967842559943182E-5	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999994421580602	WITHOUT_CLASSIFICATION	5.57841939782745E-7	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999820080962297	WITHOUT_CLASSIFICATION	1.799190377032704E-5	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999988056389232	WITHOUT_CLASSIFICATION	1.1943610768100775E-6	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999777697621902	WITHOUT_CLASSIFICATION	2.2230237809788604E-5	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999999734942009	WITHOUT_CLASSIFICATION	2.650579910115614E-7	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999999831870979	WITHOUT_CLASSIFICATION	1.681290210143009E-7	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999997668950892	WITHOUT_CLASSIFICATION	2.3310491075408904E-7	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9999372026432115	WITHOUT_CLASSIFICATION	6.279735678850632E-5	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999896057606037	WITHOUT_CLASSIFICATION	1.039423939628771E-5	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.99999966135031	WITHOUT_CLASSIFICATION	3.3864968998294157E-7	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999992404583238	WITHOUT_CLASSIFICATION	7.595416761224304E-7	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999998290922196	WITHOUT_CLASSIFICATION	1.7090778040225778E-7	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999998804928694	WITHOUT_CLASSIFICATION	1.1950713060719243E-7	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999992904011912	WITHOUT_CLASSIFICATION	7.095988089006131E-7	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999978089408338	WITHOUT_CLASSIFICATION	2.1910591662478765E-6	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999995600794025	WITHOUT_CLASSIFICATION	4.399205974355057E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999945196374728	WITHOUT_CLASSIFICATION	5.480362527289324E-6	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.99999932358572	WITHOUT_CLASSIFICATION	6.764142800262435E-7	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999997784028378	WITHOUT_CLASSIFICATION	2.215971622318264E-7	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.999999024440101	WITHOUT_CLASSIFICATION	9.75559898983692E-7	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999971143170459	WITHOUT_CLASSIFICATION	2.885682954078951E-6	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999970490015424	WITHOUT_CLASSIFICATION	2.950998457607225E-6	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999996428511196	WITHOUT_CLASSIFICATION	3.5714888036378456E-7	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999983834667736	WITHOUT_CLASSIFICATION	1.6165332263232847E-6	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999179984409184	WITHOUT_CLASSIFICATION	8.200155908150152E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999650581649563	WITHOUT_CLASSIFICATION	3.494183504375396E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999878307626799	WITHOUT_CLASSIFICATION	1.2169237319965398E-5	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999715087376194	WITHOUT_CLASSIFICATION	2.8491262380598712E-5	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999945851601935	WITHOUT_CLASSIFICATION	5.414839806612657E-6	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999974582157724	WITHOUT_CLASSIFICATION	2.541784227656834E-6	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999973049656	WITHOUT_CLASSIFICATION	2.695034399972968E-6	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999991545241579	WITHOUT_CLASSIFICATION	8.45475842054192E-7	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999231030766719	WITHOUT_CLASSIFICATION	7.689692332814246E-5	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9998743485357892	WITHOUT_CLASSIFICATION	1.2565146421087008E-4	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9999218182387121	WITHOUT_CLASSIFICATION	7.818176128802317E-5	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.999909673517741	WITHOUT_CLASSIFICATION	9.032648225897924E-5	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9998999050136563	WITHOUT_CLASSIFICATION	1.0009498634368463E-4	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9999089548401272	WITHOUT_CLASSIFICATION	9.104515987290035E-5	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9999111767548321	WITHOUT_CLASSIFICATION	8.882324516780827E-5	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9999112837252867	WITHOUT_CLASSIFICATION	8.871627471331466E-5	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9999130377327023	WITHOUT_CLASSIFICATION	8.696226729763719E-5	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9999066278526075	WITHOUT_CLASSIFICATION	9.33721473924927E-5	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9998948212034297	WITHOUT_CLASSIFICATION	1.0517879657040706E-4	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.9999052970928507	WITHOUT_CLASSIFICATION	9.4702907149359E-5	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9999007044553463	WITHOUT_CLASSIFICATION	9.929554465369911E-5	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.999889231518196	WITHOUT_CLASSIFICATION	1.1076848180400196E-4	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.9999029231050148	WITHOUT_CLASSIFICATION	9.707689498517277E-5	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9999022849773135	WITHOUT_CLASSIFICATION	9.771502268654163E-5	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9999057389709254	WITHOUT_CLASSIFICATION	9.426102907456257E-5	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.9998898075723555	WITHOUT_CLASSIFICATION	1.1019242764452021E-4	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.9998517737113598	WITHOUT_CLASSIFICATION	1.482262886402056E-4	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9998984717833563	WITHOUT_CLASSIFICATION	1.0152821664368377E-4	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999966684931477	WITHOUT_CLASSIFICATION	3.331506852328067E-6	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999821584948808	WITHOUT_CLASSIFICATION	1.784150511923585E-5	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999975471555168	WITHOUT_CLASSIFICATION	2.4528444830680296E-6	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.999998799987374	WITHOUT_CLASSIFICATION	1.2000126260402176E-6	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999983897369163	WITHOUT_CLASSIFICATION	1.6102630836187856E-6	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999998616731972	WITHOUT_CLASSIFICATION	1.383268027623852E-7	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999995809363859	WITHOUT_CLASSIFICATION	4.190636141208514E-7	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999997482307055	WITHOUT_CLASSIFICATION	2.5176929449190884E-7	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999996025673467	WITHOUT_CLASSIFICATION	3.9743265337947015E-7	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999988540045758	WITHOUT_CLASSIFICATION	1.1459954241719822E-6	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9845531764487222	WITHOUT_CLASSIFICATION	0.01544682355127788	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999974484269232	WITHOUT_CLASSIFICATION	2.551573076794486E-6	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999982069819632	WITHOUT_CLASSIFICATION	1.7930180368767604E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999973520589165	WITHOUT_CLASSIFICATION	2.647941083529097E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999973520589165	WITHOUT_CLASSIFICATION	2.647941083529097E-6	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999996679146282	WITHOUT_CLASSIFICATION	3.3208537179388967E-7	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999916407154685	WITHOUT_CLASSIFICATION	8.359284531469343E-6	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999512020861	WITHOUT_CLASSIFICATION	4.8797913904693656E-8	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999905525074636	WITHOUT_CLASSIFICATION	9.447492536495768E-6	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999999652899629	WITHOUT_CLASSIFICATION	3.471003700148403E-8	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.999882997368493	WITHOUT_CLASSIFICATION	1.1700263150704226E-4	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999853410980328	WITHOUT_CLASSIFICATION	1.4658901967197111E-5	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999990587615237	WITHOUT_CLASSIFICATION	9.412384762610339E-7	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999995676452242	WITHOUT_CLASSIFICATION	4.323547756715206E-7	TEST
// base	WITHOUT_CLASSIFICATION	0.999990972929056	WITHOUT_CLASSIFICATION	9.027070943971289E-6	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999683591040165	WITHOUT_CLASSIFICATION	3.1640895983473154E-5	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.999999394252913	WITHOUT_CLASSIFICATION	6.057470871482582E-7	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9999590491925703	WITHOUT_CLASSIFICATION	4.095080742972653E-5	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999984748315971	WITHOUT_CLASSIFICATION	1.5251684029161256E-6	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999992704882177	WITHOUT_CLASSIFICATION	7.295117823894936E-7	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999780976009975	WITHOUT_CLASSIFICATION	2.190239900240589E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999927477527574	WITHOUT_CLASSIFICATION	7.252247242706389E-6	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.999999833380688	WITHOUT_CLASSIFICATION	1.6661931196190465E-7	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999911668847964	WITHOUT_CLASSIFICATION	8.833115203677005E-6	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999980244191816	WITHOUT_CLASSIFICATION	1.9755808182671998E-6	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999979809423073	WITHOUT_CLASSIFICATION	2.0190576926990323E-6	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999999801251883	WITHOUT_CLASSIFICATION	1.9874811716664598E-8	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999766808281344	WITHOUT_CLASSIFICATION	2.3319171865587308E-5	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999864228459437	WITHOUT_CLASSIFICATION	1.357715405619492E-5	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999997435590781	WITHOUT_CLASSIFICATION	2.564409219706301E-7	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999893495342127	WITHOUT_CLASSIFICATION	1.0650465787334834E-5	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999988616754029	WITHOUT_CLASSIFICATION	1.1383245970475223E-6	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999982697032108	WITHOUT_CLASSIFICATION	1.7302967891602939E-6	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999941261707441	WITHOUT_CLASSIFICATION	5.87382925583585E-6	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999772352182698	WITHOUT_CLASSIFICATION	2.2764781730247023E-5	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999920591123692	WITHOUT_CLASSIFICATION	7.940887630719592E-6	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999870712241864	WITHOUT_CLASSIFICATION	1.292877581361578E-5	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999803406937137	WITHOUT_CLASSIFICATION	1.9659306286260436E-5	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999906519168854	WITHOUT_CLASSIFICATION	9.34808311450202E-6	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999952710841964	WITHOUT_CLASSIFICATION	4.72891580359143E-6	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999949989845248	WITHOUT_CLASSIFICATION	5.001015475198875E-6	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999774250573776	WITHOUT_CLASSIFICATION	2.2574942622365455E-5	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999993635004952	WITHOUT_CLASSIFICATION	6.364995047714828E-7	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999996648717278	WITHOUT_CLASSIFICATION	3.351282722611936E-7	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999997499493809	WITHOUT_CLASSIFICATION	2.5005061912019277E-7	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999966285941114	WITHOUT_CLASSIFICATION	3.3714058886227062E-6	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.99999945819077	WITHOUT_CLASSIFICATION	5.418092300792488E-7	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.999999792087262	WITHOUT_CLASSIFICATION	2.0791273796724406E-7	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999754611889414	WITHOUT_CLASSIFICATION	2.4538811058639396E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999754611889414	WITHOUT_CLASSIFICATION	2.4538811058639396E-5	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999997931057923	WITHOUT_CLASSIFICATION	2.0689420781090817E-7	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999989106062123	WITHOUT_CLASSIFICATION	1.0893937876917296E-6	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999990190628777	WITHOUT_CLASSIFICATION	9.809371222561216E-7	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999919286553745	WITHOUT_CLASSIFICATION	8.071344625576453E-6	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999917777521368	WITHOUT_CLASSIFICATION	8.222247863186925E-6	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999963836717217	WITHOUT_CLASSIFICATION	3.616328278217644E-6	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999983866077324	WITHOUT_CLASSIFICATION	1.6133922675677572E-6	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9998310109944478	WITHOUT_CLASSIFICATION	1.6898900555219922E-4	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999984532160311	WITHOUT_CLASSIFICATION	1.5467839689943938E-6	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999957892013877	WITHOUT_CLASSIFICATION	4.210798612430893E-6	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999965855968092	WITHOUT_CLASSIFICATION	3.4144031907554003E-6	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999982069240853	WITHOUT_CLASSIFICATION	1.7930759146376162E-6	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999762680666207	WITHOUT_CLASSIFICATION	2.3731933379324924E-5	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999910180864021	WITHOUT_CLASSIFICATION	8.981913597792027E-6	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9995045396713683	WITHOUT_CLASSIFICATION	4.954603286316025E-4	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999932575108318	WITHOUT_CLASSIFICATION	6.7424891683215785E-6	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9997947026879407	WITHOUT_CLASSIFICATION	2.0529731205923846E-4	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999990109179568	WITHOUT_CLASSIFICATION	9.890820431087177E-7	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999407056251141	WITHOUT_CLASSIFICATION	5.9294374885987045E-5	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999309344486587	WITHOUT_CLASSIFICATION	6.906555134141885E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999991428290511	WITHOUT_CLASSIFICATION	8.571709489653681E-7	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999991428290511	WITHOUT_CLASSIFICATION	8.571709489653681E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999954712828235	WITHOUT_CLASSIFICATION	4.528717176470742E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999954712828235	WITHOUT_CLASSIFICATION	4.528717176470742E-6	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.999996835949079	WITHOUT_CLASSIFICATION	3.1640509210208816E-6	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999974316647106	WITHOUT_CLASSIFICATION	2.568335289447767E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999949749370466	WITHOUT_CLASSIFICATION	5.02506295339361E-6	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999962168918924	WITHOUT_CLASSIFICATION	3.7831081074625627E-6	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999853271381208	WITHOUT_CLASSIFICATION	1.467286187925826E-5	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999997084789751	WITHOUT_CLASSIFICATION	2.9152102485216355E-7	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999894801754206	WITHOUT_CLASSIFICATION	1.0519824579544145E-5	TEST
// Profile	WITHOUT_CLASSIFICATION	0.999981320955803	WITHOUT_CLASSIFICATION	1.8679044196949132E-5	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999985946273884	WITHOUT_CLASSIFICATION	1.4053726115263223E-6	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999952319099001	WITHOUT_CLASSIFICATION	4.768090099853029E-6	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.999995596094329	WITHOUT_CLASSIFICATION	4.403905671017085E-6	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999987934437409	WITHOUT_CLASSIFICATION	1.2065562590925333E-6	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999943650801048	WITHOUT_CLASSIFICATION	5.63491989533012E-6	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9997560335002197	WITHOUT_CLASSIFICATION	2.4396649978019285E-4	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999988180896144	WITHOUT_CLASSIFICATION	1.1819103855713374E-6	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999920729974237	WITHOUT_CLASSIFICATION	7.927002576363067E-6	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999889476529439	WITHOUT_CLASSIFICATION	1.1052347056124457E-5	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999951331716017	WITHOUT_CLASSIFICATION	4.866828398350727E-6	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9999542346990169	WITHOUT_CLASSIFICATION	4.5765300983043535E-5	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999967943278291	WITHOUT_CLASSIFICATION	3.2056721708742177E-6	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.999985071968378	WITHOUT_CLASSIFICATION	1.4928031621845684E-5	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999996225232123	WITHOUT_CLASSIFICATION	3.7747678772765753E-7	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999975781728685	WITHOUT_CLASSIFICATION	2.4218271314440275E-6	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999993048693985	WITHOUT_CLASSIFICATION	6.951306015039799E-7	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999998925778353	WITHOUT_CLASSIFICATION	1.074221647072867E-7	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999956251741198	WITHOUT_CLASSIFICATION	4.374825880220584E-6	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999997687021558	WITHOUT_CLASSIFICATION	2.3129784416133108E-7	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999993755753084	WITHOUT_CLASSIFICATION	6.244246917402312E-7	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999985541859627	WITHOUT_CLASSIFICATION	1.4458140372941572E-6	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999999754225447	WITHOUT_CLASSIFICATION	2.4577455309437457E-7	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999999754225447	WITHOUT_CLASSIFICATION	2.4577455309437457E-7	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999220198229	WITHOUT_CLASSIFICATION	7.798017709189448E-8	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999984137815556	WITHOUT_CLASSIFICATION	1.5862184444060686E-6	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999994404346958	WITHOUT_CLASSIFICATION	5.595653042466919E-7	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.999999340461577	WITHOUT_CLASSIFICATION	6.595384230100413E-7	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999999547730515	WITHOUT_CLASSIFICATION	4.522694865182765E-8	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999971443314646	WITHOUT_CLASSIFICATION	2.8556685353866E-6	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999933039239494	WITHOUT_CLASSIFICATION	6.696076050701934E-6	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999998976389232	WITHOUT_CLASSIFICATION	1.0236107675599233E-7	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999985434728677	WITHOUT_CLASSIFICATION	1.456527132375607E-6	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999985830639223	WITHOUT_CLASSIFICATION	1.416936077753139E-6	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999913019502149	WITHOUT_CLASSIFICATION	8.698049785088924E-6	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.99999949998073	WITHOUT_CLASSIFICATION	5.000192699475064E-7	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.999993306980555	WITHOUT_CLASSIFICATION	6.693019444944797E-6	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999979511789944	WITHOUT_CLASSIFICATION	2.0488210056708463E-6	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999979245610855	WITHOUT_CLASSIFICATION	2.0754389144869148E-6	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999901434640377	WITHOUT_CLASSIFICATION	9.856535962315919E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999958566972829	WITHOUT_CLASSIFICATION	4.143302717147646E-6	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999996305199558	WITHOUT_CLASSIFICATION	3.694800441934383E-7	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999997454063144	WITHOUT_CLASSIFICATION	2.5459368558097607E-7	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9993586006564399	WITHOUT_CLASSIFICATION	6.413993435601696E-4	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999975713490581	WITHOUT_CLASSIFICATION	2.428650941992762E-6	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999939823150268	WITHOUT_CLASSIFICATION	6.017684973288986E-6	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9998454723059805	WITHOUT_CLASSIFICATION	1.5452769401951938E-4	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999918427428932	WITHOUT_CLASSIFICATION	8.157257106782186E-6	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999980334689691	WITHOUT_CLASSIFICATION	1.9665310309723594E-6	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999993593026124	WITHOUT_CLASSIFICATION	6.406973875696645E-7	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999957167035689	WITHOUT_CLASSIFICATION	4.283296431102205E-6	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999905180642605	WITHOUT_CLASSIFICATION	9.481935739415198E-6	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999975411116416	WITHOUT_CLASSIFICATION	2.458888358370969E-6	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999972007484744	WITHOUT_CLASSIFICATION	2.7992515256544467E-6	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999996105074477	WITHOUT_CLASSIFICATION	3.894925522166952E-7	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999951005968297	WITHOUT_CLASSIFICATION	4.899403170276286E-6	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.999989204496771	WITHOUT_CLASSIFICATION	1.0795503228903922E-5	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9999917021289894	WITHOUT_CLASSIFICATION	8.297871010635296E-6	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999931075411872	WITHOUT_CLASSIFICATION	6.892458812802909E-6	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999997336363662	WITHOUT_CLASSIFICATION	2.663636338548131E-7	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999490872888009	WITHOUT_CLASSIFICATION	5.091271119909487E-5	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999824524219245	WITHOUT_CLASSIFICATION	1.7547578075565938E-5	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999978445488874	WITHOUT_CLASSIFICATION	2.1554511125761116E-6	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999937894525562	WITHOUT_CLASSIFICATION	6.210547443696779E-6	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999995504425081	WITHOUT_CLASSIFICATION	4.495574919072359E-7	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999998930750346	WITHOUT_CLASSIFICATION	1.0692496545842163E-7	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999905551627271	WITHOUT_CLASSIFICATION	9.444837272960668E-6	TEST
// while	WITHOUT_CLASSIFICATION	0.9999781547952238	WITHOUT_CLASSIFICATION	2.184520477620473E-5	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.9998857940057859	WITHOUT_CLASSIFICATION	1.1420599421414436E-4	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999993472293184	WITHOUT_CLASSIFICATION	6.527706816447061E-7	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999967873881179	WITHOUT_CLASSIFICATION	3.2126118820260844E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999995490999231	WITHOUT_CLASSIFICATION	4.5090007694465133E-7	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999995098208696	WITHOUT_CLASSIFICATION	4.901791304011233E-7	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999940666303997	WITHOUT_CLASSIFICATION	5.933369600186437E-6	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9998969754690883	WITHOUT_CLASSIFICATION	1.030245309117587E-4	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999172847884726	WITHOUT_CLASSIFICATION	8.271521152739138E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999137467851331	WITHOUT_CLASSIFICATION	8.625321486684001E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999290050080386	WITHOUT_CLASSIFICATION	7.099499196135182E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999857589443294	WITHOUT_CLASSIFICATION	1.4241055670490598E-5	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999034475788292	WITHOUT_CLASSIFICATION	9.655242117085348E-5	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999304639037954	WITHOUT_CLASSIFICATION	6.953609620455456E-5	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999892382095075	WITHOUT_CLASSIFICATION	1.0761790492526884E-5	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999738080320406	WITHOUT_CLASSIFICATION	2.6191967959445802E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999983422038609	WITHOUT_CLASSIFICATION	1.6577961390790804E-6	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9998284384191942	WITHOUT_CLASSIFICATION	1.7156158080567735E-4	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9998969754690883	WITHOUT_CLASSIFICATION	1.030245309117587E-4	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999137467851331	WITHOUT_CLASSIFICATION	8.625321486684001E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999172847884726	WITHOUT_CLASSIFICATION	8.271521152739138E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999056806221964	WITHOUT_CLASSIFICATION	9.431937780362498E-5	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999085276946972	WITHOUT_CLASSIFICATION	9.14723053028889E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999657898372397	WITHOUT_CLASSIFICATION	3.421016276029791E-5	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999935311728286	WITHOUT_CLASSIFICATION	6.468827171368738E-6	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999978846358555	WITHOUT_CLASSIFICATION	2.1153641443954073E-6	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.999984803080973	WITHOUT_CLASSIFICATION	1.5196919026997609E-5	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.999983574724098	WITHOUT_CLASSIFICATION	1.6425275901939034E-5	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999901573296205	WITHOUT_CLASSIFICATION	9.842670379452359E-6	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999919448003216	WITHOUT_CLASSIFICATION	8.055199678417718E-6	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999989978523648	WITHOUT_CLASSIFICATION	1.002147635156568E-6	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999991761032533	WITHOUT_CLASSIFICATION	8.238967467263046E-7	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999998503119439	WITHOUT_CLASSIFICATION	1.4968805609381157E-7	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999917390935154	WITHOUT_CLASSIFICATION	8.260906484646032E-6	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.99999401354183	WITHOUT_CLASSIFICATION	5.986458169976382E-6	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999998462882852	WITHOUT_CLASSIFICATION	1.5371171489014535E-7	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999976319530809	WITHOUT_CLASSIFICATION	2.3680469192423015E-6	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.999995797586106	WITHOUT_CLASSIFICATION	4.2024138939386015E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999988668351739	WITHOUT_CLASSIFICATION	1.133164826082757E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999988668351739	WITHOUT_CLASSIFICATION	1.133164826082757E-6	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999934811581944	WITHOUT_CLASSIFICATION	6.518841805665866E-6	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999978727161837	WITHOUT_CLASSIFICATION	2.1272838164448106E-6	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999917131940184	WITHOUT_CLASSIFICATION	8.286805981697568E-6	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999520577384465	WITHOUT_CLASSIFICATION	4.794226155343747E-5	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999954596216569	WITHOUT_CLASSIFICATION	4.540378343059621E-6	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999946745783429	WITHOUT_CLASSIFICATION	5.3254216571775745E-6	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999995815162788	WITHOUT_CLASSIFICATION	4.1848372117288024E-7	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999947804697171	WITHOUT_CLASSIFICATION	5.219530282828048E-6	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999993094857923	WITHOUT_CLASSIFICATION	6.905142076996963E-7	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999998895895316	WITHOUT_CLASSIFICATION	1.1041046836760126E-7	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999997503104573	WITHOUT_CLASSIFICATION	2.49689542711544E-7	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999240424778066	WITHOUT_CLASSIFICATION	7.595752219327906E-5	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999979194896931	WITHOUT_CLASSIFICATION	2.080510306968235E-6	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.999994507443529	WITHOUT_CLASSIFICATION	5.492556470933237E-6	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999988928294239	WITHOUT_CLASSIFICATION	1.1071705760877314E-6	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999973911169692	WITHOUT_CLASSIFICATION	2.608883030745303E-6	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999981817881831	WITHOUT_CLASSIFICATION	1.8182118168763018E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999991797451426	WITHOUT_CLASSIFICATION	8.202548574240276E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999991797451426	WITHOUT_CLASSIFICATION	8.202548574240276E-7	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9999813674661765	WITHOUT_CLASSIFICATION	1.86325338234866E-5	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999745143471903	WITHOUT_CLASSIFICATION	2.548565280972354E-5	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999940553080477	WITHOUT_CLASSIFICATION	5.94469195226352E-6	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.999952779813718	WITHOUT_CLASSIFICATION	4.722018628205848E-5	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999976356099998	WITHOUT_CLASSIFICATION	2.3643900002580498E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999991797451426	WITHOUT_CLASSIFICATION	8.202548574240276E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999991797451426	WITHOUT_CLASSIFICATION	8.202548574240276E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999995223691261	WITHOUT_CLASSIFICATION	4.776308738693405E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999995223691261	WITHOUT_CLASSIFICATION	4.776308738693405E-7	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999972473862253	WITHOUT_CLASSIFICATION	2.752613774713941E-6	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999544054760252	WITHOUT_CLASSIFICATION	4.5594523974755075E-5	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999991369422748	WITHOUT_CLASSIFICATION	8.630577251692902E-7	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999980265166211	WITHOUT_CLASSIFICATION	1.9734833788992804E-6	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999996846841601	WITHOUT_CLASSIFICATION	3.1531583997484E-7	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999996846841601	WITHOUT_CLASSIFICATION	3.1531583997484E-7	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999980902569998	WITHOUT_CLASSIFICATION	1.909743000153727E-6	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999869959313682	WITHOUT_CLASSIFICATION	1.3004068631815623E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999703174529024	WITHOUT_CLASSIFICATION	2.9682547097471796E-5	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999963579838202	WITHOUT_CLASSIFICATION	3.642016179810472E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999995096376225	WITHOUT_CLASSIFICATION	4.903623773990095E-7	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999983001327347	WITHOUT_CLASSIFICATION	1.69986726535367E-6	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999996037600389	WITHOUT_CLASSIFICATION	3.9623996107846074E-7	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999978292336941	WITHOUT_CLASSIFICATION	2.170766305912858E-6	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999979874463077	WITHOUT_CLASSIFICATION	2.0125536922283768E-6	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999997595282429	WITHOUT_CLASSIFICATION	2.40471757071118E-7	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999850449162098	WITHOUT_CLASSIFICATION	1.4955083790338485E-5	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999976680798214	WITHOUT_CLASSIFICATION	2.331920178625095E-6	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999988872231613	WITHOUT_CLASSIFICATION	1.1127768386530071E-6	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999993207115463	WITHOUT_CLASSIFICATION	6.792884537159505E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999973911169692	WITHOUT_CLASSIFICATION	2.608883030745303E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999991797451426	WITHOUT_CLASSIFICATION	8.202548574240276E-7	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999995223691261	WITHOUT_CLASSIFICATION	4.776308738693405E-7	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999983001327347	WITHOUT_CLASSIFICATION	1.69986726535367E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999951592545646	WITHOUT_CLASSIFICATION	4.840745435355562E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999951592545646	WITHOUT_CLASSIFICATION	4.840745435355562E-6	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999996913274033	WITHOUT_CLASSIFICATION	3.086725967464516E-7	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999993577300383	WITHOUT_CLASSIFICATION	6.422699615902745E-7	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999998055018036	WITHOUT_CLASSIFICATION	1.9449819632749626E-7	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999162935294	WITHOUT_CLASSIFICATION	8.370647057990427E-8	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999996114214452	WITHOUT_CLASSIFICATION	3.8857855473763366E-7	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999933796687387	WITHOUT_CLASSIFICATION	6.620331261297118E-6	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999895600228157	WITHOUT_CLASSIFICATION	1.0439977184297829E-5	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999920271798446	WITHOUT_CLASSIFICATION	7.972820155426208E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999998252377655	WITHOUT_CLASSIFICATION	1.7476223439062064E-7	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999991600804373	WITHOUT_CLASSIFICATION	8.399195627185557E-7	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999965996199193	WITHOUT_CLASSIFICATION	3.4003800806643896E-6	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999994930779216	WITHOUT_CLASSIFICATION	5.069220784284929E-7	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999978868638457	WITHOUT_CLASSIFICATION	2.1131361542607436E-6	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999981817881831	WITHOUT_CLASSIFICATION	1.8182118168763018E-6	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999995223691261	WITHOUT_CLASSIFICATION	4.776308738693405E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999869959313682	WITHOUT_CLASSIFICATION	1.3004068631815623E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999703174529024	WITHOUT_CLASSIFICATION	2.9682547097471796E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999703174529024	WITHOUT_CLASSIFICATION	2.9682547097471796E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999995096376225	WITHOUT_CLASSIFICATION	4.903623773990095E-7	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999983001327347	WITHOUT_CLASSIFICATION	1.69986726535367E-6	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999983001327347	WITHOUT_CLASSIFICATION	1.69986726535367E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999951592545646	WITHOUT_CLASSIFICATION	4.840745435355562E-6	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999932600344467	WITHOUT_CLASSIFICATION	6.739965553309039E-6	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999966877832182	WITHOUT_CLASSIFICATION	3.312216781776825E-6	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999992749855158	WITHOUT_CLASSIFICATION	7.25014484197422E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999075537806367	WITHOUT_CLASSIFICATION	9.244621936330858E-5	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999985040373615	WITHOUT_CLASSIFICATION	1.4959626384985976E-6	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999216383693529	WITHOUT_CLASSIFICATION	7.836163064707745E-5	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999989044030325	WITHOUT_CLASSIFICATION	1.095596967481723E-6	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999433875792	WITHOUT_CLASSIFICATION	5.661242089091309E-8	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999997066094548	WITHOUT_CLASSIFICATION	2.933905451484714E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999869959313682	WITHOUT_CLASSIFICATION	1.3004068631815623E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999703174529024	WITHOUT_CLASSIFICATION	2.9682547097471796E-5	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999703174529024	WITHOUT_CLASSIFICATION	2.9682547097471796E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999995096376225	WITHOUT_CLASSIFICATION	4.903623773990095E-7	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999920271798446	WITHOUT_CLASSIFICATION	7.972820155426208E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999991600804373	WITHOUT_CLASSIFICATION	8.399195627185557E-7	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9997184905156897	WITHOUT_CLASSIFICATION	2.815094843102609E-4	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999970808926746	WITHOUT_CLASSIFICATION	2.919107325362614E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999532088929857	WITHOUT_CLASSIFICATION	4.679110701429559E-5	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999532088929857	WITHOUT_CLASSIFICATION	4.679110701429559E-5	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999974526528054	WITHOUT_CLASSIFICATION	2.5473471946921395E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999945547607316	WITHOUT_CLASSIFICATION	5.4452392683396E-6	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999572693557924	WITHOUT_CLASSIFICATION	4.273064420758725E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999986125723169	WITHOUT_CLASSIFICATION	1.387427683130866E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999914327634506	WITHOUT_CLASSIFICATION	8.567236549477605E-6	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999914327634506	WITHOUT_CLASSIFICATION	8.567236549477605E-6	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999994683677862	WITHOUT_CLASSIFICATION	5.3163221379551435E-6	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999994683677862	WITHOUT_CLASSIFICATION	5.3163221379551435E-6	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999995292302902	WITHOUT_CLASSIFICATION	4.7076970985947314E-7	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999995292302902	WITHOUT_CLASSIFICATION	4.7076970985947314E-7	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999946575607249	WITHOUT_CLASSIFICATION	5.342439275075509E-6	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999977674197599	WITHOUT_CLASSIFICATION	2.2325802400335407E-6	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999569909867837	WITHOUT_CLASSIFICATION	4.300901321628536E-5	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999986855518185	WITHOUT_CLASSIFICATION	1.3144481815294208E-6	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999997460030017	WITHOUT_CLASSIFICATION	2.5399699823862934E-7	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999924722279592	WITHOUT_CLASSIFICATION	7.527772040826436E-6	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999973319427794	WITHOUT_CLASSIFICATION	2.6680572205517684E-6	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999938128377416	WITHOUT_CLASSIFICATION	6.187162258476879E-6	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.999977440949589	WITHOUT_CLASSIFICATION	2.2559050411054737E-5	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999931500062621	WITHOUT_CLASSIFICATION	6.849993737875628E-6	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999997815010675	WITHOUT_CLASSIFICATION	2.184989324312648E-7	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999987463228478	WITHOUT_CLASSIFICATION	1.2536771522003734E-6	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999938261118636	WITHOUT_CLASSIFICATION	6.173888136407523E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999910369482781	WITHOUT_CLASSIFICATION	8.96305172192995E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999910369482781	WITHOUT_CLASSIFICATION	8.96305172192995E-6	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.999992614688772	WITHOUT_CLASSIFICATION	7.385311228063733E-6	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999997084789751	WITHOUT_CLASSIFICATION	2.9152102485216355E-7	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999943470644233	WITHOUT_CLASSIFICATION	5.652935576805737E-6	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999997388165319	WITHOUT_CLASSIFICATION	2.6118346807373225E-7	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999933738583818	WITHOUT_CLASSIFICATION	6.6261416182134124E-6	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999976886241193	WITHOUT_CLASSIFICATION	2.3113758807461854E-6	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999990561532133	WITHOUT_CLASSIFICATION	9.438467867765462E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999978892203394	WITHOUT_CLASSIFICATION	2.110779660610445E-6	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999997083612702	WITHOUT_CLASSIFICATION	2.916387297614692E-7	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999989177409315	WITHOUT_CLASSIFICATION	1.0822590683952685E-6	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999981762277245	WITHOUT_CLASSIFICATION	1.8237722755048108E-6	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999838265060647	WITHOUT_CLASSIFICATION	1.6173493935321957E-5	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999984156557608	WITHOUT_CLASSIFICATION	1.5843442391251926E-6	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999928141637309	WITHOUT_CLASSIFICATION	7.1858362691805485E-6	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999249358924366	WITHOUT_CLASSIFICATION	7.506410756340116E-5	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999966357581419	WITHOUT_CLASSIFICATION	3.3642418580301056E-6	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999938102434665	WITHOUT_CLASSIFICATION	6.189756533539661E-6	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999995786392474	WITHOUT_CLASSIFICATION	4.213607526633797E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999985014436614	WITHOUT_CLASSIFICATION	1.4985563385627303E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999985014436614	WITHOUT_CLASSIFICATION	1.4985563385627303E-6	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999999145390049	WITHOUT_CLASSIFICATION	8.546099516144759E-8	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999579313374987	WITHOUT_CLASSIFICATION	4.206866250140003E-5	TEST
//[]	WITHOUT_CLASSIFICATION	0.9994891829257796	WITHOUT_CLASSIFICATION	5.108170742203531E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9994891829257796	WITHOUT_CLASSIFICATION	5.108170742203531E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999918333043448	WITHOUT_CLASSIFICATION	8.1666956550695E-6	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999712416952412	WITHOUT_CLASSIFICATION	2.8758304758706845E-5	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999016651881949	WITHOUT_CLASSIFICATION	9.83348118050007E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999343357446838	WITHOUT_CLASSIFICATION	6.566425531611204E-5	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999970825974165	WITHOUT_CLASSIFICATION	2.9174025834097665E-6	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999997562357016	WITHOUT_CLASSIFICATION	2.4376429838664273E-7	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999997562357016	WITHOUT_CLASSIFICATION	2.4376429838664273E-7	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999173589381	WITHOUT_CLASSIFICATION	8.264106182177771E-8	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999964319255452	WITHOUT_CLASSIFICATION	3.5680744546724125E-6	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999963834828989	WITHOUT_CLASSIFICATION	3.616517101119405E-6	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999626052001186	WITHOUT_CLASSIFICATION	3.739479988137704E-5	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999579313374987	WITHOUT_CLASSIFICATION	4.206866250140003E-5	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999499016767645	WITHOUT_CLASSIFICATION	5.009832323558461E-5	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999871853540001	WITHOUT_CLASSIFICATION	1.2814646000032284E-5	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999871853540001	WITHOUT_CLASSIFICATION	1.2814646000032284E-5	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999997748581415	WITHOUT_CLASSIFICATION	2.25141858504036E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997552025625	WITHOUT_CLASSIFICATION	2.4479743755178647E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997552025625	WITHOUT_CLASSIFICATION	2.4479743755178647E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999992462394144	WITHOUT_CLASSIFICATION	7.537605857351811E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999992462394144	WITHOUT_CLASSIFICATION	7.537605857351811E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999992462394144	WITHOUT_CLASSIFICATION	7.537605857351811E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997552025625	WITHOUT_CLASSIFICATION	2.4479743755178647E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997552025625	WITHOUT_CLASSIFICATION	2.4479743755178647E-7	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999997748581415	WITHOUT_CLASSIFICATION	2.25141858504036E-6	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999994527953394	WITHOUT_CLASSIFICATION	5.472046605533756E-7	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999987587659384	WITHOUT_CLASSIFICATION	1.2412340616083474E-6	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999987809561651	WITHOUT_CLASSIFICATION	1.2190438349314678E-6	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999959993944494	WITHOUT_CLASSIFICATION	4.000605550587049E-6	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999997633560626	WITHOUT_CLASSIFICATION	2.366439375440751E-7	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999982851019407	WITHOUT_CLASSIFICATION	1.7148980593365047E-6	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999947734347852	WITHOUT_CLASSIFICATION	5.226565214899435E-6	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999998431197233	WITHOUT_CLASSIFICATION	1.5688027673885594E-7	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999981762277245	WITHOUT_CLASSIFICATION	1.8237722755048108E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997552025625	WITHOUT_CLASSIFICATION	2.4479743755178647E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997552025625	WITHOUT_CLASSIFICATION	2.4479743755178647E-7	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999998629584124	WITHOUT_CLASSIFICATION	1.3704158750603718E-7	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.999998986361265	WITHOUT_CLASSIFICATION	1.0136387348517588E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999862508330589	WITHOUT_CLASSIFICATION	1.3749166941059248E-5	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999999215995916	WITHOUT_CLASSIFICATION	7.840040839275641E-7	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999980002405009	WITHOUT_CLASSIFICATION	1.9997594991636117E-6	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999998167002593	WITHOUT_CLASSIFICATION	1.8329974074063903E-7	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999998702715356	WITHOUT_CLASSIFICATION	1.2972846448023067E-7	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999984054904908	WITHOUT_CLASSIFICATION	1.594509509201827E-6	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999979393533638	WITHOUT_CLASSIFICATION	2.060646636151468E-6	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999989789101676	WITHOUT_CLASSIFICATION	1.0210898323377548E-6	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999671434412967	WITHOUT_CLASSIFICATION	3.2856558703238335E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999983675048154	WITHOUT_CLASSIFICATION	1.6324951846328085E-6	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999993589333005	WITHOUT_CLASSIFICATION	6.410666995047554E-7	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999995983167447	WITHOUT_CLASSIFICATION	4.016832553194922E-7	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999998474636481	WITHOUT_CLASSIFICATION	1.525363518329521E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999833268707716	WITHOUT_CLASSIFICATION	1.6673129228317728E-5	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999833268707716	WITHOUT_CLASSIFICATION	1.6673129228317728E-5	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999833268707716	WITHOUT_CLASSIFICATION	1.6673129228317728E-5	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999991484750047	WITHOUT_CLASSIFICATION	8.51524995300807E-7	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999998807385772	WITHOUT_CLASSIFICATION	1.1926142291388608E-7	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999998209753097	WITHOUT_CLASSIFICATION	1.7902469026286356E-7	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999996335006198	WITHOUT_CLASSIFICATION	3.664993801132341E-7	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999953888272981	WITHOUT_CLASSIFICATION	4.611172701919364E-6	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999893126255104	WITHOUT_CLASSIFICATION	1.0687374489549655E-5	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999674104183	WITHOUT_CLASSIFICATION	3.2589581655501624E-8	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999956965803677	WITHOUT_CLASSIFICATION	4.30341963239713E-6	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999994033992644	WITHOUT_CLASSIFICATION	5.966007355351761E-7	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999989320134225	WITHOUT_CLASSIFICATION	1.0679865775189033E-6	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999751304570474	WITHOUT_CLASSIFICATION	2.4869542952488757E-5	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999921733801556	WITHOUT_CLASSIFICATION	7.826619844554572E-6	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999173589381	WITHOUT_CLASSIFICATION	8.264106182177771E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997552025625	WITHOUT_CLASSIFICATION	2.4479743755178647E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997552025625	WITHOUT_CLASSIFICATION	2.4479743755178647E-7	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999997748581415	WITHOUT_CLASSIFICATION	2.25141858504036E-6	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999982851019407	WITHOUT_CLASSIFICATION	1.7148980593365047E-6	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.999998986361265	WITHOUT_CLASSIFICATION	1.0136387348517588E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.999999215995916	WITHOUT_CLASSIFICATION	7.840040839275641E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999998167002593	WITHOUT_CLASSIFICATION	1.8329974074063903E-7	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999862508330589	WITHOUT_CLASSIFICATION	1.3749166941059248E-5	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999998702715356	WITHOUT_CLASSIFICATION	1.2972846448023067E-7	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999989789101676	WITHOUT_CLASSIFICATION	1.0210898323377548E-6	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999979393533638	WITHOUT_CLASSIFICATION	2.060646636151468E-6	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999983675048154	WITHOUT_CLASSIFICATION	1.6324951846328085E-6	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999980694813109	WITHOUT_CLASSIFICATION	1.930518689224656E-6	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999983093665187	WITHOUT_CLASSIFICATION	1.6906334813055836E-6	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999963303164812	WITHOUT_CLASSIFICATION	3.66968351877429E-6	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999993284151988	WITHOUT_CLASSIFICATION	6.715848012637239E-7	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999933204628759	WITHOUT_CLASSIFICATION	6.679537124104415E-6	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999968508169075	WITHOUT_CLASSIFICATION	3.1491830925630824E-6	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.999997052847492	WITHOUT_CLASSIFICATION	2.9471525081030225E-6	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999969123340202	WITHOUT_CLASSIFICATION	3.087665979722673E-6	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999985010859496	WITHOUT_CLASSIFICATION	1.498914050440899E-6	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999985225379382	WITHOUT_CLASSIFICATION	1.4774620618384254E-6	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999988079320321	WITHOUT_CLASSIFICATION	1.1920679679015087E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997049335408	WITHOUT_CLASSIFICATION	2.950664591019625E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999937932027179	WITHOUT_CLASSIFICATION	6.206797282160723E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999832897415907	WITHOUT_CLASSIFICATION	1.671025840940023E-5	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999006466088	WITHOUT_CLASSIFICATION	9.935339123736933E-8	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999992744021213	WITHOUT_CLASSIFICATION	7.255978785831949E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999931352767659	WITHOUT_CLASSIFICATION	6.864723234113968E-6	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999970993418779	WITHOUT_CLASSIFICATION	2.9006581221279904E-6	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999997154435846	WITHOUT_CLASSIFICATION	2.845564154822837E-7	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999992478148142	WITHOUT_CLASSIFICATION	7.52185185733195E-7	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999990218938464	WITHOUT_CLASSIFICATION	9.781061536604991E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999994210848224	WITHOUT_CLASSIFICATION	5.789151775510117E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999994210848224	WITHOUT_CLASSIFICATION	5.789151775510117E-7	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999976295074995	WITHOUT_CLASSIFICATION	2.3704925004405777E-6	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.999999481613822	WITHOUT_CLASSIFICATION	5.183861779889454E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998533043049466	WITHOUT_CLASSIFICATION	1.466956950535361E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998533043049466	WITHOUT_CLASSIFICATION	1.466956950535361E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998533043049466	WITHOUT_CLASSIFICATION	1.466956950535361E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9998505910426595	WITHOUT_CLASSIFICATION	1.494089573405206E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9998505910426595	WITHOUT_CLASSIFICATION	1.494089573405206E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9998505910426595	WITHOUT_CLASSIFICATION	1.494089573405206E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9998505910426595	WITHOUT_CLASSIFICATION	1.494089573405206E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997545848326305	WITHOUT_CLASSIFICATION	2.454151673695532E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997545848326305	WITHOUT_CLASSIFICATION	2.454151673695532E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997545848326305	WITHOUT_CLASSIFICATION	2.454151673695532E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998189593635154	WITHOUT_CLASSIFICATION	1.8104063648453062E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998189593635154	WITHOUT_CLASSIFICATION	1.8104063648453062E-4	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9997969228183357	WITHOUT_CLASSIFICATION	2.0307718166436857E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9998587314634111	WITHOUT_CLASSIFICATION	1.4126853658895556E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.999999481613822	WITHOUT_CLASSIFICATION	5.183861779889454E-7	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999995958651752	WITHOUT_CLASSIFICATION	4.0413482490294356E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998533043049466	WITHOUT_CLASSIFICATION	1.466956950535361E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998533043049466	WITHOUT_CLASSIFICATION	1.466956950535361E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9998505910426595	WITHOUT_CLASSIFICATION	1.494089573405206E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9998505910426595	WITHOUT_CLASSIFICATION	1.494089573405206E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9998505910426595	WITHOUT_CLASSIFICATION	1.494089573405206E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997545848326305	WITHOUT_CLASSIFICATION	2.454151673695532E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9997545848326305	WITHOUT_CLASSIFICATION	2.454151673695532E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998189593635154	WITHOUT_CLASSIFICATION	1.8104063648453062E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9998587314634111	WITHOUT_CLASSIFICATION	1.4126853658895556E-4	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999992211619952	WITHOUT_CLASSIFICATION	7.788380048965795E-7	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999992211619952	WITHOUT_CLASSIFICATION	7.788380048965795E-7	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999998693374363	WITHOUT_CLASSIFICATION	1.3066256359600797E-7	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999998693374363	WITHOUT_CLASSIFICATION	1.3066256359600797E-7	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999880535398796	WITHOUT_CLASSIFICATION	1.1946460120302157E-5	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999880535398796	WITHOUT_CLASSIFICATION	1.1946460120302157E-5	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999986948025844	WITHOUT_CLASSIFICATION	1.3051974155663055E-6	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998948487071	WITHOUT_CLASSIFICATION	1.0515129289904133E-7	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998948487071	WITHOUT_CLASSIFICATION	1.0515129289904133E-7	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999999718104267	WITHOUT_CLASSIFICATION	2.8189573306045193E-7	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999999718104267	WITHOUT_CLASSIFICATION	2.8189573306045193E-7	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999994516925771	WITHOUT_CLASSIFICATION	5.483074228250491E-7	TEST
// call site	WITHOUT_CLASSIFICATION	0.999997203760638	WITHOUT_CLASSIFICATION	2.7962393619767988E-6	TEST
// call site	WITHOUT_CLASSIFICATION	0.999997203760638	WITHOUT_CLASSIFICATION	2.7962393619767988E-6	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999995707969238	WITHOUT_CLASSIFICATION	4.2920307627298045E-7	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999991669955777	WITHOUT_CLASSIFICATION	8.330044224316493E-7	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999996579803125	WITHOUT_CLASSIFICATION	3.420196875085072E-7	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9998505910426595	WITHOUT_CLASSIFICATION	1.494089573405206E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9998505910426595	WITHOUT_CLASSIFICATION	1.494089573405206E-4	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999995707969238	WITHOUT_CLASSIFICATION	4.2920307627298045E-7	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999990811547285	WITHOUT_CLASSIFICATION	9.188452715478168E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999965231102417	WITHOUT_CLASSIFICATION	3.4768897582261506E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999965231102417	WITHOUT_CLASSIFICATION	3.4768897582261506E-6	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999965231102417	WITHOUT_CLASSIFICATION	3.4768897582261506E-6	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999991410140866	WITHOUT_CLASSIFICATION	8.589859135198805E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.9999922731051398	WITHOUT_CLASSIFICATION	7.726894860190524E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.999988531056239	WITHOUT_CLASSIFICATION	1.1468943760939902E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.999988531056239	WITHOUT_CLASSIFICATION	1.1468943760939902E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999976330977157	WITHOUT_CLASSIFICATION	2.366902284240796E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999907636218983	WITHOUT_CLASSIFICATION	9.236378101750285E-6	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999904478250093	WITHOUT_CLASSIFICATION	9.552174990643962E-6	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999851460399666	WITHOUT_CLASSIFICATION	1.485396003347796E-5	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999992586459799	WITHOUT_CLASSIFICATION	7.413540200299868E-7	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999989488877437	WITHOUT_CLASSIFICATION	1.0511122562670913E-6	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999989488877437	WITHOUT_CLASSIFICATION	1.0511122562670913E-6	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999999323834999	WITHOUT_CLASSIFICATION	6.761650013946166E-8	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9997996821478196	WITHOUT_CLASSIFICATION	2.0031785218041175E-4	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9997996821478196	WITHOUT_CLASSIFICATION	2.0031785218041175E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9998505910426595	WITHOUT_CLASSIFICATION	1.494089573405206E-4	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999965231102417	WITHOUT_CLASSIFICATION	3.4768897582261506E-6	TEST
// args	WITHOUT_CLASSIFICATION	0.9999922731051398	WITHOUT_CLASSIFICATION	7.726894860190524E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.999988531056239	WITHOUT_CLASSIFICATION	1.1468943760939902E-5	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999976330977157	WITHOUT_CLASSIFICATION	2.366902284240796E-6	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999907636218983	WITHOUT_CLASSIFICATION	9.236378101750285E-6	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999904478250093	WITHOUT_CLASSIFICATION	9.552174990643962E-6	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999851460399666	WITHOUT_CLASSIFICATION	1.485396003347796E-5	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9997996821478196	WITHOUT_CLASSIFICATION	2.0031785218041175E-4	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999975097138636	WITHOUT_CLASSIFICATION	2.490286136308529E-6	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999971441097425	WITHOUT_CLASSIFICATION	2.855890257567955E-6	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999977002162479	WITHOUT_CLASSIFICATION	2.2997837520624E-6	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999995477296364	WITHOUT_CLASSIFICATION	4.522703634978501E-7	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999984323648609	WITHOUT_CLASSIFICATION	1.5676351390981998E-6	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999931704958266	WITHOUT_CLASSIFICATION	6.829504173472842E-6	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999962212724298	WITHOUT_CLASSIFICATION	3.778727570287673E-6	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999962212724298	WITHOUT_CLASSIFICATION	3.778727570287673E-6	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999930818428402	WITHOUT_CLASSIFICATION	6.918157159780836E-6	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999969020409499	WITHOUT_CLASSIFICATION	3.097959049999766E-6	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999956558739153	WITHOUT_CLASSIFICATION	4.3441260847690236E-6	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999941987220701	WITHOUT_CLASSIFICATION	5.8012779298521504E-6	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999968609163954	WITHOUT_CLASSIFICATION	3.139083604491832E-6	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999968609163954	WITHOUT_CLASSIFICATION	3.139083604491832E-6	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999977092239739	WITHOUT_CLASSIFICATION	2.2907760261813373E-6	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999963971585033	WITHOUT_CLASSIFICATION	3.6028414966153235E-6	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999997157589091	WITHOUT_CLASSIFICATION	2.8424109090578E-6	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999997157589091	WITHOUT_CLASSIFICATION	2.8424109090578E-6	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999807318084065	WITHOUT_CLASSIFICATION	1.9268191593422753E-5	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999959445797417	WITHOUT_CLASSIFICATION	4.055420258324838E-6	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999992586459799	WITHOUT_CLASSIFICATION	7.413540200299868E-7	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999979130928318	WITHOUT_CLASSIFICATION	2.0869071681715683E-6	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999992674374001	WITHOUT_CLASSIFICATION	7.325625998876549E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999980022309578	WITHOUT_CLASSIFICATION	1.9977690422209006E-6	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999994204780077	WITHOUT_CLASSIFICATION	5.795219922554161E-7	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999992130000482	WITHOUT_CLASSIFICATION	7.869999518372546E-7	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999992905699426	WITHOUT_CLASSIFICATION	7.094300572587953E-7	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999993672347347	WITHOUT_CLASSIFICATION	6.327652653384242E-7	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999983631323667	WITHOUT_CLASSIFICATION	1.6368676333439908E-6	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999992104247504	WITHOUT_CLASSIFICATION	7.895752497624638E-7	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999992104247504	WITHOUT_CLASSIFICATION	7.895752497624638E-7	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999969412906422	WITHOUT_CLASSIFICATION	3.0587093577743745E-6	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999969412906422	WITHOUT_CLASSIFICATION	3.0587093577743745E-6	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999998624687959	WITHOUT_CLASSIFICATION	1.3753120415306358E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999994008946343	WITHOUT_CLASSIFICATION	5.991053655911318E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999994008946343	WITHOUT_CLASSIFICATION	5.991053655911318E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999994008946343	WITHOUT_CLASSIFICATION	5.991053655911318E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999862922009579	WITHOUT_CLASSIFICATION	1.3707799042003163E-5	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999978500460939	WITHOUT_CLASSIFICATION	2.149953906160887E-6	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999978500460939	WITHOUT_CLASSIFICATION	2.149953906160887E-6	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999994978580045	WITHOUT_CLASSIFICATION	5.02141995508079E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.999998712907053	WITHOUT_CLASSIFICATION	1.2870929470786185E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999976581206987	WITHOUT_CLASSIFICATION	2.3418793011543795E-6	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999971081732207	WITHOUT_CLASSIFICATION	2.891826779281721E-6	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999973776905674	WITHOUT_CLASSIFICATION	2.6223094325886563E-6	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999914430451268	WITHOUT_CLASSIFICATION	8.556954873217875E-6	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999171031235086	WITHOUT_CLASSIFICATION	8.289687649142078E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999937932027179	WITHOUT_CLASSIFICATION	6.206797282160723E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999937932027179	WITHOUT_CLASSIFICATION	6.206797282160723E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999862922009579	WITHOUT_CLASSIFICATION	1.3707799042003163E-5	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999994978580045	WITHOUT_CLASSIFICATION	5.02141995508079E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999987422820283	WITHOUT_CLASSIFICATION	1.257717971625444E-6	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.999998712907053	WITHOUT_CLASSIFICATION	1.2870929470786185E-6	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999976581206987	WITHOUT_CLASSIFICATION	2.3418793011543795E-6	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999996944561221	WITHOUT_CLASSIFICATION	3.055438778644825E-7	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999952121489277	WITHOUT_CLASSIFICATION	4.787851072196081E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999931103917461	WITHOUT_CLASSIFICATION	6.889608253841421E-6	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9997658551879933	WITHOUT_CLASSIFICATION	2.341448120066644E-4	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999879266384507	WITHOUT_CLASSIFICATION	1.2073361549228228E-5	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999997447657497	WITHOUT_CLASSIFICATION	2.5523425020558056E-7	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999998259543922	WITHOUT_CLASSIFICATION	1.7404560780353442E-7	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999996944561221	WITHOUT_CLASSIFICATION	3.055438778644825E-7	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999964012464033	WITHOUT_CLASSIFICATION	3.5987535967075706E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999964012464033	WITHOUT_CLASSIFICATION	3.5987535967075706E-5	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999941922273781	WITHOUT_CLASSIFICATION	5.807772621997958E-6	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999996111538505	WITHOUT_CLASSIFICATION	3.888461494708396E-7	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999938938701414	WITHOUT_CLASSIFICATION	6.106129858606929E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999954090787012	WITHOUT_CLASSIFICATION	4.5909212988335595E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999982564856665	WITHOUT_CLASSIFICATION	1.7435143334559004E-6	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999983199700259	WITHOUT_CLASSIFICATION	1.680029974156702E-6	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999948621518292	WITHOUT_CLASSIFICATION	5.137848170738478E-6	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.999998912096805	WITHOUT_CLASSIFICATION	1.0879031949384798E-6	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999995855416489	WITHOUT_CLASSIFICATION	4.1445835112622826E-7	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999976200504695	WITHOUT_CLASSIFICATION	2.3799495305218305E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999683385090921	WITHOUT_CLASSIFICATION	3.1661490907882914E-5	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999954090787012	WITHOUT_CLASSIFICATION	4.5909212988335595E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999982564856665	WITHOUT_CLASSIFICATION	1.7435143334559004E-6	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999996761955231	WITHOUT_CLASSIFICATION	3.238044767968104E-7	TEST
// push false	WITHOUT_CLASSIFICATION	0.999995338120072	WITHOUT_CLASSIFICATION	4.661879927963576E-6	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999988580666368	WITHOUT_CLASSIFICATION	1.141933363296902E-6	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999828927809978	WITHOUT_CLASSIFICATION	1.7107219002085537E-5	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999819134908846	WITHOUT_CLASSIFICATION	1.808650911533105E-5	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999480824909032	WITHOUT_CLASSIFICATION	5.1917509096885875E-5	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9994700846205177	WITHOUT_CLASSIFICATION	5.299153794823695E-4	TEST
// push true	WITHOUT_CLASSIFICATION	0.999994477747014	WITHOUT_CLASSIFICATION	5.5222529860363165E-6	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999860724696917	WITHOUT_CLASSIFICATION	1.3927530308274326E-5	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999492617675848	WITHOUT_CLASSIFICATION	5.0738232415171934E-5	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999895393228032	WITHOUT_CLASSIFICATION	1.0460677196779833E-5	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9999014972232795	WITHOUT_CLASSIFICATION	9.850277672053143E-5	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999994583180536	WITHOUT_CLASSIFICATION	5.41681946356749E-7	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999990322305108	WITHOUT_CLASSIFICATION	9.67769489170546E-7	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999978319909854	WITHOUT_CLASSIFICATION	2.1680090145667367E-6	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999990608863514	WITHOUT_CLASSIFICATION	9.391136486129066E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999135250498078	WITHOUT_CLASSIFICATION	8.647495019225208E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999958296640941	WITHOUT_CLASSIFICATION	4.170335906039184E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999998098563051	WITHOUT_CLASSIFICATION	1.9014369489540196E-7	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999920467646637	WITHOUT_CLASSIFICATION	7.953235336392605E-6	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999135250498078	WITHOUT_CLASSIFICATION	8.647495019225208E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999958296640941	WITHOUT_CLASSIFICATION	4.170335906039184E-6	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999998098563051	WITHOUT_CLASSIFICATION	1.9014369489540196E-7	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999939419530048	WITHOUT_CLASSIFICATION	6.058046995137077E-6	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999998555552502	WITHOUT_CLASSIFICATION	1.444447498131547E-7	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999997010604768	WITHOUT_CLASSIFICATION	2.989395232719433E-7	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999963956292671	WITHOUT_CLASSIFICATION	3.6043707328457555E-6	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999549737723349	WITHOUT_CLASSIFICATION	4.502622766515777E-5	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999993055136918	WITHOUT_CLASSIFICATION	6.94486308331191E-7	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999995184324585	WITHOUT_CLASSIFICATION	4.815675415966674E-7	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999998214035093	WITHOUT_CLASSIFICATION	1.7859649065642568E-7	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999973543855303	WITHOUT_CLASSIFICATION	2.645614469656957E-6	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999960288189196	WITHOUT_CLASSIFICATION	3.9711810804483415E-6	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9996945929455069	WITHOUT_CLASSIFICATION	3.054070544931067E-4	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999995300094469	WITHOUT_CLASSIFICATION	4.699905531509578E-7	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999990597938097	WITHOUT_CLASSIFICATION	9.402061902880975E-7	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999994600883909	WITHOUT_CLASSIFICATION	5.399116091299329E-7	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9998581743943418	WITHOUT_CLASSIFICATION	1.4182560565830922E-4	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999992211140125	WITHOUT_CLASSIFICATION	7.788859875670072E-7	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999998724612531	WITHOUT_CLASSIFICATION	1.2753874695962945E-7	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999991489935725	WITHOUT_CLASSIFICATION	8.510064275366138E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999982676099946	WITHOUT_CLASSIFICATION	1.732390005393965E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999935028194635	WITHOUT_CLASSIFICATION	6.497180536519553E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999937722894986	WITHOUT_CLASSIFICATION	6.22771050135742E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999957679568053	WITHOUT_CLASSIFICATION	4.232043194710758E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999957679568053	WITHOUT_CLASSIFICATION	4.232043194710758E-6	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999984651432292	WITHOUT_CLASSIFICATION	1.5348567707952778E-6	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999984651432292	WITHOUT_CLASSIFICATION	1.5348567707952778E-6	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999999341521039	WITHOUT_CLASSIFICATION	6.584789610844392E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999999341521039	WITHOUT_CLASSIFICATION	6.584789610844392E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999987238367128	WITHOUT_CLASSIFICATION	1.2761632871468286E-6	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999997901895336	WITHOUT_CLASSIFICATION	2.098104664051492E-6	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999052380976	WITHOUT_CLASSIFICATION	9.476190240605466E-8	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999912645193958	WITHOUT_CLASSIFICATION	8.735480604157928E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999903189242243	WITHOUT_CLASSIFICATION	9.681075775775068E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999991879857438	WITHOUT_CLASSIFICATION	8.120142560498581E-7	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999993388115919	WITHOUT_CLASSIFICATION	6.611884081236141E-7	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999989689668367	WITHOUT_CLASSIFICATION	1.0310331632749476E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999937932027179	WITHOUT_CLASSIFICATION	6.206797282160723E-6	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999987238367128	WITHOUT_CLASSIFICATION	1.2761632871468286E-6	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999997901895336	WITHOUT_CLASSIFICATION	2.098104664051492E-6	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999052380976	WITHOUT_CLASSIFICATION	9.476190240605466E-8	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999903189242243	WITHOUT_CLASSIFICATION	9.681075775775068E-6	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999991879857438	WITHOUT_CLASSIFICATION	8.120142560498581E-7	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999940850411151	WITHOUT_CLASSIFICATION	5.914958884881395E-6	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999989115061344	WITHOUT_CLASSIFICATION	1.0884938655233818E-6	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999985936216123	WITHOUT_CLASSIFICATION	1.4063783877032561E-6	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999985936216123	WITHOUT_CLASSIFICATION	1.4063783877032561E-6	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999963970394673	WITHOUT_CLASSIFICATION	3.6029605327671133E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999956921001882	WITHOUT_CLASSIFICATION	4.3078998116965534E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999586604459949	WITHOUT_CLASSIFICATION	4.133955400508307E-5	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999991166613657	WITHOUT_CLASSIFICATION	8.833386342951755E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999991166613657	WITHOUT_CLASSIFICATION	8.833386342951755E-7	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999989470012126	WITHOUT_CLASSIFICATION	1.0529987874188864E-6	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999950587987496	WITHOUT_CLASSIFICATION	4.941201250458829E-6	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999994395040505	WITHOUT_CLASSIFICATION	5.604959495216344E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999998273063896	WITHOUT_CLASSIFICATION	1.7269361032890066E-7	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999996562976115	WITHOUT_CLASSIFICATION	3.437023886073899E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999832897415907	WITHOUT_CLASSIFICATION	1.671025840940023E-5	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999006466088	WITHOUT_CLASSIFICATION	9.935339123736933E-8	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999992744021213	WITHOUT_CLASSIFICATION	7.255978785831949E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999931352767659	WITHOUT_CLASSIFICATION	6.864723234113968E-6	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999992478148142	WITHOUT_CLASSIFICATION	7.52185185733195E-7	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999990218938464	WITHOUT_CLASSIFICATION	9.781061536604991E-7	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999989470012126	WITHOUT_CLASSIFICATION	1.0529987874188864E-6	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999950587987496	WITHOUT_CLASSIFICATION	4.941201250458829E-6	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999998273063896	WITHOUT_CLASSIFICATION	1.7269361032890066E-7	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999989842889627	WITHOUT_CLASSIFICATION	1.0157110372372175E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999586604459949	WITHOUT_CLASSIFICATION	4.133955400508307E-5	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999586604459949	WITHOUT_CLASSIFICATION	4.133955400508307E-5	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999683385090921	WITHOUT_CLASSIFICATION	3.1661490907882914E-5	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999683385090921	WITHOUT_CLASSIFICATION	3.1661490907882914E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999921973327187	WITHOUT_CLASSIFICATION	7.80266728129909E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999921973327187	WITHOUT_CLASSIFICATION	7.80266728129909E-6	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999996483883965	WITHOUT_CLASSIFICATION	3.5161160348200897E-7	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999997971738932	WITHOUT_CLASSIFICATION	2.0282610675850602E-7	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999959654661642	WITHOUT_CLASSIFICATION	4.034533835793223E-6	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999952191258135	WITHOUT_CLASSIFICATION	4.780874186627396E-6	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999996914731222	WITHOUT_CLASSIFICATION	3.0852687787469855E-7	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999987102155048	WITHOUT_CLASSIFICATION	1.2897844952706792E-6	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999942609894121	WITHOUT_CLASSIFICATION	5.739010587836118E-6	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999257465201	WITHOUT_CLASSIFICATION	7.42534798781861E-8	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999997184977205	WITHOUT_CLASSIFICATION	2.8150227938348907E-7	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999995572208251	WITHOUT_CLASSIFICATION	4.4277917486305745E-7	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999844448458978	WITHOUT_CLASSIFICATION	1.5555154102221034E-5	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999993131945023	WITHOUT_CLASSIFICATION	6.86805497787137E-7	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999966951780522	WITHOUT_CLASSIFICATION	3.3048219476239962E-6	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999992388267338	WITHOUT_CLASSIFICATION	7.611732662069137E-7	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999987243291713	WITHOUT_CLASSIFICATION	1.2756708287352356E-6	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999920024684736	WITHOUT_CLASSIFICATION	7.997531526327085E-6	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999952151994752	WITHOUT_CLASSIFICATION	4.7848005248077155E-6	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999987639169384	WITHOUT_CLASSIFICATION	1.236083061554147E-6	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999999129178928	WITHOUT_CLASSIFICATION	8.708210710141182E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999006466088	WITHOUT_CLASSIFICATION	9.935339123736933E-8	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999931352767659	WITHOUT_CLASSIFICATION	6.864723234113968E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999994210848224	WITHOUT_CLASSIFICATION	5.789151775510117E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.999988531056239	WITHOUT_CLASSIFICATION	1.1468943760939902E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.999988531056239	WITHOUT_CLASSIFICATION	1.1468943760939902E-5	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999989842889627	WITHOUT_CLASSIFICATION	1.0157110372372175E-6	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999586604459949	WITHOUT_CLASSIFICATION	4.133955400508307E-5	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999683385090921	WITHOUT_CLASSIFICATION	3.1661490907882914E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999921973327187	WITHOUT_CLASSIFICATION	7.80266728129909E-6	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.999978690602626	WITHOUT_CLASSIFICATION	2.1309397373977296E-5	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999652687342745	WITHOUT_CLASSIFICATION	3.473126572554176E-5	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.999998242741365	WITHOUT_CLASSIFICATION	1.757258634963401E-6	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999998774632912	WITHOUT_CLASSIFICATION	1.22536708836003E-7	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999997510141083	WITHOUT_CLASSIFICATION	2.489858916678955E-7	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999997510141083	WITHOUT_CLASSIFICATION	2.489858916678955E-7	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999962268892304	WITHOUT_CLASSIFICATION	3.7731107696486302E-6	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999979430252686	WITHOUT_CLASSIFICATION	2.0569747314488414E-6	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999987397120291	WITHOUT_CLASSIFICATION	1.2602879708988625E-6	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999963166767196	WITHOUT_CLASSIFICATION	3.6833232803943147E-6	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999976288553339	WITHOUT_CLASSIFICATION	2.3711446660945984E-6	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999976288553339	WITHOUT_CLASSIFICATION	2.3711446660945984E-6	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.999998516181318	WITHOUT_CLASSIFICATION	1.4838186820208913E-6	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999990182121102	WITHOUT_CLASSIFICATION	9.817878897826293E-7	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999974605624516	WITHOUT_CLASSIFICATION	2.5394375483435426E-6	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999904833633152	WITHOUT_CLASSIFICATION	9.516636684726974E-6	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999967870369875	WITHOUT_CLASSIFICATION	3.212963012576451E-6	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999989659646078	WITHOUT_CLASSIFICATION	1.0340353921315002E-6	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999874437981368	WITHOUT_CLASSIFICATION	1.2556201863214508E-5	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999993743805006	WITHOUT_CLASSIFICATION	6.256194994252212E-7	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.999988729334737	WITHOUT_CLASSIFICATION	1.1270665263075006E-5	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9884428293299172	WITHOUT_CLASSIFICATION	0.011557170670082726	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.999997952014564	WITHOUT_CLASSIFICATION	2.0479854359844106E-6	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999279541799342	WITHOUT_CLASSIFICATION	7.204582006576328E-5	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999543473612	WITHOUT_CLASSIFICATION	4.5652638898441656E-8	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999994883881522	WITHOUT_CLASSIFICATION	5.116118477315333E-7	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9996340783365377	WITHOUT_CLASSIFICATION	3.659216634622873E-4	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999968808871831	WITHOUT_CLASSIFICATION	3.1191128170328925E-6	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999493153280855	WITHOUT_CLASSIFICATION	5.068467191458801E-5	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999993871355869	WITHOUT_CLASSIFICATION	6.128644130531182E-7	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.999997761626209	WITHOUT_CLASSIFICATION	2.2383737910538454E-6	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999890250259633	WITHOUT_CLASSIFICATION	1.0974974036743422E-5	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999962557712949	WITHOUT_CLASSIFICATION	3.744228705163231E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999987390407987	WITHOUT_CLASSIFICATION	1.26095920124795E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999987390407987	WITHOUT_CLASSIFICATION	1.26095920124795E-6	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999958484978602	WITHOUT_CLASSIFICATION	4.15150213980509E-6	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999985857733763	WITHOUT_CLASSIFICATION	1.4142266236749693E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999978892203394	WITHOUT_CLASSIFICATION	2.110779660610445E-6	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999978892203394	WITHOUT_CLASSIFICATION	2.110779660610445E-6	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999847299414716	WITHOUT_CLASSIFICATION	1.527005852840748E-5	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999963868423302	WITHOUT_CLASSIFICATION	3.6131576699401037E-6	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999790703809268	WITHOUT_CLASSIFICATION	2.092961907313029E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999997298342185	WITHOUT_CLASSIFICATION	2.7016578158093314E-7	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999997298342185	WITHOUT_CLASSIFICATION	2.7016578158093314E-7	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999934462225725	WITHOUT_CLASSIFICATION	6.553777427550175E-6	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999995461518656	WITHOUT_CLASSIFICATION	4.5384813431766214E-7	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999997060979338	WITHOUT_CLASSIFICATION	2.9390206617131727E-7	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.999999722159572	WITHOUT_CLASSIFICATION	2.778404279041429E-7	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999996802136332	WITHOUT_CLASSIFICATION	3.1978636682045113E-7	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999992703157681	WITHOUT_CLASSIFICATION	7.296842319328998E-7	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999969448620435	WITHOUT_CLASSIFICATION	3.0551379564892054E-6	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999960383419827	WITHOUT_CLASSIFICATION	3.9616580172617656E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999919501504916	WITHOUT_CLASSIFICATION	8.049849508479112E-6	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999989459230234	WITHOUT_CLASSIFICATION	1.0540769765412703E-6	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999773865891513	WITHOUT_CLASSIFICATION	2.2613410848701853E-5	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999931097604571	WITHOUT_CLASSIFICATION	6.890239542980166E-6	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999959641819822	WITHOUT_CLASSIFICATION	4.035818017821823E-6	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999974400075371	WITHOUT_CLASSIFICATION	2.5599924628945058E-6	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999987947801883	WITHOUT_CLASSIFICATION	1.2052198118043106E-6	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999996922241858	WITHOUT_CLASSIFICATION	3.077758141000684E-7	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999996513871409	WITHOUT_CLASSIFICATION	3.486128591299219E-7	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999967841310939	WITHOUT_CLASSIFICATION	3.215868905984566E-6	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999918562032024	WITHOUT_CLASSIFICATION	8.143796797567054E-6	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999906924424178	WITHOUT_CLASSIFICATION	9.307557582204221E-6	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999975708915713	WITHOUT_CLASSIFICATION	2.4291084287574302E-6	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999945117352792	WITHOUT_CLASSIFICATION	5.488264720830219E-6	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999917739661003	WITHOUT_CLASSIFICATION	8.2260338998073E-6	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999989316105244	WITHOUT_CLASSIFICATION	1.0683894755697962E-6	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999648603474562	WITHOUT_CLASSIFICATION	3.5139652543820184E-5	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999959583592677	WITHOUT_CLASSIFICATION	4.04164073230957E-6	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999264703967654	WITHOUT_CLASSIFICATION	7.352960323453297E-5	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999981022544484	WITHOUT_CLASSIFICATION	1.8977455516872538E-6	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999936924225472	WITHOUT_CLASSIFICATION	6.307577452743666E-6	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999998938945175	WITHOUT_CLASSIFICATION	1.0610548256360912E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999963801866	WITHOUT_CLASSIFICATION	3.6198133577974825E-9	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999974400075371	WITHOUT_CLASSIFICATION	2.5599924628945058E-6	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999981022544484	WITHOUT_CLASSIFICATION	1.8977455516872538E-6	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999936924225472	WITHOUT_CLASSIFICATION	6.307577452743666E-6	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999963801866	WITHOUT_CLASSIFICATION	3.6198133577974825E-9	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999809878871618	WITHOUT_CLASSIFICATION	1.9012112838179224E-5	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999895747619284	WITHOUT_CLASSIFICATION	1.0425238071729806E-5	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999955513847185	WITHOUT_CLASSIFICATION	4.4486152815166E-6	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999519898117096	WITHOUT_CLASSIFICATION	4.80101882903517E-5	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999731680998261	WITHOUT_CLASSIFICATION	2.683190017391687E-5	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999998241907858	WITHOUT_CLASSIFICATION	1.7580921422906017E-7	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999871322180571	WITHOUT_CLASSIFICATION	1.2867781942906887E-5	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999983927015229	WITHOUT_CLASSIFICATION	1.607298477195923E-6	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999935151642183	WITHOUT_CLASSIFICATION	6.484835781750634E-6	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999993204026	WITHOUT_CLASSIFICATION	6.795973999709681E-7	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999878064049691	WITHOUT_CLASSIFICATION	1.2193595030887106E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999878064049691	WITHOUT_CLASSIFICATION	1.2193595030887106E-5	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999978627182156	WITHOUT_CLASSIFICATION	2.1372817845106133E-6	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999996398658132	WITHOUT_CLASSIFICATION	3.6013418688255944E-7	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999997372738675	WITHOUT_CLASSIFICATION	2.627261324559663E-7	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999972568046722	WITHOUT_CLASSIFICATION	2.743195327773376E-6	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999990764095799	WITHOUT_CLASSIFICATION	9.235904202015381E-7	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999927288837822	WITHOUT_CLASSIFICATION	7.271116217799652E-6	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999966143927271	WITHOUT_CLASSIFICATION	3.3856072729690806E-6	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999775058981	WITHOUT_CLASSIFICATION	2.2494101988808943E-8	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999933872183435	WITHOUT_CLASSIFICATION	6.612781656429685E-6	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999407281537	WITHOUT_CLASSIFICATION	5.9271846335489164E-8	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999987446707503	WITHOUT_CLASSIFICATION	1.2553292496284641E-6	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999998963672861	WITHOUT_CLASSIFICATION	1.0363271390642697E-7	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999941183534585	WITHOUT_CLASSIFICATION	5.881646541356203E-6	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999997446102553	WITHOUT_CLASSIFICATION	2.553897446629587E-7	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999985834610502	WITHOUT_CLASSIFICATION	1.4165389498633943E-6	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999999061443685	WITHOUT_CLASSIFICATION	9.385563143618786E-8	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999990801187184	WITHOUT_CLASSIFICATION	9.198812817105257E-7	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.999998578572767	WITHOUT_CLASSIFICATION	1.4214272329757593E-6	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999982871226125	WITHOUT_CLASSIFICATION	1.712877387437457E-6	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999969334203976	WITHOUT_CLASSIFICATION	3.066579602326846E-6	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9999933197524237	WITHOUT_CLASSIFICATION	6.680247576336771E-6	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999968170619337	WITHOUT_CLASSIFICATION	3.1829380662640853E-6	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999992936552344	WITHOUT_CLASSIFICATION	7.063447654686735E-7	TEST
// others	WITHOUT_CLASSIFICATION	0.9999947022619516	WITHOUT_CLASSIFICATION	5.297738048457269E-6	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999963740557004	WITHOUT_CLASSIFICATION	3.6259442996367733E-6	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999962497000641	WITHOUT_CLASSIFICATION	3.750299935940447E-6	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999922250085888	WITHOUT_CLASSIFICATION	7.774991411188046E-6	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999811611788	WITHOUT_CLASSIFICATION	1.8838821166842492E-8	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999933208557957	WITHOUT_CLASSIFICATION	6.679144204196002E-6	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999992838403301	WITHOUT_CLASSIFICATION	7.161596698999309E-7	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999997402927845	WITHOUT_CLASSIFICATION	2.597072155152417E-7	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999992839007916	WITHOUT_CLASSIFICATION	7.160992084074847E-7	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999960015063756	WITHOUT_CLASSIFICATION	3.998493624418612E-6	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999964813649909	WITHOUT_CLASSIFICATION	3.5186350091286956E-6	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999950808462876	WITHOUT_CLASSIFICATION	4.919153712395613E-6	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9996897487896002	WITHOUT_CLASSIFICATION	3.102512103998339E-4	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999601812857224	WITHOUT_CLASSIFICATION	3.981871427759766E-5	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999958712972317	WITHOUT_CLASSIFICATION	4.128702768334356E-6	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999992246616577	WITHOUT_CLASSIFICATION	7.753383423092506E-7	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.999997995815953	WITHOUT_CLASSIFICATION	2.0041840470871322E-6	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999894807393089	WITHOUT_CLASSIFICATION	1.051926069117418E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9996260278400779	WITHOUT_CLASSIFICATION	3.73972159922017E-4	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999928447488461	WITHOUT_CLASSIFICATION	7.155251153945834E-6	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.999995332522226	WITHOUT_CLASSIFICATION	4.667477773972132E-6	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999995485588662	WITHOUT_CLASSIFICATION	4.514411337117413E-7	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999999903751533	WITHOUT_CLASSIFICATION	9.624846617398943E-9	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.999999833165809	WITHOUT_CLASSIFICATION	1.6683419107944613E-7	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999743042527	WITHOUT_CLASSIFICATION	2.569574727379504E-8	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999994114137356	WITHOUT_CLASSIFICATION	5.885862643134648E-7	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999726703646373	WITHOUT_CLASSIFICATION	2.7329635362601353E-5	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999976904504281	WITHOUT_CLASSIFICATION	2.3095495719163546E-6	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999996258333099	WITHOUT_CLASSIFICATION	3.741666900442283E-7	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999853922370776	WITHOUT_CLASSIFICATION	1.4607762922453781E-5	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999443772935268	WITHOUT_CLASSIFICATION	5.562270647310642E-5	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9994054125802095	WITHOUT_CLASSIFICATION	5.945874197905553E-4	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999974804959999	WITHOUT_CLASSIFICATION	2.5195040001599112E-6	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999976276740384	WITHOUT_CLASSIFICATION	2.3723259615741835E-6	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999980868512617	WITHOUT_CLASSIFICATION	1.9131487382818243E-6	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999941096896098	WITHOUT_CLASSIFICATION	5.890310390252569E-6	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999106508071443	WITHOUT_CLASSIFICATION	8.934919285581839E-5	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999106508071443	WITHOUT_CLASSIFICATION	8.934919285581839E-5	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999983698508528	WITHOUT_CLASSIFICATION	1.630149147267661E-6	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999902953681993	WITHOUT_CLASSIFICATION	9.704631800646306E-6	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999920559096308	WITHOUT_CLASSIFICATION	7.944090369252331E-6	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999961952761557	WITHOUT_CLASSIFICATION	3.8047238442402815E-6	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999989975596922	WITHOUT_CLASSIFICATION	1.0024403077656626E-6	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999983410013876	WITHOUT_CLASSIFICATION	1.6589986123956726E-6	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9998962506440733	WITHOUT_CLASSIFICATION	1.0374935592669804E-4	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999926859562419	WITHOUT_CLASSIFICATION	7.314043758093795E-6	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.999993035462273	WITHOUT_CLASSIFICATION	6.964537726945605E-6	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999981193163295	WITHOUT_CLASSIFICATION	1.8806836703700915E-6	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.999997742882595	WITHOUT_CLASSIFICATION	2.2571174050012323E-6	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999985621289349	WITHOUT_CLASSIFICATION	1.4378710650505842E-6	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999903937709756	WITHOUT_CLASSIFICATION	9.606229024413123E-6	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999991008878106	WITHOUT_CLASSIFICATION	8.991121893176143E-7	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999983703842854	WITHOUT_CLASSIFICATION	1.6296157145513654E-6	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999891696057717	WITHOUT_CLASSIFICATION	1.0830394228316583E-5	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999861221234647	WITHOUT_CLASSIFICATION	1.3877876535372383E-5	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999971514622803	WITHOUT_CLASSIFICATION	2.8485377197119317E-6	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.999998828027059	WITHOUT_CLASSIFICATION	1.1719729409825322E-6	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999972225713543	WITHOUT_CLASSIFICATION	2.7774286456724543E-6	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999926854783069	WITHOUT_CLASSIFICATION	7.314521693172336E-6	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999916046815486	WITHOUT_CLASSIFICATION	8.395318451388455E-6	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999991994054956	WITHOUT_CLASSIFICATION	8.005945043413135E-7	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999949788753348	WITHOUT_CLASSIFICATION	5.021124665123427E-6	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999809485989175	WITHOUT_CLASSIFICATION	1.9051401082493658E-5	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999221373035144	WITHOUT_CLASSIFICATION	7.786269648554774E-5	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999254549637222	WITHOUT_CLASSIFICATION	7.454503627781577E-5	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999163440519006	WITHOUT_CLASSIFICATION	8.365594809946374E-5	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999995290693053	WITHOUT_CLASSIFICATION	4.709306946313065E-7	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999963447296522	WITHOUT_CLASSIFICATION	3.6552703477107234E-6	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999997020618907	WITHOUT_CLASSIFICATION	2.9793810926783E-7	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999973671881119	WITHOUT_CLASSIFICATION	2.632811888125126E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999981288197477	WITHOUT_CLASSIFICATION	1.8711802522990944E-6	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999241836991575	WITHOUT_CLASSIFICATION	7.581630084252906E-5	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999981288197477	WITHOUT_CLASSIFICATION	1.8711802522990944E-6	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999994511260286	WITHOUT_CLASSIFICATION	5.488739713863064E-7	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.99999884802936	WITHOUT_CLASSIFICATION	1.151970640020846E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.99999884802936	WITHOUT_CLASSIFICATION	1.151970640020846E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.99999884802936	WITHOUT_CLASSIFICATION	1.151970640020846E-6	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999993828575486	WITHOUT_CLASSIFICATION	6.171424512841897E-7	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999993828575486	WITHOUT_CLASSIFICATION	6.171424512841897E-7	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999771134818713	WITHOUT_CLASSIFICATION	2.2886518128655432E-5	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.999999148552732	WITHOUT_CLASSIFICATION	8.514472680511672E-7	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999959643996025	WITHOUT_CLASSIFICATION	4.035600397519766E-6	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.999999962444761	WITHOUT_CLASSIFICATION	3.755523911301415E-8	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999943707616087	WITHOUT_CLASSIFICATION	5.629238391318887E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999431496601716	WITHOUT_CLASSIFICATION	5.6850339828321265E-5	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999989688659128	WITHOUT_CLASSIFICATION	1.03113408717353E-6	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999975678018842	WITHOUT_CLASSIFICATION	2.4321981158255245E-6	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999647145533278	WITHOUT_CLASSIFICATION	3.528544667215798E-5	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999992523414535	WITHOUT_CLASSIFICATION	7.47658546509975E-7	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999912554730297	WITHOUT_CLASSIFICATION	8.744526970391958E-6	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999990857991338	WITHOUT_CLASSIFICATION	9.142008662200914E-7	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.999999479538438	WITHOUT_CLASSIFICATION	5.204615620365587E-7	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999971403881582	WITHOUT_CLASSIFICATION	2.8596118416644548E-6	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999955200613168	WITHOUT_CLASSIFICATION	4.479938683311484E-6	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999983998975016	WITHOUT_CLASSIFICATION	1.60010249839292E-6	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999991437895129	WITHOUT_CLASSIFICATION	8.562104871444845E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.999997293988652	WITHOUT_CLASSIFICATION	2.706011348016126E-6	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.999997293988652	WITHOUT_CLASSIFICATION	2.706011348016126E-6	TEST
// receiver	WITHOUT_CLASSIFICATION	0.99999014953808	WITHOUT_CLASSIFICATION	9.850461920117486E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999984985260271	WITHOUT_CLASSIFICATION	1.5014739729886926E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999984985260271	WITHOUT_CLASSIFICATION	1.5014739729886926E-6	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999709180434699	WITHOUT_CLASSIFICATION	2.9081956530018686E-5	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.999996986545918	WITHOUT_CLASSIFICATION	3.0134540820881305E-6	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999961790187543	WITHOUT_CLASSIFICATION	3.820981245801275E-6	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999821825089376	WITHOUT_CLASSIFICATION	1.7817491062445348E-5	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999912345356543	WITHOUT_CLASSIFICATION	8.765464345656301E-6	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999996598363802	WITHOUT_CLASSIFICATION	3.401636198479663E-7	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999909619851481	WITHOUT_CLASSIFICATION	9.038014851912718E-6	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999991687325291	WITHOUT_CLASSIFICATION	8.312674707664951E-7	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999995580849428	WITHOUT_CLASSIFICATION	4.419150572017909E-7	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999964917786062	WITHOUT_CLASSIFICATION	3.5082213938590516E-6	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999927673296608	WITHOUT_CLASSIFICATION	7.23267033920734E-6	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999905836761775	WITHOUT_CLASSIFICATION	9.416323822388096E-6	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999956251741198	WITHOUT_CLASSIFICATION	4.374825880220584E-6	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.999998838242623	WITHOUT_CLASSIFICATION	1.1617573770776436E-6	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999975678018842	WITHOUT_CLASSIFICATION	2.4321981158255245E-6	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9997920147937577	WITHOUT_CLASSIFICATION	2.079852062423044E-4	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.999998022690321	WITHOUT_CLASSIFICATION	1.9773096790194747E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999973055971954	WITHOUT_CLASSIFICATION	2.694402804656727E-6	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999973055971954	WITHOUT_CLASSIFICATION	2.694402804656727E-6	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999987968132928	WITHOUT_CLASSIFICATION	1.2031867071724035E-6	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.999997293138169	WITHOUT_CLASSIFICATION	2.7068618310131883E-6	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999998239415977	WITHOUT_CLASSIFICATION	1.760584023337823E-7	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999974906944724	WITHOUT_CLASSIFICATION	2.509305527647717E-6	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999985472058976	WITHOUT_CLASSIFICATION	1.452794102259392E-6	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999998710761707	WITHOUT_CLASSIFICATION	1.2892382924299378E-7	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999991069328462	WITHOUT_CLASSIFICATION	8.930671537405116E-7	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9998870184866419	WITHOUT_CLASSIFICATION	1.129815133580908E-4	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999993266625614	WITHOUT_CLASSIFICATION	6.733374386142252E-7	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999987262186687	WITHOUT_CLASSIFICATION	1.273781331266961E-6	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.999997511438337	WITHOUT_CLASSIFICATION	2.488561663009493E-6	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999991438974103	WITHOUT_CLASSIFICATION	8.561025898530781E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999086342749678	WITHOUT_CLASSIFICATION	9.13657250321913E-5	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999979790288307	WITHOUT_CLASSIFICATION	2.0209711693719387E-6	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.999994203511986	WITHOUT_CLASSIFICATION	5.796488014092853E-6	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999986847377876	WITHOUT_CLASSIFICATION	1.3152622123952824E-6	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.999995254822534	WITHOUT_CLASSIFICATION	4.7451774659833E-6	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999961360084059	WITHOUT_CLASSIFICATION	3.863991594121811E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999981404098574	WITHOUT_CLASSIFICATION	1.8595901426349708E-6	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999963015897271	WITHOUT_CLASSIFICATION	3.6984102728522393E-6	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999975590311907	WITHOUT_CLASSIFICATION	2.440968809321728E-6	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999998935139286	WITHOUT_CLASSIFICATION	1.064860714489782E-7	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999932410990439	WITHOUT_CLASSIFICATION	6.758900956150421E-6	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999992631789227	WITHOUT_CLASSIFICATION	7.368210772199004E-7	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999976041681242	WITHOUT_CLASSIFICATION	2.3958318758472817E-6	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999973140356943	WITHOUT_CLASSIFICATION	2.685964305870232E-6	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9998753062927136	WITHOUT_CLASSIFICATION	1.246937072863695E-4	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9998908751057041	WITHOUT_CLASSIFICATION	1.0912489429585451E-4	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999996686540635	WITHOUT_CLASSIFICATION	3.313459365262972E-7	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999965552490184	WITHOUT_CLASSIFICATION	3.4447509816007954E-6	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999934590531324	WITHOUT_CLASSIFICATION	6.540946867670968E-6	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999972762549748	WITHOUT_CLASSIFICATION	2.723745025152682E-6	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999590084968923	WITHOUT_CLASSIFICATION	4.099150310774388E-5	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999923681426526	WITHOUT_CLASSIFICATION	7.631857347471273E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999948655758324	WITHOUT_CLASSIFICATION	5.134424167638858E-6	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999797137337492	WITHOUT_CLASSIFICATION	2.028626625086995E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9998908751057041	WITHOUT_CLASSIFICATION	1.0912489429585451E-4	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999932868494663	WITHOUT_CLASSIFICATION	6.713150533767141E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999948655758324	WITHOUT_CLASSIFICATION	5.134424167638858E-6	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999435433118434	WITHOUT_CLASSIFICATION	5.645668815653825E-5	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999985985305967	WITHOUT_CLASSIFICATION	1.4014694033362449E-6	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.999996865161691	WITHOUT_CLASSIFICATION	3.1348383091131687E-6	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999990039937553	WITHOUT_CLASSIFICATION	9.960062447035001E-7	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999882524689251	WITHOUT_CLASSIFICATION	1.1747531074913783E-5	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999991432164331	WITHOUT_CLASSIFICATION	8.567835669250889E-7	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999991432164331	WITHOUT_CLASSIFICATION	8.567835669250889E-7	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.999977536628996	WITHOUT_CLASSIFICATION	2.246337100396498E-5	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999125840175	WITHOUT_CLASSIFICATION	8.741598239281534E-8	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999989164716704	WITHOUT_CLASSIFICATION	1.0835283295847702E-6	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999989164716704	WITHOUT_CLASSIFICATION	1.0835283295847702E-6	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.999999972887186	WITHOUT_CLASSIFICATION	2.7112814021907723E-8	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9991235407742942	WITHOUT_CLASSIFICATION	8.764592257057832E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9995965368632416	WITHOUT_CLASSIFICATION	4.034631367584192E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9995965368632416	WITHOUT_CLASSIFICATION	4.034631367584192E-4	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999919611148961	WITHOUT_CLASSIFICATION	8.038885103901917E-6	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999931588344693	WITHOUT_CLASSIFICATION	6.841165530713553E-6	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999964566773947	WITHOUT_CLASSIFICATION	3.5433226052444306E-6	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999994362494731	WITHOUT_CLASSIFICATION	5.637505269728023E-7	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999998595820415	WITHOUT_CLASSIFICATION	1.4041795855231491E-7	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999975398430037	WITHOUT_CLASSIFICATION	2.46015699638028E-6	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999997505778554	WITHOUT_CLASSIFICATION	2.4942214457653055E-7	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.999998037399759	WITHOUT_CLASSIFICATION	1.9626002410781972E-6	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999964756031537	WITHOUT_CLASSIFICATION	3.524396846277138E-6	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999890082145787	WITHOUT_CLASSIFICATION	1.0991785421261534E-5	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999985441265752	WITHOUT_CLASSIFICATION	1.4558734248105303E-6	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999946948069881	WITHOUT_CLASSIFICATION	5.30519301187555E-6	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.999999742461795	WITHOUT_CLASSIFICATION	2.575382048917644E-7	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999954803257562	WITHOUT_CLASSIFICATION	4.519674243739702E-6	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999967566373266	WITHOUT_CLASSIFICATION	3.2433626735024076E-6	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999985954051148	WITHOUT_CLASSIFICATION	1.4045948852017637E-6	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998005396236547	WITHOUT_CLASSIFICATION	1.9946037634530905E-4	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999984032288335	WITHOUT_CLASSIFICATION	1.5967711666031416E-6	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999991155422455	WITHOUT_CLASSIFICATION	8.844577545304028E-7	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999996945262988	WITHOUT_CLASSIFICATION	3.054737012763912E-7	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999350533782709	WITHOUT_CLASSIFICATION	6.494662172899089E-5	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999947718520034	WITHOUT_CLASSIFICATION	5.228147996609703E-6	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999985616580831	WITHOUT_CLASSIFICATION	1.4383419169932898E-6	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999626783176484	WITHOUT_CLASSIFICATION	3.732168235148356E-5	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999317056452839	WITHOUT_CLASSIFICATION	6.829435471611296E-5	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999055640892538	WITHOUT_CLASSIFICATION	9.443591074623571E-5	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999958934793653	WITHOUT_CLASSIFICATION	4.106520634660864E-6	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999923207920144	WITHOUT_CLASSIFICATION	7.679207985597094E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999997784028378	WITHOUT_CLASSIFICATION	2.215971622318264E-7	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999997784028378	WITHOUT_CLASSIFICATION	2.215971622318264E-7	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999995910326814	WITHOUT_CLASSIFICATION	4.0896731855380253E-7	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999974207212328	WITHOUT_CLASSIFICATION	2.579278767129018E-6	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999907165645723	WITHOUT_CLASSIFICATION	9.283435427755549E-6	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999958504779769	WITHOUT_CLASSIFICATION	4.14952202307058E-6	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999985637011276	WITHOUT_CLASSIFICATION	1.4362988724549702E-6	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999956150394367	WITHOUT_CLASSIFICATION	4.384960563308463E-6	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999952958376742	WITHOUT_CLASSIFICATION	4.704162325842566E-6	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999986277385858	WITHOUT_CLASSIFICATION	1.3722614142680092E-6	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999958898219351	WITHOUT_CLASSIFICATION	4.110178064934652E-6	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999972461339582	WITHOUT_CLASSIFICATION	2.7538660417531342E-6	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.999991128167761	WITHOUT_CLASSIFICATION	8.87183223897776E-6	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999944117133504	WITHOUT_CLASSIFICATION	5.588286649686552E-6	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999911151906978	WITHOUT_CLASSIFICATION	8.884809302083975E-6	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999950030401392	WITHOUT_CLASSIFICATION	4.996959860825301E-6	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999993816619761	WITHOUT_CLASSIFICATION	6.183380239457419E-7	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999962410547705	WITHOUT_CLASSIFICATION	3.7589452295306735E-6	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999983201540121	WITHOUT_CLASSIFICATION	1.6798459878986654E-6	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999982517946585	WITHOUT_CLASSIFICATION	1.7482053414670265E-6	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999936914173978	WITHOUT_CLASSIFICATION	6.30858260228078E-6	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999899951694482	WITHOUT_CLASSIFICATION	1.0004830551719584E-5	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999989377505525	WITHOUT_CLASSIFICATION	1.0622494475501954E-6	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999831443212426	WITHOUT_CLASSIFICATION	1.685567875745034E-5	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999990845354659	WITHOUT_CLASSIFICATION	9.154645341074049E-7	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999997110007712	WITHOUT_CLASSIFICATION	2.8899922873937576E-7	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999995731673589	WITHOUT_CLASSIFICATION	4.2683264110478503E-7	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999977402980814	WITHOUT_CLASSIFICATION	2.259701918581128E-6	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999957472665886	WITHOUT_CLASSIFICATION	4.2527334114246965E-6	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999972481630394	WITHOUT_CLASSIFICATION	2.751836960524744E-6	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999919883146465	WITHOUT_CLASSIFICATION	8.011685353521407E-6	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999996519982159	WITHOUT_CLASSIFICATION	3.4800178400559826E-7	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999947941166988	WITHOUT_CLASSIFICATION	5.2058833012097684E-6	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999992275552094	WITHOUT_CLASSIFICATION	7.72444790649261E-7	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999986292194732	WITHOUT_CLASSIFICATION	1.370780526759499E-6	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999956439153868	WITHOUT_CLASSIFICATION	4.356084613273256E-6	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999968617312945	WITHOUT_CLASSIFICATION	3.1382687054360457E-6	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999914981232367	WITHOUT_CLASSIFICATION	8.501876763197645E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999992314825541	WITHOUT_CLASSIFICATION	7.685174458523534E-7	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999782753244333	WITHOUT_CLASSIFICATION	2.1724675566762488E-5	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999998949989941	WITHOUT_CLASSIFICATION	1.0500100580239821E-7	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999970479892614	WITHOUT_CLASSIFICATION	2.9520107386393892E-6	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999762150879217	WITHOUT_CLASSIFICATION	2.378491207833934E-5	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999992750340153	WITHOUT_CLASSIFICATION	7.24965984768662E-7	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999997570275758	WITHOUT_CLASSIFICATION	2.4297242421444123E-7	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999997570275758	WITHOUT_CLASSIFICATION	2.4297242421444123E-7	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999775217234077	WITHOUT_CLASSIFICATION	2.2478276592202864E-5	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999997959426686	WITHOUT_CLASSIFICATION	2.0405733125869974E-7	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999997741079928	WITHOUT_CLASSIFICATION	2.258920071486574E-7	TEST
// return	WITHOUT_CLASSIFICATION	0.9999977488717419	WITHOUT_CLASSIFICATION	2.251128258146095E-6	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999982676099946	WITHOUT_CLASSIFICATION	1.732390005393965E-6	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999935028194635	WITHOUT_CLASSIFICATION	6.497180536519553E-6	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999997340060214	WITHOUT_CLASSIFICATION	2.6599397860527594E-6	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999815525833287	WITHOUT_CLASSIFICATION	1.8447416671337883E-5	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999819152736426	WITHOUT_CLASSIFICATION	1.8084726357435833E-5	TEST
// tc	WITHOUT_CLASSIFICATION	0.9999797798411889	WITHOUT_CLASSIFICATION	2.0220158811071206E-5	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999852984328781	WITHOUT_CLASSIFICATION	1.4701567121912481E-5	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999954619103406	WITHOUT_CLASSIFICATION	4.538089659457709E-6	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999956149527796	WITHOUT_CLASSIFICATION	4.385047220415339E-6	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999994472283896	WITHOUT_CLASSIFICATION	5.52771610368452E-7	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999989727355759	WITHOUT_CLASSIFICATION	1.0272644240100952E-6	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999945225404631	WITHOUT_CLASSIFICATION	5.47745953689802E-6	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999989068005463	WITHOUT_CLASSIFICATION	1.0931994537877603E-6	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999835031501724	WITHOUT_CLASSIFICATION	1.6496849827673757E-5	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999986705939682	WITHOUT_CLASSIFICATION	1.329406031785885E-6	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999931382774074	WITHOUT_CLASSIFICATION	6.861722592629598E-6	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.99999913082942	WITHOUT_CLASSIFICATION	8.691705799300942E-7	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999944865598257	WITHOUT_CLASSIFICATION	5.513440174275044E-6	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999938774680722	WITHOUT_CLASSIFICATION	6.122531927805376E-6	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999931711547244	WITHOUT_CLASSIFICATION	6.828845275662568E-6	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999986426253884	WITHOUT_CLASSIFICATION	1.3573746116055289E-6	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999972199373184	WITHOUT_CLASSIFICATION	2.780062681664692E-6	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999989287339698	WITHOUT_CLASSIFICATION	1.0712660302815152E-6	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999983701249883	WITHOUT_CLASSIFICATION	1.6298750117200516E-6	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999995479677762	WITHOUT_CLASSIFICATION	4.520322238685597E-7	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999879445744695	WITHOUT_CLASSIFICATION	1.20554255305707E-5	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999961195252375	WITHOUT_CLASSIFICATION	3.8804747625243076E-6	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999911723103723	WITHOUT_CLASSIFICATION	8.827689627842544E-6	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999998376609663	WITHOUT_CLASSIFICATION	1.623390336952594E-7	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.999999751282399	WITHOUT_CLASSIFICATION	2.4871760101068627E-7	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999782753244333	WITHOUT_CLASSIFICATION	2.1724675566762488E-5	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.999996669105699	WITHOUT_CLASSIFICATION	3.3308943010560746E-6	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999832396838757	WITHOUT_CLASSIFICATION	1.6760316124397617E-5	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999832396838757	WITHOUT_CLASSIFICATION	1.6760316124397617E-5	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999909618766096	WITHOUT_CLASSIFICATION	9.038123390393752E-6	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999977945225659	WITHOUT_CLASSIFICATION	2.2054774341226237E-6	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999974870121221	WITHOUT_CLASSIFICATION	2.5129878780016087E-6	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999896298680313	WITHOUT_CLASSIFICATION	1.0370131968710512E-5	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999992592604049	WITHOUT_CLASSIFICATION	7.407395950593221E-7	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999992914423792	WITHOUT_CLASSIFICATION	7.085576207833931E-7	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999992198451586	WITHOUT_CLASSIFICATION	7.801548414594456E-7	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999986457943656	WITHOUT_CLASSIFICATION	1.3542056342986505E-6	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999989186226602	WITHOUT_CLASSIFICATION	1.081377339846307E-6	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999986363673203	WITHOUT_CLASSIFICATION	1.3636326796243141E-6	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999979332565961	WITHOUT_CLASSIFICATION	2.0667434037571704E-6	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999983811300922	WITHOUT_CLASSIFICATION	1.6188699078038665E-6	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999998114984364	WITHOUT_CLASSIFICATION	1.8850156348264687E-7	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999946298727784	WITHOUT_CLASSIFICATION	5.37012722159822E-6	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9998138454698282	WITHOUT_CLASSIFICATION	1.8615453017170648E-4	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.999999838263645	WITHOUT_CLASSIFICATION	1.617363549260827E-7	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.999999541614093	WITHOUT_CLASSIFICATION	4.5838590690728043E-7	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999992608708306	WITHOUT_CLASSIFICATION	7.391291693690659E-7	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999995045363683	WITHOUT_CLASSIFICATION	4.954636316088758E-7	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.999999375213001	WITHOUT_CLASSIFICATION	6.247869990034295E-7	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999989945926553	WITHOUT_CLASSIFICATION	1.0054073447250275E-6	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999994079337104	WITHOUT_CLASSIFICATION	5.920662895492916E-7	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.999999615356576	WITHOUT_CLASSIFICATION	3.8464342393377686E-7	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999996716725184	WITHOUT_CLASSIFICATION	3.2832748173372016E-7	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999997540618757	WITHOUT_CLASSIFICATION	2.4593812428846646E-7	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999995158882148	WITHOUT_CLASSIFICATION	4.841117852025446E-7	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999987998546088	WITHOUT_CLASSIFICATION	1.2001453912351467E-6	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999959889407076	WITHOUT_CLASSIFICATION	4.0110592924212385E-6	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999990570541414	WITHOUT_CLASSIFICATION	9.42945858554781E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999978678546395	WITHOUT_CLASSIFICATION	2.1321453604041797E-6	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999945925018868	WITHOUT_CLASSIFICATION	5.407498113226901E-6	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999977447821867	WITHOUT_CLASSIFICATION	2.2552178132369996E-6	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999903968980437	WITHOUT_CLASSIFICATION	9.603101956398147E-6	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.99999991803761	WITHOUT_CLASSIFICATION	8.196238995731169E-8	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999999477212506	WITHOUT_CLASSIFICATION	5.227874955868361E-8	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999956474723521	WITHOUT_CLASSIFICATION	4.352527647880682E-6	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999993925364918	WITHOUT_CLASSIFICATION	6.074635081861253E-7	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999995158882148	WITHOUT_CLASSIFICATION	4.841117852025446E-7	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999987998546088	WITHOUT_CLASSIFICATION	1.2001453912351467E-6	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999959889407076	WITHOUT_CLASSIFICATION	4.0110592924212385E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999978678546395	WITHOUT_CLASSIFICATION	2.1321453604041797E-6	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999998955020438	WITHOUT_CLASSIFICATION	1.044979561953073E-7	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999994713169436	WITHOUT_CLASSIFICATION	5.286830565017542E-7	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999967156652623	WITHOUT_CLASSIFICATION	3.284334737692068E-6	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999967430736426	WITHOUT_CLASSIFICATION	3.2569263572627046E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999879682096244	WITHOUT_CLASSIFICATION	1.2031790375483156E-5	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999992929505517	WITHOUT_CLASSIFICATION	7.070494482855956E-7	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999949328868623	WITHOUT_CLASSIFICATION	5.067113137696256E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999980603166627	WITHOUT_CLASSIFICATION	1.9396833372516817E-6	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999990548659211	WITHOUT_CLASSIFICATION	9.451340789538448E-7	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999948031077506	WITHOUT_CLASSIFICATION	5.1968922494162315E-6	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999985503304066	WITHOUT_CLASSIFICATION	1.4496695934079097E-6	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999996283964342	WITHOUT_CLASSIFICATION	3.716035658300414E-7	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.999999861950565	WITHOUT_CLASSIFICATION	1.3804943493201397E-7	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999999033167629	WITHOUT_CLASSIFICATION	9.668323715775391E-8	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999963419475723	WITHOUT_CLASSIFICATION	3.6580524276775273E-6	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.999998776906733	WITHOUT_CLASSIFICATION	1.2230932669722546E-6	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999998524004762	WITHOUT_CLASSIFICATION	1.4759952392987128E-7	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999976711259119	WITHOUT_CLASSIFICATION	2.3288740882340863E-6	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999996958155715	WITHOUT_CLASSIFICATION	3.0418442850279456E-7	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999993925364918	WITHOUT_CLASSIFICATION	6.074635081861253E-7	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999994713169436	WITHOUT_CLASSIFICATION	5.286830565017542E-7	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999967156652623	WITHOUT_CLASSIFICATION	3.284334737692068E-6	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999879682096244	WITHOUT_CLASSIFICATION	1.2031790375483156E-5	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999992929505517	WITHOUT_CLASSIFICATION	7.070494482855956E-7	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999949328868623	WITHOUT_CLASSIFICATION	5.067113137696256E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999980603166627	WITHOUT_CLASSIFICATION	1.9396833372516817E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999969339695731	WITHOUT_CLASSIFICATION	3.0660304268963756E-6	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999871241967596	WITHOUT_CLASSIFICATION	1.2875803240488959E-5	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999996924434079	WITHOUT_CLASSIFICATION	3.0755659211498346E-7	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999996741369276	WITHOUT_CLASSIFICATION	3.258630724361322E-7	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.999996412838907	WITHOUT_CLASSIFICATION	3.587161092987374E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.999996412838907	WITHOUT_CLASSIFICATION	3.587161092987374E-6	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999990563310522	WITHOUT_CLASSIFICATION	9.436689478648279E-7	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999990656820353	WITHOUT_CLASSIFICATION	9.343179646249972E-7	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999967267523182	WITHOUT_CLASSIFICATION	3.2732476818796106E-6	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999995359012346	WITHOUT_CLASSIFICATION	4.640987653205081E-7	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999990138246236	WITHOUT_CLASSIFICATION	9.861753764099303E-7	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999997401724805	WITHOUT_CLASSIFICATION	2.5982751952044597E-7	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999959225428872	WITHOUT_CLASSIFICATION	4.077457112921242E-6	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999993494356967	WITHOUT_CLASSIFICATION	6.50564303372468E-7	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999959187961388	WITHOUT_CLASSIFICATION	4.081203861204612E-6	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999962034360673	WITHOUT_CLASSIFICATION	3.7965639325913326E-6	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999996324868595	WITHOUT_CLASSIFICATION	3.675131404781214E-7	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999997067705578	WITHOUT_CLASSIFICATION	2.932294422066694E-7	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999987572896608	WITHOUT_CLASSIFICATION	1.2427103392423625E-6	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999902029810519	WITHOUT_CLASSIFICATION	9.797018948185778E-6	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999986925017439	WITHOUT_CLASSIFICATION	1.3074982560436156E-6	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.999999647022644	WITHOUT_CLASSIFICATION	3.529773559947998E-7	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999987019936392	WITHOUT_CLASSIFICATION	1.2980063607963718E-6	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999983686630362	WITHOUT_CLASSIFICATION	1.631336963815601E-6	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999989613907259	WITHOUT_CLASSIFICATION	1.0386092740885483E-6	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999983165798595	WITHOUT_CLASSIFICATION	1.6834201404398319E-6	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9995713498932101	WITHOUT_CLASSIFICATION	4.2865010678992986E-4	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999991791843573	WITHOUT_CLASSIFICATION	8.208156426630683E-7	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999996450345021	WITHOUT_CLASSIFICATION	3.5496549791263055E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9987037892466817	WITHOUT_CLASSIFICATION	0.0012962107533182768	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999984165784574	WITHOUT_CLASSIFICATION	1.5834215425771345E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999997681274179	WITHOUT_CLASSIFICATION	2.3187258207568887E-7	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999997097836195	WITHOUT_CLASSIFICATION	2.902163804955816E-7	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.999998491860959	WITHOUT_CLASSIFICATION	1.5081390410539673E-6	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999923419232709	WITHOUT_CLASSIFICATION	7.658076729069547E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999984165784574	WITHOUT_CLASSIFICATION	1.5834215425771345E-6	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999997681274179	WITHOUT_CLASSIFICATION	2.3187258207568887E-7	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999902029810519	WITHOUT_CLASSIFICATION	9.797018948185778E-6	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999910402081745	WITHOUT_CLASSIFICATION	8.959791825406872E-6	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999985049217239	WITHOUT_CLASSIFICATION	1.495078276038276E-6	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999976433665613	WITHOUT_CLASSIFICATION	2.3566334387469988E-6	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999992260665914	WITHOUT_CLASSIFICATION	7.739334085425489E-7	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999970982269244	WITHOUT_CLASSIFICATION	2.901773075516115E-6	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999986270515814	WITHOUT_CLASSIFICATION	1.3729484185780594E-6	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999813131003777	WITHOUT_CLASSIFICATION	1.8686899622279822E-5	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999995071463456	WITHOUT_CLASSIFICATION	4.928536543303901E-7	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999445221515953	WITHOUT_CLASSIFICATION	5.5477848404623747E-5	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.999987340609203	WITHOUT_CLASSIFICATION	1.2659390796950949E-5	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999997134021775	WITHOUT_CLASSIFICATION	2.8659782253414943E-7	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.999998938260148	WITHOUT_CLASSIFICATION	1.06173985210095E-6	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999997002542422	WITHOUT_CLASSIFICATION	2.997457577808602E-7	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999998077231061	WITHOUT_CLASSIFICATION	1.9227689390904225E-7	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999995830514268	WITHOUT_CLASSIFICATION	4.1694857315134726E-7	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.999991676036342	WITHOUT_CLASSIFICATION	8.323963657944742E-6	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999999725283696	WITHOUT_CLASSIFICATION	2.7471630467189778E-8	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999961098228917	WITHOUT_CLASSIFICATION	3.890177108288076E-6	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.999999887940055	WITHOUT_CLASSIFICATION	1.1205994506215607E-7	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999969194076496	WITHOUT_CLASSIFICATION	3.0805923503410114E-6	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999994854735297	WITHOUT_CLASSIFICATION	5.145264703202292E-7	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999955456118377	WITHOUT_CLASSIFICATION	4.454388162412957E-6	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999965442987974	WITHOUT_CLASSIFICATION	3.455701202630677E-6	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999367953251	WITHOUT_CLASSIFICATION	6.320467497427183E-8	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999998894693061	WITHOUT_CLASSIFICATION	1.1053069388877663E-7	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.999996177727545	WITHOUT_CLASSIFICATION	3.822272454999191E-6	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9971781308963161	WITHOUT_CLASSIFICATION	0.0028218691036838222	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9998292054823243	WITHOUT_CLASSIFICATION	1.7079451767554202E-4	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999988753439563	WITHOUT_CLASSIFICATION	1.1246560437034567E-6	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999996285912937	WITHOUT_CLASSIFICATION	3.714087062406884E-7	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999997772430909	WITHOUT_CLASSIFICATION	2.2275690923365941E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999989901411916	WITHOUT_CLASSIFICATION	1.0098588083750623E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999989901411916	WITHOUT_CLASSIFICATION	1.0098588083750623E-6	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999987572896608	WITHOUT_CLASSIFICATION	1.2427103392423625E-6	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999987257266937	WITHOUT_CLASSIFICATION	1.2742733063368728E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999957073982442	WITHOUT_CLASSIFICATION	4.292601755795825E-6	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999951684014035	WITHOUT_CLASSIFICATION	4.831598596549226E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999936489331143	WITHOUT_CLASSIFICATION	6.351066885753024E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999936489331143	WITHOUT_CLASSIFICATION	6.351066885753024E-6	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999967525270186	WITHOUT_CLASSIFICATION	3.2474729813358888E-6	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999928918207691	WITHOUT_CLASSIFICATION	7.1081792308338025E-6	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999981113367074	WITHOUT_CLASSIFICATION	1.888663292562153E-6	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999994645210615	WITHOUT_CLASSIFICATION	5.35478938501071E-7	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999947531723254	WITHOUT_CLASSIFICATION	5.246827674567732E-6	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.99999984187386	WITHOUT_CLASSIFICATION	1.5812614004137303E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999888284226461	WITHOUT_CLASSIFICATION	1.1171577353879702E-5	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.999999212724344	WITHOUT_CLASSIFICATION	7.872756559075555E-7	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999978445226705	WITHOUT_CLASSIFICATION	2.1554773295420017E-6	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999996970501112	WITHOUT_CLASSIFICATION	3.029498887843223E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999877158313357	WITHOUT_CLASSIFICATION	1.2284168664236093E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999939595815591	WITHOUT_CLASSIFICATION	6.040418440842334E-6	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.999976396681692	WITHOUT_CLASSIFICATION	2.360331830793146E-5	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999998993432317	WITHOUT_CLASSIFICATION	1.0065676829077174E-7	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999975877493569	WITHOUT_CLASSIFICATION	2.412250643107364E-5	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999731215548094	WITHOUT_CLASSIFICATION	2.687844519049851E-5	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999988875199157	WITHOUT_CLASSIFICATION	1.1124800843020423E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999988875199157	WITHOUT_CLASSIFICATION	1.1124800843020423E-6	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999989512043526	WITHOUT_CLASSIFICATION	1.0487956474325819E-6	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999989512043526	WITHOUT_CLASSIFICATION	1.0487956474325819E-6	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999936497834316	WITHOUT_CLASSIFICATION	6.3502165683665465E-6	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9995145721133788	WITHOUT_CLASSIFICATION	4.854278866211735E-4	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999995993089186	WITHOUT_CLASSIFICATION	4.0069108150189315E-7	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999998606180426	WITHOUT_CLASSIFICATION	1.3938195740288172E-7	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999997782533836	WITHOUT_CLASSIFICATION	2.217466163345229E-7	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999925153680749	WITHOUT_CLASSIFICATION	7.484631925093437E-6	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.999999084985633	WITHOUT_CLASSIFICATION	9.150143669810068E-7	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999939595815591	WITHOUT_CLASSIFICATION	6.040418440842334E-6	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.999976396681692	WITHOUT_CLASSIFICATION	2.360331830793146E-5	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999975877493569	WITHOUT_CLASSIFICATION	2.412250643107364E-5	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999984655424986	WITHOUT_CLASSIFICATION	1.5344575014703379E-6	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999934648800054	WITHOUT_CLASSIFICATION	6.535119994635503E-6	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999993952917086	WITHOUT_CLASSIFICATION	6.047082914037276E-7	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999982806467554	WITHOUT_CLASSIFICATION	1.7193532444688812E-6	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999966664525869	WITHOUT_CLASSIFICATION	3.33354741313061E-6	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999893411001433	WITHOUT_CLASSIFICATION	1.0658899856679026E-5	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999986181353836	WITHOUT_CLASSIFICATION	1.3818646163643688E-6	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999987753350966	WITHOUT_CLASSIFICATION	1.2246649033448074E-6	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999904987595967	WITHOUT_CLASSIFICATION	9.501240403202148E-6	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.999997435782831	WITHOUT_CLASSIFICATION	2.5642171690167554E-6	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999986096029067	WITHOUT_CLASSIFICATION	1.3903970932769114E-6	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999995561876948	WITHOUT_CLASSIFICATION	4.438123052415167E-7	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999965344349965	WITHOUT_CLASSIFICATION	3.4655650034774717E-6	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999966393944517	WITHOUT_CLASSIFICATION	3.3606055482952997E-6	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.999997350107256	WITHOUT_CLASSIFICATION	2.6498927440428927E-6	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999995920574106	WITHOUT_CLASSIFICATION	4.079425892942695E-7	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999972530242823	WITHOUT_CLASSIFICATION	2.7469757176488213E-6	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999954011676192	WITHOUT_CLASSIFICATION	4.598832380810982E-6	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9998150037377949	WITHOUT_CLASSIFICATION	1.8499626220523164E-4	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.999999197393104	WITHOUT_CLASSIFICATION	8.026068960369592E-7	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999958194744718	WITHOUT_CLASSIFICATION	4.180525528195355E-6	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999983286918062	WITHOUT_CLASSIFICATION	1.6713081938245635E-6	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.999953029233304	WITHOUT_CLASSIFICATION	4.697076669607278E-5	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999958181958776	WITHOUT_CLASSIFICATION	4.181804122392106E-6	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999989030132456	WITHOUT_CLASSIFICATION	1.0969867543931834E-6	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999979327386872	WITHOUT_CLASSIFICATION	2.0672613127901013E-6	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.999999748941459	WITHOUT_CLASSIFICATION	2.510585409688081E-7	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.999994615008653	WITHOUT_CLASSIFICATION	5.38499134695313E-6	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999991276650574	WITHOUT_CLASSIFICATION	8.723349425190262E-7	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999993111849433	WITHOUT_CLASSIFICATION	6.888150567243923E-7	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999976537803714	WITHOUT_CLASSIFICATION	2.3462196284732044E-6	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999961001482058	WITHOUT_CLASSIFICATION	3.8998517941830616E-6	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999992755942128	WITHOUT_CLASSIFICATION	7.244057871786058E-7	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999998789258218	WITHOUT_CLASSIFICATION	1.2107417815305737E-7	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999996934942501	WITHOUT_CLASSIFICATION	3.0650574987368224E-7	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999983084270954	WITHOUT_CLASSIFICATION	1.6915729046786782E-6	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999993479241458	WITHOUT_CLASSIFICATION	6.52075854111725E-7	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999991440385181	WITHOUT_CLASSIFICATION	8.559614819154398E-7	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999700327962235	WITHOUT_CLASSIFICATION	2.9967203776538923E-5	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999995424831735	WITHOUT_CLASSIFICATION	4.5751682648001623E-7	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999998010163733	WITHOUT_CLASSIFICATION	1.989836265722693E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999957073982442	WITHOUT_CLASSIFICATION	4.292601755795825E-6	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999993479241458	WITHOUT_CLASSIFICATION	6.52075854111725E-7	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999769515168965	WITHOUT_CLASSIFICATION	2.304848310362629E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999999966318732	WITHOUT_CLASSIFICATION	3.3681268044523786E-8	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999991752438808	WITHOUT_CLASSIFICATION	8.247561190995553E-7	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999988107566236	WITHOUT_CLASSIFICATION	1.1892433764273544E-6	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999988107566236	WITHOUT_CLASSIFICATION	1.1892433764273544E-6	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999996178842722	WITHOUT_CLASSIFICATION	3.821157278205932E-7	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999997772120232	WITHOUT_CLASSIFICATION	2.2278797687504453E-7	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.99999971535228	WITHOUT_CLASSIFICATION	2.846477199314151E-7	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999998916314243	WITHOUT_CLASSIFICATION	1.0836857555452244E-7	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999997919560791	WITHOUT_CLASSIFICATION	2.0804392097442025E-7	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999985886919018	WITHOUT_CLASSIFICATION	1.4113080982130822E-6	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999990756268904	WITHOUT_CLASSIFICATION	9.243731095315143E-7	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999875766534493	WITHOUT_CLASSIFICATION	1.2423346550678143E-5	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999986467592741	WITHOUT_CLASSIFICATION	1.353240725888059E-6	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999986467592741	WITHOUT_CLASSIFICATION	1.353240725888059E-6	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999968483555625	WITHOUT_CLASSIFICATION	3.1516444375044367E-6	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999069653404645	WITHOUT_CLASSIFICATION	9.303465953554773E-5	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999999363688012	WITHOUT_CLASSIFICATION	6.363119870572747E-8	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999986978654167	WITHOUT_CLASSIFICATION	1.3021345832957644E-6	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999996535801905	WITHOUT_CLASSIFICATION	3.4641980945051173E-7	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999998263434249	WITHOUT_CLASSIFICATION	1.7365657516111927E-7	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.999999996889957	WITHOUT_CLASSIFICATION	3.1100429577950145E-9	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.999988813333837	WITHOUT_CLASSIFICATION	1.1186666163024589E-5	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999928417241273	WITHOUT_CLASSIFICATION	7.158275872841388E-6	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9993657493206333	WITHOUT_CLASSIFICATION	6.342506793667698E-4	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9998715275168573	WITHOUT_CLASSIFICATION	1.284724831427265E-4	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999874804748755	WITHOUT_CLASSIFICATION	1.2519525124543223E-5	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999997753894023	WITHOUT_CLASSIFICATION	2.2461059763819207E-7	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999897075847513	WITHOUT_CLASSIFICATION	1.0292415248736013E-5	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999897075847513	WITHOUT_CLASSIFICATION	1.0292415248736013E-5	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999945547607316	WITHOUT_CLASSIFICATION	5.4452392683396E-6	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999980603166627	WITHOUT_CLASSIFICATION	1.9396833372516817E-6	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9988247443299152	WITHOUT_CLASSIFICATION	0.0011752556700847662	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999998200384667	WITHOUT_CLASSIFICATION	1.7996153327596308E-7	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999998477392965	WITHOUT_CLASSIFICATION	1.522607033782624E-7	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999984356088937	WITHOUT_CLASSIFICATION	1.5643911063067739E-6	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999679500249324	WITHOUT_CLASSIFICATION	3.204997506758385E-5	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.999999490505289	WITHOUT_CLASSIFICATION	5.094947110324194E-7	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999978205166996	WITHOUT_CLASSIFICATION	2.1794833003931927E-6	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999953520216867	WITHOUT_CLASSIFICATION	4.6479783133756166E-6	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999925103257935	WITHOUT_CLASSIFICATION	7.489674206474439E-6	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999884060826966	WITHOUT_CLASSIFICATION	1.159391730337353E-5	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999257929090374	WITHOUT_CLASSIFICATION	7.420709096260688E-5	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999980121024226	WITHOUT_CLASSIFICATION	1.9878975774463754E-6	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999908100636813	WITHOUT_CLASSIFICATION	9.189936318729938E-6	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999960722914097	WITHOUT_CLASSIFICATION	3.927708590326942E-6	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999944008072347	WITHOUT_CLASSIFICATION	5.599192765350234E-6	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999991220499304	WITHOUT_CLASSIFICATION	8.779500695900609E-7	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999997035505119	WITHOUT_CLASSIFICATION	2.9644948810129273E-7	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999998196149582	WITHOUT_CLASSIFICATION	1.8038504180309137E-7	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9999864130102313	WITHOUT_CLASSIFICATION	1.3586989768652034E-5	TEST
// start class	WITHOUT_CLASSIFICATION	0.999995298779989	WITHOUT_CLASSIFICATION	4.701220010976623E-6	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999989827206993	WITHOUT_CLASSIFICATION	1.0172793006705863E-6	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999996400385662	WITHOUT_CLASSIFICATION	3.5996143380488883E-7	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9999417727398181	WITHOUT_CLASSIFICATION	5.822726018193184E-5	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999759499018016	WITHOUT_CLASSIFICATION	2.405009819839644E-5	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999976581499017	WITHOUT_CLASSIFICATION	2.3418500981896376E-6	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.999998507482308	WITHOUT_CLASSIFICATION	1.4925176921010812E-6	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.999997423143531	WITHOUT_CLASSIFICATION	2.57685646889802E-6	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999957922121048	WITHOUT_CLASSIFICATION	4.2077878952317935E-6	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999957554098814	WITHOUT_CLASSIFICATION	4.244590118595461E-6	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999990409045999	WITHOUT_CLASSIFICATION	9.590954000238748E-7	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999871099751678	WITHOUT_CLASSIFICATION	1.2890024832224093E-5	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999994173430548	WITHOUT_CLASSIFICATION	5.826569452910447E-7	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.999999004333215	WITHOUT_CLASSIFICATION	9.956667850460057E-7	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999994559989173	WITHOUT_CLASSIFICATION	5.44001082759354E-7	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999932600136396	WITHOUT_CLASSIFICATION	6.739986360273237E-6	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999849448982844	WITHOUT_CLASSIFICATION	1.5055101715716308E-5	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999942634998408	WITHOUT_CLASSIFICATION	5.736500159283834E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.999997662904435	WITHOUT_CLASSIFICATION	2.3370955648828676E-6	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999994827897408	WITHOUT_CLASSIFICATION	5.172102592100813E-7	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999995115222335	WITHOUT_CLASSIFICATION	4.88477766440221E-7	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999881116114991	WITHOUT_CLASSIFICATION	1.1888388500959781E-5	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999994413055497	WITHOUT_CLASSIFICATION	5.586944503628733E-7	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9999384209684979	WITHOUT_CLASSIFICATION	6.157903150210244E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999949749370466	WITHOUT_CLASSIFICATION	5.02506295339361E-6	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999962168918924	WITHOUT_CLASSIFICATION	3.7831081074625627E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999998252377655	WITHOUT_CLASSIFICATION	1.7476223439062064E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999075537806367	WITHOUT_CLASSIFICATION	9.244621936330858E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999984165784574	WITHOUT_CLASSIFICATION	1.5834215425771345E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999984165784574	WITHOUT_CLASSIFICATION	1.5834215425771345E-6	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.999999813431522	WITHOUT_CLASSIFICATION	1.8656847786397497E-7	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.999995130163261	WITHOUT_CLASSIFICATION	4.869836738954676E-6	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999843663128575	WITHOUT_CLASSIFICATION	1.5633687142594297E-5	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999970340029987	WITHOUT_CLASSIFICATION	2.9659970012793562E-6	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999977426294503	WITHOUT_CLASSIFICATION	2.2573705498066832E-6	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999982412677736	WITHOUT_CLASSIFICATION	1.7587322264233928E-6	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999987992574901	WITHOUT_CLASSIFICATION	1.2007425098412381E-6	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999948847458768	WITHOUT_CLASSIFICATION	5.115254123188484E-6	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999501244279	WITHOUT_CLASSIFICATION	4.9875572027330867E-8	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999953988629606	WITHOUT_CLASSIFICATION	4.601137039414996E-6	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997052504737	WITHOUT_CLASSIFICATION	2.9474952638552354E-7	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997052504737	WITHOUT_CLASSIFICATION	2.9474952638552354E-7	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997052504737	WITHOUT_CLASSIFICATION	2.9474952638552354E-7	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999916576588	WITHOUT_CLASSIFICATION	8.342341145613225E-9	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999998784558681	WITHOUT_CLASSIFICATION	1.2154413186928902E-7	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999984693502119	WITHOUT_CLASSIFICATION	1.5306497881108724E-6	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999974370845535	WITHOUT_CLASSIFICATION	2.5629154466669707E-6	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999974370845535	WITHOUT_CLASSIFICATION	2.5629154466669707E-6	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999994475109313	WITHOUT_CLASSIFICATION	5.524890686921469E-7	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999943247261848	WITHOUT_CLASSIFICATION	5.675273815181114E-6	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999878685615731	WITHOUT_CLASSIFICATION	1.2131438426802883E-5	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999980828713069	WITHOUT_CLASSIFICATION	1.9171286931356003E-6	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999955854228537	WITHOUT_CLASSIFICATION	4.4145771462741345E-6	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999672927520034	WITHOUT_CLASSIFICATION	3.270724799666011E-5	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999991908405841	WITHOUT_CLASSIFICATION	8.091594160191109E-7	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999998477612401	WITHOUT_CLASSIFICATION	1.5223875997788621E-7	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999956355902191	WITHOUT_CLASSIFICATION	4.364409780856378E-6	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999996098506924	WITHOUT_CLASSIFICATION	3.9014930764353493E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999996098506924	WITHOUT_CLASSIFICATION	3.9014930764353493E-7	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999684842890846	WITHOUT_CLASSIFICATION	3.151571091537E-5	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9998418702597826	WITHOUT_CLASSIFICATION	1.5812974021748395E-4	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999963948556977	WITHOUT_CLASSIFICATION	3.605144302270431E-6	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999908027665886	WITHOUT_CLASSIFICATION	9.197233411407375E-6	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999996781505038	WITHOUT_CLASSIFICATION	3.2184949620553753E-7	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.999997653297378	WITHOUT_CLASSIFICATION	2.3467026220246807E-6	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999866377070067	WITHOUT_CLASSIFICATION	1.3362292993349922E-5	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999862416767756	WITHOUT_CLASSIFICATION	1.3758323224418047E-5	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.999962553391628	WITHOUT_CLASSIFICATION	3.7446608372012456E-5	TEST
// POP	WITHOUT_CLASSIFICATION	0.999918582190549	WITHOUT_CLASSIFICATION	8.141780945101403E-5	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999996275197723	WITHOUT_CLASSIFICATION	3.724802275739044E-7	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999509837985564	WITHOUT_CLASSIFICATION	4.901620144353245E-5	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9999626349519463	WITHOUT_CLASSIFICATION	3.7365048053785335E-5	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999988972025077	WITHOUT_CLASSIFICATION	1.1027974923863744E-6	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999487838980791	WITHOUT_CLASSIFICATION	5.1216101920885535E-5	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999996143630562	WITHOUT_CLASSIFICATION	3.856369437974399E-7	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999981218583153	WITHOUT_CLASSIFICATION	1.8781416847120162E-6	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999668433629043	WITHOUT_CLASSIFICATION	3.315663709563743E-5	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999909916580377	WITHOUT_CLASSIFICATION	9.008341962272322E-6	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999995353224167	WITHOUT_CLASSIFICATION	4.6467758324938235E-7	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999969366309965	WITHOUT_CLASSIFICATION	3.0633690035618315E-6	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999983684020916	WITHOUT_CLASSIFICATION	1.6315979084525377E-6	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999970202603405	WITHOUT_CLASSIFICATION	2.9797396594661184E-6	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999085084383892	WITHOUT_CLASSIFICATION	9.149156161086756E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999599679576946	WITHOUT_CLASSIFICATION	4.003204230546669E-5	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999995770929685	WITHOUT_CLASSIFICATION	4.2290703157357063E-7	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999969311016688	WITHOUT_CLASSIFICATION	3.068898331180743E-6	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999902162622326	WITHOUT_CLASSIFICATION	9.78373776736091E-6	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999996062585071	WITHOUT_CLASSIFICATION	3.937414928701842E-7	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999640882346585	WITHOUT_CLASSIFICATION	3.59117653414597E-5	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999111725229161	WITHOUT_CLASSIFICATION	8.882747708397018E-5	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999938740839048	WITHOUT_CLASSIFICATION	6.125916095096759E-6	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999894131575481	WITHOUT_CLASSIFICATION	1.058684245196537E-5	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999111725229161	WITHOUT_CLASSIFICATION	8.882747708397018E-5	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999931312808151	WITHOUT_CLASSIFICATION	6.868719184910602E-6	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999700197585715	WITHOUT_CLASSIFICATION	2.9980241428476075E-5	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999881464451774	WITHOUT_CLASSIFICATION	1.1853554822547355E-5	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999952620331471	WITHOUT_CLASSIFICATION	4.737966852855124E-6	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999940616688046	WITHOUT_CLASSIFICATION	5.938331195508409E-6	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999988213224572	WITHOUT_CLASSIFICATION	1.1786775426886205E-6	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999918165859981	WITHOUT_CLASSIFICATION	8.1834140019052E-6	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999920257425683	WITHOUT_CLASSIFICATION	7.974257431712385E-6	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.999988166386213	WITHOUT_CLASSIFICATION	1.1833613787010917E-5	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.999952011420145	WITHOUT_CLASSIFICATION	4.798857985506344E-5	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999453648289865	WITHOUT_CLASSIFICATION	5.463517101344753E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999707363921473	WITHOUT_CLASSIFICATION	2.926360785268379E-5	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999669056105742	WITHOUT_CLASSIFICATION	3.3094389425794744E-5	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999947604226054	WITHOUT_CLASSIFICATION	5.2395773946987104E-6	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999928011772713	WITHOUT_CLASSIFICATION	7.1988227287072105E-6	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999968150587515	WITHOUT_CLASSIFICATION	3.184941248567385E-6	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999945548409008	WITHOUT_CLASSIFICATION	5.4451590991753595E-6	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999937659562851	WITHOUT_CLASSIFICATION	6.234043714860459E-6	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999985125993941	WITHOUT_CLASSIFICATION	1.4874006058128021E-6	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999711589302932	WITHOUT_CLASSIFICATION	2.88410697068522E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999883312618226	WITHOUT_CLASSIFICATION	1.166873817733792E-5	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999916649344317	WITHOUT_CLASSIFICATION	8.335065568355484E-6	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.999975226518554	WITHOUT_CLASSIFICATION	2.4773481446113375E-5	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999953789914295	WITHOUT_CLASSIFICATION	4.621008570443765E-6	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.999983227421576	WITHOUT_CLASSIFICATION	1.6772578423989934E-5	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999939775714805	WITHOUT_CLASSIFICATION	6.022428519461626E-6	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999677448416603	WITHOUT_CLASSIFICATION	3.225515833978419E-5	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999922268836848	WITHOUT_CLASSIFICATION	7.773116315186229E-6	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999985514951499	WITHOUT_CLASSIFICATION	1.4485048500540833E-6	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999976740355594	WITHOUT_CLASSIFICATION	2.325964440708557E-6	TEST
// hash	WITHOUT_CLASSIFICATION	0.999973976364972	WITHOUT_CLASSIFICATION	2.6023635027975833E-5	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9997729911976193	WITHOUT_CLASSIFICATION	2.270088023807953E-4	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999926444897425	WITHOUT_CLASSIFICATION	7.355510257477503E-6	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999977765300895	WITHOUT_CLASSIFICATION	2.2234699104252176E-6	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999935959630003	WITHOUT_CLASSIFICATION	6.4040369996894E-6	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999930976443903	WITHOUT_CLASSIFICATION	6.9023556097186155E-6	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999951211276001	WITHOUT_CLASSIFICATION	4.878872399799671E-6	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9998886433053767	WITHOUT_CLASSIFICATION	1.1135669462320873E-4	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999980893557365	WITHOUT_CLASSIFICATION	1.910644263467581E-6	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999902319830993	WITHOUT_CLASSIFICATION	9.768016900717291E-6	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999867828657237	WITHOUT_CLASSIFICATION	1.3217134276219267E-5	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999978627629847	WITHOUT_CLASSIFICATION	2.137237015158137E-6	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999837903973032	WITHOUT_CLASSIFICATION	1.620960269675806E-5	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999982651298929	WITHOUT_CLASSIFICATION	1.7348701070878276E-6	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999935205356992	WITHOUT_CLASSIFICATION	6.4794643007166975E-6	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999886426369441	WITHOUT_CLASSIFICATION	1.1357363056001805E-5	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999958463065275	WITHOUT_CLASSIFICATION	4.153693472456893E-6	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999941312215105	WITHOUT_CLASSIFICATION	5.868778489551979E-6	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999991831352191	WITHOUT_CLASSIFICATION	8.168647808456835E-7	TEST
// space	WITHOUT_CLASSIFICATION	0.9999946741005757	WITHOUT_CLASSIFICATION	5.3258994242184106E-6	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9998820942537595	WITHOUT_CLASSIFICATION	1.179057462404472E-4	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999934325473111	WITHOUT_CLASSIFICATION	6.5674526888834745E-6	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999992224985924	WITHOUT_CLASSIFICATION	7.775014076650993E-7	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999991831352191	WITHOUT_CLASSIFICATION	8.168647808456835E-7	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999884513067582	WITHOUT_CLASSIFICATION	1.1548693241743565E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999884513067582	WITHOUT_CLASSIFICATION	1.1548693241743565E-5	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999311297042892	WITHOUT_CLASSIFICATION	6.887029571080573E-5	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999979881441473	WITHOUT_CLASSIFICATION	2.0118558526511414E-6	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999991929539893	WITHOUT_CLASSIFICATION	8.070460106538571E-7	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999976432347645	WITHOUT_CLASSIFICATION	2.3567652355887483E-6	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999987027918279	WITHOUT_CLASSIFICATION	1.2972081720257498E-6	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999983903863103	WITHOUT_CLASSIFICATION	1.6096136896303503E-6	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999948029408988	WITHOUT_CLASSIFICATION	5.197059101157798E-6	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9395049145520895	WITHOUT_CLASSIFICATION	0.06049508544791035	TEST
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999998416847571	WITHOUT_CLASSIFICATION	1.583152428548366E-7	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999782562296424	WITHOUT_CLASSIFICATION	2.1743770357606026E-5	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.999998843715176	WITHOUT_CLASSIFICATION	1.1562848240863055E-6	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999236486898	WITHOUT_CLASSIFICATION	7.635131014927923E-8	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9998885009895404	WITHOUT_CLASSIFICATION	1.1149901045959956E-4	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999762779704162	WITHOUT_CLASSIFICATION	2.372202958387738E-5	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999825455071557	WITHOUT_CLASSIFICATION	1.7454492844313286E-5	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999759037943224	WITHOUT_CLASSIFICATION	2.4096205677665435E-5	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.999998121730932	WITHOUT_CLASSIFICATION	1.8782690680060994E-6	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997967617670257	WITHOUT_CLASSIFICATION	2.032382329743614E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997967617670257	WITHOUT_CLASSIFICATION	2.032382329743614E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997967617670257	WITHOUT_CLASSIFICATION	2.032382329743614E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997967617670257	WITHOUT_CLASSIFICATION	2.032382329743614E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997967617670257	WITHOUT_CLASSIFICATION	2.032382329743614E-4	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999903869676272	WITHOUT_CLASSIFICATION	9.613032372733106E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999822273554944	WITHOUT_CLASSIFICATION	1.7772644505596538E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999949939617852	WITHOUT_CLASSIFICATION	5.006038214801138E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999986431939712	WITHOUT_CLASSIFICATION	1.3568060287137285E-6	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999768779405076	WITHOUT_CLASSIFICATION	2.312205949244175E-5	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999993213366802	WITHOUT_CLASSIFICATION	6.786633197434181E-7	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999786253297556	WITHOUT_CLASSIFICATION	2.1374670244519264E-5	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999925321094987	WITHOUT_CLASSIFICATION	7.4678905012694304E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999991026641872	WITHOUT_CLASSIFICATION	8.97335812723586E-7	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999943029037621	WITHOUT_CLASSIFICATION	5.697096237875729E-6	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999932934206638	WITHOUT_CLASSIFICATION	6.706579336192215E-6	TEST
// line 303	WITHOUT_CLASSIFICATION	0.999989999491601	WITHOUT_CLASSIFICATION	1.0000508399091395E-5	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999934841692932	WITHOUT_CLASSIFICATION	6.515830706701089E-6	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999929395463474	WITHOUT_CLASSIFICATION	7.060453652604778E-6	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999933855067272	WITHOUT_CLASSIFICATION	6.614493272738805E-6	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999924420030704	WITHOUT_CLASSIFICATION	7.557996929697394E-6	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999921196162932	WITHOUT_CLASSIFICATION	7.880383706777585E-6	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999930530182997	WITHOUT_CLASSIFICATION	6.946981700454437E-6	TEST
// line 344	WITHOUT_CLASSIFICATION	0.999992235223754	WITHOUT_CLASSIFICATION	7.764776245963428E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999933021607376	WITHOUT_CLASSIFICATION	6.6978392624182335E-6	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999922059019044	WITHOUT_CLASSIFICATION	7.79409809568095E-6	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999927114922817	WITHOUT_CLASSIFICATION	7.288507718222952E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.999992705682948	WITHOUT_CLASSIFICATION	7.294317052045717E-6	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999923920444638	WITHOUT_CLASSIFICATION	7.607955536248457E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.999992171696662	WITHOUT_CLASSIFICATION	7.828303338043432E-6	TEST
// line 407	WITHOUT_CLASSIFICATION	0.999992032989911	WITHOUT_CLASSIFICATION	7.967010089001388E-6	TEST
// line 411	WITHOUT_CLASSIFICATION	0.999994040391037	WITHOUT_CLASSIFICATION	5.959608963068076E-6	TEST
// line 414	WITHOUT_CLASSIFICATION	0.999993751254612	WITHOUT_CLASSIFICATION	6.2487453880368916E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999939501507173	WITHOUT_CLASSIFICATION	6.0498492825841045E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999913084246184	WITHOUT_CLASSIFICATION	8.691575381669863E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999930036851165	WITHOUT_CLASSIFICATION	6.9963148834621015E-6	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999922464061639	WITHOUT_CLASSIFICATION	7.753593836130365E-6	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999921587458304	WITHOUT_CLASSIFICATION	7.841254169662702E-6	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999931017376892	WITHOUT_CLASSIFICATION	6.898262310896392E-6	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999932058519607	WITHOUT_CLASSIFICATION	6.794148039216751E-6	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999933643605158	WITHOUT_CLASSIFICATION	6.635639484295197E-6	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999931349396076	WITHOUT_CLASSIFICATION	6.865060392420165E-6	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999933413314908	WITHOUT_CLASSIFICATION	6.65866850931178E-6	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999922183107581	WITHOUT_CLASSIFICATION	7.78168924183526E-6	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999924149368943	WITHOUT_CLASSIFICATION	7.585063105725508E-6	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999928331624958	WITHOUT_CLASSIFICATION	7.1668375042223125E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.999992852947246	WITHOUT_CLASSIFICATION	7.147052753916433E-6	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999921945601183	WITHOUT_CLASSIFICATION	7.805439881628844E-6	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999918592075128	WITHOUT_CLASSIFICATION	8.14079248729855E-6	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999927659286445	WITHOUT_CLASSIFICATION	7.2340713555713105E-6	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999914584239636	WITHOUT_CLASSIFICATION	8.541576036391533E-6	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999922297121874	WITHOUT_CLASSIFICATION	7.770287812649544E-6	TEST
// line 510	WITHOUT_CLASSIFICATION	0.999993035083093	WITHOUT_CLASSIFICATION	6.964916906968214E-6	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999930906187223	WITHOUT_CLASSIFICATION	6.909381277680529E-6	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999931774120309	WITHOUT_CLASSIFICATION	6.822587969211385E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999949939617852	WITHOUT_CLASSIFICATION	5.006038214801138E-5	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999926148500174	WITHOUT_CLASSIFICATION	7.38514998257499E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999916494902557	WITHOUT_CLASSIFICATION	8.350509744412177E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999920959037707	WITHOUT_CLASSIFICATION	7.904096229310584E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.999993046452984	WITHOUT_CLASSIFICATION	6.953547015906028E-6	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999932714941813	WITHOUT_CLASSIFICATION	6.728505818632264E-6	TEST
// line 559	WITHOUT_CLASSIFICATION	0.999992335445801	WITHOUT_CLASSIFICATION	7.664554198883695E-6	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999924095319114	WITHOUT_CLASSIFICATION	7.590468088615613E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999932714941813	WITHOUT_CLASSIFICATION	6.728505818632264E-6	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999923931472794	WITHOUT_CLASSIFICATION	7.606852720526318E-6	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999934563015822	WITHOUT_CLASSIFICATION	6.54369841774223E-6	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999932195922012	WITHOUT_CLASSIFICATION	6.780407798732963E-6	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999932194354345	WITHOUT_CLASSIFICATION	6.780564565542117E-6	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999923937401416	WITHOUT_CLASSIFICATION	7.606259858457059E-6	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999914614920967	WITHOUT_CLASSIFICATION	8.53850790324126E-6	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999922321923668	WITHOUT_CLASSIFICATION	7.767807633166892E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999930386117111	WITHOUT_CLASSIFICATION	6.961388289036833E-6	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999930670706276	WITHOUT_CLASSIFICATION	6.932929372322094E-6	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999938577742844	WITHOUT_CLASSIFICATION	6.142225715710588E-6	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999921882262953	WITHOUT_CLASSIFICATION	7.811773704699118E-6	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999920719191088	WITHOUT_CLASSIFICATION	7.928080891251823E-6	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999920999081989	WITHOUT_CLASSIFICATION	7.900091801134696E-6	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999929970306309	WITHOUT_CLASSIFICATION	7.002969368961944E-6	TEST
// line 655	WITHOUT_CLASSIFICATION	0.999993298601144	WITHOUT_CLASSIFICATION	6.701398856045563E-6	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999919230127113	WITHOUT_CLASSIFICATION	8.076987288704346E-6	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999934590300702	WITHOUT_CLASSIFICATION	6.540969929779624E-6	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999924136523719	WITHOUT_CLASSIFICATION	7.586347628017764E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999935024087235	WITHOUT_CLASSIFICATION	6.497591276416656E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999923389368306	WITHOUT_CLASSIFICATION	7.661063169438913E-6	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999932496232556	WITHOUT_CLASSIFICATION	6.750376744455476E-6	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999940790787387	WITHOUT_CLASSIFICATION	5.9209212612541805E-6	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999916944455365	WITHOUT_CLASSIFICATION	8.305554463455668E-6	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999933144145472	WITHOUT_CLASSIFICATION	6.6855854527249824E-6	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999916077146238	WITHOUT_CLASSIFICATION	8.392285376183756E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999925468703466	WITHOUT_CLASSIFICATION	7.45312965339978E-6	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999925823675722	WITHOUT_CLASSIFICATION	7.417632427773223E-6	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999922289566542	WITHOUT_CLASSIFICATION	7.77104334577021E-6	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999941510481357	WITHOUT_CLASSIFICATION	5.848951864343224E-6	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999932438760321	WITHOUT_CLASSIFICATION	6.7561239679695755E-6	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999934307517553	WITHOUT_CLASSIFICATION	6.569248244798117E-6	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999921428553264	WITHOUT_CLASSIFICATION	7.857144673444102E-6	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999925636515182	WITHOUT_CLASSIFICATION	7.436348481709249E-6	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999925475995634	WITHOUT_CLASSIFICATION	7.452400436612289E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999934017853999	WITHOUT_CLASSIFICATION	6.598214600139783E-6	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999934313410223	WITHOUT_CLASSIFICATION	6.568658977700917E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999931635592002	WITHOUT_CLASSIFICATION	6.836440799818649E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999931182996158	WITHOUT_CLASSIFICATION	6.881700384225373E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999933138948148	WITHOUT_CLASSIFICATION	6.686105185214881E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.999992277171731	WITHOUT_CLASSIFICATION	7.72282826898337E-6	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999924906722539	WITHOUT_CLASSIFICATION	7.509327746093238E-6	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999893989758657	WITHOUT_CLASSIFICATION	1.0601024134343708E-5	TEST
// line 806	WITHOUT_CLASSIFICATION	0.999991331051257	WITHOUT_CLASSIFICATION	8.668948742988911E-6	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999901249097407	WITHOUT_CLASSIFICATION	9.87509025933853E-6	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999936389997591	WITHOUT_CLASSIFICATION	6.361000240956758E-6	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999936886141793	WITHOUT_CLASSIFICATION	6.311385820786244E-6	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999935870998958	WITHOUT_CLASSIFICATION	6.412900104083641E-6	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999925519705509	WITHOUT_CLASSIFICATION	7.448029449091037E-6	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999904185352574	WITHOUT_CLASSIFICATION	9.581464742603405E-6	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999919543657497	WITHOUT_CLASSIFICATION	8.045634250332608E-6	TEST
// line 836	WITHOUT_CLASSIFICATION	0.999992004833248	WITHOUT_CLASSIFICATION	7.995166751998606E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999909037402654	WITHOUT_CLASSIFICATION	9.096259734512065E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999926781830919	WITHOUT_CLASSIFICATION	7.321816908148227E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999926297494559	WITHOUT_CLASSIFICATION	7.370250544034612E-6	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999930287642161	WITHOUT_CLASSIFICATION	6.971235783881398E-6	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999929464085103	WITHOUT_CLASSIFICATION	7.053591489654339E-6	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999936978700503	WITHOUT_CLASSIFICATION	6.302129949694077E-6	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999929219289908	WITHOUT_CLASSIFICATION	7.078071009243874E-6	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999939855970477	WITHOUT_CLASSIFICATION	6.014402952275192E-6	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999931679399311	WITHOUT_CLASSIFICATION	6.832060068876539E-6	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999922172343095	WITHOUT_CLASSIFICATION	7.78276569046556E-6	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999919546254493	WITHOUT_CLASSIFICATION	8.045374550707756E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999909039407049	WITHOUT_CLASSIFICATION	9.09605929521058E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999919978068147	WITHOUT_CLASSIFICATION	8.002193185314294E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999919499385607	WITHOUT_CLASSIFICATION	8.050061439377817E-6	TEST
// line 903	WITHOUT_CLASSIFICATION	0.99998805603383	WITHOUT_CLASSIFICATION	1.1943966169951421E-5	TEST
// line 907	WITHOUT_CLASSIFICATION	0.999990791929102	WITHOUT_CLASSIFICATION	9.208070898001234E-6	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999927995317301	WITHOUT_CLASSIFICATION	7.200468269790216E-6	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999899542581043	WITHOUT_CLASSIFICATION	1.0045741895761052E-5	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999908406914049	WITHOUT_CLASSIFICATION	9.15930859520549E-6	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999919136417716	WITHOUT_CLASSIFICATION	8.086358228300798E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999909853134846	WITHOUT_CLASSIFICATION	9.014686515384166E-6	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999909939399939	WITHOUT_CLASSIFICATION	9.00606000607303E-6	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999901053318807	WITHOUT_CLASSIFICATION	9.894668119362268E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999917378072763	WITHOUT_CLASSIFICATION	8.262192723623804E-6	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999913987408247	WITHOUT_CLASSIFICATION	8.601259175295159E-6	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999921146164785	WITHOUT_CLASSIFICATION	7.885383521396524E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999904966182341	WITHOUT_CLASSIFICATION	9.503381765790681E-6	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999917999642489	WITHOUT_CLASSIFICATION	8.20003575119574E-6	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999923038938899	WITHOUT_CLASSIFICATION	7.696106110038525E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999922968656882	WITHOUT_CLASSIFICATION	7.703134311670725E-6	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999919656491643	WITHOUT_CLASSIFICATION	8.0343508356723E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999900816751567	WITHOUT_CLASSIFICATION	9.918324843332183E-6	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999914394586257	WITHOUT_CLASSIFICATION	8.560541374288195E-6	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999917393747318	WITHOUT_CLASSIFICATION	8.260625268128122E-6	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999920397666143	WITHOUT_CLASSIFICATION	7.960233385765758E-6	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999929735053193	WITHOUT_CLASSIFICATION	7.026494680657578E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999925014012794	WITHOUT_CLASSIFICATION	7.498598720569625E-6	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999925203417052	WITHOUT_CLASSIFICATION	7.479658294796489E-6	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999928805522852	WITHOUT_CLASSIFICATION	7.1194477148265306E-6	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999910580233713	WITHOUT_CLASSIFICATION	8.941976628687472E-6	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999914545179311	WITHOUT_CLASSIFICATION	8.545482068920883E-6	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999912207222359	WITHOUT_CLASSIFICATION	8.779277764148621E-6	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999927652378388	WITHOUT_CLASSIFICATION	7.234762161284729E-6	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999924204927091	WITHOUT_CLASSIFICATION	7.579507291004269E-6	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999931506843229	WITHOUT_CLASSIFICATION	6.849315677170839E-6	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999927967798048	WITHOUT_CLASSIFICATION	7.203220195276318E-6	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999938987625892	WITHOUT_CLASSIFICATION	6.101237410842639E-6	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999925284151122	WITHOUT_CLASSIFICATION	7.471584887880975E-6	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999934269507111	WITHOUT_CLASSIFICATION	6.5730492888229565E-6	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999925122870972	WITHOUT_CLASSIFICATION	7.487712902824649E-6	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999927500241347	WITHOUT_CLASSIFICATION	7.249975865349446E-6	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999917490837509	WITHOUT_CLASSIFICATION	8.250916249109865E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999922750992181	WITHOUT_CLASSIFICATION	7.72490078191485E-6	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999932643720898	WITHOUT_CLASSIFICATION	6.735627910179766E-6	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999918422759738	WITHOUT_CLASSIFICATION	8.157724026175872E-6	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999937108967839	WITHOUT_CLASSIFICATION	6.289103216001446E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999943599271325	WITHOUT_CLASSIFICATION	5.640072867539155E-6	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999934873070636	WITHOUT_CLASSIFICATION	6.512692936407859E-6	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999942946840138	WITHOUT_CLASSIFICATION	5.7053159863244445E-6	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999935127161136	WITHOUT_CLASSIFICATION	6.487283886357134E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999922438056554	WITHOUT_CLASSIFICATION	7.756194344544362E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999934870621257	WITHOUT_CLASSIFICATION	6.512937874237173E-6	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999935525705977	WITHOUT_CLASSIFICATION	6.447429402268251E-6	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999937059869641	WITHOUT_CLASSIFICATION	6.294013035933572E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999929174375465	WITHOUT_CLASSIFICATION	7.08256245348194E-6	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999943783841343	WITHOUT_CLASSIFICATION	5.6216158657979295E-6	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999941314737061	WITHOUT_CLASSIFICATION	5.868526293924193E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999940879145579	WITHOUT_CLASSIFICATION	5.912085442100438E-6	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999941106672345	WITHOUT_CLASSIFICATION	5.88933276553384E-6	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999945209059915	WITHOUT_CLASSIFICATION	5.479094008505038E-6	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999942596041991	WITHOUT_CLASSIFICATION	5.74039580096182E-6	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999943385212329	WITHOUT_CLASSIFICATION	5.661478767171675E-6	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999933691587162	WITHOUT_CLASSIFICATION	6.630841283781702E-6	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999926815427683	WITHOUT_CLASSIFICATION	7.318457231635879E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999921838184826	WITHOUT_CLASSIFICATION	7.816181517418764E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999928893379968	WITHOUT_CLASSIFICATION	7.110662003158912E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.999993214751728	WITHOUT_CLASSIFICATION	6.78524827189662E-6	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999938636465281	WITHOUT_CLASSIFICATION	6.136353471852145E-6	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999932394942364	WITHOUT_CLASSIFICATION	6.760505763681106E-6	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999924041365751	WITHOUT_CLASSIFICATION	7.595863424874603E-6	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999929685612183	WITHOUT_CLASSIFICATION	7.031438781731942E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999939835276374	WITHOUT_CLASSIFICATION	6.016472362548169E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999941467669298	WITHOUT_CLASSIFICATION	5.8532330702821365E-6	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999932553089103	WITHOUT_CLASSIFICATION	6.744691089684688E-6	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999932407499432	WITHOUT_CLASSIFICATION	6.759250056698899E-6	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999925591252959	WITHOUT_CLASSIFICATION	7.4408747040798235E-6	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999929550072633	WITHOUT_CLASSIFICATION	7.04499273663266E-6	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.999991055055832	WITHOUT_CLASSIFICATION	8.944944168076114E-6	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999925517407972	WITHOUT_CLASSIFICATION	7.448259202774226E-6	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999925071860916	WITHOUT_CLASSIFICATION	7.492813908499587E-6	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999918374249844	WITHOUT_CLASSIFICATION	8.162575015567568E-6	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999907074405995	WITHOUT_CLASSIFICATION	9.292559400564792E-6	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999932985506411	WITHOUT_CLASSIFICATION	6.701449358969936E-6	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999933451030096	WITHOUT_CLASSIFICATION	6.654896990461876E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999915993950234	WITHOUT_CLASSIFICATION	8.400604976582569E-6	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999929366487621	WITHOUT_CLASSIFICATION	7.06335123790378E-6	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999933580590765	WITHOUT_CLASSIFICATION	6.641940923496982E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.99999286204684	WITHOUT_CLASSIFICATION	7.137953159921143E-6	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999934351713984	WITHOUT_CLASSIFICATION	6.564828601540363E-6	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999931177959311	WITHOUT_CLASSIFICATION	6.882204068917795E-6	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999933316560826	WITHOUT_CLASSIFICATION	6.6683439174318506E-6	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999931780782245	WITHOUT_CLASSIFICATION	6.821921775461736E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999932832947134	WITHOUT_CLASSIFICATION	6.716705286516785E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999924644158745	WITHOUT_CLASSIFICATION	7.535584125386983E-6	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999939091878054	WITHOUT_CLASSIFICATION	6.090812194512478E-6	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999931731472793	WITHOUT_CLASSIFICATION	6.826852720620762E-6	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999931490528582	WITHOUT_CLASSIFICATION	6.850947141806657E-6	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999926802896207	WITHOUT_CLASSIFICATION	7.3197103793214465E-6	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999930715975681	WITHOUT_CLASSIFICATION	6.928402431879737E-6	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999931533723121	WITHOUT_CLASSIFICATION	6.846627687847369E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999939718131896	WITHOUT_CLASSIFICATION	6.028186810308874E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.999993945086368	WITHOUT_CLASSIFICATION	6.054913631994731E-6	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999939722083774	WITHOUT_CLASSIFICATION	6.027791622656642E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999931242282004	WITHOUT_CLASSIFICATION	6.8757717996172865E-6	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999940716910973	WITHOUT_CLASSIFICATION	5.92830890262986E-6	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999924177150283	WITHOUT_CLASSIFICATION	7.58228497164407E-6	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999937072360344	WITHOUT_CLASSIFICATION	6.292763965570539E-6	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999936370740623	WITHOUT_CLASSIFICATION	6.362925937599279E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999931092894847	WITHOUT_CLASSIFICATION	6.890710515244634E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999928265138757	WITHOUT_CLASSIFICATION	7.173486124392689E-6	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.999993296846014	WITHOUT_CLASSIFICATION	6.70315398595202E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999933242492477	WITHOUT_CLASSIFICATION	6.675750752264625E-6	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999941303368235	WITHOUT_CLASSIFICATION	5.8696631765248734E-6	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999933530836246	WITHOUT_CLASSIFICATION	6.646916375502657E-6	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999929722546713	WITHOUT_CLASSIFICATION	7.027745328691203E-6	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999933530836246	WITHOUT_CLASSIFICATION	6.646916375502657E-6	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999941476512972	WITHOUT_CLASSIFICATION	5.852348702788163E-6	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999941480349576	WITHOUT_CLASSIFICATION	5.851965042423392E-6	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999939363479379	WITHOUT_CLASSIFICATION	6.063652062088513E-6	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999944975019472	WITHOUT_CLASSIFICATION	5.502498052761892E-6	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999941459593591	WITHOUT_CLASSIFICATION	5.854040640895366E-6	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999943078834214	WITHOUT_CLASSIFICATION	5.692116578667043E-6	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999941023713766	WITHOUT_CLASSIFICATION	5.897628623347276E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999933338013749	WITHOUT_CLASSIFICATION	6.666198625146008E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999930931066544	WITHOUT_CLASSIFICATION	6.906893345705456E-6	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999927121421912	WITHOUT_CLASSIFICATION	7.287857808887649E-6	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999917782680049	WITHOUT_CLASSIFICATION	8.22173199511026E-6	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999932324820514	WITHOUT_CLASSIFICATION	6.767517948581336E-6	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999939797365635	WITHOUT_CLASSIFICATION	6.0202634365185185E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999925000139092	WITHOUT_CLASSIFICATION	7.499986090817569E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999933393157351	WITHOUT_CLASSIFICATION	6.660684264912803E-6	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999930552036136	WITHOUT_CLASSIFICATION	6.944796386458466E-6	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999939563804265	WITHOUT_CLASSIFICATION	6.043619573456463E-6	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999938951038958	WITHOUT_CLASSIFICATION	6.104896104176363E-6	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999930650683158	WITHOUT_CLASSIFICATION	6.934931684282623E-6	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999941297466414	WITHOUT_CLASSIFICATION	5.8702533585918125E-6	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999939173980704	WITHOUT_CLASSIFICATION	6.082601929644886E-6	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999941519592107	WITHOUT_CLASSIFICATION	5.848040789239331E-6	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999943082769929	WITHOUT_CLASSIFICATION	5.691723007142525E-6	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999942702783763	WITHOUT_CLASSIFICATION	5.72972162373123E-6	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999940634086216	WITHOUT_CLASSIFICATION	5.9365913784503665E-6	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.999993098292315	WITHOUT_CLASSIFICATION	6.901707685097199E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999933338853572	WITHOUT_CLASSIFICATION	6.6661146427682665E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999929620131945	WITHOUT_CLASSIFICATION	7.037986805439045E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999942716902269	WITHOUT_CLASSIFICATION	5.728309773158523E-6	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.999993540405448	WITHOUT_CLASSIFICATION	6.459594552054262E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999941215371727	WITHOUT_CLASSIFICATION	5.87846282727934E-6	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999941478688038	WITHOUT_CLASSIFICATION	5.852131196245107E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.999993310223123	WITHOUT_CLASSIFICATION	6.689776877081875E-6	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999943367565214	WITHOUT_CLASSIFICATION	5.66324347858685E-6	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999935754044085	WITHOUT_CLASSIFICATION	6.424595591511219E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999943117850687	WITHOUT_CLASSIFICATION	5.688214931355065E-6	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999943372645195	WITHOUT_CLASSIFICATION	5.662735480419595E-6	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999938982930949	WITHOUT_CLASSIFICATION	6.1017069050688124E-6	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999926148317662	WITHOUT_CLASSIFICATION	7.3851682339275836E-6	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999937996167997	WITHOUT_CLASSIFICATION	6.200383200256311E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999939685563984	WITHOUT_CLASSIFICATION	6.031443601520011E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999939793720255	WITHOUT_CLASSIFICATION	6.0206279745759685E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999891677350563	WITHOUT_CLASSIFICATION	1.0832264943576224E-5	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9996770187590184	WITHOUT_CLASSIFICATION	3.2298124098156865E-4	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9998332194669377	WITHOUT_CLASSIFICATION	1.6678053306221234E-4	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9998538900328493	WITHOUT_CLASSIFICATION	1.461099671507986E-4	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999917755764992	WITHOUT_CLASSIFICATION	8.224423500770791E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999878834615951	WITHOUT_CLASSIFICATION	1.2116538404846557E-5	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999866019183467	WITHOUT_CLASSIFICATION	1.339808165335087E-5	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999872445565016	WITHOUT_CLASSIFICATION	1.2755443498563058E-5	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999866024611714	WITHOUT_CLASSIFICATION	1.3397538828716985E-5	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999733607064775	WITHOUT_CLASSIFICATION	2.663929352258926E-5	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999993314416677	WITHOUT_CLASSIFICATION	6.685583322531089E-7	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999915188596387	WITHOUT_CLASSIFICATION	8.48114036130724E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.999990625561733	WITHOUT_CLASSIFICATION	9.374438267023893E-6	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9998769313150675	WITHOUT_CLASSIFICATION	1.230686849324184E-4	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999811490128963	WITHOUT_CLASSIFICATION	1.8850987103740913E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999733935401541	WITHOUT_CLASSIFICATION	2.660645984588083E-5	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.99995858205171	WITHOUT_CLASSIFICATION	4.141794828999878E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999923713106165	WITHOUT_CLASSIFICATION	7.628689383545332E-6	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999994747757499	WITHOUT_CLASSIFICATION	5.252242500366104E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999802427224	WITHOUT_CLASSIFICATION	1.975727759769632E-7	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999944263909426	WITHOUT_CLASSIFICATION	5.573609057411815E-6	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999935216096677	WITHOUT_CLASSIFICATION	6.478390332245937E-6	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999991824456096	WITHOUT_CLASSIFICATION	8.175543903859264E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999994283095711	WITHOUT_CLASSIFICATION	5.716904289315867E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999994283095711	WITHOUT_CLASSIFICATION	5.716904289315867E-7	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.999939016134082	WITHOUT_CLASSIFICATION	6.098386591805303E-5	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999975292059052	WITHOUT_CLASSIFICATION	2.470794094784638E-6	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.999934867955515	WITHOUT_CLASSIFICATION	6.51320444849635E-5	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999965246648079	WITHOUT_CLASSIFICATION	3.4753351920242118E-6	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999977918643559	WITHOUT_CLASSIFICATION	2.208135644052918E-6	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999998827325747	WITHOUT_CLASSIFICATION	1.1726742531958341E-7	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999998059623458	WITHOUT_CLASSIFICATION	1.9403765408852428E-7	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999974449469685	WITHOUT_CLASSIFICATION	2.5550530315060063E-6	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999991822703392	WITHOUT_CLASSIFICATION	8.17729660700742E-7	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999989527589783	WITHOUT_CLASSIFICATION	1.0472410216314687E-6	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999564318878564	WITHOUT_CLASSIFICATION	4.35681121434338E-5	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.999987961274268	WITHOUT_CLASSIFICATION	1.2038725732004046E-5	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999998919252326	WITHOUT_CLASSIFICATION	1.0807476734113317E-7	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999501504854027	WITHOUT_CLASSIFICATION	4.984951459737392E-5	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999493306066017	WITHOUT_CLASSIFICATION	5.066939339827314E-5	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999729243137595	WITHOUT_CLASSIFICATION	2.707568624051567E-5	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.999986987866788	WITHOUT_CLASSIFICATION	1.3012133211974092E-5	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999968888952839	WITHOUT_CLASSIFICATION	3.1111047160326865E-6	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999986773200706	WITHOUT_CLASSIFICATION	1.3226799293802845E-6	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999918061773447	WITHOUT_CLASSIFICATION	8.19382265522217E-6	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999998750341045	WITHOUT_CLASSIFICATION	1.2496589554956313E-7	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999841395437008	WITHOUT_CLASSIFICATION	1.586045629923804E-5	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9974322676092301	WITHOUT_CLASSIFICATION	0.0025677323907698263	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999989648452842	WITHOUT_CLASSIFICATION	1.0351547158461912E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9974322676092301	WITHOUT_CLASSIFICATION	0.0025677323907698263	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999990139494435	WITHOUT_CLASSIFICATION	9.860505565122652E-7	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999991481074347	WITHOUT_CLASSIFICATION	8.518925652479849E-7	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999974370309067	WITHOUT_CLASSIFICATION	2.5629690931873873E-6	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999863818738423	WITHOUT_CLASSIFICATION	1.361812615774225E-5	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999993010058448	WITHOUT_CLASSIFICATION	6.98994155129026E-7	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999812175942945	WITHOUT_CLASSIFICATION	1.878240570546736E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999812175942945	WITHOUT_CLASSIFICATION	1.878240570546736E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999812175942945	WITHOUT_CLASSIFICATION	1.878240570546736E-5	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999596421028752	WITHOUT_CLASSIFICATION	4.035789712478189E-5	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999681527568631	WITHOUT_CLASSIFICATION	3.18472431368719E-5	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999970973234986	WITHOUT_CLASSIFICATION	2.9026765013811766E-6	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998186206055782	WITHOUT_CLASSIFICATION	1.8137939442167486E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998186206055782	WITHOUT_CLASSIFICATION	1.8137939442167486E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998186206055782	WITHOUT_CLASSIFICATION	1.8137939442167486E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998186206055782	WITHOUT_CLASSIFICATION	1.8137939442167486E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998186206055782	WITHOUT_CLASSIFICATION	1.8137939442167486E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998186206055782	WITHOUT_CLASSIFICATION	1.8137939442167486E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998930849325077	WITHOUT_CLASSIFICATION	1.0691506749228315E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998930849325077	WITHOUT_CLASSIFICATION	1.0691506749228315E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998930849325077	WITHOUT_CLASSIFICATION	1.0691506749228315E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998930849325077	WITHOUT_CLASSIFICATION	1.0691506749228315E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9998930849325077	WITHOUT_CLASSIFICATION	1.0691506749228315E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998354508706971	WITHOUT_CLASSIFICATION	1.6454912930286033E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998354508706971	WITHOUT_CLASSIFICATION	1.6454912930286033E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998354508706971	WITHOUT_CLASSIFICATION	1.6454912930286033E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998354508706971	WITHOUT_CLASSIFICATION	1.6454912930286033E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998354508706971	WITHOUT_CLASSIFICATION	1.6454912930286033E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.99991083892322	WITHOUT_CLASSIFICATION	8.916107678001301E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.99991083892322	WITHOUT_CLASSIFICATION	8.916107678001301E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.99991083892322	WITHOUT_CLASSIFICATION	8.916107678001301E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.99991083892322	WITHOUT_CLASSIFICATION	8.916107678001301E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.99991083892322	WITHOUT_CLASSIFICATION	8.916107678001301E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.99991083892322	WITHOUT_CLASSIFICATION	8.916107678001301E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999388009421085	WITHOUT_CLASSIFICATION	6.119905789144548E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999388009421085	WITHOUT_CLASSIFICATION	6.119905789144548E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999388009421085	WITHOUT_CLASSIFICATION	6.119905789144548E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999388009421085	WITHOUT_CLASSIFICATION	6.119905789144548E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999388009421085	WITHOUT_CLASSIFICATION	6.119905789144548E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999285932557567	WITHOUT_CLASSIFICATION	7.140674424329366E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999285932557567	WITHOUT_CLASSIFICATION	7.140674424329366E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999285932557567	WITHOUT_CLASSIFICATION	7.140674424329366E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999285932557567	WITHOUT_CLASSIFICATION	7.140674424329366E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999285932557567	WITHOUT_CLASSIFICATION	7.140674424329366E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999949939617852	WITHOUT_CLASSIFICATION	5.006038214801138E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999949939617852	WITHOUT_CLASSIFICATION	5.006038214801138E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999949939617852	WITHOUT_CLASSIFICATION	5.006038214801138E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999949939617852	WITHOUT_CLASSIFICATION	5.006038214801138E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999949939617852	WITHOUT_CLASSIFICATION	5.006038214801138E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999986431939712	WITHOUT_CLASSIFICATION	1.3568060287137285E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999993213366802	WITHOUT_CLASSIFICATION	6.786633197434181E-7	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999786253297556	WITHOUT_CLASSIFICATION	2.1374670244519264E-5	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999925321094987	WITHOUT_CLASSIFICATION	7.4678905012694304E-6	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999991026641872	WITHOUT_CLASSIFICATION	8.97335812723586E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999931588344693	WITHOUT_CLASSIFICATION	6.841165530713553E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999933021607376	WITHOUT_CLASSIFICATION	6.6978392624182335E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.999992171696662	WITHOUT_CLASSIFICATION	7.828303338043432E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999939501507173	WITHOUT_CLASSIFICATION	6.0498492825841045E-6	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999913084246184	WITHOUT_CLASSIFICATION	8.691575381669863E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999920753676123	WITHOUT_CLASSIFICATION	7.924632387792584E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999930036851165	WITHOUT_CLASSIFICATION	6.9963148834621015E-6	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999916645424376	WITHOUT_CLASSIFICATION	8.335457562419535E-6	TEST
// line 283	WITHOUT_CLASSIFICATION	0.999992107359899	WITHOUT_CLASSIFICATION	7.892640101046581E-6	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999916544475846	WITHOUT_CLASSIFICATION	8.345552415317644E-6	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999920545778057	WITHOUT_CLASSIFICATION	7.945422194259087E-6	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999925454250231	WITHOUT_CLASSIFICATION	7.454574976836039E-6	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999932335720189	WITHOUT_CLASSIFICATION	6.766427981160127E-6	TEST
// line 333	WITHOUT_CLASSIFICATION	0.999992401573286	WITHOUT_CLASSIFICATION	7.598426713963601E-6	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999924492356265	WITHOUT_CLASSIFICATION	7.550764373616695E-6	TEST
// line 342	WITHOUT_CLASSIFICATION	0.99999224922709	WITHOUT_CLASSIFICATION	7.750772909971653E-6	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999922839453689	WITHOUT_CLASSIFICATION	7.716054631047248E-6	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999919162662587	WITHOUT_CLASSIFICATION	8.083733741170484E-6	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999922633272652	WITHOUT_CLASSIFICATION	7.73667273487934E-6	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999921766101983	WITHOUT_CLASSIFICATION	7.823389801590318E-6	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999926569853024	WITHOUT_CLASSIFICATION	7.3430146976310625E-6	TEST
// line 388	WITHOUT_CLASSIFICATION	0.999992119870659	WITHOUT_CLASSIFICATION	7.880129341122022E-6	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999914659495406	WITHOUT_CLASSIFICATION	8.534050459509485E-6	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999917077484821	WITHOUT_CLASSIFICATION	8.29225151787854E-6	TEST
// line 429	WITHOUT_CLASSIFICATION	0.99999121766271	WITHOUT_CLASSIFICATION	8.782337289881934E-6	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999922004676433	WITHOUT_CLASSIFICATION	7.79953235673778E-6	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999922079313327	WITHOUT_CLASSIFICATION	7.792068667338877E-6	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999931260460069	WITHOUT_CLASSIFICATION	6.87395399322792E-6	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999927984936969	WITHOUT_CLASSIFICATION	7.2015063030387375E-6	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999931586824347	WITHOUT_CLASSIFICATION	6.841317565340043E-6	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999922284536489	WITHOUT_CLASSIFICATION	7.771546351165117E-6	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999931017376892	WITHOUT_CLASSIFICATION	6.898262310896392E-6	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999922012307519	WITHOUT_CLASSIFICATION	7.798769248054092E-6	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999930485262598	WITHOUT_CLASSIFICATION	6.951473740237858E-6	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999936192846702	WITHOUT_CLASSIFICATION	6.380715329774951E-6	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999927987261498	WITHOUT_CLASSIFICATION	7.2012738502568015E-6	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999921813402113	WITHOUT_CLASSIFICATION	7.818659788753845E-6	TEST
// line 497	WITHOUT_CLASSIFICATION	0.999992415715178	WITHOUT_CLASSIFICATION	7.584284821966789E-6	TEST
// line 503	WITHOUT_CLASSIFICATION	0.999989920626603	WITHOUT_CLASSIFICATION	1.0079373397056614E-5	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999917576300246	WITHOUT_CLASSIFICATION	8.242369975382152E-6	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999906108393645	WITHOUT_CLASSIFICATION	9.389160635479456E-6	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999939156251477	WITHOUT_CLASSIFICATION	6.084374852375116E-6	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999939351302692	WITHOUT_CLASSIFICATION	6.064869730740513E-6	TEST
// line 526	WITHOUT_CLASSIFICATION	0.999993210916788	WITHOUT_CLASSIFICATION	6.7890832120246084E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999916494902557	WITHOUT_CLASSIFICATION	8.350509744412177E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999920959037707	WITHOUT_CLASSIFICATION	7.904096229310584E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.999993046452984	WITHOUT_CLASSIFICATION	6.953547015906028E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999932714941813	WITHOUT_CLASSIFICATION	6.728505818632264E-6	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999930386117111	WITHOUT_CLASSIFICATION	6.961388289036833E-6	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999935024087235	WITHOUT_CLASSIFICATION	6.497591276416656E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999931787815922	WITHOUT_CLASSIFICATION	6.821218407800455E-6	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999923389368306	WITHOUT_CLASSIFICATION	7.661063169438913E-6	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999934017853999	WITHOUT_CLASSIFICATION	6.598214600139783E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999931635592002	WITHOUT_CLASSIFICATION	6.836440799818649E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999931941819106	WITHOUT_CLASSIFICATION	6.805818089368878E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999931182996158	WITHOUT_CLASSIFICATION	6.881700384225373E-6	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999933138948148	WITHOUT_CLASSIFICATION	6.686105185214881E-6	TEST
// line 534	WITHOUT_CLASSIFICATION	0.999992190668359	WITHOUT_CLASSIFICATION	7.809331641034892E-6	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999920791675945	WITHOUT_CLASSIFICATION	7.920832405558231E-6	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999932993882005	WITHOUT_CLASSIFICATION	6.700611799515845E-6	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999929754483649	WITHOUT_CLASSIFICATION	7.024551635259199E-6	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999940091078692	WITHOUT_CLASSIFICATION	5.990892130743943E-6	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999942826252246	WITHOUT_CLASSIFICATION	5.71737477543681E-6	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999932695489444	WITHOUT_CLASSIFICATION	6.7304510556643874E-6	TEST
// line 579	WITHOUT_CLASSIFICATION	0.999992601594459	WITHOUT_CLASSIFICATION	7.398405540990943E-6	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999930285638963	WITHOUT_CLASSIFICATION	6.9714361037838935E-6	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999920584637543	WITHOUT_CLASSIFICATION	7.94153624565821E-6	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999923864396416	WITHOUT_CLASSIFICATION	7.613560358384111E-6	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999923362982112	WITHOUT_CLASSIFICATION	7.663701788883341E-6	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999920598434894	WITHOUT_CLASSIFICATION	7.94015651055141E-6	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999922742974608	WITHOUT_CLASSIFICATION	7.725702539052925E-6	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999933605613989	WITHOUT_CLASSIFICATION	6.639438601051933E-6	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999908963397528	WITHOUT_CLASSIFICATION	9.10366024728364E-6	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999923555826747	WITHOUT_CLASSIFICATION	7.644417325205712E-6	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999913573489686	WITHOUT_CLASSIFICATION	8.642651031440495E-6	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999927444564425	WITHOUT_CLASSIFICATION	7.255543557519116E-6	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999935309333424	WITHOUT_CLASSIFICATION	6.469066657555508E-6	TEST
// line 661	WITHOUT_CLASSIFICATION	0.999993966527547	WITHOUT_CLASSIFICATION	6.0334724530431596E-6	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999932236712984	WITHOUT_CLASSIFICATION	6.7763287016463374E-6	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999932230273425	WITHOUT_CLASSIFICATION	6.776972657542842E-6	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999930254080074	WITHOUT_CLASSIFICATION	6.974591992511588E-6	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999929792338211	WITHOUT_CLASSIFICATION	7.020766178807045E-6	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999923513762576	WITHOUT_CLASSIFICATION	7.64862374239698E-6	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999921412312147	WITHOUT_CLASSIFICATION	7.858768785192108E-6	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999918360790112	WITHOUT_CLASSIFICATION	8.163920988906929E-6	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999932577414069	WITHOUT_CLASSIFICATION	6.742258593113365E-6	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999924981366582	WITHOUT_CLASSIFICATION	7.501863341658951E-6	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999925954400467	WITHOUT_CLASSIFICATION	7.40455995338218E-6	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999924908272841	WITHOUT_CLASSIFICATION	7.509172715792076E-6	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999923915333522	WITHOUT_CLASSIFICATION	7.608466647875235E-6	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999913082522314	WITHOUT_CLASSIFICATION	8.691747768562411E-6	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999939149077113	WITHOUT_CLASSIFICATION	6.085092288747855E-6	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999938227673366	WITHOUT_CLASSIFICATION	6.177232663372227E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999926781830919	WITHOUT_CLASSIFICATION	7.321816908148227E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999927109799489	WITHOUT_CLASSIFICATION	7.2890200512209824E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999926297494559	WITHOUT_CLASSIFICATION	7.370250544034612E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999909039407049	WITHOUT_CLASSIFICATION	9.09605929521058E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999919499385607	WITHOUT_CLASSIFICATION	8.050061439377817E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999909853134846	WITHOUT_CLASSIFICATION	9.014686515384166E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999917378072763	WITHOUT_CLASSIFICATION	8.262192723623804E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999904966182341	WITHOUT_CLASSIFICATION	9.503381765790681E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999900816751567	WITHOUT_CLASSIFICATION	9.918324843332183E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999925014012794	WITHOUT_CLASSIFICATION	7.498598720569625E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999910900102962	WITHOUT_CLASSIFICATION	8.909989703931328E-6	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999910818813524	WITHOUT_CLASSIFICATION	8.918118647496708E-6	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999928213279822	WITHOUT_CLASSIFICATION	7.178672017795535E-6	TEST
// line 829	WITHOUT_CLASSIFICATION	0.999990988753784	WITHOUT_CLASSIFICATION	9.011246215892322E-6	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999919971750212	WITHOUT_CLASSIFICATION	8.002824978811738E-6	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999937196659934	WITHOUT_CLASSIFICATION	6.2803340066113305E-6	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999931914042283	WITHOUT_CLASSIFICATION	6.808595771826288E-6	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999915633626805	WITHOUT_CLASSIFICATION	8.43663731952219E-6	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999920151938552	WITHOUT_CLASSIFICATION	7.984806144769206E-6	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999929219362517	WITHOUT_CLASSIFICATION	7.078063748425984E-6	TEST
// line 869	WITHOUT_CLASSIFICATION	0.99999199795802	WITHOUT_CLASSIFICATION	8.002041980073542E-6	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999931920149648	WITHOUT_CLASSIFICATION	6.807985035200611E-6	TEST
// line 884	WITHOUT_CLASSIFICATION	0.999992665191509	WITHOUT_CLASSIFICATION	7.334808491041449E-6	TEST
// line 887	WITHOUT_CLASSIFICATION	0.99999311594935	WITHOUT_CLASSIFICATION	6.884050649909698E-6	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999903898130625	WITHOUT_CLASSIFICATION	9.610186937453641E-6	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999902268673914	WITHOUT_CLASSIFICATION	9.773132608682867E-6	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999901588137784	WITHOUT_CLASSIFICATION	9.841186221580836E-6	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999927902414181	WITHOUT_CLASSIFICATION	7.209758581950431E-6	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999927730558776	WITHOUT_CLASSIFICATION	7.22694412238169E-6	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999920197995407	WITHOUT_CLASSIFICATION	7.980200459285755E-6	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999915533914242	WITHOUT_CLASSIFICATION	8.4466085758451E-6	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999926079898704	WITHOUT_CLASSIFICATION	7.392010129520353E-6	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999919862023532	WITHOUT_CLASSIFICATION	8.013797646740412E-6	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999929255667046	WITHOUT_CLASSIFICATION	7.074433295398332E-6	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999920550666429	WITHOUT_CLASSIFICATION	7.944933357014034E-6	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999921151334169	WITHOUT_CLASSIFICATION	7.884866583134362E-6	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999920271217124	WITHOUT_CLASSIFICATION	7.972878287495674E-6	TEST
// line 977	WITHOUT_CLASSIFICATION	0.999992245438756	WITHOUT_CLASSIFICATION	7.754561244109681E-6	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999906101497239	WITHOUT_CLASSIFICATION	9.389850276093138E-6	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999921598828193	WITHOUT_CLASSIFICATION	7.840117180695836E-6	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999919313189225	WITHOUT_CLASSIFICATION	8.06868107753295E-6	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999914952176893	WITHOUT_CLASSIFICATION	8.50478231064278E-6	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999927926484121	WITHOUT_CLASSIFICATION	7.207351587861446E-6	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999917471652939	WITHOUT_CLASSIFICATION	8.252834706086282E-6	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.999992849851726	WITHOUT_CLASSIFICATION	7.150148273908959E-6	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999932892614206	WITHOUT_CLASSIFICATION	6.710738579403404E-6	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999931652098678	WITHOUT_CLASSIFICATION	6.8347901320861055E-6	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999920574795025	WITHOUT_CLASSIFICATION	7.942520497551341E-6	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999934501130402	WITHOUT_CLASSIFICATION	6.549886959711389E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999933990020394	WITHOUT_CLASSIFICATION	6.600997960580852E-6	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999943599271325	WITHOUT_CLASSIFICATION	5.640072867539155E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999943094087221	WITHOUT_CLASSIFICATION	5.690591277836729E-6	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999922438056554	WITHOUT_CLASSIFICATION	7.756194344544362E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999929174375465	WITHOUT_CLASSIFICATION	7.08256245348194E-6	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999940879145579	WITHOUT_CLASSIFICATION	5.912085442100438E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999921838184826	WITHOUT_CLASSIFICATION	7.816181517418764E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999928893379968	WITHOUT_CLASSIFICATION	7.110662003158912E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999939835276374	WITHOUT_CLASSIFICATION	6.016472362548169E-6	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999941467669298	WITHOUT_CLASSIFICATION	5.8532330702821365E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999941097104783	WITHOUT_CLASSIFICATION	5.890289521738392E-6	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999931377447399	WITHOUT_CLASSIFICATION	6.862255260060843E-6	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.999992494005371	WITHOUT_CLASSIFICATION	7.5059946289203735E-6	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999929552833166	WITHOUT_CLASSIFICATION	7.044716683489065E-6	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999922146372376	WITHOUT_CLASSIFICATION	7.78536276237856E-6	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999909717562628	WITHOUT_CLASSIFICATION	9.028243737230942E-6	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999940859594165	WITHOUT_CLASSIFICATION	5.914040583478008E-6	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999942737057486	WITHOUT_CLASSIFICATION	5.726294251356857E-6	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999941348023238	WITHOUT_CLASSIFICATION	5.865197676235123E-6	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999940173460949	WITHOUT_CLASSIFICATION	5.982653904983393E-6	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999942337086343	WITHOUT_CLASSIFICATION	5.766291365707772E-6	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999932453844056	WITHOUT_CLASSIFICATION	6.754615594359265E-6	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999940859594165	WITHOUT_CLASSIFICATION	5.914040583478008E-6	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999932818728133	WITHOUT_CLASSIFICATION	6.718127186588587E-6	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999942943102939	WITHOUT_CLASSIFICATION	5.705689706082742E-6	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999943115442831	WITHOUT_CLASSIFICATION	5.68845571700443E-6	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999937498887518	WITHOUT_CLASSIFICATION	6.250111248271404E-6	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999937363973691	WITHOUT_CLASSIFICATION	6.263602630959017E-6	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999941735646836	WITHOUT_CLASSIFICATION	5.826435316362587E-6	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.999992267888008	WITHOUT_CLASSIFICATION	7.732111991988133E-6	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999935616409078	WITHOUT_CLASSIFICATION	6.438359092229073E-6	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.99999324249057	WITHOUT_CLASSIFICATION	6.757509429970971E-6	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999942512381801	WITHOUT_CLASSIFICATION	5.748761819941754E-6	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999933799398987	WITHOUT_CLASSIFICATION	6.620060101421423E-6	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999933236093241	WITHOUT_CLASSIFICATION	6.6763906759236E-6	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999937970411227	WITHOUT_CLASSIFICATION	6.2029588772335045E-6	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999938896835628	WITHOUT_CLASSIFICATION	6.110316437122632E-6	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999938443297379	WITHOUT_CLASSIFICATION	6.1556702620737165E-6	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999938509995427	WITHOUT_CLASSIFICATION	6.149000457242177E-6	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.999993250130131	WITHOUT_CLASSIFICATION	6.749869869086352E-6	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999934348560396	WITHOUT_CLASSIFICATION	6.565143960425312E-6	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999942243833425	WITHOUT_CLASSIFICATION	5.775616657449794E-6	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999934206846371	WITHOUT_CLASSIFICATION	6.579315362835153E-6	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999938910822386	WITHOUT_CLASSIFICATION	6.108917761315053E-6	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999929398000753	WITHOUT_CLASSIFICATION	7.060199924721217E-6	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999926585070337	WITHOUT_CLASSIFICATION	7.341492966334809E-6	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999925779871972	WITHOUT_CLASSIFICATION	7.422012802827555E-6	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999922242779762	WITHOUT_CLASSIFICATION	7.775722023803299E-6	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999919279683885	WITHOUT_CLASSIFICATION	8.072031611461929E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.99999286204684	WITHOUT_CLASSIFICATION	7.137953159921143E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999932832947134	WITHOUT_CLASSIFICATION	6.716705286516785E-6	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999924644158745	WITHOUT_CLASSIFICATION	7.535584125386983E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999936368686708	WITHOUT_CLASSIFICATION	6.363131329187801E-6	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.999993945086368	WITHOUT_CLASSIFICATION	6.054913631994731E-6	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999931242282004	WITHOUT_CLASSIFICATION	6.8757717996172865E-6	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999931092894847	WITHOUT_CLASSIFICATION	6.890710515244634E-6	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999928265138757	WITHOUT_CLASSIFICATION	7.173486124392689E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999933338013749	WITHOUT_CLASSIFICATION	6.666198625146008E-6	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999930931066544	WITHOUT_CLASSIFICATION	6.906893345705456E-6	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.99999152567818	WITHOUT_CLASSIFICATION	8.474321820069758E-6	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.999993633758632	WITHOUT_CLASSIFICATION	6.366241367916038E-6	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.99999353736113	WITHOUT_CLASSIFICATION	6.462638870096372E-6	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999932192442172	WITHOUT_CLASSIFICATION	6.780755782817199E-6	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999932379031751	WITHOUT_CLASSIFICATION	6.7620968249470366E-6	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999915116715523	WITHOUT_CLASSIFICATION	8.488328447702528E-6	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999935161038079	WITHOUT_CLASSIFICATION	6.4838961920501745E-6	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999931560521907	WITHOUT_CLASSIFICATION	6.843947809359924E-6	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999931867085272	WITHOUT_CLASSIFICATION	6.81329147272659E-6	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999931685026844	WITHOUT_CLASSIFICATION	6.831497315595458E-6	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.999992490762469	WITHOUT_CLASSIFICATION	7.509237531025619E-6	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999933326602799	WITHOUT_CLASSIFICATION	6.6673397201509165E-6	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999924622980109	WITHOUT_CLASSIFICATION	7.5377019892626244E-6	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999935246623908	WITHOUT_CLASSIFICATION	6.475337609251271E-6	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999935161038079	WITHOUT_CLASSIFICATION	6.4838961920501745E-6	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999930506297301	WITHOUT_CLASSIFICATION	6.949370269885739E-6	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999924266077581	WITHOUT_CLASSIFICATION	7.573392241907721E-6	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999927485654266	WITHOUT_CLASSIFICATION	7.251434573416641E-6	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999925330776861	WITHOUT_CLASSIFICATION	7.466922313886805E-6	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999940851497696	WITHOUT_CLASSIFICATION	5.914850230388365E-6	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999937937909834	WITHOUT_CLASSIFICATION	6.206209016524939E-6	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.999993982445455	WITHOUT_CLASSIFICATION	6.0175545450697095E-6	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999917490336105	WITHOUT_CLASSIFICATION	8.250966389461553E-6	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999930715975681	WITHOUT_CLASSIFICATION	6.928402431879737E-6	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999931150571035	WITHOUT_CLASSIFICATION	6.884942896495495E-6	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999938989600582	WITHOUT_CLASSIFICATION	6.10103994177904E-6	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999939262886817	WITHOUT_CLASSIFICATION	6.073711318328477E-6	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999937065803371	WITHOUT_CLASSIFICATION	6.293419662883253E-6	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999939341469255	WITHOUT_CLASSIFICATION	6.06585307442529E-6	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.999992806225212	WITHOUT_CLASSIFICATION	7.193774787863298E-6	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999921673844225	WITHOUT_CLASSIFICATION	7.832615577484911E-6	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999932415247612	WITHOUT_CLASSIFICATION	6.75847523883592E-6	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.999993350294458	WITHOUT_CLASSIFICATION	6.649705541919859E-6	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999933884506366	WITHOUT_CLASSIFICATION	6.61154936341487E-6	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999931064343545	WITHOUT_CLASSIFICATION	6.893565645506556E-6	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999939461088488	WITHOUT_CLASSIFICATION	6.053891151055011E-6	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999943078834214	WITHOUT_CLASSIFICATION	5.692116578667043E-6	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999935788430734	WITHOUT_CLASSIFICATION	6.421156926575097E-6	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999934320283057	WITHOUT_CLASSIFICATION	6.56797169431081E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999941132043773	WITHOUT_CLASSIFICATION	5.886795622727269E-6	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999925000139092	WITHOUT_CLASSIFICATION	7.499986090817569E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999933393157351	WITHOUT_CLASSIFICATION	6.660684264912803E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999933338853572	WITHOUT_CLASSIFICATION	6.6661146427682665E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999943651242231	WITHOUT_CLASSIFICATION	5.634875776966638E-6	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999942716902269	WITHOUT_CLASSIFICATION	5.728309773158523E-6	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999941215371727	WITHOUT_CLASSIFICATION	5.87846282727934E-6	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.999993310223123	WITHOUT_CLASSIFICATION	6.689776877081875E-6	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999939685563984	WITHOUT_CLASSIFICATION	6.031443601520011E-6	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999939793720255	WITHOUT_CLASSIFICATION	6.0206279745759685E-6	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999931955990297	WITHOUT_CLASSIFICATION	6.8044009703161935E-6	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999932525615818	WITHOUT_CLASSIFICATION	6.747438418234877E-6	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.99999410368887	WITHOUT_CLASSIFICATION	5.896311129963797E-6	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999940617693126	WITHOUT_CLASSIFICATION	5.938230687342576E-6	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999932949971404	WITHOUT_CLASSIFICATION	6.70500285964802E-6	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999924292577491	WITHOUT_CLASSIFICATION	7.570742250907173E-6	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999940786422568	WITHOUT_CLASSIFICATION	5.921357743241991E-6	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999942162453276	WITHOUT_CLASSIFICATION	5.783754672420024E-6	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999943332638461	WITHOUT_CLASSIFICATION	5.666736153892177E-6	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999929247652816	WITHOUT_CLASSIFICATION	7.075234718392607E-6	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999933036858886	WITHOUT_CLASSIFICATION	6.696314111462374E-6	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999940635458758	WITHOUT_CLASSIFICATION	5.936454124204929E-6	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999932214225963	WITHOUT_CLASSIFICATION	6.778577403762088E-6	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999946499273153	WITHOUT_CLASSIFICATION	5.350072684596591E-6	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999936162834691	WITHOUT_CLASSIFICATION	6.383716530980948E-6	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999943121279048	WITHOUT_CLASSIFICATION	5.687872095184252E-6	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.999993635083878	WITHOUT_CLASSIFICATION	6.364916122058408E-6	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999933989877807	WITHOUT_CLASSIFICATION	6.601012219372332E-6	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999933007071427	WITHOUT_CLASSIFICATION	6.699292857299295E-6	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.99999412717393	WITHOUT_CLASSIFICATION	5.8728260699918505E-6	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999943797086428	WITHOUT_CLASSIFICATION	5.620291357142497E-6	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999941324225865	WITHOUT_CLASSIFICATION	5.8675774135742405E-6	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999944013424347	WITHOUT_CLASSIFICATION	5.598657565342062E-6	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999943171021831	WITHOUT_CLASSIFICATION	5.682897816847972E-6	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999943172394015	WITHOUT_CLASSIFICATION	5.682760598478714E-6	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999941064138909	WITHOUT_CLASSIFICATION	5.893586109139839E-6	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999941328132639	WITHOUT_CLASSIFICATION	5.867186736188511E-6	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.999994067396291	WITHOUT_CLASSIFICATION	5.932603708931939E-6	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999936221475805	WITHOUT_CLASSIFICATION	6.377852419598716E-6	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999935263282318	WITHOUT_CLASSIFICATION	6.473671768162885E-6	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.999992562430922	WITHOUT_CLASSIFICATION	7.437569078055907E-6	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999909925631485	WITHOUT_CLASSIFICATION	9.007436851488892E-6	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999926342035729	WITHOUT_CLASSIFICATION	7.365796427090481E-6	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999916093727286	WITHOUT_CLASSIFICATION	8.390627271460666E-6	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.999994018447244	WITHOUT_CLASSIFICATION	5.981552756010346E-6	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999939365686484	WITHOUT_CLASSIFICATION	6.06343135158153E-6	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999938495515588	WITHOUT_CLASSIFICATION	6.150448441266487E-6	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999932627193612	WITHOUT_CLASSIFICATION	6.737280638727161E-6	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999939537973367	WITHOUT_CLASSIFICATION	6.046202663295914E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999866019183467	WITHOUT_CLASSIFICATION	1.339808165335087E-5	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999872445565016	WITHOUT_CLASSIFICATION	1.2755443498563058E-5	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.999990625561733	WITHOUT_CLASSIFICATION	9.374438267023893E-6	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999811490128963	WITHOUT_CLASSIFICATION	1.8850987103740913E-5	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999733935401541	WITHOUT_CLASSIFICATION	2.660645984588083E-5	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.99995858205171	WITHOUT_CLASSIFICATION	4.141794828999878E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999923713106165	WITHOUT_CLASSIFICATION	7.628689383545332E-6	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999324384183599	WITHOUT_CLASSIFICATION	6.756158164014822E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999938349138763	WITHOUT_CLASSIFICATION	6.16508612370836E-6	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.999993199548508	WITHOUT_CLASSIFICATION	6.800451492080025E-6	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999941882736252	WITHOUT_CLASSIFICATION	5.811726374819914E-6	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999941494738566	WITHOUT_CLASSIFICATION	5.85052614341016E-6	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999939849767182	WITHOUT_CLASSIFICATION	6.01502328174829E-6	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999931478274078	WITHOUT_CLASSIFICATION	6.852172592109006E-6	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999918562843952	WITHOUT_CLASSIFICATION	8.143715604708933E-6	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999919466186029	WITHOUT_CLASSIFICATION	8.053381397027612E-6	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999936493785256	WITHOUT_CLASSIFICATION	6.350621474326071E-6	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999931753968075	WITHOUT_CLASSIFICATION	6.8246031924735765E-6	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999925245139819	WITHOUT_CLASSIFICATION	7.4754860181362695E-6	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999921683466682	WITHOUT_CLASSIFICATION	7.831653331863414E-6	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999931281526201	WITHOUT_CLASSIFICATION	6.871847379898344E-6	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999928332182935	WITHOUT_CLASSIFICATION	7.166781706541308E-6	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999920815462656	WITHOUT_CLASSIFICATION	7.918453734323975E-6	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999925056258927	WITHOUT_CLASSIFICATION	7.494374107312913E-6	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999931168140354	WITHOUT_CLASSIFICATION	6.883185964703538E-6	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999935818465817	WITHOUT_CLASSIFICATION	6.418153418299346E-6	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999931104369967	WITHOUT_CLASSIFICATION	6.889563003282854E-6	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999934119068383	WITHOUT_CLASSIFICATION	6.588093161753601E-6	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999904395133361	WITHOUT_CLASSIFICATION	9.560486663955391E-6	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999902472831416	WITHOUT_CLASSIFICATION	9.752716858375055E-6	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999927231264407	WITHOUT_CLASSIFICATION	7.276873559286801E-6	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999955577559367	WITHOUT_CLASSIFICATION	4.442244063315238E-6	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.999995129460389	WITHOUT_CLASSIFICATION	4.870539610966961E-6	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999966229828424	WITHOUT_CLASSIFICATION	3.3770171575873923E-6	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999846155810783	WITHOUT_CLASSIFICATION	1.5384418921744662E-5	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999980265477486	WITHOUT_CLASSIFICATION	1.9734522513620074E-6	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999946174216844	WITHOUT_CLASSIFICATION	5.382578315615897E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999802427224	WITHOUT_CLASSIFICATION	1.975727759769632E-7	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999944263909426	WITHOUT_CLASSIFICATION	5.573609057411815E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999994283095711	WITHOUT_CLASSIFICATION	5.716904289315867E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999994283095711	WITHOUT_CLASSIFICATION	5.716904289315867E-7	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999967474203145	WITHOUT_CLASSIFICATION	3.252579685428002E-6	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999827403691381	WITHOUT_CLASSIFICATION	1.7259630861820423E-5	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999985535061168	WITHOUT_CLASSIFICATION	1.446493883217604E-6	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999927975233368	WITHOUT_CLASSIFICATION	7.202476663133802E-6	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999959276725022	WITHOUT_CLASSIFICATION	4.072327497861376E-6	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999492732594113	WITHOUT_CLASSIFICATION	5.072674058881534E-5	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999988892073062	WITHOUT_CLASSIFICATION	1.110792693834331E-6	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999995787589742	WITHOUT_CLASSIFICATION	4.2124102582051133E-7	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.999999315129089	WITHOUT_CLASSIFICATION	6.848709110059349E-7	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.999998195112377	WITHOUT_CLASSIFICATION	1.8048876231267953E-6	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999744120843855	WITHOUT_CLASSIFICATION	2.558791561454129E-5	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999800750560902	WITHOUT_CLASSIFICATION	1.9924943909817835E-5	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999796412319258	WITHOUT_CLASSIFICATION	2.0358768074222293E-5	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999689453702487	WITHOUT_CLASSIFICATION	3.1054629751163886E-5	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999987984165665	WITHOUT_CLASSIFICATION	1.2015834335590204E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999987984165665	WITHOUT_CLASSIFICATION	1.2015834335590204E-6	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999640895674778	WITHOUT_CLASSIFICATION	3.5910432522202556E-5	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999983089009932	WITHOUT_CLASSIFICATION	1.6910990067844217E-6	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999996855504546	WITHOUT_CLASSIFICATION	3.1444954542615657E-7	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.999964406643352	WITHOUT_CLASSIFICATION	3.5593356648053615E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999989954060803	WITHOUT_CLASSIFICATION	1.0045939196784412E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999969230384269	WITHOUT_CLASSIFICATION	3.0769615729909907E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999982906871546	WITHOUT_CLASSIFICATION	1.709312845358985E-6	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999969230384269	WITHOUT_CLASSIFICATION	3.0769615729909907E-6	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999888653345541	WITHOUT_CLASSIFICATION	1.1134665445977454E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999997639482888	WITHOUT_CLASSIFICATION	2.3605171107445858E-7	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999790083871418	WITHOUT_CLASSIFICATION	2.0991612858279915E-5	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999801942366995	WITHOUT_CLASSIFICATION	1.9805763300460308E-5	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999994228712074	WITHOUT_CLASSIFICATION	5.771287926334178E-7	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999987570258649	WITHOUT_CLASSIFICATION	1.2429741351428518E-6	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999996228976681	WITHOUT_CLASSIFICATION	3.7710233191860527E-7	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999824690885042	WITHOUT_CLASSIFICATION	1.7530911495807305E-5	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999989381155563	WITHOUT_CLASSIFICATION	1.0618844437023779E-5	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.999994646783051	WITHOUT_CLASSIFICATION	5.353216949010692E-6	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999941504545399	WITHOUT_CLASSIFICATION	5.849545460055148E-6	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999299488257675	WITHOUT_CLASSIFICATION	7.005117423251105E-5	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999195483835083	WITHOUT_CLASSIFICATION	8.045161649173236E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999765604948128	WITHOUT_CLASSIFICATION	2.343950518725802E-5	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999794107161561	WITHOUT_CLASSIFICATION	2.0589283843833907E-5	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999794107161561	WITHOUT_CLASSIFICATION	2.0589283843833907E-5	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999992151618491	WITHOUT_CLASSIFICATION	7.848381510401398E-7	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999934598069823	WITHOUT_CLASSIFICATION	6.540193017788861E-6	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999990511200048	WITHOUT_CLASSIFICATION	9.488799951643158E-7	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999969003693784	WITHOUT_CLASSIFICATION	3.0996306215125065E-6	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999992880867166	WITHOUT_CLASSIFICATION	7.119132834084917E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999969230384269	WITHOUT_CLASSIFICATION	3.0769615729909907E-6	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999995875404807	WITHOUT_CLASSIFICATION	4.124595193173988E-7	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999128449507	WITHOUT_CLASSIFICATION	8.715504925500775E-8	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999781377577346	WITHOUT_CLASSIFICATION	2.1862242265487756E-5	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999996911732223	WITHOUT_CLASSIFICATION	3.0882677769497206E-7	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999777227274	WITHOUT_CLASSIFICATION	2.227727257225629E-8	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999995162229247	WITHOUT_CLASSIFICATION	4.837770753403819E-7	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999991699327844	WITHOUT_CLASSIFICATION	8.30067215750108E-7	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999927206404953	WITHOUT_CLASSIFICATION	7.279359504677529E-6	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999990940231671	WITHOUT_CLASSIFICATION	9.059768327979931E-7	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999746938919493	WITHOUT_CLASSIFICATION	2.5306108050701746E-5	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999988307726527	WITHOUT_CLASSIFICATION	1.1692273473128683E-6	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999994581569719	WITHOUT_CLASSIFICATION	5.418430280775415E-7	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999958919645664	WITHOUT_CLASSIFICATION	4.1080354336043855E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999865315061613	WITHOUT_CLASSIFICATION	1.3468493838730484E-5	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999940664482191	WITHOUT_CLASSIFICATION	5.933551780823777E-6	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999230918123632	WITHOUT_CLASSIFICATION	7.690818763688767E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999995538344818	WITHOUT_CLASSIFICATION	4.4616551817512573E-7	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999968754107521	WITHOUT_CLASSIFICATION	3.1245892478868157E-6	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999907227007306	WITHOUT_CLASSIFICATION	9.277299269315461E-6	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999897933784142	WITHOUT_CLASSIFICATION	1.0206621585744041E-5	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999950038488653	WITHOUT_CLASSIFICATION	4.996151134700209E-6	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999502251136739	WITHOUT_CLASSIFICATION	4.9774886325966534E-5	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999988591285965	WITHOUT_CLASSIFICATION	1.1408714033984372E-6	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999964368227257	WITHOUT_CLASSIFICATION	3.563177274373053E-6	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999989986611956	WITHOUT_CLASSIFICATION	1.0013388044506857E-6	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.999988387755729	WITHOUT_CLASSIFICATION	1.1612244270936828E-5	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999998556928079	WITHOUT_CLASSIFICATION	1.4430719218513631E-7	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999997494207162	WITHOUT_CLASSIFICATION	2.505792838432072E-7	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9998169378349653	WITHOUT_CLASSIFICATION	1.8306216503465118E-4	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.99999848420343	WITHOUT_CLASSIFICATION	1.515796570143245E-6	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999967452374545	WITHOUT_CLASSIFICATION	3.254762545595428E-6	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999963988901405	WITHOUT_CLASSIFICATION	3.601109859491206E-6	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.999989925485175	WITHOUT_CLASSIFICATION	1.007451482508199E-5	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999989154809191	WITHOUT_CLASSIFICATION	1.084519080805711E-6	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999986004529449	WITHOUT_CLASSIFICATION	1.399547055179663E-6	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999998768863023	WITHOUT_CLASSIFICATION	1.2311369764955475E-7	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999995151974693	WITHOUT_CLASSIFICATION	4.84802530621073E-7	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999993964482252	WITHOUT_CLASSIFICATION	6.035517747116073E-7	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999985974403777	WITHOUT_CLASSIFICATION	1.4025596222620718E-6	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999609733756	WITHOUT_CLASSIFICATION	3.902662440677268E-8	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999324384183599	WITHOUT_CLASSIFICATION	6.756158164014822E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9994821158874477	WITHOUT_CLASSIFICATION	5.17884112552325E-4	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999974316647106	WITHOUT_CLASSIFICATION	2.568335289447767E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999949749370466	WITHOUT_CLASSIFICATION	5.02506295339361E-6	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999962168918924	WITHOUT_CLASSIFICATION	3.7831081074625627E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999997639482888	WITHOUT_CLASSIFICATION	2.3605171107445858E-7	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999971450928035	WITHOUT_CLASSIFICATION	2.8549071965977764E-6	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999999051494594	WITHOUT_CLASSIFICATION	9.485054072821887E-8	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999972763923288	WITHOUT_CLASSIFICATION	2.7236076712702984E-6	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999990071597484	WITHOUT_CLASSIFICATION	9.928402515395162E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999990071597484	WITHOUT_CLASSIFICATION	9.928402515395162E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999995678951078	WITHOUT_CLASSIFICATION	4.3210489219801896E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999995678951078	WITHOUT_CLASSIFICATION	4.3210489219801896E-7	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999995678951078	WITHOUT_CLASSIFICATION	4.3210489219801896E-7	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.999984287363869	WITHOUT_CLASSIFICATION	1.571263613098423E-5	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.999984287363869	WITHOUT_CLASSIFICATION	1.571263613098423E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999745192056233	WITHOUT_CLASSIFICATION	2.5480794376609597E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999745192056233	WITHOUT_CLASSIFICATION	2.5480794376609597E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999890372180651	WITHOUT_CLASSIFICATION	1.0962781934911185E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999995435842618	WITHOUT_CLASSIFICATION	4.5641573823050795E-7	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999965713503816	WITHOUT_CLASSIFICATION	3.428649618510841E-6	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999965713503816	WITHOUT_CLASSIFICATION	3.428649618510841E-6	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999994841794658	WITHOUT_CLASSIFICATION	5.158205341841995E-7	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999970645151428	WITHOUT_CLASSIFICATION	2.9354848572216246E-6	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999934801885342	WITHOUT_CLASSIFICATION	6.519811465877296E-6	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999954520804228	WITHOUT_CLASSIFICATION	4.54791957725829E-6	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999964695005245	WITHOUT_CLASSIFICATION	3.530499475468289E-6	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999988975934481	WITHOUT_CLASSIFICATION	1.1024065520133923E-6	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999915377661146	WITHOUT_CLASSIFICATION	8.462233885364336E-6	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999975967324347	WITHOUT_CLASSIFICATION	2.4032675653862245E-6	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999966902016728	WITHOUT_CLASSIFICATION	3.3097983271962868E-6	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999988952702076	WITHOUT_CLASSIFICATION	1.1047297924119626E-6	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999994859450351	WITHOUT_CLASSIFICATION	5.140549648973171E-7	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999968642553233	WITHOUT_CLASSIFICATION	3.135744676764948E-6	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999700119649353	WITHOUT_CLASSIFICATION	2.9988035064638715E-5	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999953657404044	WITHOUT_CLASSIFICATION	4.6342595956621256E-6	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999982249163781	WITHOUT_CLASSIFICATION	1.7750836219021637E-6	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999754277478364	WITHOUT_CLASSIFICATION	2.4572252163518007E-5	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999902166639949	WITHOUT_CLASSIFICATION	9.78333600506031E-6	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999943418149561	WITHOUT_CLASSIFICATION	5.658185043916043E-6	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999964517368833	WITHOUT_CLASSIFICATION	3.5482631166217396E-6	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999672328448562	WITHOUT_CLASSIFICATION	3.2767155143762014E-5	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999987994393924	WITHOUT_CLASSIFICATION	1.200560607622781E-6	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999980447030955	WITHOUT_CLASSIFICATION	1.9552969045032955E-6	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999973485899659	WITHOUT_CLASSIFICATION	2.6514100340167542E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999993548800212	WITHOUT_CLASSIFICATION	6.451199787037909E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999996150555149	WITHOUT_CLASSIFICATION	3.849444849842444E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999987195903989	WITHOUT_CLASSIFICATION	1.2804096011344991E-6	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999988673557421	WITHOUT_CLASSIFICATION	1.1326442578989117E-6	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999994636802133	WITHOUT_CLASSIFICATION	5.363197866563588E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999993897559297	WITHOUT_CLASSIFICATION	6.102440703261843E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.99999963586605	WITHOUT_CLASSIFICATION	3.641339499891081E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999987888107339	WITHOUT_CLASSIFICATION	1.2111892660439559E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995751174133	WITHOUT_CLASSIFICATION	4.248825865694488E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997464716651	WITHOUT_CLASSIFICATION	2.535283347868068E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993701391993	WITHOUT_CLASSIFICATION	6.298608007312881E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997464716651	WITHOUT_CLASSIFICATION	2.535283347868068E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997464716651	WITHOUT_CLASSIFICATION	2.535283347868068E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997464716651	WITHOUT_CLASSIFICATION	2.535283347868068E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997464716651	WITHOUT_CLASSIFICATION	2.535283347868068E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997464716651	WITHOUT_CLASSIFICATION	2.535283347868068E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997464716651	WITHOUT_CLASSIFICATION	2.535283347868068E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993701391993	WITHOUT_CLASSIFICATION	6.298608007312881E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993701391993	WITHOUT_CLASSIFICATION	6.298608007312881E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993701391993	WITHOUT_CLASSIFICATION	6.298608007312881E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993701391993	WITHOUT_CLASSIFICATION	6.298608007312881E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993701391993	WITHOUT_CLASSIFICATION	6.298608007312881E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993701391993	WITHOUT_CLASSIFICATION	6.298608007312881E-7	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999997851912154	WITHOUT_CLASSIFICATION	2.1480878459877703E-7	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999978762542072	WITHOUT_CLASSIFICATION	2.1237457927922487E-6	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999965444531543	WITHOUT_CLASSIFICATION	3.4555468457415843E-6	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999990084351034	WITHOUT_CLASSIFICATION	9.915648966779513E-7	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999997858095948	WITHOUT_CLASSIFICATION	2.1419040528489424E-7	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999987008997122	WITHOUT_CLASSIFICATION	1.2991002877667066E-6	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999997329830654	WITHOUT_CLASSIFICATION	2.670169346545433E-7	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.999999896389555	WITHOUT_CLASSIFICATION	1.0361044493972175E-7	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999983422305526	WITHOUT_CLASSIFICATION	1.6577694474026819E-6	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999957799913618	WITHOUT_CLASSIFICATION	4.220008638144625E-6	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.999967077128223	WITHOUT_CLASSIFICATION	3.292287177700553E-5	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999997835745322	WITHOUT_CLASSIFICATION	2.1642546777159819E-7	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999867850834387	WITHOUT_CLASSIFICATION	1.3214916561196253E-5	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999994159663469	WITHOUT_CLASSIFICATION	5.840336530213561E-7	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999971734204248	WITHOUT_CLASSIFICATION	2.8265795751683693E-6	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999440079771358	WITHOUT_CLASSIFICATION	5.599202286412347E-5	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999989004563491	WITHOUT_CLASSIFICATION	1.0995436508573095E-6	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999997639902258	WITHOUT_CLASSIFICATION	2.3600977411526534E-7	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999998197616731	WITHOUT_CLASSIFICATION	1.8023832700951305E-7	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.999999883621251	WITHOUT_CLASSIFICATION	1.1637874896150365E-7	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999993791395951	WITHOUT_CLASSIFICATION	6.208604047689577E-7	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999975869599981	WITHOUT_CLASSIFICATION	2.413040001863449E-6	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999982906871546	WITHOUT_CLASSIFICATION	1.709312845358985E-6	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999874661062347	WITHOUT_CLASSIFICATION	1.253389376536782E-5	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999473166327361	WITHOUT_CLASSIFICATION	5.2683367263925316E-5	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999475908552	WITHOUT_CLASSIFICATION	5.2409144761925184E-8	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.999998856821178	WITHOUT_CLASSIFICATION	1.1431788220276865E-6	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999997581533675	WITHOUT_CLASSIFICATION	2.418466325048186E-6	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999936352644347	WITHOUT_CLASSIFICATION	6.364735565346774E-6	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999989112944955	WITHOUT_CLASSIFICATION	1.0887055045827427E-6	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999989285591937	WITHOUT_CLASSIFICATION	1.0714408063700698E-6	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999996096783896	WITHOUT_CLASSIFICATION	3.903216104000153E-7	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999996417812074	WITHOUT_CLASSIFICATION	3.5821879268776767E-7	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999985757250595	WITHOUT_CLASSIFICATION	1.4242749404948278E-6	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999994938617925	WITHOUT_CLASSIFICATION	5.061382075411011E-7	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999992020164011	WITHOUT_CLASSIFICATION	7.979835988054551E-7	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999992882027325	WITHOUT_CLASSIFICATION	7.117972675213438E-7	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999990577960757	WITHOUT_CLASSIFICATION	9.422039242537286E-7	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999827756706	WITHOUT_CLASSIFICATION	1.7224329386919057E-8	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999993984500511	WITHOUT_CLASSIFICATION	6.015499487844976E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999937972609783	WITHOUT_CLASSIFICATION	6.202739021745531E-6	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999974299716787	WITHOUT_CLASSIFICATION	2.57002832139899E-6	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999919894998162	WITHOUT_CLASSIFICATION	8.010500183853923E-6	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999877034208633	WITHOUT_CLASSIFICATION	1.2296579136805876E-5	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999877034208633	WITHOUT_CLASSIFICATION	1.2296579136805876E-5	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999964220448311	WITHOUT_CLASSIFICATION	3.5779551690319194E-6	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999964220448311	WITHOUT_CLASSIFICATION	3.5779551690319194E-6	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999959936735734	WITHOUT_CLASSIFICATION	4.006326426587119E-6	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999959936735734	WITHOUT_CLASSIFICATION	4.006326426587119E-6	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999985165287101	WITHOUT_CLASSIFICATION	1.483471289930916E-6	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999998511637941	WITHOUT_CLASSIFICATION	1.488362058955063E-7	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999876853216242	WITHOUT_CLASSIFICATION	1.2314678375868116E-5	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999937590021778	WITHOUT_CLASSIFICATION	6.240997822244326E-6	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999997738542038	WITHOUT_CLASSIFICATION	2.2614579619906232E-7	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999775223489275	WITHOUT_CLASSIFICATION	2.247765107247244E-5	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999969666537113	WITHOUT_CLASSIFICATION	3.0333462886935603E-6	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999998827658506	WITHOUT_CLASSIFICATION	1.1723414943262213E-7	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999995927679645	WITHOUT_CLASSIFICATION	4.0723203547319135E-7	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999987109325819	WITHOUT_CLASSIFICATION	1.2890674181291976E-6	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999748004193525	WITHOUT_CLASSIFICATION	2.5199580647474364E-5	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999930380393213	WITHOUT_CLASSIFICATION	6.96196067878892E-6	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999992937736768	WITHOUT_CLASSIFICATION	7.06226323164394E-7	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999999847078088	WITHOUT_CLASSIFICATION	1.5292191209818806E-8	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999970002050006	WITHOUT_CLASSIFICATION	2.9997949993029395E-6	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.999981450097204	WITHOUT_CLASSIFICATION	1.8549902796036704E-5	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999365450382	WITHOUT_CLASSIFICATION	6.345496187059146E-8	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999973678072221	WITHOUT_CLASSIFICATION	2.632192777868855E-6	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999935101805353	WITHOUT_CLASSIFICATION	6.489819464611171E-6	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999777217013814	WITHOUT_CLASSIFICATION	2.2278298618530578E-5	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.999979933929721	WITHOUT_CLASSIFICATION	2.006607027894467E-5	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999988353228381	WITHOUT_CLASSIFICATION	1.164677161971836E-6	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999841643844317	WITHOUT_CLASSIFICATION	1.5835615568270802E-5	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999996336499768	WITHOUT_CLASSIFICATION	3.6635002319580694E-7	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.99999466472593	WITHOUT_CLASSIFICATION	5.335274070015392E-6	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.999999752830337	WITHOUT_CLASSIFICATION	2.471696630279627E-7	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999753414302797	WITHOUT_CLASSIFICATION	2.465856972030737E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999980157056273	WITHOUT_CLASSIFICATION	1.9842943727512315E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999980157056273	WITHOUT_CLASSIFICATION	1.9842943727512315E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999980157056273	WITHOUT_CLASSIFICATION	1.9842943727512315E-6	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999997826590046	WITHOUT_CLASSIFICATION	2.173409955088427E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999997826590046	WITHOUT_CLASSIFICATION	2.173409955088427E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999865315061613	WITHOUT_CLASSIFICATION	1.3468493838730484E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999865315061613	WITHOUT_CLASSIFICATION	1.3468493838730484E-5	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999961476643524	WITHOUT_CLASSIFICATION	3.852335647614392E-6	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.999945531575033	WITHOUT_CLASSIFICATION	5.4468424967047725E-5	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999977661356592	WITHOUT_CLASSIFICATION	2.2338643408994606E-6	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999971198488444	WITHOUT_CLASSIFICATION	2.8801511555313877E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999980157056273	WITHOUT_CLASSIFICATION	1.9842943727512315E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999980157056273	WITHOUT_CLASSIFICATION	1.9842943727512315E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999980157056273	WITHOUT_CLASSIFICATION	1.9842943727512315E-6	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999997826590046	WITHOUT_CLASSIFICATION	2.173409955088427E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999997826590046	WITHOUT_CLASSIFICATION	2.173409955088427E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999997826590046	WITHOUT_CLASSIFICATION	2.173409955088427E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999865315061613	WITHOUT_CLASSIFICATION	1.3468493838730484E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999865315061613	WITHOUT_CLASSIFICATION	1.3468493838730484E-5	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999997218897135	WITHOUT_CLASSIFICATION	2.78110286493412E-7	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999991135248691	WITHOUT_CLASSIFICATION	8.864751308294535E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999970640791881	WITHOUT_CLASSIFICATION	2.935920811854911E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999970640791881	WITHOUT_CLASSIFICATION	2.935920811854911E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999970640791881	WITHOUT_CLASSIFICATION	2.935920811854911E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999970640791881	WITHOUT_CLASSIFICATION	2.935920811854911E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999970640791881	WITHOUT_CLASSIFICATION	2.935920811854911E-6	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999979846092895	WITHOUT_CLASSIFICATION	2.0153907106473244E-6	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999936796655181	WITHOUT_CLASSIFICATION	6.32033448193674E-6	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999929281809855	WITHOUT_CLASSIFICATION	7.071819014487469E-6	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999940478212043	WITHOUT_CLASSIFICATION	5.952178795772267E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999898109710393	WITHOUT_CLASSIFICATION	1.0189028960607538E-5	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999967184331804	WITHOUT_CLASSIFICATION	3.2815668197239994E-6	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999343472256257	WITHOUT_CLASSIFICATION	6.56527743743235E-5	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999976917922306	WITHOUT_CLASSIFICATION	2.308207769406589E-6	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999952064614045	WITHOUT_CLASSIFICATION	4.793538595528362E-6	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999957927655067	WITHOUT_CLASSIFICATION	4.207234493372634E-6	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999984500240927	WITHOUT_CLASSIFICATION	1.5499759072136631E-6	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.99999514631441	WITHOUT_CLASSIFICATION	4.853685590054009E-6	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999963996071822	WITHOUT_CLASSIFICATION	3.6003928178434152E-6	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999979259946599	WITHOUT_CLASSIFICATION	2.0740053400767736E-6	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999966094492293	WITHOUT_CLASSIFICATION	3.3905507707290507E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999343385020433	WITHOUT_CLASSIFICATION	6.566149795677195E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999343385020433	WITHOUT_CLASSIFICATION	6.566149795677195E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999343385020433	WITHOUT_CLASSIFICATION	6.566149795677195E-5	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9995132621768814	WITHOUT_CLASSIFICATION	4.8673782311865613E-4	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9995141074953875	WITHOUT_CLASSIFICATION	4.858925046125384E-4	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999970272485568	WITHOUT_CLASSIFICATION	2.9727514432790794E-6	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999991969831579	WITHOUT_CLASSIFICATION	8.03016842100932E-7	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999987501006058	WITHOUT_CLASSIFICATION	1.2498993941902462E-6	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999995567325966	WITHOUT_CLASSIFICATION	4.4326740348310363E-7	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.999999172462966	WITHOUT_CLASSIFICATION	8.275370340536676E-7	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999992230145235	WITHOUT_CLASSIFICATION	7.769854764174304E-7	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.999998568195296	WITHOUT_CLASSIFICATION	1.431804704082456E-6	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999997508235865	WITHOUT_CLASSIFICATION	2.4917641347573375E-7	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999994691073062	WITHOUT_CLASSIFICATION	5.308926938067399E-7	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999996773498725	WITHOUT_CLASSIFICATION	3.2265012750986966E-7	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999987281883925	WITHOUT_CLASSIFICATION	1.271811607404835E-6	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999947066315903	WITHOUT_CLASSIFICATION	5.2933684096847136E-6	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999964465575056	WITHOUT_CLASSIFICATION	3.5534424944400628E-6	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999985332072356	WITHOUT_CLASSIFICATION	1.466792764417587E-6	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999976101088563	WITHOUT_CLASSIFICATION	2.3898911437341492E-6	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.999996306622165	WITHOUT_CLASSIFICATION	3.6933778350817423E-6	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999949405237193	WITHOUT_CLASSIFICATION	5.0594762807217465E-6	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999963852147494	WITHOUT_CLASSIFICATION	3.6147852505995098E-6	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999961299450584	WITHOUT_CLASSIFICATION	3.87005494164709E-6	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999984919163946	WITHOUT_CLASSIFICATION	1.508083605353559E-6	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999995303369499	WITHOUT_CLASSIFICATION	4.696630502266292E-7	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999980407746502	WITHOUT_CLASSIFICATION	1.9592253498367256E-6	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999905903838779	WITHOUT_CLASSIFICATION	9.409616122026681E-6	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999923869035793	WITHOUT_CLASSIFICATION	7.613096420840903E-6	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999928670680266	WITHOUT_CLASSIFICATION	7.132931973476322E-6	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999930200927962	WITHOUT_CLASSIFICATION	6.979907203840181E-6	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999835922725736	WITHOUT_CLASSIFICATION	1.6407727426340284E-5	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9999143041858471	WITHOUT_CLASSIFICATION	8.569581415282105E-5	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9999050897617824	WITHOUT_CLASSIFICATION	9.491023821760719E-5	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9998624713884539	WITHOUT_CLASSIFICATION	1.3752861154613753E-4	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9999088081620859	WITHOUT_CLASSIFICATION	9.119183791409544E-5	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9999047213611035	WITHOUT_CLASSIFICATION	9.527863889642271E-5	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9999054947163873	WITHOUT_CLASSIFICATION	9.450528361276003E-5	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.999906277790698	WITHOUT_CLASSIFICATION	9.37222093019904E-5	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999988486264594	WITHOUT_CLASSIFICATION	1.1513735406091086E-6	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999978890420868	WITHOUT_CLASSIFICATION	2.1109579131395414E-6	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999954481563347	WITHOUT_CLASSIFICATION	4.551843665368255E-6	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.6101152833646201	TEST	0.38988471663538	WITHOUT_CLASSIFICATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9998595989043115	WITHOUT_CLASSIFICATION	1.4040109568841041E-4	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999998646392441	WITHOUT_CLASSIFICATION	1.3536075586050154E-7	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999953828700724	WITHOUT_CLASSIFICATION	4.617129927658629E-6	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999995704957201	WITHOUT_CLASSIFICATION	4.295042798376481E-7	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9998122850006621	WITHOUT_CLASSIFICATION	1.8771499933785865E-4	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999748219902497	WITHOUT_CLASSIFICATION	2.5178009750265365E-5	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998661615543265	WITHOUT_CLASSIFICATION	1.338384456735955E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998661615543265	WITHOUT_CLASSIFICATION	1.338384456735955E-4	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999967281277273	WITHOUT_CLASSIFICATION	3.27187227279907E-6	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999978088765569	WITHOUT_CLASSIFICATION	2.191123443256891E-6	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999866055658578	WITHOUT_CLASSIFICATION	1.3394434142167463E-5	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9984101931471465	WITHOUT_CLASSIFICATION	0.0015898068528534546	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999495983629548	WITHOUT_CLASSIFICATION	5.040163704510051E-5	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999969629480568	WITHOUT_CLASSIFICATION	3.0370519431110028E-6	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999953569724143	WITHOUT_CLASSIFICATION	4.643027585663063E-6	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999992660177766	WITHOUT_CLASSIFICATION	7.339822233345237E-7	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999983672905306	WITHOUT_CLASSIFICATION	1.6327094693795146E-6	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.999999830563198	WITHOUT_CLASSIFICATION	1.6943680202596196E-7	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998394737171	WITHOUT_CLASSIFICATION	1.6052628290935597E-7	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998394737171	WITHOUT_CLASSIFICATION	1.6052628290935597E-7	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998394737171	WITHOUT_CLASSIFICATION	1.6052628290935597E-7	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998394737171	WITHOUT_CLASSIFICATION	1.6052628290935597E-7	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999885208499587	WITHOUT_CLASSIFICATION	1.147915004133527E-5	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999793533740807	WITHOUT_CLASSIFICATION	2.064662591932932E-5	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999918158638111	WITHOUT_CLASSIFICATION	8.184136188851827E-6	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999864153008942	WITHOUT_CLASSIFICATION	1.3584699105770284E-5	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999926349366465	WITHOUT_CLASSIFICATION	7.365063353628285E-6	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999997525101925	WITHOUT_CLASSIFICATION	2.4748980753267757E-7	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999945637870024	WITHOUT_CLASSIFICATION	5.436212997755107E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999983526739846	WITHOUT_CLASSIFICATION	1.6473260153722364E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999983526739846	WITHOUT_CLASSIFICATION	1.6473260153722364E-6	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999997010258669	WITHOUT_CLASSIFICATION	2.9897413314168775E-7	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999986945189443	WITHOUT_CLASSIFICATION	1.305481055636219E-6	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999959405955473	WITHOUT_CLASSIFICATION	4.05940445270422E-6	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999346409059	WITHOUT_CLASSIFICATION	6.535909413418841E-8	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999346409059	WITHOUT_CLASSIFICATION	6.535909413418841E-8	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999997474181235	WITHOUT_CLASSIFICATION	2.525818764529282E-7	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999800964881622	WITHOUT_CLASSIFICATION	1.9903511837830676E-5	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999800964881622	WITHOUT_CLASSIFICATION	1.9903511837830676E-5	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9998883265915175	WITHOUT_CLASSIFICATION	1.1167340848248022E-4	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.999991166212972	WITHOUT_CLASSIFICATION	8.833787028029412E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999988445938516	WITHOUT_CLASSIFICATION	1.1554061484848178E-6	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999893207615259	WITHOUT_CLASSIFICATION	1.0679238474124078E-5	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999991434110664	WITHOUT_CLASSIFICATION	8.565889334990448E-7	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999996942406973	WITHOUT_CLASSIFICATION	3.0575930257349643E-7	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999532363759265	WITHOUT_CLASSIFICATION	4.676362407357974E-5	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9999692547153949	WITHOUT_CLASSIFICATION	3.0745284605166445E-5	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999990500702575	WITHOUT_CLASSIFICATION	9.499297424077769E-7	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999926060994564	WITHOUT_CLASSIFICATION	7.3939005435595165E-6	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.999981932648618	WITHOUT_CLASSIFICATION	1.806735138198381E-5	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999976162041958	WITHOUT_CLASSIFICATION	2.383795804106797E-6	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9984372567038592	WITHOUT_CLASSIFICATION	0.001562743296140753	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9987312652332023	WITHOUT_CLASSIFICATION	0.0012687347667976296	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999997204959554	WITHOUT_CLASSIFICATION	2.795040445437579E-7	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999992737905211	WITHOUT_CLASSIFICATION	7.262094789697579E-7	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999861679188439	WITHOUT_CLASSIFICATION	1.3832081156126003E-5	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999913961008255	WITHOUT_CLASSIFICATION	8.603899174368928E-6	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999940304852488	WITHOUT_CLASSIFICATION	5.969514751138458E-6	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999997434605514	WITHOUT_CLASSIFICATION	2.5653944857425965E-7	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999922814138953	WITHOUT_CLASSIFICATION	7.718586104662406E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999829295065087	WITHOUT_CLASSIFICATION	1.7070493491267637E-5	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999781218340873	WITHOUT_CLASSIFICATION	2.1878165912621633E-5	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999475832538393	WITHOUT_CLASSIFICATION	5.241674616069191E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9997868379161928	WITHOUT_CLASSIFICATION	2.131620838071855E-4	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9995993712818506	WITHOUT_CLASSIFICATION	4.006287181493627E-4	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999987470465577	WITHOUT_CLASSIFICATION	1.2529534423270422E-6	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999922922137928	WITHOUT_CLASSIFICATION	7.707786207239254E-6	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999997959206118	WITHOUT_CLASSIFICATION	2.0407938813757712E-7	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999986754274212	WITHOUT_CLASSIFICATION	1.3245725789166106E-6	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999610743781303	WITHOUT_CLASSIFICATION	3.89256218697513E-5	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999943476856646	WITHOUT_CLASSIFICATION	5.652314335289672E-6	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9996507954601687	WITHOUT_CLASSIFICATION	3.492045398313652E-4	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999959110390579	WITHOUT_CLASSIFICATION	4.088960942129471E-6	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999995007619745	WITHOUT_CLASSIFICATION	4.992380255709594E-7	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999709064583463	WITHOUT_CLASSIFICATION	2.9093541653736204E-5	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999492515453153	WITHOUT_CLASSIFICATION	5.074845468471674E-5	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999965284048001	WITHOUT_CLASSIFICATION	3.4715951997886237E-6	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999818213009685	WITHOUT_CLASSIFICATION	1.817869903151718E-5	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999709064583463	WITHOUT_CLASSIFICATION	2.9093541653736204E-5	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999492515453153	WITHOUT_CLASSIFICATION	5.074845468471674E-5	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999975873054543	WITHOUT_CLASSIFICATION	2.4126945458300667E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999837234894016	WITHOUT_CLASSIFICATION	1.6276510598406016E-5	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999837234894016	WITHOUT_CLASSIFICATION	1.6276510598406016E-5	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999843484262828	WITHOUT_CLASSIFICATION	1.565157371719046E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999970178650515	WITHOUT_CLASSIFICATION	2.982134948582118E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999798615570747	WITHOUT_CLASSIFICATION	2.013844292527785E-5	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999823300342812	WITHOUT_CLASSIFICATION	1.7669965718797136E-5	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999617845199602	WITHOUT_CLASSIFICATION	3.82154800397551E-5	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9998255823978806	WITHOUT_CLASSIFICATION	1.744176021193936E-4	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999801071331685	WITHOUT_CLASSIFICATION	1.9892866831445855E-5	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999970712965195	WITHOUT_CLASSIFICATION	2.928703480492901E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999969551291318	WITHOUT_CLASSIFICATION	3.04487086827195E-6	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999528355995915	WITHOUT_CLASSIFICATION	4.716440040853396E-5	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999997652618915	WITHOUT_CLASSIFICATION	2.3473810837861342E-7	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.999997563025869	WITHOUT_CLASSIFICATION	2.4369741310775717E-6	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999937109285936	WITHOUT_CLASSIFICATION	6.289071406430249E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999959693789587	WITHOUT_CLASSIFICATION	4.030621041251168E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999959693789587	WITHOUT_CLASSIFICATION	4.030621041251168E-6	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999355138021211	WITHOUT_CLASSIFICATION	6.448619787886658E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999355138021211	WITHOUT_CLASSIFICATION	6.448619787886658E-5	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999978276900537	WITHOUT_CLASSIFICATION	2.172309946197884E-6	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999980291448268	WITHOUT_CLASSIFICATION	1.9708551731792076E-6	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.999994276269436	WITHOUT_CLASSIFICATION	5.7237305639152885E-6	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999965308331294	WITHOUT_CLASSIFICATION	3.469166870586362E-6	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9998949480489535	WITHOUT_CLASSIFICATION	1.0505195104656928E-4	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999925675712499	WITHOUT_CLASSIFICATION	7.432428750097468E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999798615570747	WITHOUT_CLASSIFICATION	2.013844292527785E-5	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999823300342812	WITHOUT_CLASSIFICATION	1.7669965718797136E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999969551291318	WITHOUT_CLASSIFICATION	3.04487086827195E-6	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999528355995915	WITHOUT_CLASSIFICATION	4.716440040853396E-5	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999994487573757	WITHOUT_CLASSIFICATION	5.512426244407363E-7	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999982813423963	WITHOUT_CLASSIFICATION	1.7186576036744527E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999497570568622	WITHOUT_CLASSIFICATION	5.0242943137713345E-5	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.999991761691798	WITHOUT_CLASSIFICATION	8.238308202043674E-6	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999979819963707	WITHOUT_CLASSIFICATION	2.0180036293791585E-6	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999916815523784	WITHOUT_CLASSIFICATION	8.318447621571306E-6	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999800311688188	WITHOUT_CLASSIFICATION	1.9968831181167455E-5	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9998879818495334	WITHOUT_CLASSIFICATION	1.1201815046659197E-4	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999951442985726	WITHOUT_CLASSIFICATION	4.855701427330255E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.999995725118159	WITHOUT_CLASSIFICATION	4.2748818409398946E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999399759806	WITHOUT_CLASSIFICATION	6.002401945108594E-8	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.999875228571378	WITHOUT_CLASSIFICATION	1.2477142862201077E-4	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.999993059810604	WITHOUT_CLASSIFICATION	6.940189395986927E-6	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999791306971241	WITHOUT_CLASSIFICATION	2.0869302875840157E-5	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999878043972386	WITHOUT_CLASSIFICATION	1.2195602761385278E-5	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999898995633825	WITHOUT_CLASSIFICATION	1.0100436617535583E-5	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.999993803015305	WITHOUT_CLASSIFICATION	6.196984694863234E-6	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999829754147234	WITHOUT_CLASSIFICATION	1.702458527663087E-5	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999884899386495	WITHOUT_CLASSIFICATION	1.1510061350492701E-5	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999795541702766	WITHOUT_CLASSIFICATION	2.044582972333319E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999816496258233	WITHOUT_CLASSIFICATION	1.8350374176779593E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999816496258233	WITHOUT_CLASSIFICATION	1.8350374176779593E-5	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999961727423946	WITHOUT_CLASSIFICATION	3.827257605333546E-6	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999338184108328	WITHOUT_CLASSIFICATION	6.618158916717728E-5	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999971206561324	WITHOUT_CLASSIFICATION	2.879343867516314E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999937950490977	WITHOUT_CLASSIFICATION	6.204950902335741E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999937950490977	WITHOUT_CLASSIFICATION	6.204950902335741E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999497570568622	WITHOUT_CLASSIFICATION	5.0242943137713345E-5	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999837319933276	WITHOUT_CLASSIFICATION	1.6268006672442686E-5	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999917488062395	WITHOUT_CLASSIFICATION	8.25119376046717E-6	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999945665018389	WITHOUT_CLASSIFICATION	5.433498161026418E-6	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999947554136216	WITHOUT_CLASSIFICATION	5.244586378398538E-6	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999929552105431	WITHOUT_CLASSIFICATION	7.044789457012163E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9997911572047031	WITHOUT_CLASSIFICATION	2.0884279529674842E-4	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999943040841431	WITHOUT_CLASSIFICATION	5.695915856943741E-6	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999909132844085	WITHOUT_CLASSIFICATION	9.086715591555948E-6	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999914242051479	WITHOUT_CLASSIFICATION	8.575794852148552E-6	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999153327509566	WITHOUT_CLASSIFICATION	8.466724904350416E-5	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999883780382653	WITHOUT_CLASSIFICATION	1.1621961734582684E-5	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999984927466562	WITHOUT_CLASSIFICATION	1.507253343707817E-6	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999985148701218	WITHOUT_CLASSIFICATION	1.4851298782112328E-6	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999956893905446	WITHOUT_CLASSIFICATION	4.310609455372889E-6	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999928747605853	WITHOUT_CLASSIFICATION	7.125239414702956E-6	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999967640313225	WITHOUT_CLASSIFICATION	3.2359686774851964E-6	TEST
// states	WITHOUT_CLASSIFICATION	0.9999600316547802	WITHOUT_CLASSIFICATION	3.996834521979978E-5	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999893603189949	WITHOUT_CLASSIFICATION	1.0639681005196739E-5	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999998812808748	WITHOUT_CLASSIFICATION	1.1871912510195013E-7	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999997752509263	WITHOUT_CLASSIFICATION	2.247490736497432E-7	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999789893745188	WITHOUT_CLASSIFICATION	2.101062548111405E-5	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.999993851129879	WITHOUT_CLASSIFICATION	6.148870120869512E-6	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999594632011836	WITHOUT_CLASSIFICATION	4.0536798816468965E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999999835286314	WITHOUT_CLASSIFICATION	1.6471368605437393E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999937898405623	WITHOUT_CLASSIFICATION	6.210159437731046E-6	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999997317252037	WITHOUT_CLASSIFICATION	2.68274796250449E-7	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999978874361685	WITHOUT_CLASSIFICATION	2.1125638315520064E-6	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999224558132	WITHOUT_CLASSIFICATION	7.754418677822876E-8	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999986068786032	WITHOUT_CLASSIFICATION	1.393121396848659E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999991217997285	WITHOUT_CLASSIFICATION	8.782002715476888E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999991217997285	WITHOUT_CLASSIFICATION	8.782002715476888E-7	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999984182865969	WITHOUT_CLASSIFICATION	1.5817134031047662E-6	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.999998086548914	WITHOUT_CLASSIFICATION	1.9134510859832285E-6	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.999998086548914	WITHOUT_CLASSIFICATION	1.9134510859832285E-6	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998563455008	WITHOUT_CLASSIFICATION	1.4365449911442865E-7	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998563455008	WITHOUT_CLASSIFICATION	1.4365449911442865E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999811188117085	WITHOUT_CLASSIFICATION	1.888118829147486E-5	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999996760436927	WITHOUT_CLASSIFICATION	3.2395630731282477E-7	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999514305149	WITHOUT_CLASSIFICATION	4.856948502099115E-8	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999488475976077	WITHOUT_CLASSIFICATION	5.115240239226452E-5	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999998865565284	WITHOUT_CLASSIFICATION	1.1344347172494346E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.999988531056239	WITHOUT_CLASSIFICATION	1.1468943760939902E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.999988531056239	WITHOUT_CLASSIFICATION	1.1468943760939902E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999999835286314	WITHOUT_CLASSIFICATION	1.6471368605437393E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999999835286314	WITHOUT_CLASSIFICATION	1.6471368605437393E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999999835286314	WITHOUT_CLASSIFICATION	1.6471368605437393E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999937898405623	WITHOUT_CLASSIFICATION	6.210159437731046E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999991217997285	WITHOUT_CLASSIFICATION	8.782002715476888E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999991217997285	WITHOUT_CLASSIFICATION	8.782002715476888E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999991217997285	WITHOUT_CLASSIFICATION	8.782002715476888E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999811188117085	WITHOUT_CLASSIFICATION	1.888118829147486E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999811188117085	WITHOUT_CLASSIFICATION	1.888118829147486E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999811188117085	WITHOUT_CLASSIFICATION	1.888118829147486E-5	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999488475976077	WITHOUT_CLASSIFICATION	5.115240239226452E-5	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999488475976077	WITHOUT_CLASSIFICATION	5.115240239226452E-5	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999995651742961	WITHOUT_CLASSIFICATION	4.3482570394689137E-7	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999730834907505	WITHOUT_CLASSIFICATION	2.691650924953815E-5	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999977651808551	WITHOUT_CLASSIFICATION	2.2348191447792053E-6	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9996178164195062	WITHOUT_CLASSIFICATION	3.821835804937929E-4	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999988472365052	WITHOUT_CLASSIFICATION	1.1527634948710348E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.999996976407173	WITHOUT_CLASSIFICATION	3.0235928270329056E-6	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.999996976407173	WITHOUT_CLASSIFICATION	3.0235928270329056E-6	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999996595158174	WITHOUT_CLASSIFICATION	3.4048418260449676E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9997911572047031	WITHOUT_CLASSIFICATION	2.0884279529674842E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9997911572047031	WITHOUT_CLASSIFICATION	2.0884279529674842E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9997911572047031	WITHOUT_CLASSIFICATION	2.0884279529674842E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9997911572047031	WITHOUT_CLASSIFICATION	2.0884279529674842E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9997911572047031	WITHOUT_CLASSIFICATION	2.0884279529674842E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999997065294686	WITHOUT_CLASSIFICATION	2.9347053140360345E-6	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999997065294686	WITHOUT_CLASSIFICATION	2.9347053140360345E-6	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999997065294686	WITHOUT_CLASSIFICATION	2.9347053140360345E-6	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999990950413802	WITHOUT_CLASSIFICATION	9.049586198098353E-7	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999965889448629	WITHOUT_CLASSIFICATION	3.4110551371202224E-6	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999937898405623	WITHOUT_CLASSIFICATION	6.210159437731046E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999811188117085	WITHOUT_CLASSIFICATION	1.888118829147486E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999811188117085	WITHOUT_CLASSIFICATION	1.888118829147486E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9997911572047031	WITHOUT_CLASSIFICATION	2.0884279529674842E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9997911572047031	WITHOUT_CLASSIFICATION	2.0884279529674842E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999997065294686	WITHOUT_CLASSIFICATION	2.9347053140360345E-6	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999996595158174	WITHOUT_CLASSIFICATION	3.4048418260449676E-6	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999817571394414	WITHOUT_CLASSIFICATION	1.824286055865365E-5	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999815322602197	WITHOUT_CLASSIFICATION	1.8467739780326825E-5	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999993751625833	WITHOUT_CLASSIFICATION	6.248374165813304E-7	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.999999346580904	WITHOUT_CLASSIFICATION	6.534190960976917E-7	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999917757548233	WITHOUT_CLASSIFICATION	8.224245176673991E-6	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999952858668196	WITHOUT_CLASSIFICATION	4.71413318034078E-6	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999535840587509	WITHOUT_CLASSIFICATION	4.641594124912119E-5	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999976536049241	WITHOUT_CLASSIFICATION	2.346395075939657E-6	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999988828626774	WITHOUT_CLASSIFICATION	1.117137322635264E-6	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999945974865563	WITHOUT_CLASSIFICATION	5.40251344382189E-6	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.999998746564312	WITHOUT_CLASSIFICATION	1.2534356880183146E-6	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999924568172875	WITHOUT_CLASSIFICATION	7.543182712476003E-6	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999960641018423	WITHOUT_CLASSIFICATION	3.935898157710446E-6	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999727709420436	WITHOUT_CLASSIFICATION	2.722905795629632E-5	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999531382842767	WITHOUT_CLASSIFICATION	4.68617157232732E-5	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.999999107936508	WITHOUT_CLASSIFICATION	8.920634918947508E-7	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.999999626164446	WITHOUT_CLASSIFICATION	3.7383555393352775E-7	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.999960475712152	WITHOUT_CLASSIFICATION	3.952428784805692E-5	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.999981343566725	WITHOUT_CLASSIFICATION	1.8656433275026394E-5	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999997260734634	WITHOUT_CLASSIFICATION	2.7392653651005365E-7	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998277820863365	WITHOUT_CLASSIFICATION	1.722179136635889E-4	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999930976797188	WITHOUT_CLASSIFICATION	6.9023202811971666E-6	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999968613817213	WITHOUT_CLASSIFICATION	3.1386182786837563E-6	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999999595907508	WITHOUT_CLASSIFICATION	4.0409249201551455E-8	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999912932005596	WITHOUT_CLASSIFICATION	8.706799440370235E-6	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999512601129549	WITHOUT_CLASSIFICATION	4.8739887045041196E-5	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999957560908312	WITHOUT_CLASSIFICATION	4.2439091687888455E-6	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999989723692053	WITHOUT_CLASSIFICATION	1.0276307946231268E-6	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999994189686671	WITHOUT_CLASSIFICATION	5.810313328678784E-7	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999990336983847	WITHOUT_CLASSIFICATION	9.66301615274059E-7	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.999998897404002	WITHOUT_CLASSIFICATION	1.1025959979470538E-6	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999348976972	WITHOUT_CLASSIFICATION	6.510230283843777E-8	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999994608843924	WITHOUT_CLASSIFICATION	5.39115607520952E-7	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999996107359448	WITHOUT_CLASSIFICATION	3.892640552404756E-7	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999817571394414	WITHOUT_CLASSIFICATION	1.824286055865365E-5	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999990842821342	WITHOUT_CLASSIFICATION	9.157178658142953E-7	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999995691064393	WITHOUT_CLASSIFICATION	4.308935607022312E-7	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999905189217466	WITHOUT_CLASSIFICATION	9.481078253479161E-6	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999937173993783	WITHOUT_CLASSIFICATION	6.282600621754571E-6	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999937173993783	WITHOUT_CLASSIFICATION	6.282600621754571E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999959414488281	WITHOUT_CLASSIFICATION	4.05855117191416E-6	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999959414488281	WITHOUT_CLASSIFICATION	4.05855117191416E-6	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999917894755348	WITHOUT_CLASSIFICATION	8.210524465125049E-6	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999799668993837	WITHOUT_CLASSIFICATION	2.0033100616280735E-5	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999973335818901	WITHOUT_CLASSIFICATION	2.6664181098196055E-6	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999963529559436	WITHOUT_CLASSIFICATION	3.647044056327609E-6	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999966583051019	WITHOUT_CLASSIFICATION	3.3416948981614377E-6	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999993141049849	WITHOUT_CLASSIFICATION	6.858950151356099E-7	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999983822538145	WITHOUT_CLASSIFICATION	1.6177461854120078E-6	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999977164223315	WITHOUT_CLASSIFICATION	2.2835776685574526E-6	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999998104872341	WITHOUT_CLASSIFICATION	1.8951276598547279E-7	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999940676041219	WITHOUT_CLASSIFICATION	5.932395878070521E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999992858654221	WITHOUT_CLASSIFICATION	7.14134577853101E-7	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999943271474134	WITHOUT_CLASSIFICATION	5.672852586526299E-6	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999943271474134	WITHOUT_CLASSIFICATION	5.672852586526299E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.999994716014017	WITHOUT_CLASSIFICATION	5.283985983015906E-6	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999951242439048	WITHOUT_CLASSIFICATION	4.875756095158538E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999969515899026	WITHOUT_CLASSIFICATION	3.048410097300383E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999969515899026	WITHOUT_CLASSIFICATION	3.048410097300383E-6	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999923935077623	WITHOUT_CLASSIFICATION	7.606492237677871E-6	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999685014217	WITHOUT_CLASSIFICATION	3.149857833430477E-8	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999839478207342	WITHOUT_CLASSIFICATION	1.605217926576852E-5	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999973858935957	WITHOUT_CLASSIFICATION	2.614106404230776E-6	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999988851314717	WITHOUT_CLASSIFICATION	1.114868528357118E-6	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999949684971398	WITHOUT_CLASSIFICATION	5.031502860276803E-6	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999952865336286	WITHOUT_CLASSIFICATION	4.713466371400427E-6	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.999995159691825	WITHOUT_CLASSIFICATION	4.840308175066701E-6	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9998990086551325	WITHOUT_CLASSIFICATION	1.0099134486741271E-4	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999936531074578	WITHOUT_CLASSIFICATION	6.346892542246275E-6	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999873329786853	WITHOUT_CLASSIFICATION	1.2667021314860158E-5	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9998938906953053	WITHOUT_CLASSIFICATION	1.06109304694722E-4	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.999997752680661	WITHOUT_CLASSIFICATION	2.247319338886782E-6	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999735515063533	WITHOUT_CLASSIFICATION	2.6448493646782185E-5	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999954190872012	WITHOUT_CLASSIFICATION	4.580912798787941E-6	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9995073633083337	WITHOUT_CLASSIFICATION	4.92636691666375E-4	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999995769779829	WITHOUT_CLASSIFICATION	4.230220171722994E-7	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999998710369685	WITHOUT_CLASSIFICATION	1.2896303141757358E-7	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999914030200139	WITHOUT_CLASSIFICATION	8.596979986150259E-6	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999998611395012	WITHOUT_CLASSIFICATION	1.3886049880035806E-7	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9997754398510441	WITHOUT_CLASSIFICATION	2.2456014895595624E-4	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999990574663324	WITHOUT_CLASSIFICATION	9.425336675247278E-7	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999977751629495	WITHOUT_CLASSIFICATION	2.224837050419747E-6	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999960586755007	WITHOUT_CLASSIFICATION	3.941324499384256E-6	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.999998511656948	WITHOUT_CLASSIFICATION	1.488343052090074E-6	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999998789444488	WITHOUT_CLASSIFICATION	1.2105555122563722E-7	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999970415894318	WITHOUT_CLASSIFICATION	2.9584105681477223E-6	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.999996898243252	WITHOUT_CLASSIFICATION	3.101756747913065E-6	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999940008616747	WITHOUT_CLASSIFICATION	5.999138325327907E-6	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.999999014871826	WITHOUT_CLASSIFICATION	9.851281739611729E-7	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999997950965883	WITHOUT_CLASSIFICATION	2.0490341174808979E-7	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999990650643178	WITHOUT_CLASSIFICATION	9.349356823264816E-7	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999997625412441	WITHOUT_CLASSIFICATION	2.374587557899843E-7	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999994215394109	WITHOUT_CLASSIFICATION	5.784605891184194E-7	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999994215394109	WITHOUT_CLASSIFICATION	5.784605891184194E-7	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999988947464253	WITHOUT_CLASSIFICATION	1.1052535746258387E-6	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999999384308015	WITHOUT_CLASSIFICATION	6.156919846268652E-8	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999995122395735	WITHOUT_CLASSIFICATION	4.8776042649898214E-6	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999904892131251	WITHOUT_CLASSIFICATION	9.510786874888997E-6	TEST
// Block	WITHOUT_CLASSIFICATION	0.9999849302705829	WITHOUT_CLASSIFICATION	1.506972941717652E-5	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999955226052182	WITHOUT_CLASSIFICATION	4.4773947817901785E-6	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9997764776416574	WITHOUT_CLASSIFICATION	2.2352235834252273E-4	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9997003855272301	WITHOUT_CLASSIFICATION	2.996144727699991E-4	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9991434354273067	WITHOUT_CLASSIFICATION	8.565645726934342E-4	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999769178174596	WITHOUT_CLASSIFICATION	2.3082182540481994E-5	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.999990698846539	WITHOUT_CLASSIFICATION	9.301153460954274E-6	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999738336671944	WITHOUT_CLASSIFICATION	2.6166332805701946E-5	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9998700635738375	WITHOUT_CLASSIFICATION	1.2993642616260378E-4	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999594233193646	WITHOUT_CLASSIFICATION	4.057668063543561E-5	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999990196448435	WITHOUT_CLASSIFICATION	9.803551564477773E-7	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999957881376151	WITHOUT_CLASSIFICATION	4.211862384888398E-6	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999987267300361	WITHOUT_CLASSIFICATION	1.2732699639141638E-6	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999955587528643	WITHOUT_CLASSIFICATION	4.441247135725754E-6	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.999996380542486	WITHOUT_CLASSIFICATION	3.6194575141319606E-6	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999888500648055	WITHOUT_CLASSIFICATION	1.114993519436725E-5	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999990127311896	WITHOUT_CLASSIFICATION	9.872688102988506E-7	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999930289809319	WITHOUT_CLASSIFICATION	6.971019068015708E-6	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999982012059591	WITHOUT_CLASSIFICATION	1.7987940409479557E-6	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999928465029619	WITHOUT_CLASSIFICATION	7.153497038128204E-6	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999827122825444	WITHOUT_CLASSIFICATION	1.728771745560813E-5	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999988460986128	WITHOUT_CLASSIFICATION	1.1539013871497882E-6	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999998286101484	WITHOUT_CLASSIFICATION	1.7138985165745354E-7	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999924206693944	WITHOUT_CLASSIFICATION	7.579330605560955E-6	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999717069332856	WITHOUT_CLASSIFICATION	2.8293066714363114E-5	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.999985116318681	WITHOUT_CLASSIFICATION	1.488368131902103E-5	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999899931709328	WITHOUT_CLASSIFICATION	1.0006829067200175E-4	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9959260350451243	WITHOUT_CLASSIFICATION	0.004073964954875663	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.999985143834906	WITHOUT_CLASSIFICATION	1.4856165094093313E-5	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999992753350343	WITHOUT_CLASSIFICATION	7.246649658127623E-7	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999641835571789	WITHOUT_CLASSIFICATION	3.5816442821165096E-5	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999418501296629	WITHOUT_CLASSIFICATION	5.8149870337132735E-5	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.999971997748485	WITHOUT_CLASSIFICATION	2.8002251514943953E-5	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999974853421282	WITHOUT_CLASSIFICATION	2.5146578719056777E-6	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999971300010935	WITHOUT_CLASSIFICATION	2.8699989064060414E-6	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999963063406437	WITHOUT_CLASSIFICATION	3.6936593563274132E-6	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999973832761778	WITHOUT_CLASSIFICATION	2.6167238222565024E-6	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999968435259122	WITHOUT_CLASSIFICATION	3.1564740877237116E-6	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999968435259122	WITHOUT_CLASSIFICATION	3.1564740877237116E-6	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999923044746358	WITHOUT_CLASSIFICATION	7.695525364205405E-6	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999983302526405	WITHOUT_CLASSIFICATION	1.66974735949018E-6	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999922106863363	WITHOUT_CLASSIFICATION	7.789313663760178E-6	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999945691820425	WITHOUT_CLASSIFICATION	5.430817957490602E-6	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999898304205477	WITHOUT_CLASSIFICATION	1.0169579452303074E-5	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999998039587316	WITHOUT_CLASSIFICATION	1.9604126837691306E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999994210848224	WITHOUT_CLASSIFICATION	5.789151775510117E-7	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999991419331885	WITHOUT_CLASSIFICATION	8.580668114213776E-7	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999938659193925	WITHOUT_CLASSIFICATION	6.134080607404398E-6	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999594029757	WITHOUT_CLASSIFICATION	4.059702433793343E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999626052001186	WITHOUT_CLASSIFICATION	3.739479988137704E-5	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999995958651752	WITHOUT_CLASSIFICATION	4.0413482490294356E-7	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999988102762917	WITHOUT_CLASSIFICATION	1.189723708406591E-6	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999974846776652	WITHOUT_CLASSIFICATION	2.5153223347458013E-6	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999996960032832	WITHOUT_CLASSIFICATION	3.039967168014406E-7	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999815797493714	WITHOUT_CLASSIFICATION	1.8420250628620843E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999999966318732	WITHOUT_CLASSIFICATION	3.3681268044523786E-8	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999463407743058	WITHOUT_CLASSIFICATION	5.3659225694243584E-5	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999095872111	WITHOUT_CLASSIFICATION	9.041278888882978E-8	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999955228905089	WITHOUT_CLASSIFICATION	4.477109491179471E-6	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999956049213095	WITHOUT_CLASSIFICATION	4.395078690579684E-6	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999776999675593	WITHOUT_CLASSIFICATION	2.230003244072613E-5	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999994494639511	WITHOUT_CLASSIFICATION	5.505360488750246E-7	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999990197450647	WITHOUT_CLASSIFICATION	9.802549354183179E-7	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999978445226705	WITHOUT_CLASSIFICATION	2.1554773295420017E-6	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9998813774072959	WITHOUT_CLASSIFICATION	1.1862259270420473E-4	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.99999983435011	WITHOUT_CLASSIFICATION	1.6564988997791854E-7	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999951419465571	WITHOUT_CLASSIFICATION	4.858053442900427E-6	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999981794730938	WITHOUT_CLASSIFICATION	1.8205269062537416E-6	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999969880742273	WITHOUT_CLASSIFICATION	3.011925772751245E-6	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999983903451294	WITHOUT_CLASSIFICATION	1.6096548705833806E-6	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999453110353	WITHOUT_CLASSIFICATION	5.4688964718768776E-8	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999969880742273	WITHOUT_CLASSIFICATION	3.011925772751245E-6	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.99977611882799	WITHOUT_CLASSIFICATION	2.2388117200989604E-4	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9997868379161928	WITHOUT_CLASSIFICATION	2.131620838071855E-4	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999996673131718	WITHOUT_CLASSIFICATION	3.3268682820235673E-7	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.999765276070811	WITHOUT_CLASSIFICATION	2.3472392918902878E-4	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999891998871524	WITHOUT_CLASSIFICATION	1.0800112847580586E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999970640791881	WITHOUT_CLASSIFICATION	2.935920811854911E-6	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.99999787059244	WITHOUT_CLASSIFICATION	2.129407559941787E-6	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999805767672618	WITHOUT_CLASSIFICATION	1.9423232738175324E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999970178650515	WITHOUT_CLASSIFICATION	2.982134948582118E-6	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999998611395012	WITHOUT_CLASSIFICATION	1.3886049880035806E-7	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999977651808551	WITHOUT_CLASSIFICATION	2.2348191447792053E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999951592545646	WITHOUT_CLASSIFICATION	4.840745435355562E-6	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999933035477939	WITHOUT_CLASSIFICATION	6.69645220604281E-6	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999985657571567	WITHOUT_CLASSIFICATION	1.4342428432990457E-6	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999453808824967	WITHOUT_CLASSIFICATION	5.4619117503223724E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999731468284455	WITHOUT_CLASSIFICATION	2.685317155452286E-5	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999358346725163	WITHOUT_CLASSIFICATION	6.416532748371778E-5	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999920668191433	WITHOUT_CLASSIFICATION	7.933180856739614E-6	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999936529828876	WITHOUT_CLASSIFICATION	6.347017112507765E-6	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.999991929798269	WITHOUT_CLASSIFICATION	8.07020173090305E-6	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999772654585816	WITHOUT_CLASSIFICATION	2.2734541418360414E-5	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999758357972378	WITHOUT_CLASSIFICATION	2.4164202762135936E-5	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999949408615076	WITHOUT_CLASSIFICATION	5.0591384924017315E-6	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999988532728236	WITHOUT_CLASSIFICATION	1.1467271765025083E-6	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999984617913996	WITHOUT_CLASSIFICATION	1.5382086003462025E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999920753676123	WITHOUT_CLASSIFICATION	7.924632387792584E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.999992852947246	WITHOUT_CLASSIFICATION	7.147052753916433E-6	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999983728165546	WITHOUT_CLASSIFICATION	1.6271834453223658E-6	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999858954148078	WITHOUT_CLASSIFICATION	1.4104585192291874E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999945196374728	WITHOUT_CLASSIFICATION	5.480362527289324E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999945196374728	WITHOUT_CLASSIFICATION	5.480362527289324E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999985014436614	WITHOUT_CLASSIFICATION	1.4985563385627303E-6	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.999999935247839	WITHOUT_CLASSIFICATION	6.475216105633556E-8	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999125840175	WITHOUT_CLASSIFICATION	8.741598239281534E-8	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9987037892466817	WITHOUT_CLASSIFICATION	0.0012962107533182768	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9987037892466817	WITHOUT_CLASSIFICATION	0.0012962107533182768	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9987037892466817	WITHOUT_CLASSIFICATION	0.0012962107533182768	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9987037892466817	WITHOUT_CLASSIFICATION	0.0012962107533182768	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999988429219123	WITHOUT_CLASSIFICATION	1.157078087617847E-6	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999995983167447	WITHOUT_CLASSIFICATION	4.016832553194922E-7	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999924503809076	WITHOUT_CLASSIFICATION	7.54961909243915E-6	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999989167799657	WITHOUT_CLASSIFICATION	1.0832200342794005E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999984165784574	WITHOUT_CLASSIFICATION	1.5834215425771345E-6	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999783863923574	WITHOUT_CLASSIFICATION	2.161360764265928E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999877913055819	WITHOUT_CLASSIFICATION	1.22086944181406E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999877913055819	WITHOUT_CLASSIFICATION	1.22086944181406E-5	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.999992292437818	WITHOUT_CLASSIFICATION	7.70756218207094E-6	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9998834702639621	WITHOUT_CLASSIFICATION	1.1652973603783494E-4	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999991217232452	WITHOUT_CLASSIFICATION	8.782767548054989E-7	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.999782397398078	WITHOUT_CLASSIFICATION	2.1760260192210247E-4	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999993589333005	WITHOUT_CLASSIFICATION	6.410666995047554E-7	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999985679265165	WITHOUT_CLASSIFICATION	1.4320734835037227E-6	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.999999222120003	WITHOUT_CLASSIFICATION	7.778799969247574E-7	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999930210354933	WITHOUT_CLASSIFICATION	6.978964506793607E-6	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997967617670257	WITHOUT_CLASSIFICATION	2.032382329743614E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997967617670257	WITHOUT_CLASSIFICATION	2.032382329743614E-4	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999453110353	WITHOUT_CLASSIFICATION	5.4688964718768776E-8	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999921421427151	WITHOUT_CLASSIFICATION	7.85785728483783E-6	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999922295232668	WITHOUT_CLASSIFICATION	7.770476733135436E-6	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999971040668467	WITHOUT_CLASSIFICATION	2.895933153231245E-6	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999994924499687	WITHOUT_CLASSIFICATION	5.075500313378948E-7	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.999898898580051	WITHOUT_CLASSIFICATION	1.0110141994903172E-4	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999705196360247	WITHOUT_CLASSIFICATION	2.948036397532161E-5	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999955188118543	WITHOUT_CLASSIFICATION	4.481188145628941E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999937722894986	WITHOUT_CLASSIFICATION	6.22771050135742E-6	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999937722894986	WITHOUT_CLASSIFICATION	6.22771050135742E-6	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999998564205957	WITHOUT_CLASSIFICATION	1.4357940428843637E-7	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.999999963097803	WITHOUT_CLASSIFICATION	3.6902196996127804E-8	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9998986497501571	WITHOUT_CLASSIFICATION	1.01350249842891E-4	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999957679568053	WITHOUT_CLASSIFICATION	4.232043194710758E-6	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999991653571043	WITHOUT_CLASSIFICATION	8.346428957536401E-7	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9999002370178669	WITHOUT_CLASSIFICATION	9.976298213314502E-5	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999988928294239	WITHOUT_CLASSIFICATION	1.1071705760877314E-6	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997049335408	WITHOUT_CLASSIFICATION	2.950664591019625E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997049335408	WITHOUT_CLASSIFICATION	2.950664591019625E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997049335408	WITHOUT_CLASSIFICATION	2.950664591019625E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997049335408	WITHOUT_CLASSIFICATION	2.950664591019625E-7	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999997298342185	WITHOUT_CLASSIFICATION	2.7016578158093314E-7	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999986889204789	WITHOUT_CLASSIFICATION	1.3110795210575868E-6	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998005396236547	WITHOUT_CLASSIFICATION	1.9946037634530905E-4	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999928209853806	WITHOUT_CLASSIFICATION	7.179014619500288E-6	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999923510965515	WITHOUT_CLASSIFICATION	7.648903448458403E-6	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.999887040327468	WITHOUT_CLASSIFICATION	1.1295967253197068E-4	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999973911169692	WITHOUT_CLASSIFICATION	2.608883030745303E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999937932027179	WITHOUT_CLASSIFICATION	6.206797282160723E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999937932027179	WITHOUT_CLASSIFICATION	6.206797282160723E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999937932027179	WITHOUT_CLASSIFICATION	6.206797282160723E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999956921001882	WITHOUT_CLASSIFICATION	4.3078998116965534E-6	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999999084048232	WITHOUT_CLASSIFICATION	9.159517676219156E-8	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999981288197477	WITHOUT_CLASSIFICATION	1.8711802522990944E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999981288197477	WITHOUT_CLASSIFICATION	1.8711802522990944E-6	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999626783176484	WITHOUT_CLASSIFICATION	3.732168235148356E-5	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999984118358	WITHOUT_CLASSIFICATION	1.5881641607938346E-9	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999981853709794	WITHOUT_CLASSIFICATION	1.8146290205845597E-6	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9999518370027478	WITHOUT_CLASSIFICATION	4.816299725209097E-5	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999995981315194	WITHOUT_CLASSIFICATION	4.0186848056297513E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999981817881831	WITHOUT_CLASSIFICATION	1.8182118168763018E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999832897415907	WITHOUT_CLASSIFICATION	1.671025840940023E-5	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999832897415907	WITHOUT_CLASSIFICATION	1.671025840940023E-5	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999991166613657	WITHOUT_CLASSIFICATION	8.833386342951755E-7	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999994885119474	WITHOUT_CLASSIFICATION	5.114880526055682E-7	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999500621322	WITHOUT_CLASSIFICATION	4.99378678397282E-8	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999968787961364	WITHOUT_CLASSIFICATION	3.121203863643504E-6	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999986335636117	WITHOUT_CLASSIFICATION	1.3664363881628802E-6	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999997289299581	WITHOUT_CLASSIFICATION	2.7107004188427693E-7	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999991292257552	WITHOUT_CLASSIFICATION	8.707742449152163E-7	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998978401800779	WITHOUT_CLASSIFICATION	1.0215981992204482E-4	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999768779405076	WITHOUT_CLASSIFICATION	2.312205949244175E-5	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999991452965605	WITHOUT_CLASSIFICATION	8.547034394986151E-7	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999962117271001	WITHOUT_CLASSIFICATION	3.788272900024016E-6	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999006466088	WITHOUT_CLASSIFICATION	9.935339123736933E-8	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999921973327187	WITHOUT_CLASSIFICATION	7.80266728129909E-6	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999726067321674	WITHOUT_CLASSIFICATION	2.739326783265428E-5	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999972461339582	WITHOUT_CLASSIFICATION	2.7538660417531342E-6	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999987601229338	WITHOUT_CLASSIFICATION	1.2398770662788293E-6	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999983334786696	WITHOUT_CLASSIFICATION	1.6665213304803254E-6	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999983562906907	WITHOUT_CLASSIFICATION	1.643709309284862E-6	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999997154435846	WITHOUT_CLASSIFICATION	2.845564154822837E-7	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999997155197078	WITHOUT_CLASSIFICATION	2.8448029227263785E-7	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999998938945175	WITHOUT_CLASSIFICATION	1.0610548256360912E-7	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999998955020438	WITHOUT_CLASSIFICATION	1.044979561953073E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999989901411916	WITHOUT_CLASSIFICATION	1.0098588083750623E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999989901411916	WITHOUT_CLASSIFICATION	1.0098588083750623E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999989901411916	WITHOUT_CLASSIFICATION	1.0098588083750623E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999989901411916	WITHOUT_CLASSIFICATION	1.0098588083750623E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999989901411916	WITHOUT_CLASSIFICATION	1.0098588083750623E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999989901411916	WITHOUT_CLASSIFICATION	1.0098588083750623E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999989901411916	WITHOUT_CLASSIFICATION	1.0098588083750623E-6	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999989901411916	WITHOUT_CLASSIFICATION	1.0098588083750623E-6	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999995993089186	WITHOUT_CLASSIFICATION	4.0069108150189315E-7	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999371549416745	WITHOUT_CLASSIFICATION	6.284505832552391E-5	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999638083002167	WITHOUT_CLASSIFICATION	3.619169978336412E-5	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999499795931583	WITHOUT_CLASSIFICATION	5.00204068417465E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999994210848224	WITHOUT_CLASSIFICATION	5.789151775510117E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999994210848224	WITHOUT_CLASSIFICATION	5.789151775510117E-7	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999967943834558	WITHOUT_CLASSIFICATION	3.2056165442170396E-6	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.999998854531669	WITHOUT_CLASSIFICATION	1.1454683309650532E-6	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999989055686268	WITHOUT_CLASSIFICATION	1.0944313732060912E-6	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999786734651082	WITHOUT_CLASSIFICATION	2.1326534891830978E-5	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999956474723521	WITHOUT_CLASSIFICATION	4.352527647880682E-6	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999958577476954	WITHOUT_CLASSIFICATION	4.142252304557674E-6	TEST
// read	WITHOUT_CLASSIFICATION	0.9999890164369607	WITHOUT_CLASSIFICATION	1.0983563039280577E-5	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999942852549867	WITHOUT_CLASSIFICATION	5.714745013205433E-6	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999988540045758	WITHOUT_CLASSIFICATION	1.1459954241719822E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999991797451426	WITHOUT_CLASSIFICATION	8.202548574240276E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999991797451426	WITHOUT_CLASSIFICATION	8.202548574240276E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999991797451426	WITHOUT_CLASSIFICATION	8.202548574240276E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998533043049466	WITHOUT_CLASSIFICATION	1.466956950535361E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998533043049466	WITHOUT_CLASSIFICATION	1.466956950535361E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998533043049466	WITHOUT_CLASSIFICATION	1.466956950535361E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998533043049466	WITHOUT_CLASSIFICATION	1.466956950535361E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998533043049466	WITHOUT_CLASSIFICATION	1.466956950535361E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998533043049466	WITHOUT_CLASSIFICATION	1.466956950535361E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998533043049466	WITHOUT_CLASSIFICATION	1.466956950535361E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998533043049466	WITHOUT_CLASSIFICATION	1.466956950535361E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998533043049466	WITHOUT_CLASSIFICATION	1.466956950535361E-4	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999997510141083	WITHOUT_CLASSIFICATION	2.489858916678955E-7	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999905836761775	WITHOUT_CLASSIFICATION	9.416323822388096E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999934546402595	WITHOUT_CLASSIFICATION	6.5453597405883975E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999974565259985	WITHOUT_CLASSIFICATION	2.5434740015106058E-6	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998533043049466	WITHOUT_CLASSIFICATION	1.466956950535361E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998533043049466	WITHOUT_CLASSIFICATION	1.466956950535361E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998533043049466	WITHOUT_CLASSIFICATION	1.466956950535361E-4	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999987397120291	WITHOUT_CLASSIFICATION	1.2602879708988625E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999731680998261	WITHOUT_CLASSIFICATION	2.683190017391687E-5	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999998332572038	WITHOUT_CLASSIFICATION	1.6674279619433E-7	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999977402980814	WITHOUT_CLASSIFICATION	2.259701918581128E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999977402980814	WITHOUT_CLASSIFICATION	2.259701918581128E-6	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999967430736426	WITHOUT_CLASSIFICATION	3.2569263572627046E-6	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999957073982442	WITHOUT_CLASSIFICATION	4.292601755795825E-6	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999998624853151	WITHOUT_CLASSIFICATION	1.3751468482756764E-7	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999982728148448	WITHOUT_CLASSIFICATION	1.7271851551823846E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999964073069819	WITHOUT_CLASSIFICATION	3.592693018120362E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999964073069819	WITHOUT_CLASSIFICATION	3.592693018120362E-6	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999942696509155	WITHOUT_CLASSIFICATION	5.730349084391729E-6	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999987139378879	WITHOUT_CLASSIFICATION	1.2860621121582036E-6	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999869959313682	WITHOUT_CLASSIFICATION	1.3004068631815623E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9998505910426595	WITHOUT_CLASSIFICATION	1.494089573405206E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9998505910426595	WITHOUT_CLASSIFICATION	1.494089573405206E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9998505910426595	WITHOUT_CLASSIFICATION	1.494089573405206E-4	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999976288553339	WITHOUT_CLASSIFICATION	2.3711446660945984E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.999998022690321	WITHOUT_CLASSIFICATION	1.9773096790194747E-6	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.999998022690321	WITHOUT_CLASSIFICATION	1.9773096790194747E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999968887796443	WITHOUT_CLASSIFICATION	3.1112203556995164E-6	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999968887796443	WITHOUT_CLASSIFICATION	3.1112203556995164E-6	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999969339695731	WITHOUT_CLASSIFICATION	3.0660304268963756E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999936489331143	WITHOUT_CLASSIFICATION	6.351066885753024E-6	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999988225181939	WITHOUT_CLASSIFICATION	1.1774818060142304E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999527203159128	WITHOUT_CLASSIFICATION	4.727968408730348E-5	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999941597769001	WITHOUT_CLASSIFICATION	5.840223099965982E-6	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999993816695559	WITHOUT_CLASSIFICATION	6.183304440360676E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999995096376225	WITHOUT_CLASSIFICATION	4.903623773990095E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.999988531056239	WITHOUT_CLASSIFICATION	1.1468943760939902E-5	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999944901985421	WITHOUT_CLASSIFICATION	5.509801457912159E-6	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999998442797003	WITHOUT_CLASSIFICATION	1.557202996738219E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999086342749678	WITHOUT_CLASSIFICATION	9.13657250321913E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999972481630394	WITHOUT_CLASSIFICATION	2.751836960524744E-6	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999982747052474	WITHOUT_CLASSIFICATION	1.7252947526831556E-6	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999888284226461	WITHOUT_CLASSIFICATION	1.1171577353879702E-5	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999997211796947	WITHOUT_CLASSIFICATION	2.788203053341962E-7	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999946549316366	WITHOUT_CLASSIFICATION	5.345068363372019E-6	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999958837673183	WITHOUT_CLASSIFICATION	4.116232681683661E-6	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999998717993394	WITHOUT_CLASSIFICATION	1.282006606952361E-7	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999847862917291	WITHOUT_CLASSIFICATION	1.5213708270908407E-4	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999920534652936	WITHOUT_CLASSIFICATION	7.946534706374863E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999951592545646	WITHOUT_CLASSIFICATION	4.840745435355562E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9997996821478196	WITHOUT_CLASSIFICATION	2.0031785218041175E-4	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999978947233404	WITHOUT_CLASSIFICATION	2.10527665956848E-6	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999999751560791	WITHOUT_CLASSIFICATION	2.4843920877424445E-8	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999980140347432	WITHOUT_CLASSIFICATION	1.985965256755611E-6	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9998967831197572	WITHOUT_CLASSIFICATION	1.0321688024281307E-4	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999700327962235	WITHOUT_CLASSIFICATION	2.9967203776538923E-5	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.999999129384691	WITHOUT_CLASSIFICATION	8.70615309049066E-7	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999991139508763	WITHOUT_CLASSIFICATION	8.860491237422698E-7	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999754883413	WITHOUT_CLASSIFICATION	2.451165869933344E-8	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999972237457933	WITHOUT_CLASSIFICATION	2.776254206702875E-6	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999990218348508	WITHOUT_CLASSIFICATION	9.781651492133722E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999971441097425	WITHOUT_CLASSIFICATION	2.855890257567955E-6	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999985618946472	WITHOUT_CLASSIFICATION	1.4381053527985153E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999996287387766	WITHOUT_CLASSIFICATION	3.7126122339480284E-7	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.999982546104175	WITHOUT_CLASSIFICATION	1.7453895824922797E-5	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.999986770428396	WITHOUT_CLASSIFICATION	1.32295716040627E-5	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999995413002511	WITHOUT_CLASSIFICATION	4.5869974889187427E-7	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999931704958266	WITHOUT_CLASSIFICATION	6.829504173472842E-6	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999775058981	WITHOUT_CLASSIFICATION	2.2494101988808943E-8	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999983659186872	WITHOUT_CLASSIFICATION	1.6340813127840968E-6	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999947941166988	WITHOUT_CLASSIFICATION	5.2058833012097684E-6	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999931042023007	WITHOUT_CLASSIFICATION	6.895797699306122E-6	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999995246547322	WITHOUT_CLASSIFICATION	4.753452678725345E-7	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999388986658853	WITHOUT_CLASSIFICATION	6.110133411479612E-5	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999075537806367	WITHOUT_CLASSIFICATION	9.244621936330858E-5	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999983431693575	WITHOUT_CLASSIFICATION	1.6568306424453578E-6	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999332385967	WITHOUT_CLASSIFICATION	6.676140322188132E-8	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999974741896276	WITHOUT_CLASSIFICATION	2.5258103724314663E-6	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999175885239857	WITHOUT_CLASSIFICATION	8.24114760142426E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999993661061699	WITHOUT_CLASSIFICATION	6.338938301316184E-7	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999986125723169	WITHOUT_CLASSIFICATION	1.387427683130866E-6	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999986125723169	WITHOUT_CLASSIFICATION	1.387427683130866E-6	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999992674374001	WITHOUT_CLASSIFICATION	7.325625998876549E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999992674374001	WITHOUT_CLASSIFICATION	7.325625998876549E-7	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9996260278400779	WITHOUT_CLASSIFICATION	3.73972159922017E-4	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9996260278400779	WITHOUT_CLASSIFICATION	3.73972159922017E-4	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999738590687544	WITHOUT_CLASSIFICATION	2.6140931245664668E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999738590687544	WITHOUT_CLASSIFICATION	2.6140931245664668E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999954712828235	WITHOUT_CLASSIFICATION	4.528717176470742E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999954712828235	WITHOUT_CLASSIFICATION	4.528717176470742E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999954712828235	WITHOUT_CLASSIFICATION	4.528717176470742E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999954712828235	WITHOUT_CLASSIFICATION	4.528717176470742E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999954712828235	WITHOUT_CLASSIFICATION	4.528717176470742E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999954712828235	WITHOUT_CLASSIFICATION	4.528717176470742E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999954712828235	WITHOUT_CLASSIFICATION	4.528717176470742E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999954712828235	WITHOUT_CLASSIFICATION	4.528717176470742E-6	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999954712828235	WITHOUT_CLASSIFICATION	4.528717176470742E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999980022309578	WITHOUT_CLASSIFICATION	1.9977690422209006E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999980022309578	WITHOUT_CLASSIFICATION	1.9977690422209006E-6	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999980022309578	WITHOUT_CLASSIFICATION	1.9977690422209006E-6	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999996970501112	WITHOUT_CLASSIFICATION	3.029498887843223E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999939460276753	WITHOUT_CLASSIFICATION	6.053972324662677E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999939460276753	WITHOUT_CLASSIFICATION	6.053972324662677E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999939460276753	WITHOUT_CLASSIFICATION	6.053972324662677E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999973402191402	WITHOUT_CLASSIFICATION	2.659780859876324E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999973402191402	WITHOUT_CLASSIFICATION	2.659780859876324E-6	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999973402191402	WITHOUT_CLASSIFICATION	2.659780859876324E-6	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999418765084521	WITHOUT_CLASSIFICATION	5.8123491547961086E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999966733317054	WITHOUT_CLASSIFICATION	3.326668294594945E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999399020751006	WITHOUT_CLASSIFICATION	6.009792489950032E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999426410159451	WITHOUT_CLASSIFICATION	5.735898405487078E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999426410159451	WITHOUT_CLASSIFICATION	5.735898405487078E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999426410159451	WITHOUT_CLASSIFICATION	5.735898405487078E-5	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.999997086639981	WITHOUT_CLASSIFICATION	2.9133600189861555E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999791586223203	WITHOUT_CLASSIFICATION	2.0841377679668057E-5	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999791586223203	WITHOUT_CLASSIFICATION	2.0841377679668057E-5	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999978558431936	WITHOUT_CLASSIFICATION	2.1441568065583014E-6	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999997669160191	WITHOUT_CLASSIFICATION	2.3308398090501398E-6	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999997669160191	WITHOUT_CLASSIFICATION	2.3308398090501398E-6	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9979340131355693	WITHOUT_CLASSIFICATION	0.0020659868644307207	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9994821158874477	WITHOUT_CLASSIFICATION	5.17884112552325E-4	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.999988268231478	WITHOUT_CLASSIFICATION	1.1731768522098455E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999862922009579	WITHOUT_CLASSIFICATION	1.3707799042003163E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999862922009579	WITHOUT_CLASSIFICATION	1.3707799042003163E-5	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999649499639263	WITHOUT_CLASSIFICATION	3.505003607379976E-5	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999926991424554	WITHOUT_CLASSIFICATION	7.300857544697447E-6	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.999975564695476	WITHOUT_CLASSIFICATION	2.4435304523991678E-5	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999998845501777	WITHOUT_CLASSIFICATION	1.1544982228832294E-7	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9998604660536945	WITHOUT_CLASSIFICATION	1.395339463054168E-4	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999862922009579	WITHOUT_CLASSIFICATION	1.3707799042003163E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999862922009579	WITHOUT_CLASSIFICATION	1.3707799042003163E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999862922009579	WITHOUT_CLASSIFICATION	1.3707799042003163E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999862922009579	WITHOUT_CLASSIFICATION	1.3707799042003163E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999862922009579	WITHOUT_CLASSIFICATION	1.3707799042003163E-5	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999981404098574	WITHOUT_CLASSIFICATION	1.8595901426349708E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999992314825541	WITHOUT_CLASSIFICATION	7.685174458523534E-7	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.999999860328698	WITHOUT_CLASSIFICATION	1.3967130199653862E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999877158313357	WITHOUT_CLASSIFICATION	1.2284168664236093E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999967829721909	WITHOUT_CLASSIFICATION	3.2170278090476717E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999945928778338	WITHOUT_CLASSIFICATION	5.407122166233005E-6	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999688656971601	WITHOUT_CLASSIFICATION	3.113430283985436E-5	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999985541859627	WITHOUT_CLASSIFICATION	1.4458140372941572E-6	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999987422820283	WITHOUT_CLASSIFICATION	1.257717971625444E-6	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999890250259633	WITHOUT_CLASSIFICATION	1.0974974036743422E-5	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999963015897271	WITHOUT_CLASSIFICATION	3.6984102728522393E-6	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999776999675593	WITHOUT_CLASSIFICATION	2.230003244072613E-5	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999974062448342	WITHOUT_CLASSIFICATION	2.5937551657948125E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999926581115851	WITHOUT_CLASSIFICATION	7.341888414909201E-6	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999998992911402	WITHOUT_CLASSIFICATION	1.0070885979881279E-7	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.999992154073194	WITHOUT_CLASSIFICATION	7.84592680595071E-6	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999961478057017	WITHOUT_CLASSIFICATION	3.852194298325742E-6	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.999999947185334	WITHOUT_CLASSIFICATION	5.281466599048012E-8	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999993139362501	WITHOUT_CLASSIFICATION	6.860637498488017E-7	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999889322461422	WITHOUT_CLASSIFICATION	1.1067753857914999E-5	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999592229571311	WITHOUT_CLASSIFICATION	4.077704286881198E-5	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999985830639223	WITHOUT_CLASSIFICATION	1.416936077753139E-6	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999594029757	WITHOUT_CLASSIFICATION	4.059702433793343E-8	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999931103917461	WITHOUT_CLASSIFICATION	6.889608253841421E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999931103917461	WITHOUT_CLASSIFICATION	6.889608253841421E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999931103917461	WITHOUT_CLASSIFICATION	6.889608253841421E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999931103917461	WITHOUT_CLASSIFICATION	6.889608253841421E-6	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999945731414834	WITHOUT_CLASSIFICATION	5.42685851652835E-6	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.999991394588422	WITHOUT_CLASSIFICATION	8.605411578013375E-6	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999994660963989	WITHOUT_CLASSIFICATION	5.339036010664822E-7	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999994660963989	WITHOUT_CLASSIFICATION	5.339036010664822E-7	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999990608863514	WITHOUT_CLASSIFICATION	9.391136486129066E-7	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999934842778032	WITHOUT_CLASSIFICATION	6.515722196874482E-6	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999932868494663	WITHOUT_CLASSIFICATION	6.713150533767141E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999987244938096	WITHOUT_CLASSIFICATION	1.2755061905152492E-6	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9995145721133788	WITHOUT_CLASSIFICATION	4.854278866211735E-4	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999907220711673	WITHOUT_CLASSIFICATION	9.277928832668054E-6	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999980074783547	WITHOUT_CLASSIFICATION	1.9925216452769857E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999814957462366	WITHOUT_CLASSIFICATION	1.8504253763352E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999814957462366	WITHOUT_CLASSIFICATION	1.8504253763352E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999814957462366	WITHOUT_CLASSIFICATION	1.8504253763352E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999814957462366	WITHOUT_CLASSIFICATION	1.8504253763352E-5	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999998735726183	WITHOUT_CLASSIFICATION	1.26427381656103E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999993327481718	WITHOUT_CLASSIFICATION	6.672518282668751E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999993327481718	WITHOUT_CLASSIFICATION	6.672518282668751E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999993327481718	WITHOUT_CLASSIFICATION	6.672518282668751E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999990561532133	WITHOUT_CLASSIFICATION	9.438467867765462E-7	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999931567324566	WITHOUT_CLASSIFICATION	6.8432675433753625E-6	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999995292024165	WITHOUT_CLASSIFICATION	4.7079758344923306E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9987037892466817	WITHOUT_CLASSIFICATION	0.0012962107533182768	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9987037892466817	WITHOUT_CLASSIFICATION	0.0012962107533182768	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999751693287	WITHOUT_CLASSIFICATION	2.4830671248427296E-8	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999953140088154	WITHOUT_CLASSIFICATION	4.685991184649422E-6	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999943651977132	WITHOUT_CLASSIFICATION	5.634802286805546E-6	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999943651977132	WITHOUT_CLASSIFICATION	5.634802286805546E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999958566972829	WITHOUT_CLASSIFICATION	4.143302717147646E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999958566972829	WITHOUT_CLASSIFICATION	4.143302717147646E-6	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999915595456323	WITHOUT_CLASSIFICATION	8.440454367663894E-6	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999883419327736	WITHOUT_CLASSIFICATION	1.1658067226422826E-5	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999959635346012	WITHOUT_CLASSIFICATION	4.036465398795976E-6	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999830553404713	WITHOUT_CLASSIFICATION	1.6944659528688423E-5	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999259246831063	WITHOUT_CLASSIFICATION	7.407531689363934E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999957579189018	WITHOUT_CLASSIFICATION	4.242081098160872E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999978322291923	WITHOUT_CLASSIFICATION	2.1677708077167295E-6	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999932883934156	WITHOUT_CLASSIFICATION	6.711606584424305E-6	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999928148330035	WITHOUT_CLASSIFICATION	7.185166996484711E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999995490999231	WITHOUT_CLASSIFICATION	4.5090007694465133E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999995490999231	WITHOUT_CLASSIFICATION	4.5090007694465133E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999981976602496	WITHOUT_CLASSIFICATION	1.8023397503288867E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999981976602496	WITHOUT_CLASSIFICATION	1.8023397503288867E-6	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999994801966796	WITHOUT_CLASSIFICATION	5.198033202728803E-7	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999999734942009	WITHOUT_CLASSIFICATION	2.650579910115614E-7	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999290050080386	WITHOUT_CLASSIFICATION	7.099499196135182E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999822273554944	WITHOUT_CLASSIFICATION	1.7772644505596538E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999822273554944	WITHOUT_CLASSIFICATION	1.7772644505596538E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999822273554944	WITHOUT_CLASSIFICATION	1.7772644505596538E-5	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999930565314042	WITHOUT_CLASSIFICATION	6.943468595830514E-6	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999933414922697	WITHOUT_CLASSIFICATION	6.658507730291604E-6	TEST
// line 513	WITHOUT_CLASSIFICATION	0.999993063556435	WITHOUT_CLASSIFICATION	6.9364435649775025E-6	TEST
// line 530	WITHOUT_CLASSIFICATION	0.999990914088172	WITHOUT_CLASSIFICATION	9.085911827966528E-6	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999923579724211	WITHOUT_CLASSIFICATION	7.642027578956909E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999926148500174	WITHOUT_CLASSIFICATION	7.38514998257499E-6	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999939634692722	WITHOUT_CLASSIFICATION	6.036530727911283E-6	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999955256695525	WITHOUT_CLASSIFICATION	4.474330447508544E-6	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999997985388643	WITHOUT_CLASSIFICATION	2.0146113566899816E-7	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999998555552502	WITHOUT_CLASSIFICATION	1.444447498131547E-7	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999957783102514	WITHOUT_CLASSIFICATION	4.221689748558309E-6	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999975990531625	WITHOUT_CLASSIFICATION	2.4009468374034076E-6	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999987383749872	WITHOUT_CLASSIFICATION	1.2616250128310825E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9987037892466817	WITHOUT_CLASSIFICATION	0.0012962107533182768	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999990270459074	WITHOUT_CLASSIFICATION	9.729540925964702E-7	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999498160018016	WITHOUT_CLASSIFICATION	5.018399819842155E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999945196374728	WITHOUT_CLASSIFICATION	5.480362527289324E-6	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999025425307038	WITHOUT_CLASSIFICATION	9.745746929628163E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999025425307038	WITHOUT_CLASSIFICATION	9.745746929628163E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999025425307038	WITHOUT_CLASSIFICATION	9.745746929628163E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999025425307038	WITHOUT_CLASSIFICATION	9.745746929628163E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999025425307038	WITHOUT_CLASSIFICATION	9.745746929628163E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998186206055782	WITHOUT_CLASSIFICATION	1.8137939442167486E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999025425307038	WITHOUT_CLASSIFICATION	9.745746929628163E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999025425307038	WITHOUT_CLASSIFICATION	9.745746929628163E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999025425307038	WITHOUT_CLASSIFICATION	9.745746929628163E-5	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999998229378796	WITHOUT_CLASSIFICATION	1.7706212038313716E-7	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999952686477654	WITHOUT_CLASSIFICATION	4.731352234584257E-6	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9994480870763666	WITHOUT_CLASSIFICATION	5.519129236335051E-4	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999838769423489	WITHOUT_CLASSIFICATION	1.612305765107885E-5	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999063433830606	WITHOUT_CLASSIFICATION	9.365661693944553E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999934325473111	WITHOUT_CLASSIFICATION	6.5674526888834745E-6	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.999998811620644	WITHOUT_CLASSIFICATION	1.188379355979432E-6	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999934991151955	WITHOUT_CLASSIFICATION	6.500884804485485E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999927685096426	WITHOUT_CLASSIFICATION	7.2314903573900584E-6	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999927685096426	WITHOUT_CLASSIFICATION	7.2314903573900584E-6	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999932209992446	WITHOUT_CLASSIFICATION	6.779000755365823E-6	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999920831805016	WITHOUT_CLASSIFICATION	7.916819498451527E-6	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999931787815922	WITHOUT_CLASSIFICATION	6.821218407800455E-6	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999924273263744	WITHOUT_CLASSIFICATION	7.572673625604054E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999925468703466	WITHOUT_CLASSIFICATION	7.45312965339978E-6	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999932116460165	WITHOUT_CLASSIFICATION	6.788353983525915E-6	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999934081123102	WITHOUT_CLASSIFICATION	6.591887689758505E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999931941819106	WITHOUT_CLASSIFICATION	6.805818089368878E-6	TEST
// line 794	WITHOUT_CLASSIFICATION	0.999992277171731	WITHOUT_CLASSIFICATION	7.72282826898337E-6	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999912465807425	WITHOUT_CLASSIFICATION	8.753419257454967E-6	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999936619016537	WITHOUT_CLASSIFICATION	6.338098346293535E-6	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999930120903717	WITHOUT_CLASSIFICATION	6.987909628261202E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999909037402654	WITHOUT_CLASSIFICATION	9.096259734512065E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999927109799489	WITHOUT_CLASSIFICATION	7.2890200512209824E-6	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999927204105629	WITHOUT_CLASSIFICATION	7.2795894370785405E-6	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999929221647199	WITHOUT_CLASSIFICATION	7.077835280138531E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999919978068147	WITHOUT_CLASSIFICATION	8.002193185314294E-6	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999931118513002	WITHOUT_CLASSIFICATION	6.8881486998181134E-6	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999910215955201	WITHOUT_CLASSIFICATION	8.978404479897624E-6	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999921473064682	WITHOUT_CLASSIFICATION	7.85269353179004E-6	TEST
// line 970	WITHOUT_CLASSIFICATION	0.999991006308089	WITHOUT_CLASSIFICATION	8.993691910981101E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999922968656882	WITHOUT_CLASSIFICATION	7.703134311670725E-6	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999928584145104	WITHOUT_CLASSIFICATION	7.1415854896710785E-6	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999935697726738	WITHOUT_CLASSIFICATION	6.430227326206318E-6	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.999992876510644	WITHOUT_CLASSIFICATION	7.123489356073293E-6	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999910900102962	WITHOUT_CLASSIFICATION	8.909989703931328E-6	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999932185950692	WITHOUT_CLASSIFICATION	6.781404930813119E-6	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999927824991939	WITHOUT_CLASSIFICATION	7.217500806061518E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999922750992181	WITHOUT_CLASSIFICATION	7.72490078191485E-6	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999933990020394	WITHOUT_CLASSIFICATION	6.600997960580852E-6	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999943094087221	WITHOUT_CLASSIFICATION	5.690591277836729E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999934870621257	WITHOUT_CLASSIFICATION	6.512937874237173E-6	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.999994123068295	WITHOUT_CLASSIFICATION	5.87693170503626E-6	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999935261878525	WITHOUT_CLASSIFICATION	6.473812147522129E-6	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999926752801308	WITHOUT_CLASSIFICATION	7.324719869176413E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.999993214751728	WITHOUT_CLASSIFICATION	6.78524827189662E-6	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999924955942031	WITHOUT_CLASSIFICATION	7.504405796906523E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999941097104783	WITHOUT_CLASSIFICATION	5.890289521738392E-6	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999939719301422	WITHOUT_CLASSIFICATION	6.028069857815117E-6	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999915335944889	WITHOUT_CLASSIFICATION	8.466405511048434E-6	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999923093684017	WITHOUT_CLASSIFICATION	7.690631598284487E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999915993950234	WITHOUT_CLASSIFICATION	8.400604976582569E-6	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999932792324898	WITHOUT_CLASSIFICATION	6.720767510224456E-6	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999933413002221	WITHOUT_CLASSIFICATION	6.6586997778140925E-6	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999921406572497	WITHOUT_CLASSIFICATION	7.859342750303287E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999936368686708	WITHOUT_CLASSIFICATION	6.363131329187801E-6	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999939718131896	WITHOUT_CLASSIFICATION	6.028186810308874E-6	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999933123996856	WITHOUT_CLASSIFICATION	6.687600314458673E-6	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999931026757655	WITHOUT_CLASSIFICATION	6.897324234547029E-6	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999933242492477	WITHOUT_CLASSIFICATION	6.675750752264625E-6	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999933111898197	WITHOUT_CLASSIFICATION	6.6888101802358024E-6	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999941863227766	WITHOUT_CLASSIFICATION	5.8136772234714145E-6	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999939305342525	WITHOUT_CLASSIFICATION	6.069465747478867E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999911738741003	WITHOUT_CLASSIFICATION	8.826125899692071E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999911738741003	WITHOUT_CLASSIFICATION	8.826125899692071E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999941132043773	WITHOUT_CLASSIFICATION	5.886795622727269E-6	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999925775233341	WITHOUT_CLASSIFICATION	7.422476665866383E-6	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999933710387843	WITHOUT_CLASSIFICATION	6.6289612157179485E-6	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999941978997938	WITHOUT_CLASSIFICATION	5.8021002061572745E-6	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999939704124621	WITHOUT_CLASSIFICATION	6.029587537938292E-6	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999929620131945	WITHOUT_CLASSIFICATION	7.037986805439045E-6	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999943651242231	WITHOUT_CLASSIFICATION	5.634875776966638E-6	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999943372645195	WITHOUT_CLASSIFICATION	5.662735480419595E-6	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999943117850687	WITHOUT_CLASSIFICATION	5.688214931355065E-6	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999932927370515	WITHOUT_CLASSIFICATION	6.707262948574006E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999512465532688	WITHOUT_CLASSIFICATION	4.8753446731172934E-5	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999512465532688	WITHOUT_CLASSIFICATION	4.8753446731172934E-5	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999891677350563	WITHOUT_CLASSIFICATION	1.0832264943576224E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999917755764992	WITHOUT_CLASSIFICATION	8.224423500770791E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999878834615951	WITHOUT_CLASSIFICATION	1.2116538404846557E-5	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999914802507592	WITHOUT_CLASSIFICATION	8.519749240791048E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999802427224	WITHOUT_CLASSIFICATION	1.975727759769632E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999802427224	WITHOUT_CLASSIFICATION	1.975727759769632E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999802427224	WITHOUT_CLASSIFICATION	1.975727759769632E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999802427224	WITHOUT_CLASSIFICATION	1.975727759769632E-7	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9974322676092301	WITHOUT_CLASSIFICATION	0.0025677323907698263	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999972157455913	WITHOUT_CLASSIFICATION	2.7842544087443615E-6	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999931167143817	WITHOUT_CLASSIFICATION	6.883285618314158E-6	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999914093451369	WITHOUT_CLASSIFICATION	8.590654863206321E-6	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999932769889536	WITHOUT_CLASSIFICATION	6.7230110464246535E-6	TEST
// line 413	WITHOUT_CLASSIFICATION	0.999992888571018	WITHOUT_CLASSIFICATION	7.111428982019443E-6	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999938792031211	WITHOUT_CLASSIFICATION	6.120796878857146E-6	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999933351014176	WITHOUT_CLASSIFICATION	6.6648985823291516E-6	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999916774283935	WITHOUT_CLASSIFICATION	8.322571606558184E-6	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999938559249972	WITHOUT_CLASSIFICATION	6.144075002860856E-6	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999932206809418	WITHOUT_CLASSIFICATION	6.779319058268311E-6	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999930218726968	WITHOUT_CLASSIFICATION	6.978127303145313E-6	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999930941192046	WITHOUT_CLASSIFICATION	6.905880795427808E-6	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999923456637324	WITHOUT_CLASSIFICATION	7.654336267627404E-6	TEST
// line 669	WITHOUT_CLASSIFICATION	0.99999233908159	WITHOUT_CLASSIFICATION	7.660918409962446E-6	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999903897213986	WITHOUT_CLASSIFICATION	9.610278601405151E-6	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999934081123102	WITHOUT_CLASSIFICATION	6.591887689758505E-6	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999934062876159	WITHOUT_CLASSIFICATION	6.593712384081904E-6	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999918688143195	WITHOUT_CLASSIFICATION	8.13118568055529E-6	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999927455870293	WITHOUT_CLASSIFICATION	7.2544129707490446E-6	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999931613825042	WITHOUT_CLASSIFICATION	6.838617495734821E-6	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999903352757409	WITHOUT_CLASSIFICATION	9.664724259098977E-6	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999919630647854	WITHOUT_CLASSIFICATION	8.036935214558521E-6	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999917676699132	WITHOUT_CLASSIFICATION	8.232330086864909E-6	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999920321263727	WITHOUT_CLASSIFICATION	7.967873627322436E-6	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999929384351883	WITHOUT_CLASSIFICATION	7.061564811594524E-6	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999934206418818	WITHOUT_CLASSIFICATION	6.579358118178605E-6	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999928798760664	WITHOUT_CLASSIFICATION	7.1201239336045945E-6	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.999993070024023	WITHOUT_CLASSIFICATION	6.9299759769556105E-6	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999935279156088	WITHOUT_CLASSIFICATION	6.472084391252595E-6	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999940669536511	WITHOUT_CLASSIFICATION	5.933046348871019E-6	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999935554613536	WITHOUT_CLASSIFICATION	6.444538646426018E-6	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999938593019306	WITHOUT_CLASSIFICATION	6.140698069381966E-6	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999942288844268	WITHOUT_CLASSIFICATION	5.771115573217642E-6	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999938022410484	WITHOUT_CLASSIFICATION	6.1977589516151E-6	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999920778513919	WITHOUT_CLASSIFICATION	7.922148608093961E-6	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999931016389614	WITHOUT_CLASSIFICATION	6.898361038639552E-6	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999932905743026	WITHOUT_CLASSIFICATION	6.709425697376003E-6	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.999993376717067	WITHOUT_CLASSIFICATION	6.623282932964579E-6	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999924981702589	WITHOUT_CLASSIFICATION	7.501829741068304E-6	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999923202670555	WITHOUT_CLASSIFICATION	7.679732944430972E-6	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999921668627607	WITHOUT_CLASSIFICATION	7.833137239310563E-6	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999941166535606	WITHOUT_CLASSIFICATION	5.883346439347986E-6	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999933468027193	WITHOUT_CLASSIFICATION	6.6531972807599634E-6	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999938903522753	WITHOUT_CLASSIFICATION	6.1096477248309315E-6	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999939482370628	WITHOUT_CLASSIFICATION	6.051762937242687E-6	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999930797213658	WITHOUT_CLASSIFICATION	6.920278634302789E-6	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999932892313464	WITHOUT_CLASSIFICATION	6.71076865351565E-6	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999939796956355	WITHOUT_CLASSIFICATION	6.020304364449116E-6	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999936166469684	WITHOUT_CLASSIFICATION	6.383353031594275E-6	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999935264618811	WITHOUT_CLASSIFICATION	6.4735381188726645E-6	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999933422726377	WITHOUT_CLASSIFICATION	6.657727362268873E-6	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999940399829991	WITHOUT_CLASSIFICATION	5.960017000980517E-6	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999933923365059	WITHOUT_CLASSIFICATION	6.607663494037891E-6	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999932233841115	WITHOUT_CLASSIFICATION	6.776615888504509E-6	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999933034275938	WITHOUT_CLASSIFICATION	6.6965724061430914E-6	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.999992110115075	WITHOUT_CLASSIFICATION	7.889884924924325E-6	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999933822637724	WITHOUT_CLASSIFICATION	6.6177362275514765E-6	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999919371205692	WITHOUT_CLASSIFICATION	8.062879430742133E-6	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999942345047228	WITHOUT_CLASSIFICATION	5.7654952772014065E-6	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999983089009932	WITHOUT_CLASSIFICATION	1.6910990067844217E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999989954060803	WITHOUT_CLASSIFICATION	1.0045939196784412E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999989954060803	WITHOUT_CLASSIFICATION	1.0045939196784412E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999989954060803	WITHOUT_CLASSIFICATION	1.0045939196784412E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999989954060803	WITHOUT_CLASSIFICATION	1.0045939196784412E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999989954060803	WITHOUT_CLASSIFICATION	1.0045939196784412E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999989954060803	WITHOUT_CLASSIFICATION	1.0045939196784412E-6	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999989954060803	WITHOUT_CLASSIFICATION	1.0045939196784412E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999997639482888	WITHOUT_CLASSIFICATION	2.3605171107445858E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999997639482888	WITHOUT_CLASSIFICATION	2.3605171107445858E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999997639482888	WITHOUT_CLASSIFICATION	2.3605171107445858E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999997639482888	WITHOUT_CLASSIFICATION	2.3605171107445858E-7	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999765604948128	WITHOUT_CLASSIFICATION	2.343950518725802E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999765604948128	WITHOUT_CLASSIFICATION	2.343950518725802E-5	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.999999096863155	WITHOUT_CLASSIFICATION	9.031368450528037E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999990071597484	WITHOUT_CLASSIFICATION	9.928402515395162E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999990071597484	WITHOUT_CLASSIFICATION	9.928402515395162E-7	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999989849056748	WITHOUT_CLASSIFICATION	1.0150943251231881E-6	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999958334872822	WITHOUT_CLASSIFICATION	4.166512717909798E-6	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995751174133	WITHOUT_CLASSIFICATION	4.248825865694488E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995751174133	WITHOUT_CLASSIFICATION	4.248825865694488E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995751174133	WITHOUT_CLASSIFICATION	4.248825865694488E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995751174133	WITHOUT_CLASSIFICATION	4.248825865694488E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995751174133	WITHOUT_CLASSIFICATION	4.248825865694488E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995751174133	WITHOUT_CLASSIFICATION	4.248825865694488E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999995751174133	WITHOUT_CLASSIFICATION	4.248825865694488E-7	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997464716651	WITHOUT_CLASSIFICATION	2.535283347868068E-7	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993701391993	WITHOUT_CLASSIFICATION	6.298608007312881E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999997581533675	WITHOUT_CLASSIFICATION	2.418466325048186E-6	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999997581533675	WITHOUT_CLASSIFICATION	2.418466325048186E-6	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999995068697001	WITHOUT_CLASSIFICATION	4.931302998206387E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999937972609783	WITHOUT_CLASSIFICATION	6.202739021745531E-6	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999937972609783	WITHOUT_CLASSIFICATION	6.202739021745531E-6	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999997172159747	WITHOUT_CLASSIFICATION	2.827840253095956E-7	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9998044721613353	WITHOUT_CLASSIFICATION	1.9552783866466384E-4	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999993988953395	WITHOUT_CLASSIFICATION	6.011046604054418E-7	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999994211133606	WITHOUT_CLASSIFICATION	5.788866394782026E-7	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999994054301383	WITHOUT_CLASSIFICATION	5.945698616667417E-7	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999997132315259	WITHOUT_CLASSIFICATION	2.8676847408891163E-6	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.999996807336004	WITHOUT_CLASSIFICATION	3.192663995936333E-6	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999995775076078	WITHOUT_CLASSIFICATION	4.224923922882333E-7	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999959405955473	WITHOUT_CLASSIFICATION	4.05940445270422E-6	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.999993993729935	WITHOUT_CLASSIFICATION	6.006270064904695E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9984101931471465	WITHOUT_CLASSIFICATION	0.0015898068528534546	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999717531365	WITHOUT_CLASSIFICATION	2.82468635185817E-8	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999992660177766	WITHOUT_CLASSIFICATION	7.339822233345237E-7	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999985041782188	WITHOUT_CLASSIFICATION	1.4958217811945074E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999843484262828	WITHOUT_CLASSIFICATION	1.565157371719046E-5	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999998409246267	WITHOUT_CLASSIFICATION	1.5907537321005254E-7	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999995708033363	WITHOUT_CLASSIFICATION	4.2919666366637365E-7	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999617845199602	WITHOUT_CLASSIFICATION	3.82154800397551E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999969551291318	WITHOUT_CLASSIFICATION	3.04487086827195E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999969551291318	WITHOUT_CLASSIFICATION	3.04487086827195E-6	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.999998815767821	WITHOUT_CLASSIFICATION	1.1842321790039167E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999991217997285	WITHOUT_CLASSIFICATION	8.782002715476888E-7	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999998989490607	WITHOUT_CLASSIFICATION	1.0105093929339413E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9997911572047031	WITHOUT_CLASSIFICATION	2.0884279529674842E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999535840587509	WITHOUT_CLASSIFICATION	4.641594124912119E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999535840587509	WITHOUT_CLASSIFICATION	4.641594124912119E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999535840587509	WITHOUT_CLASSIFICATION	4.641594124912119E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.999998746564312	WITHOUT_CLASSIFICATION	1.2534356880183146E-6	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9998277820863365	WITHOUT_CLASSIFICATION	1.722179136635889E-4	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999990557537407	WITHOUT_CLASSIFICATION	9.442462593554777E-7	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999993282147875	WITHOUT_CLASSIFICATION	6.71785212515933E-7	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999886459607074	WITHOUT_CLASSIFICATION	1.1354039292686704E-5	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999960623097781	WITHOUT_CLASSIFICATION	3.937690221893024E-6	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999942858099279	WITHOUT_CLASSIFICATION	5.7141900721101844E-6	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999940676041219	WITHOUT_CLASSIFICATION	5.932395878070521E-6	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999998104872341	WITHOUT_CLASSIFICATION	1.8951276598547279E-7	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999991020140371	WITHOUT_CLASSIFICATION	8.979859629032064E-7	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999957930277245	WITHOUT_CLASSIFICATION	4.206972275441315E-6	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.999999601357981	WITHOUT_CLASSIFICATION	3.9864201901448494E-7	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9997754398510441	WITHOUT_CLASSIFICATION	2.2456014895595624E-4	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999904282330742	WITHOUT_CLASSIFICATION	9.571766925829877E-6	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999987672369292	WITHOUT_CLASSIFICATION	1.2327630708983334E-6	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999981066246258	WITHOUT_CLASSIFICATION	1.893375374209331E-6	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999991249993699	WITHOUT_CLASSIFICATION	8.750006299430534E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999899931709328	WITHOUT_CLASSIFICATION	1.0006829067200175E-4	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999993907422802	WITHOUT_CLASSIFICATION	6.092577198520258E-7	TEST
