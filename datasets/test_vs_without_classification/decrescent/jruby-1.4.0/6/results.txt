ColumnDataClassifier invoked on Sat Aug 15 13:32:04 EDT 2015 with arguments:
   -prop /Users/evermal/git/npl_tools/datasets/test_vs_without_classification/decrescent/jruby-1.4.0/6/dataset.prop -1.useSplitWords -1.splitWordsRegexp \s
useQN = true
useClassFeature = true
testFile = /Users/evermal/git/npl_tools/datasets/test_vs_without_classification/decrescent/jruby-1.4.0/6/classified_seq.test
1.binnedLengths = 10,20,30
displayAllAnswers = true
intern = true
1.splitWordsRegexp = \s
goldAnswerColumn = 0
printTo = /Users/evermal/git/npl_tools/datasets/test_vs_without_classification/decrescent/jruby-1.4.0/6/top_features.txt
displayedColumn = 1
printClassifierParam = 60000
1.useNGrams = false
QNsize = 15
sigma = 3
tolerance = 1e-4
trainFile = /Users/evermal/git/npl_tools/datasets/test_vs_without_classification/decrescent/jruby-1.4.0/6/classified_seq.train
printClassifier = HighWeight
1.useSplitWords = true
Reading dataset from /Users/evermal/git/npl_tools/datasets/test_vs_without_classification/decrescent/jruby-1.4.0/6/classified_seq.train ... done [0.7s, 40328 items].
numDatums: 40328
numDatumsPerLabel: {TEST=77.0, WITHOUT_CLASSIFICATION=40251.0}
numLabels: 2 [TEST, WITHOUT_CLASSIFICATION]
numFeatures (Phi(X) types): 26240 [CLASS, 1-SW-as, 1-SW-with, 1-SW-on., 1-SW-TODO:, ...]
...........................................
QNMinimizer terminated due to average improvement: | newest_val - previous_val | / |newestVal| < TOL 
Built classifier described in file /Users/evermal/git/npl_tools/datasets/test_vs_without_classification/decrescent/jruby-1.4.0/6/top_features.txt
Reading dataset from /Users/evermal/git/npl_tools/datasets/test_vs_without_classification/decrescent/jruby-1.4.0/6/classified_seq.test ... done [0.1s, 4281 items].
Output format: dataColumn1	goldAnswer	[P(class) class]+ {sorted by probability}

4281 examples in test set
Cls TEST: TP=1 FN=5 FP=2 TN=4273; Acc 0.998 P 0.333 R 0.167 F1 0.222
Cls WITHOUT_CLASSIFICATION: TP=4273 FN=2 FP=5 TN=1; Acc 0.998 P 0.999 R 1.000 F1 0.999
Accuracy/micro-averaged F1: 0.99836
Macro-averaged F1: 0.61070
