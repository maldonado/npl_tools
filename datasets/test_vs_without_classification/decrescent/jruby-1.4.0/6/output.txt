// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999983908628319	WITHOUT_CLASSIFICATION	1.609137168083753E-6	TEST
// TODO make an assert here	TEST	0.9973813543383498	WITHOUT_CLASSIFICATION	0.002618645661650156	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.6555283929782079	WITHOUT_CLASSIFICATION	0.34447160702179214	TEST
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9998259792187254	WITHOUT_CLASSIFICATION	1.740207812746179E-4	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9999771989386156	WITHOUT_CLASSIFICATION	2.28010613843726E-5	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999944658562187	WITHOUT_CLASSIFICATION	5.5341437814510175E-6	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999999712073653	WITHOUT_CLASSIFICATION	2.8792634678732154E-8	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999993840107994	WITHOUT_CLASSIFICATION	6.159892006362413E-7	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999906961752476	WITHOUT_CLASSIFICATION	9.303824752356215E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999906961752476	WITHOUT_CLASSIFICATION	9.303824752356215E-6	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999836525353741	WITHOUT_CLASSIFICATION	1.6347464625836846E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999836525353741	WITHOUT_CLASSIFICATION	1.6347464625836846E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999811048992258	WITHOUT_CLASSIFICATION	1.8895100774269932E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999976522782351	WITHOUT_CLASSIFICATION	2.347721764962568E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999993050161501	WITHOUT_CLASSIFICATION	6.949838499472629E-7	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999993223646032	WITHOUT_CLASSIFICATION	6.776353968037269E-7	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999944959055024	WITHOUT_CLASSIFICATION	5.5040944976405E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999944959055024	WITHOUT_CLASSIFICATION	5.5040944976405E-6	TEST
// line 391	WITHOUT_CLASSIFICATION	0.999999249672499	WITHOUT_CLASSIFICATION	7.503275010503113E-7	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999943201413166	WITHOUT_CLASSIFICATION	5.679858683433449E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999943201413166	WITHOUT_CLASSIFICATION	5.679858683433449E-6	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9999718996788696	WITHOUT_CLASSIFICATION	2.8100321130476366E-5	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999834092935872	WITHOUT_CLASSIFICATION	1.6590706412798647E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999907315977791	WITHOUT_CLASSIFICATION	9.268402220971819E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999907315977791	WITHOUT_CLASSIFICATION	9.268402220971819E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999907315977791	WITHOUT_CLASSIFICATION	9.268402220971819E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999907315977791	WITHOUT_CLASSIFICATION	9.268402220971819E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999907315977791	WITHOUT_CLASSIFICATION	9.268402220971819E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999907315977791	WITHOUT_CLASSIFICATION	9.268402220971819E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999907315977791	WITHOUT_CLASSIFICATION	9.268402220971819E-6	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999818897308398	WITHOUT_CLASSIFICATION	1.8110269160196113E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999818897308398	WITHOUT_CLASSIFICATION	1.8110269160196113E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999818897308398	WITHOUT_CLASSIFICATION	1.8110269160196113E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999818897308398	WITHOUT_CLASSIFICATION	1.8110269160196113E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999818897308398	WITHOUT_CLASSIFICATION	1.8110269160196113E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999818897308398	WITHOUT_CLASSIFICATION	1.8110269160196113E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999818897308398	WITHOUT_CLASSIFICATION	1.8110269160196113E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999976619800207	WITHOUT_CLASSIFICATION	2.33801997928956E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999976619800207	WITHOUT_CLASSIFICATION	2.33801997928956E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999976619800207	WITHOUT_CLASSIFICATION	2.33801997928956E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999976619800207	WITHOUT_CLASSIFICATION	2.33801997928956E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999976619800207	WITHOUT_CLASSIFICATION	2.33801997928956E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999976619800207	WITHOUT_CLASSIFICATION	2.33801997928956E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999939023725285	WITHOUT_CLASSIFICATION	6.097627471501728E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999939023725285	WITHOUT_CLASSIFICATION	6.097627471501728E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999939023725285	WITHOUT_CLASSIFICATION	6.097627471501728E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999939023725285	WITHOUT_CLASSIFICATION	6.097627471501728E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999939023725285	WITHOUT_CLASSIFICATION	6.097627471501728E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999939023725285	WITHOUT_CLASSIFICATION	6.097627471501728E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999937076549648	WITHOUT_CLASSIFICATION	6.292345035276114E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999937076549648	WITHOUT_CLASSIFICATION	6.292345035276114E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999937076549648	WITHOUT_CLASSIFICATION	6.292345035276114E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999937076549648	WITHOUT_CLASSIFICATION	6.292345035276114E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999937076549648	WITHOUT_CLASSIFICATION	6.292345035276114E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999937076549648	WITHOUT_CLASSIFICATION	6.292345035276114E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999937076549648	WITHOUT_CLASSIFICATION	6.292345035276114E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999993468074056	WITHOUT_CLASSIFICATION	6.531925944046022E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999993468074056	WITHOUT_CLASSIFICATION	6.531925944046022E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999993468074056	WITHOUT_CLASSIFICATION	6.531925944046022E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999993468074056	WITHOUT_CLASSIFICATION	6.531925944046022E-6	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999582466576349	WITHOUT_CLASSIFICATION	4.1753342365127755E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999582466576349	WITHOUT_CLASSIFICATION	4.1753342365127755E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999992295368862	WITHOUT_CLASSIFICATION	7.704631138125269E-7	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999998945094928	WITHOUT_CLASSIFICATION	1.0549050723643879E-7	TEST
// name	WITHOUT_CLASSIFICATION	0.9999979130875196	WITHOUT_CLASSIFICATION	2.0869124803403436E-6	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999993492873911	WITHOUT_CLASSIFICATION	6.507126088223231E-7	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999997640840691	WITHOUT_CLASSIFICATION	2.3591593094745984E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996101499059	WITHOUT_CLASSIFICATION	3.8985009414391014E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996101499059	WITHOUT_CLASSIFICATION	3.8985009414391014E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996101499059	WITHOUT_CLASSIFICATION	3.8985009414391014E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996101499059	WITHOUT_CLASSIFICATION	3.8985009414391014E-7	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.999999842877535	WITHOUT_CLASSIFICATION	1.571224650766978E-7	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.99999998160665	WITHOUT_CLASSIFICATION	1.8393350001716953E-8	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999997637016336	WITHOUT_CLASSIFICATION	2.3629836637874654E-7	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999998297581779	WITHOUT_CLASSIFICATION	1.7024182208394879E-7	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999991447251779	WITHOUT_CLASSIFICATION	8.552748220502186E-7	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999760501771	WITHOUT_CLASSIFICATION	2.3949822916754617E-8	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999998447478324	WITHOUT_CLASSIFICATION	1.5525216755324147E-7	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999821615062	WITHOUT_CLASSIFICATION	1.7838493875181773E-8	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999789949332	WITHOUT_CLASSIFICATION	2.100506670346444E-8	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999993174660969	WITHOUT_CLASSIFICATION	6.82533903074896E-7	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999877598068	WITHOUT_CLASSIFICATION	1.2240193086607135E-8	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999999725915644	WITHOUT_CLASSIFICATION	2.740843570807483E-8	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999881747506545	WITHOUT_CLASSIFICATION	1.1825249345579253E-5	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999999693920676	WITHOUT_CLASSIFICATION	3.060793235288435E-8	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999999719592602	WITHOUT_CLASSIFICATION	2.804073980278413E-7	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999883095401962	WITHOUT_CLASSIFICATION	1.1690459803780183E-5	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999999896030091	WITHOUT_CLASSIFICATION	1.03969910283201E-8	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996101499059	WITHOUT_CLASSIFICATION	3.8985009414391014E-7	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999434362842	WITHOUT_CLASSIFICATION	5.656371584233396E-8	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999998453300368	WITHOUT_CLASSIFICATION	1.546699632080396E-7	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998013047627	WITHOUT_CLASSIFICATION	1.9869523724815583E-7	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999989040064057	WITHOUT_CLASSIFICATION	1.0959935942215682E-6	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999999766264175	WITHOUT_CLASSIFICATION	2.337358248222601E-8	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999996036253112	WITHOUT_CLASSIFICATION	3.9637468889885697E-7	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999998962801289	WITHOUT_CLASSIFICATION	1.0371987114492268E-7	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999997001849553	WITHOUT_CLASSIFICATION	2.998150446662428E-7	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.999999363323619	WITHOUT_CLASSIFICATION	6.366763808710612E-7	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999996658217316	WITHOUT_CLASSIFICATION	3.3417826830605297E-7	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999349582674673	WITHOUT_CLASSIFICATION	6.504173253278122E-5	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999995568148906	WITHOUT_CLASSIFICATION	4.431851094129318E-7	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999999090431793	WITHOUT_CLASSIFICATION	9.09568208142828E-8	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999972362881061	WITHOUT_CLASSIFICATION	2.763711893918991E-6	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999975892690443	WITHOUT_CLASSIFICATION	2.410730955854034E-6	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.999996904216796	WITHOUT_CLASSIFICATION	3.0957832040644877E-6	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999997069014228	WITHOUT_CLASSIFICATION	2.930985771942452E-7	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999421599224	WITHOUT_CLASSIFICATION	5.784007767076862E-8	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9978368594306435	WITHOUT_CLASSIFICATION	0.002163140569356552	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999992180794413	WITHOUT_CLASSIFICATION	7.819205586873602E-7	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.999999522719155	WITHOUT_CLASSIFICATION	4.772808448632374E-7	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999989505945842	WITHOUT_CLASSIFICATION	1.0494054158087283E-6	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999998534857898	WITHOUT_CLASSIFICATION	1.4651421022263113E-7	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9999809483848873	WITHOUT_CLASSIFICATION	1.9051615112782146E-5	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999997070916071	WITHOUT_CLASSIFICATION	2.9290839286088425E-7	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9999951209804591	WITHOUT_CLASSIFICATION	4.879019540849822E-6	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999997471426099	WITHOUT_CLASSIFICATION	2.5285739005700337E-7	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999998960052168	WITHOUT_CLASSIFICATION	1.0399478326095646E-7	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999727662928	WITHOUT_CLASSIFICATION	2.723370720071058E-8	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.999999965829848	WITHOUT_CLASSIFICATION	3.4170152004302547E-8	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999995463794453	WITHOUT_CLASSIFICATION	4.536205547454324E-7	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999997530549443	WITHOUT_CLASSIFICATION	2.469450557862713E-7	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999994506007713	WITHOUT_CLASSIFICATION	5.493992286913638E-7	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999458941873	WITHOUT_CLASSIFICATION	5.410581265981883E-8	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999999768037753	WITHOUT_CLASSIFICATION	2.3196224666049082E-8	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999997808927691	WITHOUT_CLASSIFICATION	2.191072308218996E-7	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999999702692658	WITHOUT_CLASSIFICATION	2.9730734240732055E-8	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999998906774467	WITHOUT_CLASSIFICATION	1.0932255326240007E-7	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.999998647941035	WITHOUT_CLASSIFICATION	1.3520589650019156E-6	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995922784113	WITHOUT_CLASSIFICATION	4.077215887452427E-7	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999602276474	WITHOUT_CLASSIFICATION	3.977235257415523E-8	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999889539561	WITHOUT_CLASSIFICATION	1.1046043902901144E-7	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999984166805378	WITHOUT_CLASSIFICATION	1.5833194622454359E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999992502307025	WITHOUT_CLASSIFICATION	7.497692974651182E-7	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999992502307025	WITHOUT_CLASSIFICATION	7.497692974651182E-7	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999969267365733	WITHOUT_CLASSIFICATION	3.073263426821064E-6	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999999888316946	WITHOUT_CLASSIFICATION	1.1168305321495457E-8	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999951452576502	WITHOUT_CLASSIFICATION	4.854742349770407E-6	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999999599100446	WITHOUT_CLASSIFICATION	4.008995543752839E-8	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999996644967208	WITHOUT_CLASSIFICATION	3.3550327912830393E-7	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999985342146387	WITHOUT_CLASSIFICATION	1.465785361308986E-6	TEST
// ???	WITHOUT_CLASSIFICATION	0.9999975214414475	WITHOUT_CLASSIFICATION	2.478558552553772E-6	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999936264956212	WITHOUT_CLASSIFICATION	6.3735043788581E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999889539561	WITHOUT_CLASSIFICATION	1.1046043902901144E-7	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999517306382	WITHOUT_CLASSIFICATION	4.826936182885366E-8	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999992632776846	WITHOUT_CLASSIFICATION	7.367223154062912E-7	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999968008814	WITHOUT_CLASSIFICATION	3.199118756348565E-9	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999884112875	WITHOUT_CLASSIFICATION	1.1588712506060641E-8	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999998158465189	WITHOUT_CLASSIFICATION	1.8415348123114782E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999999854628715	WITHOUT_CLASSIFICATION	1.4537128506146512E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999999854628715	WITHOUT_CLASSIFICATION	1.4537128506146512E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.999999854628715	WITHOUT_CLASSIFICATION	1.4537128506146512E-7	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999999856529403	WITHOUT_CLASSIFICATION	1.4347059636580777E-8	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999975714331231	WITHOUT_CLASSIFICATION	2.4285668769606015E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999997991052159	WITHOUT_CLASSIFICATION	2.008947841898806E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999986551250745	WITHOUT_CLASSIFICATION	1.3448749254896905E-6	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999997252483057	WITHOUT_CLASSIFICATION	2.7475169425230803E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999999004102135	WITHOUT_CLASSIFICATION	9.958978661182102E-8	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999999532794709	WITHOUT_CLASSIFICATION	4.672052914253616E-8	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999127180366	WITHOUT_CLASSIFICATION	8.728196339831663E-8	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999996114599422	WITHOUT_CLASSIFICATION	3.8854005786603227E-7	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999996114599422	WITHOUT_CLASSIFICATION	3.8854005786603227E-7	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999995029232136	WITHOUT_CLASSIFICATION	4.970767863767778E-7	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999973328358881	WITHOUT_CLASSIFICATION	2.667164111904428E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999996089540337	WITHOUT_CLASSIFICATION	3.9104596630884576E-7	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999996089540337	WITHOUT_CLASSIFICATION	3.9104596630884576E-7	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999998149660438	WITHOUT_CLASSIFICATION	1.8503395613036442E-7	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999726520657	WITHOUT_CLASSIFICATION	2.7347934247472292E-8	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999994114306221	WITHOUT_CLASSIFICATION	5.885693778448987E-7	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999152739412	WITHOUT_CLASSIFICATION	8.472605892292789E-8	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999997306490295	WITHOUT_CLASSIFICATION	2.693509706070572E-7	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999998513289098	WITHOUT_CLASSIFICATION	1.4867109015752084E-7	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999990085438245	WITHOUT_CLASSIFICATION	9.914561754938574E-7	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999980995261556	WITHOUT_CLASSIFICATION	1.9004738443571083E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.999999808772403	WITHOUT_CLASSIFICATION	1.9122759709843824E-7	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.999999872465187	WITHOUT_CLASSIFICATION	1.2753481301101473E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999889539561	WITHOUT_CLASSIFICATION	1.1046043902901144E-7	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999949371432683	WITHOUT_CLASSIFICATION	5.062856731786337E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999274599785	WITHOUT_CLASSIFICATION	7.254002152841699E-8	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999998264924495	WITHOUT_CLASSIFICATION	1.7350755056170757E-7	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999979600687631	WITHOUT_CLASSIFICATION	2.0399312369777686E-6	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999985222084655	WITHOUT_CLASSIFICATION	1.4777915345251827E-6	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999900790318228	WITHOUT_CLASSIFICATION	9.920968177210508E-6	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999996192289621	WITHOUT_CLASSIFICATION	3.807710379138818E-7	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999991127581245	WITHOUT_CLASSIFICATION	8.87241875500242E-7	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999998767776261	WITHOUT_CLASSIFICATION	1.2322237374432842E-7	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999994703523647	WITHOUT_CLASSIFICATION	5.296476353148613E-7	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999999597677371	WITHOUT_CLASSIFICATION	4.0232262826379104E-8	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999695338917	WITHOUT_CLASSIFICATION	3.0466108241402535E-8	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999999545891702	WITHOUT_CLASSIFICATION	4.54108298070805E-8	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999999604689451	WITHOUT_CLASSIFICATION	3.953105480361756E-8	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9997707291423672	WITHOUT_CLASSIFICATION	2.2927085763289114E-4	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999999848618111	WITHOUT_CLASSIFICATION	1.5138188953794515E-8	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.999999967327696	WITHOUT_CLASSIFICATION	3.267230399363964E-8	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.999999819015411	WITHOUT_CLASSIFICATION	1.8098458884654258E-7	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999999961935047	WITHOUT_CLASSIFICATION	3.8064953375148446E-9	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.999999975219512	WITHOUT_CLASSIFICATION	2.478048799004301E-8	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999999876137292	WITHOUT_CLASSIFICATION	1.2386270743578458E-8	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999993102472	WITHOUT_CLASSIFICATION	6.897528950895213E-10	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999997341198	WITHOUT_CLASSIFICATION	2.6588019036224404E-10	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999991844885733	WITHOUT_CLASSIFICATION	8.155114268113783E-7	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999998850944577	WITHOUT_CLASSIFICATION	1.149055423049605E-7	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.999999597419786	WITHOUT_CLASSIFICATION	4.025802141317868E-7	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999972569216801	WITHOUT_CLASSIFICATION	2.743078319929499E-6	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.999999985324361	WITHOUT_CLASSIFICATION	1.4675639134901525E-8	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999946447571	WITHOUT_CLASSIFICATION	5.355242936520308E-9	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999998761473745	WITHOUT_CLASSIFICATION	1.238526255518383E-7	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999876527809	WITHOUT_CLASSIFICATION	1.2347219216228602E-8	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.99999995490598	WITHOUT_CLASSIFICATION	4.509401994513128E-8	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999873188143323	WITHOUT_CLASSIFICATION	1.2681185667568642E-5	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999998483417617	WITHOUT_CLASSIFICATION	1.5165823819625762E-7	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999996765023206	WITHOUT_CLASSIFICATION	3.234976794504489E-7	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999988841230327	WITHOUT_CLASSIFICATION	1.1158769672464296E-6	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998293745653	WITHOUT_CLASSIFICATION	1.7062543471731734E-7	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999978240259823	WITHOUT_CLASSIFICATION	2.1759740177044825E-5	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999998700189671	WITHOUT_CLASSIFICATION	1.299810329569498E-7	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999409540932	WITHOUT_CLASSIFICATION	5.904590672546732E-8	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999999321831159	WITHOUT_CLASSIFICATION	6.781688411043461E-8	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999999155924362	WITHOUT_CLASSIFICATION	8.440756375279656E-8	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999995122669204	WITHOUT_CLASSIFICATION	4.877330795634204E-7	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999998982492985	WITHOUT_CLASSIFICATION	1.017507015658081E-7	TEST
// Java support	WITHOUT_CLASSIFICATION	0.999999801920093	WITHOUT_CLASSIFICATION	1.9807990694809342E-7	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999995134455234	WITHOUT_CLASSIFICATION	4.865544765657661E-7	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999996827933749	WITHOUT_CLASSIFICATION	3.172066250453053E-7	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999999381653051	WITHOUT_CLASSIFICATION	6.183469484404525E-8	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999999706714122	WITHOUT_CLASSIFICATION	2.9328587713518788E-8	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999999828425669	WITHOUT_CLASSIFICATION	1.7157433052122125E-8	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.999999962078124	WITHOUT_CLASSIFICATION	3.7921876034208604E-8	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999999332630974	WITHOUT_CLASSIFICATION	6.673690256890011E-8	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999998930867151	WITHOUT_CLASSIFICATION	1.0691328490715184E-7	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999999714908107	WITHOUT_CLASSIFICATION	2.850918943559191E-8	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999998440523217	WITHOUT_CLASSIFICATION	1.5594767833148617E-7	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999999883689427	WITHOUT_CLASSIFICATION	1.1631057388817779E-8	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999999877842265	WITHOUT_CLASSIFICATION	1.2215773445075703E-8	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999999715235705	WITHOUT_CLASSIFICATION	2.8476429603196753E-8	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999999466304246	WITHOUT_CLASSIFICATION	5.3369575456782866E-8	TEST
// default options	WITHOUT_CLASSIFICATION	0.99999996221506	WITHOUT_CLASSIFICATION	3.778494001281593E-8	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999978171729739	WITHOUT_CLASSIFICATION	2.1828270261385137E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999978171729739	WITHOUT_CLASSIFICATION	2.1828270261385137E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999993173219028	WITHOUT_CLASSIFICATION	6.826780971338105E-7	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999993173219028	WITHOUT_CLASSIFICATION	6.826780971338105E-7	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999969849690524	WITHOUT_CLASSIFICATION	3.0150309475536636E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999969849690524	WITHOUT_CLASSIFICATION	3.0150309475536636E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999982473812861	WITHOUT_CLASSIFICATION	1.75261871398222E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999982473812861	WITHOUT_CLASSIFICATION	1.75261871398222E-6	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999990989686777	WITHOUT_CLASSIFICATION	9.010313223627343E-7	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999998147522839	WITHOUT_CLASSIFICATION	1.8524771607615755E-7	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995210498253	WITHOUT_CLASSIFICATION	4.789501748240343E-7	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999962487371035	WITHOUT_CLASSIFICATION	3.7512628965366984E-6	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999998208688367	WITHOUT_CLASSIFICATION	1.7913116326460605E-7	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999897536499532	WITHOUT_CLASSIFICATION	1.0246350046747912E-5	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999935938221179	WITHOUT_CLASSIFICATION	6.406177882073193E-6	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999302769832	WITHOUT_CLASSIFICATION	6.972301686845313E-8	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999998944776797	WITHOUT_CLASSIFICATION	1.0552232035451477E-7	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999994764320689	WITHOUT_CLASSIFICATION	5.235679311376676E-7	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999994917145901	WITHOUT_CLASSIFICATION	5.082854099199617E-7	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999739466464	WITHOUT_CLASSIFICATION	2.6053353627890884E-8	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999984342176444	WITHOUT_CLASSIFICATION	1.5657823555559714E-6	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999994171312442	WITHOUT_CLASSIFICATION	5.828687557693772E-7	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999997650551609	WITHOUT_CLASSIFICATION	2.349448391947781E-7	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999975780605306	WITHOUT_CLASSIFICATION	2.421939469488795E-6	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999974279236	WITHOUT_CLASSIFICATION	2.5720763707869836E-9	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999997714623529	WITHOUT_CLASSIFICATION	2.2853764704881707E-7	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.999996608521352	WITHOUT_CLASSIFICATION	3.3914786480378345E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.999999307887983	WITHOUT_CLASSIFICATION	6.921120169675005E-7	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999997993236334	WITHOUT_CLASSIFICATION	2.0067636675047171E-7	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999990795224554	WITHOUT_CLASSIFICATION	9.204775446320232E-7	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999995705820857	WITHOUT_CLASSIFICATION	4.294179142676266E-7	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999985139124159	WITHOUT_CLASSIFICATION	1.4860875841750067E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999969603583921	WITHOUT_CLASSIFICATION	3.039641607921967E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999991049908291	WITHOUT_CLASSIFICATION	8.950091709034009E-7	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.999998654474526	WITHOUT_CLASSIFICATION	1.3455254740731643E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999998269895989	WITHOUT_CLASSIFICATION	1.730104010195412E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999998269895989	WITHOUT_CLASSIFICATION	1.730104010195412E-7	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999985391628823	WITHOUT_CLASSIFICATION	1.4608371177016884E-6	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999986210937336	WITHOUT_CLASSIFICATION	1.3789062664846207E-6	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999979309538384	WITHOUT_CLASSIFICATION	2.0690461615266555E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999997985832377	WITHOUT_CLASSIFICATION	2.0141676224385755E-7	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999933662841192	WITHOUT_CLASSIFICATION	6.633715880777083E-6	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999970209993119	WITHOUT_CLASSIFICATION	2.9790006882386902E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999974791461277	WITHOUT_CLASSIFICATION	2.520853872313844E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999974791461277	WITHOUT_CLASSIFICATION	2.520853872313844E-6	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999995860023411	WITHOUT_CLASSIFICATION	4.139976588954635E-7	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9994929795243157	WITHOUT_CLASSIFICATION	5.070204756843314E-4	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999994768902711	WITHOUT_CLASSIFICATION	5.231097287377303E-7	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999994768902711	WITHOUT_CLASSIFICATION	5.231097287377303E-7	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999997571778312	WITHOUT_CLASSIFICATION	2.4282216881336977E-7	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999958287662923	WITHOUT_CLASSIFICATION	4.171233707664982E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999958287662923	WITHOUT_CLASSIFICATION	4.171233707664982E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999995932739637	WITHOUT_CLASSIFICATION	4.067260362688386E-7	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999995932739637	WITHOUT_CLASSIFICATION	4.067260362688386E-7	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999949475413092	WITHOUT_CLASSIFICATION	5.052458690743878E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999949475413092	WITHOUT_CLASSIFICATION	5.052458690743878E-6	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9999973106569814	WITHOUT_CLASSIFICATION	2.6893430184803496E-6	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999995245436272	WITHOUT_CLASSIFICATION	4.754563727859455E-7	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999997647055957	WITHOUT_CLASSIFICATION	2.352944042519474E-7	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.999999878821134	WITHOUT_CLASSIFICATION	1.2117886604685584E-7	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999984454024	WITHOUT_CLASSIFICATION	1.5545975448441887E-9	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999999909627287	WITHOUT_CLASSIFICATION	9.037271289474433E-9	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999999513314493	WITHOUT_CLASSIFICATION	4.86685507106314E-7	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999999915327905	WITHOUT_CLASSIFICATION	8.46720944761005E-9	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999999513314493	WITHOUT_CLASSIFICATION	4.86685507106314E-7	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9995710322351381	WITHOUT_CLASSIFICATION	4.289677648618764E-4	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.999999789891772	WITHOUT_CLASSIFICATION	2.1010822800539748E-7	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999998295922446	WITHOUT_CLASSIFICATION	1.7040775534748892E-7	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999988139163982	WITHOUT_CLASSIFICATION	1.186083601748021E-6	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999999323648388	WITHOUT_CLASSIFICATION	6.763516124604422E-8	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999992311548018	WITHOUT_CLASSIFICATION	7.688451980923646E-7	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999962692878689	WITHOUT_CLASSIFICATION	3.730712131068183E-6	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999991314535325	WITHOUT_CLASSIFICATION	8.685464676063122E-7	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999988602617	WITHOUT_CLASSIFICATION	1.13973824968239E-9	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999999833660607	WITHOUT_CLASSIFICATION	1.663393937806566E-8	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999999088057345	WITHOUT_CLASSIFICATION	9.119426552380779E-8	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999950443491787	WITHOUT_CLASSIFICATION	4.955650821157734E-6	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999997666643149	WITHOUT_CLASSIFICATION	2.3333568513151657E-7	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999997765354505	WITHOUT_CLASSIFICATION	2.2346454944669966E-7	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999997821932219	WITHOUT_CLASSIFICATION	2.1780677795311847E-7	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999866534732	WITHOUT_CLASSIFICATION	1.334652669278831E-8	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999995914482671	WITHOUT_CLASSIFICATION	4.0855173282051814E-7	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999998035069902	WITHOUT_CLASSIFICATION	1.9649300978725129E-7	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999992498851887	WITHOUT_CLASSIFICATION	7.501148112181272E-7	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999964698499355	WITHOUT_CLASSIFICATION	3.530150064364692E-6	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999986345934027	WITHOUT_CLASSIFICATION	1.3654065974048917E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999237052565	WITHOUT_CLASSIFICATION	7.629474347614135E-8	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999998311595596	WITHOUT_CLASSIFICATION	1.6884044045030183E-7	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999998509970961	WITHOUT_CLASSIFICATION	1.4900290396829463E-7	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999992660899097	WITHOUT_CLASSIFICATION	7.339100903362717E-7	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999999722044602	WITHOUT_CLASSIFICATION	2.779553977001406E-8	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999998722836065	WITHOUT_CLASSIFICATION	1.277163934940743E-7	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999994242852576	WITHOUT_CLASSIFICATION	5.757147424115432E-7	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999783639464	WITHOUT_CLASSIFICATION	2.1636053578214375E-8	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999999106568481	WITHOUT_CLASSIFICATION	8.934315188330539E-8	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999998982284208	WITHOUT_CLASSIFICATION	1.0177157917104777E-7	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999975936101	WITHOUT_CLASSIFICATION	2.4063898987989536E-9	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999964403997	WITHOUT_CLASSIFICATION	3.559600136066333E-9	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.999999504735318	WITHOUT_CLASSIFICATION	4.952646820821078E-7	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999553456016	WITHOUT_CLASSIFICATION	4.465439846370074E-8	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999999099923212	WITHOUT_CLASSIFICATION	9.000767873599595E-8	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999270698602	WITHOUT_CLASSIFICATION	7.29301398404191E-8	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999999842213367	WITHOUT_CLASSIFICATION	1.577866326600691E-8	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999999991407804	WITHOUT_CLASSIFICATION	8.592195633529284E-10	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999999305494466	WITHOUT_CLASSIFICATION	6.945055344763976E-8	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999915627233	WITHOUT_CLASSIFICATION	8.437276679510715E-9	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999998905948323	WITHOUT_CLASSIFICATION	1.0940516776314414E-7	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999180425364	WITHOUT_CLASSIFICATION	8.195746358112693E-8	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999362618417	WITHOUT_CLASSIFICATION	6.37381582957582E-8	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999696501632	WITHOUT_CLASSIFICATION	3.034983666350462E-8	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999470006836	WITHOUT_CLASSIFICATION	5.299931645514476E-8	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.999999402398214	WITHOUT_CLASSIFICATION	5.976017859736289E-7	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999952540354	WITHOUT_CLASSIFICATION	4.745964635455142E-9	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999994577559095	WITHOUT_CLASSIFICATION	5.42244090386876E-7	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999995703580753	WITHOUT_CLASSIFICATION	4.2964192462377647E-7	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999999784763592	WITHOUT_CLASSIFICATION	2.1523640761804815E-8	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999505857115	WITHOUT_CLASSIFICATION	4.941428850952816E-8	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999866530073946	WITHOUT_CLASSIFICATION	1.3346992605390849E-5	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999998462339279	WITHOUT_CLASSIFICATION	1.53766072109954E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999590678933	WITHOUT_CLASSIFICATION	4.0932106630080896E-8	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999590678933	WITHOUT_CLASSIFICATION	4.0932106630080896E-8	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999990172874563	WITHOUT_CLASSIFICATION	9.827125436194759E-7	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999939741510427	WITHOUT_CLASSIFICATION	6.025848957354775E-6	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999657942957	WITHOUT_CLASSIFICATION	3.420570436427646E-8	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999999727757283	WITHOUT_CLASSIFICATION	2.7224271649459276E-8	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999998886971496	WITHOUT_CLASSIFICATION	1.1130285038671534E-7	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999994154411906	WITHOUT_CLASSIFICATION	5.845588094137345E-7	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999964317408698	WITHOUT_CLASSIFICATION	3.5682591302493635E-6	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999999975773514	WITHOUT_CLASSIFICATION	2.4226486502518886E-9	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999997178202771	WITHOUT_CLASSIFICATION	2.8217972294510216E-7	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999999093663067	WITHOUT_CLASSIFICATION	9.063369329380332E-8	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999917924306	WITHOUT_CLASSIFICATION	8.207569365950569E-9	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999917924306	WITHOUT_CLASSIFICATION	8.207569365950569E-9	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999997259087245	WITHOUT_CLASSIFICATION	2.740912754723436E-7	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999999945215062	WITHOUT_CLASSIFICATION	5.478493745721216E-9	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999971555999665	WITHOUT_CLASSIFICATION	2.844400033420856E-6	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999997764478796	WITHOUT_CLASSIFICATION	2.2355212032389494E-7	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999989123613501	WITHOUT_CLASSIFICATION	1.0876386500051214E-6	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999860936363	WITHOUT_CLASSIFICATION	1.3906363668979396E-8	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999990861867771	WITHOUT_CLASSIFICATION	9.138132228597013E-7	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999995925716756	WITHOUT_CLASSIFICATION	4.0742832448090994E-7	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.999999993596816	WITHOUT_CLASSIFICATION	6.403184032462857E-9	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999996321220446	WITHOUT_CLASSIFICATION	3.67877955510432E-7	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999999433041236	WITHOUT_CLASSIFICATION	5.6695876313502326E-8	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999994595780092	WITHOUT_CLASSIFICATION	5.404219907603269E-7	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.999999976894882	WITHOUT_CLASSIFICATION	2.3105118000321504E-8	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.999999976894882	WITHOUT_CLASSIFICATION	2.3105118000321504E-8	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999999692454721	WITHOUT_CLASSIFICATION	3.075452795325721E-8	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999996970986015	WITHOUT_CLASSIFICATION	3.029013984652247E-7	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.999999668909959	WITHOUT_CLASSIFICATION	3.3109004100708895E-7	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.999999718910713	WITHOUT_CLASSIFICATION	2.810892869976784E-7	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999999444653497	WITHOUT_CLASSIFICATION	5.553465026543669E-8	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999997981618193	WITHOUT_CLASSIFICATION	2.0183818081223072E-7	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999987782874079	WITHOUT_CLASSIFICATION	1.2217125920505698E-6	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999995858446243	WITHOUT_CLASSIFICATION	4.1415537567200174E-7	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999991884111058	WITHOUT_CLASSIFICATION	8.115888942544727E-7	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999999614001345	WITHOUT_CLASSIFICATION	3.8599865537621415E-8	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999971555999665	WITHOUT_CLASSIFICATION	2.844400033420856E-6	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999988478173906	WITHOUT_CLASSIFICATION	1.1521826093716495E-6	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999981873880955	WITHOUT_CLASSIFICATION	1.8126119044546121E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999946574636824	WITHOUT_CLASSIFICATION	5.3425363175033904E-6	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999999892141155	WITHOUT_CLASSIFICATION	1.0785884559094954E-8	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999999605736687	WITHOUT_CLASSIFICATION	3.9426331233317927E-8	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.999999990251115	WITHOUT_CLASSIFICATION	9.748885068959429E-9	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999992251941346	WITHOUT_CLASSIFICATION	7.74805865343068E-7	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999998656005727	WITHOUT_CLASSIFICATION	1.3439942727233226E-7	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999195081359	WITHOUT_CLASSIFICATION	8.049186405195093E-8	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999999280037223	WITHOUT_CLASSIFICATION	7.199627765551991E-8	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999998259301431	WITHOUT_CLASSIFICATION	1.7406985683206982E-7	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999939186630689	WITHOUT_CLASSIFICATION	6.0813369311461775E-6	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999987676217833	WITHOUT_CLASSIFICATION	1.2323782166676282E-6	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999990387146738	WITHOUT_CLASSIFICATION	9.61285326227232E-7	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999924773223883	WITHOUT_CLASSIFICATION	7.522677611813925E-6	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999999189454759	WITHOUT_CLASSIFICATION	8.105452410185194E-8	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999995282894679	WITHOUT_CLASSIFICATION	4.7171053210229787E-7	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999997262106782	WITHOUT_CLASSIFICATION	2.73789321815445E-7	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999987808711892	WITHOUT_CLASSIFICATION	1.2191288107565792E-6	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.999998515262255	WITHOUT_CLASSIFICATION	1.4847377450118726E-6	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999893896377	WITHOUT_CLASSIFICATION	1.061036229207102E-8	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.999999459632622	WITHOUT_CLASSIFICATION	5.40367377950535E-7	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999998835528523	WITHOUT_CLASSIFICATION	1.164471476599476E-7	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999974927658412	WITHOUT_CLASSIFICATION	2.507234158915281E-6	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999997487209823	WITHOUT_CLASSIFICATION	2.512790177055555E-7	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999999109151901	WITHOUT_CLASSIFICATION	8.908480982913538E-8	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999969153711793	WITHOUT_CLASSIFICATION	3.084628820799958E-6	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999996340347912	WITHOUT_CLASSIFICATION	3.659652088304635E-7	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999995957523901	WITHOUT_CLASSIFICATION	4.0424760994456656E-7	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999999750453819	WITHOUT_CLASSIFICATION	2.4954618077021263E-8	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999928340351791	WITHOUT_CLASSIFICATION	7.165964820937333E-6	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999928340351791	WITHOUT_CLASSIFICATION	7.165964820937333E-6	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999996476917807	WITHOUT_CLASSIFICATION	3.5230821930588494E-7	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999997363469559	WITHOUT_CLASSIFICATION	2.636530439805695E-7	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999800639957	WITHOUT_CLASSIFICATION	1.9936004254674248E-8	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999999125996937	WITHOUT_CLASSIFICATION	8.740030627316965E-8	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999975325679706	WITHOUT_CLASSIFICATION	2.4674320293694524E-6	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999995904963395	WITHOUT_CLASSIFICATION	4.0950366058618523E-7	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.999999889539561	WITHOUT_CLASSIFICATION	1.1046043902901144E-7	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999984092287033	WITHOUT_CLASSIFICATION	1.5907712966670881E-6	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999956772396225	WITHOUT_CLASSIFICATION	4.322760377479752E-6	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999998135152365	WITHOUT_CLASSIFICATION	1.864847635838923E-7	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999174387261	WITHOUT_CLASSIFICATION	8.256127389834136E-8	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999995206543684	WITHOUT_CLASSIFICATION	4.793456315759415E-7	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999904901867245	WITHOUT_CLASSIFICATION	9.509813275516938E-6	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999409540932	WITHOUT_CLASSIFICATION	5.904590672546732E-8	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999982770423	WITHOUT_CLASSIFICATION	1.7229576637120188E-9	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999779105924909	WITHOUT_CLASSIFICATION	2.2089407509146583E-5	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999991323847	WITHOUT_CLASSIFICATION	8.676154340349388E-10	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999685298455	WITHOUT_CLASSIFICATION	3.14701544744316E-8	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999999661926473	WITHOUT_CLASSIFICATION	3.380735268133656E-8	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999980939439883	WITHOUT_CLASSIFICATION	1.9060560116932948E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999994418439853	WITHOUT_CLASSIFICATION	5.581560147990579E-7	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999994418439853	WITHOUT_CLASSIFICATION	5.581560147990579E-7	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999998826173898	WITHOUT_CLASSIFICATION	1.1738261016202866E-7	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.99999965591582	WITHOUT_CLASSIFICATION	3.4408418009034233E-7	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999998773402572	WITHOUT_CLASSIFICATION	1.2265974276774278E-7	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999991239116196	WITHOUT_CLASSIFICATION	8.760883804715176E-7	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999992510135912	WITHOUT_CLASSIFICATION	7.489864087487176E-7	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999999868342161	WITHOUT_CLASSIFICATION	1.3165783874178261E-8	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999973521314	WITHOUT_CLASSIFICATION	2.647868568494795E-9	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999351977839	WITHOUT_CLASSIFICATION	6.480221607281045E-8	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999996930844294	WITHOUT_CLASSIFICATION	3.0691557058109787E-7	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.999999953610136	WITHOUT_CLASSIFICATION	4.638986394477063E-8	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999992980152089	WITHOUT_CLASSIFICATION	7.019847910471502E-7	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999995553859438	WITHOUT_CLASSIFICATION	4.4461405629291384E-7	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999984135196751	WITHOUT_CLASSIFICATION	1.5864803249583964E-6	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999995514819797	WITHOUT_CLASSIFICATION	4.485180202399765E-7	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999989812493457	WITHOUT_CLASSIFICATION	1.0187506543194663E-6	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999985143117129	WITHOUT_CLASSIFICATION	1.4856882870157501E-6	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999997516196122	WITHOUT_CLASSIFICATION	2.483803878641635E-7	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999997758119236	WITHOUT_CLASSIFICATION	2.2418807635879567E-7	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999390651778	WITHOUT_CLASSIFICATION	6.093482213451952E-8	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.999999250457323	WITHOUT_CLASSIFICATION	7.495426770681809E-7	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999999557256493	WITHOUT_CLASSIFICATION	4.427435072368734E-8	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999998119919087	WITHOUT_CLASSIFICATION	1.8800809128874468E-7	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999998635181855	WITHOUT_CLASSIFICATION	1.3648181443101992E-7	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999997121645989	WITHOUT_CLASSIFICATION	2.8783540107324226E-7	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999998085626298	WITHOUT_CLASSIFICATION	1.9143737019338672E-7	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999999769166109	WITHOUT_CLASSIFICATION	2.30833890807206E-8	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999881916028769	WITHOUT_CLASSIFICATION	1.1808397123083358E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.999999896442191	WITHOUT_CLASSIFICATION	1.0355780894597644E-7	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999991869375454	WITHOUT_CLASSIFICATION	8.130624545927532E-7	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999985843391703	WITHOUT_CLASSIFICATION	1.4156608296599189E-6	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999999936356779	WITHOUT_CLASSIFICATION	6.364322019299157E-9	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999986198776252	WITHOUT_CLASSIFICATION	1.3801223748808372E-6	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999996769799276	WITHOUT_CLASSIFICATION	3.230200722616381E-7	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.9999950138359858	WITHOUT_CLASSIFICATION	4.986164014153209E-6	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999975132054554	WITHOUT_CLASSIFICATION	2.4867945446403338E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999998858626252	WITHOUT_CLASSIFICATION	1.1413737473364094E-7	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999220241111	WITHOUT_CLASSIFICATION	7.797588891449347E-8	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999996341690256	WITHOUT_CLASSIFICATION	3.658309743581016E-7	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999999336270968	WITHOUT_CLASSIFICATION	6.637290313113746E-8	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999998708313501	WITHOUT_CLASSIFICATION	1.2916864985411749E-7	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999997314922098	WITHOUT_CLASSIFICATION	2.685077902221089E-7	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999998190453299	WITHOUT_CLASSIFICATION	1.8095467008198656E-7	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999996818548713	WITHOUT_CLASSIFICATION	3.181451286693705E-7	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999995970272734	WITHOUT_CLASSIFICATION	4.0297272664705737E-7	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.999999053077115	WITHOUT_CLASSIFICATION	9.46922884919352E-7	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999995970272734	WITHOUT_CLASSIFICATION	4.0297272664705737E-7	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999167211853	WITHOUT_CLASSIFICATION	8.327881478899671E-8	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9999975102830277	WITHOUT_CLASSIFICATION	2.4897169723119574E-6	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999998643405403	WITHOUT_CLASSIFICATION	1.3565945966808449E-7	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.999621088590001	WITHOUT_CLASSIFICATION	3.7891140999898E-4	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999988185813213	WITHOUT_CLASSIFICATION	1.1814186787035068E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999996877095108	WITHOUT_CLASSIFICATION	3.12290489226545E-7	TEST
// write	WITHOUT_CLASSIFICATION	0.9999993779746817	WITHOUT_CLASSIFICATION	6.220253182122359E-7	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.999811439492296	WITHOUT_CLASSIFICATION	1.885605077040987E-4	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.999999835941222	WITHOUT_CLASSIFICATION	1.6405877804106978E-7	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999949749766713	WITHOUT_CLASSIFICATION	5.025023328616575E-6	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999984613256703	WITHOUT_CLASSIFICATION	1.53867432971494E-6	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999996847254118	WITHOUT_CLASSIFICATION	3.152745881664246E-7	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999995887716244	WITHOUT_CLASSIFICATION	4.112283756539338E-7	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.99999999274654	WITHOUT_CLASSIFICATION	7.2534600674068405E-9	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999771850699791	WITHOUT_CLASSIFICATION	2.2814930020961154E-5	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9998472037170042	WITHOUT_CLASSIFICATION	1.5279628299571952E-4	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999928272602	WITHOUT_CLASSIFICATION	7.172739906067141E-9	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.999999478025582	WITHOUT_CLASSIFICATION	5.219744180761982E-7	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999989664807695	WITHOUT_CLASSIFICATION	1.0335192305519864E-6	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999984985131536	WITHOUT_CLASSIFICATION	1.5014868464081452E-6	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.99999991661391	WITHOUT_CLASSIFICATION	8.33860900319534E-8	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999160044628	WITHOUT_CLASSIFICATION	8.399553717277253E-8	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999983811895213	WITHOUT_CLASSIFICATION	1.618810478604332E-6	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999998991466058	WITHOUT_CLASSIFICATION	1.0085339422621818E-7	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.999999964486054	WITHOUT_CLASSIFICATION	3.551394608209307E-8	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999997823334398	WITHOUT_CLASSIFICATION	2.1766656012400004E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999245347062	WITHOUT_CLASSIFICATION	7.546529385572962E-8	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999999731408665	WITHOUT_CLASSIFICATION	2.685913341359504E-8	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999877598068	WITHOUT_CLASSIFICATION	1.2240193086607135E-8	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.999999420347965	WITHOUT_CLASSIFICATION	5.796520350496305E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999764527060131	WITHOUT_CLASSIFICATION	2.3547293986874094E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999975253292297	WITHOUT_CLASSIFICATION	2.474670770300978E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999818356244095	WITHOUT_CLASSIFICATION	1.8164375590513925E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999999495006378	WITHOUT_CLASSIFICATION	5.0499362296644164E-8	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999248647519	WITHOUT_CLASSIFICATION	7.513524812378843E-8	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999999131557276	WITHOUT_CLASSIFICATION	8.684427244319996E-8	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.999998786566767	WITHOUT_CLASSIFICATION	1.2134332329767945E-6	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999677768537	WITHOUT_CLASSIFICATION	3.222314624075349E-8	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999967664645144	WITHOUT_CLASSIFICATION	3.2335354856355736E-6	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999955772498309	WITHOUT_CLASSIFICATION	4.422750169102316E-6	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999885489866	WITHOUT_CLASSIFICATION	1.1451013347374614E-8	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.999997928259838	WITHOUT_CLASSIFICATION	2.0717401619252136E-6	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999719830441	WITHOUT_CLASSIFICATION	2.8016955767706635E-8	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.99999952565897	WITHOUT_CLASSIFICATION	4.743410300836855E-7	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.99999952565897	WITHOUT_CLASSIFICATION	4.743410300836855E-7	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999998235972797	WITHOUT_CLASSIFICATION	1.764027202704043E-7	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999997958921327	WITHOUT_CLASSIFICATION	2.0410786736961348E-7	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999999432142954	WITHOUT_CLASSIFICATION	5.678570451628804E-8	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999988398292106	WITHOUT_CLASSIFICATION	1.1601707894462501E-6	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999932715574	WITHOUT_CLASSIFICATION	6.728442587389549E-9	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999830457699	WITHOUT_CLASSIFICATION	1.6954230184970914E-8	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.999999599100775	WITHOUT_CLASSIFICATION	4.0089922504448066E-7	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999998097026296	WITHOUT_CLASSIFICATION	1.902973704999425E-7	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999995841337838	WITHOUT_CLASSIFICATION	4.1586621622717436E-7	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999904774926	WITHOUT_CLASSIFICATION	9.522507326204124E-9	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999996471720617	WITHOUT_CLASSIFICATION	3.528279382641282E-7	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999903331966	WITHOUT_CLASSIFICATION	9.666803478249764E-9	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.999999566391464	WITHOUT_CLASSIFICATION	4.3360853595780485E-7	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.999999221395566	WITHOUT_CLASSIFICATION	7.786044339006803E-7	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999958966972	WITHOUT_CLASSIFICATION	4.103302767755647E-9	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999999455911451	WITHOUT_CLASSIFICATION	5.440885490115838E-8	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999999222044742	WITHOUT_CLASSIFICATION	7.779552572277707E-8	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999999836689203	WITHOUT_CLASSIFICATION	1.6331079639153547E-8	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.99999946689729	WITHOUT_CLASSIFICATION	5.331027100460536E-7	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999999269718055	WITHOUT_CLASSIFICATION	7.302819449583522E-8	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.999965234403906	WITHOUT_CLASSIFICATION	3.476559609417237E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.99998998709376	WITHOUT_CLASSIFICATION	1.001290624003218E-5	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999999924531819	WITHOUT_CLASSIFICATION	7.546817985229547E-9	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999999976016414	WITHOUT_CLASSIFICATION	2.3983585550393666E-9	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999941394499006	WITHOUT_CLASSIFICATION	5.860550099477273E-6	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999909035588	WITHOUT_CLASSIFICATION	9.096441216897602E-9	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999545655811	WITHOUT_CLASSIFICATION	4.5434418867009176E-8	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999990646697678	WITHOUT_CLASSIFICATION	9.35330232105126E-7	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999998993788078	WITHOUT_CLASSIFICATION	1.006211921214224E-7	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999994565310909	WITHOUT_CLASSIFICATION	5.434689090925092E-7	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999998870067645	WITHOUT_CLASSIFICATION	1.1299323554836548E-7	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999998875633404	WITHOUT_CLASSIFICATION	1.1243665967274832E-7	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999972146983	WITHOUT_CLASSIFICATION	2.7853016573191244E-9	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.999999982952518	WITHOUT_CLASSIFICATION	1.7047482006157395E-8	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999461946129	WITHOUT_CLASSIFICATION	5.3805387130774534E-8	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999901523495	WITHOUT_CLASSIFICATION	9.847650442473333E-9	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999986371548135	WITHOUT_CLASSIFICATION	1.3628451865107854E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999830451466251	WITHOUT_CLASSIFICATION	1.6954853374996814E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999995441725643	WITHOUT_CLASSIFICATION	4.558274357565181E-7	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999859272841767	WITHOUT_CLASSIFICATION	1.4072715823303773E-5	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999958406284448	WITHOUT_CLASSIFICATION	4.159371555084699E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999997798721296	WITHOUT_CLASSIFICATION	2.2012787026420708E-7	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999971156543472	WITHOUT_CLASSIFICATION	2.884345652835184E-6	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999682244031	WITHOUT_CLASSIFICATION	3.1775596874195973E-8	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999992573052928	WITHOUT_CLASSIFICATION	7.426947071279811E-7	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.99999987602576	WITHOUT_CLASSIFICATION	1.23974240029229E-7	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999998978605859	WITHOUT_CLASSIFICATION	1.0213941412276698E-7	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.999999989124652	WITHOUT_CLASSIFICATION	1.0875347934429697E-8	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9999779011784005	WITHOUT_CLASSIFICATION	2.209882159952032E-5	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999998197652054	WITHOUT_CLASSIFICATION	1.8023479474673468E-7	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999854322611	WITHOUT_CLASSIFICATION	1.45677389942039E-8	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999998226623165	WITHOUT_CLASSIFICATION	1.7733768346601276E-7	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999701663563	WITHOUT_CLASSIFICATION	2.983364362370971E-8	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999977674808	WITHOUT_CLASSIFICATION	2.2325192257564987E-9	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999999635023247	WITHOUT_CLASSIFICATION	3.649767530878828E-8	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999999808298893	WITHOUT_CLASSIFICATION	1.917011074944318E-8	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999999921050998	WITHOUT_CLASSIFICATION	7.89490018912004E-9	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998833192962	WITHOUT_CLASSIFICATION	1.166807037677676E-7	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.999999989925979	WITHOUT_CLASSIFICATION	1.0074021053218934E-8	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999919691416	WITHOUT_CLASSIFICATION	8.030858428300387E-9	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999999851119482	WITHOUT_CLASSIFICATION	1.4888051821194466E-8	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999997976541276	WITHOUT_CLASSIFICATION	2.0234587251842365E-7	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999998398812182	WITHOUT_CLASSIFICATION	1.6011878180616017E-7	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999767359596	WITHOUT_CLASSIFICATION	2.3264040380037493E-8	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999999128405007	WITHOUT_CLASSIFICATION	8.715949928574826E-8	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999785298133554	WITHOUT_CLASSIFICATION	2.1470186644514933E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999989073318315	WITHOUT_CLASSIFICATION	1.0926681685025886E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999987457388142	WITHOUT_CLASSIFICATION	1.2542611857956762E-6	TEST
// odd	WITHOUT_CLASSIFICATION	0.999997859048031	WITHOUT_CLASSIFICATION	2.1409519689985584E-6	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999997923359143	WITHOUT_CLASSIFICATION	2.0766408564029877E-7	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999994201167318	WITHOUT_CLASSIFICATION	5.798832682454451E-7	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999997655443738	WITHOUT_CLASSIFICATION	2.3445562633439787E-7	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999406429598	WITHOUT_CLASSIFICATION	5.935704001742471E-8	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.999982740119277	WITHOUT_CLASSIFICATION	1.7259880722966337E-5	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9999800227466822	WITHOUT_CLASSIFICATION	1.997725331786283E-5	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9999845597359741	WITHOUT_CLASSIFICATION	1.5440264025885344E-5	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9999809650627517	WITHOUT_CLASSIFICATION	1.9034937248309668E-5	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9999761623966988	WITHOUT_CLASSIFICATION	2.3837603301201147E-5	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9999839426101234	WITHOUT_CLASSIFICATION	1.6057389876615424E-5	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9999844231988073	WITHOUT_CLASSIFICATION	1.557680119265198E-5	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9999841216918137	WITHOUT_CLASSIFICATION	1.5878308186292004E-5	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9999844478181307	WITHOUT_CLASSIFICATION	1.5552181869251426E-5	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9999825737782475	WITHOUT_CLASSIFICATION	1.7426221752553225E-5	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9999813921939865	WITHOUT_CLASSIFICATION	1.8607806013473175E-5	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.99997956460796	WITHOUT_CLASSIFICATION	2.043539204005821E-5	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.999976615661433	WITHOUT_CLASSIFICATION	2.338433856693894E-5	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9999721692946918	WITHOUT_CLASSIFICATION	2.7830705308156442E-5	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.9999801452398637	WITHOUT_CLASSIFICATION	1.985476013627713E-5	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9999796322368143	WITHOUT_CLASSIFICATION	2.0367763185655372E-5	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9999802081140022	WITHOUT_CLASSIFICATION	1.979188599775561E-5	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.9999769776477728	WITHOUT_CLASSIFICATION	2.3022352227137093E-5	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.999968830599106	WITHOUT_CLASSIFICATION	3.1169400893998E-5	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9999765083158663	WITHOUT_CLASSIFICATION	2.3491684133815095E-5	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.999999926071762	WITHOUT_CLASSIFICATION	7.392823789056178E-8	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999952073927978	WITHOUT_CLASSIFICATION	4.792607202246514E-6	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999993774423982	WITHOUT_CLASSIFICATION	6.22557601722349E-7	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999997679833919	WITHOUT_CLASSIFICATION	2.3201660812911412E-7	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999996253321253	WITHOUT_CLASSIFICATION	3.7466787473230913E-7	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999999952551195	WITHOUT_CLASSIFICATION	4.744880447471917E-9	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999999944431825	WITHOUT_CLASSIFICATION	5.556817496178528E-9	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999998022524964	WITHOUT_CLASSIFICATION	1.977475036393161E-7	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999622852929	WITHOUT_CLASSIFICATION	3.7714707139178564E-8	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999995713642899	WITHOUT_CLASSIFICATION	4.286357101313473E-7	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9309291781359914	WITHOUT_CLASSIFICATION	0.06907082186400858	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999998176715001	WITHOUT_CLASSIFICATION	1.8232849989561135E-7	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999962249363445	WITHOUT_CLASSIFICATION	3.7750636553537913E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999997292708127	WITHOUT_CLASSIFICATION	2.7072918731603954E-7	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999997292708127	WITHOUT_CLASSIFICATION	2.7072918731603954E-7	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999999872261095	WITHOUT_CLASSIFICATION	1.2773890528080243E-8	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.999994133673084	WITHOUT_CLASSIFICATION	5.866326916002729E-6	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999909645568	WITHOUT_CLASSIFICATION	9.035443253431411E-9	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.99999973976191	WITHOUT_CLASSIFICATION	2.602380899454768E-7	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999999683858599	WITHOUT_CLASSIFICATION	3.161414010104804E-8	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999989991484571	WITHOUT_CLASSIFICATION	1.0008515428097125E-6	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999991873410675	WITHOUT_CLASSIFICATION	8.126589325909719E-7	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999999588328095	WITHOUT_CLASSIFICATION	4.1167190544768964E-8	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999999367366359	WITHOUT_CLASSIFICATION	6.326336415706192E-8	TEST
// base	WITHOUT_CLASSIFICATION	0.9999994626793504	WITHOUT_CLASSIFICATION	5.373206495730537E-7	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.999829945774029	WITHOUT_CLASSIFICATION	1.7005422597095874E-4	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999904669999	WITHOUT_CLASSIFICATION	9.53299998433745E-9	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9999963627867579	WITHOUT_CLASSIFICATION	3.6372132421534778E-6	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999991319846803	WITHOUT_CLASSIFICATION	8.680153197297701E-7	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999999378957881	WITHOUT_CLASSIFICATION	6.210421184890294E-8	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999939217424435	WITHOUT_CLASSIFICATION	6.078257556492471E-6	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999996036253112	WITHOUT_CLASSIFICATION	3.9637468889885697E-7	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999185169375	WITHOUT_CLASSIFICATION	8.148306251193544E-8	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999991140455827	WITHOUT_CLASSIFICATION	8.859544173212845E-7	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999971227364108	WITHOUT_CLASSIFICATION	2.8772635891785032E-6	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999998163859819	WITHOUT_CLASSIFICATION	1.8361401807345875E-7	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999999982599052	WITHOUT_CLASSIFICATION	1.7400948137946144E-9	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999991020807072	WITHOUT_CLASSIFICATION	8.979192927405246E-7	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999996709842243	WITHOUT_CLASSIFICATION	3.290157756784623E-7	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999699365045	WITHOUT_CLASSIFICATION	3.006349540064006E-8	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999993042469594	WITHOUT_CLASSIFICATION	6.957530405245305E-7	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999999647927711	WITHOUT_CLASSIFICATION	3.520722892182003E-8	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999998863634277	WITHOUT_CLASSIFICATION	1.1363657214487535E-7	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999993165616051	WITHOUT_CLASSIFICATION	6.834383948962458E-7	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999988904038416	WITHOUT_CLASSIFICATION	1.1095961583545904E-6	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999995461478577	WITHOUT_CLASSIFICATION	4.5385214224837054E-7	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999994948234958	WITHOUT_CLASSIFICATION	5.0517650415828E-7	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999982717032012	WITHOUT_CLASSIFICATION	1.7282967988254654E-6	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999988872187346	WITHOUT_CLASSIFICATION	1.1127812653218423E-6	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999997780943991	WITHOUT_CLASSIFICATION	2.2190560082416185E-7	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999998036179646	WITHOUT_CLASSIFICATION	1.9638203539429996E-7	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999991433655769	WITHOUT_CLASSIFICATION	8.566344231748019E-7	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999886621649	WITHOUT_CLASSIFICATION	1.1337835025570412E-8	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999999150815414	WITHOUT_CLASSIFICATION	8.491845858879179E-8	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999957482999	WITHOUT_CLASSIFICATION	4.251700079829232E-9	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.99999986674196	WITHOUT_CLASSIFICATION	1.3325804001604572E-7	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999999148832714	WITHOUT_CLASSIFICATION	8.511672854461975E-8	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999999512961499	WITHOUT_CLASSIFICATION	4.8703850050187604E-8	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999989646848862	WITHOUT_CLASSIFICATION	1.0353151137504241E-6	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999989646848862	WITHOUT_CLASSIFICATION	1.0353151137504241E-6	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999999693400904	WITHOUT_CLASSIFICATION	3.065990959588658E-8	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999998916135493	WITHOUT_CLASSIFICATION	1.0838645081497953E-7	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999999102979157	WITHOUT_CLASSIFICATION	8.970208437122859E-8	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999996244842989	WITHOUT_CLASSIFICATION	3.755157010996736E-7	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999938382016664	WITHOUT_CLASSIFICATION	6.161798333536336E-6	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.999999908345129	WITHOUT_CLASSIFICATION	9.16548710764347E-8	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999999363911186	WITHOUT_CLASSIFICATION	6.360888129690873E-8	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999614381765187	WITHOUT_CLASSIFICATION	3.8561823481280675E-5	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999997383349819	WITHOUT_CLASSIFICATION	2.6166501807367156E-7	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999994663065923	WITHOUT_CLASSIFICATION	5.336934077577805E-7	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999996333424239	WITHOUT_CLASSIFICATION	3.666575760750522E-7	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999998513148544	WITHOUT_CLASSIFICATION	1.4868514564464364E-7	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999934737632461	WITHOUT_CLASSIFICATION	6.526236753819111E-6	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999995045184789	WITHOUT_CLASSIFICATION	4.954815212178614E-7	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9994708281531522	WITHOUT_CLASSIFICATION	5.29171846847657E-4	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999968544663852	WITHOUT_CLASSIFICATION	3.1455336146926883E-6	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999915935419325	WITHOUT_CLASSIFICATION	8.40645806751812E-6	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.999999891312977	WITHOUT_CLASSIFICATION	1.0868702311292043E-7	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999974647882086	WITHOUT_CLASSIFICATION	2.5352117913848274E-6	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999978240259823	WITHOUT_CLASSIFICATION	2.1759740177044825E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999516242942	WITHOUT_CLASSIFICATION	4.837570584794401E-8	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999516242942	WITHOUT_CLASSIFICATION	4.837570584794401E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999117229516	WITHOUT_CLASSIFICATION	8.8277048329947E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999117229516	WITHOUT_CLASSIFICATION	8.8277048329947E-8	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999375135684	WITHOUT_CLASSIFICATION	6.248643153002464E-8	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.999999724512394	WITHOUT_CLASSIFICATION	2.7548760590986647E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999999546565544	WITHOUT_CLASSIFICATION	4.534344560266795E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999997953887675	WITHOUT_CLASSIFICATION	2.0461123257289605E-7	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999997647055957	WITHOUT_CLASSIFICATION	2.352944042519474E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999850568365	WITHOUT_CLASSIFICATION	1.494316346487416E-8	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999980455124562	WITHOUT_CLASSIFICATION	1.9544875438785353E-6	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999994192231556	WITHOUT_CLASSIFICATION	5.807768443784037E-7	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999996844201301	WITHOUT_CLASSIFICATION	3.155798698705419E-7	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.99999980930022	WITHOUT_CLASSIFICATION	1.90699779883164E-7	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999992705600165	WITHOUT_CLASSIFICATION	7.294399834683114E-7	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999999286992595	WITHOUT_CLASSIFICATION	7.130074051622389E-8	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999005218881	WITHOUT_CLASSIFICATION	9.947811196021126E-8	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999165131609543	WITHOUT_CLASSIFICATION	8.34868390455896E-5	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999999190558525	WITHOUT_CLASSIFICATION	8.094414744369043E-8	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999995466193706	WITHOUT_CLASSIFICATION	4.533806294436526E-7	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.999998498785882	WITHOUT_CLASSIFICATION	1.5012141179589937E-6	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999998089410295	WITHOUT_CLASSIFICATION	1.9105897046823395E-7	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9999937924420429	WITHOUT_CLASSIFICATION	6.2075579571222755E-6	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999991987967846	WITHOUT_CLASSIFICATION	8.012032154967338E-7	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999995509612698	WITHOUT_CLASSIFICATION	4.490387301508778E-7	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.999999956674292	WITHOUT_CLASSIFICATION	4.3325707966440336E-8	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999996538375219	WITHOUT_CLASSIFICATION	3.461624781367846E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999245347062	WITHOUT_CLASSIFICATION	7.546529385572962E-8	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999830457699	WITHOUT_CLASSIFICATION	1.6954230184970914E-8	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999997971151778	WITHOUT_CLASSIFICATION	2.028848221426921E-7	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999869671071	WITHOUT_CLASSIFICATION	1.3032892871997831E-8	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.999999914081373	WITHOUT_CLASSIFICATION	8.5918626942268E-8	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999993276150789	WITHOUT_CLASSIFICATION	6.723849210759163E-7	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999999960367019	WITHOUT_CLASSIFICATION	3.963298091413148E-8	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999999960367019	WITHOUT_CLASSIFICATION	3.963298091413148E-8	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999924178969	WITHOUT_CLASSIFICATION	7.582103037452752E-9	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999998412445856	WITHOUT_CLASSIFICATION	1.587554144492419E-7	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999302200201	WITHOUT_CLASSIFICATION	6.977997997912914E-8	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999998538440821	WITHOUT_CLASSIFICATION	1.4615591799725249E-7	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999999969362467	WITHOUT_CLASSIFICATION	3.063753251243837E-9	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999999581103153	WITHOUT_CLASSIFICATION	4.1889684687281744E-8	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999998864718813	WITHOUT_CLASSIFICATION	1.1352811868178951E-7	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999999972409827	WITHOUT_CLASSIFICATION	2.7590173146906084E-9	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999998093005132	WITHOUT_CLASSIFICATION	1.9069948671086E-7	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999993678457193	WITHOUT_CLASSIFICATION	6.321542806587022E-7	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.999999766855361	WITHOUT_CLASSIFICATION	2.3314463910751572E-7	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.999999990833709	WITHOUT_CLASSIFICATION	9.166290952210389E-9	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999995542129789	WITHOUT_CLASSIFICATION	4.4578702108731376E-7	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999993726256768	WITHOUT_CLASSIFICATION	6.273743231192046E-7	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999586422647	WITHOUT_CLASSIFICATION	4.135773530275319E-8	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995210498253	WITHOUT_CLASSIFICATION	4.789501748240343E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999999146311871	WITHOUT_CLASSIFICATION	8.536881290797431E-7	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999999459156248	WITHOUT_CLASSIFICATION	5.4084375072447575E-8	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999999859818786	WITHOUT_CLASSIFICATION	1.4018121554566183E-8	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.999809709271022	WITHOUT_CLASSIFICATION	1.902907289779699E-4	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.99999982496636	WITHOUT_CLASSIFICATION	1.7503364001240614E-7	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999992963708159	WITHOUT_CLASSIFICATION	7.03629184088008E-7	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999920680479252	WITHOUT_CLASSIFICATION	7.931952074854465E-6	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999994319482124	WITHOUT_CLASSIFICATION	5.680517876429362E-7	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999998348902825	WITHOUT_CLASSIFICATION	1.6510971747822377E-7	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999997026219655	WITHOUT_CLASSIFICATION	2.973780345689126E-7	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999998686487278	WITHOUT_CLASSIFICATION	1.3135127216072305E-7	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999993958637653	WITHOUT_CLASSIFICATION	6.041362347116771E-7	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999566315767	WITHOUT_CLASSIFICATION	4.336842319432548E-8	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999996470725746	WITHOUT_CLASSIFICATION	3.5292742530441316E-7	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999999127378842	WITHOUT_CLASSIFICATION	8.726211582402605E-8	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999995140797189	WITHOUT_CLASSIFICATION	4.859202812165696E-7	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999992643087857	WITHOUT_CLASSIFICATION	7.356912142200825E-7	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9999994980877495	WITHOUT_CLASSIFICATION	5.019122505504977E-7	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999983000482867	WITHOUT_CLASSIFICATION	1.6999517132760325E-6	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999999878658429	WITHOUT_CLASSIFICATION	1.2134157168763266E-8	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999901444298933	WITHOUT_CLASSIFICATION	9.855570106700089E-6	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999976994150838	WITHOUT_CLASSIFICATION	2.3005849162574823E-6	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999998962618576	WITHOUT_CLASSIFICATION	1.0373814246374768E-7	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999997072497939	WITHOUT_CLASSIFICATION	2.927502060348545E-7	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.999999986418159	WITHOUT_CLASSIFICATION	1.3581840931552741E-8	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999999733144971	WITHOUT_CLASSIFICATION	2.668550294145024E-8	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999997984124185	WITHOUT_CLASSIFICATION	2.0158758158192803E-7	TEST
// while	WITHOUT_CLASSIFICATION	0.9999987073926103	WITHOUT_CLASSIFICATION	1.2926073895799928E-6	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.999959415386901	WITHOUT_CLASSIFICATION	4.058461309894659E-5	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999999616681532	WITHOUT_CLASSIFICATION	3.833184681655425E-8	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999998892146583	WITHOUT_CLASSIFICATION	1.1078534179682602E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999882451561	WITHOUT_CLASSIFICATION	1.1754843797869312E-8	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999999513180784	WITHOUT_CLASSIFICATION	4.868192167096351E-8	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999998330682227	WITHOUT_CLASSIFICATION	1.669317773592787E-7	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999843599967015	WITHOUT_CLASSIFICATION	1.5640003298464494E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999854797668926	WITHOUT_CLASSIFICATION	1.4520233107360658E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999840850817732	WITHOUT_CLASSIFICATION	1.5914918226789787E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999889225674186	WITHOUT_CLASSIFICATION	1.107743258148123E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999967685702922	WITHOUT_CLASSIFICATION	3.231429707914745E-6	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999895043799699	WITHOUT_CLASSIFICATION	1.0495620029999445E-5	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999957096057417	WITHOUT_CLASSIFICATION	4.290394258418245E-6	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999238746681	WITHOUT_CLASSIFICATION	7.612533196476579E-8	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999767443686504	WITHOUT_CLASSIFICATION	2.325563134968206E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999998785416794	WITHOUT_CLASSIFICATION	1.2145832065403937E-7	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999642622143118	WITHOUT_CLASSIFICATION	3.5737785688192925E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999843599967015	WITHOUT_CLASSIFICATION	1.5640003298464494E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999840850817732	WITHOUT_CLASSIFICATION	1.5914918226789787E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999854797668926	WITHOUT_CLASSIFICATION	1.4520233107360658E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999837875619324	WITHOUT_CLASSIFICATION	1.6212438067526247E-5	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999897052316079	WITHOUT_CLASSIFICATION	1.029476839210773E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999972547522124	WITHOUT_CLASSIFICATION	2.7452477876267563E-6	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999998980101168	WITHOUT_CLASSIFICATION	1.0198988323215608E-7	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999999024135335	WITHOUT_CLASSIFICATION	9.758646639269052E-8	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999995642343323	WITHOUT_CLASSIFICATION	4.3576566763283366E-7	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.999999374755603	WITHOUT_CLASSIFICATION	6.252443971185414E-7	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999998348123912	WITHOUT_CLASSIFICATION	1.6518760879709995E-7	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999997242741803	WITHOUT_CLASSIFICATION	2.757258197347022E-7	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999999689505019	WITHOUT_CLASSIFICATION	3.10494979614398E-8	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999999845481579	WITHOUT_CLASSIFICATION	1.545184217585539E-8	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999999644795099	WITHOUT_CLASSIFICATION	3.552049002116873E-8	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999995671420628	WITHOUT_CLASSIFICATION	4.3285793705883476E-7	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999994999749034	WITHOUT_CLASSIFICATION	5.000250964445012E-7	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999999801026395	WITHOUT_CLASSIFICATION	1.9897360552703227E-8	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999997064570731	WITHOUT_CLASSIFICATION	2.9354292686539783E-7	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.999999810009521	WITHOUT_CLASSIFICATION	1.8999047903603655E-7	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999994898750091	WITHOUT_CLASSIFICATION	5.101249908721973E-7	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999994898750091	WITHOUT_CLASSIFICATION	5.101249908721973E-7	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.999999766467689	WITHOUT_CLASSIFICATION	2.3353231102998088E-7	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999998008593285	WITHOUT_CLASSIFICATION	1.9914067148767156E-7	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999995641959332	WITHOUT_CLASSIFICATION	4.358040668030663E-7	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999859600127601	WITHOUT_CLASSIFICATION	1.4039987239938553E-5	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999997859765305	WITHOUT_CLASSIFICATION	2.140234695069385E-7	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999999859485883	WITHOUT_CLASSIFICATION	1.4051411745622697E-8	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999999752921858	WITHOUT_CLASSIFICATION	2.470781417376621E-8	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999998076628546	WITHOUT_CLASSIFICATION	1.9233714548625798E-7	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999999498299847	WITHOUT_CLASSIFICATION	5.017001534272073E-8	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999938900853	WITHOUT_CLASSIFICATION	6.109914699813582E-9	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999998511467577	WITHOUT_CLASSIFICATION	1.4885324222639406E-7	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999979181227114	WITHOUT_CLASSIFICATION	2.081877288688676E-6	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999999388623805	WITHOUT_CLASSIFICATION	6.113761953623546E-8	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999998717625262	WITHOUT_CLASSIFICATION	1.282374737301448E-7	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999999143070953	WITHOUT_CLASSIFICATION	8.569290469824499E-8	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999998707632377	WITHOUT_CLASSIFICATION	1.2923676230940056E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999999536450137	WITHOUT_CLASSIFICATION	4.635498627181223E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999308072681	WITHOUT_CLASSIFICATION	6.919273185862518E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999308072681	WITHOUT_CLASSIFICATION	6.919273185862518E-8	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9999989598348313	WITHOUT_CLASSIFICATION	1.0401651686904704E-6	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999984011539758	WITHOUT_CLASSIFICATION	1.5988460241761449E-6	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999918778246824	WITHOUT_CLASSIFICATION	8.122175317625254E-6	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999984922507968	WITHOUT_CLASSIFICATION	1.5077492031801928E-6	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999999769968699	WITHOUT_CLASSIFICATION	2.300312997932922E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999308072681	WITHOUT_CLASSIFICATION	6.919273185862518E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999308072681	WITHOUT_CLASSIFICATION	6.919273185862518E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999969928691	WITHOUT_CLASSIFICATION	3.007130754816611E-9	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999969928691	WITHOUT_CLASSIFICATION	3.007130754816611E-9	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999979476662094	WITHOUT_CLASSIFICATION	2.052333790638001E-6	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999980846933579	WITHOUT_CLASSIFICATION	1.915306642040912E-6	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999999843501276	WITHOUT_CLASSIFICATION	1.564987231493409E-8	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999999005008432	WITHOUT_CLASSIFICATION	9.949915688567965E-8	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999894196346	WITHOUT_CLASSIFICATION	1.0580365413744342E-8	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999894196346	WITHOUT_CLASSIFICATION	1.0580365413744342E-8	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999998921875793	WITHOUT_CLASSIFICATION	1.0781242070290378E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999984298595241	WITHOUT_CLASSIFICATION	1.5701404759107245E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999965792848492	WITHOUT_CLASSIFICATION	3.4207151509452416E-6	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999998555615206	WITHOUT_CLASSIFICATION	1.4443847938645635E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.99999999689116	WITHOUT_CLASSIFICATION	3.1088400578838917E-9	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999997921701711	WITHOUT_CLASSIFICATION	2.0782982883600724E-7	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999991897136602	WITHOUT_CLASSIFICATION	8.102863397274179E-7	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999999342349111	WITHOUT_CLASSIFICATION	6.576508894446255E-8	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999995095455366	WITHOUT_CLASSIFICATION	4.904544633734082E-7	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999933532785	WITHOUT_CLASSIFICATION	6.646721570127597E-9	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999936186293725	WITHOUT_CLASSIFICATION	6.38137062750919E-6	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999999048701276	WITHOUT_CLASSIFICATION	9.512987245557273E-8	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999991850143928	WITHOUT_CLASSIFICATION	8.149856071894885E-7	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999711072262	WITHOUT_CLASSIFICATION	2.8892773904739363E-8	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999998707632377	WITHOUT_CLASSIFICATION	1.2923676230940056E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999308072681	WITHOUT_CLASSIFICATION	6.919273185862518E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999969928691	WITHOUT_CLASSIFICATION	3.007130754816611E-9	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999997921701711	WITHOUT_CLASSIFICATION	2.0782982883600724E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999997814099317	WITHOUT_CLASSIFICATION	2.185900682484543E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999997814099317	WITHOUT_CLASSIFICATION	2.185900682484543E-7	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999998008045767	WITHOUT_CLASSIFICATION	1.991954231261111E-7	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999150481897	WITHOUT_CLASSIFICATION	8.495181023562731E-8	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999933600284	WITHOUT_CLASSIFICATION	6.639971559389527E-9	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999965441219	WITHOUT_CLASSIFICATION	3.455878114452884E-9	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999992645286899	WITHOUT_CLASSIFICATION	7.354713100260636E-7	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.999999820354346	WITHOUT_CLASSIFICATION	1.7964565402213465E-7	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999997901938181	WITHOUT_CLASSIFICATION	2.0980618190369044E-7	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999978807301247	WITHOUT_CLASSIFICATION	2.1192698753087065E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999885850022	WITHOUT_CLASSIFICATION	1.1414997961999519E-8	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999999409542655	WITHOUT_CLASSIFICATION	5.904573443084918E-8	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999996478179694	WITHOUT_CLASSIFICATION	3.5218203071877567E-7	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999862325594	WITHOUT_CLASSIFICATION	1.3767440703260786E-8	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999999017311677	WITHOUT_CLASSIFICATION	9.826883222086979E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999999536450137	WITHOUT_CLASSIFICATION	4.635498627181223E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999969928691	WITHOUT_CLASSIFICATION	3.007130754816611E-9	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999984298595241	WITHOUT_CLASSIFICATION	1.5701404759107245E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999965792848492	WITHOUT_CLASSIFICATION	3.4207151509452416E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999965792848492	WITHOUT_CLASSIFICATION	3.4207151509452416E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.99999999689116	WITHOUT_CLASSIFICATION	3.1088400578838917E-9	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999997921701711	WITHOUT_CLASSIFICATION	2.0782982883600724E-7	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999997921701711	WITHOUT_CLASSIFICATION	2.0782982883600724E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999997814099317	WITHOUT_CLASSIFICATION	2.185900682484543E-7	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.99999953589175	WITHOUT_CLASSIFICATION	4.641082499931177E-7	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999985400755999	WITHOUT_CLASSIFICATION	1.4599244000514107E-6	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999512353916	WITHOUT_CLASSIFICATION	4.876460833384432E-8	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999942753434502	WITHOUT_CLASSIFICATION	5.724656549773729E-6	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999995468817406	WITHOUT_CLASSIFICATION	4.5311825924679587E-7	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999619147707802	WITHOUT_CLASSIFICATION	3.80852292197477E-5	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999999414228443	WITHOUT_CLASSIFICATION	5.857715576505611E-8	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999963002221	WITHOUT_CLASSIFICATION	3.6997778396588894E-9	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999999590051021	WITHOUT_CLASSIFICATION	4.099489795746452E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999984298595241	WITHOUT_CLASSIFICATION	1.5701404759107245E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999965792848492	WITHOUT_CLASSIFICATION	3.4207151509452416E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999965792848492	WITHOUT_CLASSIFICATION	3.4207151509452416E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.99999999689116	WITHOUT_CLASSIFICATION	3.1088400578838917E-9	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999978807301247	WITHOUT_CLASSIFICATION	2.1192698753087065E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999999409542655	WITHOUT_CLASSIFICATION	5.904573443084918E-8	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9984377528625855	WITHOUT_CLASSIFICATION	0.0015622471374144326	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999998149532008	WITHOUT_CLASSIFICATION	1.8504679932175527E-7	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999981444166485	WITHOUT_CLASSIFICATION	1.8555833514704924E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999981444166485	WITHOUT_CLASSIFICATION	1.8555833514704924E-6	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999998292604505	WITHOUT_CLASSIFICATION	1.7073954941381645E-7	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999997391348269	WITHOUT_CLASSIFICATION	2.608651731050204E-7	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.999999617362936	WITHOUT_CLASSIFICATION	3.8263706399776143E-7	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999503350211	WITHOUT_CLASSIFICATION	4.966497893036524E-8	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999998419128742	WITHOUT_CLASSIFICATION	1.5808712575663718E-7	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999998419128742	WITHOUT_CLASSIFICATION	1.5808712575663718E-7	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999999171678461	WITHOUT_CLASSIFICATION	8.283215397333724E-8	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999999171678461	WITHOUT_CLASSIFICATION	8.283215397333724E-8	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999782272604	WITHOUT_CLASSIFICATION	2.1772739616511755E-8	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999782272604	WITHOUT_CLASSIFICATION	2.1772739616511755E-8	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999994930576006	WITHOUT_CLASSIFICATION	5.069423994229339E-7	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999998361059128	WITHOUT_CLASSIFICATION	1.638940871905367E-7	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999979633679801	WITHOUT_CLASSIFICATION	2.0366320198939077E-6	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999999624763779	WITHOUT_CLASSIFICATION	3.752362209774422E-8	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999999915079476	WITHOUT_CLASSIFICATION	8.492052450417008E-9	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999986664967717	WITHOUT_CLASSIFICATION	1.3335032283073627E-6	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999996847873185	WITHOUT_CLASSIFICATION	3.152126815332272E-7	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999996990921642	WITHOUT_CLASSIFICATION	3.009078356782877E-7	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999928448299485	WITHOUT_CLASSIFICATION	7.155170051445315E-6	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999927332193733	WITHOUT_CLASSIFICATION	7.266780626722152E-6	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999999689066029	WITHOUT_CLASSIFICATION	3.1093397088754485E-8	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999999614538146	WITHOUT_CLASSIFICATION	3.8546185439225205E-8	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999992427700994	WITHOUT_CLASSIFICATION	7.57229900507049E-7	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999987397525868	WITHOUT_CLASSIFICATION	1.2602474132026096E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999987397525868	WITHOUT_CLASSIFICATION	1.2602474132026096E-6	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999992504658884	WITHOUT_CLASSIFICATION	7.495341114798636E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999850568365	WITHOUT_CLASSIFICATION	1.494316346487416E-8	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999998144102004	WITHOUT_CLASSIFICATION	1.8558979961924514E-7	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999900396406	WITHOUT_CLASSIFICATION	9.960359399962228E-9	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999999056560513	WITHOUT_CLASSIFICATION	9.434394871310708E-8	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999996718051948	WITHOUT_CLASSIFICATION	3.2819480514071837E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999998323524798	WITHOUT_CLASSIFICATION	1.6764752019430838E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999997236643025	WITHOUT_CLASSIFICATION	2.7633569746801647E-7	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999940945251	WITHOUT_CLASSIFICATION	5.905474858506124E-9	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999769643217	WITHOUT_CLASSIFICATION	2.3035678246010378E-8	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999811898893	WITHOUT_CLASSIFICATION	1.881011067588231E-8	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999995131127295	WITHOUT_CLASSIFICATION	4.868872703986078E-7	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999998738115112	WITHOUT_CLASSIFICATION	1.2618848873538007E-7	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999995897677991	WITHOUT_CLASSIFICATION	4.1023220098153334E-7	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999543771516808	WITHOUT_CLASSIFICATION	4.562284831917097E-5	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999993612614183	WITHOUT_CLASSIFICATION	6.387385816417693E-7	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.999999776664597	WITHOUT_CLASSIFICATION	2.2333540300954277E-7	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999999561105563	WITHOUT_CLASSIFICATION	4.388944385216021E-8	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999120844602	WITHOUT_CLASSIFICATION	8.791553987419863E-8	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999120844602	WITHOUT_CLASSIFICATION	8.791553987419863E-8	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999999784396598	WITHOUT_CLASSIFICATION	2.1560340227314597E-8	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999934373830701	WITHOUT_CLASSIFICATION	6.562616929938727E-6	TEST
//[]	WITHOUT_CLASSIFICATION	0.9998886282861397	WITHOUT_CLASSIFICATION	1.1137171386039087E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9998886282861397	WITHOUT_CLASSIFICATION	1.1137171386039087E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999982508459327	WITHOUT_CLASSIFICATION	1.7491540672301074E-6	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999958787952716	WITHOUT_CLASSIFICATION	4.121204728373685E-6	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.999983944950302	WITHOUT_CLASSIFICATION	1.6055049698064367E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999864652591547	WITHOUT_CLASSIFICATION	1.3534740845256992E-5	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.99999987822228	WITHOUT_CLASSIFICATION	1.217777199163957E-7	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999803133685	WITHOUT_CLASSIFICATION	1.968663146847904E-8	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999803133685	WITHOUT_CLASSIFICATION	1.968663146847904E-8	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999989156135	WITHOUT_CLASSIFICATION	1.0843864236776735E-9	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999998155438896	WITHOUT_CLASSIFICATION	1.8445611046088216E-7	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999999273272067	WITHOUT_CLASSIFICATION	7.267279334195025E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999944524769269	WITHOUT_CLASSIFICATION	5.5475230731885106E-6	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999934373830701	WITHOUT_CLASSIFICATION	6.562616929938727E-6	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999992737041821	WITHOUT_CLASSIFICATION	7.262958178922683E-6	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999986024188557	WITHOUT_CLASSIFICATION	1.3975811442928995E-6	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999986024188557	WITHOUT_CLASSIFICATION	1.3975811442928995E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999990823212296	WITHOUT_CLASSIFICATION	9.176787703908987E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999837217703	WITHOUT_CLASSIFICATION	1.6278229672647057E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999837217703	WITHOUT_CLASSIFICATION	1.6278229672647057E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999672157301	WITHOUT_CLASSIFICATION	3.278426996202103E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999672157301	WITHOUT_CLASSIFICATION	3.278426996202103E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999672157301	WITHOUT_CLASSIFICATION	3.278426996202103E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999837217703	WITHOUT_CLASSIFICATION	1.6278229672647057E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999837217703	WITHOUT_CLASSIFICATION	1.6278229672647057E-8	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999990823212296	WITHOUT_CLASSIFICATION	9.176787703908987E-7	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999999787039533	WITHOUT_CLASSIFICATION	2.129604675843522E-8	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999998850915532	WITHOUT_CLASSIFICATION	1.1490844672609362E-7	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999996522352764	WITHOUT_CLASSIFICATION	3.477647235696087E-7	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999995010776095	WITHOUT_CLASSIFICATION	4.989223905121962E-7	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999919212528	WITHOUT_CLASSIFICATION	8.07874719948694E-9	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999995082707064	WITHOUT_CLASSIFICATION	4.917292935710179E-7	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999996743555473	WITHOUT_CLASSIFICATION	3.256444527546627E-7	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999512413258	WITHOUT_CLASSIFICATION	4.8758674235225346E-8	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999811898893	WITHOUT_CLASSIFICATION	1.881011067588231E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999837217703	WITHOUT_CLASSIFICATION	1.6278229672647057E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999837217703	WITHOUT_CLASSIFICATION	1.6278229672647057E-8	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999606129261	WITHOUT_CLASSIFICATION	3.938707392386568E-8	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999999276288871	WITHOUT_CLASSIFICATION	7.237111282975121E-8	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999991574561592	WITHOUT_CLASSIFICATION	8.425438406843555E-7	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999163134756	WITHOUT_CLASSIFICATION	8.368652437287013E-8	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999998462520435	WITHOUT_CLASSIFICATION	1.5374795641472277E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999475748091	WITHOUT_CLASSIFICATION	5.2425190836923836E-8	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999841491475	WITHOUT_CLASSIFICATION	1.5850852452116382E-8	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999998793172724	WITHOUT_CLASSIFICATION	1.2068272765022618E-7	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999998708708665	WITHOUT_CLASSIFICATION	1.2912913350450388E-7	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999388314479	WITHOUT_CLASSIFICATION	6.11685521089446E-8	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999938840535618	WITHOUT_CLASSIFICATION	6.115946438225117E-6	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.999998077950069	WITHOUT_CLASSIFICATION	1.922049931076594E-6	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999998959307339	WITHOUT_CLASSIFICATION	1.0406926603776978E-7	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999998639889911	WITHOUT_CLASSIFICATION	1.3601100888951031E-7	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999965375415	WITHOUT_CLASSIFICATION	3.4624585747772117E-9	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999990554664325	WITHOUT_CLASSIFICATION	9.445335674198268E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999990554664325	WITHOUT_CLASSIFICATION	9.445335674198268E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999990554664325	WITHOUT_CLASSIFICATION	9.445335674198268E-7	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999999875199654	WITHOUT_CLASSIFICATION	1.2480034638187383E-8	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999959886174	WITHOUT_CLASSIFICATION	4.011382545041567E-9	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999999780904358	WITHOUT_CLASSIFICATION	2.1909564165737526E-8	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999999278346658	WITHOUT_CLASSIFICATION	7.216533419242612E-8	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999999584169187	WITHOUT_CLASSIFICATION	4.158308128780581E-8	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999996435262948	WITHOUT_CLASSIFICATION	3.564737052178631E-7	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999993246528	WITHOUT_CLASSIFICATION	6.753473515581728E-10	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.999999715258722	WITHOUT_CLASSIFICATION	2.8474127797988453E-7	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999999289686731	WITHOUT_CLASSIFICATION	7.103132694405556E-8	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.999999683841146	WITHOUT_CLASSIFICATION	3.161588540758579E-7	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999991430979164	WITHOUT_CLASSIFICATION	8.569020835794003E-7	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999994674624854	WITHOUT_CLASSIFICATION	5.325375147039313E-7	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999989156135	WITHOUT_CLASSIFICATION	1.0843864236776735E-9	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999837217703	WITHOUT_CLASSIFICATION	1.6278229672647057E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999837217703	WITHOUT_CLASSIFICATION	1.6278229672647057E-8	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999990823212296	WITHOUT_CLASSIFICATION	9.176787703908987E-7	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999995082707064	WITHOUT_CLASSIFICATION	4.917292935710179E-7	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999999276288871	WITHOUT_CLASSIFICATION	7.237111282975121E-8	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999163134756	WITHOUT_CLASSIFICATION	8.368652437287013E-8	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999475748091	WITHOUT_CLASSIFICATION	5.2425190836923836E-8	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999991574561592	WITHOUT_CLASSIFICATION	8.425438406843555E-7	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999841491475	WITHOUT_CLASSIFICATION	1.5850852452116382E-8	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999388314479	WITHOUT_CLASSIFICATION	6.11685521089446E-8	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999998708708665	WITHOUT_CLASSIFICATION	1.2912913350450388E-7	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.999998077950069	WITHOUT_CLASSIFICATION	1.922049931076594E-6	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999999661297946	WITHOUT_CLASSIFICATION	3.3870205491896346E-8	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999999342220093	WITHOUT_CLASSIFICATION	6.57779906425132E-8	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999997367088186	WITHOUT_CLASSIFICATION	2.6329118147094933E-7	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999785421	WITHOUT_CLASSIFICATION	2.1457900027736197E-8	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999999599519932	WITHOUT_CLASSIFICATION	4.004800673879257E-8	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999997109971359	WITHOUT_CLASSIFICATION	2.890028640726266E-7	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999996980377065	WITHOUT_CLASSIFICATION	3.019622934150187E-7	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.999999457399048	WITHOUT_CLASSIFICATION	5.426009519074205E-7	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.999999909554755	WITHOUT_CLASSIFICATION	9.044524503558453E-8	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999998771719704	WITHOUT_CLASSIFICATION	1.2282802963195436E-7	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999999579883518	WITHOUT_CLASSIFICATION	4.2011648214274804E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999787630424	WITHOUT_CLASSIFICATION	2.1236957679161082E-8	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999991273297852	WITHOUT_CLASSIFICATION	8.726702146043414E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999998412488915	WITHOUT_CLASSIFICATION	1.587511086028631E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999960551135	WITHOUT_CLASSIFICATION	3.9448865635797134E-9	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999575242957	WITHOUT_CLASSIFICATION	4.247570424414028E-8	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999999179426254	WITHOUT_CLASSIFICATION	8.205737459756234E-7	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999999517334108	WITHOUT_CLASSIFICATION	4.8266589078826404E-8	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999952124016	WITHOUT_CLASSIFICATION	4.787598400239412E-9	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999999859201025	WITHOUT_CLASSIFICATION	1.4079897510722821E-8	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999999745797606	WITHOUT_CLASSIFICATION	2.542023939186389E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999669331805	WITHOUT_CLASSIFICATION	3.3066819584134586E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999669331805	WITHOUT_CLASSIFICATION	3.3066819584134586E-8	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.999999507102354	WITHOUT_CLASSIFICATION	4.928976461279828E-7	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999860647544	WITHOUT_CLASSIFICATION	1.3935245600580382E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999741383252065	WITHOUT_CLASSIFICATION	2.586167479345081E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999741383252065	WITHOUT_CLASSIFICATION	2.586167479345081E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999741383252065	WITHOUT_CLASSIFICATION	2.586167479345081E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999634845016594	WITHOUT_CLASSIFICATION	3.651549834055536E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999634845016594	WITHOUT_CLASSIFICATION	3.651549834055536E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999634845016594	WITHOUT_CLASSIFICATION	3.651549834055536E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999634845016594	WITHOUT_CLASSIFICATION	3.651549834055536E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999014253215625	WITHOUT_CLASSIFICATION	9.85746784375028E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999014253215625	WITHOUT_CLASSIFICATION	9.85746784375028E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999014253215625	WITHOUT_CLASSIFICATION	9.85746784375028E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999138601203696	WITHOUT_CLASSIFICATION	8.613987963037225E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999138601203696	WITHOUT_CLASSIFICATION	8.613987963037225E-5	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9998930876883501	WITHOUT_CLASSIFICATION	1.0691231164996087E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999289186699979	WITHOUT_CLASSIFICATION	7.108133000213812E-5	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999860647544	WITHOUT_CLASSIFICATION	1.3935245600580382E-8	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999253340237	WITHOUT_CLASSIFICATION	7.466597622870373E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999741383252065	WITHOUT_CLASSIFICATION	2.586167479345081E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999741383252065	WITHOUT_CLASSIFICATION	2.586167479345081E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999634845016594	WITHOUT_CLASSIFICATION	3.651549834055536E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999634845016594	WITHOUT_CLASSIFICATION	3.651549834055536E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999634845016594	WITHOUT_CLASSIFICATION	3.651549834055536E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999014253215625	WITHOUT_CLASSIFICATION	9.85746784375028E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999014253215625	WITHOUT_CLASSIFICATION	9.85746784375028E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999138601203696	WITHOUT_CLASSIFICATION	8.613987963037225E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999289186699979	WITHOUT_CLASSIFICATION	7.108133000213812E-5	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999653513912	WITHOUT_CLASSIFICATION	3.4648608767745484E-8	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999653513912	WITHOUT_CLASSIFICATION	3.4648608767745484E-8	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.999999955600351	WITHOUT_CLASSIFICATION	4.4399649048729446E-8	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.999999955600351	WITHOUT_CLASSIFICATION	4.4399649048729446E-8	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999991076921781	WITHOUT_CLASSIFICATION	8.92307821896086E-7	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999991076921781	WITHOUT_CLASSIFICATION	8.92307821896086E-7	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999997357071428	WITHOUT_CLASSIFICATION	2.642928572007659E-7	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998610692332	WITHOUT_CLASSIFICATION	1.3893076689023842E-7	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998610692332	WITHOUT_CLASSIFICATION	1.3893076689023842E-7	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999999631838926	WITHOUT_CLASSIFICATION	3.6816107408186436E-8	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999999631838926	WITHOUT_CLASSIFICATION	3.6816107408186436E-8	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999998708112634	WITHOUT_CLASSIFICATION	1.2918873666125308E-7	TEST
// call site	WITHOUT_CLASSIFICATION	0.999999917809589	WITHOUT_CLASSIFICATION	8.219041102506367E-8	TEST
// call site	WITHOUT_CLASSIFICATION	0.999999917809589	WITHOUT_CLASSIFICATION	8.219041102506367E-8	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999593528641	WITHOUT_CLASSIFICATION	4.064713592103476E-8	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999996919961252	WITHOUT_CLASSIFICATION	3.0800387481676007E-7	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999182835747	WITHOUT_CLASSIFICATION	8.17164252713301E-8	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999634845016594	WITHOUT_CLASSIFICATION	3.651549834055536E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999634845016594	WITHOUT_CLASSIFICATION	3.651549834055536E-5	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999593528641	WITHOUT_CLASSIFICATION	4.064713592103476E-8	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999997009255163	WITHOUT_CLASSIFICATION	2.99074483765572E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999996919553131	WITHOUT_CLASSIFICATION	3.0804468684271885E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999996919553131	WITHOUT_CLASSIFICATION	3.0804468684271885E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999996919553131	WITHOUT_CLASSIFICATION	3.0804468684271885E-7	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999999486791029	WITHOUT_CLASSIFICATION	5.132089703231072E-8	TEST
// args	WITHOUT_CLASSIFICATION	0.9999992666179748	WITHOUT_CLASSIFICATION	7.3338202529034E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.999999416338377	WITHOUT_CLASSIFICATION	5.836616230648677E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.999999416338377	WITHOUT_CLASSIFICATION	5.836616230648677E-7	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999999520324017	WITHOUT_CLASSIFICATION	4.7967598384331446E-8	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999997793941794	WITHOUT_CLASSIFICATION	2.2060582050929165E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999997774074753	WITHOUT_CLASSIFICATION	2.2259252469520929E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999994704234756	WITHOUT_CLASSIFICATION	5.295765243721117E-7	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999170771922	WITHOUT_CLASSIFICATION	8.292280777335307E-8	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999370535109	WITHOUT_CLASSIFICATION	6.294648913879361E-8	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999370535109	WITHOUT_CLASSIFICATION	6.294648913879361E-8	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999999938844745	WITHOUT_CLASSIFICATION	6.115525535055326E-9	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999042990970548	WITHOUT_CLASSIFICATION	9.570090294523408E-5	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999042990970548	WITHOUT_CLASSIFICATION	9.570090294523408E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999634845016594	WITHOUT_CLASSIFICATION	3.651549834055536E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999996919553131	WITHOUT_CLASSIFICATION	3.0804468684271885E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.9999992666179748	WITHOUT_CLASSIFICATION	7.3338202529034E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.999999416338377	WITHOUT_CLASSIFICATION	5.836616230648677E-7	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999999520324017	WITHOUT_CLASSIFICATION	4.7967598384331446E-8	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999997793941794	WITHOUT_CLASSIFICATION	2.2060582050929165E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999997774074753	WITHOUT_CLASSIFICATION	2.2259252469520929E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999994704234756	WITHOUT_CLASSIFICATION	5.295765243721117E-7	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999042990970548	WITHOUT_CLASSIFICATION	9.570090294523408E-5	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999998135554243	WITHOUT_CLASSIFICATION	1.8644457551690648E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.999999891930206	WITHOUT_CLASSIFICATION	1.0806979394443007E-7	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999998500524482	WITHOUT_CLASSIFICATION	1.4994755172210432E-7	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999999491187541	WITHOUT_CLASSIFICATION	5.0881245905038E-8	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999997796750166	WITHOUT_CLASSIFICATION	2.203249834543921E-7	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.999999355019414	WITHOUT_CLASSIFICATION	6.449805860528715E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998480250244	WITHOUT_CLASSIFICATION	1.5197497559911717E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998480250244	WITHOUT_CLASSIFICATION	1.5197497559911717E-7	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999998109086756	WITHOUT_CLASSIFICATION	1.8909132443190834E-7	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999999058735617	WITHOUT_CLASSIFICATION	9.41264383039658E-8	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999999273157323	WITHOUT_CLASSIFICATION	7.268426769364022E-8	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999131658012	WITHOUT_CLASSIFICATION	8.683419875407119E-8	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999227746248	WITHOUT_CLASSIFICATION	7.72253752249712E-8	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999227746248	WITHOUT_CLASSIFICATION	7.72253752249712E-8	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999999517227242	WITHOUT_CLASSIFICATION	4.8277275742942625E-8	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999999220200894	WITHOUT_CLASSIFICATION	7.797991065028147E-8	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999999276475716	WITHOUT_CLASSIFICATION	7.23524283912665E-8	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999999276475716	WITHOUT_CLASSIFICATION	7.23524283912665E-8	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999994968175935	WITHOUT_CLASSIFICATION	5.031824064368229E-7	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999999717702954	WITHOUT_CLASSIFICATION	2.8229704514268093E-8	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999170771922	WITHOUT_CLASSIFICATION	8.292280777335307E-8	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999998909225488	WITHOUT_CLASSIFICATION	1.0907745115011535E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999651599916	WITHOUT_CLASSIFICATION	3.48400083695266E-8	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996629033356	WITHOUT_CLASSIFICATION	3.3709666439149354E-7	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.999999860770993	WITHOUT_CLASSIFICATION	1.3922900711245973E-7	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999997252351672	WITHOUT_CLASSIFICATION	2.747648327635176E-7	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999997798287047	WITHOUT_CLASSIFICATION	2.2017129521829998E-7	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.999999983896244	WITHOUT_CLASSIFICATION	1.6103756044978255E-8	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999999788970586	WITHOUT_CLASSIFICATION	2.1102941336444393E-8	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999974257208	WITHOUT_CLASSIFICATION	2.574279269396309E-9	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999974257208	WITHOUT_CLASSIFICATION	2.574279269396309E-9	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999999336091827	WITHOUT_CLASSIFICATION	6.639081730014722E-8	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999999336091827	WITHOUT_CLASSIFICATION	6.639081730014722E-8	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999934699008	WITHOUT_CLASSIFICATION	6.530099275163908E-9	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998437551593	WITHOUT_CLASSIFICATION	1.562448407249856E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998437551593	WITHOUT_CLASSIFICATION	1.562448407249856E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998437551593	WITHOUT_CLASSIFICATION	1.562448407249856E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992750443989	WITHOUT_CLASSIFICATION	7.24955601166587E-7	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999999937070279	WITHOUT_CLASSIFICATION	6.29297209362092E-8	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999999937070279	WITHOUT_CLASSIFICATION	6.29297209362092E-8	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999996671982763	WITHOUT_CLASSIFICATION	3.328017238237633E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.99999997875895	WITHOUT_CLASSIFICATION	2.1241050001599828E-8	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999997700864466	WITHOUT_CLASSIFICATION	2.2991355340180193E-7	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999999079327302	WITHOUT_CLASSIFICATION	9.206726987819405E-8	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999998706414897	WITHOUT_CLASSIFICATION	1.293585103190427E-7	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999996939226395	WITHOUT_CLASSIFICATION	3.060773603741248E-7	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999587159148797	WITHOUT_CLASSIFICATION	4.1284085120319626E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999991273297852	WITHOUT_CLASSIFICATION	8.726702146043414E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999991273297852	WITHOUT_CLASSIFICATION	8.726702146043414E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992750443989	WITHOUT_CLASSIFICATION	7.24955601166587E-7	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999996671982763	WITHOUT_CLASSIFICATION	3.328017238237633E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998898800749	WITHOUT_CLASSIFICATION	1.1011992500468048E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.99999997875895	WITHOUT_CLASSIFICATION	2.1241050001599828E-8	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999997700864466	WITHOUT_CLASSIFICATION	2.2991355340180193E-7	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999883662125	WITHOUT_CLASSIFICATION	1.1633787461350719E-8	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999998159429859	WITHOUT_CLASSIFICATION	1.8405701413954539E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999999344700924	WITHOUT_CLASSIFICATION	6.552990759540611E-7	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9999446184884124	WITHOUT_CLASSIFICATION	5.5381511587565466E-5	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999983888297885	WITHOUT_CLASSIFICATION	1.6111702115109171E-6	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999851956802	WITHOUT_CLASSIFICATION	1.4804319801873654E-8	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999999931513651	WITHOUT_CLASSIFICATION	6.848634905287109E-9	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999883662125	WITHOUT_CLASSIFICATION	1.1633787461350719E-8	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999873985542465	WITHOUT_CLASSIFICATION	1.2601445753595458E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999873985542465	WITHOUT_CLASSIFICATION	1.2601445753595458E-5	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999970343566147	WITHOUT_CLASSIFICATION	2.9656433853199982E-6	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999999863268282	WITHOUT_CLASSIFICATION	1.3673171806968138E-8	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999994382240274	WITHOUT_CLASSIFICATION	5.617759726864324E-7	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999986580029233	WITHOUT_CLASSIFICATION	1.34199707662998E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999989485837808	WITHOUT_CLASSIFICATION	1.051416219190468E-6	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999999164776752	WITHOUT_CLASSIFICATION	8.352232490624309E-8	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999998711980879	WITHOUT_CLASSIFICATION	1.2880191223839577E-7	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999999405104546	WITHOUT_CLASSIFICATION	5.9489545479642726E-8	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.999999963667737	WITHOUT_CLASSIFICATION	3.6332262925457546E-8	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999997506188333	WITHOUT_CLASSIFICATION	2.493811667265051E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999986535507074	WITHOUT_CLASSIFICATION	1.346449292601349E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999986580029233	WITHOUT_CLASSIFICATION	1.34199707662998E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999989485837808	WITHOUT_CLASSIFICATION	1.051416219190468E-6	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999999878416176	WITHOUT_CLASSIFICATION	1.2158382378696602E-8	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999996359888796	WITHOUT_CLASSIFICATION	3.640111203374767E-7	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999997123782045	WITHOUT_CLASSIFICATION	2.876217954463083E-7	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.999997606118604	WITHOUT_CLASSIFICATION	2.393881395972035E-6	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999981734283279	WITHOUT_CLASSIFICATION	1.8265716720738636E-6	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999949173408724	WITHOUT_CLASSIFICATION	5.082659127664967E-6	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9998965833875283	WITHOUT_CLASSIFICATION	1.034166124716635E-4	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999992949495615	WITHOUT_CLASSIFICATION	7.050504384593978E-7	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999980547966655	WITHOUT_CLASSIFICATION	1.945203334452424E-6	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999938865287955	WITHOUT_CLASSIFICATION	6.113471204482883E-6	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999978404558804	WITHOUT_CLASSIFICATION	2.1595441196329525E-6	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9999877903951916	WITHOUT_CLASSIFICATION	1.2209604808393515E-5	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999999572042805	WITHOUT_CLASSIFICATION	4.2795719454977926E-8	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999999184171201	WITHOUT_CLASSIFICATION	8.158287997263526E-8	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999984788276766	WITHOUT_CLASSIFICATION	1.5211723234545704E-6	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999907421341	WITHOUT_CLASSIFICATION	9.257865986502806E-9	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999926464079326	WITHOUT_CLASSIFICATION	7.353592067352615E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999997754361591	WITHOUT_CLASSIFICATION	2.2456384084771634E-7	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.999999987973692	WITHOUT_CLASSIFICATION	1.202630786382213E-8	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999998287307207	WITHOUT_CLASSIFICATION	1.712692793579764E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999926464079326	WITHOUT_CLASSIFICATION	7.353592067352615E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999997754361591	WITHOUT_CLASSIFICATION	2.2456384084771634E-7	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.999999987973692	WITHOUT_CLASSIFICATION	1.202630786382213E-8	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999996720635784	WITHOUT_CLASSIFICATION	3.279364215512749E-7	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999956097607	WITHOUT_CLASSIFICATION	4.390239287398366E-9	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999999894930082	WITHOUT_CLASSIFICATION	1.0506991847085217E-8	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.999999132109382	WITHOUT_CLASSIFICATION	8.678906179857156E-7	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999987235984168	WITHOUT_CLASSIFICATION	1.2764015832289904E-6	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999998524230074	WITHOUT_CLASSIFICATION	1.4757699262208227E-7	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999999891898887	WITHOUT_CLASSIFICATION	1.0810111270915191E-8	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999999949678186	WITHOUT_CLASSIFICATION	5.032181550986807E-9	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999999255220615	WITHOUT_CLASSIFICATION	7.447793849489486E-8	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999998211908343	WITHOUT_CLASSIFICATION	1.7880916559197183E-7	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9951515569050312	WITHOUT_CLASSIFICATION	0.0048484430949687395	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999998906807106	WITHOUT_CLASSIFICATION	1.093192894419804E-7	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.999999824257838	WITHOUT_CLASSIFICATION	1.7574216211633332E-7	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999998951628065	WITHOUT_CLASSIFICATION	1.0483719345165018E-7	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9993695694554886	WITHOUT_CLASSIFICATION	6.30430544511379E-4	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999997653491226	WITHOUT_CLASSIFICATION	2.3465087746162883E-7	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999999845698893	WITHOUT_CLASSIFICATION	1.543011080262669E-8	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999997169969275	WITHOUT_CLASSIFICATION	2.83003072582896E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999998856190944	WITHOUT_CLASSIFICATION	1.1438090558097185E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999996674102246	WITHOUT_CLASSIFICATION	3.3258977548373953E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998778015109	WITHOUT_CLASSIFICATION	1.2219848910155112E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999998076496768	WITHOUT_CLASSIFICATION	1.9235032317758827E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999998076496768	WITHOUT_CLASSIFICATION	1.9235032317758827E-7	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999995914194919	WITHOUT_CLASSIFICATION	4.085805080852676E-7	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999995914194919	WITHOUT_CLASSIFICATION	4.085805080852676E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999992547470293	WITHOUT_CLASSIFICATION	7.452529706245558E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999992547470293	WITHOUT_CLASSIFICATION	7.452529706245558E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999998087397676	WITHOUT_CLASSIFICATION	1.912602323153907E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999856931898	WITHOUT_CLASSIFICATION	1.430681018287114E-8	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999895497277	WITHOUT_CLASSIFICATION	1.0450272256607098E-8	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999986508278461	WITHOUT_CLASSIFICATION	1.3491721538736813E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999993551992099	WITHOUT_CLASSIFICATION	6.448007899659602E-7	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999553353155	WITHOUT_CLASSIFICATION	4.4664684492349284E-8	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999998619113177	WITHOUT_CLASSIFICATION	1.380886822414598E-7	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999998840205971	WITHOUT_CLASSIFICATION	1.1597940281739207E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999991273297852	WITHOUT_CLASSIFICATION	8.726702146043414E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999998087397676	WITHOUT_CLASSIFICATION	1.912602323153907E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999856931898	WITHOUT_CLASSIFICATION	1.430681018287114E-8	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999895497277	WITHOUT_CLASSIFICATION	1.0450272256607098E-8	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999993551992099	WITHOUT_CLASSIFICATION	6.448007899659602E-7	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999553353155	WITHOUT_CLASSIFICATION	4.4664684492349284E-8	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999995446055813	WITHOUT_CLASSIFICATION	4.553944186578828E-7	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999999242150944	WITHOUT_CLASSIFICATION	7.578490560459919E-8	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999990379247358	WITHOUT_CLASSIFICATION	9.62075264264845E-7	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999990379247358	WITHOUT_CLASSIFICATION	9.62075264264845E-7	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999991931272615	WITHOUT_CLASSIFICATION	8.068727385569856E-7	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999999920864441	WITHOUT_CLASSIFICATION	7.913555902297267E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999439250704	WITHOUT_CLASSIFICATION	5.6074929552986596E-8	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999997068327219	WITHOUT_CLASSIFICATION	2.931672780558836E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999997068327219	WITHOUT_CLASSIFICATION	2.931672780558836E-7	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999997563529995	WITHOUT_CLASSIFICATION	2.4364700041517083E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999994718012899	WITHOUT_CLASSIFICATION	5.281987101248297E-7	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999572259348	WITHOUT_CLASSIFICATION	4.277406506235442E-8	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999999603587034	WITHOUT_CLASSIFICATION	3.9641296532888934E-8	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999940380289	WITHOUT_CLASSIFICATION	5.9619711083614086E-9	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999998412488915	WITHOUT_CLASSIFICATION	1.587511086028631E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999960551135	WITHOUT_CLASSIFICATION	3.9448865635797134E-9	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999575242957	WITHOUT_CLASSIFICATION	4.247570424414028E-8	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999999179426254	WITHOUT_CLASSIFICATION	8.205737459756234E-7	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999999859201025	WITHOUT_CLASSIFICATION	1.4079897510722821E-8	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999999745797606	WITHOUT_CLASSIFICATION	2.542023939186389E-8	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999997563529995	WITHOUT_CLASSIFICATION	2.4364700041517083E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999994718012899	WITHOUT_CLASSIFICATION	5.281987101248297E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999999603587034	WITHOUT_CLASSIFICATION	3.9641296532888934E-8	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999795851583	WITHOUT_CLASSIFICATION	2.041484162427249E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999439250704	WITHOUT_CLASSIFICATION	5.6074929552986596E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999439250704	WITHOUT_CLASSIFICATION	5.6074929552986596E-8	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999986535507074	WITHOUT_CLASSIFICATION	1.346449292601349E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999986535507074	WITHOUT_CLASSIFICATION	1.346449292601349E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999273633983	WITHOUT_CLASSIFICATION	7.263660165710541E-8	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999273633983	WITHOUT_CLASSIFICATION	7.263660165710541E-8	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999676881437	WITHOUT_CLASSIFICATION	3.231185634063459E-8	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.99999992230426	WITHOUT_CLASSIFICATION	7.769573987965871E-8	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999998013453976	WITHOUT_CLASSIFICATION	1.9865460248999547E-7	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999961886020832	WITHOUT_CLASSIFICATION	3.811397916903059E-6	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999998933841319	WITHOUT_CLASSIFICATION	1.0661586809356558E-7	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999998613709811	WITHOUT_CLASSIFICATION	1.386290189652936E-7	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999998339308486	WITHOUT_CLASSIFICATION	1.6606915134397388E-7	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999885603899	WITHOUT_CLASSIFICATION	1.1439610066487696E-8	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999999569615957	WITHOUT_CLASSIFICATION	4.303840421186265E-8	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999999717911521	WITHOUT_CLASSIFICATION	2.8208848017952244E-8	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999998656168771	WITHOUT_CLASSIFICATION	1.3438312281936227E-7	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999999770261234	WITHOUT_CLASSIFICATION	2.2973876663675806E-8	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999998342007326	WITHOUT_CLASSIFICATION	1.657992674134645E-7	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999631264839	WITHOUT_CLASSIFICATION	3.687351602195115E-8	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999994478085953	WITHOUT_CLASSIFICATION	5.521914047826651E-7	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999997586881385	WITHOUT_CLASSIFICATION	2.4131186140391603E-7	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999997868225144	WITHOUT_CLASSIFICATION	2.1317748566013154E-7	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999999684163794	WITHOUT_CLASSIFICATION	3.158362054725988E-8	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999999917687772	WITHOUT_CLASSIFICATION	8.231222825323045E-9	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999960551135	WITHOUT_CLASSIFICATION	3.9448865635797134E-9	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999999179426254	WITHOUT_CLASSIFICATION	8.205737459756234E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999669331805	WITHOUT_CLASSIFICATION	3.3066819584134586E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.999999416338377	WITHOUT_CLASSIFICATION	5.836616230648677E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.999999416338377	WITHOUT_CLASSIFICATION	5.836616230648677E-7	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999795851583	WITHOUT_CLASSIFICATION	2.041484162427249E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999439250704	WITHOUT_CLASSIFICATION	5.6074929552986596E-8	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999986535507074	WITHOUT_CLASSIFICATION	1.346449292601349E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999273633983	WITHOUT_CLASSIFICATION	7.263660165710541E-8	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999999186708696	WITHOUT_CLASSIFICATION	8.132913045455338E-8	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999994052704111	WITHOUT_CLASSIFICATION	5.947295889276365E-7	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999999219415037	WITHOUT_CLASSIFICATION	7.805849641774795E-8	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999998802001622	WITHOUT_CLASSIFICATION	1.1979983783432027E-7	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999999968100149	WITHOUT_CLASSIFICATION	3.189985105944925E-8	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999999968100149	WITHOUT_CLASSIFICATION	3.189985105944925E-8	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999075844672	WITHOUT_CLASSIFICATION	9.241553274295426E-8	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999999348737483	WITHOUT_CLASSIFICATION	6.512625182075819E-8	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999427946318	WITHOUT_CLASSIFICATION	5.720536828946379E-8	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999999195488312	WITHOUT_CLASSIFICATION	8.045116886406887E-8	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999999733500666	WITHOUT_CLASSIFICATION	2.664993334869038E-8	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999999733500666	WITHOUT_CLASSIFICATION	2.664993334869038E-8	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999999268199157	WITHOUT_CLASSIFICATION	7.31800842953931E-8	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999999435729549	WITHOUT_CLASSIFICATION	5.642704507306176E-8	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.999999770327029	WITHOUT_CLASSIFICATION	2.29672971025008E-7	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.999998669763656	WITHOUT_CLASSIFICATION	1.3302363440410848E-6	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999986795655033	WITHOUT_CLASSIFICATION	1.3204344967110953E-6	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999871904423	WITHOUT_CLASSIFICATION	1.2809557776786708E-8	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.999998847625914	WITHOUT_CLASSIFICATION	1.1523740860274513E-6	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999739910912	WITHOUT_CLASSIFICATION	2.6008908862110695E-8	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999974120441973	WITHOUT_CLASSIFICATION	2.5879558026692276E-6	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9985635976987287	WITHOUT_CLASSIFICATION	0.0014364023012711823	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999994760097034	WITHOUT_CLASSIFICATION	5.239902966678117E-7	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999993403700396	WITHOUT_CLASSIFICATION	6.596299603976406E-7	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999984768042	WITHOUT_CLASSIFICATION	1.5231957118684103E-9	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999999786652944	WITHOUT_CLASSIFICATION	2.133470562439025E-8	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999855678452173	WITHOUT_CLASSIFICATION	1.4432154782667606E-5	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999983883388173	WITHOUT_CLASSIFICATION	1.6116611827279907E-6	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999997616800419	WITHOUT_CLASSIFICATION	2.3831995808312851E-7	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.999999964190643	WITHOUT_CLASSIFICATION	3.580935711316565E-8	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999996876301626	WITHOUT_CLASSIFICATION	3.1236983748350586E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999996715752464	WITHOUT_CLASSIFICATION	3.2842475366875205E-7	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999990178730308	WITHOUT_CLASSIFICATION	9.82126969147192E-7	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999999616466031	WITHOUT_CLASSIFICATION	3.8353396844233536E-8	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999999616466031	WITHOUT_CLASSIFICATION	3.8353396844233536E-8	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999999722804138	WITHOUT_CLASSIFICATION	2.771958622264326E-8	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999999108363619	WITHOUT_CLASSIFICATION	8.91636380450974E-8	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999997236643025	WITHOUT_CLASSIFICATION	2.7633569746801647E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999997236643025	WITHOUT_CLASSIFICATION	2.7633569746801647E-7	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999939658888144	WITHOUT_CLASSIFICATION	6.034111185677878E-6	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999997727953512	WITHOUT_CLASSIFICATION	2.272046488902334E-7	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999922410676443	WITHOUT_CLASSIFICATION	7.758932355633485E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999876960515	WITHOUT_CLASSIFICATION	1.2303948470353546E-8	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999876960515	WITHOUT_CLASSIFICATION	1.2303948470353546E-8	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999999345104433	WITHOUT_CLASSIFICATION	6.548955665399189E-8	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999751864169	WITHOUT_CLASSIFICATION	2.481358311892182E-8	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999977228202	WITHOUT_CLASSIFICATION	2.2771797667457323E-9	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999999809218115	WITHOUT_CLASSIFICATION	1.9078188487567018E-8	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999999859120264	WITHOUT_CLASSIFICATION	1.4087973560883916E-8	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999998934791178	WITHOUT_CLASSIFICATION	1.0652088216941427E-7	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.999999960924566	WITHOUT_CLASSIFICATION	3.90754340627194E-8	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999923283700307	WITHOUT_CLASSIFICATION	7.67162996918261E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999998709025807	WITHOUT_CLASSIFICATION	1.2909741932708312E-7	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999998415172971	WITHOUT_CLASSIFICATION	1.584827029138613E-7	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999995513887749	WITHOUT_CLASSIFICATION	4.486112250287946E-7	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999997677922103	WITHOUT_CLASSIFICATION	2.3220778964845527E-7	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999999447156134	WITHOUT_CLASSIFICATION	5.528438669480167E-8	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999999677303398	WITHOUT_CLASSIFICATION	3.2269660191646456E-7	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999997976388061	WITHOUT_CLASSIFICATION	2.0236119381399607E-7	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999999889151526	WITHOUT_CLASSIFICATION	1.1084847320346885E-8	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999937141179	WITHOUT_CLASSIFICATION	6.285882075144772E-9	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999998465874875	WITHOUT_CLASSIFICATION	1.534125125108377E-7	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999996886958121	WITHOUT_CLASSIFICATION	3.1130418792414337E-7	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999998403997612	WITHOUT_CLASSIFICATION	1.596002388117266E-7	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999999681978423	WITHOUT_CLASSIFICATION	3.180215759545355E-8	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999998372703363	WITHOUT_CLASSIFICATION	1.6272966370466492E-7	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999997302360714	WITHOUT_CLASSIFICATION	2.69763928554426E-7	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999999115794267	WITHOUT_CLASSIFICATION	8.84205733194554E-8	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999949789549826	WITHOUT_CLASSIFICATION	5.021045017400769E-6	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999994812448221	WITHOUT_CLASSIFICATION	5.187551779387549E-7	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999715772330616	WITHOUT_CLASSIFICATION	2.8422766938338852E-5	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999997259380771	WITHOUT_CLASSIFICATION	2.7406192287173554E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999997035662718	WITHOUT_CLASSIFICATION	2.964337283077271E-7	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999929851063	WITHOUT_CLASSIFICATION	7.014893684926896E-9	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999999451789	WITHOUT_CLASSIFICATION	5.4821240514112574E-11	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999999677303398	WITHOUT_CLASSIFICATION	3.2269660191646456E-7	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999997259380771	WITHOUT_CLASSIFICATION	2.7406192287173554E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999997035662718	WITHOUT_CLASSIFICATION	2.964337283077271E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999999451789	WITHOUT_CLASSIFICATION	5.4821240514112574E-11	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999993844063028	WITHOUT_CLASSIFICATION	6.15593697358855E-7	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999991762329977	WITHOUT_CLASSIFICATION	8.237670024111959E-7	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.999999607573813	WITHOUT_CLASSIFICATION	3.9242618697397837E-7	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.999998176841238	WITHOUT_CLASSIFICATION	1.823158761945254E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999982276857595	WITHOUT_CLASSIFICATION	1.7723142405845761E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999983124888	WITHOUT_CLASSIFICATION	1.6875113424742309E-9	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999996785672696	WITHOUT_CLASSIFICATION	3.214327304487614E-7	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999999181463464	WITHOUT_CLASSIFICATION	8.185365358513537E-8	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999999022439863	WITHOUT_CLASSIFICATION	9.775601373099679E-8	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999998998611949	WITHOUT_CLASSIFICATION	1.0013880512479989E-7	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999995332972495	WITHOUT_CLASSIFICATION	4.667027504970764E-6	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999995332972495	WITHOUT_CLASSIFICATION	4.667027504970764E-6	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999995183128259	WITHOUT_CLASSIFICATION	4.816871741424067E-7	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999956644238	WITHOUT_CLASSIFICATION	4.3355762637352204E-9	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999961911518	WITHOUT_CLASSIFICATION	3.808848267082215E-9	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999996815080696	WITHOUT_CLASSIFICATION	3.18491930423165E-7	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999876113289	WITHOUT_CLASSIFICATION	1.2388671095618626E-8	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999984676192625	WITHOUT_CLASSIFICATION	1.5323807375233629E-6	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999998716124154	WITHOUT_CLASSIFICATION	1.2838758468017283E-7	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.999999994248513	WITHOUT_CLASSIFICATION	5.75148695178499E-9	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.999999887560828	WITHOUT_CLASSIFICATION	1.124391720787132E-7	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999998608136	WITHOUT_CLASSIFICATION	1.3918631831501133E-10	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999999314303168	WITHOUT_CLASSIFICATION	6.85696831460295E-8	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999996947346	WITHOUT_CLASSIFICATION	3.052654485087693E-10	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999996457137329	WITHOUT_CLASSIFICATION	3.542862670934019E-7	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999999397825802	WITHOUT_CLASSIFICATION	6.021741979187662E-8	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999999203535053	WITHOUT_CLASSIFICATION	7.964649470535336E-8	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999999969540626	WITHOUT_CLASSIFICATION	3.045937379561651E-9	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999999759476327	WITHOUT_CLASSIFICATION	2.405236734830697E-8	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999999639127064	WITHOUT_CLASSIFICATION	3.6087293560633097E-8	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999999713670338	WITHOUT_CLASSIFICATION	2.8632966203660117E-8	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999999511212488	WITHOUT_CLASSIFICATION	4.88787510784812E-8	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9999992634816699	WITHOUT_CLASSIFICATION	7.365183300935293E-7	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999996130096598	WITHOUT_CLASSIFICATION	3.869903401466689E-7	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999999692059285	WITHOUT_CLASSIFICATION	3.0794071620347294E-8	TEST
// others	WITHOUT_CLASSIFICATION	0.9999996361793049	WITHOUT_CLASSIFICATION	3.6382069509839136E-7	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999999096198707	WITHOUT_CLASSIFICATION	9.03801293130061E-8	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999993630175933	WITHOUT_CLASSIFICATION	6.369824067402333E-7	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999940833542184	WITHOUT_CLASSIFICATION	5.916645781646002E-6	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999959085832	WITHOUT_CLASSIFICATION	4.0914167934432666E-9	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999996393733864	WITHOUT_CLASSIFICATION	3.606266135622119E-7	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999998961510687	WITHOUT_CLASSIFICATION	1.038489313412279E-7	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999999662643714	WITHOUT_CLASSIFICATION	3.3735628703659054E-8	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999999818326407	WITHOUT_CLASSIFICATION	1.8167359279926987E-8	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999994056980042	WITHOUT_CLASSIFICATION	5.943019958172384E-7	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.999999249694198	WITHOUT_CLASSIFICATION	7.503058020448657E-7	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.999999922051974	WITHOUT_CLASSIFICATION	7.79480261125225E-8	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999986193623368	WITHOUT_CLASSIFICATION	1.3806376630958925E-6	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999993422650184	WITHOUT_CLASSIFICATION	6.577349816599919E-7	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999997754468052	WITHOUT_CLASSIFICATION	2.245531948479607E-7	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999999129671293	WITHOUT_CLASSIFICATION	8.703287077267824E-8	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999970406755926	WITHOUT_CLASSIFICATION	2.9593244073998642E-6	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999994323354339	WITHOUT_CLASSIFICATION	5.676645660103666E-7	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999453025049926	WITHOUT_CLASSIFICATION	5.4697495007542546E-5	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999997197046778	WITHOUT_CLASSIFICATION	2.8029532220452316E-7	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999999058850383	WITHOUT_CLASSIFICATION	9.411496169664804E-8	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999997453972381	WITHOUT_CLASSIFICATION	2.5460276183556235E-7	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.999999994378458	WITHOUT_CLASSIFICATION	5.621542081608087E-9	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.999999995207221	WITHOUT_CLASSIFICATION	4.792779047017038E-9	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999975148791	WITHOUT_CLASSIFICATION	2.4851209156390945E-9	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999998993867327	WITHOUT_CLASSIFICATION	1.0061326721343267E-7	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999985787751207	WITHOUT_CLASSIFICATION	1.4212248793885272E-6	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999998277116285	WITHOUT_CLASSIFICATION	1.7228837145570085E-7	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999999639876546	WITHOUT_CLASSIFICATION	3.601234548402224E-8	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999655380530522	WITHOUT_CLASSIFICATION	3.446194694780149E-5	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999973913922032	WITHOUT_CLASSIFICATION	2.608607796697586E-6	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999411034815832	WITHOUT_CLASSIFICATION	5.8896518416733675E-5	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999999879758033	WITHOUT_CLASSIFICATION	1.2024196707367965E-7	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999692555932	WITHOUT_CLASSIFICATION	3.0744406853495416E-8	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.999999876413392	WITHOUT_CLASSIFICATION	1.2358660801089905E-7	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999998229368879	WITHOUT_CLASSIFICATION	1.770631120045627E-7	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999920675264494	WITHOUT_CLASSIFICATION	7.932473550625543E-6	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999920675264494	WITHOUT_CLASSIFICATION	7.932473550625543E-6	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999998326983661	WITHOUT_CLASSIFICATION	1.6730163386209173E-7	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999978768554274	WITHOUT_CLASSIFICATION	2.1231445725878586E-6	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999994904052751	WITHOUT_CLASSIFICATION	5.095947248664448E-7	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999996075261127	WITHOUT_CLASSIFICATION	3.9247388733540513E-7	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999999183915862	WITHOUT_CLASSIFICATION	8.160841390143433E-8	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.999998968976532	WITHOUT_CLASSIFICATION	1.0310234680104708E-6	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999517989342573	WITHOUT_CLASSIFICATION	4.8201065742758095E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999991923883248	WITHOUT_CLASSIFICATION	8.076116752261995E-7	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999996834007184	WITHOUT_CLASSIFICATION	3.1659928162975545E-7	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999999958638123	WITHOUT_CLASSIFICATION	4.136187701720497E-9	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999996931700539	WITHOUT_CLASSIFICATION	3.068299462040315E-7	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999998356302361	WITHOUT_CLASSIFICATION	1.6436976392986972E-7	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999992638620868	WITHOUT_CLASSIFICATION	7.361379131484812E-7	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999999712211226	WITHOUT_CLASSIFICATION	2.8778877419313744E-8	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999996363976308	WITHOUT_CLASSIFICATION	3.6360236919035304E-7	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999984486856394	WITHOUT_CLASSIFICATION	1.5513143606931962E-6	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999992153271686	WITHOUT_CLASSIFICATION	7.846728313703001E-7	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999998063966119	WITHOUT_CLASSIFICATION	1.936033880365919E-7	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999999001546337	WITHOUT_CLASSIFICATION	9.984536631828201E-8	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999996878738502	WITHOUT_CLASSIFICATION	3.1212614979004725E-7	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999992863852167	WITHOUT_CLASSIFICATION	7.136147833544713E-7	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999998652918033	WITHOUT_CLASSIFICATION	1.3470819674123132E-7	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999970152732763	WITHOUT_CLASSIFICATION	2.98472672357373E-6	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999995314287305	WITHOUT_CLASSIFICATION	4.6857126942875745E-7	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999991710135168	WITHOUT_CLASSIFICATION	8.289864833404478E-7	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999958928067197	WITHOUT_CLASSIFICATION	4.107193280254586E-6	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999975843459422	WITHOUT_CLASSIFICATION	2.4156540577774485E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999997223009879	WITHOUT_CLASSIFICATION	2.776990120666973E-7	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999999375903503	WITHOUT_CLASSIFICATION	6.24096495882922E-8	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999492058386	WITHOUT_CLASSIFICATION	5.0794161337655754E-8	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999999924495937	WITHOUT_CLASSIFICATION	7.55040626381124E-9	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999990711359223	WITHOUT_CLASSIFICATION	9.288640777620838E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999029921729	WITHOUT_CLASSIFICATION	9.700782712605724E-8	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.999997527215974	WITHOUT_CLASSIFICATION	2.4727840260023494E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999029921729	WITHOUT_CLASSIFICATION	9.700782712605724E-8	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999999443193309	WITHOUT_CLASSIFICATION	5.5680669174368685E-8	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999992274581325	WITHOUT_CLASSIFICATION	7.725418674590699E-7	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999992274581325	WITHOUT_CLASSIFICATION	7.725418674590699E-7	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999992274581325	WITHOUT_CLASSIFICATION	7.725418674590699E-7	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999999168994711	WITHOUT_CLASSIFICATION	8.310052890160906E-8	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999999168994711	WITHOUT_CLASSIFICATION	8.310052890160906E-8	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999979632570224	WITHOUT_CLASSIFICATION	2.036742977669177E-6	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999207957923	WITHOUT_CLASSIFICATION	7.920420772858383E-8	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999130469119	WITHOUT_CLASSIFICATION	8.695308807900291E-8	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999999966809215	WITHOUT_CLASSIFICATION	3.3190784537088136E-9	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999975543987745	WITHOUT_CLASSIFICATION	2.4456012256237187E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.999998321121506	WITHOUT_CLASSIFICATION	1.6788784939561504E-6	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999999461307595	WITHOUT_CLASSIFICATION	5.3869240457226063E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999998231054881	WITHOUT_CLASSIFICATION	1.7689451188176238E-7	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999991877851818	WITHOUT_CLASSIFICATION	8.122148182342059E-7	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999999848340074	WITHOUT_CLASSIFICATION	1.5165992498658337E-8	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999992630116052	WITHOUT_CLASSIFICATION	7.369883947695959E-7	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999999635488666	WITHOUT_CLASSIFICATION	3.645113342930146E-8	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999999895488589	WITHOUT_CLASSIFICATION	1.0451141043786208E-8	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999998628188471	WITHOUT_CLASSIFICATION	1.3718115278706086E-7	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.999999824459014	WITHOUT_CLASSIFICATION	1.7554098594511467E-7	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999998753326842	WITHOUT_CLASSIFICATION	1.246673156986075E-7	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999998491667562	WITHOUT_CLASSIFICATION	1.5083324384769974E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999998417433158	WITHOUT_CLASSIFICATION	1.582566842832603E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999998417433158	WITHOUT_CLASSIFICATION	1.582566842832603E-7	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999997198619694	WITHOUT_CLASSIFICATION	2.8013803063496043E-7	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999998877339066	WITHOUT_CLASSIFICATION	1.122660934049522E-7	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999998877339066	WITHOUT_CLASSIFICATION	1.122660934049522E-7	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.999995700423018	WITHOUT_CLASSIFICATION	4.29957698199801E-6	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999998119638192	WITHOUT_CLASSIFICATION	1.88036180885335E-7	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999997448087655	WITHOUT_CLASSIFICATION	2.5519123446479353E-7	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999990226451558	WITHOUT_CLASSIFICATION	9.773548442346206E-7	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999994686833857	WITHOUT_CLASSIFICATION	5.313166141593517E-7	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999999865066715	WITHOUT_CLASSIFICATION	1.3493328425453414E-8	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999996473151715	WITHOUT_CLASSIFICATION	3.526848285487702E-7	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999999858122265	WITHOUT_CLASSIFICATION	1.418777349032887E-8	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999469407646	WITHOUT_CLASSIFICATION	5.305923543426782E-8	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999997046514113	WITHOUT_CLASSIFICATION	2.953485886785795E-7	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999988266652746	WITHOUT_CLASSIFICATION	1.173334725343247E-6	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999996745225682	WITHOUT_CLASSIFICATION	3.2547743182837104E-7	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999997971151778	WITHOUT_CLASSIFICATION	2.028848221426921E-7	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999999710045591	WITHOUT_CLASSIFICATION	2.8995440869687062E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999998231054881	WITHOUT_CLASSIFICATION	1.7689451188176238E-7	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999617765512891	WITHOUT_CLASSIFICATION	3.8223448710792985E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998284537766	WITHOUT_CLASSIFICATION	1.715462235809834E-7	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999998989235306	WITHOUT_CLASSIFICATION	1.0107646935082886E-7	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999998989235306	WITHOUT_CLASSIFICATION	1.0107646935082886E-7	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.999999898394493	WITHOUT_CLASSIFICATION	1.016055069686086E-7	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999998251152576	WITHOUT_CLASSIFICATION	1.7488474247292132E-7	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999999943553277	WITHOUT_CLASSIFICATION	5.644672252445145E-9	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999994520761143	WITHOUT_CLASSIFICATION	5.479238857378803E-7	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999739862426	WITHOUT_CLASSIFICATION	2.6013757327663065E-8	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999999595145292	WITHOUT_CLASSIFICATION	4.0485470686737374E-8	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999561529499	WITHOUT_CLASSIFICATION	4.384705010703638E-8	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9997440141141273	WITHOUT_CLASSIFICATION	2.559858858727623E-4	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.999999980781002	WITHOUT_CLASSIFICATION	1.9218997946558366E-8	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999999307923836	WITHOUT_CLASSIFICATION	6.920761640616879E-8	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999997282013915	WITHOUT_CLASSIFICATION	2.7179860852866166E-7	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999996475865276	WITHOUT_CLASSIFICATION	3.5241347242604536E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999631889387297	WITHOUT_CLASSIFICATION	3.681106127031053E-5	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999997511354252	WITHOUT_CLASSIFICATION	2.488645748978611E-7	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999996537159958	WITHOUT_CLASSIFICATION	3.462840043538647E-7	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999997507383687	WITHOUT_CLASSIFICATION	2.492616313387447E-7	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999997213113762	WITHOUT_CLASSIFICATION	2.786886238899889E-7	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999995623171141	WITHOUT_CLASSIFICATION	4.3768288593227244E-7	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999999753324694	WITHOUT_CLASSIFICATION	2.4667530568141237E-8	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999240457308	WITHOUT_CLASSIFICATION	7.595426917516411E-8	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999998467230413	WITHOUT_CLASSIFICATION	1.5327695864004405E-7	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.999999992820303	WITHOUT_CLASSIFICATION	7.179696902928528E-9	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999997614265884	WITHOUT_CLASSIFICATION	2.385734116270895E-7	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999981311366	WITHOUT_CLASSIFICATION	1.8688633333085382E-9	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999999436026412	WITHOUT_CLASSIFICATION	5.639735884412326E-8	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999999016537814	WITHOUT_CLASSIFICATION	9.834621857689616E-8	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999109402209252	WITHOUT_CLASSIFICATION	8.905977907473835E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999836898292445	WITHOUT_CLASSIFICATION	1.631017075552572E-5	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999911498847	WITHOUT_CLASSIFICATION	8.850115295231994E-9	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.999999274081547	WITHOUT_CLASSIFICATION	7.2591845297769E-7	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999999547222324	WITHOUT_CLASSIFICATION	4.527776761597677E-8	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999999469116341	WITHOUT_CLASSIFICATION	5.3088365965868744E-8	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999988629428948	WITHOUT_CLASSIFICATION	1.1370571051918064E-6	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999939277729489	WITHOUT_CLASSIFICATION	6.0722270509969744E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999984676981808	WITHOUT_CLASSIFICATION	1.5323018192284808E-6	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999986801930731	WITHOUT_CLASSIFICATION	1.3198069269071358E-6	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999836898292445	WITHOUT_CLASSIFICATION	1.631017075552572E-5	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.999997582718528	WITHOUT_CLASSIFICATION	2.4172814719640518E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999984676981808	WITHOUT_CLASSIFICATION	1.5323018192284808E-6	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999992686477259	WITHOUT_CLASSIFICATION	7.313522741250632E-7	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999999572074714	WITHOUT_CLASSIFICATION	4.27925285639061E-8	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999996913890027	WITHOUT_CLASSIFICATION	3.086109974203593E-7	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999999236637915	WITHOUT_CLASSIFICATION	7.633620846168902E-8	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999990319008769	WITHOUT_CLASSIFICATION	9.680991230504505E-7	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999999782611722	WITHOUT_CLASSIFICATION	2.1738827917780856E-8	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999999782611722	WITHOUT_CLASSIFICATION	2.1738827917780856E-8	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999990181059856	WITHOUT_CLASSIFICATION	9.81894014512471E-7	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999985418437	WITHOUT_CLASSIFICATION	1.4581562760074767E-9	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999478725142	WITHOUT_CLASSIFICATION	5.212748573605265E-8	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999478725142	WITHOUT_CLASSIFICATION	5.212748573605265E-8	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999983120813	WITHOUT_CLASSIFICATION	1.687918665045599E-9	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.999590561588984	WITHOUT_CLASSIFICATION	4.0943841101594283E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9999268102140303	WITHOUT_CLASSIFICATION	7.318978596970748E-5	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9999268102140303	WITHOUT_CLASSIFICATION	7.318978596970748E-5	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999996244802508	WITHOUT_CLASSIFICATION	3.7551974923167654E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999992333283553	WITHOUT_CLASSIFICATION	7.666716447780599E-7	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999996648393146	WITHOUT_CLASSIFICATION	3.351606854403583E-7	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999998984398042	WITHOUT_CLASSIFICATION	1.0156019575992701E-7	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999999833684483	WITHOUT_CLASSIFICATION	1.663155168716937E-8	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999999518096981	WITHOUT_CLASSIFICATION	4.819030187482854E-8	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999997867341602	WITHOUT_CLASSIFICATION	2.1326583975423305E-7	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999994576878397	WITHOUT_CLASSIFICATION	5.423121603451784E-7	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999998194561891	WITHOUT_CLASSIFICATION	1.805438109564371E-7	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999995429327846	WITHOUT_CLASSIFICATION	4.5706721541103434E-7	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.999999670355866	WITHOUT_CLASSIFICATION	3.2964413396036997E-7	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999996986682071	WITHOUT_CLASSIFICATION	3.013317928009189E-7	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999998921616073	WITHOUT_CLASSIFICATION	1.078383927570095E-7	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.999998648218917	WITHOUT_CLASSIFICATION	1.3517810829547644E-6	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999997972497874	WITHOUT_CLASSIFICATION	2.0275021273842926E-7	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999999740027818	WITHOUT_CLASSIFICATION	2.5997218040541956E-8	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.999964808103284	WITHOUT_CLASSIFICATION	3.519189671601579E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999998948638875	WITHOUT_CLASSIFICATION	1.0513611245901619E-7	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999999222587268	WITHOUT_CLASSIFICATION	7.774127321649261E-8	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999999029945863	WITHOUT_CLASSIFICATION	9.700541371329344E-8	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999988100681704	WITHOUT_CLASSIFICATION	1.1899318297093187E-6	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999961034127117	WITHOUT_CLASSIFICATION	3.8965872883543754E-6	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.99999981031133	WITHOUT_CLASSIFICATION	1.8968866999036674E-7	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.999997958613354	WITHOUT_CLASSIFICATION	2.0413866458775628E-6	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999957971222629	WITHOUT_CLASSIFICATION	4.2028777370831025E-6	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999940014741991	WITHOUT_CLASSIFICATION	5.998525800872698E-6	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999982776361886	WITHOUT_CLASSIFICATION	1.7223638113950345E-6	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999992698208034	WITHOUT_CLASSIFICATION	7.301791966548363E-7	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999919691416	WITHOUT_CLASSIFICATION	8.030858428300387E-9	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999919691416	WITHOUT_CLASSIFICATION	8.030858428300387E-9	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.999999926530636	WITHOUT_CLASSIFICATION	7.346936412512837E-8	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999998754794728	WITHOUT_CLASSIFICATION	1.245205272919044E-7	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999974115458873	WITHOUT_CLASSIFICATION	2.588454112720501E-6	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999993934895656	WITHOUT_CLASSIFICATION	6.065104343964002E-7	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999990353294221	WITHOUT_CLASSIFICATION	9.646705778847439E-7	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999997636451774	WITHOUT_CLASSIFICATION	2.3635482259443887E-7	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999997394880944	WITHOUT_CLASSIFICATION	2.605119055313976E-7	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.99999991829027	WITHOUT_CLASSIFICATION	8.170973000467345E-8	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999998898635557	WITHOUT_CLASSIFICATION	1.1013644426527256E-7	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999264395275	WITHOUT_CLASSIFICATION	7.356047249208118E-8	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999997322558746	WITHOUT_CLASSIFICATION	2.677441253725053E-7	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999997699975552	WITHOUT_CLASSIFICATION	2.3000244483786984E-7	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999986950439694	WITHOUT_CLASSIFICATION	1.304956030526547E-6	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999998898815535	WITHOUT_CLASSIFICATION	1.1011844649616479E-7	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999999973241593	WITHOUT_CLASSIFICATION	2.675840644799575E-9	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999999348354409	WITHOUT_CLASSIFICATION	6.516455906722091E-8	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999999628082853	WITHOUT_CLASSIFICATION	3.719171467785332E-8	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999998895345991	WITHOUT_CLASSIFICATION	1.104654009696888E-7	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999995042174092	WITHOUT_CLASSIFICATION	4.95782590664101E-7	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999997766376209	WITHOUT_CLASSIFICATION	2.233623792147368E-7	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999999536330884	WITHOUT_CLASSIFICATION	4.636691170467213E-8	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999989853084381	WITHOUT_CLASSIFICATION	1.014691561931E-6	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999998603261	WITHOUT_CLASSIFICATION	1.3967389993391374E-7	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999688222655	WITHOUT_CLASSIFICATION	3.117773455393717E-8	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999999731959709	WITHOUT_CLASSIFICATION	2.6804029105005912E-8	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999999291791025	WITHOUT_CLASSIFICATION	7.082089755971451E-8	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999980079639541	WITHOUT_CLASSIFICATION	1.992036045837811E-6	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999997514590001	WITHOUT_CLASSIFICATION	2.4854099991841734E-7	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999996648335433	WITHOUT_CLASSIFICATION	3.3516645669429487E-7	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999999881509944	WITHOUT_CLASSIFICATION	1.184900568529632E-8	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999996326260948	WITHOUT_CLASSIFICATION	3.6737390516238026E-7	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999998534807119	WITHOUT_CLASSIFICATION	1.4651928807550952E-7	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999999340665653	WITHOUT_CLASSIFICATION	6.593343475330596E-8	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999998141746893	WITHOUT_CLASSIFICATION	1.8582531069932347E-7	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999998612844886	WITHOUT_CLASSIFICATION	1.3871551152013968E-7	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.999999684917307	WITHOUT_CLASSIFICATION	3.150826931067589E-7	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999998298436056	WITHOUT_CLASSIFICATION	1.7015639449378408E-7	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999994111229098	WITHOUT_CLASSIFICATION	5.888770901012285E-7	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999939681021	WITHOUT_CLASSIFICATION	6.031897866027591E-9	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999998498092051	WITHOUT_CLASSIFICATION	1.5019079485826306E-7	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999983716260475	WITHOUT_CLASSIFICATION	1.6283739523529704E-6	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999999652680359	WITHOUT_CLASSIFICATION	3.473196411134791E-8	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999757669351	WITHOUT_CLASSIFICATION	2.4233064906149795E-8	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999757669351	WITHOUT_CLASSIFICATION	2.4233064906149795E-8	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999987462281529	WITHOUT_CLASSIFICATION	1.2537718471017393E-6	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999917400879	WITHOUT_CLASSIFICATION	8.259912148921836E-9	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999999321643298	WITHOUT_CLASSIFICATION	6.783567017236118E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999999145309395	WITHOUT_CLASSIFICATION	8.546906047093106E-8	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999998856190944	WITHOUT_CLASSIFICATION	1.1438090558097185E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999996674102246	WITHOUT_CLASSIFICATION	3.3258977548373953E-7	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999999747668853	WITHOUT_CLASSIFICATION	2.5233114690938803E-7	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999988432919401	WITHOUT_CLASSIFICATION	1.1567080598686153E-6	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999992966349935	WITHOUT_CLASSIFICATION	7.03365006516509E-7	TEST
// tc	WITHOUT_CLASSIFICATION	0.999998524724481	WITHOUT_CLASSIFICATION	1.4752755190507088E-6	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999991012356112	WITHOUT_CLASSIFICATION	8.987643888842423E-7	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999997149113528	WITHOUT_CLASSIFICATION	2.850886471866904E-7	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999996662199218	WITHOUT_CLASSIFICATION	3.337800782869402E-7	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999999302141173	WITHOUT_CLASSIFICATION	6.978588278920877E-8	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999642521709	WITHOUT_CLASSIFICATION	3.574782908901062E-8	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999996642451644	WITHOUT_CLASSIFICATION	3.357548356043259E-7	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999304104558	WITHOUT_CLASSIFICATION	6.958954427425102E-8	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999994341286995	WITHOUT_CLASSIFICATION	5.658713005239921E-7	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999503103149	WITHOUT_CLASSIFICATION	4.9689685164870754E-8	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999996152758568	WITHOUT_CLASSIFICATION	3.8472414321962396E-7	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999533928761	WITHOUT_CLASSIFICATION	4.66071238296863E-8	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999997040762314	WITHOUT_CLASSIFICATION	2.9592376853361575E-7	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999994215039575	WITHOUT_CLASSIFICATION	5.784960426199766E-7	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999997832715877	WITHOUT_CLASSIFICATION	2.167284122955871E-7	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999998815032086	WITHOUT_CLASSIFICATION	1.1849679145800092E-7	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999998615981547	WITHOUT_CLASSIFICATION	1.384018452086845E-7	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999206147996	WITHOUT_CLASSIFICATION	7.938520047048795E-8	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999208692608	WITHOUT_CLASSIFICATION	7.913073919201963E-8	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999998692000874	WITHOUT_CLASSIFICATION	1.307999126224362E-7	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999994786674623	WITHOUT_CLASSIFICATION	5.21332537609012E-7	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999997290171301	WITHOUT_CLASSIFICATION	2.709828698796497E-7	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999994786177476	WITHOUT_CLASSIFICATION	5.213822523768681E-7	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999999751211797	WITHOUT_CLASSIFICATION	2.487882037976956E-8	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999999153864937	WITHOUT_CLASSIFICATION	8.461350628873111E-8	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999994111229098	WITHOUT_CLASSIFICATION	5.888770901012285E-7	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999992258358005	WITHOUT_CLASSIFICATION	7.741641994932989E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999997765790757	WITHOUT_CLASSIFICATION	2.2342092432390547E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999997765790757	WITHOUT_CLASSIFICATION	2.2342092432390547E-7	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999989569293802	WITHOUT_CLASSIFICATION	1.0430706197443809E-6	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999724697506	WITHOUT_CLASSIFICATION	2.7530249434390923E-8	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.999999800208353	WITHOUT_CLASSIFICATION	1.9979164699430197E-7	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999997382228702	WITHOUT_CLASSIFICATION	2.617771296641885E-7	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999998339155375	WITHOUT_CLASSIFICATION	1.6608446249651857E-7	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999998694910217	WITHOUT_CLASSIFICATION	1.3050897832659247E-7	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.999999837212162	WITHOUT_CLASSIFICATION	1.6278783800822822E-7	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999997427601225	WITHOUT_CLASSIFICATION	2.572398774911712E-7	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.999999836339463	WITHOUT_CLASSIFICATION	1.6366053701560503E-7	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999997923660591	WITHOUT_CLASSIFICATION	2.0763394086749211E-7	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999996774167136	WITHOUT_CLASSIFICATION	3.225832864264883E-7	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999995933505172	WITHOUT_CLASSIFICATION	4.0664948283374504E-7	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999999518915461	WITHOUT_CLASSIFICATION	4.810845378589562E-8	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999997259070816	WITHOUT_CLASSIFICATION	2.740929183233312E-7	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999931926314309	WITHOUT_CLASSIFICATION	6.807368568965479E-6	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999999972494602	WITHOUT_CLASSIFICATION	2.7505397067266913E-9	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999998750563425	WITHOUT_CLASSIFICATION	1.2494365753946833E-7	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999997161955864	WITHOUT_CLASSIFICATION	2.8380441369205515E-7	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999998931539671	WITHOUT_CLASSIFICATION	1.0684603285152607E-7	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999998644458609	WITHOUT_CLASSIFICATION	1.3555413913595556E-7	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999998032048084	WITHOUT_CLASSIFICATION	1.967951914635912E-7	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999998520519038	WITHOUT_CLASSIFICATION	1.4794809625712236E-7	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999999892524848	WITHOUT_CLASSIFICATION	1.0747515141099952E-8	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999999891286936	WITHOUT_CLASSIFICATION	1.0871306461655229E-8	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999941719226	WITHOUT_CLASSIFICATION	5.828077369893145E-9	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999999500530898	WITHOUT_CLASSIFICATION	4.994691023676434E-8	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999999288463107	WITHOUT_CLASSIFICATION	7.115368919167474E-8	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999998515965053	WITHOUT_CLASSIFICATION	1.4840349466322592E-7	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999998798971959	WITHOUT_CLASSIFICATION	1.2010280403299278E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999999560615994	WITHOUT_CLASSIFICATION	4.393840062335389E-8	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999998431986746	WITHOUT_CLASSIFICATION	1.5680132541479907E-7	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999999388563308	WITHOUT_CLASSIFICATION	6.114366919188327E-8	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999997728806133	WITHOUT_CLASSIFICATION	2.2711938666353867E-7	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999893971734	WITHOUT_CLASSIFICATION	1.0602826708834901E-8	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999999951306586	WITHOUT_CLASSIFICATION	4.869341409513852E-9	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999998130541108	WITHOUT_CLASSIFICATION	1.8694588916832057E-7	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999567458803	WITHOUT_CLASSIFICATION	4.3254119817991105E-8	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999999500530898	WITHOUT_CLASSIFICATION	4.994691023676434E-8	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999999288463107	WITHOUT_CLASSIFICATION	7.115368919167474E-8	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999998515965053	WITHOUT_CLASSIFICATION	1.4840349466322592E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999999560615994	WITHOUT_CLASSIFICATION	4.393840062335389E-8	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999950107012	WITHOUT_CLASSIFICATION	4.989298766502963E-9	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999860016925	WITHOUT_CLASSIFICATION	1.3998307615859325E-8	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999998034403402	WITHOUT_CLASSIFICATION	1.9655965982825665E-7	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999997722549183	WITHOUT_CLASSIFICATION	2.277450816395176E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999997403395506	WITHOUT_CLASSIFICATION	2.59660449286394E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999703088305	WITHOUT_CLASSIFICATION	2.969116959670781E-8	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999999258604839	WITHOUT_CLASSIFICATION	7.413951602912158E-8	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999999215207843	WITHOUT_CLASSIFICATION	7.847921563458011E-8	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999999306567389	WITHOUT_CLASSIFICATION	6.934326113044554E-8	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999994804075512	WITHOUT_CLASSIFICATION	5.195924489254403E-7	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999989508165744	WITHOUT_CLASSIFICATION	1.0491834255308366E-6	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.999999937973422	WITHOUT_CLASSIFICATION	6.202657792306403E-8	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.999999988003715	WITHOUT_CLASSIFICATION	1.1996285043527731E-8	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999999963661809	WITHOUT_CLASSIFICATION	3.6338192063164987E-9	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999994319418284	WITHOUT_CLASSIFICATION	5.680581717397558E-7	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999999775729882	WITHOUT_CLASSIFICATION	2.2427011807594706E-8	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999999839283917	WITHOUT_CLASSIFICATION	1.6071608289778717E-8	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999998609384885	WITHOUT_CLASSIFICATION	1.3906151156731993E-7	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999999924896564	WITHOUT_CLASSIFICATION	7.51034351037661E-9	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999567458803	WITHOUT_CLASSIFICATION	4.3254119817991105E-8	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999860016925	WITHOUT_CLASSIFICATION	1.3998307615859325E-8	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999998034403402	WITHOUT_CLASSIFICATION	1.9655965982825665E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999997403395506	WITHOUT_CLASSIFICATION	2.59660449286394E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999703088305	WITHOUT_CLASSIFICATION	2.969116959670781E-8	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999999258604839	WITHOUT_CLASSIFICATION	7.413951602912158E-8	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999999215207843	WITHOUT_CLASSIFICATION	7.847921563458011E-8	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999999012121388	WITHOUT_CLASSIFICATION	9.878786128278683E-8	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999992337483632	WITHOUT_CLASSIFICATION	7.662516367149385E-7	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999802445606	WITHOUT_CLASSIFICATION	1.9755439398360007E-8	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999989895314	WITHOUT_CLASSIFICATION	1.010468553578243E-9	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999984315870389	WITHOUT_CLASSIFICATION	1.5684129610522183E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999984315870389	WITHOUT_CLASSIFICATION	1.5684129610522183E-6	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999999815043031	WITHOUT_CLASSIFICATION	1.84956968852543E-8	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999999958511477	WITHOUT_CLASSIFICATION	4.148852275131506E-9	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.999999637977355	WITHOUT_CLASSIFICATION	3.6202264496228064E-7	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999999516307388	WITHOUT_CLASSIFICATION	4.836926119215738E-8	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999999108748395	WITHOUT_CLASSIFICATION	8.912516043496318E-8	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999999480510717	WITHOUT_CLASSIFICATION	5.1948928381290426E-8	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999996856945487	WITHOUT_CLASSIFICATION	3.1430545124956675E-7	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999999909981654	WITHOUT_CLASSIFICATION	9.001834508009337E-9	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999998626651424	WITHOUT_CLASSIFICATION	1.3733485764925503E-7	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999998973206266	WITHOUT_CLASSIFICATION	1.0267937341379887E-7	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999999696449254	WITHOUT_CLASSIFICATION	3.035507467226626E-8	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999999942787796	WITHOUT_CLASSIFICATION	5.721220362835936E-9	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999995003395925	WITHOUT_CLASSIFICATION	4.996604074345714E-7	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.99999964935454	WITHOUT_CLASSIFICATION	3.506454600894212E-7	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999999931696953	WITHOUT_CLASSIFICATION	6.830304761417695E-9	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999999882320586	WITHOUT_CLASSIFICATION	1.176794138836821E-8	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999998977688084	WITHOUT_CLASSIFICATION	1.02231191673676E-7	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999999836893062	WITHOUT_CLASSIFICATION	1.6310693727398786E-8	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999997841053124	WITHOUT_CLASSIFICATION	2.1589468753832715E-7	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999999984205274	WITHOUT_CLASSIFICATION	1.5794724790869798E-9	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9997588969268981	WITHOUT_CLASSIFICATION	2.4110307310194225E-4	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999999470882232	WITHOUT_CLASSIFICATION	5.2911776817109985E-8	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999868571033	WITHOUT_CLASSIFICATION	1.3142896789595685E-8	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9974403215756452	WITHOUT_CLASSIFICATION	0.002559678424354822	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999728958294	WITHOUT_CLASSIFICATION	2.7104170613554797E-8	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.999999993484327	WITHOUT_CLASSIFICATION	6.515673089277817E-9	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999984771014	WITHOUT_CLASSIFICATION	1.5228986365343067E-9	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999992927763452	WITHOUT_CLASSIFICATION	7.072236546856878E-7	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999992856403301	WITHOUT_CLASSIFICATION	7.143596698688886E-7	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999728958294	WITHOUT_CLASSIFICATION	2.7104170613554797E-8	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.999999993484327	WITHOUT_CLASSIFICATION	6.515673089277817E-9	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.99999964935454	WITHOUT_CLASSIFICATION	3.506454600894212E-7	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999995401315476	WITHOUT_CLASSIFICATION	4.59868452377153E-7	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999999811260017	WITHOUT_CLASSIFICATION	1.8873998178451902E-8	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999999479669553	WITHOUT_CLASSIFICATION	5.203304459853259E-8	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.999999982051516	WITHOUT_CLASSIFICATION	1.7948483927670512E-8	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999999822702031	WITHOUT_CLASSIFICATION	1.772979688508098E-8	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999988836215457	WITHOUT_CLASSIFICATION	1.1163784543463058E-6	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999992522213772	WITHOUT_CLASSIFICATION	7.477786227694156E-7	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999999386449472	WITHOUT_CLASSIFICATION	6.135505285694276E-8	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999960233836603	WITHOUT_CLASSIFICATION	3.976616339596233E-6	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999986526490426	WITHOUT_CLASSIFICATION	1.3473509573563712E-6	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.999999982581609	WITHOUT_CLASSIFICATION	1.7418390897896964E-8	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999999053054979	WITHOUT_CLASSIFICATION	9.469450215857101E-8	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999999042574117	WITHOUT_CLASSIFICATION	9.574258829579077E-8	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999813672442	WITHOUT_CLASSIFICATION	1.8632755739788395E-8	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999994914577	WITHOUT_CLASSIFICATION	5.085423197962781E-10	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999984724909945	WITHOUT_CLASSIFICATION	1.5275090054716194E-6	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999999992747015	WITHOUT_CLASSIFICATION	7.252983696791825E-10	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999998097587681	WITHOUT_CLASSIFICATION	1.9024123197347676E-7	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999675448186	WITHOUT_CLASSIFICATION	3.245518153707041E-8	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999998354880953	WITHOUT_CLASSIFICATION	1.6451190469682693E-7	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999999818154349	WITHOUT_CLASSIFICATION	1.8184565040610982E-8	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999787746209	WITHOUT_CLASSIFICATION	2.1225379075243205E-8	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999999237145185	WITHOUT_CLASSIFICATION	7.628548149073974E-8	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999998978214	WITHOUT_CLASSIFICATION	1.0217860675071818E-10	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999981890126	WITHOUT_CLASSIFICATION	1.8109874775378323E-9	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999999448807573	WITHOUT_CLASSIFICATION	5.511924270526111E-8	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9980160284179974	WITHOUT_CLASSIFICATION	0.0019839715820026706	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999982117287096	WITHOUT_CLASSIFICATION	1.7882712903758663E-6	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999997782721075	WITHOUT_CLASSIFICATION	2.2172789245193167E-7	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999591193532	WITHOUT_CLASSIFICATION	4.088064683018017E-8	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999999924244043	WITHOUT_CLASSIFICATION	7.575595782859907E-9	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999777030696	WITHOUT_CLASSIFICATION	2.2296930349447908E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999777030696	WITHOUT_CLASSIFICATION	2.2296930349447908E-8	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999995003395925	WITHOUT_CLASSIFICATION	4.996604074345714E-7	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999801571882	WITHOUT_CLASSIFICATION	1.9842811934000408E-8	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998845608871	WITHOUT_CLASSIFICATION	1.1543911296729913E-7	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999994132072292	WITHOUT_CLASSIFICATION	5.867927708582202E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999810656254	WITHOUT_CLASSIFICATION	1.8934374639295747E-8	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999810656254	WITHOUT_CLASSIFICATION	1.8934374639295747E-8	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999800727757	WITHOUT_CLASSIFICATION	1.9927224267751326E-8	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999998197541662	WITHOUT_CLASSIFICATION	1.802458337996011E-7	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999405738177	WITHOUT_CLASSIFICATION	5.942618233937149E-8	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.999999930805487	WITHOUT_CLASSIFICATION	6.919451295993455E-8	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999997266250997	WITHOUT_CLASSIFICATION	2.7337490022405557E-7	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999732065722	WITHOUT_CLASSIFICATION	2.679342785478548E-8	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999998805027444	WITHOUT_CLASSIFICATION	1.1949725566773452E-7	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999999593724451	WITHOUT_CLASSIFICATION	4.062755489616363E-8	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998664694042	WITHOUT_CLASSIFICATION	1.3353059582979677E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999998538152957	WITHOUT_CLASSIFICATION	1.4618470439153393E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999996656656682	WITHOUT_CLASSIFICATION	3.343343317872819E-7	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999998616470471	WITHOUT_CLASSIFICATION	1.383529528627411E-7	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999986705887578	WITHOUT_CLASSIFICATION	1.3294112422335465E-6	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999999864440223	WITHOUT_CLASSIFICATION	1.3555977630633063E-8	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999984766865939	WITHOUT_CLASSIFICATION	1.523313406062638E-6	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999980392620371	WITHOUT_CLASSIFICATION	1.960737962912951E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999329288055	WITHOUT_CLASSIFICATION	6.707119448386414E-8	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999329288055	WITHOUT_CLASSIFICATION	6.707119448386414E-8	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999998464112402	WITHOUT_CLASSIFICATION	1.5358875979663228E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999998464112402	WITHOUT_CLASSIFICATION	1.5358875979663228E-7	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999464439739	WITHOUT_CLASSIFICATION	5.35560260822535E-8	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999965240272746	WITHOUT_CLASSIFICATION	3.475972725385147E-6	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999815255152	WITHOUT_CLASSIFICATION	1.8474484814253913E-8	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.999999820169037	WITHOUT_CLASSIFICATION	1.7983096288621763E-7	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999999716812995	WITHOUT_CLASSIFICATION	2.8318700513315013E-8	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999999190452886	WITHOUT_CLASSIFICATION	8.095471135775307E-8	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999999870305493	WITHOUT_CLASSIFICATION	1.296945084179955E-8	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999998616470471	WITHOUT_CLASSIFICATION	1.383529528627411E-7	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999986705887578	WITHOUT_CLASSIFICATION	1.3294112422335465E-6	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999984766865939	WITHOUT_CLASSIFICATION	1.523313406062638E-6	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999992934145263	WITHOUT_CLASSIFICATION	7.065854737112056E-7	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999980686401431	WITHOUT_CLASSIFICATION	1.931359856926957E-6	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999798833829	WITHOUT_CLASSIFICATION	2.0116617141630306E-8	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999993740263667	WITHOUT_CLASSIFICATION	6.259736332811076E-7	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.999999945702781	WITHOUT_CLASSIFICATION	5.429721920659975E-8	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999983101721036	WITHOUT_CLASSIFICATION	1.689827896365034E-6	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999997398329206	WITHOUT_CLASSIFICATION	2.601670794784816E-7	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999997892998476	WITHOUT_CLASSIFICATION	2.1070015237814197E-7	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.999999740101359	WITHOUT_CLASSIFICATION	2.5989864112924064E-7	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999481925725	WITHOUT_CLASSIFICATION	5.180742751604154E-8	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999999836114927	WITHOUT_CLASSIFICATION	1.638850741400116E-8	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999998003141343	WITHOUT_CLASSIFICATION	1.9968586569091323E-7	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999997543115441	WITHOUT_CLASSIFICATION	2.456884559192689E-7	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999987172998132	WITHOUT_CLASSIFICATION	1.2827001867845993E-6	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999996908279002	WITHOUT_CLASSIFICATION	3.091720998054804E-7	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999626220312	WITHOUT_CLASSIFICATION	3.737796886859524E-8	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999997988707766	WITHOUT_CLASSIFICATION	2.011292233334428E-7	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999998848733173	WITHOUT_CLASSIFICATION	1.1512668278727868E-7	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.999997974553973	WITHOUT_CLASSIFICATION	2.025446027021891E-6	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999801349921	WITHOUT_CLASSIFICATION	1.9865007928325672E-8	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999534169007	WITHOUT_CLASSIFICATION	4.6583099270647596E-8	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999998523837135	WITHOUT_CLASSIFICATION	1.4761628658272346E-7	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999937539136882	WITHOUT_CLASSIFICATION	6.246086311892104E-6	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999998557064983	WITHOUT_CLASSIFICATION	1.4429350164878954E-7	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999998214311454	WITHOUT_CLASSIFICATION	1.7856885455092936E-7	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.999999907241465	WITHOUT_CLASSIFICATION	9.27585349572271E-8	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999998790567121	WITHOUT_CLASSIFICATION	1.2094328793872377E-7	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999988771130845	WITHOUT_CLASSIFICATION	1.1228869154005904E-6	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.999999981997579	WITHOUT_CLASSIFICATION	1.8002420933681873E-8	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999999811984254	WITHOUT_CLASSIFICATION	1.8801574724069212E-8	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999999732282278	WITHOUT_CLASSIFICATION	2.677177223253454E-8	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.999999712000674	WITHOUT_CLASSIFICATION	2.8799932612367446E-7	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999999308228468	WITHOUT_CLASSIFICATION	6.9177153217986E-8	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999999945702694	WITHOUT_CLASSIFICATION	5.429730581514436E-9	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999999112405463	WITHOUT_CLASSIFICATION	8.875945368907835E-8	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999999677593691	WITHOUT_CLASSIFICATION	3.224063099935458E-8	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999999277615893	WITHOUT_CLASSIFICATION	7.22384107051632E-8	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999997665356466	WITHOUT_CLASSIFICATION	2.3346435341498025E-7	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999959756807916	WITHOUT_CLASSIFICATION	4.024319208345244E-6	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999620279579	WITHOUT_CLASSIFICATION	3.7972042086874734E-8	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999999192165598	WITHOUT_CLASSIFICATION	8.078344013918157E-8	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998845608871	WITHOUT_CLASSIFICATION	1.1543911296729913E-7	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999999277615893	WITHOUT_CLASSIFICATION	7.22384107051632E-8	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999695050939548	WITHOUT_CLASSIFICATION	3.049490604515895E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999999997745668	WITHOUT_CLASSIFICATION	2.2543319733046133E-9	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999998421912347	WITHOUT_CLASSIFICATION	1.5780876514996957E-7	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999989059572723	WITHOUT_CLASSIFICATION	1.0940427276579637E-6	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999989059572723	WITHOUT_CLASSIFICATION	1.0940427276579637E-6	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999998718327281	WITHOUT_CLASSIFICATION	1.281672718018851E-7	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.999999989783657	WITHOUT_CLASSIFICATION	1.0216343090182374E-8	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.999999941835709	WITHOUT_CLASSIFICATION	5.8164291063552095E-8	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.999999986483262	WITHOUT_CLASSIFICATION	1.3516737958108912E-8	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999998195681657	WITHOUT_CLASSIFICATION	1.8043183430367867E-7	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999999101412298	WITHOUT_CLASSIFICATION	8.985877021917998E-8	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999991650678347	WITHOUT_CLASSIFICATION	8.349321652588181E-7	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999997575331271	WITHOUT_CLASSIFICATION	2.424668730052167E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999472208744	WITHOUT_CLASSIFICATION	5.2779125553125395E-8	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999472208744	WITHOUT_CLASSIFICATION	5.2779125553125395E-8	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999997831296221	WITHOUT_CLASSIFICATION	2.1687037796785733E-7	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999957876290715	WITHOUT_CLASSIFICATION	4.2123709285738946E-6	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999999821262723	WITHOUT_CLASSIFICATION	1.787372772713563E-8	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999999765498132	WITHOUT_CLASSIFICATION	2.3450186778009173E-8	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999999708207234	WITHOUT_CLASSIFICATION	2.9179276535771204E-8	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999999962456149	WITHOUT_CLASSIFICATION	3.754385048936317E-9	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999998861309	WITHOUT_CLASSIFICATION	1.1386910987437127E-10	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999179142625	WITHOUT_CLASSIFICATION	8.208573749232916E-8	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999998748880572	WITHOUT_CLASSIFICATION	1.2511194276740348E-7	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9998718189358667	WITHOUT_CLASSIFICATION	1.2818106413319056E-4	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999858819051182	WITHOUT_CLASSIFICATION	1.4118094881820195E-5	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999981620752557	WITHOUT_CLASSIFICATION	1.8379247443067568E-6	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999999768314423	WITHOUT_CLASSIFICATION	2.316855777165215E-8	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999984283861609	WITHOUT_CLASSIFICATION	1.5716138390361349E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999984283861609	WITHOUT_CLASSIFICATION	1.5716138390361349E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999997391348269	WITHOUT_CLASSIFICATION	2.608651731050204E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999999215207843	WITHOUT_CLASSIFICATION	7.847921563458011E-8	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9998395904366344	WITHOUT_CLASSIFICATION	1.6040956336569787E-4	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999999962189511	WITHOUT_CLASSIFICATION	3.781048872016267E-9	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999955997831	WITHOUT_CLASSIFICATION	4.400216942041591E-9	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999999520421706	WITHOUT_CLASSIFICATION	4.795782945902175E-8	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999980641591957	WITHOUT_CLASSIFICATION	1.9358408043283654E-6	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999983321693137	WITHOUT_CLASSIFICATION	1.6678306862856577E-6	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999964297035125	WITHOUT_CLASSIFICATION	3.5702964875644606E-6	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999990249101981	WITHOUT_CLASSIFICATION	9.75089801911065E-7	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999998191260714	WITHOUT_CLASSIFICATION	1.8087392857448447E-7	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999996691581065	WITHOUT_CLASSIFICATION	3.308418935458787E-7	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999680972421082	WITHOUT_CLASSIFICATION	3.190275789182187E-5	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999817882055	WITHOUT_CLASSIFICATION	1.821179454860703E-8	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999986039384464	WITHOUT_CLASSIFICATION	1.396061553688591E-6	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999770522574	WITHOUT_CLASSIFICATION	2.2947742502387968E-8	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999998617840339	WITHOUT_CLASSIFICATION	1.3821596619994735E-7	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999999632649489	WITHOUT_CLASSIFICATION	3.6735051197464295E-8	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.999999994271465	WITHOUT_CLASSIFICATION	5.7285349855298584E-9	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999999948050016	WITHOUT_CLASSIFICATION	5.194998397716544E-9	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9999990894947504	WITHOUT_CLASSIFICATION	9.105052497306677E-7	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999997222664342	WITHOUT_CLASSIFICATION	2.777335657827635E-7	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999998436810282	WITHOUT_CLASSIFICATION	1.5631897171144654E-7	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.999999895248557	WITHOUT_CLASSIFICATION	1.0475144303027177E-7	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9993081371739604	WITHOUT_CLASSIFICATION	6.918628260395881E-4	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999993138050626	WITHOUT_CLASSIFICATION	6.861949374092307E-7	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999999455083637	WITHOUT_CLASSIFICATION	5.449163623690137E-8	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999999051842025	WITHOUT_CLASSIFICATION	9.481579755455567E-8	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999999073760633	WITHOUT_CLASSIFICATION	9.262393682970173E-8	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999992562792578	WITHOUT_CLASSIFICATION	7.437207420806024E-7	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999999091360559	WITHOUT_CLASSIFICATION	9.086394421994773E-8	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999999761253808	WITHOUT_CLASSIFICATION	2.3874619145980786E-8	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999998211727624	WITHOUT_CLASSIFICATION	1.7882723765183164E-7	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999998190151255	WITHOUT_CLASSIFICATION	1.809848745872459E-7	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999992136595474	WITHOUT_CLASSIFICATION	7.863404527343899E-7	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999758063343	WITHOUT_CLASSIFICATION	2.4193665671639374E-8	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999980303287825	WITHOUT_CLASSIFICATION	1.9696712173748015E-6	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999980006012718	WITHOUT_CLASSIFICATION	1.9993987282405564E-6	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999957791597989	WITHOUT_CLASSIFICATION	4.220840201104409E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999993902536642	WITHOUT_CLASSIFICATION	6.097463358033835E-7	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999999805548888	WITHOUT_CLASSIFICATION	1.944511125501008E-8	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999999753083857	WITHOUT_CLASSIFICATION	2.46916144001428E-8	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999912164068308	WITHOUT_CLASSIFICATION	8.783593169263325E-6	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999999900055636	WITHOUT_CLASSIFICATION	9.994436429003793E-9	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9999897556566643	WITHOUT_CLASSIFICATION	1.0244343335721892E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999999546565544	WITHOUT_CLASSIFICATION	4.534344560266795E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999997953887675	WITHOUT_CLASSIFICATION	2.0461123257289605E-7	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999885850022	WITHOUT_CLASSIFICATION	1.1414997961999519E-8	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999942753434502	WITHOUT_CLASSIFICATION	5.724656549773729E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999728958294	WITHOUT_CLASSIFICATION	2.7104170613554797E-8	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999728958294	WITHOUT_CLASSIFICATION	2.7104170613554797E-8	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999999955169148	WITHOUT_CLASSIFICATION	4.483085235137437E-9	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999996215679529	WITHOUT_CLASSIFICATION	3.7843204726650907E-7	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999990144946082	WITHOUT_CLASSIFICATION	9.855053918218173E-7	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999997750980977	WITHOUT_CLASSIFICATION	2.2490190235071606E-7	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999996549973553	WITHOUT_CLASSIFICATION	3.450026446473357E-7	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999996042986453	WITHOUT_CLASSIFICATION	3.9570135460828476E-7	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999997453691389	WITHOUT_CLASSIFICATION	2.546308610861714E-7	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.999999942079377	WITHOUT_CLASSIFICATION	5.7920622883281615E-8	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.999999992812614	WITHOUT_CLASSIFICATION	7.187386015381425E-9	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999997675195108	WITHOUT_CLASSIFICATION	2.3248048914410725E-7	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999999742185902	WITHOUT_CLASSIFICATION	2.578140977344211E-8	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999999742185902	WITHOUT_CLASSIFICATION	2.578140977344211E-8	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999999742185902	WITHOUT_CLASSIFICATION	2.578140977344211E-8	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999942627574	WITHOUT_CLASSIFICATION	5.737242581351836E-9	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999999842855333	WITHOUT_CLASSIFICATION	1.5714466777896947E-8	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999998770251056	WITHOUT_CLASSIFICATION	1.2297489437972375E-7	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999684437194	WITHOUT_CLASSIFICATION	3.155628054551293E-8	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999684437194	WITHOUT_CLASSIFICATION	3.155628054551293E-8	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999999295855995	WITHOUT_CLASSIFICATION	7.041440051134669E-8	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.999999079493188	WITHOUT_CLASSIFICATION	9.205068121442859E-7	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999989272619368	WITHOUT_CLASSIFICATION	1.0727380632281638E-6	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999998869443373	WITHOUT_CLASSIFICATION	1.130556627745464E-7	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999998075931585	WITHOUT_CLASSIFICATION	1.924068415225128E-7	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999974845382884	WITHOUT_CLASSIFICATION	2.515461711617355E-6	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999997924010671	WITHOUT_CLASSIFICATION	2.0759893291879506E-7	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999999317393651	WITHOUT_CLASSIFICATION	6.826063487583367E-8	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999997612822539	WITHOUT_CLASSIFICATION	2.387177461566809E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999999640990876	WITHOUT_CLASSIFICATION	3.590091226980856E-8	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999999640990876	WITHOUT_CLASSIFICATION	3.590091226980856E-8	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999978740981439	WITHOUT_CLASSIFICATION	2.1259018561100827E-6	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999936846673246	WITHOUT_CLASSIFICATION	6.315332675408642E-6	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999992560329266	WITHOUT_CLASSIFICATION	7.439670733832566E-7	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999992752541035	WITHOUT_CLASSIFICATION	7.247458965169853E-7	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999999731422934	WITHOUT_CLASSIFICATION	2.685770660006455E-8	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999996434461007	WITHOUT_CLASSIFICATION	3.5655389926654677E-7	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999986715934914	WITHOUT_CLASSIFICATION	1.3284065086184039E-6	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999992126893378	WITHOUT_CLASSIFICATION	7.87310662131417E-7	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999974208625938	WITHOUT_CLASSIFICATION	2.579137406209984E-6	TEST
// POP	WITHOUT_CLASSIFICATION	0.9999941986680138	WITHOUT_CLASSIFICATION	5.801331986185739E-6	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999998891000246	WITHOUT_CLASSIFICATION	1.1089997542586463E-7	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999958820308464	WITHOUT_CLASSIFICATION	4.11796915354609E-6	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9999974418611901	WITHOUT_CLASSIFICATION	2.558138809935038E-6	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.999999749926828	WITHOUT_CLASSIFICATION	2.500731720000745E-7	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999937953716361	WITHOUT_CLASSIFICATION	6.204628363916731E-6	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999999854036099	WITHOUT_CLASSIFICATION	1.4596390196005597E-8	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999997895624261	WITHOUT_CLASSIFICATION	2.1043757398863087E-7	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999503111715128	WITHOUT_CLASSIFICATION	4.968882848725577E-5	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999998342584423	WITHOUT_CLASSIFICATION	1.6574155764166225E-7	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999902838879	WITHOUT_CLASSIFICATION	9.71611211556095E-9	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.999997319361068	WITHOUT_CLASSIFICATION	2.680638932047067E-6	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999999267354917	WITHOUT_CLASSIFICATION	7.326450837528041E-8	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999996382668556	WITHOUT_CLASSIFICATION	3.617331444739502E-7	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999865086167408	WITHOUT_CLASSIFICATION	1.3491383259091998E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999985264593086	WITHOUT_CLASSIFICATION	1.4735406913683768E-6	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999999159063027	WITHOUT_CLASSIFICATION	8.409369741779742E-8	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999996388322918	WITHOUT_CLASSIFICATION	3.611677081976823E-7	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.999997342241846	WITHOUT_CLASSIFICATION	2.6577581541020025E-6	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999486178885	WITHOUT_CLASSIFICATION	5.138211141378992E-8	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999988080764659	WITHOUT_CLASSIFICATION	1.1919235340359078E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999777879997923	WITHOUT_CLASSIFICATION	2.221200020773355E-5	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999994405729926	WITHOUT_CLASSIFICATION	5.594270073743485E-7	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.999998571187686	WITHOUT_CLASSIFICATION	1.4288123139488246E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999777879997923	WITHOUT_CLASSIFICATION	2.221200020773355E-5	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999995554980119	WITHOUT_CLASSIFICATION	4.4450198815521244E-7	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999941739912261	WITHOUT_CLASSIFICATION	5.826008773846129E-6	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999954826768511	WITHOUT_CLASSIFICATION	4.517323148913324E-6	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999993024508533	WITHOUT_CLASSIFICATION	6.97549146553604E-7	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999997280383132	WITHOUT_CLASSIFICATION	2.719616867467689E-7	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999998183711062	WITHOUT_CLASSIFICATION	1.8162889375005527E-7	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999999152286919	WITHOUT_CLASSIFICATION	8.477130804484227E-8	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999984681222306	WITHOUT_CLASSIFICATION	1.5318777693833851E-6	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999970089649576	WITHOUT_CLASSIFICATION	2.9910350425098394E-6	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999915141570335	WITHOUT_CLASSIFICATION	8.485842966530112E-6	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999889735608187	WITHOUT_CLASSIFICATION	1.102643918131118E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.999994555213006	WITHOUT_CLASSIFICATION	5.4447869939711E-6	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999957829277718	WITHOUT_CLASSIFICATION	4.217072228172884E-6	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999995273740856	WITHOUT_CLASSIFICATION	4.726259144176887E-7	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999957680723834	WITHOUT_CLASSIFICATION	4.231927616508686E-6	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999980526626674	WITHOUT_CLASSIFICATION	1.9473373325873537E-6	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999983122340523	WITHOUT_CLASSIFICATION	1.6877659475997398E-6	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999986643170039	WITHOUT_CLASSIFICATION	1.3356829960819304E-6	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999995363951469	WITHOUT_CLASSIFICATION	4.63604853050761E-7	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999833311655499	WITHOUT_CLASSIFICATION	1.6668834450060326E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999977134144544	WITHOUT_CLASSIFICATION	2.2865855455328903E-6	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999991784807496	WITHOUT_CLASSIFICATION	8.215192504372736E-7	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999920747740755	WITHOUT_CLASSIFICATION	7.9252259245883E-6	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999969454011025	WITHOUT_CLASSIFICATION	3.0545988976118857E-6	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999855765060554	WITHOUT_CLASSIFICATION	1.442349394474726E-5	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999998821310936	WITHOUT_CLASSIFICATION	1.1786890643703304E-7	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999945259191115	WITHOUT_CLASSIFICATION	5.474080888500199E-6	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999992368693174	WITHOUT_CLASSIFICATION	7.6313068272573E-7	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999999239948342	WITHOUT_CLASSIFICATION	7.600516580451856E-8	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999999159528202	WITHOUT_CLASSIFICATION	8.404717978491327E-8	TEST
// hash	WITHOUT_CLASSIFICATION	0.999996426128487	WITHOUT_CLASSIFICATION	3.573871512944562E-6	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999752292379094	WITHOUT_CLASSIFICATION	2.4770762090620917E-5	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999736436067502	WITHOUT_CLASSIFICATION	2.635639324974957E-5	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999999492615892	WITHOUT_CLASSIFICATION	5.07384108129233E-8	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999996997092361	WITHOUT_CLASSIFICATION	3.002907639323061E-7	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999994995336106	WITHOUT_CLASSIFICATION	5.004663894032658E-7	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999995878595969	WITHOUT_CLASSIFICATION	4.121404030893789E-7	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9999778876533191	WITHOUT_CLASSIFICATION	2.2112346680857274E-5	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999999555909784	WITHOUT_CLASSIFICATION	4.440902154349898E-8	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999995844139071	WITHOUT_CLASSIFICATION	4.155860928787537E-7	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999988354311194	WITHOUT_CLASSIFICATION	1.1645688805034578E-6	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999996244233277	WITHOUT_CLASSIFICATION	3.7557667226305866E-7	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999990074000855	WITHOUT_CLASSIFICATION	9.925999144920723E-7	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999998943864035	WITHOUT_CLASSIFICATION	1.0561359645792602E-7	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999996746722204	WITHOUT_CLASSIFICATION	3.2532777969950925E-7	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999991795734742	WITHOUT_CLASSIFICATION	8.204265258507746E-7	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999998161311993	WITHOUT_CLASSIFICATION	1.8386880084314467E-7	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999994558834469	WITHOUT_CLASSIFICATION	5.441165531947588E-7	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999998178641019	WITHOUT_CLASSIFICATION	1.8213589804756028E-7	TEST
// space	WITHOUT_CLASSIFICATION	0.9999997935815736	WITHOUT_CLASSIFICATION	2.0641842647315925E-7	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.999977947751988	WITHOUT_CLASSIFICATION	2.2052248011936842E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.999996605390858	WITHOUT_CLASSIFICATION	3.3946091420174412E-6	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999999813020699	WITHOUT_CLASSIFICATION	1.8697930102243865E-8	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999998178641019	WITHOUT_CLASSIFICATION	1.8213589804756028E-7	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999616118980585	WITHOUT_CLASSIFICATION	3.838810194139067E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999616118980585	WITHOUT_CLASSIFICATION	3.838810194139067E-5	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999883326501033	WITHOUT_CLASSIFICATION	1.1667349896719622E-5	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999998654143174	WITHOUT_CLASSIFICATION	1.345856825547608E-7	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999999722771458	WITHOUT_CLASSIFICATION	2.7722854157849754E-8	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999994686122625	WITHOUT_CLASSIFICATION	5.313877375896978E-7	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999988673931182	WITHOUT_CLASSIFICATION	1.1326068818326847E-6	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999999233309367	WITHOUT_CLASSIFICATION	7.66690632327618E-8	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999996942344462	WITHOUT_CLASSIFICATION	3.057655538518689E-7	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9834417630415485	WITHOUT_CLASSIFICATION	0.016558236958451506	TEST
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999999716577191	WITHOUT_CLASSIFICATION	2.8342280807307618E-8	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999992896843222	WITHOUT_CLASSIFICATION	7.103156778820428E-7	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999983995729292	WITHOUT_CLASSIFICATION	1.6004270708044065E-6	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999878642917	WITHOUT_CLASSIFICATION	1.2135708374051783E-8	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.999998621266902	WITHOUT_CLASSIFICATION	1.37873309810448E-6	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999977310352192	WITHOUT_CLASSIFICATION	2.2689647808111335E-6	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999982513737135	WITHOUT_CLASSIFICATION	1.7486262864403431E-6	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.999997758682055	WITHOUT_CLASSIFICATION	2.2413179450377804E-6	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999998298655081	WITHOUT_CLASSIFICATION	1.701344918739984E-7	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999974199429926	WITHOUT_CLASSIFICATION	2.580057007386653E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999974199429926	WITHOUT_CLASSIFICATION	2.580057007386653E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999974199429926	WITHOUT_CLASSIFICATION	2.580057007386653E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999974199429926	WITHOUT_CLASSIFICATION	2.580057007386653E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999974199429926	WITHOUT_CLASSIFICATION	2.580057007386653E-5	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999990960958792	WITHOUT_CLASSIFICATION	9.03904120877064E-7	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999979219372696	WITHOUT_CLASSIFICATION	2.0780627304612935E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999947204301947	WITHOUT_CLASSIFICATION	5.279569805312586E-6	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999323394985	WITHOUT_CLASSIFICATION	6.766050144419274E-8	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999946434807645	WITHOUT_CLASSIFICATION	5.356519235496778E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999780628943	WITHOUT_CLASSIFICATION	2.1937105732621157E-8	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999992718484051	WITHOUT_CLASSIFICATION	7.28151594899437E-7	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.999999808126034	WITHOUT_CLASSIFICATION	1.9187396607356592E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.999999827509127	WITHOUT_CLASSIFICATION	1.7249087303523956E-7	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999995688054576	WITHOUT_CLASSIFICATION	4.311945424910282E-7	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999995878169855	WITHOUT_CLASSIFICATION	4.121830145517529E-7	TEST
// line 303	WITHOUT_CLASSIFICATION	0.99999924992103	WITHOUT_CLASSIFICATION	7.500789700996725E-7	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999993417438722	WITHOUT_CLASSIFICATION	6.582561277995597E-7	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999994157390277	WITHOUT_CLASSIFICATION	5.842609722808158E-7	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999994441590315	WITHOUT_CLASSIFICATION	5.558409683443133E-7	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999992807000804	WITHOUT_CLASSIFICATION	7.192999197700737E-7	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999993144798652	WITHOUT_CLASSIFICATION	6.855201348230605E-7	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999993417823321	WITHOUT_CLASSIFICATION	6.582176679516214E-7	TEST
// line 344	WITHOUT_CLASSIFICATION	0.999999358116302	WITHOUT_CLASSIFICATION	6.418836980464431E-7	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999993561441031	WITHOUT_CLASSIFICATION	6.438558969113912E-7	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999993525684435	WITHOUT_CLASSIFICATION	6.474315564633779E-7	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999994117384999	WITHOUT_CLASSIFICATION	5.882615000651816E-7	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999993223646032	WITHOUT_CLASSIFICATION	6.776353968037269E-7	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999993621996793	WITHOUT_CLASSIFICATION	6.378003206076976E-7	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999992398053464	WITHOUT_CLASSIFICATION	7.60194653669706E-7	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999996450848315	WITHOUT_CLASSIFICATION	3.549151685164065E-7	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999996158338241	WITHOUT_CLASSIFICATION	3.8416617583223483E-7	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999996513374336	WITHOUT_CLASSIFICATION	3.4866256637244186E-7	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999996756034063	WITHOUT_CLASSIFICATION	3.243965936521896E-7	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999995367907196	WITHOUT_CLASSIFICATION	4.632092804161203E-7	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999995819161563	WITHOUT_CLASSIFICATION	4.1808384373814767E-7	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999995024600825	WITHOUT_CLASSIFICATION	4.975399174359382E-7	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999994925665272	WITHOUT_CLASSIFICATION	5.074334728393553E-7	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999996264560231	WITHOUT_CLASSIFICATION	3.735439768384381E-7	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999996104080715	WITHOUT_CLASSIFICATION	3.895919284635765E-7	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999996664425529	WITHOUT_CLASSIFICATION	3.3355744718228925E-7	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999996269016961	WITHOUT_CLASSIFICATION	3.7309830394607435E-7	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999996572086719	WITHOUT_CLASSIFICATION	3.4279132815567154E-7	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999996548105823	WITHOUT_CLASSIFICATION	3.4518941772675425E-7	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999996069963496	WITHOUT_CLASSIFICATION	3.9300365040550664E-7	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999995941940801	WITHOUT_CLASSIFICATION	4.058059198242042E-7	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999996124318229	WITHOUT_CLASSIFICATION	3.87568177106829E-7	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999995356408922	WITHOUT_CLASSIFICATION	4.6435910778811985E-7	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999995591917943	WITHOUT_CLASSIFICATION	4.408082056483996E-7	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999996063474205	WITHOUT_CLASSIFICATION	3.936525795470996E-7	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999996162272137	WITHOUT_CLASSIFICATION	3.8377278633156056E-7	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999996482757927	WITHOUT_CLASSIFICATION	3.517242072368468E-7	TEST
// line 510	WITHOUT_CLASSIFICATION	0.999999689246029	WITHOUT_CLASSIFICATION	3.1075397098244736E-7	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999996313387437	WITHOUT_CLASSIFICATION	3.6866125632509704E-7	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999995793724769	WITHOUT_CLASSIFICATION	4.206275231407438E-7	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999947204301947	WITHOUT_CLASSIFICATION	5.279569805312586E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999995407409359	WITHOUT_CLASSIFICATION	4.592590641282263E-7	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999996290494453	WITHOUT_CLASSIFICATION	3.7095055476627706E-7	TEST
// line 543	WITHOUT_CLASSIFICATION	0.999999513777088	WITHOUT_CLASSIFICATION	4.862229120331703E-7	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999996420903557	WITHOUT_CLASSIFICATION	3.579096442391079E-7	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999996380639348	WITHOUT_CLASSIFICATION	3.6193606519265594E-7	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999995902531466	WITHOUT_CLASSIFICATION	4.097468534793181E-7	TEST
// line 563	WITHOUT_CLASSIFICATION	0.999999530048948	WITHOUT_CLASSIFICATION	4.6995105195666426E-7	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999996374665011	WITHOUT_CLASSIFICATION	3.625334988660539E-7	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999996079756643	WITHOUT_CLASSIFICATION	3.92024335650347E-7	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999996442473261	WITHOUT_CLASSIFICATION	3.5575267387814754E-7	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999996356562314	WITHOUT_CLASSIFICATION	3.6434376859607556E-7	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999996349766279	WITHOUT_CLASSIFICATION	3.6502337218146476E-7	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999996074109558	WITHOUT_CLASSIFICATION	3.925890442295215E-7	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999996075724374	WITHOUT_CLASSIFICATION	3.9242756252956476E-7	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999996404740351	WITHOUT_CLASSIFICATION	3.5952596491157936E-7	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999996831826516	WITHOUT_CLASSIFICATION	3.168173484140392E-7	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999995439875469	WITHOUT_CLASSIFICATION	4.5601245308837245E-7	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999996489295884	WITHOUT_CLASSIFICATION	3.5107041163943427E-7	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999995145517828	WITHOUT_CLASSIFICATION	4.854482171163114E-7	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999994731436296	WITHOUT_CLASSIFICATION	5.268563704056411E-7	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999995055898127	WITHOUT_CLASSIFICATION	4.944101874566373E-7	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999996181438736	WITHOUT_CLASSIFICATION	3.818561263414128E-7	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999996370927828	WITHOUT_CLASSIFICATION	3.6290721722952626E-7	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999996085583016	WITHOUT_CLASSIFICATION	3.914416983717683E-7	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999996414236072	WITHOUT_CLASSIFICATION	3.5857639283861615E-7	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999996586337219	WITHOUT_CLASSIFICATION	3.4136627808495406E-7	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999996085026606	WITHOUT_CLASSIFICATION	3.914973394812152E-7	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999995762973797	WITHOUT_CLASSIFICATION	4.2370262028451746E-7	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999996381827007	WITHOUT_CLASSIFICATION	3.61817299303867E-7	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999996574537121	WITHOUT_CLASSIFICATION	3.4254628797442E-7	TEST
// line 720	WITHOUT_CLASSIFICATION	0.999999548535147	WITHOUT_CLASSIFICATION	4.514648528710978E-7	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999995925171639	WITHOUT_CLASSIFICATION	4.0748283610191226E-7	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999994843977617	WITHOUT_CLASSIFICATION	5.156022382922978E-7	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999994581384481	WITHOUT_CLASSIFICATION	5.4186155180855E-7	TEST
// line 735	WITHOUT_CLASSIFICATION	0.999999535854916	WITHOUT_CLASSIFICATION	4.6414508407194326E-7	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999994835478145	WITHOUT_CLASSIFICATION	5.164521854824263E-7	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999996338399472	WITHOUT_CLASSIFICATION	3.6616005285245176E-7	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999996518397085	WITHOUT_CLASSIFICATION	3.4816029136457935E-7	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999996444645848	WITHOUT_CLASSIFICATION	3.5553541516524825E-7	TEST
// line 760	WITHOUT_CLASSIFICATION	0.999999634115799	WITHOUT_CLASSIFICATION	3.6588420106095925E-7	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999995261214247	WITHOUT_CLASSIFICATION	4.7387857517919265E-7	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999996047002476	WITHOUT_CLASSIFICATION	3.952997523718382E-7	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999995820195868	WITHOUT_CLASSIFICATION	4.179804132039798E-7	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999996432205791	WITHOUT_CLASSIFICATION	3.567794209336411E-7	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999995710041409	WITHOUT_CLASSIFICATION	4.289958590234456E-7	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999996093695369	WITHOUT_CLASSIFICATION	3.906304630034242E-7	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999995720630093	WITHOUT_CLASSIFICATION	4.279369906616063E-7	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999995931614717	WITHOUT_CLASSIFICATION	4.0683852828387056E-7	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999995846790822	WITHOUT_CLASSIFICATION	4.153209178032792E-7	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999993531915663	WITHOUT_CLASSIFICATION	6.468084338058588E-7	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999995769191552	WITHOUT_CLASSIFICATION	4.2308084480687077E-7	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999995206842136	WITHOUT_CLASSIFICATION	4.793157863228019E-7	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999996415454645	WITHOUT_CLASSIFICATION	3.584545355363258E-7	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999996238709424	WITHOUT_CLASSIFICATION	3.7612905748895574E-7	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999995092323251	WITHOUT_CLASSIFICATION	4.907676749324506E-7	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999995330331762	WITHOUT_CLASSIFICATION	4.669668236903707E-7	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999994589107699	WITHOUT_CLASSIFICATION	5.410892301857932E-7	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999994507779172	WITHOUT_CLASSIFICATION	5.492220828279273E-7	TEST
// line 836	WITHOUT_CLASSIFICATION	0.999999467951941	WITHOUT_CLASSIFICATION	5.320480589886623E-7	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999993972826597	WITHOUT_CLASSIFICATION	6.027173402287007E-7	TEST
// line 842	WITHOUT_CLASSIFICATION	0.999999541980237	WITHOUT_CLASSIFICATION	4.5801976302722216E-7	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999995808749165	WITHOUT_CLASSIFICATION	4.191250835206465E-7	TEST
// line 852	WITHOUT_CLASSIFICATION	0.999999572363439	WITHOUT_CLASSIFICATION	4.276365610362343E-7	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999996046765978	WITHOUT_CLASSIFICATION	3.9532340225356395E-7	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999995787516228	WITHOUT_CLASSIFICATION	4.212483771685127E-7	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999995906833039	WITHOUT_CLASSIFICATION	4.0931669612694286E-7	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999995950427758	WITHOUT_CLASSIFICATION	4.049572242550272E-7	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999996219667816	WITHOUT_CLASSIFICATION	3.780332184421691E-7	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999995712721863	WITHOUT_CLASSIFICATION	4.2872781364177755E-7	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999994473125366	WITHOUT_CLASSIFICATION	5.52687463346382E-7	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999994001015344	WITHOUT_CLASSIFICATION	5.998984655073682E-7	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999995599002387	WITHOUT_CLASSIFICATION	4.400997612536669E-7	TEST
// line 899	WITHOUT_CLASSIFICATION	0.999999539327448	WITHOUT_CLASSIFICATION	4.6067255191672613E-7	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999993078402465	WITHOUT_CLASSIFICATION	6.921597535905636E-7	TEST
// line 907	WITHOUT_CLASSIFICATION	0.999999583345617	WITHOUT_CLASSIFICATION	4.166543829869236E-7	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999996168151777	WITHOUT_CLASSIFICATION	3.831848223926039E-7	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999994591683372	WITHOUT_CLASSIFICATION	5.408316626712736E-7	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999993503701945	WITHOUT_CLASSIFICATION	6.496298056281448E-7	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999995118610991	WITHOUT_CLASSIFICATION	4.881389008094142E-7	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999993512667742	WITHOUT_CLASSIFICATION	6.487332258164471E-7	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999994309635907	WITHOUT_CLASSIFICATION	5.690364093490792E-7	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999995568107656	WITHOUT_CLASSIFICATION	4.431892344370105E-7	TEST
// line 944	WITHOUT_CLASSIFICATION	0.999999552300495	WITHOUT_CLASSIFICATION	4.47699505116146E-7	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999995357479842	WITHOUT_CLASSIFICATION	4.6425201572546344E-7	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999995978712194	WITHOUT_CLASSIFICATION	4.02128780609324E-7	TEST
// line 960	WITHOUT_CLASSIFICATION	0.999999563251037	WITHOUT_CLASSIFICATION	4.3674896301722197E-7	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999995741370576	WITHOUT_CLASSIFICATION	4.2586294246640615E-7	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999995999203228	WITHOUT_CLASSIFICATION	4.0007967720832427E-7	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999995376679717	WITHOUT_CLASSIFICATION	4.6233202838120965E-7	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999995648463561	WITHOUT_CLASSIFICATION	4.351536439617227E-7	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999995319013464	WITHOUT_CLASSIFICATION	4.6809865360073467E-7	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999995359919545	WITHOUT_CLASSIFICATION	4.640080455408665E-7	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999995468673765	WITHOUT_CLASSIFICATION	4.531326235435168E-7	TEST
// line 996	WITHOUT_CLASSIFICATION	0.99999956364581	WITHOUT_CLASSIFICATION	4.363541900225958E-7	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999995979807008	WITHOUT_CLASSIFICATION	4.020192992664333E-7	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999996470776401	WITHOUT_CLASSIFICATION	3.529223599372683E-7	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999995837380966	WITHOUT_CLASSIFICATION	4.162619032967312E-7	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999996543054813	WITHOUT_CLASSIFICATION	3.456945186221133E-7	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999994975321954	WITHOUT_CLASSIFICATION	5.02467804571217E-7	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.99999940926494	WITHOUT_CLASSIFICATION	5.907350598663884E-7	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999994812050151	WITHOUT_CLASSIFICATION	5.187949847563028E-7	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.999999670989357	WITHOUT_CLASSIFICATION	3.290106429507077E-7	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999996303388249	WITHOUT_CLASSIFICATION	3.6966117506814514E-7	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999995727225306	WITHOUT_CLASSIFICATION	4.2727746944662033E-7	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999996138185038	WITHOUT_CLASSIFICATION	3.861814962893391E-7	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999997188204817	WITHOUT_CLASSIFICATION	2.811795183674986E-7	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999995745249967	WITHOUT_CLASSIFICATION	4.254750033904089E-7	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999996869854918	WITHOUT_CLASSIFICATION	3.1301450816662484E-7	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999996450572325	WITHOUT_CLASSIFICATION	3.5494276751922257E-7	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999995397756517	WITHOUT_CLASSIFICATION	4.602243482767132E-7	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999995472768718	WITHOUT_CLASSIFICATION	4.527231281604976E-7	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999996268598408	WITHOUT_CLASSIFICATION	3.7314015922663755E-7	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999996732720741	WITHOUT_CLASSIFICATION	3.267279259408705E-7	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999994964280194	WITHOUT_CLASSIFICATION	5.035719806655652E-7	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999996959716969	WITHOUT_CLASSIFICATION	3.0402830308383084E-7	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999995853322224	WITHOUT_CLASSIFICATION	4.1466777757781907E-7	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999995290746622	WITHOUT_CLASSIFICATION	4.709253378074655E-7	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999996624633403	WITHOUT_CLASSIFICATION	3.3753665973218454E-7	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999996117830147	WITHOUT_CLASSIFICATION	3.8821698540118486E-7	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999995408549142	WITHOUT_CLASSIFICATION	4.59145085875841E-7	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999995333491132	WITHOUT_CLASSIFICATION	4.6665088686090734E-7	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999995585756302	WITHOUT_CLASSIFICATION	4.414243697225462E-7	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999995635504655	WITHOUT_CLASSIFICATION	4.3644953449083465E-7	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999996503329337	WITHOUT_CLASSIFICATION	3.496670662831558E-7	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999996134273808	WITHOUT_CLASSIFICATION	3.865726191522295E-7	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999996692291695	WITHOUT_CLASSIFICATION	3.3077083047236093E-7	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999996501575642	WITHOUT_CLASSIFICATION	3.498424357868886E-7	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999996620240149	WITHOUT_CLASSIFICATION	3.3797598501939764E-7	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999996862537809	WITHOUT_CLASSIFICATION	3.1374621913606886E-7	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999996543469682	WITHOUT_CLASSIFICATION	3.456530317987775E-7	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999996610694322	WITHOUT_CLASSIFICATION	3.3893056789905906E-7	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999996044821683	WITHOUT_CLASSIFICATION	3.9551783172238274E-7	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999994908519315	WITHOUT_CLASSIFICATION	5.091480685180009E-7	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999995605152592	WITHOUT_CLASSIFICATION	4.394847408726905E-7	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999995975077303	WITHOUT_CLASSIFICATION	4.0249226974216537E-7	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999996271362501	WITHOUT_CLASSIFICATION	3.7286374979552414E-7	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999995981430346	WITHOUT_CLASSIFICATION	4.018569653909182E-7	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999995270658858	WITHOUT_CLASSIFICATION	4.729341142019019E-7	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999994443307574	WITHOUT_CLASSIFICATION	5.556692426446973E-7	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999994745833443	WITHOUT_CLASSIFICATION	5.254166556463421E-7	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999996246680566	WITHOUT_CLASSIFICATION	3.7533194340808726E-7	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999995617152759	WITHOUT_CLASSIFICATION	4.382847240872192E-7	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999994847529939	WITHOUT_CLASSIFICATION	5.152470060373958E-7	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999995701915512	WITHOUT_CLASSIFICATION	4.2980844875096235E-7	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999995748903162	WITHOUT_CLASSIFICATION	4.251096836941846E-7	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999994412309128	WITHOUT_CLASSIFICATION	5.587690872569248E-7	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999995005431541	WITHOUT_CLASSIFICATION	4.994568458935861E-7	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999995194993032	WITHOUT_CLASSIFICATION	4.805006967163194E-7	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999994970379418	WITHOUT_CLASSIFICATION	5.029620582058076E-7	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999994507985905	WITHOUT_CLASSIFICATION	5.492014094842419E-7	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999994567970082	WITHOUT_CLASSIFICATION	5.432029918173608E-7	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999995087582721	WITHOUT_CLASSIFICATION	4.9124172781071E-7	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999995419866421	WITHOUT_CLASSIFICATION	4.5801335790685625E-7	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999994175351229	WITHOUT_CLASSIFICATION	5.824648770013483E-7	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999994282860603	WITHOUT_CLASSIFICATION	5.717139398119285E-7	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999995426083279	WITHOUT_CLASSIFICATION	4.5739167214192495E-7	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999995095441593	WITHOUT_CLASSIFICATION	4.90455840834434E-7	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999995020995889	WITHOUT_CLASSIFICATION	4.979004112439617E-7	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.999999522947946	WITHOUT_CLASSIFICATION	4.770520539504546E-7	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999995530420966	WITHOUT_CLASSIFICATION	4.4695790335064267E-7	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999994128999082	WITHOUT_CLASSIFICATION	5.871000917795087E-7	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999995271384657	WITHOUT_CLASSIFICATION	4.728615342230023E-7	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999994134314546	WITHOUT_CLASSIFICATION	5.86568545313884E-7	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.999999658624875	WITHOUT_CLASSIFICATION	3.4137512498904813E-7	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999994521588593	WITHOUT_CLASSIFICATION	5.478411407982459E-7	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999995292867865	WITHOUT_CLASSIFICATION	4.707132134142991E-7	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999996340782774	WITHOUT_CLASSIFICATION	3.659217225010633E-7	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999995198798483	WITHOUT_CLASSIFICATION	4.801201518224326E-7	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999995578503528	WITHOUT_CLASSIFICATION	4.4214964725499293E-7	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999996801000339	WITHOUT_CLASSIFICATION	3.198999659912037E-7	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999996167311983	WITHOUT_CLASSIFICATION	3.8326880169416585E-7	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999996710035585	WITHOUT_CLASSIFICATION	3.289964415287486E-7	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999996735386073	WITHOUT_CLASSIFICATION	3.2646139268508866E-7	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999996567773026	WITHOUT_CLASSIFICATION	3.432226973411171E-7	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999996208396041	WITHOUT_CLASSIFICATION	3.7916039584034596E-7	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999996449660375	WITHOUT_CLASSIFICATION	3.550339623824146E-7	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999996182987653	WITHOUT_CLASSIFICATION	3.81701234741859E-7	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999996164865788	WITHOUT_CLASSIFICATION	3.8351342124228683E-7	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999995963875579	WITHOUT_CLASSIFICATION	4.036124422172863E-7	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999996809831632	WITHOUT_CLASSIFICATION	3.1901683687175436E-7	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999995408186407	WITHOUT_CLASSIFICATION	4.5918135930837105E-7	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999996628843382	WITHOUT_CLASSIFICATION	3.3711566192040096E-7	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.99999954688119	WITHOUT_CLASSIFICATION	4.531188100472013E-7	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999996468713952	WITHOUT_CLASSIFICATION	3.531286047762441E-7	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999995419806126	WITHOUT_CLASSIFICATION	4.580193874481664E-7	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999996656020159	WITHOUT_CLASSIFICATION	3.3439798407880707E-7	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999996647419057	WITHOUT_CLASSIFICATION	3.35258094325343E-7	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999996531823374	WITHOUT_CLASSIFICATION	3.4681766257425686E-7	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999996274540952	WITHOUT_CLASSIFICATION	3.7254590467933054E-7	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999996794964542	WITHOUT_CLASSIFICATION	3.205035458489116E-7	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999996722121777	WITHOUT_CLASSIFICATION	3.277878223107434E-7	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999996627911817	WITHOUT_CLASSIFICATION	3.3720881824222436E-7	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999996204483207	WITHOUT_CLASSIFICATION	3.79551679285268E-7	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999996060790546	WITHOUT_CLASSIFICATION	3.939209454895189E-7	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999996374697235	WITHOUT_CLASSIFICATION	3.6253027646128456E-7	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999995882581739	WITHOUT_CLASSIFICATION	4.1174182602459287E-7	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999994885426825	WITHOUT_CLASSIFICATION	5.11457317480353E-7	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.99999959698684	WITHOUT_CLASSIFICATION	4.0301315987315955E-7	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999995142200406	WITHOUT_CLASSIFICATION	4.85779959475283E-7	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999994860102415	WITHOUT_CLASSIFICATION	5.139897586388334E-7	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999995101466564	WITHOUT_CLASSIFICATION	4.89853343585806E-7	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999995964893363	WITHOUT_CLASSIFICATION	4.035106636538235E-7	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999996458636424	WITHOUT_CLASSIFICATION	3.541363574883739E-7	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999996162771044	WITHOUT_CLASSIFICATION	3.8372289558325595E-7	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999996626247866	WITHOUT_CLASSIFICATION	3.3737521343826974E-7	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999996508934647	WITHOUT_CLASSIFICATION	3.49106535368667E-7	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.999999584605983	WITHOUT_CLASSIFICATION	4.153940169785665E-7	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999996364328193	WITHOUT_CLASSIFICATION	3.635671806098395E-7	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.999999666711258	WITHOUT_CLASSIFICATION	3.332887419852147E-7	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999996540086782	WITHOUT_CLASSIFICATION	3.4599132177545386E-7	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999996147138637	WITHOUT_CLASSIFICATION	3.85286136335624E-7	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999996507717113	WITHOUT_CLASSIFICATION	3.492282887811408E-7	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999996022428171	WITHOUT_CLASSIFICATION	3.9775718296680307E-7	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999996368001928	WITHOUT_CLASSIFICATION	3.63199807178972E-7	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999995474433774	WITHOUT_CLASSIFICATION	4.5255662264227777E-7	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.999999622912003	WITHOUT_CLASSIFICATION	3.7708799705575905E-7	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999996817179946	WITHOUT_CLASSIFICATION	3.182820054913731E-7	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999996263691466	WITHOUT_CLASSIFICATION	3.7363085341170345E-7	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999996721005494	WITHOUT_CLASSIFICATION	3.278994505253662E-7	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999996354435142	WITHOUT_CLASSIFICATION	3.645564857656085E-7	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999996145307362	WITHOUT_CLASSIFICATION	3.854692638463509E-7	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999996709697331	WITHOUT_CLASSIFICATION	3.2903026689296827E-7	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999996459337128	WITHOUT_CLASSIFICATION	3.540662871268214E-7	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999995667898678	WITHOUT_CLASSIFICATION	4.3321013216511335E-7	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999996257974745	WITHOUT_CLASSIFICATION	3.742025254334207E-7	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999996140545471	WITHOUT_CLASSIFICATION	3.8594545296308806E-7	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999995796053573	WITHOUT_CLASSIFICATION	4.203946427554627E-7	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999991142556652	WITHOUT_CLASSIFICATION	8.85744334682311E-7	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999405310160648	WITHOUT_CLASSIFICATION	5.946898393510941E-5	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.999977796075834	WITHOUT_CLASSIFICATION	2.2203924166032296E-5	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999831242621461	WITHOUT_CLASSIFICATION	1.687573785390588E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999964599322485	WITHOUT_CLASSIFICATION	3.5400677515030654E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999983082566706	WITHOUT_CLASSIFICATION	1.691743329349255E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999956397841062	WITHOUT_CLASSIFICATION	4.360215893823467E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999960442315927	WITHOUT_CLASSIFICATION	3.955768407200337E-6	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999932393564226	WITHOUT_CLASSIFICATION	6.760643577333853E-6	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999935129838031	WITHOUT_CLASSIFICATION	6.487016196789358E-6	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999996660794236	WITHOUT_CLASSIFICATION	3.3392057649907704E-7	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999994938750554	WITHOUT_CLASSIFICATION	5.061249445844432E-7	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999985316825077	WITHOUT_CLASSIFICATION	1.4683174922764147E-6	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.999960354703496	WITHOUT_CLASSIFICATION	3.9645296504099E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999952799394517	WITHOUT_CLASSIFICATION	4.7200605484042824E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999283437034111	WITHOUT_CLASSIFICATION	7.165629658884637E-5	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999669786855886	WITHOUT_CLASSIFICATION	3.302131441141428E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999897985022863	WITHOUT_CLASSIFICATION	1.0201497713670858E-5	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999338561877	WITHOUT_CLASSIFICATION	6.614381236986085E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999796370211	WITHOUT_CLASSIFICATION	2.036297885762393E-8	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999984878962318	WITHOUT_CLASSIFICATION	1.5121037681738167E-6	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999995183777204	WITHOUT_CLASSIFICATION	4.816222795716413E-7	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999998702477008	WITHOUT_CLASSIFICATION	1.2975229923952764E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999753628451	WITHOUT_CLASSIFICATION	2.463715487734456E-8	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999753628451	WITHOUT_CLASSIFICATION	2.463715487734456E-8	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999932930891885	WITHOUT_CLASSIFICATION	6.706910811537023E-6	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999950288134951	WITHOUT_CLASSIFICATION	4.971186504884799E-6	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999959892527831	WITHOUT_CLASSIFICATION	4.010747216987721E-6	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999998415012601	WITHOUT_CLASSIFICATION	1.5849873985807341E-7	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999995537573824	WITHOUT_CLASSIFICATION	4.462426177172489E-7	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999998709869065	WITHOUT_CLASSIFICATION	1.2901309344604166E-7	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999999726984187	WITHOUT_CLASSIFICATION	2.730158128919725E-8	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.999999351613433	WITHOUT_CLASSIFICATION	6.483865671150189E-7	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999998847264415	WITHOUT_CLASSIFICATION	1.1527355845656852E-7	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999996590201699	WITHOUT_CLASSIFICATION	3.4097983015891597E-7	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999954191970267	WITHOUT_CLASSIFICATION	4.58080297328029E-6	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999817913668652	WITHOUT_CLASSIFICATION	1.8208633134868754E-5	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.999999997446365	WITHOUT_CLASSIFICATION	2.553634984695113E-9	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999977265302267	WITHOUT_CLASSIFICATION	2.273469773291223E-6	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999975552153548	WITHOUT_CLASSIFICATION	2.4447846451646386E-6	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999981005457762	WITHOUT_CLASSIFICATION	1.8994542238176016E-6	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999991171948777	WITHOUT_CLASSIFICATION	8.828051224220932E-7	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999990425855712	WITHOUT_CLASSIFICATION	9.574144287587534E-7	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999999795776328	WITHOUT_CLASSIFICATION	2.0422367216224893E-8	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999989728255273	WITHOUT_CLASSIFICATION	1.027174472733154E-6	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.999999997089617	WITHOUT_CLASSIFICATION	2.9103831717606505E-9	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999991116716396	WITHOUT_CLASSIFICATION	8.883283604849851E-7	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9807328907158601	WITHOUT_CLASSIFICATION	0.01926710928413991	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999996904046557	WITHOUT_CLASSIFICATION	3.095953442724013E-7	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9807328907158601	WITHOUT_CLASSIFICATION	0.01926710928413991	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999996379460354	WITHOUT_CLASSIFICATION	3.620539645243369E-7	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999997280019726	WITHOUT_CLASSIFICATION	2.7199802740479767E-7	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999977304123087	WITHOUT_CLASSIFICATION	2.2695876913572495E-6	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999964104692419	WITHOUT_CLASSIFICATION	3.589530758107878E-6	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999998880364994	WITHOUT_CLASSIFICATION	1.1196350055092548E-7	TEST
// foo()	WITHOUT_CLASSIFICATION	0.999998840517913	WITHOUT_CLASSIFICATION	1.1594820869924714E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.999998840517913	WITHOUT_CLASSIFICATION	1.1594820869924714E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.999998840517913	WITHOUT_CLASSIFICATION	1.1594820869924714E-6	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.999998736964195	WITHOUT_CLASSIFICATION	1.2630358050675147E-6	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999924395111405	WITHOUT_CLASSIFICATION	7.5604888596095505E-6	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999999224688162	WITHOUT_CLASSIFICATION	7.753118382708006E-8	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999741267067518	WITHOUT_CLASSIFICATION	2.587329324821401E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999741267067518	WITHOUT_CLASSIFICATION	2.587329324821401E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999741267067518	WITHOUT_CLASSIFICATION	2.587329324821401E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999741267067518	WITHOUT_CLASSIFICATION	2.587329324821401E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999741267067518	WITHOUT_CLASSIFICATION	2.587329324821401E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999741267067518	WITHOUT_CLASSIFICATION	2.587329324821401E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999906961752476	WITHOUT_CLASSIFICATION	9.303824752356215E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999906961752476	WITHOUT_CLASSIFICATION	9.303824752356215E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999906961752476	WITHOUT_CLASSIFICATION	9.303824752356215E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999906961752476	WITHOUT_CLASSIFICATION	9.303824752356215E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999906961752476	WITHOUT_CLASSIFICATION	9.303824752356215E-6	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999836525353741	WITHOUT_CLASSIFICATION	1.6347464625836846E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999836525353741	WITHOUT_CLASSIFICATION	1.6347464625836846E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999836525353741	WITHOUT_CLASSIFICATION	1.6347464625836846E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999836525353741	WITHOUT_CLASSIFICATION	1.6347464625836846E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999836525353741	WITHOUT_CLASSIFICATION	1.6347464625836846E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999811048992258	WITHOUT_CLASSIFICATION	1.8895100774269932E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999811048992258	WITHOUT_CLASSIFICATION	1.8895100774269932E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999811048992258	WITHOUT_CLASSIFICATION	1.8895100774269932E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999811048992258	WITHOUT_CLASSIFICATION	1.8895100774269932E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999811048992258	WITHOUT_CLASSIFICATION	1.8895100774269932E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999811048992258	WITHOUT_CLASSIFICATION	1.8895100774269932E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999944959055024	WITHOUT_CLASSIFICATION	5.5040944976405E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999944959055024	WITHOUT_CLASSIFICATION	5.5040944976405E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999944959055024	WITHOUT_CLASSIFICATION	5.5040944976405E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999944959055024	WITHOUT_CLASSIFICATION	5.5040944976405E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999944959055024	WITHOUT_CLASSIFICATION	5.5040944976405E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999943201413166	WITHOUT_CLASSIFICATION	5.679858683433449E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999943201413166	WITHOUT_CLASSIFICATION	5.679858683433449E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999943201413166	WITHOUT_CLASSIFICATION	5.679858683433449E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999943201413166	WITHOUT_CLASSIFICATION	5.679858683433449E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999943201413166	WITHOUT_CLASSIFICATION	5.679858683433449E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999947204301947	WITHOUT_CLASSIFICATION	5.279569805312586E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999947204301947	WITHOUT_CLASSIFICATION	5.279569805312586E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999947204301947	WITHOUT_CLASSIFICATION	5.279569805312586E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999947204301947	WITHOUT_CLASSIFICATION	5.279569805312586E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999947204301947	WITHOUT_CLASSIFICATION	5.279569805312586E-6	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999323394985	WITHOUT_CLASSIFICATION	6.766050144419274E-8	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999780628943	WITHOUT_CLASSIFICATION	2.1937105732621157E-8	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999992718484051	WITHOUT_CLASSIFICATION	7.28151594899437E-7	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.999999808126034	WITHOUT_CLASSIFICATION	1.9187396607356592E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.999999827509127	WITHOUT_CLASSIFICATION	1.7249087303523956E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999992333283553	WITHOUT_CLASSIFICATION	7.666716447780599E-7	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999993561441031	WITHOUT_CLASSIFICATION	6.438558969113912E-7	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999992398053464	WITHOUT_CLASSIFICATION	7.60194653669706E-7	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999996756034063	WITHOUT_CLASSIFICATION	3.243965936521896E-7	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999995367907196	WITHOUT_CLASSIFICATION	4.632092804161203E-7	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999994436096732	WITHOUT_CLASSIFICATION	5.563903267186133E-7	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999995819161563	WITHOUT_CLASSIFICATION	4.1808384373814767E-7	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999995343050067	WITHOUT_CLASSIFICATION	4.6569499329083775E-7	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999993878839466	WITHOUT_CLASSIFICATION	6.121160534783646E-7	TEST
// line 296	WITHOUT_CLASSIFICATION	0.999999474243612	WITHOUT_CLASSIFICATION	5.257563879899985E-7	TEST
// line 324	WITHOUT_CLASSIFICATION	0.999999270492762	WITHOUT_CLASSIFICATION	7.295072378495055E-7	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999993082116793	WITHOUT_CLASSIFICATION	6.917883207032161E-7	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999993234858878	WITHOUT_CLASSIFICATION	6.765141120803715E-7	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999993421624608	WITHOUT_CLASSIFICATION	6.57837539169989E-7	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999993690647797	WITHOUT_CLASSIFICATION	6.309352203393396E-7	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999992981247097	WITHOUT_CLASSIFICATION	7.018752902809469E-7	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999994127703999	WITHOUT_CLASSIFICATION	5.872296001382068E-7	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999993343774871	WITHOUT_CLASSIFICATION	6.656225128020675E-7	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999993877948782	WITHOUT_CLASSIFICATION	6.12205121720053E-7	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999993355441711	WITHOUT_CLASSIFICATION	6.644558288957279E-7	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999993787991136	WITHOUT_CLASSIFICATION	6.212008863226939E-7	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999993079096074	WITHOUT_CLASSIFICATION	6.920903925861237E-7	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999992042089196	WITHOUT_CLASSIFICATION	7.957910802761646E-7	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999993260485109	WITHOUT_CLASSIFICATION	6.739514891185752E-7	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999994709839386	WITHOUT_CLASSIFICATION	5.290160613414843E-7	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999994459034628	WITHOUT_CLASSIFICATION	5.540965371252058E-7	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999995139619074	WITHOUT_CLASSIFICATION	4.860380926168561E-7	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999996390136281	WITHOUT_CLASSIFICATION	3.6098637192936976E-7	TEST
// line 448	WITHOUT_CLASSIFICATION	0.999999594441569	WITHOUT_CLASSIFICATION	4.055584310120943E-7	TEST
// line 454	WITHOUT_CLASSIFICATION	0.999999639119581	WITHOUT_CLASSIFICATION	3.608804189397003E-7	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999996138020891	WITHOUT_CLASSIFICATION	3.86197910867206E-7	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999996261191506	WITHOUT_CLASSIFICATION	3.73880849479651E-7	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999995957052468	WITHOUT_CLASSIFICATION	4.042947533201811E-7	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999996273901653	WITHOUT_CLASSIFICATION	3.7260983466451363E-7	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999995825874506	WITHOUT_CLASSIFICATION	4.1741254939459365E-7	TEST
// line 488	WITHOUT_CLASSIFICATION	0.999999596556273	WITHOUT_CLASSIFICATION	4.034437270184358E-7	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999995743926305	WITHOUT_CLASSIFICATION	4.2560736943980364E-7	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999996067366121	WITHOUT_CLASSIFICATION	3.9326338791128306E-7	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999994155153672	WITHOUT_CLASSIFICATION	5.844846327221366E-7	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999996176962911	WITHOUT_CLASSIFICATION	3.823037089210361E-7	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999995668853771	WITHOUT_CLASSIFICATION	4.331146229840932E-7	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999996280933816	WITHOUT_CLASSIFICATION	3.71906618309783E-7	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999995659991483	WITHOUT_CLASSIFICATION	4.340008517561955E-7	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999995956201275	WITHOUT_CLASSIFICATION	4.0437987239479526E-7	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999996290494453	WITHOUT_CLASSIFICATION	3.7095055476627706E-7	TEST
// line 543	WITHOUT_CLASSIFICATION	0.999999513777088	WITHOUT_CLASSIFICATION	4.862229120331703E-7	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999996420903557	WITHOUT_CLASSIFICATION	3.579096442391079E-7	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999996374665011	WITHOUT_CLASSIFICATION	3.625334988660539E-7	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999996831826516	WITHOUT_CLASSIFICATION	3.168173484140392E-7	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999996085026606	WITHOUT_CLASSIFICATION	3.914973394812152E-7	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999995634610224	WITHOUT_CLASSIFICATION	4.3653897756949907E-7	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999995762973797	WITHOUT_CLASSIFICATION	4.2370262028451746E-7	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999995820195868	WITHOUT_CLASSIFICATION	4.179804132039798E-7	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999995710041409	WITHOUT_CLASSIFICATION	4.289958590234456E-7	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999996366606431	WITHOUT_CLASSIFICATION	3.6333935699132164E-7	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999996093695369	WITHOUT_CLASSIFICATION	3.906304630034242E-7	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999995720630093	WITHOUT_CLASSIFICATION	4.279369906616063E-7	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999995244032006	WITHOUT_CLASSIFICATION	4.7559679934502556E-7	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999995939746839	WITHOUT_CLASSIFICATION	4.0602531622151303E-7	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999995866236939	WITHOUT_CLASSIFICATION	4.1337630615790384E-7	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999996040061914	WITHOUT_CLASSIFICATION	3.9599380867778654E-7	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999996271392585	WITHOUT_CLASSIFICATION	3.728607414815346E-7	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999996370206939	WITHOUT_CLASSIFICATION	3.6297930606750716E-7	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999996530245878	WITHOUT_CLASSIFICATION	3.469754122593916E-7	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999996157148368	WITHOUT_CLASSIFICATION	3.842851632041887E-7	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999996212797647	WITHOUT_CLASSIFICATION	3.787202352296849E-7	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999995740402673	WITHOUT_CLASSIFICATION	4.259597327662932E-7	TEST
// line 592	WITHOUT_CLASSIFICATION	0.999999550151226	WITHOUT_CLASSIFICATION	4.4984877392892416E-7	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999995879775275	WITHOUT_CLASSIFICATION	4.1202247243843217E-7	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999995729733214	WITHOUT_CLASSIFICATION	4.270266785195272E-7	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999994495557375	WITHOUT_CLASSIFICATION	5.504442624482331E-7	TEST
// line 627	WITHOUT_CLASSIFICATION	0.999999599900725	WITHOUT_CLASSIFICATION	4.000992750986052E-7	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999995068554436	WITHOUT_CLASSIFICATION	4.931445564958241E-7	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999994994441945	WITHOUT_CLASSIFICATION	5.005558055498799E-7	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999994506891208	WITHOUT_CLASSIFICATION	5.493108791870351E-7	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999996046454471	WITHOUT_CLASSIFICATION	3.9535455293792747E-7	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999996643582254	WITHOUT_CLASSIFICATION	3.3564177463568513E-7	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999995977615306	WITHOUT_CLASSIFICATION	4.0223846946914083E-7	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999996085622612	WITHOUT_CLASSIFICATION	3.9143773872174165E-7	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999996344952612	WITHOUT_CLASSIFICATION	3.655047387128788E-7	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999995579262222	WITHOUT_CLASSIFICATION	4.4207377781666044E-7	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999995975275764	WITHOUT_CLASSIFICATION	4.0247242350365334E-7	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999995770610912	WITHOUT_CLASSIFICATION	4.2293890876701587E-7	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999996363902869	WITHOUT_CLASSIFICATION	3.636097131464419E-7	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999995687396627	WITHOUT_CLASSIFICATION	4.3126033732508734E-7	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999995736118753	WITHOUT_CLASSIFICATION	4.263881247211053E-7	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999995035344257	WITHOUT_CLASSIFICATION	4.96465574276761E-7	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999995390134612	WITHOUT_CLASSIFICATION	4.609865387572432E-7	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999995850563944	WITHOUT_CLASSIFICATION	4.14943605575968E-7	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999995643597961	WITHOUT_CLASSIFICATION	4.356402039196201E-7	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999995169505953	WITHOUT_CLASSIFICATION	4.830494047072045E-7	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999995779897622	WITHOUT_CLASSIFICATION	4.220102377693069E-7	TEST
// line 817	WITHOUT_CLASSIFICATION	0.999999643645141	WITHOUT_CLASSIFICATION	3.563548589517786E-7	TEST
// line 842	WITHOUT_CLASSIFICATION	0.999999541980237	WITHOUT_CLASSIFICATION	4.5801976302722216E-7	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999996134073433	WITHOUT_CLASSIFICATION	3.865926566454259E-7	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999995808749165	WITHOUT_CLASSIFICATION	4.191250835206465E-7	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999994001015344	WITHOUT_CLASSIFICATION	5.998984655073682E-7	TEST
// line 899	WITHOUT_CLASSIFICATION	0.999999539327448	WITHOUT_CLASSIFICATION	4.6067255191672613E-7	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999993512667742	WITHOUT_CLASSIFICATION	6.487332258164471E-7	TEST
// line 944	WITHOUT_CLASSIFICATION	0.999999552300495	WITHOUT_CLASSIFICATION	4.47699505116146E-7	TEST
// line 960	WITHOUT_CLASSIFICATION	0.999999563251037	WITHOUT_CLASSIFICATION	4.3674896301722197E-7	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999995319013464	WITHOUT_CLASSIFICATION	4.6809865360073467E-7	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999996470776401	WITHOUT_CLASSIFICATION	3.529223599372683E-7	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999994353105348	WITHOUT_CLASSIFICATION	5.646894651815499E-7	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999994933734213	WITHOUT_CLASSIFICATION	5.066265786718264E-7	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999995427293289	WITHOUT_CLASSIFICATION	4.572706710574065E-7	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999994213994862	WITHOUT_CLASSIFICATION	5.786005139343528E-7	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999993934379044	WITHOUT_CLASSIFICATION	6.065620955430407E-7	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999995926010439	WITHOUT_CLASSIFICATION	4.0739895611697115E-7	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999996338950516	WITHOUT_CLASSIFICATION	3.6610494837829797E-7	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999995900586522	WITHOUT_CLASSIFICATION	4.099413477208035E-7	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999994690603785	WITHOUT_CLASSIFICATION	5.309396215400823E-7	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999995904190726	WITHOUT_CLASSIFICATION	4.095809273575219E-7	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999995571010932	WITHOUT_CLASSIFICATION	4.428989068047534E-7	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999996313685539	WITHOUT_CLASSIFICATION	3.6863144612745346E-7	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999995831859162	WITHOUT_CLASSIFICATION	4.1681408387348205E-7	TEST
// line 887	WITHOUT_CLASSIFICATION	0.99999960767646	WITHOUT_CLASSIFICATION	3.9232354000601784E-7	TEST
// line 890	WITHOUT_CLASSIFICATION	0.999999546232494	WITHOUT_CLASSIFICATION	4.537675060567621E-7	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999994822896137	WITHOUT_CLASSIFICATION	5.177103862704564E-7	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999995274592582	WITHOUT_CLASSIFICATION	4.7254074180454705E-7	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999995553670417	WITHOUT_CLASSIFICATION	4.44632958439763E-7	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999996075050351	WITHOUT_CLASSIFICATION	3.924949647658017E-7	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999995007399499	WITHOUT_CLASSIFICATION	4.992600500969004E-7	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999994699387058	WITHOUT_CLASSIFICATION	5.300612942560706E-7	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999995409079144	WITHOUT_CLASSIFICATION	4.5909208561248117E-7	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999995855793836	WITHOUT_CLASSIFICATION	4.144206164985765E-7	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999995624577919	WITHOUT_CLASSIFICATION	4.3754220807526486E-7	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999995747458289	WITHOUT_CLASSIFICATION	4.2525417106672805E-7	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999995942722267	WITHOUT_CLASSIFICATION	4.057277733110698E-7	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999995653153378	WITHOUT_CLASSIFICATION	4.346846621948941E-7	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999995761716964	WITHOUT_CLASSIFICATION	4.238283035548329E-7	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999993847342602	WITHOUT_CLASSIFICATION	6.152657399043231E-7	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999995384545933	WITHOUT_CLASSIFICATION	4.615454067229043E-7	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999994715258065	WITHOUT_CLASSIFICATION	5.284741934334862E-7	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999994925031824	WITHOUT_CLASSIFICATION	5.074968175938582E-7	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999995938302715	WITHOUT_CLASSIFICATION	4.061697285470666E-7	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999995374548155	WITHOUT_CLASSIFICATION	4.625451845815004E-7	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999996343471627	WITHOUT_CLASSIFICATION	3.6565283737035924E-7	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999996544217838	WITHOUT_CLASSIFICATION	3.455782161166358E-7	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999996627756611	WITHOUT_CLASSIFICATION	3.3722433884996205E-7	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.999999615162795	WITHOUT_CLASSIFICATION	3.84837204977949E-7	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999996947702345	WITHOUT_CLASSIFICATION	3.052297655038056E-7	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.999999652487429	WITHOUT_CLASSIFICATION	3.475125711289553E-7	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999995853322224	WITHOUT_CLASSIFICATION	4.1466777757781907E-7	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999996082455196	WITHOUT_CLASSIFICATION	3.9175448030418006E-7	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999995408549142	WITHOUT_CLASSIFICATION	4.59145085875841E-7	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999996503329337	WITHOUT_CLASSIFICATION	3.496670662831558E-7	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999996501575642	WITHOUT_CLASSIFICATION	3.498424357868886E-7	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999995605152592	WITHOUT_CLASSIFICATION	4.394847408726905E-7	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999995975077303	WITHOUT_CLASSIFICATION	4.0249226974216537E-7	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999996246680566	WITHOUT_CLASSIFICATION	3.7533194340808726E-7	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999995617152759	WITHOUT_CLASSIFICATION	4.382847240872192E-7	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999995457755622	WITHOUT_CLASSIFICATION	4.5422443789971464E-7	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999996638724938	WITHOUT_CLASSIFICATION	3.3612750612429127E-7	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999995878300836	WITHOUT_CLASSIFICATION	4.121699165164212E-7	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.999999612053085	WITHOUT_CLASSIFICATION	3.8794691500386894E-7	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999996212634997	WITHOUT_CLASSIFICATION	3.787365003341557E-7	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999994754053024	WITHOUT_CLASSIFICATION	5.245946975013106E-7	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999996472812857	WITHOUT_CLASSIFICATION	3.527187143766191E-7	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999996544609902	WITHOUT_CLASSIFICATION	3.4553900993604257E-7	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999996329744237	WITHOUT_CLASSIFICATION	3.670255762320111E-7	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999996088288743	WITHOUT_CLASSIFICATION	3.9117112576842493E-7	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999996169519396	WITHOUT_CLASSIFICATION	3.83048060373048E-7	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999995088290519	WITHOUT_CLASSIFICATION	4.911709482132744E-7	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999996464877247	WITHOUT_CLASSIFICATION	3.5351227530967576E-7	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999996169599586	WITHOUT_CLASSIFICATION	3.83040041344211E-7	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999996618636002	WITHOUT_CLASSIFICATION	3.3813639979659287E-7	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999996245349121	WITHOUT_CLASSIFICATION	3.7546508787479025E-7	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999995626534883	WITHOUT_CLASSIFICATION	4.3734651167601126E-7	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999996351051078	WITHOUT_CLASSIFICATION	3.6489489213474276E-7	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999995979296367	WITHOUT_CLASSIFICATION	4.02070363285572E-7	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999996127109585	WITHOUT_CLASSIFICATION	3.8728904148026835E-7	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999996264790232	WITHOUT_CLASSIFICATION	3.735209768437049E-7	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999994629114584	WITHOUT_CLASSIFICATION	5.370885415961846E-7	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999996172531502	WITHOUT_CLASSIFICATION	3.8274684986106163E-7	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999994143498769	WITHOUT_CLASSIFICATION	5.856501230340854E-7	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999995084399262	WITHOUT_CLASSIFICATION	4.915600737160599E-7	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999995949646219	WITHOUT_CLASSIFICATION	4.05035378193516E-7	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999996249385784	WITHOUT_CLASSIFICATION	3.7506142146901473E-7	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999996038253711	WITHOUT_CLASSIFICATION	3.9617462886210525E-7	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999996120908432	WITHOUT_CLASSIFICATION	3.879091568756889E-7	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999996340158602	WITHOUT_CLASSIFICATION	3.659841397867731E-7	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999995001264792	WITHOUT_CLASSIFICATION	4.998735207312404E-7	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999996322381987	WITHOUT_CLASSIFICATION	3.677618013450055E-7	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.999999582908266	WITHOUT_CLASSIFICATION	4.1709173404368697E-7	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999995789817913	WITHOUT_CLASSIFICATION	4.2101820866846295E-7	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999995371360001	WITHOUT_CLASSIFICATION	4.6286399992076675E-7	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999995073527443	WITHOUT_CLASSIFICATION	4.926472556715893E-7	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999995309847454	WITHOUT_CLASSIFICATION	4.690152546528621E-7	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999994773336716	WITHOUT_CLASSIFICATION	5.226663284924591E-7	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999994948050276	WITHOUT_CLASSIFICATION	5.051949724099553E-7	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999995095441593	WITHOUT_CLASSIFICATION	4.90455840834434E-7	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999995271384657	WITHOUT_CLASSIFICATION	4.728615342230023E-7	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999994134314546	WITHOUT_CLASSIFICATION	5.86568545313884E-7	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999996162713245	WITHOUT_CLASSIFICATION	3.8372867543228694E-7	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999996167311983	WITHOUT_CLASSIFICATION	3.8326880169416585E-7	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999996735386073	WITHOUT_CLASSIFICATION	3.2646139268508866E-7	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999996164865788	WITHOUT_CLASSIFICATION	3.8351342124228683E-7	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999995963875579	WITHOUT_CLASSIFICATION	4.036124422172863E-7	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999996204483207	WITHOUT_CLASSIFICATION	3.79551679285268E-7	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999996060790546	WITHOUT_CLASSIFICATION	3.939209454895189E-7	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999994311637772	WITHOUT_CLASSIFICATION	5.688362227225193E-7	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999994607755474	WITHOUT_CLASSIFICATION	5.392244526688211E-7	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999995446702978	WITHOUT_CLASSIFICATION	4.5532970216365854E-7	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999994618362512	WITHOUT_CLASSIFICATION	5.381637487052998E-7	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.999999473497216	WITHOUT_CLASSIFICATION	5.265027840880557E-7	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999993337976933	WITHOUT_CLASSIFICATION	6.662023067447579E-7	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999995470392035	WITHOUT_CLASSIFICATION	4.52960796523441E-7	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999994828317368	WITHOUT_CLASSIFICATION	5.171682632708426E-7	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999995673070309	WITHOUT_CLASSIFICATION	4.3269296908926644E-7	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999995489041196	WITHOUT_CLASSIFICATION	4.510958805336546E-7	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999995063929107	WITHOUT_CLASSIFICATION	4.936070892917513E-7	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.999999527030842	WITHOUT_CLASSIFICATION	4.729691579280882E-7	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999994885564539	WITHOUT_CLASSIFICATION	5.114435461388323E-7	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999995443027538	WITHOUT_CLASSIFICATION	4.5569724618375644E-7	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999995428838173	WITHOUT_CLASSIFICATION	4.571161825831568E-7	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999994887708358	WITHOUT_CLASSIFICATION	5.112291642237235E-7	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999994641722795	WITHOUT_CLASSIFICATION	5.358277205467134E-7	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999995825334036	WITHOUT_CLASSIFICATION	4.1746659641718763E-7	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999996343303661	WITHOUT_CLASSIFICATION	3.656696338826022E-7	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999996606180095	WITHOUT_CLASSIFICATION	3.3938199044733714E-7	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999995869439758	WITHOUT_CLASSIFICATION	4.1305602410560256E-7	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999996169137944	WITHOUT_CLASSIFICATION	3.830862056610324E-7	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999995323535555	WITHOUT_CLASSIFICATION	4.676464444677164E-7	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999995254065335	WITHOUT_CLASSIFICATION	4.745934665751572E-7	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999995401684483	WITHOUT_CLASSIFICATION	4.5983155171667524E-7	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999995953381647	WITHOUT_CLASSIFICATION	4.046618352931884E-7	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999996584442304	WITHOUT_CLASSIFICATION	3.4155576958798296E-7	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999996468498312	WITHOUT_CLASSIFICATION	3.5315016880902794E-7	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999996469024394	WITHOUT_CLASSIFICATION	3.5309756068411155E-7	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999995875738464	WITHOUT_CLASSIFICATION	4.124261535687615E-7	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999994772352031	WITHOUT_CLASSIFICATION	5.227647968512991E-7	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999996752604203	WITHOUT_CLASSIFICATION	3.247395797083436E-7	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.999999621500274	WITHOUT_CLASSIFICATION	3.784997260487654E-7	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999994995735985	WITHOUT_CLASSIFICATION	5.004264016630422E-7	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999995230746193	WITHOUT_CLASSIFICATION	4.769253807738537E-7	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999996215657062	WITHOUT_CLASSIFICATION	3.7843429370668863E-7	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999996730298252	WITHOUT_CLASSIFICATION	3.269701748968429E-7	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999995745528288	WITHOUT_CLASSIFICATION	4.254471711270482E-7	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999995652538121	WITHOUT_CLASSIFICATION	4.347461879291995E-7	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.999999662386287	WITHOUT_CLASSIFICATION	3.376137129700741E-7	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999995142200406	WITHOUT_CLASSIFICATION	4.85779959475283E-7	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999994860102415	WITHOUT_CLASSIFICATION	5.139897586388334E-7	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999996507717113	WITHOUT_CLASSIFICATION	3.492282887811408E-7	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999996652391903	WITHOUT_CLASSIFICATION	3.347608097107006E-7	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999996368001928	WITHOUT_CLASSIFICATION	3.63199807178972E-7	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.999999622912003	WITHOUT_CLASSIFICATION	3.7708799705575905E-7	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999996263691466	WITHOUT_CLASSIFICATION	3.7363085341170345E-7	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999996140545471	WITHOUT_CLASSIFICATION	3.8594545296308806E-7	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999995796053573	WITHOUT_CLASSIFICATION	4.203946427554627E-7	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999996656980686	WITHOUT_CLASSIFICATION	3.343019314292983E-7	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999996727471467	WITHOUT_CLASSIFICATION	3.2725285333945067E-7	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999996069256314	WITHOUT_CLASSIFICATION	3.9307436861386487E-7	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999996287052287	WITHOUT_CLASSIFICATION	3.712947712593054E-7	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999995272256273	WITHOUT_CLASSIFICATION	4.7277437272005783E-7	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.999999489269208	WITHOUT_CLASSIFICATION	5.107307918759963E-7	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999996725527194	WITHOUT_CLASSIFICATION	3.2744728064670316E-7	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999996142405438	WITHOUT_CLASSIFICATION	3.8575945610344117E-7	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999996880115785	WITHOUT_CLASSIFICATION	3.1198842153132547E-7	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999996361855593	WITHOUT_CLASSIFICATION	3.63814440610721E-7	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.999999528803009	WITHOUT_CLASSIFICATION	4.7119699092659186E-7	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999996605710596	WITHOUT_CLASSIFICATION	3.3942894039343853E-7	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999996160276969	WITHOUT_CLASSIFICATION	3.8397230316023926E-7	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999996159113463	WITHOUT_CLASSIFICATION	3.840886536778983E-7	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999996241205986	WITHOUT_CLASSIFICATION	3.758794013778789E-7	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999996154146434	WITHOUT_CLASSIFICATION	3.845853565446475E-7	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999994776859923	WITHOUT_CLASSIFICATION	5.223140076297677E-7	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999995611022731	WITHOUT_CLASSIFICATION	4.388977269902303E-7	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999995236638956	WITHOUT_CLASSIFICATION	4.7633610454120396E-7	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999996706459425	WITHOUT_CLASSIFICATION	3.293540574081408E-7	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999996896369729	WITHOUT_CLASSIFICATION	3.1036302705944086E-7	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999996604263597	WITHOUT_CLASSIFICATION	3.395736402744113E-7	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999996147326122	WITHOUT_CLASSIFICATION	3.8526738773205077E-7	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999996660182249	WITHOUT_CLASSIFICATION	3.339817752022786E-7	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.99999966257797	WITHOUT_CLASSIFICATION	3.3742203002686457E-7	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999996047187211	WITHOUT_CLASSIFICATION	3.9528127888437684E-7	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999996652153117	WITHOUT_CLASSIFICATION	3.347846883333994E-7	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999996400690001	WITHOUT_CLASSIFICATION	3.5993099997076995E-7	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999995614883739	WITHOUT_CLASSIFICATION	4.3851162611241233E-7	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999996169801318	WITHOUT_CLASSIFICATION	3.8301986818767433E-7	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999996222503013	WITHOUT_CLASSIFICATION	3.777496987887899E-7	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999994199268871	WITHOUT_CLASSIFICATION	5.800731128086868E-7	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999996205710932	WITHOUT_CLASSIFICATION	3.7942890680586583E-7	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999995701382652	WITHOUT_CLASSIFICATION	4.298617347175893E-7	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999996419042556	WITHOUT_CLASSIFICATION	3.5809574447495385E-7	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999996028812079	WITHOUT_CLASSIFICATION	3.971187920513316E-7	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999995692734337	WITHOUT_CLASSIFICATION	4.3072656632342204E-7	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999994302808917	WITHOUT_CLASSIFICATION	5.697191084112525E-7	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999996513251066	WITHOUT_CLASSIFICATION	3.486748934629386E-7	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999956397841062	WITHOUT_CLASSIFICATION	4.360215893823467E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999960442315927	WITHOUT_CLASSIFICATION	3.955768407200337E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999985316825077	WITHOUT_CLASSIFICATION	1.4683174922764147E-6	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999952799394517	WITHOUT_CLASSIFICATION	4.7200605484042824E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999283437034111	WITHOUT_CLASSIFICATION	7.165629658884637E-5	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999669786855886	WITHOUT_CLASSIFICATION	3.302131441141428E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999897985022863	WITHOUT_CLASSIFICATION	1.0201497713670858E-5	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999736989381918	WITHOUT_CLASSIFICATION	2.6301061808154905E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999996517901574	WITHOUT_CLASSIFICATION	3.4820984269774993E-7	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999996018714338	WITHOUT_CLASSIFICATION	3.9812856617972733E-7	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999996117927847	WITHOUT_CLASSIFICATION	3.882072152773832E-7	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999996441232829	WITHOUT_CLASSIFICATION	3.558767170839253E-7	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999996341273517	WITHOUT_CLASSIFICATION	3.658726481964947E-7	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999995847079347	WITHOUT_CLASSIFICATION	4.152920652394163E-7	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.999999536626191	WITHOUT_CLASSIFICATION	4.6337380904733903E-7	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999995736988916	WITHOUT_CLASSIFICATION	4.2630110839225216E-7	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999995506144445	WITHOUT_CLASSIFICATION	4.493855555266147E-7	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999995849500334	WITHOUT_CLASSIFICATION	4.1504996657842846E-7	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999995018345729	WITHOUT_CLASSIFICATION	4.981654271014428E-7	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999994456946364	WITHOUT_CLASSIFICATION	5.543053636415244E-7	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999995610695324	WITHOUT_CLASSIFICATION	4.389304675794502E-7	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999995837796976	WITHOUT_CLASSIFICATION	4.1622030242861745E-7	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999996084402178	WITHOUT_CLASSIFICATION	3.915597821906336E-7	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999994928674435	WITHOUT_CLASSIFICATION	5.071325565239997E-7	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999995948569552	WITHOUT_CLASSIFICATION	4.051430448408077E-7	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999995855114523	WITHOUT_CLASSIFICATION	4.144885477432649E-7	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999995354809824	WITHOUT_CLASSIFICATION	4.6451901751499996E-7	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999996186656926	WITHOUT_CLASSIFICATION	3.8133430733736956E-7	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999994288436733	WITHOUT_CLASSIFICATION	5.711563265891742E-7	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999994152426045	WITHOUT_CLASSIFICATION	5.847573955075125E-7	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999996051370135	WITHOUT_CLASSIFICATION	3.9486298649996205E-7	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999996809364482	WITHOUT_CLASSIFICATION	3.1906355180126973E-7	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.999997015315952	WITHOUT_CLASSIFICATION	2.9846840480312887E-6	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.999998842302066	WITHOUT_CLASSIFICATION	1.1576979338875003E-6	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999953092634251	WITHOUT_CLASSIFICATION	4.690736574863463E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999998630146929	WITHOUT_CLASSIFICATION	1.3698530706861624E-7	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999985286825313	WITHOUT_CLASSIFICATION	1.4713174688005654E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999796370211	WITHOUT_CLASSIFICATION	2.036297885762393E-8	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999984878962318	WITHOUT_CLASSIFICATION	1.5121037681738167E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999753628451	WITHOUT_CLASSIFICATION	2.463715487734456E-8	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999753628451	WITHOUT_CLASSIFICATION	2.463715487734456E-8	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999924351352283	WITHOUT_CLASSIFICATION	7.564864771749807E-6	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999977303305396	WITHOUT_CLASSIFICATION	2.269669460368424E-6	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999203092624	WITHOUT_CLASSIFICATION	7.969073753831312E-8	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999994750099865	WITHOUT_CLASSIFICATION	5.249900134549703E-7	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999996662729412	WITHOUT_CLASSIFICATION	3.337270587680155E-7	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999974633691205	WITHOUT_CLASSIFICATION	2.536630879440368E-6	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999993558684792	WITHOUT_CLASSIFICATION	6.441315207477247E-7	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999999785458055	WITHOUT_CLASSIFICATION	2.1454194523364102E-8	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999999884942785	WITHOUT_CLASSIFICATION	1.150572142632181E-8	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.999999495842489	WITHOUT_CLASSIFICATION	5.041575109201253E-7	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.999998884994445	WITHOUT_CLASSIFICATION	1.1150055550584464E-6	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999982332531666	WITHOUT_CLASSIFICATION	1.766746833460947E-6	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999992748696017	WITHOUT_CLASSIFICATION	7.251303983505457E-7	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999983650141617	WITHOUT_CLASSIFICATION	1.6349858382026398E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999999513970542	WITHOUT_CLASSIFICATION	4.860294579108746E-8	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999999513970542	WITHOUT_CLASSIFICATION	4.860294579108746E-8	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999768319807093	WITHOUT_CLASSIFICATION	2.316801929066129E-5	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999999924972846	WITHOUT_CLASSIFICATION	7.502715443904095E-9	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999657478477	WITHOUT_CLASSIFICATION	3.4252152441039134E-8	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999995761521082	WITHOUT_CLASSIFICATION	4.2384789183665097E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997420501431	WITHOUT_CLASSIFICATION	2.5794985688944623E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999997776160775	WITHOUT_CLASSIFICATION	2.2238392248525514E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999999470921555	WITHOUT_CLASSIFICATION	5.2907844413467695E-8	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999997776160775	WITHOUT_CLASSIFICATION	2.2238392248525514E-7	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999817592482859	WITHOUT_CLASSIFICATION	1.8240751714087564E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999742767292	WITHOUT_CLASSIFICATION	2.572327078561866E-8	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999993195989253	WITHOUT_CLASSIFICATION	6.804010747527526E-7	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999988797339958	WITHOUT_CLASSIFICATION	1.1202660042658021E-6	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999998516151497	WITHOUT_CLASSIFICATION	1.483848503377333E-7	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999996965243184	WITHOUT_CLASSIFICATION	3.0347568156446494E-7	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999998443139195	WITHOUT_CLASSIFICATION	1.55686080477614E-7	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999986720800123	WITHOUT_CLASSIFICATION	1.3279199877061525E-6	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999990823166763	WITHOUT_CLASSIFICATION	9.176833236197691E-7	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999992456086826	WITHOUT_CLASSIFICATION	7.543913174413053E-7	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999992217957325	WITHOUT_CLASSIFICATION	7.782042673656454E-7	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999902112222386	WITHOUT_CLASSIFICATION	9.788777761370754E-6	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999806423791199	WITHOUT_CLASSIFICATION	1.9357620880019782E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999979983883228	WITHOUT_CLASSIFICATION	2.0016116772244438E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999980105486477	WITHOUT_CLASSIFICATION	1.9894513523489194E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999980105486477	WITHOUT_CLASSIFICATION	1.9894513523489194E-6	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999999684788947	WITHOUT_CLASSIFICATION	3.1521105241954483E-8	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999989397325509	WITHOUT_CLASSIFICATION	1.0602674490565249E-6	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999999587431159	WITHOUT_CLASSIFICATION	4.1256884127493824E-8	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.999999729655701	WITHOUT_CLASSIFICATION	2.703442989357833E-7	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999999741718287	WITHOUT_CLASSIFICATION	2.5828171228387432E-8	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999997776160775	WITHOUT_CLASSIFICATION	2.2238392248525514E-7	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999999765625353	WITHOUT_CLASSIFICATION	2.3437464838609002E-8	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999991428808	WITHOUT_CLASSIFICATION	8.57119036107035E-10	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999970857872951	WITHOUT_CLASSIFICATION	2.914212704990862E-6	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999886471067	WITHOUT_CLASSIFICATION	1.1352893235495038E-8	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999966887674	WITHOUT_CLASSIFICATION	3.3112325425535976E-9	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999877860877	WITHOUT_CLASSIFICATION	1.2213912335717799E-8	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999998812816964	WITHOUT_CLASSIFICATION	1.1871830371902204E-7	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.999998827532884	WITHOUT_CLASSIFICATION	1.1724671160088756E-6	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999999983297992	WITHOUT_CLASSIFICATION	1.6702007255618737E-9	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999995045003385	WITHOUT_CLASSIFICATION	4.954996614976238E-7	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999999737060241	WITHOUT_CLASSIFICATION	2.62939758835398E-8	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.999999985127393	WITHOUT_CLASSIFICATION	1.4872607029139276E-8	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999989749612932	WITHOUT_CLASSIFICATION	1.0250387067926673E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999992315294868	WITHOUT_CLASSIFICATION	7.68470513165002E-7	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999997525293137	WITHOUT_CLASSIFICATION	2.4747068628878517E-7	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999933229657382	WITHOUT_CLASSIFICATION	6.677034261912717E-6	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999999752417246	WITHOUT_CLASSIFICATION	2.4758275419229813E-8	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999997047243743	WITHOUT_CLASSIFICATION	2.9527562579821965E-7	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999991496154248	WITHOUT_CLASSIFICATION	8.503845752719635E-7	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999997457549149	WITHOUT_CLASSIFICATION	2.542450851330456E-7	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999994759799404	WITHOUT_CLASSIFICATION	5.240200596408796E-7	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999969045241213	WITHOUT_CLASSIFICATION	3.0954758788589424E-6	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999997489275907	WITHOUT_CLASSIFICATION	2.5107240922277537E-7	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.999999718411617	WITHOUT_CLASSIFICATION	2.8158838316127013E-7	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999999411285019	WITHOUT_CLASSIFICATION	5.887149804042614E-8	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999994423111837	WITHOUT_CLASSIFICATION	5.576888163609335E-7	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999999933291676	WITHOUT_CLASSIFICATION	6.670832378982121E-9	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999999746987721	WITHOUT_CLASSIFICATION	2.5301227878846518E-8	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999764393873625	WITHOUT_CLASSIFICATION	2.3560612637558056E-5	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999998359056511	WITHOUT_CLASSIFICATION	1.6409434884392995E-7	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999998272534059	WITHOUT_CLASSIFICATION	1.7274659413357065E-7	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999997076520457	WITHOUT_CLASSIFICATION	2.9234795429327805E-7	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.999999137368172	WITHOUT_CLASSIFICATION	8.626318279116819E-7	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999999483028995	WITHOUT_CLASSIFICATION	5.169710047569209E-8	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999999299355674	WITHOUT_CLASSIFICATION	7.006443265091375E-8	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999999944245501	WITHOUT_CLASSIFICATION	5.575449856017697E-9	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999999709254659	WITHOUT_CLASSIFICATION	2.9074534059823152E-8	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999999709629496	WITHOUT_CLASSIFICATION	2.903705040768088E-8	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999999290177403	WITHOUT_CLASSIFICATION	7.09822596932472E-8	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999989859187	WITHOUT_CLASSIFICATION	1.0140812966099567E-9	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999736989381918	WITHOUT_CLASSIFICATION	2.6301061808154905E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999972369995056	WITHOUT_CLASSIFICATION	2.763000494405384E-5	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.999999724512394	WITHOUT_CLASSIFICATION	2.7548760590986647E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999999546565544	WITHOUT_CLASSIFICATION	4.534344560266795E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999997953887675	WITHOUT_CLASSIFICATION	2.0461123257289605E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999742767292	WITHOUT_CLASSIFICATION	2.572327078561866E-8	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999999031687381	WITHOUT_CLASSIFICATION	9.683126185606709E-8	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999999985919413	WITHOUT_CLASSIFICATION	1.4080586746941289E-9	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999999156189382	WITHOUT_CLASSIFICATION	8.438106179162627E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999786282605	WITHOUT_CLASSIFICATION	2.137173956497985E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999786282605	WITHOUT_CLASSIFICATION	2.137173956497985E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999715787896	WITHOUT_CLASSIFICATION	2.8421210346071594E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999715787896	WITHOUT_CLASSIFICATION	2.8421210346071594E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999715787896	WITHOUT_CLASSIFICATION	2.8421210346071594E-8	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999980481718541	WITHOUT_CLASSIFICATION	1.951828145923209E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999980481718541	WITHOUT_CLASSIFICATION	1.951828145923209E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999953085029033	WITHOUT_CLASSIFICATION	4.6914970965863886E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999953085029033	WITHOUT_CLASSIFICATION	4.6914970965863886E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999967630499834	WITHOUT_CLASSIFICATION	3.236950016548144E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.999999890497867	WITHOUT_CLASSIFICATION	1.0950213310845038E-7	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999997797644374	WITHOUT_CLASSIFICATION	2.2023556259097082E-7	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999997797644374	WITHOUT_CLASSIFICATION	2.2023556259097082E-7	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999999840058221	WITHOUT_CLASSIFICATION	1.5994177800776055E-8	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999997790197164	WITHOUT_CLASSIFICATION	2.2098028374371126E-7	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999994085258562	WITHOUT_CLASSIFICATION	5.914741436995582E-7	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.999999856281304	WITHOUT_CLASSIFICATION	1.4371869600772804E-7	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999997888286384	WITHOUT_CLASSIFICATION	2.111713617002964E-7	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999999685658514	WITHOUT_CLASSIFICATION	3.143414855131761E-8	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999984831005657	WITHOUT_CLASSIFICATION	1.5168994342002738E-6	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.999999689885211	WITHOUT_CLASSIFICATION	3.1011478903178197E-7	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999998522119324	WITHOUT_CLASSIFICATION	1.4778806748085952E-7	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.999999925103148	WITHOUT_CLASSIFICATION	7.489685211903778E-8	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999999563399753	WITHOUT_CLASSIFICATION	4.366002463567971E-8	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.99999987959746	WITHOUT_CLASSIFICATION	1.204025400779725E-7	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999981296493583	WITHOUT_CLASSIFICATION	1.8703506416718133E-6	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999998793465723	WITHOUT_CLASSIFICATION	1.2065342767116268E-7	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.999999956176531	WITHOUT_CLASSIFICATION	4.382346893646012E-8	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999971038363046	WITHOUT_CLASSIFICATION	2.896163695438674E-6	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999993610987727	WITHOUT_CLASSIFICATION	6.389012272987237E-7	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999993266865657	WITHOUT_CLASSIFICATION	6.73313434338407E-7	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999997024876017	WITHOUT_CLASSIFICATION	2.975123982922257E-7	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999821570307602	WITHOUT_CLASSIFICATION	1.7842969239784843E-5	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999694823705	WITHOUT_CLASSIFICATION	3.0517629477308366E-8	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999005096772	WITHOUT_CLASSIFICATION	9.949032277210972E-8	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999999476542102	WITHOUT_CLASSIFICATION	5.23457897389061E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999805112381	WITHOUT_CLASSIFICATION	1.948876194916433E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999896528933	WITHOUT_CLASSIFICATION	1.0347106752530109E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999612172558	WITHOUT_CLASSIFICATION	3.87827443251171E-8	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999185107251	WITHOUT_CLASSIFICATION	8.148927497771302E-8	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999672240898	WITHOUT_CLASSIFICATION	3.2775910236151475E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999808857697	WITHOUT_CLASSIFICATION	1.9114230227271565E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999898517421	WITHOUT_CLASSIFICATION	1.0148257808021067E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999619625759	WITHOUT_CLASSIFICATION	3.8037424136239335E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999895687688	WITHOUT_CLASSIFICATION	1.0431231184690429E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999944617795	WITHOUT_CLASSIFICATION	5.538220562767565E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999837783458	WITHOUT_CLASSIFICATION	1.6221654338879893E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999944617795	WITHOUT_CLASSIFICATION	5.538220562767565E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999944617795	WITHOUT_CLASSIFICATION	5.538220562767565E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999944617795	WITHOUT_CLASSIFICATION	5.538220562767565E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999944617795	WITHOUT_CLASSIFICATION	5.538220562767565E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999944617795	WITHOUT_CLASSIFICATION	5.538220562767565E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999944617795	WITHOUT_CLASSIFICATION	5.538220562767565E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999837783458	WITHOUT_CLASSIFICATION	1.6221654338879893E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999837783458	WITHOUT_CLASSIFICATION	1.6221654338879893E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999837783458	WITHOUT_CLASSIFICATION	1.6221654338879893E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999837783458	WITHOUT_CLASSIFICATION	1.6221654338879893E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999837783458	WITHOUT_CLASSIFICATION	1.6221654338879893E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999837783458	WITHOUT_CLASSIFICATION	1.6221654338879893E-8	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999998895661836	WITHOUT_CLASSIFICATION	1.1043381635317642E-7	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999998728455597	WITHOUT_CLASSIFICATION	1.2715444035712768E-7	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999997885866794	WITHOUT_CLASSIFICATION	2.1141332054889176E-7	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999999946969384	WITHOUT_CLASSIFICATION	5.3030615933930924E-8	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999979636883	WITHOUT_CLASSIFICATION	2.0363115995705386E-9	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999419127957	WITHOUT_CLASSIFICATION	5.808720423550393E-8	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999999913194456	WITHOUT_CLASSIFICATION	8.680554325121255E-9	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999956623117	WITHOUT_CLASSIFICATION	4.337688213086799E-9	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999999851986909	WITHOUT_CLASSIFICATION	1.4801309226045628E-8	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999995249447708	WITHOUT_CLASSIFICATION	4.75055229150178E-7	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999818197447301	WITHOUT_CLASSIFICATION	1.818025526986781E-5	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999956082958	WITHOUT_CLASSIFICATION	4.391704150945306E-9	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999992490652776	WITHOUT_CLASSIFICATION	7.509347225142269E-7	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.999999983036445	WITHOUT_CLASSIFICATION	1.6963554989917452E-8	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.999999933045022	WITHOUT_CLASSIFICATION	6.695497796454644E-8	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999946693125626	WITHOUT_CLASSIFICATION	5.330687437415112E-6	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999995737594211	WITHOUT_CLASSIFICATION	4.26240578994414E-7	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.999999987127631	WITHOUT_CLASSIFICATION	1.2872368939543104E-8	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999999844363395	WITHOUT_CLASSIFICATION	1.5563660462495875E-8	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999954451874	WITHOUT_CLASSIFICATION	4.554812581690548E-9	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.999999784368855	WITHOUT_CLASSIFICATION	2.1563114500251897E-7	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999998102192222	WITHOUT_CLASSIFICATION	1.897807776996026E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999999470921555	WITHOUT_CLASSIFICATION	5.2907844413467695E-8	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999979074898347	WITHOUT_CLASSIFICATION	2.0925101652709013E-6	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999980534045053	WITHOUT_CLASSIFICATION	1.9465954946128183E-6	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999834647598	WITHOUT_CLASSIFICATION	1.6535240112760804E-8	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999521547072	WITHOUT_CLASSIFICATION	4.784529280403666E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999998814828992	WITHOUT_CLASSIFICATION	1.1851710084573543E-7	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.999999525521367	WITHOUT_CLASSIFICATION	4.7447863305423146E-7	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999999573563927	WITHOUT_CLASSIFICATION	4.2643607387926503E-8	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999999244041786	WITHOUT_CLASSIFICATION	7.559582140818918E-8	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.999999990892905	WITHOUT_CLASSIFICATION	9.107094905401745E-9	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999895739057	WITHOUT_CLASSIFICATION	1.0426094318335005E-8	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999576816531	WITHOUT_CLASSIFICATION	4.2318346935198635E-8	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999999868706088	WITHOUT_CLASSIFICATION	1.312939113846254E-8	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999999411357842	WITHOUT_CLASSIFICATION	5.8864215800723045E-8	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.999999981144631	WITHOUT_CLASSIFICATION	1.8855368981797905E-8	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999998727452717	WITHOUT_CLASSIFICATION	1.2725472842134177E-7	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999999179893	WITHOUT_CLASSIFICATION	8.20107610200952E-11	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999946035748	WITHOUT_CLASSIFICATION	5.3964252958804245E-9	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999997273082117	WITHOUT_CLASSIFICATION	2.726917882984678E-7	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.999999760497448	WITHOUT_CLASSIFICATION	2.3950255200615924E-7	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999994518090498	WITHOUT_CLASSIFICATION	5.481909501460361E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999985546880548	WITHOUT_CLASSIFICATION	1.445311945226643E-6	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999985546880548	WITHOUT_CLASSIFICATION	1.445311945226643E-6	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999996803356165	WITHOUT_CLASSIFICATION	3.196643835660709E-7	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999996803356165	WITHOUT_CLASSIFICATION	3.196643835660709E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999997819164718	WITHOUT_CLASSIFICATION	2.1808352833506632E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999997819164718	WITHOUT_CLASSIFICATION	2.1808352833506632E-7	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999998536117818	WITHOUT_CLASSIFICATION	1.4638821821656096E-7	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999999911515103	WITHOUT_CLASSIFICATION	8.84848977136123E-9	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999997177287893	WITHOUT_CLASSIFICATION	2.822712106705119E-7	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999999569513626	WITHOUT_CLASSIFICATION	4.304863741437354E-8	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999999807697992	WITHOUT_CLASSIFICATION	1.9230200802147793E-8	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999963467387776	WITHOUT_CLASSIFICATION	3.653261222396117E-6	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999996022569462	WITHOUT_CLASSIFICATION	3.97743053794964E-7	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999934606895	WITHOUT_CLASSIFICATION	6.5393106076402335E-9	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999807993291	WITHOUT_CLASSIFICATION	1.920067087437216E-8	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999996637271629	WITHOUT_CLASSIFICATION	3.362728371733778E-7	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999970028496993	WITHOUT_CLASSIFICATION	2.9971503007854295E-6	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999991803678375	WITHOUT_CLASSIFICATION	8.196321624437962E-7	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999860034082	WITHOUT_CLASSIFICATION	1.3996591803072177E-8	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999999984681209	WITHOUT_CLASSIFICATION	1.531879006067712E-9	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999991641261308	WITHOUT_CLASSIFICATION	8.35873869255826E-7	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999991135391493	WITHOUT_CLASSIFICATION	8.864608508124133E-7	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999992004529	WITHOUT_CLASSIFICATION	7.995470966946033E-10	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999997328562135	WITHOUT_CLASSIFICATION	2.6714378650391845E-7	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999998950648132	WITHOUT_CLASSIFICATION	1.0493518681225275E-7	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999985071931689	WITHOUT_CLASSIFICATION	1.49280683122298E-6	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999988744299412	WITHOUT_CLASSIFICATION	1.1255700588103866E-6	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999998467461543	WITHOUT_CLASSIFICATION	1.5325384572080667E-7	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999988541705259	WITHOUT_CLASSIFICATION	1.1458294740838602E-6	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999920939548	WITHOUT_CLASSIFICATION	7.906045128156609E-9	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999995586712505	WITHOUT_CLASSIFICATION	4.4132874957025287E-7	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999906515727	WITHOUT_CLASSIFICATION	9.348427173629177E-9	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999989288596891	WITHOUT_CLASSIFICATION	1.0711403108832427E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998784540308	WITHOUT_CLASSIFICATION	1.2154596914737427E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998784540308	WITHOUT_CLASSIFICATION	1.2154596914737427E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998784540308	WITHOUT_CLASSIFICATION	1.2154596914737427E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999989962405	WITHOUT_CLASSIFICATION	1.0037594236760803E-9	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999989962405	WITHOUT_CLASSIFICATION	1.0037594236760803E-9	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999992315294868	WITHOUT_CLASSIFICATION	7.68470513165002E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999992315294868	WITHOUT_CLASSIFICATION	7.68470513165002E-7	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999539210694	WITHOUT_CLASSIFICATION	4.607893058325039E-8	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999961877025636	WITHOUT_CLASSIFICATION	3.812297436350911E-6	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999996664164333	WITHOUT_CLASSIFICATION	3.335835666728276E-7	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999996290992561	WITHOUT_CLASSIFICATION	3.709007438999875E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998784540308	WITHOUT_CLASSIFICATION	1.2154596914737427E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998784540308	WITHOUT_CLASSIFICATION	1.2154596914737427E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998784540308	WITHOUT_CLASSIFICATION	1.2154596914737427E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999989962405	WITHOUT_CLASSIFICATION	1.0037594236760803E-9	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999989962405	WITHOUT_CLASSIFICATION	1.0037594236760803E-9	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999989962405	WITHOUT_CLASSIFICATION	1.0037594236760803E-9	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999992315294868	WITHOUT_CLASSIFICATION	7.68470513165002E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999992315294868	WITHOUT_CLASSIFICATION	7.68470513165002E-7	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999998127912149	WITHOUT_CLASSIFICATION	1.872087851254421E-7	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999998578560962	WITHOUT_CLASSIFICATION	1.4214390379018205E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999992761959282	WITHOUT_CLASSIFICATION	7.238040716999584E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999992761959282	WITHOUT_CLASSIFICATION	7.238040716999584E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999992761959282	WITHOUT_CLASSIFICATION	7.238040716999584E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999992761959282	WITHOUT_CLASSIFICATION	7.238040716999584E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999992761959282	WITHOUT_CLASSIFICATION	7.238040716999584E-7	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.999999925479796	WITHOUT_CLASSIFICATION	7.452020399109854E-8	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999995086331472	WITHOUT_CLASSIFICATION	4.9136685271592E-7	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999994126730283	WITHOUT_CLASSIFICATION	5.873269718189085E-7	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999974160046448	WITHOUT_CLASSIFICATION	2.5839953553021713E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999988138592915	WITHOUT_CLASSIFICATION	1.1861407085599407E-6	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999951208424236	WITHOUT_CLASSIFICATION	4.8791575764497864E-6	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999913497633586	WITHOUT_CLASSIFICATION	8.650236641469709E-6	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999999401366482	WITHOUT_CLASSIFICATION	5.986335187713514E-8	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999998763255084	WITHOUT_CLASSIFICATION	1.2367449176336312E-7	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.999997245101027	WITHOUT_CLASSIFICATION	2.754898972903077E-6	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.999998702604775	WITHOUT_CLASSIFICATION	1.2973952249999733E-6	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.999998542904918	WITHOUT_CLASSIFICATION	1.4570950821184207E-6	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999962546057043	WITHOUT_CLASSIFICATION	3.7453942957534734E-6	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999998753921232	WITHOUT_CLASSIFICATION	1.2460787679153657E-7	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999995600465308	WITHOUT_CLASSIFICATION	4.3995346929148426E-7	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999976239224482	WITHOUT_CLASSIFICATION	2.3760775517783652E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999976239224482	WITHOUT_CLASSIFICATION	2.3760775517783652E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999976239224482	WITHOUT_CLASSIFICATION	2.3760775517783652E-6	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.999829346962873	WITHOUT_CLASSIFICATION	1.7065303712701573E-4	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9998293928826969	WITHOUT_CLASSIFICATION	1.7060711730322876E-4	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999997105578289	WITHOUT_CLASSIFICATION	2.8944217112687846E-7	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999924578757	WITHOUT_CLASSIFICATION	7.542124284626147E-9	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999105085656	WITHOUT_CLASSIFICATION	8.949143430160782E-8	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999998964990717	WITHOUT_CLASSIFICATION	1.0350092832821744E-7	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999998285296569	WITHOUT_CLASSIFICATION	1.7147034309063013E-7	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.999999808338459	WITHOUT_CLASSIFICATION	1.9166154100683703E-7	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999991468713962	WITHOUT_CLASSIFICATION	8.531286038345481E-7	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999538091362	WITHOUT_CLASSIFICATION	4.619086367828171E-8	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999998922247751	WITHOUT_CLASSIFICATION	1.0777522488856823E-7	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999999349395985	WITHOUT_CLASSIFICATION	6.506040158425645E-8	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999998861362517	WITHOUT_CLASSIFICATION	1.1386374829691811E-7	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999998520140345	WITHOUT_CLASSIFICATION	1.479859655403946E-7	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999998692394997	WITHOUT_CLASSIFICATION	1.3076050023714297E-7	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999998763644503	WITHOUT_CLASSIFICATION	1.2363554967612636E-7	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999998480497191	WITHOUT_CLASSIFICATION	1.5195028087111165E-7	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999998740836756	WITHOUT_CLASSIFICATION	1.2591632440894074E-7	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999998531304373	WITHOUT_CLASSIFICATION	1.4686956262489534E-7	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999997498270948	WITHOUT_CLASSIFICATION	2.5017290513925907E-7	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999998131978923	WITHOUT_CLASSIFICATION	1.8680210777650086E-7	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999997627502183	WITHOUT_CLASSIFICATION	2.3724978178113604E-7	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999999294561001	WITHOUT_CLASSIFICATION	7.05438999786201E-8	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999998780007213	WITHOUT_CLASSIFICATION	1.2199927863647523E-7	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999997321057219	WITHOUT_CLASSIFICATION	2.678942780585481E-7	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999997778277542	WITHOUT_CLASSIFICATION	2.2217224583308848E-7	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999998454337437	WITHOUT_CLASSIFICATION	1.5456625630094558E-7	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999997879924916	WITHOUT_CLASSIFICATION	2.1200750854448764E-7	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999987291994005	WITHOUT_CLASSIFICATION	1.2708005995180105E-6	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9999834692743207	WITHOUT_CLASSIFICATION	1.6530725679269323E-5	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.999980488042604	WITHOUT_CLASSIFICATION	1.9511957396000986E-5	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9999603758518303	WITHOUT_CLASSIFICATION	3.962414816972993E-5	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9999842014058496	WITHOUT_CLASSIFICATION	1.579859415031187E-5	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9999821975746129	WITHOUT_CLASSIFICATION	1.7802425387090265E-5	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9999837910544634	WITHOUT_CLASSIFICATION	1.6208945536640515E-5	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.999983927445689	WITHOUT_CLASSIFICATION	1.60725543110058E-5	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999999174723615	WITHOUT_CLASSIFICATION	8.252763853911293E-8	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999999747798034	WITHOUT_CLASSIFICATION	2.5220196681115865E-8	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999991639592001	WITHOUT_CLASSIFICATION	8.360407999954202E-7	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.583814361709314	TEST	0.41618563829068606	WITHOUT_CLASSIFICATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999852460058496	WITHOUT_CLASSIFICATION	1.4753994150310748E-5	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.999999973895318	WITHOUT_CLASSIFICATION	2.6104682057072037E-8	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999979001479358	WITHOUT_CLASSIFICATION	2.0998520642194423E-6	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999999676491206	WITHOUT_CLASSIFICATION	3.2350879416190003E-8	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999457774796104	WITHOUT_CLASSIFICATION	5.4222520389583845E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.999996445578168	WITHOUT_CLASSIFICATION	3.554421832023974E-6	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998768702094702	WITHOUT_CLASSIFICATION	1.2312979052983528E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998768702094702	WITHOUT_CLASSIFICATION	1.2312979052983528E-4	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999950904934672	WITHOUT_CLASSIFICATION	4.9095065326961405E-6	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999999926926302	WITHOUT_CLASSIFICATION	7.307369833306581E-9	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999986197556153	WITHOUT_CLASSIFICATION	1.3802443846842002E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9947961144155673	WITHOUT_CLASSIFICATION	0.005203885584432702	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999726436786959	WITHOUT_CLASSIFICATION	2.7356321304223794E-5	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999994389090961	WITHOUT_CLASSIFICATION	5.610909038736513E-7	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999997957019663	WITHOUT_CLASSIFICATION	2.0429803383870972E-7	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999767710407	WITHOUT_CLASSIFICATION	2.3228959193606922E-8	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999999547865083	WITHOUT_CLASSIFICATION	4.5213491692514236E-8	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999999798650131	WITHOUT_CLASSIFICATION	2.0134986931814854E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999855689111	WITHOUT_CLASSIFICATION	1.4431088853653334E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999855689111	WITHOUT_CLASSIFICATION	1.4431088853653334E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999855689111	WITHOUT_CLASSIFICATION	1.4431088853653334E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999855689111	WITHOUT_CLASSIFICATION	1.4431088853653334E-8	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999994241327134	WITHOUT_CLASSIFICATION	5.758672866752051E-7	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999993877224033	WITHOUT_CLASSIFICATION	6.122775966452475E-7	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999998157333659	WITHOUT_CLASSIFICATION	1.8426663406346335E-7	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999992013720833	WITHOUT_CLASSIFICATION	7.986279167455963E-7	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999981965747557	WITHOUT_CLASSIFICATION	1.803425244294772E-6	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999999298392483	WITHOUT_CLASSIFICATION	7.016075158045902E-8	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999998372826601	WITHOUT_CLASSIFICATION	1.6271734004035554E-7	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999999584872816	WITHOUT_CLASSIFICATION	4.151271843168788E-8	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999999584872816	WITHOUT_CLASSIFICATION	4.151271843168788E-8	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999649518769	WITHOUT_CLASSIFICATION	3.504812297957388E-8	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999997913317442	WITHOUT_CLASSIFICATION	2.086682557444965E-7	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999491420964866	WITHOUT_CLASSIFICATION	5.085790351338719E-5	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999997009868	WITHOUT_CLASSIFICATION	2.990132081971796E-9	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999997009868	WITHOUT_CLASSIFICATION	2.990132081971796E-9	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.999999984886247	WITHOUT_CLASSIFICATION	1.5113752983378728E-8	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999973092089759	WITHOUT_CLASSIFICATION	2.6907910241212093E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999973092089759	WITHOUT_CLASSIFICATION	2.6907910241212093E-6	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999892570452701	WITHOUT_CLASSIFICATION	1.0742954729919849E-5	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999977482938663	WITHOUT_CLASSIFICATION	2.2517061336516594E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999869872066	WITHOUT_CLASSIFICATION	1.3012793363891888E-8	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999909864343901	WITHOUT_CLASSIFICATION	9.013565609935334E-6	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999993974318026	WITHOUT_CLASSIFICATION	6.025681974648697E-7	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999917492773	WITHOUT_CLASSIFICATION	8.250722773367385E-9	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999961517466637	WITHOUT_CLASSIFICATION	3.848253336246815E-6	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9999960732710371	WITHOUT_CLASSIFICATION	3.926728962950126E-6	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999764954884	WITHOUT_CLASSIFICATION	2.350451150810339E-8	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999998119563842	WITHOUT_CLASSIFICATION	1.880436157666882E-7	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999967863846206	WITHOUT_CLASSIFICATION	3.2136153792347052E-6	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.999999909746499	WITHOUT_CLASSIFICATION	9.025350101519377E-8	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.99083584825364	WITHOUT_CLASSIFICATION	0.00916415174635993	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9878685405026774	WITHOUT_CLASSIFICATION	0.012131459497322633	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999999554306025	WITHOUT_CLASSIFICATION	4.456939745060758E-8	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999999516908921	WITHOUT_CLASSIFICATION	4.830910783793396E-8	TEST
// Args	WITHOUT_CLASSIFICATION	0.999999066426079	WITHOUT_CLASSIFICATION	9.335739208528749E-7	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999999141069529	WITHOUT_CLASSIFICATION	8.589304710375115E-8	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999993184503904	WITHOUT_CLASSIFICATION	6.815496095533639E-7	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999997587845175	WITHOUT_CLASSIFICATION	2.412154824975118E-7	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999984553529964	WITHOUT_CLASSIFICATION	1.5446470037058179E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999998237084913	WITHOUT_CLASSIFICATION	1.7629150873501148E-7	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.999999711026915	WITHOUT_CLASSIFICATION	2.8897308493487417E-7	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999257516096186	WITHOUT_CLASSIFICATION	7.424839038145226E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999899410590078	WITHOUT_CLASSIFICATION	1.0058940992183882E-5	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999835555086041	WITHOUT_CLASSIFICATION	1.644449139598579E-5	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999999306557746	WITHOUT_CLASSIFICATION	6.934422536822221E-8	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999985764198961	WITHOUT_CLASSIFICATION	1.4235801039002407E-6	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999979078835	WITHOUT_CLASSIFICATION	2.0921165976483075E-9	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999992043135222	WITHOUT_CLASSIFICATION	7.956864777861331E-7	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999962610130708	WITHOUT_CLASSIFICATION	3.738986929021176E-6	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999997222649453	WITHOUT_CLASSIFICATION	2.7773505483347545E-7	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9990363673106566	WITHOUT_CLASSIFICATION	9.636326893433933E-4	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999983690002147	WITHOUT_CLASSIFICATION	1.6309997853277277E-6	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999999784539526	WITHOUT_CLASSIFICATION	2.15460473598189E-8	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999978234793782	WITHOUT_CLASSIFICATION	2.1765206218346857E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999966326033723	WITHOUT_CLASSIFICATION	3.3673966277203133E-6	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999994391238656	WITHOUT_CLASSIFICATION	5.608761345221438E-7	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999972439584964	WITHOUT_CLASSIFICATION	2.7560415035352764E-6	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999978234793782	WITHOUT_CLASSIFICATION	2.1765206218346857E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999966326033723	WITHOUT_CLASSIFICATION	3.3673966277203133E-6	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999998242634378	WITHOUT_CLASSIFICATION	1.75736562230931E-7	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999955049551248	WITHOUT_CLASSIFICATION	4.49504487516691E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999955049551248	WITHOUT_CLASSIFICATION	4.49504487516691E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999996467082838	WITHOUT_CLASSIFICATION	3.532917161858766E-7	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999997766641949	WITHOUT_CLASSIFICATION	2.233358051117214E-7	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999994428247938	WITHOUT_CLASSIFICATION	5.571752062619234E-7	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999996287854025	WITHOUT_CLASSIFICATION	3.7121459759748296E-7	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999969804384934	WITHOUT_CLASSIFICATION	3.019561506599333E-6	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999806615078417	WITHOUT_CLASSIFICATION	1.9338492158339155E-5	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999988433259119	WITHOUT_CLASSIFICATION	1.1566740880791128E-6	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999998937977764	WITHOUT_CLASSIFICATION	1.0620222362363058E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.999999546888228	WITHOUT_CLASSIFICATION	4.53111772045465E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999953546047957	WITHOUT_CLASSIFICATION	4.645395204293377E-6	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.999999920145722	WITHOUT_CLASSIFICATION	7.985427798805462E-8	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999993734110499	WITHOUT_CLASSIFICATION	6.265889500185417E-7	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.999997810287864	WITHOUT_CLASSIFICATION	2.1897121359005867E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999061064342	WITHOUT_CLASSIFICATION	9.389356574520002E-8	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999061064342	WITHOUT_CLASSIFICATION	9.389356574520002E-8	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999989526486241	WITHOUT_CLASSIFICATION	1.0473513758995681E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999989526486241	WITHOUT_CLASSIFICATION	1.0473513758995681E-5	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999995823490189	WITHOUT_CLASSIFICATION	4.1765098110743093E-7	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999999264013316	WITHOUT_CLASSIFICATION	7.359866831460675E-8	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999997811989042	WITHOUT_CLASSIFICATION	2.1880109579467668E-7	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999994782573952	WITHOUT_CLASSIFICATION	5.217426046728415E-7	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999888559878799	WITHOUT_CLASSIFICATION	1.1144012120034159E-5	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999969738713672	WITHOUT_CLASSIFICATION	3.026128632818444E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999994428247938	WITHOUT_CLASSIFICATION	5.571752062619234E-7	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999996287854025	WITHOUT_CLASSIFICATION	3.7121459759748296E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.999999546888228	WITHOUT_CLASSIFICATION	4.53111772045465E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999953546047957	WITHOUT_CLASSIFICATION	4.645395204293377E-6	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999999148137999	WITHOUT_CLASSIFICATION	8.518620005832682E-8	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999998384150146	WITHOUT_CLASSIFICATION	1.615849853536129E-7	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999960008670598	WITHOUT_CLASSIFICATION	3.999132940241161E-6	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999994260935438	WITHOUT_CLASSIFICATION	5.739064561752799E-7	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999998941545157	WITHOUT_CLASSIFICATION	1.0584548420278064E-7	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999995918008672	WITHOUT_CLASSIFICATION	4.081991328694383E-7	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999990141531201	WITHOUT_CLASSIFICATION	9.858468798638439E-7	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999958705701514	WITHOUT_CLASSIFICATION	4.129429848647105E-6	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.999998173472003	WITHOUT_CLASSIFICATION	1.8265279969157562E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999988193045845	WITHOUT_CLASSIFICATION	1.1806954154865137E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999711768097	WITHOUT_CLASSIFICATION	2.8823190181016768E-8	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.999884190711634	WITHOUT_CLASSIFICATION	1.1580928836591393E-4	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999996913200889	WITHOUT_CLASSIFICATION	3.0867991116177517E-7	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999967948242986	WITHOUT_CLASSIFICATION	3.205175701368723E-6	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.999999426996296	WITHOUT_CLASSIFICATION	5.730037039834491E-7	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999985934762263	WITHOUT_CLASSIFICATION	1.4065237735739012E-6	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999996741077724	WITHOUT_CLASSIFICATION	3.258922275602606E-7	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999972242702272	WITHOUT_CLASSIFICATION	2.7757297728358915E-6	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999994678459129	WITHOUT_CLASSIFICATION	5.321540871390687E-7	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999998620325441	WITHOUT_CLASSIFICATION	1.37967455896207E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999998760788939	WITHOUT_CLASSIFICATION	1.2392110609031987E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999998760788939	WITHOUT_CLASSIFICATION	1.2392110609031987E-6	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999986183671182	WITHOUT_CLASSIFICATION	1.3816328817359473E-6	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999893976869346	WITHOUT_CLASSIFICATION	1.0602313065439559E-5	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999982320241877	WITHOUT_CLASSIFICATION	1.767975812307022E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999992316457911	WITHOUT_CLASSIFICATION	7.683542088522156E-7	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999992316457911	WITHOUT_CLASSIFICATION	7.683542088522156E-7	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999960008670598	WITHOUT_CLASSIFICATION	3.999132940241161E-6	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999948069007255	WITHOUT_CLASSIFICATION	5.1930992744729375E-6	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999979893932885	WITHOUT_CLASSIFICATION	2.0106067114334646E-6	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999984206739547	WITHOUT_CLASSIFICATION	1.5793260452844508E-6	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999991219474675	WITHOUT_CLASSIFICATION	8.780525324858398E-7	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999991371240396	WITHOUT_CLASSIFICATION	8.628759603298065E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999778095572798	WITHOUT_CLASSIFICATION	2.2190442720207834E-5	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999978481132192	WITHOUT_CLASSIFICATION	2.1518867807448435E-6	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999997354819936	WITHOUT_CLASSIFICATION	2.645180064304303E-7	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999996417089039	WITHOUT_CLASSIFICATION	3.582910960697884E-7	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999919322953055	WITHOUT_CLASSIFICATION	8.067704694547059E-6	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999994870550175	WITHOUT_CLASSIFICATION	5.129449825518336E-7	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999999332137147	WITHOUT_CLASSIFICATION	6.678628526516206E-8	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999999807277993	WITHOUT_CLASSIFICATION	1.9272200730095135E-8	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999998851101234	WITHOUT_CLASSIFICATION	1.1488987661718664E-7	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999999269039181	WITHOUT_CLASSIFICATION	7.309608181418899E-8	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.999999971233218	WITHOUT_CLASSIFICATION	2.8766782041080948E-8	TEST
// states	WITHOUT_CLASSIFICATION	0.9999901781096372	WITHOUT_CLASSIFICATION	9.821890362897174E-6	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999994449669704	WITHOUT_CLASSIFICATION	5.550330296137199E-7	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999110365441	WITHOUT_CLASSIFICATION	8.896345597817186E-8	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999968279517	WITHOUT_CLASSIFICATION	3.172048327047159E-9	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999990938783889	WITHOUT_CLASSIFICATION	9.06121611046743E-7	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999998025303621	WITHOUT_CLASSIFICATION	1.974696378374485E-7	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.999998685469109	WITHOUT_CLASSIFICATION	1.31453089101084E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999946476088	WITHOUT_CLASSIFICATION	5.35239125362493E-9	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999990312082884	WITHOUT_CLASSIFICATION	9.687917116162792E-7	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999931862302	WITHOUT_CLASSIFICATION	6.8137698396098514E-9	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999994518867691	WITHOUT_CLASSIFICATION	5.481132308768115E-7	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.999999998401303	WITHOUT_CLASSIFICATION	1.5986969706005104E-9	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999998311475875	WITHOUT_CLASSIFICATION	1.6885241250983003E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999976773189	WITHOUT_CLASSIFICATION	2.322681099758376E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999976773189	WITHOUT_CLASSIFICATION	2.322681099758376E-8	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999998281967435	WITHOUT_CLASSIFICATION	1.7180325642615458E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999998709461497	WITHOUT_CLASSIFICATION	1.2905385029605014E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999998709461497	WITHOUT_CLASSIFICATION	1.2905385029605014E-7	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999993484495	WITHOUT_CLASSIFICATION	6.5155050429902155E-9	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999993484495	WITHOUT_CLASSIFICATION	6.5155050429902155E-9	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994177081205	WITHOUT_CLASSIFICATION	5.822918795252064E-7	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999805567026	WITHOUT_CLASSIFICATION	1.9443297420607236E-8	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999982598323	WITHOUT_CLASSIFICATION	1.7401677050511837E-9	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999986805333752	WITHOUT_CLASSIFICATION	1.3194666247633515E-6	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.999999984201091	WITHOUT_CLASSIFICATION	1.579890903730106E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.999999416338377	WITHOUT_CLASSIFICATION	5.836616230648677E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.999999416338377	WITHOUT_CLASSIFICATION	5.836616230648677E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999946476088	WITHOUT_CLASSIFICATION	5.35239125362493E-9	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999946476088	WITHOUT_CLASSIFICATION	5.35239125362493E-9	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999946476088	WITHOUT_CLASSIFICATION	5.35239125362493E-9	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999990312082884	WITHOUT_CLASSIFICATION	9.687917116162792E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999976773189	WITHOUT_CLASSIFICATION	2.322681099758376E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999976773189	WITHOUT_CLASSIFICATION	2.322681099758376E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999976773189	WITHOUT_CLASSIFICATION	2.322681099758376E-8	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994177081205	WITHOUT_CLASSIFICATION	5.822918795252064E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994177081205	WITHOUT_CLASSIFICATION	5.822918795252064E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994177081205	WITHOUT_CLASSIFICATION	5.822918795252064E-7	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999986805333752	WITHOUT_CLASSIFICATION	1.3194666247633515E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999986805333752	WITHOUT_CLASSIFICATION	1.3194666247633515E-6	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999999784092168	WITHOUT_CLASSIFICATION	2.159078305857777E-8	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999997263968682	WITHOUT_CLASSIFICATION	2.7360313182577426E-7	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999996260392657	WITHOUT_CLASSIFICATION	3.739607342684314E-7	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.999860930433974	WITHOUT_CLASSIFICATION	1.3906956602608401E-4	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999999751612373	WITHOUT_CLASSIFICATION	2.4838762659202883E-8	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999998915129102	WITHOUT_CLASSIFICATION	1.084870898076223E-7	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999998915129102	WITHOUT_CLASSIFICATION	1.084870898076223E-7	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999212792411	WITHOUT_CLASSIFICATION	7.872075895166771E-8	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999778095572798	WITHOUT_CLASSIFICATION	2.2190442720207834E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999778095572798	WITHOUT_CLASSIFICATION	2.2190442720207834E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999778095572798	WITHOUT_CLASSIFICATION	2.2190442720207834E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999778095572798	WITHOUT_CLASSIFICATION	2.2190442720207834E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999778095572798	WITHOUT_CLASSIFICATION	2.2190442720207834E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999996499449048	WITHOUT_CLASSIFICATION	3.5005509531575567E-7	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999996499449048	WITHOUT_CLASSIFICATION	3.5005509531575567E-7	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999996499449048	WITHOUT_CLASSIFICATION	3.5005509531575567E-7	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999805851374	WITHOUT_CLASSIFICATION	1.9414862641937678E-8	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999996439511069	WITHOUT_CLASSIFICATION	3.5604889319781043E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999990312082884	WITHOUT_CLASSIFICATION	9.687917116162792E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994177081205	WITHOUT_CLASSIFICATION	5.822918795252064E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994177081205	WITHOUT_CLASSIFICATION	5.822918795252064E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999778095572798	WITHOUT_CLASSIFICATION	2.2190442720207834E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999778095572798	WITHOUT_CLASSIFICATION	2.2190442720207834E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999996499449048	WITHOUT_CLASSIFICATION	3.5005509531575567E-7	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999212792411	WITHOUT_CLASSIFICATION	7.872075895166771E-8	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999985059793474	WITHOUT_CLASSIFICATION	1.4940206526247975E-6	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.999999176279936	WITHOUT_CLASSIFICATION	8.237200639385158E-7	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.999999979282374	WITHOUT_CLASSIFICATION	2.071762599776665E-8	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999999210907974	WITHOUT_CLASSIFICATION	7.890920260681111E-8	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999998141321133	WITHOUT_CLASSIFICATION	1.8586788679339074E-7	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999998718859603	WITHOUT_CLASSIFICATION	1.2811403969117292E-7	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999778610173905	WITHOUT_CLASSIFICATION	2.213898260956506E-5	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999998692356163	WITHOUT_CLASSIFICATION	1.3076438373021747E-7	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999999821400513	WITHOUT_CLASSIFICATION	1.785994875545094E-8	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999998684215243	WITHOUT_CLASSIFICATION	1.3157847562481334E-7	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999999003263723	WITHOUT_CLASSIFICATION	9.967362771444433E-8	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999996217484317	WITHOUT_CLASSIFICATION	3.782515682585008E-7	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999996616083773	WITHOUT_CLASSIFICATION	3.383916226380544E-7	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999979777754016	WITHOUT_CLASSIFICATION	2.0222245985063025E-6	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999975330149973	WITHOUT_CLASSIFICATION	2.4669850027455417E-6	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999999840648777	WITHOUT_CLASSIFICATION	1.5935122385382027E-8	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999999985001307	WITHOUT_CLASSIFICATION	1.4998692663102492E-9	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999777068493717	WITHOUT_CLASSIFICATION	2.229315062829903E-5	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.999987720874003	WITHOUT_CLASSIFICATION	1.2279125996881152E-5	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999962615848	WITHOUT_CLASSIFICATION	3.738415212989351E-9	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999992989391465	WITHOUT_CLASSIFICATION	7.010608534749344E-7	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999997253169736	WITHOUT_CLASSIFICATION	2.746830263590401E-7	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.999999835630441	WITHOUT_CLASSIFICATION	1.64369558900986E-7	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999999973959806	WITHOUT_CLASSIFICATION	2.6040194920113396E-9	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999997114753333	WITHOUT_CLASSIFICATION	2.885246667406459E-7	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999969612589197	WITHOUT_CLASSIFICATION	3.0387410804128254E-6	TEST
// unread back	WITHOUT_CLASSIFICATION	0.999999850024773	WITHOUT_CLASSIFICATION	1.499752270074855E-7	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999414414181	WITHOUT_CLASSIFICATION	5.8558581941452237E-8	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999999545155579	WITHOUT_CLASSIFICATION	4.548444209712243E-8	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999999803585461	WITHOUT_CLASSIFICATION	1.9641454001703307E-8	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999997013264944	WITHOUT_CLASSIFICATION	2.986735055180731E-7	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999882175504	WITHOUT_CLASSIFICATION	1.1782449530977472E-8	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999609598537	WITHOUT_CLASSIFICATION	3.9040146393029076E-8	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999945430753	WITHOUT_CLASSIFICATION	5.456924716114063E-9	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999985059793474	WITHOUT_CLASSIFICATION	1.4940206526247975E-6	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.999999994115354	WITHOUT_CLASSIFICATION	5.884645897048737E-9	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999999577464291	WITHOUT_CLASSIFICATION	4.225357074991748E-8	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.999996473812194	WITHOUT_CLASSIFICATION	3.5261878058989293E-6	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999998496553892	WITHOUT_CLASSIFICATION	1.5034461070763528E-7	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999998496553892	WITHOUT_CLASSIFICATION	1.5034461070763528E-7	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999997977895727	WITHOUT_CLASSIFICATION	2.0221042726964724E-7	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999997977895727	WITHOUT_CLASSIFICATION	2.0221042726964724E-7	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999995395031874	WITHOUT_CLASSIFICATION	4.6049681261128415E-7	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999997058736156	WITHOUT_CLASSIFICATION	2.941263844418901E-7	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999449935917	WITHOUT_CLASSIFICATION	5.50064082793971E-8	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999997928602075	WITHOUT_CLASSIFICATION	2.0713979256075384E-7	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999272880019	WITHOUT_CLASSIFICATION	7.271199809414057E-8	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999999104341789	WITHOUT_CLASSIFICATION	8.95658210580555E-8	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999521480293	WITHOUT_CLASSIFICATION	4.7851970830319016E-8	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999999827780648	WITHOUT_CLASSIFICATION	1.7221935185095105E-8	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.999999999763917	WITHOUT_CLASSIFICATION	2.3608302294402605E-10	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999996772366149	WITHOUT_CLASSIFICATION	3.2276338508434834E-7	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999940060421	WITHOUT_CLASSIFICATION	5.993957807841699E-9	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999983252624299	WITHOUT_CLASSIFICATION	1.6747375700982244E-6	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999983252624299	WITHOUT_CLASSIFICATION	1.6747375700982244E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999997401450014	WITHOUT_CLASSIFICATION	2.59854998699282E-7	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999986902032052	WITHOUT_CLASSIFICATION	1.309796794699469E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999996659026067	WITHOUT_CLASSIFICATION	3.3409739327667995E-7	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999996659026067	WITHOUT_CLASSIFICATION	3.3409739327667995E-7	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999984837836922	WITHOUT_CLASSIFICATION	1.5162163078199846E-6	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999975600472	WITHOUT_CLASSIFICATION	2.4399527384106583E-9	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999993288674243	WITHOUT_CLASSIFICATION	6.71132575728138E-7	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999998886868272	WITHOUT_CLASSIFICATION	1.1131317278245317E-7	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999501717851	WITHOUT_CLASSIFICATION	4.982821480456398E-8	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999994995974595	WITHOUT_CLASSIFICATION	5.004025405007971E-7	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999994734316994	WITHOUT_CLASSIFICATION	5.265683006315848E-7	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999999306657273	WITHOUT_CLASSIFICATION	6.93342725944051E-8	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999975830988108	WITHOUT_CLASSIFICATION	2.416901189245733E-6	TEST
// flush first	WITHOUT_CLASSIFICATION	0.999999754132052	WITHOUT_CLASSIFICATION	2.458679480825681E-7	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999995471937841	WITHOUT_CLASSIFICATION	4.5280621592305434E-7	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999275209808349	WITHOUT_CLASSIFICATION	7.247901916497275E-5	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999999361730327	WITHOUT_CLASSIFICATION	6.382696727799112E-8	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999995352812674	WITHOUT_CLASSIFICATION	4.6471873265705775E-7	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999275102329	WITHOUT_CLASSIFICATION	7.248976714072113E-8	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999956489180825	WITHOUT_CLASSIFICATION	4.351081917593705E-6	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999999481588854	WITHOUT_CLASSIFICATION	5.1841114552805396E-8	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999999870871772	WITHOUT_CLASSIFICATION	1.291282283485313E-8	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.999952358074216	WITHOUT_CLASSIFICATION	4.764192578393408E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999802737305	WITHOUT_CLASSIFICATION	1.9726269483405393E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.99617748214891	WITHOUT_CLASSIFICATION	0.0038225178510899326	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999999569566969	WITHOUT_CLASSIFICATION	4.3043303160341316E-8	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999999664493862	WITHOUT_CLASSIFICATION	3.355061374382929E-8	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999999551001502	WITHOUT_CLASSIFICATION	4.489984987188038E-8	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999999598366404	WITHOUT_CLASSIFICATION	4.0163359676160977E-8	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999999980930904	WITHOUT_CLASSIFICATION	1.906909726768692E-9	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.999999806368906	WITHOUT_CLASSIFICATION	1.9363109407590764E-7	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999996344315617	WITHOUT_CLASSIFICATION	3.6556843830105627E-7	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999992621501628	WITHOUT_CLASSIFICATION	7.378498372793977E-7	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999987547591809	WITHOUT_CLASSIFICATION	1.2452408191968758E-6	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999685556331	WITHOUT_CLASSIFICATION	3.144436689251808E-8	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999998846403486	WITHOUT_CLASSIFICATION	1.1535965129150001E-7	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999899274835	WITHOUT_CLASSIFICATION	1.0072516511829885E-8	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.999999988576719	WITHOUT_CLASSIFICATION	1.142328104364309E-8	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.999999988576719	WITHOUT_CLASSIFICATION	1.142328104364309E-8	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999489306431	WITHOUT_CLASSIFICATION	5.1069356926710564E-8	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999999937846109	WITHOUT_CLASSIFICATION	6.215389131738551E-9	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999739782374314	WITHOUT_CLASSIFICATION	2.602176256861364E-5	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999994093536064	WITHOUT_CLASSIFICATION	5.90646393534174E-7	TEST
// Block	WITHOUT_CLASSIFICATION	0.9999989815538488	WITHOUT_CLASSIFICATION	1.0184461511607574E-6	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999998711047937	WITHOUT_CLASSIFICATION	1.288952063392717E-7	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999708027466093	WITHOUT_CLASSIFICATION	2.919725339065341E-5	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999682744213122	WITHOUT_CLASSIFICATION	3.172557868788438E-5	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.999969353311842	WITHOUT_CLASSIFICATION	3.0646688157910556E-5	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999967066052576	WITHOUT_CLASSIFICATION	3.2933947422784916E-6	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.999999969485291	WITHOUT_CLASSIFICATION	3.0514709002261765E-8	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999961726463569	WITHOUT_CLASSIFICATION	3.827353643142277E-6	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.999957241183752	WITHOUT_CLASSIFICATION	4.2758816248116494E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.999996792510434	WITHOUT_CLASSIFICATION	3.207489566008582E-6	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999999776015929	WITHOUT_CLASSIFICATION	2.2398407147210164E-8	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999999157914059	WITHOUT_CLASSIFICATION	8.420859411772344E-8	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999998926463822	WITHOUT_CLASSIFICATION	1.0735361783340393E-7	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999998815460591	WITHOUT_CLASSIFICATION	1.184539408318384E-7	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.999999784281294	WITHOUT_CLASSIFICATION	2.157187060104748E-7	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999987690083059	WITHOUT_CLASSIFICATION	1.2309916942059521E-6	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999996938454255	WITHOUT_CLASSIFICATION	3.0615457448411294E-7	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999991049908291	WITHOUT_CLASSIFICATION	8.950091709034009E-7	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999999217250976	WITHOUT_CLASSIFICATION	7.827490244720087E-8	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999998943421003	WITHOUT_CLASSIFICATION	1.0565789954764752E-7	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999990991966553	WITHOUT_CLASSIFICATION	9.008033447507934E-7	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999998795416913	WITHOUT_CLASSIFICATION	1.204583086180378E-7	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999846662398	WITHOUT_CLASSIFICATION	1.5333760138299374E-8	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999979554142913	WITHOUT_CLASSIFICATION	2.0445857088224102E-6	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999994022383945	WITHOUT_CLASSIFICATION	5.977616054694507E-7	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.999999877231125	WITHOUT_CLASSIFICATION	1.2276887504031443E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999430825237647	WITHOUT_CLASSIFICATION	5.6917476235159615E-5	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9952928901646928	WITHOUT_CLASSIFICATION	0.004707109835307211	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999994356611684	WITHOUT_CLASSIFICATION	5.643388316161587E-7	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.999999573189825	WITHOUT_CLASSIFICATION	4.268101749364365E-7	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.999999615374434	WITHOUT_CLASSIFICATION	3.8462556597797596E-7	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9998407162903064	WITHOUT_CLASSIFICATION	1.592837096936857E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999962668597373	WITHOUT_CLASSIFICATION	3.7331402627594883E-6	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999997489237842	WITHOUT_CLASSIFICATION	2.510762157954561E-7	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999999084780176	WITHOUT_CLASSIFICATION	9.152198251403115E-8	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999999075773957	WITHOUT_CLASSIFICATION	9.24226043649535E-8	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999999214689301	WITHOUT_CLASSIFICATION	7.853106989520886E-8	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.999999863880809	WITHOUT_CLASSIFICATION	1.3611919098560415E-7	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.999999863880809	WITHOUT_CLASSIFICATION	1.3611919098560415E-7	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999998106884489	WITHOUT_CLASSIFICATION	1.8931155118360906E-7	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999998323545308	WITHOUT_CLASSIFICATION	1.6764546920958488E-7	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999995738036539	WITHOUT_CLASSIFICATION	4.261963461428965E-7	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999998237856709	WITHOUT_CLASSIFICATION	1.7621432910028832E-7	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999986381618309	WITHOUT_CLASSIFICATION	1.3618381690577186E-6	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999898995028	WITHOUT_CLASSIFICATION	1.01004971563683E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999669331805	WITHOUT_CLASSIFICATION	3.3066819584134586E-8	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999999853462378	WITHOUT_CLASSIFICATION	1.4653762247633279E-8	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.999999467931149	WITHOUT_CLASSIFICATION	5.320688509484275E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.99999999903548	WITHOUT_CLASSIFICATION	9.645199261501132E-10	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999944524769269	WITHOUT_CLASSIFICATION	5.5475230731885106E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999253340237	WITHOUT_CLASSIFICATION	7.466597622870373E-8	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999997223737611	WITHOUT_CLASSIFICATION	2.7762623887506015E-7	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.999999976236787	WITHOUT_CLASSIFICATION	2.376321296494576E-8	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999761349749	WITHOUT_CLASSIFICATION	2.3865025117584892E-8	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999926961246451	WITHOUT_CLASSIFICATION	7.303875354951976E-6	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999999997745668	WITHOUT_CLASSIFICATION	2.2543319733046133E-9	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999944309247226	WITHOUT_CLASSIFICATION	5.569075277318195E-6	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999971117246	WITHOUT_CLASSIFICATION	2.8882753850429918E-9	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999892854564014	WITHOUT_CLASSIFICATION	1.0714543598653607E-5	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999997493190778	WITHOUT_CLASSIFICATION	2.5068092218766574E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999999393133643	WITHOUT_CLASSIFICATION	6.06866357042982E-7	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999998021625	WITHOUT_CLASSIFICATION	1.9783741595516024E-10	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999999643704329	WITHOUT_CLASSIFICATION	3.56295669652197E-8	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998664694042	WITHOUT_CLASSIFICATION	1.3353059582979677E-7	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999981538598994	WITHOUT_CLASSIFICATION	1.8461401005571812E-6	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999996726768499	WITHOUT_CLASSIFICATION	3.27323150145578E-7	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999997820271169	WITHOUT_CLASSIFICATION	2.1797288305056643E-7	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999998222083073	WITHOUT_CLASSIFICATION	1.7779169274227443E-7	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999998620639035	WITHOUT_CLASSIFICATION	1.3793609655609378E-7	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999998145949449	WITHOUT_CLASSIFICATION	1.854050550570269E-7	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999779141426	WITHOUT_CLASSIFICATION	2.2085857330343307E-8	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999998620639035	WITHOUT_CLASSIFICATION	1.3793609655609378E-7	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999776075140576	WITHOUT_CLASSIFICATION	2.2392485942352958E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999899410590078	WITHOUT_CLASSIFICATION	1.0058940992183882E-5	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999998702634724	WITHOUT_CLASSIFICATION	1.297365276004385E-7	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.999243358899875	WITHOUT_CLASSIFICATION	7.566411001250107E-4	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999997861642993	WITHOUT_CLASSIFICATION	2.1383570075133692E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999992761959282	WITHOUT_CLASSIFICATION	7.238040716999584E-7	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999996849687282	WITHOUT_CLASSIFICATION	3.1503127175740187E-7	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999942251444947	WITHOUT_CLASSIFICATION	5.774855505400404E-6	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999997766641949	WITHOUT_CLASSIFICATION	2.233358051117214E-7	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999802737305	WITHOUT_CLASSIFICATION	1.9726269483405393E-8	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999996260392657	WITHOUT_CLASSIFICATION	3.739607342684314E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999997814099317	WITHOUT_CLASSIFICATION	2.185900682484543E-7	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999987256326717	WITHOUT_CLASSIFICATION	1.274367328322142E-6	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.999999980951614	WITHOUT_CLASSIFICATION	1.904838586862284E-8	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999824090563982	WITHOUT_CLASSIFICATION	1.7590943601801834E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999992260844283	WITHOUT_CLASSIFICATION	7.739155716954336E-7	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999438328925345	WITHOUT_CLASSIFICATION	5.6167107465423E-5	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999998972443128	WITHOUT_CLASSIFICATION	1.0275568718224455E-7	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999635321636	WITHOUT_CLASSIFICATION	3.646783649310642E-8	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999996517625169	WITHOUT_CLASSIFICATION	3.4823748299235783E-7	TEST
// expected	WITHOUT_CLASSIFICATION	0.999999072334815	WITHOUT_CLASSIFICATION	9.27665185115613E-7	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999982912378395	WITHOUT_CLASSIFICATION	1.7087621605858067E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999998626853818	WITHOUT_CLASSIFICATION	1.373146181804116E-7	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999997952299654	WITHOUT_CLASSIFICATION	2.047700346609777E-7	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999997993527651	WITHOUT_CLASSIFICATION	2.0064723504894965E-7	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999994436096732	WITHOUT_CLASSIFICATION	5.563903267186133E-7	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999996124318229	WITHOUT_CLASSIFICATION	3.87568177106829E-7	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999787413709	WITHOUT_CLASSIFICATION	2.125862909866884E-8	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999351977839	WITHOUT_CLASSIFICATION	6.480221607281045E-8	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998833192962	WITHOUT_CLASSIFICATION	1.166807037677676E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998833192962	WITHOUT_CLASSIFICATION	1.166807037677676E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999120844602	WITHOUT_CLASSIFICATION	8.791553987419863E-8	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999948294445	WITHOUT_CLASSIFICATION	5.170555468203488E-9	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999985418437	WITHOUT_CLASSIFICATION	1.4581562760074767E-9	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9974403215756452	WITHOUT_CLASSIFICATION	0.002559678424354822	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9974403215756452	WITHOUT_CLASSIFICATION	0.002559678424354822	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9974403215756452	WITHOUT_CLASSIFICATION	0.002559678424354822	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9974403215756452	WITHOUT_CLASSIFICATION	0.002559678424354822	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999998585809897	WITHOUT_CLASSIFICATION	1.4141901028029526E-7	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999998639889911	WITHOUT_CLASSIFICATION	1.3601100888951031E-7	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999995904692319	WITHOUT_CLASSIFICATION	4.095307681057746E-7	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999952489328232	WITHOUT_CLASSIFICATION	4.751067176692443E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999728958294	WITHOUT_CLASSIFICATION	2.7104170613554797E-8	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999848867933329	WITHOUT_CLASSIFICATION	1.5113206667194064E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999873188143323	WITHOUT_CLASSIFICATION	1.2681185667568642E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999873188143323	WITHOUT_CLASSIFICATION	1.2681185667568642E-5	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999892385525	WITHOUT_CLASSIFICATION	1.0761447475567646E-8	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9999790217609974	WITHOUT_CLASSIFICATION	2.0978239002560843E-5	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999997045093156	WITHOUT_CLASSIFICATION	2.954906843725636E-7	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9993397169840401	WITHOUT_CLASSIFICATION	6.602830159598494E-4	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999998959307339	WITHOUT_CLASSIFICATION	1.0406926603776978E-7	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999998498954618	WITHOUT_CLASSIFICATION	1.501045382508562E-7	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.999999949994755	WITHOUT_CLASSIFICATION	5.0005245055620325E-8	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999903914183631	WITHOUT_CLASSIFICATION	9.608581636966452E-6	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999974199429926	WITHOUT_CLASSIFICATION	2.580057007386653E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999974199429926	WITHOUT_CLASSIFICATION	2.580057007386653E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999779141426	WITHOUT_CLASSIFICATION	2.2085857330343307E-8	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999995762385467	WITHOUT_CLASSIFICATION	4.237614533191128E-7	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999996044373531	WITHOUT_CLASSIFICATION	3.95562646855311E-7	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999997800660815	WITHOUT_CLASSIFICATION	2.1993391838596119E-7	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.999999289347305	WITHOUT_CLASSIFICATION	7.106526949982803E-7	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9999792020791984	WITHOUT_CLASSIFICATION	2.079792080164705E-5	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999993227517515	WITHOUT_CLASSIFICATION	6.772482484594129E-7	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999999157212395	WITHOUT_CLASSIFICATION	8.427876058337703E-8	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998778015109	WITHOUT_CLASSIFICATION	1.2219848910155112E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998778015109	WITHOUT_CLASSIFICATION	1.2219848910155112E-7	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999999701627866	WITHOUT_CLASSIFICATION	2.983721341576034E-8	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999995288468	WITHOUT_CLASSIFICATION	4.71153196337305E-10	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999933775316023	WITHOUT_CLASSIFICATION	6.622468397646734E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999998076496768	WITHOUT_CLASSIFICATION	1.9235032317758827E-7	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999999684815667	WITHOUT_CLASSIFICATION	3.1518433379215255E-8	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9999783863470301	WITHOUT_CLASSIFICATION	2.1613652969875498E-5	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999999143070953	WITHOUT_CLASSIFICATION	8.569290469824499E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999787630424	WITHOUT_CLASSIFICATION	2.1236957679161082E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999787630424	WITHOUT_CLASSIFICATION	2.1236957679161082E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999787630424	WITHOUT_CLASSIFICATION	2.1236957679161082E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999787630424	WITHOUT_CLASSIFICATION	2.1236957679161082E-8	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999876960515	WITHOUT_CLASSIFICATION	1.2303948470353546E-8	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999374516766	WITHOUT_CLASSIFICATION	6.254832343315495E-8	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.999964808103284	WITHOUT_CLASSIFICATION	3.519189671601579E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999998060868535	WITHOUT_CLASSIFICATION	1.9391314657598995E-7	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999990472610234	WITHOUT_CLASSIFICATION	9.527389765993844E-7	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.9999738011108326	WITHOUT_CLASSIFICATION	2.6198889167441992E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999998707632377	WITHOUT_CLASSIFICATION	1.2923676230940056E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999991273297852	WITHOUT_CLASSIFICATION	8.726702146043414E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999991273297852	WITHOUT_CLASSIFICATION	8.726702146043414E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999991273297852	WITHOUT_CLASSIFICATION	8.726702146043414E-7	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999999920864441	WITHOUT_CLASSIFICATION	7.913555902297267E-8	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.999999985771377	WITHOUT_CLASSIFICATION	1.4228622900420736E-8	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999029921729	WITHOUT_CLASSIFICATION	9.700782712605724E-8	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999029921729	WITHOUT_CLASSIFICATION	9.700782712605724E-8	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.999997958613354	WITHOUT_CLASSIFICATION	2.0413866458775628E-6	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999999999999907	WITHOUT_CLASSIFICATION	9.297780218762758E-14	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999997454687211	WITHOUT_CLASSIFICATION	2.5453127896649373E-7	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9999971178209465	WITHOUT_CLASSIFICATION	2.8821790535309137E-6	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.999999938118945	WITHOUT_CLASSIFICATION	6.188105490648579E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999999536450137	WITHOUT_CLASSIFICATION	4.635498627181223E-8	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999998412488915	WITHOUT_CLASSIFICATION	1.587511086028631E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999998412488915	WITHOUT_CLASSIFICATION	1.587511086028631E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999997068327219	WITHOUT_CLASSIFICATION	2.931672780558836E-7	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999654861228	WITHOUT_CLASSIFICATION	3.451387725263517E-8	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.99999991111526	WITHOUT_CLASSIFICATION	8.888474003139882E-8	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999989314783384	WITHOUT_CLASSIFICATION	1.0685216616465514E-6	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999996661026257	WITHOUT_CLASSIFICATION	3.338973743850885E-7	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999658580401	WITHOUT_CLASSIFICATION	3.414195991327597E-8	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999999834402673	WITHOUT_CLASSIFICATION	1.6559732651906098E-8	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.999976619800207	WITHOUT_CLASSIFICATION	2.33801997928956E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999946434807645	WITHOUT_CLASSIFICATION	5.356519235496778E-6	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999715603928	WITHOUT_CLASSIFICATION	2.8439607219195053E-8	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999999551115936	WITHOUT_CLASSIFICATION	4.488840642316114E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999960551135	WITHOUT_CLASSIFICATION	3.9448865635797134E-9	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999273633983	WITHOUT_CLASSIFICATION	7.263660165710541E-8	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999996489959008	WITHOUT_CLASSIFICATION	3.510040992476557E-7	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999264395275	WITHOUT_CLASSIFICATION	7.356047249208118E-8	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999999990903441	WITHOUT_CLASSIFICATION	9.096558902817848E-10	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.999999910671432	WITHOUT_CLASSIFICATION	8.932856807831792E-8	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999810380347	WITHOUT_CLASSIFICATION	1.8961965271130088E-8	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999952124016	WITHOUT_CLASSIFICATION	4.787598400239412E-9	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999999871831456	WITHOUT_CLASSIFICATION	1.2816854259081593E-8	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999929851063	WITHOUT_CLASSIFICATION	7.014893684926896E-9	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999950107012	WITHOUT_CLASSIFICATION	4.989298766502963E-9	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999777030696	WITHOUT_CLASSIFICATION	2.2296930349447908E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999777030696	WITHOUT_CLASSIFICATION	2.2296930349447908E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999777030696	WITHOUT_CLASSIFICATION	2.2296930349447908E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999777030696	WITHOUT_CLASSIFICATION	2.2296930349447908E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999777030696	WITHOUT_CLASSIFICATION	2.2296930349447908E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999777030696	WITHOUT_CLASSIFICATION	2.2296930349447908E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999777030696	WITHOUT_CLASSIFICATION	2.2296930349447908E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999777030696	WITHOUT_CLASSIFICATION	2.2296930349447908E-8	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999815255152	WITHOUT_CLASSIFICATION	1.8474484814253913E-8	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999906884598115	WITHOUT_CLASSIFICATION	9.311540188487709E-6	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999937572969443	WITHOUT_CLASSIFICATION	6.242703055639548E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999167211853	WITHOUT_CLASSIFICATION	8.327881478899671E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999669331805	WITHOUT_CLASSIFICATION	3.3066819584134586E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999669331805	WITHOUT_CLASSIFICATION	3.3066819584134586E-8	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999996925662233	WITHOUT_CLASSIFICATION	3.074337767126526E-7	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999999581055687	WITHOUT_CLASSIFICATION	4.189443119984219E-8	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999407275255	WITHOUT_CLASSIFICATION	5.92724744349184E-8	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999990437339653	WITHOUT_CLASSIFICATION	9.562660347234609E-7	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999998130541108	WITHOUT_CLASSIFICATION	1.8694588916832057E-7	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999997075378644	WITHOUT_CLASSIFICATION	2.9246213558941193E-7	TEST
// read	WITHOUT_CLASSIFICATION	0.9999995803561916	WITHOUT_CLASSIFICATION	4.1964380829743696E-7	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.999999307887983	WITHOUT_CLASSIFICATION	6.921120169675005E-7	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999995713642899	WITHOUT_CLASSIFICATION	4.286357101313473E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999308072681	WITHOUT_CLASSIFICATION	6.919273185862518E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999308072681	WITHOUT_CLASSIFICATION	6.919273185862518E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999308072681	WITHOUT_CLASSIFICATION	6.919273185862518E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999741383252065	WITHOUT_CLASSIFICATION	2.586167479345081E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999741383252065	WITHOUT_CLASSIFICATION	2.586167479345081E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999741383252065	WITHOUT_CLASSIFICATION	2.586167479345081E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999741383252065	WITHOUT_CLASSIFICATION	2.586167479345081E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999741383252065	WITHOUT_CLASSIFICATION	2.586167479345081E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999741383252065	WITHOUT_CLASSIFICATION	2.586167479345081E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999741383252065	WITHOUT_CLASSIFICATION	2.586167479345081E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999741383252065	WITHOUT_CLASSIFICATION	2.586167479345081E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999741383252065	WITHOUT_CLASSIFICATION	2.586167479345081E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999999968100149	WITHOUT_CLASSIFICATION	3.189985105944925E-8	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999996745225682	WITHOUT_CLASSIFICATION	3.2547743182837104E-7	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999969603583921	WITHOUT_CLASSIFICATION	3.039641607921967E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999996877095108	WITHOUT_CLASSIFICATION	3.12290489226545E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999741383252065	WITHOUT_CLASSIFICATION	2.586167479345081E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999741383252065	WITHOUT_CLASSIFICATION	2.586167479345081E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999741383252065	WITHOUT_CLASSIFICATION	2.586167479345081E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999427946318	WITHOUT_CLASSIFICATION	5.720536828946379E-8	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999982276857595	WITHOUT_CLASSIFICATION	1.7723142405845761E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.999999998001111	WITHOUT_CLASSIFICATION	1.998889165034733E-9	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999999291791025	WITHOUT_CLASSIFICATION	7.082089755971451E-8	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999999291791025	WITHOUT_CLASSIFICATION	7.082089755971451E-8	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999997722549183	WITHOUT_CLASSIFICATION	2.277450816395176E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998845608871	WITHOUT_CLASSIFICATION	1.1543911296729913E-7	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999902625923	WITHOUT_CLASSIFICATION	9.737407662397981E-9	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999187175005	WITHOUT_CLASSIFICATION	8.128249948637943E-8	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999998269895989	WITHOUT_CLASSIFICATION	1.730104010195412E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999998269895989	WITHOUT_CLASSIFICATION	1.730104010195412E-7	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999987000685027	WITHOUT_CLASSIFICATION	1.2999314973128565E-6	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999357648633	WITHOUT_CLASSIFICATION	6.423513663099367E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999984298595241	WITHOUT_CLASSIFICATION	1.5701404759107245E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999634845016594	WITHOUT_CLASSIFICATION	3.651549834055536E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999634845016594	WITHOUT_CLASSIFICATION	3.651549834055536E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999634845016594	WITHOUT_CLASSIFICATION	3.651549834055536E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999999733500666	WITHOUT_CLASSIFICATION	2.664993334869038E-8	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998284537766	WITHOUT_CLASSIFICATION	1.715462235809834E-7	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998284537766	WITHOUT_CLASSIFICATION	1.715462235809834E-7	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999999511137839	WITHOUT_CLASSIFICATION	4.888621606159769E-8	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999999511137839	WITHOUT_CLASSIFICATION	4.888621606159769E-8	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999999012121388	WITHOUT_CLASSIFICATION	9.878786128278683E-8	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999810656254	WITHOUT_CLASSIFICATION	1.8934374639295747E-8	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999993391960544	WITHOUT_CLASSIFICATION	6.608039455168985E-7	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999949475413092	WITHOUT_CLASSIFICATION	5.052458690743878E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999983811895213	WITHOUT_CLASSIFICATION	1.618810478604332E-6	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999999627434808	WITHOUT_CLASSIFICATION	3.7256519122983324E-8	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.99999999689116	WITHOUT_CLASSIFICATION	3.1088400578838917E-9	TEST
// block	WITHOUT_CLASSIFICATION	0.999999416338377	WITHOUT_CLASSIFICATION	5.836616230648677E-7	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999998637771285	WITHOUT_CLASSIFICATION	1.3622287149291798E-7	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999792240463	WITHOUT_CLASSIFICATION	2.0775953736944616E-8	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999631889387297	WITHOUT_CLASSIFICATION	3.681106127031053E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999997514590001	WITHOUT_CLASSIFICATION	2.4854099991841734E-7	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999994183882809	WITHOUT_CLASSIFICATION	5.816117190638187E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999998805027444	WITHOUT_CLASSIFICATION	1.1949725566773452E-7	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999976880845	WITHOUT_CLASSIFICATION	2.31191552787533E-9	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999995348261893	WITHOUT_CLASSIFICATION	4.6517381065177224E-7	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999982996731412	WITHOUT_CLASSIFICATION	1.7003268587654894E-6	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999988602617	WITHOUT_CLASSIFICATION	1.13973824968239E-9	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999982958118119	WITHOUT_CLASSIFICATION	1.7041881881043765E-5	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999990624594448	WITHOUT_CLASSIFICATION	9.375405551544462E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999997814099317	WITHOUT_CLASSIFICATION	2.185900682484543E-7	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999042990970548	WITHOUT_CLASSIFICATION	9.570090294523408E-5	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999999032475333	WITHOUT_CLASSIFICATION	9.6752466659753E-8	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999999958851238	WITHOUT_CLASSIFICATION	4.114876243910666E-9	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999999453648947	WITHOUT_CLASSIFICATION	5.46351054216962E-8	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999932416747163	WITHOUT_CLASSIFICATION	6.758325283800918E-6	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999959756807916	WITHOUT_CLASSIFICATION	4.024319208345244E-6	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999998637423948	WITHOUT_CLASSIFICATION	1.3625760532136628E-7	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999998983611535	WITHOUT_CLASSIFICATION	1.0163884637420636E-7	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999995336472	WITHOUT_CLASSIFICATION	4.66352880040167E-10	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999997101095102	WITHOUT_CLASSIFICATION	2.898904899368046E-7	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999638969985	WITHOUT_CLASSIFICATION	3.610300145443324E-8	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.999999891930206	WITHOUT_CLASSIFICATION	1.0806979394443007E-7	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.999999981801171	WITHOUT_CLASSIFICATION	1.8198829027495707E-8	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999237052565	WITHOUT_CLASSIFICATION	7.629474347614135E-8	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999693188607135	WITHOUT_CLASSIFICATION	3.068113928652239E-5	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999999008600187	WITHOUT_CLASSIFICATION	9.913998135592584E-8	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.99999996541838	WITHOUT_CLASSIFICATION	3.4581620062478874E-8	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.999999355019414	WITHOUT_CLASSIFICATION	6.449805860528715E-7	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.999999994248513	WITHOUT_CLASSIFICATION	5.75148695178499E-9	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999997724396894	WITHOUT_CLASSIFICATION	2.2756031067905935E-7	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999996326260948	WITHOUT_CLASSIFICATION	3.6737390516238026E-7	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999945760791801	WITHOUT_CLASSIFICATION	5.423920819963351E-6	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999475235292	WITHOUT_CLASSIFICATION	5.2476470901247784E-8	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999995886163926	WITHOUT_CLASSIFICATION	4.1138360745570153E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999942753434502	WITHOUT_CLASSIFICATION	5.724656549773729E-6	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999999780875332	WITHOUT_CLASSIFICATION	2.1912466845452815E-8	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.999999996724934	WITHOUT_CLASSIFICATION	3.2750659837778594E-9	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.999999846683526	WITHOUT_CLASSIFICATION	1.533164740268325E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999764527060131	WITHOUT_CLASSIFICATION	2.3547293986874094E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999999725275031	WITHOUT_CLASSIFICATION	2.7472496910486335E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999503350211	WITHOUT_CLASSIFICATION	4.966497893036524E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999503350211	WITHOUT_CLASSIFICATION	4.966497893036524E-8	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999651599916	WITHOUT_CLASSIFICATION	3.48400083695266E-8	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999651599916	WITHOUT_CLASSIFICATION	3.48400083695266E-8	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999453025049926	WITHOUT_CLASSIFICATION	5.4697495007542546E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999453025049926	WITHOUT_CLASSIFICATION	5.4697495007542546E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995922784113	WITHOUT_CLASSIFICATION	4.077215887452427E-7	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995922784113	WITHOUT_CLASSIFICATION	4.077215887452427E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999117229516	WITHOUT_CLASSIFICATION	8.8277048329947E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999117229516	WITHOUT_CLASSIFICATION	8.8277048329947E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999117229516	WITHOUT_CLASSIFICATION	8.8277048329947E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999117229516	WITHOUT_CLASSIFICATION	8.8277048329947E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999117229516	WITHOUT_CLASSIFICATION	8.8277048329947E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999117229516	WITHOUT_CLASSIFICATION	8.8277048329947E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999117229516	WITHOUT_CLASSIFICATION	8.8277048329947E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999117229516	WITHOUT_CLASSIFICATION	8.8277048329947E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999117229516	WITHOUT_CLASSIFICATION	8.8277048329947E-8	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996629033356	WITHOUT_CLASSIFICATION	3.3709666439149354E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996629033356	WITHOUT_CLASSIFICATION	3.3709666439149354E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996629033356	WITHOUT_CLASSIFICATION	3.3709666439149354E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999998538152957	WITHOUT_CLASSIFICATION	1.4618470439153393E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999889539561	WITHOUT_CLASSIFICATION	1.1046043902901144E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999889539561	WITHOUT_CLASSIFICATION	1.1046043902901144E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999889539561	WITHOUT_CLASSIFICATION	1.1046043902901144E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999994577559095	WITHOUT_CLASSIFICATION	5.42244090386876E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999994577559095	WITHOUT_CLASSIFICATION	5.42244090386876E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999994577559095	WITHOUT_CLASSIFICATION	5.42244090386876E-7	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999975253292297	WITHOUT_CLASSIFICATION	2.474670770300978E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999998985575738	WITHOUT_CLASSIFICATION	1.0144242625151488E-7	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999939023725285	WITHOUT_CLASSIFICATION	6.097627471501728E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999993468074056	WITHOUT_CLASSIFICATION	6.531925944046022E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999993468074056	WITHOUT_CLASSIFICATION	6.531925944046022E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999993468074056	WITHOUT_CLASSIFICATION	6.531925944046022E-6	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999991335700431	WITHOUT_CLASSIFICATION	8.664299568592609E-7	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999988902079309	WITHOUT_CLASSIFICATION	1.1097920691682592E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999988902079309	WITHOUT_CLASSIFICATION	1.1097920691682592E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999984166805378	WITHOUT_CLASSIFICATION	1.5833194622454359E-6	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997078514775	WITHOUT_CLASSIFICATION	2.921485224781337E-7	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997078514775	WITHOUT_CLASSIFICATION	2.921485224781337E-7	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9926957965898794	WITHOUT_CLASSIFICATION	0.00730420341012061	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999972369995056	WITHOUT_CLASSIFICATION	2.763000494405384E-5	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999996056704966	WITHOUT_CLASSIFICATION	3.943295034264069E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992750443989	WITHOUT_CLASSIFICATION	7.24955601166587E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992750443989	WITHOUT_CLASSIFICATION	7.24955601166587E-7	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999996644967208	WITHOUT_CLASSIFICATION	3.3550327912830393E-7	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.999997071657638	WITHOUT_CLASSIFICATION	2.9283423620649464E-6	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.999998980684068	WITHOUT_CLASSIFICATION	1.0193159320196324E-6	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.99999996971429	WITHOUT_CLASSIFICATION	3.028570994586227E-8	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999995046199954	WITHOUT_CLASSIFICATION	4.953800045503556E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992750443989	WITHOUT_CLASSIFICATION	7.24955601166587E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992750443989	WITHOUT_CLASSIFICATION	7.24955601166587E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992750443989	WITHOUT_CLASSIFICATION	7.24955601166587E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992750443989	WITHOUT_CLASSIFICATION	7.24955601166587E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992750443989	WITHOUT_CLASSIFICATION	7.24955601166587E-7	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999999753324694	WITHOUT_CLASSIFICATION	2.4667530568141237E-8	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999998298436056	WITHOUT_CLASSIFICATION	1.7015639449378408E-7	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.999999995998901	WITHOUT_CLASSIFICATION	4.0010990127137675E-9	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999996656656682	WITHOUT_CLASSIFICATION	3.343343317872819E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999680692434	WITHOUT_CLASSIFICATION	3.193075654206582E-8	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998879836316	WITHOUT_CLASSIFICATION	1.1201636847930703E-7	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999691217457662	WITHOUT_CLASSIFICATION	3.087825423373751E-5	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999993276150789	WITHOUT_CLASSIFICATION	6.723849210759163E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998898800749	WITHOUT_CLASSIFICATION	1.1011992500468048E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999996715752464	WITHOUT_CLASSIFICATION	3.2842475366875205E-7	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999240457308	WITHOUT_CLASSIFICATION	7.595426917516411E-8	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999999393133643	WITHOUT_CLASSIFICATION	6.06866357042982E-7	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999999499753058	WITHOUT_CLASSIFICATION	5.002469412905089E-8	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999973328358881	WITHOUT_CLASSIFICATION	2.667164111904428E-6	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999999929632448	WITHOUT_CLASSIFICATION	7.036755068455509E-9	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999999839058358	WITHOUT_CLASSIFICATION	1.6094164295521455E-8	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999999330379731	WITHOUT_CLASSIFICATION	6.696202692018467E-8	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999996594521	WITHOUT_CLASSIFICATION	3.4054797089216933E-10	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999999487630707	WITHOUT_CLASSIFICATION	5.123692927311066E-8	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999990861867771	WITHOUT_CLASSIFICATION	9.138132228597013E-7	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999907227366228	WITHOUT_CLASSIFICATION	9.277263377145367E-6	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999993678457193	WITHOUT_CLASSIFICATION	6.321542806587022E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.99999999903548	WITHOUT_CLASSIFICATION	9.645199261501132E-10	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999999344700924	WITHOUT_CLASSIFICATION	6.552990759540611E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999999344700924	WITHOUT_CLASSIFICATION	6.552990759540611E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999999344700924	WITHOUT_CLASSIFICATION	6.552990759540611E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999999344700924	WITHOUT_CLASSIFICATION	6.552990759540611E-7	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999998947423933	WITHOUT_CLASSIFICATION	1.0525760668642683E-7	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999998369588337	WITHOUT_CLASSIFICATION	1.630411663642056E-7	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999724842926	WITHOUT_CLASSIFICATION	2.7515707315825475E-8	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999724842926	WITHOUT_CLASSIFICATION	2.7515707315825475E-8	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999907421341	WITHOUT_CLASSIFICATION	9.257865986502806E-9	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999997651064797	WITHOUT_CLASSIFICATION	2.3489352035175634E-7	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.999997582718528	WITHOUT_CLASSIFICATION	2.4172814719640518E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999391287413	WITHOUT_CLASSIFICATION	6.087125865763829E-8	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999965240272746	WITHOUT_CLASSIFICATION	3.475972725385147E-6	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999995322647841	WITHOUT_CLASSIFICATION	4.677352159216296E-7	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999995425408716	WITHOUT_CLASSIFICATION	4.574591284241841E-7	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999981537447602	WITHOUT_CLASSIFICATION	1.8462552397973758E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999981537447602	WITHOUT_CLASSIFICATION	1.8462552397973758E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999981537447602	WITHOUT_CLASSIFICATION	1.8462552397973758E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999981537447602	WITHOUT_CLASSIFICATION	1.8462552397973758E-6	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999879154644	WITHOUT_CLASSIFICATION	1.2084535652463166E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999545655811	WITHOUT_CLASSIFICATION	4.5434418867009176E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999545655811	WITHOUT_CLASSIFICATION	4.5434418867009176E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999545655811	WITHOUT_CLASSIFICATION	4.5434418867009176E-8	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999998323524798	WITHOUT_CLASSIFICATION	1.6764752019430838E-7	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999997938195418	WITHOUT_CLASSIFICATION	2.061804580964598E-7	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999998132594371	WITHOUT_CLASSIFICATION	1.867405628757951E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9974403215756452	WITHOUT_CLASSIFICATION	0.002559678424354822	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9974403215756452	WITHOUT_CLASSIFICATION	0.002559678424354822	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999995400988	WITHOUT_CLASSIFICATION	4.5990123275141715E-10	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999998847554628	WITHOUT_CLASSIFICATION	1.1524453721722765E-7	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999993090225776	WITHOUT_CLASSIFICATION	6.909774223591067E-7	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999993090225776	WITHOUT_CLASSIFICATION	6.909774223591067E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999999146311871	WITHOUT_CLASSIFICATION	8.536881290797431E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999999146311871	WITHOUT_CLASSIFICATION	8.536881290797431E-7	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999996472905675	WITHOUT_CLASSIFICATION	3.527094324985166E-7	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999996983560385	WITHOUT_CLASSIFICATION	3.0164396151158383E-7	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999996601959062	WITHOUT_CLASSIFICATION	3.398040938476779E-7	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999938508604654	WITHOUT_CLASSIFICATION	6.149139534513367E-6	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999984274669952	WITHOUT_CLASSIFICATION	1.5725330048046753E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999998164771586	WITHOUT_CLASSIFICATION	1.8352284138497036E-7	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999274599785	WITHOUT_CLASSIFICATION	7.254002152841699E-8	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.999999247095188	WITHOUT_CLASSIFICATION	7.52904812086376E-7	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999963935940676	WITHOUT_CLASSIFICATION	3.6064059324375876E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999882451561	WITHOUT_CLASSIFICATION	1.1754843797869312E-8	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999882451561	WITHOUT_CLASSIFICATION	1.1754843797869312E-8	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999999604689451	WITHOUT_CLASSIFICATION	3.953105480361756E-8	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999999604689451	WITHOUT_CLASSIFICATION	3.953105480361756E-8	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999998872422661	WITHOUT_CLASSIFICATION	1.1275773398223389E-7	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.99999987602576	WITHOUT_CLASSIFICATION	1.23974240029229E-7	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999889225674186	WITHOUT_CLASSIFICATION	1.107743258148123E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999979219372696	WITHOUT_CLASSIFICATION	2.0780627304612935E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999979219372696	WITHOUT_CLASSIFICATION	2.0780627304612935E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999979219372696	WITHOUT_CLASSIFICATION	2.0780627304612935E-6	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999995491860771	WITHOUT_CLASSIFICATION	4.508139228242983E-7	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999996534667697	WITHOUT_CLASSIFICATION	3.4653323033264046E-7	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999995527119111	WITHOUT_CLASSIFICATION	4.4728808900324163E-7	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999995180967719	WITHOUT_CLASSIFICATION	4.819032281490252E-7	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999995096021971	WITHOUT_CLASSIFICATION	4.903978028804697E-7	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999995407409359	WITHOUT_CLASSIFICATION	4.592590641282263E-7	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999996061864423	WITHOUT_CLASSIFICATION	3.938135576866588E-7	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999997163852825	WITHOUT_CLASSIFICATION	2.8361471748864526E-7	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999999903176683	WITHOUT_CLASSIFICATION	9.682331817187475E-9	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999956097607	WITHOUT_CLASSIFICATION	4.390239287398366E-9	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999997693699745	WITHOUT_CLASSIFICATION	2.306300254044691E-7	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999998911450416	WITHOUT_CLASSIFICATION	1.0885495834879616E-7	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999997158237539	WITHOUT_CLASSIFICATION	2.8417624612535985E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9974403215756452	WITHOUT_CLASSIFICATION	0.002559678424354822	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999999881604982	WITHOUT_CLASSIFICATION	1.183950184117441E-8	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999980939439883	WITHOUT_CLASSIFICATION	1.9060560116932948E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998833192962	WITHOUT_CLASSIFICATION	1.166807037677676E-7	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999079794463213	WITHOUT_CLASSIFICATION	9.202055367877358E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999079794463213	WITHOUT_CLASSIFICATION	9.202055367877358E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999079794463213	WITHOUT_CLASSIFICATION	9.202055367877358E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999079794463213	WITHOUT_CLASSIFICATION	9.202055367877358E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999079794463213	WITHOUT_CLASSIFICATION	9.202055367877358E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999741267067518	WITHOUT_CLASSIFICATION	2.587329324821401E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999079794463213	WITHOUT_CLASSIFICATION	9.202055367877358E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999079794463213	WITHOUT_CLASSIFICATION	9.202055367877358E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999079794463213	WITHOUT_CLASSIFICATION	9.202055367877358E-5	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999999688180163	WITHOUT_CLASSIFICATION	3.118198363804038E-8	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999996362982262	WITHOUT_CLASSIFICATION	3.6370177390974423E-7	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.999894979035387	WITHOUT_CLASSIFICATION	1.0502096461289277E-4	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999985251206882	WITHOUT_CLASSIFICATION	1.474879311778466E-6	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999960394753225	WITHOUT_CLASSIFICATION	3.960524677542465E-6	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.999996605390858	WITHOUT_CLASSIFICATION	3.3946091420174412E-6	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999411236926	WITHOUT_CLASSIFICATION	5.8876307305859136E-8	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999996129004165	WITHOUT_CLASSIFICATION	3.8709958343556365E-7	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999995974823537	WITHOUT_CLASSIFICATION	4.0251764628590027E-7	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999995974823537	WITHOUT_CLASSIFICATION	4.0251764628590027E-7	TEST
// line 625	WITHOUT_CLASSIFICATION	0.999999600402474	WITHOUT_CLASSIFICATION	3.995975259620175E-7	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999995869004138	WITHOUT_CLASSIFICATION	4.1309958613839814E-7	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999995634610224	WITHOUT_CLASSIFICATION	4.3653897756949907E-7	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999994577176027	WITHOUT_CLASSIFICATION	5.422823974227921E-7	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999994581384481	WITHOUT_CLASSIFICATION	5.4186155180855E-7	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999996548758384	WITHOUT_CLASSIFICATION	3.4512416155851305E-7	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999996344381931	WITHOUT_CLASSIFICATION	3.6556180690855246E-7	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999996366606431	WITHOUT_CLASSIFICATION	3.6333935699132164E-7	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999995931614717	WITHOUT_CLASSIFICATION	4.0683852828387056E-7	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999995783414697	WITHOUT_CLASSIFICATION	4.2165853028232285E-7	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999995843101313	WITHOUT_CLASSIFICATION	4.1568986876608035E-7	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999995571640092	WITHOUT_CLASSIFICATION	4.4283599078842454E-7	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999993972826597	WITHOUT_CLASSIFICATION	6.027173402287007E-7	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999996134073433	WITHOUT_CLASSIFICATION	3.865926566454259E-7	TEST
// line 864	WITHOUT_CLASSIFICATION	0.99999960027649	WITHOUT_CLASSIFICATION	3.9972350994566766E-7	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999995929552062	WITHOUT_CLASSIFICATION	4.070447936444806E-7	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999995599002387	WITHOUT_CLASSIFICATION	4.400997612536669E-7	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999995488720463	WITHOUT_CLASSIFICATION	4.511279535850021E-7	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999994310353747	WITHOUT_CLASSIFICATION	5.68964625340973E-7	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999995407185828	WITHOUT_CLASSIFICATION	4.5928141725806164E-7	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999995968748033	WITHOUT_CLASSIFICATION	4.0312519667757207E-7	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999995376679717	WITHOUT_CLASSIFICATION	4.6233202838120965E-7	TEST
// line 991	WITHOUT_CLASSIFICATION	0.999999528525883	WITHOUT_CLASSIFICATION	4.71474116974814E-7	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999996240866439	WITHOUT_CLASSIFICATION	3.759133561216403E-7	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999996028929513	WITHOUT_CLASSIFICATION	3.9710704870971924E-7	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999994353105348	WITHOUT_CLASSIFICATION	5.646894651815499E-7	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999996737062375	WITHOUT_CLASSIFICATION	3.2629376251923933E-7	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999996102758649	WITHOUT_CLASSIFICATION	3.897241349853463E-7	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999996268598408	WITHOUT_CLASSIFICATION	3.7314015922663755E-7	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.999999652487429	WITHOUT_CLASSIFICATION	3.475125711289553E-7	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999996082455196	WITHOUT_CLASSIFICATION	3.9175448030418006E-7	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999995333491132	WITHOUT_CLASSIFICATION	4.6665088686090734E-7	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999996737274269	WITHOUT_CLASSIFICATION	3.262725730889317E-7	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999996255094976	WITHOUT_CLASSIFICATION	3.744905024493635E-7	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999994991002047	WITHOUT_CLASSIFICATION	5.008997952116516E-7	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999996271362501	WITHOUT_CLASSIFICATION	3.7286374979552414E-7	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999994977551435	WITHOUT_CLASSIFICATION	5.022448564582039E-7	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999995457755622	WITHOUT_CLASSIFICATION	4.5422443789971464E-7	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999996033585662	WITHOUT_CLASSIFICATION	3.9664143379220683E-7	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999993450311684	WITHOUT_CLASSIFICATION	6.549688315797684E-7	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999995580823078	WITHOUT_CLASSIFICATION	4.4191769223451094E-7	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999994175351229	WITHOUT_CLASSIFICATION	5.824648770013483E-7	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999994913430369	WITHOUT_CLASSIFICATION	5.086569630099505E-7	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999995290909338	WITHOUT_CLASSIFICATION	4.709090661620706E-7	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999994431804498	WITHOUT_CLASSIFICATION	5.568195502481475E-7	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999996162713245	WITHOUT_CLASSIFICATION	3.8372867543228694E-7	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999996801000339	WITHOUT_CLASSIFICATION	3.198999659912037E-7	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999995545202356	WITHOUT_CLASSIFICATION	4.4547976436896404E-7	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999995605440289	WITHOUT_CLASSIFICATION	4.394559711028498E-7	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999995408186407	WITHOUT_CLASSIFICATION	4.5918135930837105E-7	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999995028984523	WITHOUT_CLASSIFICATION	4.971015477795328E-7	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999996372473011	WITHOUT_CLASSIFICATION	3.627526989072477E-7	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999995999721332	WITHOUT_CLASSIFICATION	4.000278668804415E-7	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999994443571695	WITHOUT_CLASSIFICATION	5.556428306264512E-7	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999994443571695	WITHOUT_CLASSIFICATION	5.556428306264512E-7	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.999999662386287	WITHOUT_CLASSIFICATION	3.376137129700741E-7	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999995741965851	WITHOUT_CLASSIFICATION	4.258034147617881E-7	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999995597589322	WITHOUT_CLASSIFICATION	4.4024106774786687E-7	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999996355753795	WITHOUT_CLASSIFICATION	3.6442462051184195E-7	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.999999570419833	WITHOUT_CLASSIFICATION	4.295801670433784E-7	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999996022428171	WITHOUT_CLASSIFICATION	3.9775718296680307E-7	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999996652391903	WITHOUT_CLASSIFICATION	3.347608097107006E-7	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999996717887929	WITHOUT_CLASSIFICATION	3.282112071124064E-7	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999996145307362	WITHOUT_CLASSIFICATION	3.854692638463509E-7	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999996142397795	WITHOUT_CLASSIFICATION	3.857602205668711E-7	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.999996499829561	WITHOUT_CLASSIFICATION	3.5001704389514133E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.999996499829561	WITHOUT_CLASSIFICATION	3.5001704389514133E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999991142556652	WITHOUT_CLASSIFICATION	8.85744334682311E-7	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999964599322485	WITHOUT_CLASSIFICATION	3.5400677515030654E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999983082566706	WITHOUT_CLASSIFICATION	1.691743329349255E-6	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999993352058242	WITHOUT_CLASSIFICATION	6.647941758514921E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999796370211	WITHOUT_CLASSIFICATION	2.036297885762393E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999796370211	WITHOUT_CLASSIFICATION	2.036297885762393E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999796370211	WITHOUT_CLASSIFICATION	2.036297885762393E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999796370211	WITHOUT_CLASSIFICATION	2.036297885762393E-8	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9807328907158601	WITHOUT_CLASSIFICATION	0.01926710928413991	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999978355913681	WITHOUT_CLASSIFICATION	2.1644086319779072E-6	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999994016281955	WITHOUT_CLASSIFICATION	5.983718044484784E-7	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999992852608209	WITHOUT_CLASSIFICATION	7.147391789899128E-7	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999993401088204	WITHOUT_CLASSIFICATION	6.598911795138596E-7	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999995447407359	WITHOUT_CLASSIFICATION	4.552592640316506E-7	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999996288196681	WITHOUT_CLASSIFICATION	3.711803320002176E-7	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999996041180771	WITHOUT_CLASSIFICATION	3.958819228992161E-7	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999996182262044	WITHOUT_CLASSIFICATION	3.8177379559008885E-7	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999996548336183	WITHOUT_CLASSIFICATION	3.45166381706018E-7	TEST
// line 555	WITHOUT_CLASSIFICATION	0.999999616289448	WITHOUT_CLASSIFICATION	3.8371055192766575E-7	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999995669759736	WITHOUT_CLASSIFICATION	4.330240262985986E-7	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999996242555943	WITHOUT_CLASSIFICATION	3.7574440565894245E-7	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999994915127279	WITHOUT_CLASSIFICATION	5.084872719865651E-7	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999995770880359	WITHOUT_CLASSIFICATION	4.2291196413438797E-7	TEST
// line 703	WITHOUT_CLASSIFICATION	0.999999443454937	WITHOUT_CLASSIFICATION	5.56545063127507E-7	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999996341210869	WITHOUT_CLASSIFICATION	3.658789130095404E-7	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999996254225454	WITHOUT_CLASSIFICATION	3.7457745454434936E-7	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999993914594438	WITHOUT_CLASSIFICATION	6.085405561130772E-7	TEST
// line 854	WITHOUT_CLASSIFICATION	0.999999612628034	WITHOUT_CLASSIFICATION	3.8737196601839257E-7	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999995681322781	WITHOUT_CLASSIFICATION	4.3186772195462324E-7	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999995237095665	WITHOUT_CLASSIFICATION	4.762904336489388E-7	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999995283996831	WITHOUT_CLASSIFICATION	4.7160031692571426E-7	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999995600238404	WITHOUT_CLASSIFICATION	4.3997615954781373E-7	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999994999584813	WITHOUT_CLASSIFICATION	5.000415187818742E-7	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999996700223189	WITHOUT_CLASSIFICATION	3.2997768111684047E-7	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999996424938843	WITHOUT_CLASSIFICATION	3.5750611571782645E-7	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999995186065994	WITHOUT_CLASSIFICATION	4.813934004690153E-7	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999996086303428	WITHOUT_CLASSIFICATION	3.9136965735224026E-7	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999995479411595	WITHOUT_CLASSIFICATION	4.5205884049715965E-7	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999996413521498	WITHOUT_CLASSIFICATION	3.5864785030644544E-7	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999995720951946	WITHOUT_CLASSIFICATION	4.279048054120207E-7	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999995380053719	WITHOUT_CLASSIFICATION	4.619946280812675E-7	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999996355762513	WITHOUT_CLASSIFICATION	3.644237486679327E-7	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999995884752911	WITHOUT_CLASSIFICATION	4.115247087650286E-7	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999994505721589	WITHOUT_CLASSIFICATION	5.494278411336547E-7	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999995213902529	WITHOUT_CLASSIFICATION	4.786097469863931E-7	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.999999511435809	WITHOUT_CLASSIFICATION	4.885641910903758E-7	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999994876889423	WITHOUT_CLASSIFICATION	5.123110576986223E-7	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999995003336714	WITHOUT_CLASSIFICATION	4.996663286149735E-7	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999995617309329	WITHOUT_CLASSIFICATION	4.3826906714609515E-7	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999994790913194	WITHOUT_CLASSIFICATION	5.209086806729045E-7	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999996722677024	WITHOUT_CLASSIFICATION	3.2773229764492893E-7	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999995385175194	WITHOUT_CLASSIFICATION	4.6148248051722264E-7	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999996358069794	WITHOUT_CLASSIFICATION	3.641930205431217E-7	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999996328906388	WITHOUT_CLASSIFICATION	3.6710936122954357E-7	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999995410126551	WITHOUT_CLASSIFICATION	4.5898734492304236E-7	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.999999606936408	WITHOUT_CLASSIFICATION	3.9306359194964787E-7	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999995916840438	WITHOUT_CLASSIFICATION	4.083159561734661E-7	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999995748461966	WITHOUT_CLASSIFICATION	4.251538033892824E-7	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999996173293697	WITHOUT_CLASSIFICATION	3.826706303534763E-7	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999996248028147	WITHOUT_CLASSIFICATION	3.7519718534370636E-7	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999995847262113	WITHOUT_CLASSIFICATION	4.152737886613467E-7	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999995379680782	WITHOUT_CLASSIFICATION	4.6203192185169867E-7	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999996138222252	WITHOUT_CLASSIFICATION	3.861777747822587E-7	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999995772164582	WITHOUT_CLASSIFICATION	4.2278354173864795E-7	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999996192791716	WITHOUT_CLASSIFICATION	3.807208284416503E-7	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999995523438309	WITHOUT_CLASSIFICATION	4.476561691810732E-7	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999995498346583	WITHOUT_CLASSIFICATION	4.5016534168743775E-7	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.99999976504725	WITHOUT_CLASSIFICATION	2.3495275002099855E-7	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999999924972846	WITHOUT_CLASSIFICATION	7.502715443904095E-9	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997420501431	WITHOUT_CLASSIFICATION	2.5794985688944623E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997420501431	WITHOUT_CLASSIFICATION	2.5794985688944623E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997420501431	WITHOUT_CLASSIFICATION	2.5794985688944623E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997420501431	WITHOUT_CLASSIFICATION	2.5794985688944623E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997420501431	WITHOUT_CLASSIFICATION	2.5794985688944623E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997420501431	WITHOUT_CLASSIFICATION	2.5794985688944623E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997420501431	WITHOUT_CLASSIFICATION	2.5794985688944623E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999742767292	WITHOUT_CLASSIFICATION	2.572327078561866E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999742767292	WITHOUT_CLASSIFICATION	2.572327078561866E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999742767292	WITHOUT_CLASSIFICATION	2.572327078561866E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999742767292	WITHOUT_CLASSIFICATION	2.572327078561866E-8	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999979983883228	WITHOUT_CLASSIFICATION	2.0016116772244438E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999979983883228	WITHOUT_CLASSIFICATION	2.0016116772244438E-6	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999994281436734	WITHOUT_CLASSIFICATION	5.71856326670897E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999786282605	WITHOUT_CLASSIFICATION	2.137173956497985E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999786282605	WITHOUT_CLASSIFICATION	2.137173956497985E-8	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999998698069544	WITHOUT_CLASSIFICATION	1.301930455358136E-7	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999999351547036	WITHOUT_CLASSIFICATION	6.484529632840979E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999895687688	WITHOUT_CLASSIFICATION	1.0431231184690429E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999895687688	WITHOUT_CLASSIFICATION	1.0431231184690429E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999895687688	WITHOUT_CLASSIFICATION	1.0431231184690429E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999895687688	WITHOUT_CLASSIFICATION	1.0431231184690429E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999895687688	WITHOUT_CLASSIFICATION	1.0431231184690429E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999895687688	WITHOUT_CLASSIFICATION	1.0431231184690429E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999895687688	WITHOUT_CLASSIFICATION	1.0431231184690429E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999944617795	WITHOUT_CLASSIFICATION	5.538220562767565E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999837783458	WITHOUT_CLASSIFICATION	1.6221654338879893E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999998814828992	WITHOUT_CLASSIFICATION	1.1851710084573543E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999998814828992	WITHOUT_CLASSIFICATION	1.1851710084573543E-7	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999914492405	WITHOUT_CLASSIFICATION	8.550759615369971E-9	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999997273082117	WITHOUT_CLASSIFICATION	2.726917882984678E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999997273082117	WITHOUT_CLASSIFICATION	2.726917882984678E-7	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999921228925	WITHOUT_CLASSIFICATION	7.877107466121155E-9	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.8893036368399372	WITHOUT_CLASSIFICATION	0.11069636316006283	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.999999882187522	WITHOUT_CLASSIFICATION	1.1781247798519399E-7	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999999807290658	WITHOUT_CLASSIFICATION	1.9270934136493437E-8	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999997104014007	WITHOUT_CLASSIFICATION	2.895985993257888E-7	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999999811703166	WITHOUT_CLASSIFICATION	1.8829683400673745E-7	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999996312611619	WITHOUT_CLASSIFICATION	3.6873883809388156E-7	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999999749077898	WITHOUT_CLASSIFICATION	2.5092210127458528E-8	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999491420964866	WITHOUT_CLASSIFICATION	5.085790351338719E-5	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999984452601104	WITHOUT_CLASSIFICATION	1.5547398896483765E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9947961144155673	WITHOUT_CLASSIFICATION	0.005203885584432702	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999979193218	WITHOUT_CLASSIFICATION	2.0806782147065737E-9	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999767710407	WITHOUT_CLASSIFICATION	2.3228959193606922E-8	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999939292719411	WITHOUT_CLASSIFICATION	6.070728058978902E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999996467082838	WITHOUT_CLASSIFICATION	3.532917161858766E-7	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999999626187416	WITHOUT_CLASSIFICATION	3.738125832329906E-8	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999057864775	WITHOUT_CLASSIFICATION	9.42135225163695E-8	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999969804384934	WITHOUT_CLASSIFICATION	3.019561506599333E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.999999546888228	WITHOUT_CLASSIFICATION	4.53111772045465E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.999999546888228	WITHOUT_CLASSIFICATION	4.53111772045465E-7	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999995372197503	WITHOUT_CLASSIFICATION	4.6278024965727445E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999976773189	WITHOUT_CLASSIFICATION	2.322681099758376E-8	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999683890779	WITHOUT_CLASSIFICATION	3.1610922021291886E-8	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999778095572798	WITHOUT_CLASSIFICATION	2.2190442720207834E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999778610173905	WITHOUT_CLASSIFICATION	2.213898260956506E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999778610173905	WITHOUT_CLASSIFICATION	2.213898260956506E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999778610173905	WITHOUT_CLASSIFICATION	2.213898260956506E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999999003263723	WITHOUT_CLASSIFICATION	9.967362771444433E-8	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999992989391465	WITHOUT_CLASSIFICATION	7.010608534749344E-7	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999999886576753	WITHOUT_CLASSIFICATION	1.134232479967318E-8	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.999999974738257	WITHOUT_CLASSIFICATION	2.526174308988425E-8	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999994952044167	WITHOUT_CLASSIFICATION	5.04795583387112E-7	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999584115961	WITHOUT_CLASSIFICATION	4.1588403902614066E-8	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999998476068498	WITHOUT_CLASSIFICATION	1.5239315016334882E-7	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999996772366149	WITHOUT_CLASSIFICATION	3.2276338508434834E-7	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.999999999763917	WITHOUT_CLASSIFICATION	2.3608302294402605E-10	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999998155186941	WITHOUT_CLASSIFICATION	1.8448130589606458E-7	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999999073609903	WITHOUT_CLASSIFICATION	9.26390096373164E-8	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.999999981250717	WITHOUT_CLASSIFICATION	1.874928303047814E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.99617748214891	WITHOUT_CLASSIFICATION	0.0038225178510899326	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999968591308552	WITHOUT_CLASSIFICATION	3.140869144785219E-6	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999996651796074	WITHOUT_CLASSIFICATION	3.348203925566928E-7	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9998445114063864	WITHOUT_CLASSIFICATION	1.554885936134905E-4	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999999108617205	WITHOUT_CLASSIFICATION	8.9138279582329E-8	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999430825237647	WITHOUT_CLASSIFICATION	5.6917476235159615E-5	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.999999997751774	WITHOUT_CLASSIFICATION	2.2482261219176213E-9	TEST
