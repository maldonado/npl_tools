?R | boolean | True if file is readable by the real uid/gid of the caller FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999990740168568	WITHOUT_CLASSIFICATION	9.259831431954833E-7	TEST
TODO make an assert here	TEST	0.995115180721851	WITHOUT_CLASSIFICATION	0.004884819278149044	TEST
TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.7691755230165176	WITHOUT_CLASSIFICATION	0.23082447698348232	TEST
TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9998741577456717	WITHOUT_CLASSIFICATION	1.258422543283267E-4	TEST
if the method is extending something, then we have to test if the handler is initialized...	TEST	0.9998841221711154	WITHOUT_CLASSIFICATION	1.1587782888453383E-4	TEST
?W | boolean | True if file1 exists and is writable by the real uid/gid FIXME: Need to implement an writable_real_p in FileTest	TEST	0.999997067687962	WITHOUT_CLASSIFICATION	2.932312037978215E-6	TEST
set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999999374453726	WITHOUT_CLASSIFICATION	6.25546273685795E-8	TEST
line 335	WITHOUT_CLASSIFICATION	0.9999946780027029	WITHOUT_CLASSIFICATION	5.321997297120261E-6	TEST
yyLen 542	WITHOUT_CLASSIFICATION	0.9999945639516277	WITHOUT_CLASSIFICATION	5.436048372351138E-6	TEST
yyLen 542	WITHOUT_CLASSIFICATION	0.9999945639516277	WITHOUT_CLASSIFICATION	5.436048372351138E-6	TEST
yyDefRed 945	WITHOUT_CLASSIFICATION	0.999968075418278	WITHOUT_CLASSIFICATION	3.19245817218424E-5	TEST
yyDefRed 945	WITHOUT_CLASSIFICATION	0.999968075418278	WITHOUT_CLASSIFICATION	3.19245817218424E-5	TEST
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999709196820867	WITHOUT_CLASSIFICATION	2.908031791338283E-5	TEST
Figure end-char. '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999993122440728	WITHOUT_CLASSIFICATION	6.877559271359559E-7	TEST
line 362	WITHOUT_CLASSIFICATION	0.9999943481723074	WITHOUT_CLASSIFICATION	5.651827692570746E-6	TEST
line 372	WITHOUT_CLASSIFICATION	0.9999945357556747	WITHOUT_CLASSIFICATION	5.464244325349323E-6	TEST
yySindex 945	WITHOUT_CLASSIFICATION	0.9999914922233728	WITHOUT_CLASSIFICATION	8.507776627240282E-6	TEST
yySindex 945	WITHOUT_CLASSIFICATION	0.9999914922233728	WITHOUT_CLASSIFICATION	8.507776627240282E-6	TEST
line 391	WITHOUT_CLASSIFICATION	0.9999950583520204	WITHOUT_CLASSIFICATION	4.941647979613509E-6	TEST
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999915138616893	WITHOUT_CLASSIFICATION	8.486138310734717E-6	TEST
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999915138616893	WITHOUT_CLASSIFICATION	8.486138310734717E-6	TEST
^D	WITHOUT_CLASSIFICATION	0.9996847573488773	WITHOUT_CLASSIFICATION	3.152426511227395E-4	TEST
^Z	WITHOUT_CLASSIFICATION	0.9997822963292359	WITHOUT_CLASSIFICATION	2.1770367076422698E-4	TEST
yyLen 496	WITHOUT_CLASSIFICATION	0.9999946200940095	WITHOUT_CLASSIFICATION	5.379905990436089E-6	TEST
yyLen 496	WITHOUT_CLASSIFICATION	0.9999946200940095	WITHOUT_CLASSIFICATION	5.379905990436089E-6	TEST
yyLen 496	WITHOUT_CLASSIFICATION	0.9999946200940095	WITHOUT_CLASSIFICATION	5.379905990436089E-6	TEST
yyLen 496	WITHOUT_CLASSIFICATION	0.9999946200940095	WITHOUT_CLASSIFICATION	5.379905990436089E-6	TEST
yyLen 496	WITHOUT_CLASSIFICATION	0.9999946200940095	WITHOUT_CLASSIFICATION	5.379905990436089E-6	TEST
yyLen 496	WITHOUT_CLASSIFICATION	0.9999946200940095	WITHOUT_CLASSIFICATION	5.379905990436089E-6	TEST
yyLen 496	WITHOUT_CLASSIFICATION	0.9999946200940095	WITHOUT_CLASSIFICATION	5.379905990436089E-6	TEST
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999628462351879	WITHOUT_CLASSIFICATION	3.715376481201763E-5	TEST
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999628462351879	WITHOUT_CLASSIFICATION	3.715376481201763E-5	TEST
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999628462351879	WITHOUT_CLASSIFICATION	3.715376481201763E-5	TEST
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999628462351879	WITHOUT_CLASSIFICATION	3.715376481201763E-5	TEST
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999628462351879	WITHOUT_CLASSIFICATION	3.715376481201763E-5	TEST
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999628462351879	WITHOUT_CLASSIFICATION	3.715376481201763E-5	TEST
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999628462351879	WITHOUT_CLASSIFICATION	3.715376481201763E-5	TEST
yyDgoto 136	WITHOUT_CLASSIFICATION	0.999965091088435	WITHOUT_CLASSIFICATION	3.490891156496409E-5	TEST
yyDgoto 136	WITHOUT_CLASSIFICATION	0.999965091088435	WITHOUT_CLASSIFICATION	3.490891156496409E-5	TEST
yyDgoto 136	WITHOUT_CLASSIFICATION	0.999965091088435	WITHOUT_CLASSIFICATION	3.490891156496409E-5	TEST
yyDgoto 136	WITHOUT_CLASSIFICATION	0.999965091088435	WITHOUT_CLASSIFICATION	3.490891156496409E-5	TEST
yyDgoto 136	WITHOUT_CLASSIFICATION	0.999965091088435	WITHOUT_CLASSIFICATION	3.490891156496409E-5	TEST
yyDgoto 136	WITHOUT_CLASSIFICATION	0.999965091088435	WITHOUT_CLASSIFICATION	3.490891156496409E-5	TEST
yySindex 889	WITHOUT_CLASSIFICATION	0.9999900986284769	WITHOUT_CLASSIFICATION	9.901371523204158E-6	TEST
yySindex 889	WITHOUT_CLASSIFICATION	0.9999900986284769	WITHOUT_CLASSIFICATION	9.901371523204158E-6	TEST
yySindex 889	WITHOUT_CLASSIFICATION	0.9999900986284769	WITHOUT_CLASSIFICATION	9.901371523204158E-6	TEST
yySindex 889	WITHOUT_CLASSIFICATION	0.9999900986284769	WITHOUT_CLASSIFICATION	9.901371523204158E-6	TEST
yySindex 889	WITHOUT_CLASSIFICATION	0.9999900986284769	WITHOUT_CLASSIFICATION	9.901371523204158E-6	TEST
yySindex 889	WITHOUT_CLASSIFICATION	0.9999900986284769	WITHOUT_CLASSIFICATION	9.901371523204158E-6	TEST
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999901238111683	WITHOUT_CLASSIFICATION	9.876188831835302E-6	TEST
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999901238111683	WITHOUT_CLASSIFICATION	9.876188831835302E-6	TEST
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999901238111683	WITHOUT_CLASSIFICATION	9.876188831835302E-6	TEST
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999901238111683	WITHOUT_CLASSIFICATION	9.876188831835302E-6	TEST
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999901238111683	WITHOUT_CLASSIFICATION	9.876188831835302E-6	TEST
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999901238111683	WITHOUT_CLASSIFICATION	9.876188831835302E-6	TEST
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999901238111683	WITHOUT_CLASSIFICATION	9.876188831835302E-6	TEST
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999908123771314	WITHOUT_CLASSIFICATION	9.187622868665415E-6	TEST
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999908123771314	WITHOUT_CLASSIFICATION	9.187622868665415E-6	TEST
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999908123771314	WITHOUT_CLASSIFICATION	9.187622868665415E-6	TEST
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999908123771314	WITHOUT_CLASSIFICATION	9.187622868665415E-6	TEST
Do nothing	WITHOUT_CLASSIFICATION	0.9999944991233468	WITHOUT_CLASSIFICATION	5.500876653205568E-6	TEST
Do nothing	WITHOUT_CLASSIFICATION	0.9999944991233468	WITHOUT_CLASSIFICATION	5.500876653205568E-6	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
return result	WITHOUT_CLASSIFICATION	0.9999988224486128	WITHOUT_CLASSIFICATION	1.1775513871599972E-6	TEST
name	WITHOUT_CLASSIFICATION	0.9999352925061811	WITHOUT_CLASSIFICATION	6.470749381889675E-5	TEST
Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.999997604953012	WITHOUT_CLASSIFICATION	2.395046988072642E-6	TEST
Accessor methods.	WITHOUT_CLASSIFICATION	0.9999984811851733	WITHOUT_CLASSIFICATION	1.5188148267060475E-6	TEST
MRI behavior	WITHOUT_CLASSIFICATION	0.9999975533536754	WITHOUT_CLASSIFICATION	2.4466463247032757E-6	TEST
MRI behavior	WITHOUT_CLASSIFICATION	0.9999975533536754	WITHOUT_CLASSIFICATION	2.4466463247032757E-6	TEST
MRI behavior	WITHOUT_CLASSIFICATION	0.9999975533536754	WITHOUT_CLASSIFICATION	2.4466463247032757E-6	TEST
MRI behavior	WITHOUT_CLASSIFICATION	0.9999975533536754	WITHOUT_CLASSIFICATION	2.4466463247032757E-6	TEST
call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999995287472502	WITHOUT_CLASSIFICATION	4.7125274972476645E-7	TEST
fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999999043674818	WITHOUT_CLASSIFICATION	9.563251820137767E-8	TEST
try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999993379556485	WITHOUT_CLASSIFICATION	6.620443514074082E-7	TEST
define ARGV and $ for this runtime	WITHOUT_CLASSIFICATION	0.9999985489273842	WITHOUT_CLASSIFICATION	1.4510726158865782E-6	TEST
Version information:	WITHOUT_CLASSIFICATION	0.999998134707292	WITHOUT_CLASSIFICATION	1.8652927079006386E-6	TEST
after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999059405545	WITHOUT_CLASSIFICATION	9.405944541618951E-8	TEST
ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999982052973693	WITHOUT_CLASSIFICATION	1.7947026306231278E-6	TEST
if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999357121138	WITHOUT_CLASSIFICATION	6.428788633141222E-8	TEST
On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999424098478	WITHOUT_CLASSIFICATION	5.75901521239514E-8	TEST
$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999991879874097	WITHOUT_CLASSIFICATION	8.120125902136296E-7	TEST
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999730353353	WITHOUT_CLASSIFICATION	2.69646646984721E-8	TEST
MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999999102183164	WITHOUT_CLASSIFICATION	8.978168371584013E-8	TEST
this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999808112140447	WITHOUT_CLASSIFICATION	1.9188785955393893E-5	TEST
What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999999679072005	WITHOUT_CLASSIFICATION	3.2092799423124556E-8	TEST
----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999993179189038	WITHOUT_CLASSIFICATION	6.820810961484816E-7	TEST
CONSTANT TABLE METHODS - pass to delegate	WITHOUT_CLASSIFICATION	0.9999911210344201	WITHOUT_CLASSIFICATION	8.878965579871398E-6	TEST
We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999999873816963	WITHOUT_CLASSIFICATION	1.2618303809046196E-8	TEST
MRI behavior	WITHOUT_CLASSIFICATION	0.9999975533536754	WITHOUT_CLASSIFICATION	2.4466463247032757E-6	TEST
----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998757906001	WITHOUT_CLASSIFICATION	1.2420939988797938E-7	TEST
Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999996993070586	WITHOUT_CLASSIFICATION	3.0069294139900895E-7	TEST
----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999992305952952	WITHOUT_CLASSIFICATION	7.694047048233275E-7	TEST
try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.999994605668043	WITHOUT_CLASSIFICATION	5.394331957072308E-6	TEST
otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999999423291863	WITHOUT_CLASSIFICATION	5.7670813777729946E-8	TEST
Proc class	WITHOUT_CLASSIFICATION	0.9999984795937925	WITHOUT_CLASSIFICATION	1.5204062074364037E-6	TEST
No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.999999823332857	WITHOUT_CLASSIFICATION	1.7666714310598361E-7	TEST
modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.999999139882343	WITHOUT_CLASSIFICATION	8.6011765710819E-7	TEST
for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999982199420907	WITHOUT_CLASSIFICATION	1.780057909272311E-6	TEST
case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;	WITHOUT_CLASSIFICATION	0.9999998395486653	WITHOUT_CLASSIFICATION	1.6045133461433019E-7	TEST
This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.999946950633163	WITHOUT_CLASSIFICATION	5.304936683707355E-5	TEST
rb_exc_new3	WITHOUT_CLASSIFICATION	0.999939536425359	WITHOUT_CLASSIFICATION	6.046357464100845E-5	TEST
NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999997624912375	WITHOUT_CLASSIFICATION	2.3750876252394657E-7	TEST
registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999993267443801	WITHOUT_CLASSIFICATION	6.732556199114948E-7	TEST
IOT is also 6	WITHOUT_CLASSIFICATION	0.9999805065421108	WITHOUT_CLASSIFICATION	1.9493457889273218E-5	TEST
CLD is also 20	WITHOUT_CLASSIFICATION	0.9999627055590055	WITHOUT_CLASSIFICATION	3.7294440994470236E-5	TEST
RubySignal	WITHOUT_CLASSIFICATION	0.9999926266727308	WITHOUT_CLASSIFICATION	7.37332726916544E-6	TEST
ZStream actually isn't allocatable	WITHOUT_CLASSIFICATION	0.9999991046975902	WITHOUT_CLASSIFICATION	8.953024098793046E-7	TEST
MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9977419075708139	WITHOUT_CLASSIFICATION	0.0022580924291860033	TEST
it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999977565162159	WITHOUT_CLASSIFICATION	2.243483784004593E-6	TEST
MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999996032678022	WITHOUT_CLASSIFICATION	3.9673219767131264E-7	TEST
SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999529681789955	WITHOUT_CLASSIFICATION	4.703182100460161E-5	TEST
By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999995450515426	WITHOUT_CLASSIFICATION	4.549484572846562E-7	TEST
io.finish();	WITHOUT_CLASSIFICATION	0.9999592785169494	WITHOUT_CLASSIFICATION	4.072148305048768E-5	TEST
should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999981935211854	WITHOUT_CLASSIFICATION	1.8064788146038235E-6	TEST
hmm...	WITHOUT_CLASSIFICATION	0.999795143210625	WITHOUT_CLASSIFICATION	2.0485678937503211E-4	TEST
Called before any write to make sure the header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999996498246602	WITHOUT_CLASSIFICATION	3.501753398337403E-7	TEST
For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999999157512438	WITHOUT_CLASSIFICATION	8.42487562093223E-8	TEST
We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.999999703150054	WITHOUT_CLASSIFICATION	2.9684994597611767E-7	TEST
float number of seconds	WITHOUT_CLASSIFICATION	0.999999596832565	WITHOUT_CLASSIFICATION	4.031674350127354E-7	TEST
modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999987539215701	WITHOUT_CLASSIFICATION	1.2460784298862866E-6	TEST
dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999991653427205	WITHOUT_CLASSIFICATION	8.346572795378983E-7	TEST
Time class methods	WITHOUT_CLASSIFICATION	0.9999997645277949	WITHOUT_CLASSIFICATION	2.3547220515357635E-7	TEST
marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999997554366642	WITHOUT_CLASSIFICATION	2.445633357559875E-7	TEST
MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.999999973870445	WITHOUT_CLASSIFICATION	2.6129554932996614E-8	TEST
set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999984590276032	WITHOUT_CLASSIFICATION	1.540972396773207E-6	TEST
the instant at which we will ask dtz what the difference between DST and standard time is	WITHOUT_CLASSIFICATION	0.9999999384242302	WITHOUT_CLASSIFICATION	6.157576979461327E-8	TEST
if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999998373709608	WITHOUT_CLASSIFICATION	1.6262903911956995E-7	TEST
Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999966200728595	WITHOUT_CLASSIFICATION	3.379927140491549E-6	TEST
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9999992257666439	WITHOUT_CLASSIFICATION	7.742333560496041E-7	TEST
If the value will fit in a Fixnum, return one of those.	WITHOUT_CLASSIFICATION	0.9999999529516062	WITHOUT_CLASSIFICATION	4.7048393961375025E-8	TEST
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999998273172982	WITHOUT_CLASSIFICATION	1.726827018318703E-7	TEST
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.999997973561404	WITHOUT_CLASSIFICATION	2.0264385960601847E-6	TEST
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999981671688988	WITHOUT_CLASSIFICATION	1.832831101304488E-6	TEST
num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999981671688988	WITHOUT_CLASSIFICATION	1.832831101304488E-6	TEST
no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999774192307213	WITHOUT_CLASSIFICATION	2.2580769278710243E-5	TEST
wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999999570538749	WITHOUT_CLASSIFICATION	4.294612504851494E-8	TEST
Pad with a 0	WITHOUT_CLASSIFICATION	0.9999543650019012	WITHOUT_CLASSIFICATION	4.563499809877409E-5	TEST
BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999999129731179	WITHOUT_CLASSIFICATION	8.702688213897255E-8	TEST
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999995647210739	WITHOUT_CLASSIFICATION	4.3527892624400254E-7	TEST
We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999949788444933	WITHOUT_CLASSIFICATION	5.021155506652653E-6	TEST
???	WITHOUT_CLASSIFICATION	0.9997986329579127	WITHOUT_CLASSIFICATION	2.013670420873814E-4	TEST
PID	WITHOUT_CLASSIFICATION	0.9997670244978378	WITHOUT_CLASSIFICATION	2.3297550216221007E-4	TEST
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999998273172982	WITHOUT_CLASSIFICATION	1.726827018318703E-7	TEST
elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999992712213125	WITHOUT_CLASSIFICATION	7.28778687462984E-7	TEST
Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999144000392985	WITHOUT_CLASSIFICATION	8.55999607015157E-5	TEST
volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999955158432	WITHOUT_CLASSIFICATION	4.4841568188751765E-9	TEST
Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise	WITHOUT_CLASSIFICATION	0.9999999836783707	WITHOUT_CLASSIFICATION	1.6321629266943323E-8	TEST
rb_ary_new2 just allocates the internal array	WITHOUT_CLASSIFICATION	0.9999997110389489	WITHOUT_CLASSIFICATION	2.88961051033078E-7	TEST
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9999987053263083	WITHOUT_CLASSIFICATION	1.2946736916135193E-6	TEST
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9999987053263083	WITHOUT_CLASSIFICATION	1.2946736916135193E-6	TEST
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9999987053263083	WITHOUT_CLASSIFICATION	1.2946736916135193E-6	TEST
Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour	WITHOUT_CLASSIFICATION	0.9999999828635381	WITHOUT_CLASSIFICATION	1.713646201264572E-8	TEST
NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace	WITHOUT_CLASSIFICATION	0.9999990931193068	WITHOUT_CLASSIFICATION	9.068806932555851E-7	TEST
Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999988566032872	WITHOUT_CLASSIFICATION	1.1433967127616504E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999996023628521	WITHOUT_CLASSIFICATION	3.9763714790602237E-7	TEST
There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.	WITHOUT_CLASSIFICATION	0.9999997988959023	WITHOUT_CLASSIFICATION	2.0110409770209196E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999996798445518	WITHOUT_CLASSIFICATION	3.201554481863177E-7	TEST
possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999996129974978	WITHOUT_CLASSIFICATION	3.870025021996327E-7	TEST
only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999996444715747	WITHOUT_CLASSIFICATION	3.555284253078402E-7	TEST
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999555053464569	WITHOUT_CLASSIFICATION	4.449465354310624E-5	TEST
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999555053464569	WITHOUT_CLASSIFICATION	4.449465354310624E-5	TEST
from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999850872530597	WITHOUT_CLASSIFICATION	1.4912746940263973E-5	TEST
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999960197735404	WITHOUT_CLASSIFICATION	3.980226459649737E-6	TEST
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999954731182893	WITHOUT_CLASSIFICATION	4.526881710709156E-6	TEST
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999954731182893	WITHOUT_CLASSIFICATION	4.526881710709156E-6	TEST
Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999995362456959	WITHOUT_CLASSIFICATION	4.637543040334236E-7	TEST
pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999474327075	WITHOUT_CLASSIFICATION	5.256729244215501E-8	TEST
root fiber	WITHOUT_CLASSIFICATION	0.9999995421768858	WITHOUT_CLASSIFICATION	4.5782311417963533E-7	TEST
GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.	WITHOUT_CLASSIFICATION	0.9999999365339336	WITHOUT_CLASSIFICATION	6.346606640485574E-8	TEST
See http:www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999988930582654	WITHOUT_CLASSIFICATION	1.1069417345847254E-6	TEST
extras flag	WITHOUT_CLASSIFICATION	0.9999985047884167	WITHOUT_CLASSIFICATION	1.4952115832737251E-6	TEST
Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999199783108338	WITHOUT_CLASSIFICATION	8.002168916621094E-5	TEST
...nothing	WITHOUT_CLASSIFICATION	0.9999729736713087	WITHOUT_CLASSIFICATION	2.7026328691401562E-5	TEST
utility method	WITHOUT_CLASSIFICATION	0.9999982069021511	WITHOUT_CLASSIFICATION	1.7930978488483002E-6	TEST
Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999996191298836	WITHOUT_CLASSIFICATION	3.808701163746017E-7	TEST
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999998273172982	WITHOUT_CLASSIFICATION	1.726827018318703E-7	TEST
flags 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999844430949015	WITHOUT_CLASSIFICATION	1.555690509841512E-5	TEST
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999995682154014	WITHOUT_CLASSIFICATION	4.317845986352668E-7	TEST
1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999980183241584	WITHOUT_CLASSIFICATION	1.9816758416558266E-6	TEST
any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999983402573427	WITHOUT_CLASSIFICATION	1.6597426573673224E-6	TEST
beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999915519355358	WITHOUT_CLASSIFICATION	8.448064464161132E-6	TEST
MRI does it!	WITHOUT_CLASSIFICATION	0.9999596935880467	WITHOUT_CLASSIFICATION	4.030641195329166E-5	TEST
won't hurt fixnums	WITHOUT_CLASSIFICATION	0.999998933440776	WITHOUT_CLASSIFICATION	1.0665592240150761E-6	TEST
it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999943714215537	WITHOUT_CLASSIFICATION	5.628578446276066E-6	TEST
RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999957301011921	WITHOUT_CLASSIFICATION	4.26989880788697E-6	TEST
not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999991792922279	WITHOUT_CLASSIFICATION	8.207077721636727E-7	TEST
second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999999214415424	WITHOUT_CLASSIFICATION	7.855845760094461E-8	TEST
we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999998881598178	WITHOUT_CLASSIFICATION	1.1184018224665591E-7	TEST
terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999998772685176	WITHOUT_CLASSIFICATION	1.2273148247546206E-7	TEST
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999996700245547	WITHOUT_CLASSIFICATION	3.29975445297435E-7	TEST
do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9991951276927866	WITHOUT_CLASSIFICATION	8.048723072133507E-4	TEST
recheck condition	WITHOUT_CLASSIFICATION	0.99999986026369	WITHOUT_CLASSIFICATION	1.3973630997727502E-7	TEST
Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999999402586637	WITHOUT_CLASSIFICATION	5.974133639298695E-8	TEST
Construct key services	WITHOUT_CLASSIFICATION	0.9999992757347077	WITHOUT_CLASSIFICATION	7.242652922093956E-7	TEST
initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999999751495287	WITHOUT_CLASSIFICATION	2.4850471326385844E-8	TEST
Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999999839749918	WITHOUT_CLASSIFICATION	1.6025008262061904E-8	TEST
Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999999575233806	WITHOUT_CLASSIFICATION	4.24766193614475E-8	TEST
Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999977071465	WITHOUT_CLASSIFICATION	2.2928534851281643E-9	TEST
Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999990732393	WITHOUT_CLASSIFICATION	9.267605598101139E-10	TEST
Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999971926221679	WITHOUT_CLASSIFICATION	2.807377832199402E-6	TEST
Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.999999903344212	WITHOUT_CLASSIFICATION	9.665578793131583E-8	TEST
Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999990266963932	WITHOUT_CLASSIFICATION	9.733036067216668E-7	TEST
depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999889744394523	WITHOUT_CLASSIFICATION	1.1025560547670171E-5	TEST
initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999999075884297	WITHOUT_CLASSIFICATION	9.241157034346603E-8	TEST
Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999348080213	WITHOUT_CLASSIFICATION	6.519197870425112E-8	TEST
Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999992895932245	WITHOUT_CLASSIFICATION	7.104067755892224E-7	TEST
we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999772307583	WITHOUT_CLASSIFICATION	2.2769241654143277E-8	TEST
determine spacing	WITHOUT_CLASSIFICATION	0.9999997873743085	WITHOUT_CLASSIFICATION	2.126256914778002E-7	TEST
should alter global state	WITHOUT_CLASSIFICATION	0.9999830889876282	WITHOUT_CLASSIFICATION	1.6911012371700745E-5	TEST
For JSR 223 support: see http:scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999994151579464	WITHOUT_CLASSIFICATION	5.84842053585516E-7	TEST
use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999986425132246	WITHOUT_CLASSIFICATION	1.3574867753986526E-6	TEST
this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999973693042639	WITHOUT_CLASSIFICATION	2.6306957360829125E-6	TEST
new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999996098787763	WITHOUT_CLASSIFICATION	3.90121223646319E-7	TEST
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999319421782698	WITHOUT_CLASSIFICATION	6.805782173029376E-5	TEST
Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999998014754377	WITHOUT_CLASSIFICATION	1.9852456243017718E-7	TEST
default: don't retain	WITHOUT_CLASSIFICATION	0.9999988764232186	WITHOUT_CLASSIFICATION	1.1235767813738506E-6	TEST
ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999998624149266	WITHOUT_CLASSIFICATION	1.3758507335498102E-7	TEST
Default objects	WITHOUT_CLASSIFICATION	0.9999994819369153	WITHOUT_CLASSIFICATION	5.180630846515709E-7	TEST
record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.999996593393581	WITHOUT_CLASSIFICATION	3.4066064190359436E-6	TEST
former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999992770221852	WITHOUT_CLASSIFICATION	7.229778148291206E-7	TEST
Java support	WITHOUT_CLASSIFICATION	0.9999976682173292	WITHOUT_CLASSIFICATION	2.3317826708516424E-6	TEST
Parser stats	WITHOUT_CLASSIFICATION	0.9999972716586355	WITHOUT_CLASSIFICATION	2.7283413644333254E-6	TEST
Compilation	WITHOUT_CLASSIFICATION	0.9999857620840028	WITHOUT_CLASSIFICATION	1.4237915997110528E-5	TEST
can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999995770748594	WITHOUT_CLASSIFICATION	4.229251405183923E-7	TEST
can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999997700116752	WITHOUT_CLASSIFICATION	2.2998832492715985E-7	TEST
mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999998208021003	WITHOUT_CLASSIFICATION	1.791978997026405E-7	TEST
mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999995917319792	WITHOUT_CLASSIFICATION	4.0826802086754783E-7	TEST
A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999998641329407	WITHOUT_CLASSIFICATION	1.3586705924783767E-7	TEST
A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999995937926208	WITHOUT_CLASSIFICATION	4.0620737913914925E-7	TEST
initial spaces spaces before "at"	WITHOUT_CLASSIFICATION	0.999999931527053	WITHOUT_CLASSIFICATION	6.847294696962426E-8	TEST
event name filename line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999997076976705	WITHOUT_CLASSIFICATION	2.923023293891764E-7	TEST
The method is intentionally not public, since it typically should not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999999479804146	WITHOUT_CLASSIFICATION	5.2019585373694805E-8	TEST
Note: this field and the following static initializer must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999999595100582	WITHOUT_CLASSIFICATION	4.0489941818367134E-8	TEST
Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999999070698425	WITHOUT_CLASSIFICATION	9.293015738249356E-8	TEST
quoted-printable	WITHOUT_CLASSIFICATION	0.9999990798191081	WITHOUT_CLASSIFICATION	9.201808917787649E-7	TEST
default options	WITHOUT_CLASSIFICATION	0.9999998370507835	WITHOUT_CLASSIFICATION	1.6294921652036072E-7	TEST
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999070399880893	WITHOUT_CLASSIFICATION	9.296001191072489E-5	TEST
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999070399880893	WITHOUT_CLASSIFICATION	9.296001191072489E-5	TEST
Shift_JIS	WITHOUT_CLASSIFICATION	0.9999756264248683	WITHOUT_CLASSIFICATION	2.4373575131797905E-5	TEST
Shift_JIS	WITHOUT_CLASSIFICATION	0.9999756264248683	WITHOUT_CLASSIFICATION	2.4373575131797905E-5	TEST
EUC-JP	WITHOUT_CLASSIFICATION	0.9999237541302913	WITHOUT_CLASSIFICATION	7.624586970861486E-5	TEST
EUC-JP	WITHOUT_CLASSIFICATION	0.9999237541302913	WITHOUT_CLASSIFICATION	7.624586970861486E-5	TEST
UTF-8	WITHOUT_CLASSIFICATION	0.999934732008743	WITHOUT_CLASSIFICATION	6.526799125700127E-5	TEST
UTF-8	WITHOUT_CLASSIFICATION	0.999934732008743	WITHOUT_CLASSIFICATION	6.526799125700127E-5	TEST
long name option	WITHOUT_CLASSIFICATION	0.9999909597220734	WITHOUT_CLASSIFICATION	9.04027792655546E-6	TEST
conversion	WITHOUT_CLASSIFICATION	0.9999962361831908	WITHOUT_CLASSIFICATION	3.7638168093617446E-6	TEST
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9999991448088248	WITHOUT_CLASSIFICATION	8.551911752491664E-7	TEST
string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999859892645396	WITHOUT_CLASSIFICATION	1.4010735460382079E-5	TEST
string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999997340594354	WITHOUT_CLASSIFICATION	2.659405646281312E-7	TEST
string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999899054950168	WITHOUT_CLASSIFICATION	1.009450498316744E-5	TEST
ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9996345662043038	WITHOUT_CLASSIFICATION	3.6543379569615965E-4	TEST
rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999976183751974	WITHOUT_CLASSIFICATION	2.381624802535819E-6	TEST
rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999973718491797	WITHOUT_CLASSIFICATION	2.628150820231542E-6	TEST
rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999682789595524	WITHOUT_CLASSIFICATION	3.172104044760106E-5	TEST
Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999973782554114	WITHOUT_CLASSIFICATION	2.6217445886453495E-6	TEST
String construction routines by NOT byte[] buffer and NOT making the target String shared	WITHOUT_CLASSIFICATION	0.9999999402570054	WITHOUT_CLASSIFICATION	5.974299455395707E-8	TEST
rb_str_subseq	WITHOUT_CLASSIFICATION	0.9999813133246794	WITHOUT_CLASSIFICATION	1.8686675320515858E-5	TEST
no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999988715524739	WITHOUT_CLASSIFICATION	1.1284475261505562E-6	TEST
if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999996263253258	WITHOUT_CLASSIFICATION	3.736746741824178E-7	TEST
rb_str_cmp_m	WITHOUT_CLASSIFICATION	0.9999524011017014	WITHOUT_CLASSIFICATION	4.7598898298716425E-5	TEST
we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999942696609	WITHOUT_CLASSIFICATION	5.73033908984815E-9	TEST
rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999979843466231	WITHOUT_CLASSIFICATION	2.015653376865772E-6	TEST
encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999802888858671	WITHOUT_CLASSIFICATION	1.971111413301289E-5	TEST
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.999995275912332	WITHOUT_CLASSIFICATION	4.724087668104906E-6	TEST
must not reallocate	WITHOUT_CLASSIFICATION	0.9999993029969483	WITHOUT_CLASSIFICATION	6.970030518434077E-7	TEST
Illegal combination	WITHOUT_CLASSIFICATION	0.9999923275402419	WITHOUT_CLASSIFICATION	7.672459758082757E-6	TEST
use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999949992831189	WITHOUT_CLASSIFICATION	5.000716881127296E-6	TEST
RubyString aka rb_string_value	WITHOUT_CLASSIFICATION	0.9999987222876854	WITHOUT_CLASSIFICATION	1.2777123147023087E-6	TEST
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9999965052855456	WITHOUT_CLASSIFICATION	3.494714454426336E-6	TEST
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999987985239536	WITHOUT_CLASSIFICATION	1.201476046451488E-6	TEST
len + margin	WITHOUT_CLASSIFICATION	0.9999958894630571	WITHOUT_CLASSIFICATION	4.110536942874608E-6	TEST
block given	WITHOUT_CLASSIFICATION	0.9999968974024015	WITHOUT_CLASSIFICATION	3.1025975985879744E-6	TEST
block given	WITHOUT_CLASSIFICATION	0.9999968974024015	WITHOUT_CLASSIFICATION	3.1025975985879744E-6	TEST
copy pre-match substr	WITHOUT_CLASSIFICATION	0.9999990519694342	WITHOUT_CLASSIFICATION	9.480305658125261E-7	TEST
string given	WITHOUT_CLASSIFICATION	0.9999901552214607	WITHOUT_CLASSIFICATION	9.844778539386814E-6	TEST
hash given	WITHOUT_CLASSIFICATION	0.9999960067840228	WITHOUT_CLASSIFICATION	3.993215977248373E-6	TEST
This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999999154913486	WITHOUT_CLASSIFICATION	8.450865145306087E-8	TEST
substring longer than string	WITHOUT_CLASSIFICATION	0.9999947959650494	WITHOUT_CLASSIFICATION	5.204034950640778E-6	TEST
rb_str_substr	WITHOUT_CLASSIFICATION	0.9999427921145096	WITHOUT_CLASSIFICATION	5.7207885490393754E-5	TEST
nothing	WITHOUT_CLASSIFICATION	0.9999714551611159	WITHOUT_CLASSIFICATION	2.8544838884253048E-5	TEST
nothing	WITHOUT_CLASSIFICATION	0.9999714551611159	WITHOUT_CLASSIFICATION	2.8544838884253048E-5	TEST
rb_str_splice	WITHOUT_CLASSIFICATION	0.9999945214078969	WITHOUT_CLASSIFICATION	5.478592103043386E-6	TEST
TODO: keep cr TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9984978543128044	WITHOUT_CLASSIFICATION	0.001502145687195707	TEST
keep cr ?	WITHOUT_CLASSIFICATION	0.9999965861590374	WITHOUT_CLASSIFICATION	3.413840962530479E-6	TEST
keep cr ?	WITHOUT_CLASSIFICATION	0.9999965861590374	WITHOUT_CLASSIFICATION	3.413840962530479E-6	TEST
wrapped to \0...\0. search next valid char.	WITHOUT_CLASSIFICATION	0.9999999126064034	WITHOUT_CLASSIFICATION	8.739359654827316E-8	TEST
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9999678313228697	WITHOUT_CLASSIFICATION	3.216867713035467E-5	TEST
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9999678313228697	WITHOUT_CLASSIFICATION	3.216867713035467E-5	TEST
modified	WITHOUT_CLASSIFICATION	0.9999910028217772	WITHOUT_CLASSIFICATION	8.997178222760067E-6	TEST
modified	WITHOUT_CLASSIFICATION	0.9999910028217772	WITHOUT_CLASSIFICATION	8.997178222760067E-6	TEST
1.8	WITHOUT_CLASSIFICATION	0.9997127463728605	WITHOUT_CLASSIFICATION	2.8725362713962567E-4	TEST
1.8	WITHOUT_CLASSIFICATION	0.9997127463728605	WITHOUT_CLASSIFICATION	2.8725362713962567E-4	TEST
QTRUE	WITHOUT_CLASSIFICATION	0.9998941187590871	WITHOUT_CLASSIFICATION	1.0588124091302331E-4	TEST
retrieve last replacer	WITHOUT_CLASSIFICATION	0.9999991621546667	WITHOUT_CLASSIFICATION	8.378453332836312E-7	TEST
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999995357787183	WITHOUT_CLASSIFICATION	4.642212817215114E-7	TEST
long size bits in byte	WITHOUT_CLASSIFICATION	0.9999975743398741	WITHOUT_CLASSIFICATION	2.4256601258716067E-6	TEST
from encoding, special-casing ASCII to ASCII	WITHOUT_CLASSIFICATION	0.9999999890372502	WITHOUT_CLASSIFICATION	1.09627498826177E-8	TEST
to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.999999959606873	WITHOUT_CLASSIFICATION	4.039312689238494E-8	TEST
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999964614295355	WITHOUT_CLASSIFICATION	3.538570464478671E-6	TEST
decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999998908042066	WITHOUT_CLASSIFICATION	1.0919579337053485E-7	TEST
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999964614295355	WITHOUT_CLASSIFICATION	3.538570464478671E-6	TEST
Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9997585823153995	WITHOUT_CLASSIFICATION	2.414176846005726E-4	TEST
no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999988653504911	WITHOUT_CLASSIFICATION	1.1346495088826356E-6	TEST
interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999994464531687	WITHOUT_CLASSIFICATION	5.535468312830903E-7	TEST
File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999956859279615	WITHOUT_CLASSIFICATION	4.314072038475158E-6	TEST
rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999994704119116	WITHOUT_CLASSIFICATION	5.295880883775811E-7	TEST
We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999995969156612	WITHOUT_CLASSIFICATION	4.030843387291134E-7	TEST
exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999664770913509	WITHOUT_CLASSIFICATION	3.3522908649142645E-5	TEST
Zero sleeps forever	WITHOUT_CLASSIFICATION	0.999993193545253	WITHOUT_CLASSIFICATION	6.8064547470490765E-6	TEST
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999934881902	WITHOUT_CLASSIFICATION	6.511809662740436E-9	TEST
Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999999631484806	WITHOUT_CLASSIFICATION	3.685151941194897E-8	TEST
Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999997318928417	WITHOUT_CLASSIFICATION	2.6810715827538714E-7	TEST
adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999716136434561	WITHOUT_CLASSIFICATION	2.838635654392775E-5	TEST
file not given	WITHOUT_CLASSIFICATION	0.9999974655717403	WITHOUT_CLASSIFICATION	2.5344282596686524E-6	TEST
string to eval	WITHOUT_CLASSIFICATION	0.9999991582059583	WITHOUT_CLASSIFICATION	8.417940417195399E-7	TEST
binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999967190647315	WITHOUT_CLASSIFICATION	3.280935268397734E-6	TEST
?g | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999808330546	WITHOUT_CLASSIFICATION	1.9166945332114218E-8	TEST
bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999943136778515	WITHOUT_CLASSIFICATION	5.686322148439339E-6	TEST
Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.999999457255334	WITHOUT_CLASSIFICATION	5.42744665966697E-7	TEST
Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999995062485386	WITHOUT_CLASSIFICATION	4.937514612828385E-7	TEST
No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999861762102797	WITHOUT_CLASSIFICATION	1.3823789720149895E-5	TEST
without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999947966597441	WITHOUT_CLASSIFICATION	5.203340255927268E-6	TEST
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999995254931269	WITHOUT_CLASSIFICATION	4.745068730785446E-7	TEST
MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999992202449592	WITHOUT_CLASSIFICATION	7.797550406523561E-7	TEST
MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999992893947102	WITHOUT_CLASSIFICATION	7.106052899161885E-7	TEST
?A | Time | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999987718282366	WITHOUT_CLASSIFICATION	1.2281717634906609E-6	TEST
?b | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999998116217969	WITHOUT_CLASSIFICATION	1.8837820313983028E-7	TEST
?c | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999995823367649	WITHOUT_CLASSIFICATION	4.1766323506915175E-7	TEST
?C | Time | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999992020353108	WITHOUT_CLASSIFICATION	7.979646892031991E-7	TEST
?d | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999154703573	WITHOUT_CLASSIFICATION	8.452964279134007E-8	TEST
?e | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999997398635192	WITHOUT_CLASSIFICATION	2.601364808252681E-7	TEST
?f | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999996556229893	WITHOUT_CLASSIFICATION	3.443770106750071E-7	TEST
?G | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999936340186	WITHOUT_CLASSIFICATION	6.365981390488306E-9	TEST
?k | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999909783552	WITHOUT_CLASSIFICATION	9.021644828573529E-9	TEST
?M | Time | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999985437262627	WITHOUT_CLASSIFICATION	1.456273737167109E-6	TEST
?o | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999251704206	WITHOUT_CLASSIFICATION	7.482957936467414E-8	TEST
?O | boolean | True if file1 exists and is owned by the caller's real uid	WITHOUT_CLASSIFICATION	0.9999998108083674	WITHOUT_CLASSIFICATION	1.8919163250240047E-7	TEST
?p | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.999999819067436	WITHOUT_CLASSIFICATION	1.8093256407609908E-7	TEST
?r | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999999434813391	WITHOUT_CLASSIFICATION	5.651866083417215E-8	TEST
?s | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999999963680583	WITHOUT_CLASSIFICATION	3.6319419002771836E-9	TEST
?S | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.999999810449104	WITHOUT_CLASSIFICATION	1.8955089596738708E-7	TEST
?u | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999694596458	WITHOUT_CLASSIFICATION	3.054035432030535E-8	TEST
?x | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.999999840020306	WITHOUT_CLASSIFICATION	1.5997969407785798E-7	TEST
?X | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999998559257627	WITHOUT_CLASSIFICATION	1.4407423728684084E-7	TEST
?z | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999998279497198	WITHOUT_CLASSIFICATION	1.7205028021599075E-7	TEST
?= | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999998983072386	WITHOUT_CLASSIFICATION	1.0169276151260048E-7	TEST
?< | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999998185030264	WITHOUT_CLASSIFICATION	1.814969735969287E-7	TEST
?> | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999971750512333	WITHOUT_CLASSIFICATION	2.824948766596628E-6	TEST
?- | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999821157706	WITHOUT_CLASSIFICATION	1.7884229478851138E-8	TEST
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999991345406742	WITHOUT_CLASSIFICATION	8.654593258408046E-7	TEST
Error info is per-thread	WITHOUT_CLASSIFICATION	0.999999432145813	WITHOUT_CLASSIFICATION	5.678541869148251E-7	TEST
init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999997628542775	WITHOUT_CLASSIFICATION	2.3714572246625606E-7	TEST
if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999080707556	WITHOUT_CLASSIFICATION	9.192924443846367E-8	TEST
If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999599241117453	WITHOUT_CLASSIFICATION	4.0075888254686044E-5	TEST
new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999993747714109	WITHOUT_CLASSIFICATION	6.252285891335598E-7	TEST
set to default thread group	WITHOUT_CLASSIFICATION	0.9999997253014326	WITHOUT_CLASSIFICATION	2.746985673443077E-7	TEST
set to default thread group	WITHOUT_CLASSIFICATION	0.9999997253014326	WITHOUT_CLASSIFICATION	2.746985673443077E-7	TEST
JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999988530439073	WITHOUT_CLASSIFICATION	1.1469560926873801E-6	TEST
JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999904459938261	WITHOUT_CLASSIFICATION	9.55400617397303E-6	TEST
for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999199914872	WITHOUT_CLASSIFICATION	8.000851277594829E-8	TEST
JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.999999965049343	WITHOUT_CLASSIFICATION	3.49506571028359E-8	TEST
MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999998890481134	WITHOUT_CLASSIFICATION	1.1095188655446287E-7	TEST
If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999989448763513	WITHOUT_CLASSIFICATION	1.0551236486933442E-6	TEST
We need this loop in order to be able to "unblock" the join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.999994586860124	WITHOUT_CLASSIFICATION	5.413139875993055E-6	TEST
attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999999909576125	WITHOUT_CLASSIFICATION	9.042387546331801E-9	TEST
not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999982540140988	WITHOUT_CLASSIFICATION	1.7459859010893665E-6	TEST
If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999993946209886	WITHOUT_CLASSIFICATION	6.053790113513448E-7	TEST
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999844160605	WITHOUT_CLASSIFICATION	1.5583939482280757E-8	TEST
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999844160605	WITHOUT_CLASSIFICATION	1.5583939482280757E-8	TEST
ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...	WITHOUT_CLASSIFICATION	0.9999995807103591	WITHOUT_CLASSIFICATION	4.192896409893043E-7	TEST
can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.999999968141394	WITHOUT_CLASSIFICATION	3.185860586246042E-8	TEST
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999923011891061	WITHOUT_CLASSIFICATION	7.69881089384114E-6	TEST
Create Constants class	WITHOUT_CLASSIFICATION	0.9999986843447453	WITHOUT_CLASSIFICATION	1.3156552546526199E-6	TEST
Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999959710968788	WITHOUT_CLASSIFICATION	4.028903121218333E-6	TEST
Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999748360968	WITHOUT_CLASSIFICATION	2.516390319305845E-8	TEST
Create constants for flock	WITHOUT_CLASSIFICATION	0.9999955638251707	WITHOUT_CLASSIFICATION	4.436174829246302E-6	TEST
File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.999999603153347	WITHOUT_CLASSIFICATION	3.968466530648764E-7	TEST
Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999999927448978	WITHOUT_CLASSIFICATION	7.255102171810833E-9	TEST
null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999990267708042	WITHOUT_CLASSIFICATION	9.732291957907395E-7	TEST
Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999999274324993	WITHOUT_CLASSIFICATION	7.256750069701971E-8	TEST
Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999991408324529	WITHOUT_CLASSIFICATION	8.591675469782036E-7	TEST
Return false here	WITHOUT_CLASSIFICATION	0.9999998756203002	WITHOUT_CLASSIFICATION	1.243796998786471E-7	TEST
Return false here	WITHOUT_CLASSIFICATION	0.9999998756203002	WITHOUT_CLASSIFICATION	1.243796998786471E-7	TEST
We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999999133838708	WITHOUT_CLASSIFICATION	8.66161291449685E-8	TEST
Should we do anything?	WITHOUT_CLASSIFICATION	0.999997641968275	WITHOUT_CLASSIFICATION	2.3580317250478276E-6	TEST
File class methods	WITHOUT_CLASSIFICATION	0.9999998192058879	WITHOUT_CLASSIFICATION	1.8079411211026999E-7	TEST
MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999996078776611	WITHOUT_CLASSIFICATION	3.9212233892636405E-7	TEST
strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999997855778714	WITHOUT_CLASSIFICATION	2.1442212866575866E-7	TEST
C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999990627369842	WITHOUT_CLASSIFICATION	9.37263015842797E-7	TEST
-1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999982627049789	WITHOUT_CLASSIFICATION	1.7372950210574355E-6	TEST
trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999954307213029	WITHOUT_CLASSIFICATION	4.569278696970839E-6	TEST
Dot is not at beginning and not at end of filename.	WITHOUT_CLASSIFICATION	0.9999931031476895	WITHOUT_CLASSIFICATION	6.896852310473866E-6	TEST
Handle ~user paths	WITHOUT_CLASSIFICATION	0.999999907471921	WITHOUT_CLASSIFICATION	9.252807901471892E-8	TEST
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999923011891061	WITHOUT_CLASSIFICATION	7.69881089384114E-6	TEST
Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999960345003348	WITHOUT_CLASSIFICATION	3.965499665214433E-6	TEST
FNFException can be thrown in both cases, when the file is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999990230970774	WITHOUT_CLASSIFICATION	9.769029225580451E-7	TEST
No directory delimeter. Rest of string is username	WITHOUT_CLASSIFICATION	0.9999369044713186	WITHOUT_CLASSIFICATION	6.309552868153258E-5	TEST
If there's a second argument, it's the path to which the first argument is relative.	WITHOUT_CLASSIFICATION	0.999999991154035	WITHOUT_CLASSIFICATION	8.845964961461292E-9	TEST
Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999998693790136	WITHOUT_CLASSIFICATION	1.3062098637665844E-7	TEST
If there's no second argument, simply use the working directory of the runtime.	WITHOUT_CLASSIFICATION	0.9999999738579298	WITHOUT_CLASSIFICATION	2.6142070159996337E-8	TEST
Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999981277065086	WITHOUT_CLASSIFICATION	1.8722934913109685E-6	TEST
Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999996455942873	WITHOUT_CLASSIFICATION	3.544057126035881E-7	TEST
Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.999999822694555	WITHOUT_CLASSIFICATION	1.7730544497216418E-7	TEST
'~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999999063709136	WITHOUT_CLASSIFICATION	9.362908633155105E-8	TEST
'~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999994736284141	WITHOUT_CLASSIFICATION	5.263715858481804E-7	TEST
Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999944225077424	WITHOUT_CLASSIFICATION	5.577492257640736E-6	TEST
If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999960137673223	WITHOUT_CLASSIFICATION	3.9862326776148255E-6	TEST
no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999989430641449	WITHOUT_CLASSIFICATION	1.0569358550067809E-6	TEST
we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.999972438783644	WITHOUT_CLASSIFICATION	2.7561216356059142E-5	TEST
we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999999631718415	WITHOUT_CLASSIFICATION	3.68281584398663E-8	TEST
do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999980324648517	WITHOUT_CLASSIFICATION	1.9675351482846342E-6	TEST
rb: check_modifiable	WITHOUT_CLASSIFICATION	0.9999993424830705	WITHOUT_CLASSIFICATION	6.575169294097104E-7	TEST
rb: readable	WITHOUT_CLASSIFICATION	0.9999885419268243	WITHOUT_CLASSIFICATION	1.1458073175763293E-5	TEST
rename is successful	WITHOUT_CLASSIFICATION	0.9999954082307383	WITHOUT_CLASSIFICATION	4.591769261792379E-6	TEST
rename via Java API call wasn't successful, let's try some tricks, similar to MRI	WITHOUT_CLASSIFICATION	0.9999999715782684	WITHOUT_CLASSIFICATION	2.8421731610624286E-8	TEST
try to rename one more time	WITHOUT_CLASSIFICATION	0.9999865203843682	WITHOUT_CLASSIFICATION	1.3479615631867468E-5	TEST
Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999998345040132	WITHOUT_CLASSIFICATION	1.6549598676348531E-7	TEST
Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999959154425601	WITHOUT_CLASSIFICATION	4.084557439983955E-6	TEST
RubyContinuation	WITHOUT_CLASSIFICATION	0.9999889848992952	WITHOUT_CLASSIFICATION	1.1015100704817344E-5	TEST
Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field	WITHOUT_CLASSIFICATION	0.9999999620994615	WITHOUT_CLASSIFICATION	3.7900538475020724E-8	TEST
16 ?	WITHOUT_CLASSIFICATION	0.999970969299604	WITHOUT_CLASSIFICATION	2.9030700396031908E-5	TEST
generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999991132172409	WITHOUT_CLASSIFICATION	8.867827591697793E-7	TEST
size + 1;	WITHOUT_CLASSIFICATION	0.9999983489695069	WITHOUT_CLASSIFICATION	1.6510304931212595E-6	TEST
suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999999611192835	WITHOUT_CLASSIFICATION	3.888071656408028E-8	TEST
------------------------------	WITHOUT_CLASSIFICATION	0.9992984941038774	WITHOUT_CLASSIFICATION	7.015058961225332E-4	TEST
------------------------------	WITHOUT_CLASSIFICATION	0.9992984941038774	WITHOUT_CLASSIFICATION	7.015058961225332E-4	TEST
put implementation	WITHOUT_CLASSIFICATION	0.9999989920152688	WITHOUT_CLASSIFICATION	1.0079847312743594E-6	TEST
get implementation	WITHOUT_CLASSIFICATION	0.9999992515326125	WITHOUT_CLASSIFICATION	7.48467387494879E-7	TEST
specialized for value	WITHOUT_CLASSIFICATION	0.9999997493428059	WITHOUT_CLASSIFICATION	2.506571940757256E-7	TEST
delete implementation	WITHOUT_CLASSIFICATION	0.9999993470596549	WITHOUT_CLASSIFICATION	6.529403449992391E-7	TEST
n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999930997254626	WITHOUT_CLASSIFICATION	6.900274537425951E-6	TEST
============================ End of hash internals ============================	WITHOUT_CLASSIFICATION	0.9999996731236466	WITHOUT_CLASSIFICATION	3.26876353484304E-7	TEST
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999998273172982	WITHOUT_CLASSIFICATION	1.726827018318703E-7	TEST
update the hash value	WITHOUT_CLASSIFICATION	0.9999843945536641	WITHOUT_CLASSIFICATION	1.5605446335870153E-5	TEST
other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999891508253083	WITHOUT_CLASSIFICATION	1.084917469167595E-5	TEST
rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999993404967517	WITHOUT_CLASSIFICATION	6.595032482892203E-7	TEST
Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999997567710254	WITHOUT_CLASSIFICATION	2.4322897458213395E-7	TEST
remain where we are	WITHOUT_CLASSIFICATION	0.9999945485313507	WITHOUT_CLASSIFICATION	5.451468649264803E-6	TEST
We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999935254980923	WITHOUT_CLASSIFICATION	6.474501907838286E-6	TEST
default: don't retain	WITHOUT_CLASSIFICATION	0.9999988764232186	WITHOUT_CLASSIFICATION	1.1235767813738506E-6	TEST
once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.999999990740174	WITHOUT_CLASSIFICATION	9.259825977440873E-9	TEST
Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999805055881681	WITHOUT_CLASSIFICATION	1.9494411831877723E-5	TEST
We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999990561913	WITHOUT_CLASSIFICATION	9.438087602650708E-10	TEST
first try as directory	WITHOUT_CLASSIFICATION	0.9999996506148807	WITHOUT_CLASSIFICATION	3.4938511933663425E-7	TEST
next as regular file	WITHOUT_CLASSIFICATION	0.9999999202545459	WITHOUT_CLASSIFICATION	7.97454541286814E-8	TEST
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9999980110040474	WITHOUT_CLASSIFICATION	1.988995952508219E-6	TEST
NIO-based	WITHOUT_CLASSIFICATION	0.9999951724224301	WITHOUT_CLASSIFICATION	4.827577569880067E-6	TEST
NIO-based	WITHOUT_CLASSIFICATION	0.9999951724224301	WITHOUT_CLASSIFICATION	4.827577569880067E-6	TEST
Stream-based	WITHOUT_CLASSIFICATION	0.9999967745706494	WITHOUT_CLASSIFICATION	3.225429350539947E-6	TEST
special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999992770143606	WITHOUT_CLASSIFICATION	7.229856393227176E-7	TEST
We use FILE versus IO to match T_FILE in MRI.	WITHOUT_CLASSIFICATION	0.9999998840097711	WITHOUT_CLASSIFICATION	1.1599022891637456E-7	TEST
Constants for seek	WITHOUT_CLASSIFICATION	0.9999981197923021	WITHOUT_CLASSIFICATION	1.8802076978262481E-6	TEST
confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.999997840013465	WITHOUT_CLASSIFICATION	2.1599865350290516E-6	TEST
check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999999947116507	WITHOUT_CLASSIFICATION	5.2883493583354515E-9	TEST
dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999904588566	WITHOUT_CLASSIFICATION	9.541143460435973E-9	TEST
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999996959498871	WITHOUT_CLASSIFICATION	3.04050112922574E-7	TEST
re-register the descriptor	WITHOUT_CLASSIFICATION	0.999998735329622	WITHOUT_CLASSIFICATION	1.2646703779884889E-6	TEST
since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999999356691026	WITHOUT_CLASSIFICATION	6.433089732044255E-8	TEST
re-register	WITHOUT_CLASSIFICATION	0.9999740373345137	WITHOUT_CLASSIFICATION	2.5962665486188596E-5	TEST
A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999988576029355	WITHOUT_CLASSIFICATION	1.1423970645284831E-6	TEST
Ensure that separator is valid otherwise give it the default paragraph separator.	WITHOUT_CLASSIFICATION	0.9999957738842293	WITHOUT_CLASSIFICATION	4.226115770620761E-6	TEST
loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.999998956822347	WITHOUT_CLASSIFICATION	1.0431776530573003E-6	TEST
if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999980917941209	WITHOUT_CLASSIFICATION	1.9082058791078735E-6	TEST
this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999973837867684	WITHOUT_CLASSIFICATION	2.616213231683946E-6	TEST
IO class methods.	WITHOUT_CLASSIFICATION	0.9999984859787534	WITHOUT_CLASSIFICATION	1.5140212465617576E-6	TEST
use original modes	WITHOUT_CLASSIFICATION	0.9999990445525695	WITHOUT_CLASSIFICATION	9.554474305480956E-7	TEST
See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999998779640101	WITHOUT_CLASSIFICATION	1.2203598992356175E-7	TEST
redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999959618079932	WITHOUT_CLASSIFICATION	4.038192006794469E-6	TEST
MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999997853818028	WITHOUT_CLASSIFICATION	2.1461819709720108E-7	TEST
-1 == don't set permissions	WITHOUT_CLASSIFICATION	0.999999406918126	WITHOUT_CLASSIFICATION	5.930818739324126E-7	TEST
isRetained=true	WITHOUT_CLASSIFICATION	0.9999980718795722	WITHOUT_CLASSIFICATION	1.9281204277011517E-6	TEST
This appears to be some windows-only mode. On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999993162382002	WITHOUT_CLASSIFICATION	6.837617997848141E-7	TEST
if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999990356449548	WITHOUT_CLASSIFICATION	9.643550452195451E-7	TEST
Throw bad file descriptor is we can not read on supplied descriptor.	WITHOUT_CLASSIFICATION	0.9999999445952266	WITHOUT_CLASSIFICATION	5.540477340512283E-8	TEST
Everything written	WITHOUT_CLASSIFICATION	0.9999898518202973	WITHOUT_CLASSIFICATION	1.0148179702681375E-5	TEST
return len - n;	WITHOUT_CLASSIFICATION	0.9999989576595885	WITHOUT_CLASSIFICATION	1.042340411596444E-6	TEST
Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999933052498892	WITHOUT_CLASSIFICATION	6.6947501108801286E-6	TEST
Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999937697178483	WITHOUT_CLASSIFICATION	6.230282151718491E-6	TEST
Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999999787952963	WITHOUT_CLASSIFICATION	2.120470363466753E-8	TEST
Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999967682115232	WITHOUT_CLASSIFICATION	3.2317884768309095E-6	TEST
cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999967230238231	WITHOUT_CLASSIFICATION	3.2769761769264746E-6	TEST
hmmmm	WITHOUT_CLASSIFICATION	0.9997611365784972	WITHOUT_CLASSIFICATION	2.3886342150273977E-4	TEST
I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999826027405864	WITHOUT_CLASSIFICATION	1.739725941366947E-5	TEST
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999497604195	WITHOUT_CLASSIFICATION	5.023958050783032E-8	TEST
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999998488952935	WITHOUT_CLASSIFICATION	1.511047065310111E-7	TEST
Length to read	WITHOUT_CLASSIFICATION	0.999998621981258	WITHOUT_CLASSIFICATION	1.3780187420462336E-6	TEST
String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999997107035349	WITHOUT_CLASSIFICATION	2.892964650440451E-7	TEST
cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999997307544539	WITHOUT_CLASSIFICATION	2.692455460366012E-7	TEST
select until read is ready	WITHOUT_CLASSIFICATION	0.9999981009614489	WITHOUT_CLASSIFICATION	1.8990385510258014E-6	TEST
ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.999999672086733	WITHOUT_CLASSIFICATION	3.2791326692199337E-7	TEST
buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.999999158876088	WITHOUT_CLASSIFICATION	8.411239120220687E-7	TEST
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999892179936134	WITHOUT_CLASSIFICATION	1.0782006386591691E-5	TEST
rb: writable	WITHOUT_CLASSIFICATION	0.9999928888003444	WITHOUT_CLASSIFICATION	7.111199655674521E-6	TEST
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999892179936134	WITHOUT_CLASSIFICATION	1.0782006386591691E-5	TEST
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999997787175378	WITHOUT_CLASSIFICATION	2.2128246221954828E-7	TEST
TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.999999605417396	WITHOUT_CLASSIFICATION	3.9458260407921913E-7	TEST
truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.999999567410904	WITHOUT_CLASSIFICATION	4.3258909589187644E-7	TEST
TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9973598491978156	WITHOUT_CLASSIFICATION	0.0026401508021843593	TEST
class methods for IO	WITHOUT_CLASSIFICATION	0.9999996723126715	WITHOUT_CLASSIFICATION	3.2768732858114336E-7	TEST
save blocking state	WITHOUT_CLASSIFICATION	0.9999993279932866	WITHOUT_CLASSIFICATION	6.720067133552692E-7	TEST
write	WITHOUT_CLASSIFICATION	0.9999882700683889	WITHOUT_CLASSIFICATION	1.1729931611209372E-5	TEST
Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9993583219788168	WITHOUT_CLASSIFICATION	6.416780211831452E-4	TEST
make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999995103334267	WITHOUT_CLASSIFICATION	4.896665732122323E-7	TEST
FIXME: process options	WITHOUT_CLASSIFICATION	0.9999768170505179	WITHOUT_CLASSIFICATION	2.3182949482077308E-5	TEST
Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.999993800657111	WITHOUT_CLASSIFICATION	6.199342889041858E-6	TEST
NIO based pipe	WITHOUT_CLASSIFICATION	0.9999966307960603	WITHOUT_CLASSIFICATION	3.3692039397208905E-6	TEST
not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999992487933944	WITHOUT_CLASSIFICATION	7.512066055264486E-7	TEST
raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999999593828086	WITHOUT_CLASSIFICATION	4.061719137524731E-8	TEST
may need to handle ENC_CODERANGE_BROKEN	WITHOUT_CLASSIFICATION	0.9999940208415257	WITHOUT_CLASSIFICATION	5.9791584743651654E-6	TEST
TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9998430549498681	WITHOUT_CLASSIFICATION	1.5694505013192988E-4	TEST
If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999762313745	WITHOUT_CLASSIFICATION	2.3768625566205168E-8	TEST
The class of this object	WITHOUT_CLASSIFICATION	0.9999978064147939	WITHOUT_CLASSIFICATION	2.193585206213593E-6	TEST
zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999814894750889	WITHOUT_CLASSIFICATION	1.8510524911030394E-5	TEST
objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999993519383971	WITHOUT_CLASSIFICATION	6.48061602889575E-7	TEST
JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999998492663138	WITHOUT_CLASSIFICATION	1.5073368617747959E-7	TEST
rb_class_boot	WITHOUT_CLASSIFICATION	0.9999947919432259	WITHOUT_CLASSIFICATION	5.208056774144004E-6	TEST
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9999988800101796	WITHOUT_CLASSIFICATION	1.1199898203805414E-6	TEST
1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999993496004399	WITHOUT_CLASSIFICATION	6.503995601445011E-7	TEST
for interface impls	WITHOUT_CLASSIFICATION	0.99999994641876	WITHOUT_CLASSIFICATION	5.3581240013072854E-8	TEST
We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999997045305439	WITHOUT_CLASSIFICATION	2.954694561204563E-7	TEST
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9999997361798597	WITHOUT_CLASSIFICATION	2.638201403544564E-7	TEST
can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999997490600719	WITHOUT_CLASSIFICATION	2.509399280495874E-7	TEST
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999730353353	WITHOUT_CLASSIFICATION	2.69646646984721E-8	TEST
Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999999368276984	WITHOUT_CLASSIFICATION	6.317230164863806E-8	TEST
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998546876880086	WITHOUT_CLASSIFICATION	1.4531231199142058E-4	TEST
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998512813034809	WITHOUT_CLASSIFICATION	1.4871869651903477E-4	TEST
INSTANCE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9998927073429045	WITHOUT_CLASSIFICATION	1.0729265709561368E-4	TEST
Struct methods	WITHOUT_CLASSIFICATION	0.9999995165937519	WITHOUT_CLASSIFICATION	4.834062481634602E-7	TEST
runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999943174303	WITHOUT_CLASSIFICATION	5.682569761088532E-9	TEST
define access methods.	WITHOUT_CLASSIFICATION	0.9999993494842606	WITHOUT_CLASSIFICATION	6.505157394001616E-7	TEST
if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999968066987299	WITHOUT_CLASSIFICATION	3.193301269986761E-6	TEST
Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999231220489	WITHOUT_CLASSIFICATION	7.687795103834874E-8	TEST
For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999966990079804	WITHOUT_CLASSIFICATION	3.3009920196055745E-6	TEST
OBJ_INFECT	WITHOUT_CLASSIFICATION	0.9999399325602341	WITHOUT_CLASSIFICATION	6.0067439765959975E-5	TEST
These call assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999899078643	WITHOUT_CLASSIFICATION	1.0092135725069507E-8	TEST
Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999960207276036	WITHOUT_CLASSIFICATION	3.979272396347643E-6	TEST
@param nv number of times to cycle or -1 to cycle indefinitely	WITHOUT_CLASSIFICATION	0.9999998907434491	WITHOUT_CLASSIFICATION	1.0925655093919486E-7	TEST
Atomic ?	WITHOUT_CLASSIFICATION	0.9999980738008812	WITHOUT_CLASSIFICATION	1.926199118716538E-6	TEST
Atomic ?	WITHOUT_CLASSIFICATION	0.9999980738008812	WITHOUT_CLASSIFICATION	1.926199118716538E-6	TEST
MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999995082651092	WITHOUT_CLASSIFICATION	4.917348908349425E-7	TEST
superClass may be null.	WITHOUT_CLASSIFICATION	0.9999979138913395	WITHOUT_CLASSIFICATION	2.0861086604117193E-6	TEST
Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999999051264875	WITHOUT_CLASSIFICATION	9.487351242991191E-8	TEST
ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999888605049876	WITHOUT_CLASSIFICATION	1.1139495012336158E-5	TEST
ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.	WITHOUT_CLASSIFICATION	0.999999961864455	WITHOUT_CLASSIFICATION	3.8135545091077895E-8	TEST
update superclass reference	WITHOUT_CLASSIFICATION	0.9999998593144765	WITHOUT_CLASSIFICATION	1.4068552345965472E-7	TEST
Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999996525108954	WITHOUT_CLASSIFICATION	3.4748910453917663E-7	TEST
MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999995136974982	WITHOUT_CLASSIFICATION	4.863025018610792E-7	TEST
we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999988825865254	WITHOUT_CLASSIFICATION	1.117413474622829E-6	TEST
module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999277701703	WITHOUT_CLASSIFICATION	7.222982966307006E-8	TEST
See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999992692667345	WITHOUT_CLASSIFICATION	7.307332654386061E-7	TEST
We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999685050306	WITHOUT_CLASSIFICATION	3.149496934547339E-8	TEST
we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999992112598568	WITHOUT_CLASSIFICATION	7.887401431082445E-7	TEST
update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999982799704048	WITHOUT_CLASSIFICATION	1.720029595213368E-6	TEST
This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999937946235	WITHOUT_CLASSIFICATION	6.205376607692281E-9	TEST
need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999998799213083	WITHOUT_CLASSIFICATION	1.2007869160800837E-7	TEST
superClazz = null;	WITHOUT_CLASSIFICATION	0.9999997286049555	WITHOUT_CLASSIFICATION	2.7139504447954244E-7	TEST
reopen a java class	WITHOUT_CLASSIFICATION	0.9999998279549085	WITHOUT_CLASSIFICATION	1.7204509142522032E-7	TEST
This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999980799918164	WITHOUT_CLASSIFICATION	1.920008183576E-6	TEST
reopen a java module	WITHOUT_CLASSIFICATION	0.9999990357727804	WITHOUT_CLASSIFICATION	9.642272196138168E-7	TEST
FIXME warning	WITHOUT_CLASSIFICATION	0.9999295218937281	WITHOUT_CLASSIFICATION	7.047810627190436E-5	TEST
FIXME warning	WITHOUT_CLASSIFICATION	0.9999295218937281	WITHOUT_CLASSIFICATION	7.047810627190436E-5	TEST
a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.999999974133164	WITHOUT_CLASSIFICATION	2.5866836027173088E-8	TEST
for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999999914224535	WITHOUT_CLASSIFICATION	8.577546338345701E-9	TEST
just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999659878783176	WITHOUT_CLASSIFICATION	3.401212168241142E-5	TEST
class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999731581125	WITHOUT_CLASSIFICATION	2.6841887449147446E-8	TEST
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999233525994	WITHOUT_CLASSIFICATION	7.664740058400473E-8	TEST
MRI error message says Class, even though Module is ok	WITHOUT_CLASSIFICATION	0.9999967920890622	WITHOUT_CLASSIFICATION	3.207910937832648E-6	TEST
scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999993999958479	WITHOUT_CLASSIFICATION	6.000041522628002E-7	TEST
Module class methods	WITHOUT_CLASSIFICATION	0.9999995604769069	WITHOUT_CLASSIFICATION	4.395230930600688E-7	TEST
Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999998954463543	WITHOUT_CLASSIFICATION	1.0455364581768526E-7	TEST
next in hierarchy is an included version of the module we're attempting, so we skip including it	WITHOUT_CLASSIFICATION	0.9999998583319188	WITHOUT_CLASSIFICATION	1.4166808109616505E-7	TEST
if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999884517936	WITHOUT_CLASSIFICATION	1.1548206373081414E-8	TEST
build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999999054404596	WITHOUT_CLASSIFICATION	9.455954042860023E-8	TEST
if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.99999985469936	WITHOUT_CLASSIFICATION	1.4530063989507065E-7	TEST
if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999950173962	WITHOUT_CLASSIFICATION	4.982603870792266E-9	TEST
CLASS VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9998268877245597	WITHOUT_CLASSIFICATION	1.7311227544029924E-4	TEST
CONSTANT RUBY METHODS	WITHOUT_CLASSIFICATION	0.9998479412817832	WITHOUT_CLASSIFICATION	1.520587182168271E-4	TEST
Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999993178684804	WITHOUT_CLASSIFICATION	6.821315195306351E-7	TEST
CLASS VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9998149646240997	WITHOUT_CLASSIFICATION	1.850353759002701E-4	TEST
Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999780309527303	WITHOUT_CLASSIFICATION	2.1969047269679408E-5	TEST
not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999992956418848	WITHOUT_CLASSIFICATION	7.043581151061199E-7	TEST
Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999878118501876	WITHOUT_CLASSIFICATION	1.2188149812488826E-5	TEST
if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999997933077223	WITHOUT_CLASSIFICATION	2.066922776603598E-7	TEST
Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999992343700201	WITHOUT_CLASSIFICATION	7.656299798865559E-7	TEST
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999972166507708	WITHOUT_CLASSIFICATION	2.783349229196687E-6	TEST
removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999987446608289	WITHOUT_CLASSIFICATION	1.2553391710616409E-6	TEST
we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999999677320413	WITHOUT_CLASSIFICATION	3.2267958675366806E-8	TEST
reopen	WITHOUT_CLASSIFICATION	0.9999853745181146	WITHOUT_CLASSIFICATION	1.462548188541934E-5	TEST
ARGF methods	WITHOUT_CLASSIFICATION	0.9999981836906624	WITHOUT_CLASSIFICATION	1.8163093375322882E-6	TEST
data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.99999995246669	WITHOUT_CLASSIFICATION	4.75333099467201E-8	TEST
one optional, one required args	WITHOUT_CLASSIFICATION	0.9999992241550685	WITHOUT_CLASSIFICATION	7.758449316081346E-7	TEST
one optional and no required args	WITHOUT_CLASSIFICATION	0.9999998575068529	WITHOUT_CLASSIFICATION	1.4249314706024795E-7	TEST
try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999748660877	WITHOUT_CLASSIFICATION	2.5133912245807416E-8	TEST
we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999997032259459	WITHOUT_CLASSIFICATION	2.967740540455097E-7	TEST
Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.999999943633184	WITHOUT_CLASSIFICATION	5.636681583874529E-8	TEST
print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999999654190667	WITHOUT_CLASSIFICATION	3.4580933464831266E-8	TEST
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999995083199319	WITHOUT_CLASSIFICATION	4.916800680072071E-7	TEST
set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999999859755505	WITHOUT_CLASSIFICATION	1.4024449511700994E-8	TEST
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999041022556	WITHOUT_CLASSIFICATION	9.589774438175334E-8	TEST
no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999999312214044	WITHOUT_CLASSIFICATION	6.877859557650175E-8	TEST
Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999990355492201	WITHOUT_CLASSIFICATION	9.644507799999066E-7	TEST
Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999994141073786	WITHOUT_CLASSIFICATION	5.858926214513863E-7	TEST
Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999996757987861	WITHOUT_CLASSIFICATION	3.242012138747761E-7	TEST
ignore error	WITHOUT_CLASSIFICATION	0.9999990954583398	WITHOUT_CLASSIFICATION	9.045416602210952E-7	TEST
COMMON CONSTANT / CVAR METHODS	WITHOUT_CLASSIFICATION	0.9997924502273771	WITHOUT_CLASSIFICATION	2.075497726229844E-4	TEST
INTERNAL MODULE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9998738132904009	WITHOUT_CLASSIFICATION	1.2618670959902283E-4	TEST
LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module	WITHOUT_CLASSIFICATION	0.9999994023942012	WITHOUT_CLASSIFICATION	5.976057988498907E-7	TEST
odd	WITHOUT_CLASSIFICATION	0.999916168741239	WITHOUT_CLASSIFICATION	8.383125876096118E-5	TEST
JRubyClient	WITHOUT_CLASSIFICATION	0.9999928695138383	WITHOUT_CLASSIFICATION	7.130486161770895E-6	TEST
x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)	WITHOUT_CLASSIFICATION	0.9999998873729437	WITHOUT_CLASSIFICATION	1.1262705623269531E-7	TEST
Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999995193472505	WITHOUT_CLASSIFICATION	4.806527494823416E-7	TEST
Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999996577483979	WITHOUT_CLASSIFICATION	3.4225160198646333E-7	TEST
r = x 2 y	WITHOUT_CLASSIFICATION	0.9999828582733542	WITHOUT_CLASSIFICATION	1.714172664583186E-5	TEST
0!	WITHOUT_CLASSIFICATION	0.9996941896165732	WITHOUT_CLASSIFICATION	3.0581038342683043E-4	TEST
1!	WITHOUT_CLASSIFICATION	0.9997505424826231	WITHOUT_CLASSIFICATION	2.4945751737688436E-4	TEST
2!	WITHOUT_CLASSIFICATION	0.9996621999127354	WITHOUT_CLASSIFICATION	3.3780008726457894E-4	TEST
3!	WITHOUT_CLASSIFICATION	0.9995919843533513	WITHOUT_CLASSIFICATION	4.080156466487221E-4	TEST
4!	WITHOUT_CLASSIFICATION	0.9997032240773659	WITHOUT_CLASSIFICATION	2.9677592263408246E-4	TEST
5!	WITHOUT_CLASSIFICATION	0.9997024029467845	WITHOUT_CLASSIFICATION	2.9759705321548907E-4	TEST
6!	WITHOUT_CLASSIFICATION	0.9997051296116172	WITHOUT_CLASSIFICATION	2.9487038838288816E-4	TEST
7!	WITHOUT_CLASSIFICATION	0.9997145401827714	WITHOUT_CLASSIFICATION	2.8545981722854515E-4	TEST
8!	WITHOUT_CLASSIFICATION	0.9996707808597196	WITHOUT_CLASSIFICATION	3.292191402803414E-4	TEST
9!	WITHOUT_CLASSIFICATION	0.9996544941668527	WITHOUT_CLASSIFICATION	3.4550583314727287E-4	TEST
11!	WITHOUT_CLASSIFICATION	0.9997648202319538	WITHOUT_CLASSIFICATION	2.3517976804613845E-4	TEST
12!	WITHOUT_CLASSIFICATION	0.999737542072132	WITHOUT_CLASSIFICATION	2.624579278680273E-4	TEST
13!	WITHOUT_CLASSIFICATION	0.9996835125848758	WITHOUT_CLASSIFICATION	3.164874151242016E-4	TEST
15!	WITHOUT_CLASSIFICATION	0.9997691932872147	WITHOUT_CLASSIFICATION	2.3080671278530654E-4	TEST
16!	WITHOUT_CLASSIFICATION	0.999772060943437	WITHOUT_CLASSIFICATION	2.2793905656291614E-4	TEST
17!	WITHOUT_CLASSIFICATION	0.9997774567557005	WITHOUT_CLASSIFICATION	2.2254324429947948E-4	TEST
19!	WITHOUT_CLASSIFICATION	0.9997347655991824	WITHOUT_CLASSIFICATION	2.6523440081760723E-4	TEST
20!	WITHOUT_CLASSIFICATION	0.9996543051550998	WITHOUT_CLASSIFICATION	3.456948449002178E-4	TEST
21!	WITHOUT_CLASSIFICATION	0.9997394659977032	WITHOUT_CLASSIFICATION	2.6053400229671987E-4	TEST
Static constants	WITHOUT_CLASSIFICATION	0.9999991357451546	WITHOUT_CLASSIFICATION	8.642548452836074E-7	TEST
Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999902322309735	WITHOUT_CLASSIFICATION	9.767769026497898E-6	TEST
2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999929598499289	WITHOUT_CLASSIFICATION	7.040150071113107E-6	TEST
3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999990814345153	WITHOUT_CLASSIFICATION	9.18565484603046E-7	TEST
MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999988705590083	WITHOUT_CLASSIFICATION	1.1294409917387617E-6	TEST
Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999999560123403	WITHOUT_CLASSIFICATION	4.398765973522156E-8	TEST
Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999999477326553	WITHOUT_CLASSIFICATION	5.2267344819668805E-8	TEST
Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999997761557556	WITHOUT_CLASSIFICATION	2.2384424438465943E-7	TEST
Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9999998949442792	WITHOUT_CLASSIFICATION	1.0505572083987706E-7	TEST
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999979344352327	WITHOUT_CLASSIFICATION	2.0655647673757205E-6	TEST
TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9391846594771985	WITHOUT_CLASSIFICATION	0.060815340522801464	TEST
integer division	WITHOUT_CLASSIFICATION	0.9999985820243764	WITHOUT_CLASSIFICATION	1.4179756236386707E-6	TEST
MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999913163461267	WITHOUT_CLASSIFICATION	8.683653873341407E-6	TEST
rounding neccessary	WITHOUT_CLASSIFICATION	0.9999989515850252	WITHOUT_CLASSIFICATION	1.0484149748396037E-6	TEST
rounding neccessary	WITHOUT_CLASSIFICATION	0.9999989515850252	WITHOUT_CLASSIFICATION	1.0484149748396037E-6	TEST
Java and MRI definitions of divmod are different.	WITHOUT_CLASSIFICATION	0.9999999156842737	WITHOUT_CLASSIFICATION	8.431572628276891E-8	TEST
JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999962166011283	WITHOUT_CLASSIFICATION	3.7833988717035078E-6	TEST
shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.999999998055145	WITHOUT_CLASSIFICATION	1.9448550592072745E-9	TEST
...round to that digit	WITHOUT_CLASSIFICATION	0.9999974784880128	WITHOUT_CLASSIFICATION	2.521511987174391E-6	TEST
...and shift the result back to the left (multiply by 10(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999999897624446	WITHOUT_CLASSIFICATION	1.023755525398758E-8	TEST
this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999995240781755	WITHOUT_CLASSIFICATION	4.759218244221154E-7	TEST
sign	WITHOUT_CLASSIFICATION	0.999972145963676	WITHOUT_CLASSIFICATION	2.785403632392479E-5	TEST
significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999997736095023	WITHOUT_CLASSIFICATION	2.2639049774303266E-7	TEST
normalize the value	WITHOUT_CLASSIFICATION	0.9999998154642405	WITHOUT_CLASSIFICATION	1.8453575936956654E-7	TEST
base	WITHOUT_CLASSIFICATION	0.999982425969256	WITHOUT_CLASSIFICATION	1.757403074394351E-5	TEST
NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999459034234318	WITHOUT_CLASSIFICATION	5.4096576568128275E-5	TEST
just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999082471641	WITHOUT_CLASSIFICATION	9.175283596325877E-8	TEST
eh?!	WITHOUT_CLASSIFICATION	0.9998582514585912	WITHOUT_CLASSIFICATION	1.4174854140877512E-4	TEST
Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999985722287429	WITHOUT_CLASSIFICATION	1.4277712571310397E-6	TEST
General number and precision checking	WITHOUT_CLASSIFICATION	0.999999535412701	WITHOUT_CLASSIFICATION	4.6458729895005555E-7	TEST
the requested precision	WITHOUT_CLASSIFICATION	0.9999839790784356	WITHOUT_CLASSIFICATION	1.6020921564420135E-5	TEST
Proc class	WITHOUT_CLASSIFICATION	0.9999984795937925	WITHOUT_CLASSIFICATION	1.5204062074364037E-6	TEST
.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999791580333	WITHOUT_CLASSIFICATION	2.0841966687097984E-8	TEST
even shift.. ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.999996760246543	WITHOUT_CLASSIFICATION	3.23975345699595E-6	TEST
5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999876532282522	WITHOUT_CLASSIFICATION	1.2346771747644724E-5	TEST
..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999991713043489	WITHOUT_CLASSIFICATION	8.286956510822293E-7	TEST
Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999999963621384	WITHOUT_CLASSIFICATION	3.637861528155679E-9	TEST
x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999850423462111	WITHOUT_CLASSIFICATION	1.4957653788973044E-5	TEST
for prec 15 root x0 must surely be OK return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999995035709072	WITHOUT_CLASSIFICATION	4.964290928683781E-7	TEST
Initial v - the reciprocal v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9999999515708107	WITHOUT_CLASSIFICATION	4.842918930730869E-8	TEST
Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999977054669297	WITHOUT_CLASSIFICATION	2.294533070363394E-6	TEST
assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999998971397269	WITHOUT_CLASSIFICATION	1.0286027308734411E-7	TEST
The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999997361422552	WITHOUT_CLASSIFICATION	2.638577448162382E-7	TEST
Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999963916382758	WITHOUT_CLASSIFICATION	3.608361724182544E-6	TEST
Next x e = d - x^2	WITHOUT_CLASSIFICATION	0.9999976063819923	WITHOUT_CLASSIFICATION	2.3936180076489666E-6	TEST
x += ev ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999961296884405	WITHOUT_CLASSIFICATION	3.870311559444163E-6	TEST
root x is ready!	WITHOUT_CLASSIFICATION	0.9999967145375936	WITHOUT_CLASSIFICATION	3.2854624064125935E-6	TEST
Next v g = 1 - 2xv	WITHOUT_CLASSIFICATION	0.9999938629143461	WITHOUT_CLASSIFICATION	6.137085653856012E-6	TEST
v += gv ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999875699491122	WITHOUT_CLASSIFICATION	1.2430050887817353E-5	TEST
RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999897774488181	WITHOUT_CLASSIFICATION	1.0222551181798296E-5	TEST
c: bind_eval	WITHOUT_CLASSIFICATION	0.999995496098257	WITHOUT_CLASSIFICATION	4.503901743071767E-6	TEST
================ Module Methods ================	WITHOUT_CLASSIFICATION	0.9999982701963037	WITHOUT_CLASSIFICATION	1.7298036962489214E-6	TEST
from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999994493571471	WITHOUT_CLASSIFICATION	5.506428528267338E-7	TEST
This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999999386656966	WITHOUT_CLASSIFICATION	6.133430336028872E-8	TEST
default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999855762964	WITHOUT_CLASSIFICATION	1.4423703563856279E-8	TEST
Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999987259105525	WITHOUT_CLASSIFICATION	1.2740894474770466E-6	TEST
Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999994504894528	WITHOUT_CLASSIFICATION	5.495105471864785E-7	TEST
try the normal property first	WITHOUT_CLASSIFICATION	0.9999999072240834	WITHOUT_CLASSIFICATION	9.277591654977676E-8	TEST
verify it if it's there	WITHOUT_CLASSIFICATION	0.9999752978522636	WITHOUT_CLASSIFICATION	2.470214773633748E-5	TEST
verify it if it's there	WITHOUT_CLASSIFICATION	0.9999752978522636	WITHOUT_CLASSIFICATION	2.470214773633748E-5	TEST
try loading from classloader resources	WITHOUT_CLASSIFICATION	0.999999764561012	WITHOUT_CLASSIFICATION	2.3543898801071277E-7	TEST
otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999996931039047	WITHOUT_CLASSIFICATION	3.0689609523447026E-7	TEST
We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999993270205784	WITHOUT_CLASSIFICATION	6.729794215378755E-7	TEST
consume the file name	WITHOUT_CLASSIFICATION	0.9999997974225333	WITHOUT_CLASSIFICATION	2.0257746660577493E-7	TEST
Specify something that can't separate	WITHOUT_CLASSIFICATION	0.999945895057181	WITHOUT_CLASSIFICATION	5.4104942819012846E-5	TEST
try cwd first	WITHOUT_CLASSIFICATION	0.9999990794257574	WITHOUT_CLASSIFICATION	9.205742425717614E-7	TEST
ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999999349153639	WITHOUT_CLASSIFICATION	6.508463613465613E-8	TEST
KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999952488790884	WITHOUT_CLASSIFICATION	4.75112091153062E-6	TEST
@JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.999999026333258	WITHOUT_CLASSIFICATION	9.736667420156307E-7	TEST
@JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.999998620652734	WITHOUT_CLASSIFICATION	1.3793472659727488E-6	TEST
@JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999987799397623	WITHOUT_CLASSIFICATION	1.2200602376846303E-6	TEST
symbol string must be interned	WITHOUT_CLASSIFICATION	0.9999990541956635	WITHOUT_CLASSIFICATION	9.458043365941416E-7	TEST
assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999758160706971	WITHOUT_CLASSIFICATION	2.41839293028894E-5	TEST
Symbol class methods.	WITHOUT_CLASSIFICATION	0.999997531961214	WITHOUT_CLASSIFICATION	2.468038786012778E-6	TEST
TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9984205810388015	WITHOUT_CLASSIFICATION	0.0015794189611984186	TEST
This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999964510418895	WITHOUT_CLASSIFICATION	3.548958110414077E-6	TEST
we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999604132114857	WITHOUT_CLASSIFICATION	3.9586788514377616E-5	TEST
must be power of 2!	WITHOUT_CLASSIFICATION	0.9999991085635666	WITHOUT_CLASSIFICATION	8.914364334346166E-7	TEST
note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999991620269423	WITHOUT_CLASSIFICATION	8.379730576462134E-7	TEST
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999319421782698	WITHOUT_CLASSIFICATION	6.805782173029376E-5	TEST
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999996297341869	WITHOUT_CLASSIFICATION	3.702658130980631E-7	TEST
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999996297341869	WITHOUT_CLASSIFICATION	3.702658130980631E-7	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999980730615922	WITHOUT_CLASSIFICATION	1.926938407742702E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999980730615922	WITHOUT_CLASSIFICATION	1.926938407742702E-6	TEST
backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999998769864354	WITHOUT_CLASSIFICATION	1.230135645811383E-7	TEST
Single node on list	WITHOUT_CLASSIFICATION	0.9999990272554787	WITHOUT_CLASSIFICATION	9.727445213274528E-7	TEST
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999975489261153	WITHOUT_CLASSIFICATION	2.451073884735603E-6	TEST
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999997599702677	WITHOUT_CLASSIFICATION	2.400297322969565E-6	TEST
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999995357787183	WITHOUT_CLASSIFICATION	4.642212817215114E-7	TEST
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999671193288	WITHOUT_CLASSIFICATION	3.2880671221689175E-8	TEST
not so backwards-compatible here, but no one should have been calling this anyway.	WITHOUT_CLASSIFICATION	0.9999930190710733	WITHOUT_CLASSIFICATION	6.980928926663804E-6	TEST
Profile	WITHOUT_CLASSIFICATION	0.9999905868863701	WITHOUT_CLASSIFICATION	9.413113629851416E-6	TEST
static private final String TRANSLIT = "translit";	WITHOUT_CLASSIFICATION	0.9999999347245971	WITHOUT_CLASSIFICATION	6.527540283435878E-8	TEST
treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999992123123723	WITHOUT_CLASSIFICATION	7.87687627612054E-7	TEST
invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999951839610955	WITHOUT_CLASSIFICATION	4.816038904415494E-6	TEST
Methods of the Nil Class (nil_):	WITHOUT_CLASSIFICATION	0.9999997512228117	WITHOUT_CLASSIFICATION	2.487771882944358E-7	TEST
Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999996395565739	WITHOUT_CLASSIFICATION	3.6044342611351237E-7	TEST
Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9997312855256344	WITHOUT_CLASSIFICATION	2.687144743655638E-4	TEST
must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999998373544698	WITHOUT_CLASSIFICATION	1.6264553007512997E-7	TEST
reset the state	WITHOUT_CLASSIFICATION	0.9999969405952128	WITHOUT_CLASSIFICATION	3.0594047871937224E-6	TEST
Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999980035274307	WITHOUT_CLASSIFICATION	1.996472569330921E-6	TEST
rb_match_busy	WITHOUT_CLASSIFICATION	0.9999918646362705	WITHOUT_CLASSIFICATION	8.135363729380053E-6	TEST
str is frozen	WITHOUT_CLASSIFICATION	0.9999962951992529	WITHOUT_CLASSIFICATION	3.7048007471496368E-6	TEST
MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999977862035179	WITHOUT_CLASSIFICATION	2.213796482229927E-6	TEST
JRubyServer	WITHOUT_CLASSIFICATION	0.9999559105655593	WITHOUT_CLASSIFICATION	4.4089434440721364E-5	TEST
Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999998534600109	WITHOUT_CLASSIFICATION	1.4653998915505372E-7	TEST
boot the Object class	WITHOUT_CLASSIFICATION	0.9999982172380403	WITHOUT_CLASSIFICATION	1.7827619597531415E-6	TEST
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9999997361798597	WITHOUT_CLASSIFICATION	2.638201403544564E-7	TEST
update superclass reference	WITHOUT_CLASSIFICATION	0.9999998593144765	WITHOUT_CLASSIFICATION	1.4068552345965472E-7	TEST
undo check	WITHOUT_CLASSIFICATION	0.9999996280884919	WITHOUT_CLASSIFICATION	3.7191150821248877E-7	TEST
This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999948005368	WITHOUT_CLASSIFICATION	5.199463126335054E-9	TEST
boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999991980782367	WITHOUT_CLASSIFICATION	8.019217632172851E-7	TEST
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999981059675269	WITHOUT_CLASSIFICATION	1.894032473101571E-6	TEST
use parent's marshal	WITHOUT_CLASSIFICATION	0.9999998986596115	WITHOUT_CLASSIFICATION	1.0134038854783211E-7	TEST
use parent's marshal	WITHOUT_CLASSIFICATION	0.9999998986596115	WITHOUT_CLASSIFICATION	1.0134038854783211E-7	TEST
could be pulled down to RubyClass in future rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999942033686	WITHOUT_CLASSIFICATION	5.796631390241237E-9	TEST
remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.999999009416663	WITHOUT_CLASSIFICATION	9.905833370752414E-7	TEST
add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.999999627073473	WITHOUT_CLASSIFICATION	3.729265269411563E-7	TEST
update all subclasses	WITHOUT_CLASSIFICATION	0.9999988907664156	WITHOUT_CLASSIFICATION	1.1092335844080604E-6	TEST
fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999999732017635	WITHOUT_CLASSIFICATION	2.6798236535714923E-8	TEST
static initializing method	WITHOUT_CLASSIFICATION	0.9999996142755104	WITHOUT_CLASSIFICATION	3.857244895295318E-7	TEST
standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999996356772592	WITHOUT_CLASSIFICATION	3.6432274067185717E-7	TEST
no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999999890849667	WITHOUT_CLASSIFICATION	1.0915033285657722E-8	TEST
non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999997481989298	WITHOUT_CLASSIFICATION	2.5180107017217335E-7	TEST
indices for temp values	WITHOUT_CLASSIFICATION	0.999998392085687	WITHOUT_CLASSIFICATION	1.607914313043007E-6	TEST
self method name	WITHOUT_CLASSIFICATION	0.9999989795023765	WITHOUT_CLASSIFICATION	1.0204976234703383E-6	TEST
the default allocator	WITHOUT_CLASSIFICATION	0.9999999043995224	WITHOUT_CLASSIFICATION	9.56004777032973E-8	TEST
Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999992562050004	WITHOUT_CLASSIFICATION	7.437949997132439E-7	TEST
do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999981494746526	WITHOUT_CLASSIFICATION	1.8505253474216274E-6	TEST
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999998470016437	WITHOUT_CLASSIFICATION	1.5299835636654363E-7	TEST
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9999991448088248	WITHOUT_CLASSIFICATION	8.551911752491664E-7	TEST
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999997786764962	WITHOUT_CLASSIFICATION	2.213235037927989E-6	TEST
Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999999104470393	WITHOUT_CLASSIFICATION	8.955296068265144E-8	TEST
MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999999688102004	WITHOUT_CLASSIFICATION	3.118979956804212E-8	TEST
NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9996771945217724	WITHOUT_CLASSIFICATION	3.228054782275756E-4	TEST
write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999993297473913	WITHOUT_CLASSIFICATION	6.702526088606719E-7	TEST
rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999982068951142	WITHOUT_CLASSIFICATION	1.7931048858011238E-6	TEST
0x3fff_ffff -0x4000_0000	WITHOUT_CLASSIFICATION	0.9997695845755842	WITHOUT_CLASSIFICATION	2.3041542441580974E-4	TEST
a gotcha	WITHOUT_CLASSIFICATION	0.9999966928372774	WITHOUT_CLASSIFICATION	3.30716272263148E-6	TEST
Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.999999642959608	WITHOUT_CLASSIFICATION	3.570403920297244E-7	TEST
A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999991762513731	WITHOUT_CLASSIFICATION	8.237486269297863E-7	TEST
Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999983123293738	WITHOUT_CLASSIFICATION	1.6876706261867205E-6	TEST
Java Doubles are 64 bit long:	WITHOUT_CLASSIFICATION	0.999999328313344	WITHOUT_CLASSIFICATION	6.716866558886798E-7	TEST
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999998470016437	WITHOUT_CLASSIFICATION	1.5299835636654363E-7	TEST
don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999988260543731	WITHOUT_CLASSIFICATION	1.1739456269499432E-6	TEST
Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999998380693677	WITHOUT_CLASSIFICATION	1.6193063246618696E-7	TEST
MRI behavior:	WITHOUT_CLASSIFICATION	0.9999972058330642	WITHOUT_CLASSIFICATION	2.7941669359148166E-6	TEST
Numeric.equal	WITHOUT_CLASSIFICATION	0.9999664157056579	WITHOUT_CLASSIFICATION	3.35842943420965E-5	TEST
provider is not available	WITHOUT_CLASSIFICATION	0.9999951774817532	WITHOUT_CLASSIFICATION	4.82251824690071E-6	TEST
bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.999990181224404	WITHOUT_CLASSIFICATION	9.81877559601074E-6	TEST
fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999999565478344	WITHOUT_CLASSIFICATION	4.345216564004886E-8	TEST
RubyDigest	WITHOUT_CLASSIFICATION	0.9999553684320412	WITHOUT_CLASSIFICATION	4.463156795868006E-5	TEST
ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999818892651785	WITHOUT_CLASSIFICATION	1.811073482152388E-5	TEST
synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999999171565269	WITHOUT_CLASSIFICATION	8.284347309172029E-8	TEST
we only add live threads	WITHOUT_CLASSIFICATION	0.9999981486451923	WITHOUT_CLASSIFICATION	1.8513548075989264E-6	TEST
use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999630073515	WITHOUT_CLASSIFICATION	3.6992648528078925E-8	TEST
handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999999334748608	WITHOUT_CLASSIFICATION	6.65251391194521E-8	TEST
JRubyService	WITHOUT_CLASSIFICATION	0.999984128894559	WITHOUT_CLASSIFICATION	1.5871105440899834E-5	TEST
while	WITHOUT_CLASSIFICATION	0.9999717230506945	WITHOUT_CLASSIFICATION	2.8276949305517995E-5	TEST
\OOO	WITHOUT_CLASSIFICATION	0.9997895323933237	WITHOUT_CLASSIFICATION	2.104676066761645E-4	TEST
CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.	WITHOUT_CLASSIFICATION	0.999999952572117	WITHOUT_CLASSIFICATION	4.742788308474513E-8	TEST
mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999990874757448	WITHOUT_CLASSIFICATION	9.125242551249441E-7	TEST
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999667637409	WITHOUT_CLASSIFICATION	3.323625913274449E-8	TEST
internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999998559318869	WITHOUT_CLASSIFICATION	1.440681130031134E-7	TEST
silent ?	WITHOUT_CLASSIFICATION	0.9999996839708478	WITHOUT_CLASSIFICATION	3.1602915212540413E-7	TEST
\xHH	WITHOUT_CLASSIFICATION	0.9997941965352133	WITHOUT_CLASSIFICATION	2.0580346478673705E-4	TEST
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9998238909872895	WITHOUT_CLASSIFICATION	1.7610901271055256E-4	TEST
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9998805929703425	WITHOUT_CLASSIFICATION	1.1940702965753307E-4	TEST
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9999146260367037	WITHOUT_CLASSIFICATION	8.537396329626082E-5	TEST
\O, \OO, \OOO or backref	WITHOUT_CLASSIFICATION	0.9999864687674296	WITHOUT_CLASSIFICATION	1.3531232570422491E-5	TEST
MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9994870258670049	WITHOUT_CLASSIFICATION	5.129741329951584E-4	TEST
MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.999732107836337	WITHOUT_CLASSIFICATION	2.678921636630539E-4	TEST
Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999996510034296	WITHOUT_CLASSIFICATION	3.489965704353248E-7	TEST
Surrogates	WITHOUT_CLASSIFICATION	0.9999794531967967	WITHOUT_CLASSIFICATION	2.0546803203238775E-5	TEST
do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999996732717117	WITHOUT_CLASSIFICATION	3.2672828838575516E-7	TEST
\0, \0O, \0OO	WITHOUT_CLASSIFICATION	0.9998512877910186	WITHOUT_CLASSIFICATION	1.4871220898136537E-4	TEST
\xHH	WITHOUT_CLASSIFICATION	0.9997941965352133	WITHOUT_CLASSIFICATION	2.0580346478673705E-4	TEST
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.9998805929703425	WITHOUT_CLASSIFICATION	1.1940702965753307E-4	TEST
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9998238909872895	WITHOUT_CLASSIFICATION	1.7610901271055256E-4	TEST
\\u{H HH HHH HHHH HHHHH HHHHHH ...}	WITHOUT_CLASSIFICATION	0.9998705668526706	WITHOUT_CLASSIFICATION	1.2943314732939595E-4	TEST
\\uHHHH	WITHOUT_CLASSIFICATION	0.9998626074544592	WITHOUT_CLASSIFICATION	1.3739254554084756E-4	TEST
\p{Hiragana}	WITHOUT_CLASSIFICATION	0.9999613882447225	WITHOUT_CLASSIFICATION	3.8611755277551425E-5	TEST
inner switch	WITHOUT_CLASSIFICATION	0.999999390417893	WITHOUT_CLASSIFICATION	6.095821070221819E-7	TEST
newInstance here	WITHOUT_CLASSIFICATION	0.9999994562577792	WITHOUT_CLASSIFICATION	5.437422208305545E-7	TEST
rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999644240539503	WITHOUT_CLASSIFICATION	3.557594604977763E-5	TEST
rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999474939744946	WITHOUT_CLASSIFICATION	5.250602550549319E-5	TEST
rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999904388978816	WITHOUT_CLASSIFICATION	9.56110211840957E-6	TEST
rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999770278561404	WITHOUT_CLASSIFICATION	2.297214385950511E-5	TEST
rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999983589262799	WITHOUT_CLASSIFICATION	1.6410737201443427E-6	TEST
rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999990564923492	WITHOUT_CLASSIFICATION	9.435076508225711E-7	TEST
JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999999721572693	WITHOUT_CLASSIFICATION	2.7842730617790994E-8	TEST
rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999790558737891	WITHOUT_CLASSIFICATION	2.094412621084403E-5	TEST
option_to_str	WITHOUT_CLASSIFICATION	0.9999819821601551	WITHOUT_CLASSIFICATION	1.8017839844909624E-5	TEST
Don't initialize with class Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999999526509483	WITHOUT_CLASSIFICATION	4.7349051657770624E-8	TEST
args should be before block	WITHOUT_CLASSIFICATION	0.9999949450398196	WITHOUT_CLASSIFICATION	5.054960180390475E-6	TEST
args should be at end	WITHOUT_CLASSIFICATION	0.9999981026216435	WITHOUT_CLASSIFICATION	1.8973783566051954E-6	TEST
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999985716978148	WITHOUT_CLASSIFICATION	1.4283021852227518E-6	TEST
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999985716978148	WITHOUT_CLASSIFICATION	1.4283021852227518E-6	TEST
skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999995725219882	WITHOUT_CLASSIFICATION	4.274780117663717E-7	TEST
start a new populator	WITHOUT_CLASSIFICATION	0.9999990518185767	WITHOUT_CLASSIFICATION	9.481814232485361E-7	TEST
check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999981193117585	WITHOUT_CLASSIFICATION	1.8806882414287046E-6	TEST
add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999145317942962	WITHOUT_CLASSIFICATION	8.546820570373881E-5	TEST
no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.99999929224986	WITHOUT_CLASSIFICATION	7.077501400984123E-7	TEST
write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999998831020284	WITHOUT_CLASSIFICATION	1.1689797163989774E-7	TEST
single method, use normal logic	WITHOUT_CLASSIFICATION	0.999999859208641	WITHOUT_CLASSIFICATION	1.4079135901766862E-7	TEST
multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999978533466555	WITHOUT_CLASSIFICATION	2.1466533446013547E-6	TEST
declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.999999751409182	WITHOUT_CLASSIFICATION	2.4859081803142464E-7	TEST
inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999839585288	WITHOUT_CLASSIFICATION	1.6041471128001295E-8	TEST
RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999995769243291	WITHOUT_CLASSIFICATION	4.230756709257186E-7	TEST
}	WITHOUT_CLASSIFICATION	0.9998900375538903	WITHOUT_CLASSIFICATION	1.0996244610967938E-4	TEST
fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999997531267351	WITHOUT_CLASSIFICATION	2.4687326496608694E-7	TEST
refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999994089650276	WITHOUT_CLASSIFICATION	5.910349723179837E-7	TEST
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999999105280266	WITHOUT_CLASSIFICATION	8.947197333623201E-8	TEST
attribute set.	WITHOUT_CLASSIFICATION	0.9999994294343529	WITHOUT_CLASSIFICATION	5.705656469610601E-7	TEST
element set	WITHOUT_CLASSIFICATION	0.9999993883351265	WITHOUT_CLASSIFICATION	6.116648734892076E-7	TEST
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998672804251	WITHOUT_CLASSIFICATION	1.3271957487092513E-7	TEST
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998672804251	WITHOUT_CLASSIFICATION	1.3271957487092513E-7	TEST
colon3	WITHOUT_CLASSIFICATION	0.9999581912431587	WITHOUT_CLASSIFICATION	4.180875684145645E-5	TEST
Colon3	WITHOUT_CLASSIFICATION	0.9999433481585895	WITHOUT_CLASSIFICATION	5.665184141038563E-5	TEST
array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.99998339450502	WITHOUT_CLASSIFICATION	1.6605494979997817E-5	TEST
For b.foo	WITHOUT_CLASSIFICATION	0.9999936431607803	WITHOUT_CLASSIFICATION	6.356839219642709E-6	TEST
instance config for the script run	WITHOUT_CLASSIFICATION	0.999999856111539	WITHOUT_CLASSIFICATION	1.4388846106426503E-7	TEST
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998672804251	WITHOUT_CLASSIFICATION	1.3271957487092513E-7	TEST
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998672804251	WITHOUT_CLASSIFICATION	1.3271957487092513E-7	TEST
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999948869653	WITHOUT_CLASSIFICATION	5.113034698216371E-9	TEST
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999948869653	WITHOUT_CLASSIFICATION	5.113034698216371E-9	TEST
RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999994100570836	WITHOUT_CLASSIFICATION	5.899429163443516E-7	TEST
For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999722679540551	WITHOUT_CLASSIFICATION	2.7732045944866297E-5	TEST
We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999999335217539	WITHOUT_CLASSIFICATION	6.647824609670162E-8	TEST
something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999999141233449	WITHOUT_CLASSIFICATION	8.587665514988546E-8	TEST
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999285058179	WITHOUT_CLASSIFICATION	7.149418210873145E-8	TEST
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999285058179	WITHOUT_CLASSIFICATION	7.149418210873145E-8	TEST
do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999996428310199	WITHOUT_CLASSIFICATION	3.571689801484672E-7	TEST
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999997098476279	WITHOUT_CLASSIFICATION	2.901523721021216E-6	TEST
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999892867869861	WITHOUT_CLASSIFICATION	1.0713213014029093E-5	TEST
never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999995492709471	WITHOUT_CLASSIFICATION	4.5072905292133655E-7	TEST
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999947015406	WITHOUT_CLASSIFICATION	5.29845943292633E-9	TEST
The name of the variable	WITHOUT_CLASSIFICATION	0.999997575135878	WITHOUT_CLASSIFICATION	2.4248641221254324E-6	TEST
If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999984985110124	WITHOUT_CLASSIFICATION	1.5014889876616233E-6	TEST
Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999996546245891	WITHOUT_CLASSIFICATION	3.453754109076845E-7	TEST
Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999987321151212	WITHOUT_CLASSIFICATION	1.2678848787115633E-6	TEST
no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999366751313	WITHOUT_CLASSIFICATION	6.332486860871793E-8	TEST
optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999748988318041	WITHOUT_CLASSIFICATION	2.5101168195944496E-5	TEST
arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.999999807359002	WITHOUT_CLASSIFICATION	1.926409979307358E-7	TEST
no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.999997751708593	WITHOUT_CLASSIFICATION	2.2482914071571267E-6	TEST
set argv from main's args	WITHOUT_CLASSIFICATION	0.9999996429938557	WITHOUT_CLASSIFICATION	3.570061442732013E-7	TEST
attribute set.	WITHOUT_CLASSIFICATION	0.9999994294343529	WITHOUT_CLASSIFICATION	5.705656469610601E-7	TEST
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998672804251	WITHOUT_CLASSIFICATION	1.3271957487092513E-7	TEST
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999948869653	WITHOUT_CLASSIFICATION	5.113034698216371E-9	TEST
The name of the variable	WITHOUT_CLASSIFICATION	0.999997575135878	WITHOUT_CLASSIFICATION	2.4248641221254324E-6	TEST
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999992539216345	WITHOUT_CLASSIFICATION	7.460783655538794E-7	TEST
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999992539216345	WITHOUT_CLASSIFICATION	7.460783655538794E-7	TEST
block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999996293761868	WITHOUT_CLASSIFICATION	3.706238131878303E-7	TEST
assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999990665088986	WITHOUT_CLASSIFICATION	9.334911013171185E-7	TEST
in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999720579265	WITHOUT_CLASSIFICATION	2.7942073617049364E-8	TEST
assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999734761008	WITHOUT_CLASSIFICATION	2.652389915585448E-8	TEST
Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.999997890725633	WITHOUT_CLASSIFICATION	2.1092743669981447E-6	TEST
Experimental class reification support, to create real Java classes for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999991066455495	WITHOUT_CLASSIFICATION	8.933544504128509E-7	TEST
This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999989457229803	WITHOUT_CLASSIFICATION	1.0542770196160824E-6	TEST
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999943790183952	WITHOUT_CLASSIFICATION	5.620981604798395E-6	TEST
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999435720248	WITHOUT_CLASSIFICATION	5.642797523052981E-8	TEST
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999998118865885	WITHOUT_CLASSIFICATION	1.88113411597245E-7	TEST
never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999984276337415	WITHOUT_CLASSIFICATION	1.5723662585495448E-6	TEST
If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999791731504	WITHOUT_CLASSIFICATION	2.0826849573248056E-8	TEST
JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999997666225419	WITHOUT_CLASSIFICATION	2.3337745813671576E-7	TEST
element set	WITHOUT_CLASSIFICATION	0.9999993883351265	WITHOUT_CLASSIFICATION	6.116648734892076E-7	TEST
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999948869653	WITHOUT_CLASSIFICATION	5.113034698216371E-9	TEST
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999997098476279	WITHOUT_CLASSIFICATION	2.901523721021216E-6	TEST
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999892867869861	WITHOUT_CLASSIFICATION	1.0713213014029093E-5	TEST
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999892867869861	WITHOUT_CLASSIFICATION	1.0713213014029093E-5	TEST
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999947015406	WITHOUT_CLASSIFICATION	5.29845943292633E-9	TEST
The name of the variable	WITHOUT_CLASSIFICATION	0.999997575135878	WITHOUT_CLASSIFICATION	2.4248641221254324E-6	TEST
The name of the variable	WITHOUT_CLASSIFICATION	0.999997575135878	WITHOUT_CLASSIFICATION	2.4248641221254324E-6	TEST
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999992539216345	WITHOUT_CLASSIFICATION	7.460783655538794E-7	TEST
Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999995747932432	WITHOUT_CLASSIFICATION	4.252067567954034E-7	TEST
assert !(value instanceof RubyArray) : "Not an array";	WITHOUT_CLASSIFICATION	0.9999992777310304	WITHOUT_CLASSIFICATION	7.222689696878761E-7	TEST
Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999036749556	WITHOUT_CLASSIFICATION	9.632504432089285E-8	TEST
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999931873219517	WITHOUT_CLASSIFICATION	6.812678048267614E-6	TEST
We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999958846606153	WITHOUT_CLASSIFICATION	4.11533938469118E-6	TEST
assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.999921605506775	WITHOUT_CLASSIFICATION	7.839449322499009E-5	TEST
add in reverse order	WITHOUT_CLASSIFICATION	0.9999996524520567	WITHOUT_CLASSIFICATION	3.4754794330797823E-7	TEST
in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999777356287	WITHOUT_CLASSIFICATION	2.226437126879727E-8	TEST
ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999996304138792	WITHOUT_CLASSIFICATION	3.695861207676026E-7	TEST
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999997098476279	WITHOUT_CLASSIFICATION	2.901523721021216E-6	TEST
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999892867869861	WITHOUT_CLASSIFICATION	1.0713213014029093E-5	TEST
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999892867869861	WITHOUT_CLASSIFICATION	1.0713213014029093E-5	TEST
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999947015406	WITHOUT_CLASSIFICATION	5.29845943292633E-9	TEST
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999943790183952	WITHOUT_CLASSIFICATION	5.620981604798395E-6	TEST
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999998118865885	WITHOUT_CLASSIFICATION	1.88113411597245E-7	TEST
No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9970921351466927	WITHOUT_CLASSIFICATION	0.0029078648533072335	TEST
save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999996586057471	WITHOUT_CLASSIFICATION	3.413942528814381E-7	TEST
For 'foo'	WITHOUT_CLASSIFICATION	0.9999931769730591	WITHOUT_CLASSIFICATION	6.823026940878823E-6	TEST
For 'foo'	WITHOUT_CLASSIFICATION	0.9999931769730591	WITHOUT_CLASSIFICATION	6.823026940878823E-6	TEST
admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999974196415881	WITHOUT_CLASSIFICATION	2.5803584119884115E-6	TEST
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999971121793382	WITHOUT_CLASSIFICATION	2.887820661759869E-6	TEST
What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999991021326496	WITHOUT_CLASSIFICATION	8.978673503184513E-7	TEST
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999999673357016	WITHOUT_CLASSIFICATION	3.2664298392771907E-7	TEST
just rethrow	WITHOUT_CLASSIFICATION	0.9999976844860611	WITHOUT_CLASSIFICATION	2.315513938932987E-6	TEST
just rethrow	WITHOUT_CLASSIFICATION	0.9999976844860611	WITHOUT_CLASSIFICATION	2.315513938932987E-6	TEST
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999998786122699	WITHOUT_CLASSIFICATION	1.213877301021728E-6	TEST
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999998786122699	WITHOUT_CLASSIFICATION	1.213877301021728E-6	TEST
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999579943695	WITHOUT_CLASSIFICATION	4.2005630492344704E-8	TEST
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999579943695	WITHOUT_CLASSIFICATION	4.2005630492344704E-8	TEST
Execute rescue block	WITHOUT_CLASSIFICATION	0.9999992168114925	WITHOUT_CLASSIFICATION	7.831885075035212E-7	TEST
If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.999999381769796	WITHOUT_CLASSIFICATION	6.182302041199693E-7	TEST
index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999862753028194	WITHOUT_CLASSIFICATION	1.3724697180647128E-5	TEST
only a marker interface	WITHOUT_CLASSIFICATION	0.9999996645044749	WITHOUT_CLASSIFICATION	3.354955251128937E-7	TEST
don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999999595403148	WITHOUT_CLASSIFICATION	4.0459685234114396E-8	TEST
pragmas	WITHOUT_CLASSIFICATION	0.9999613977443382	WITHOUT_CLASSIFICATION	3.8602255661766416E-5	TEST
The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999992419787069	WITHOUT_CLASSIFICATION	7.580212930801742E-7	TEST
We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999991254722665	WITHOUT_CLASSIFICATION	8.74527733383553E-7	TEST
The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999852495144098	WITHOUT_CLASSIFICATION	1.4750485590235386E-5	TEST
The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999856013538041	WITHOUT_CLASSIFICATION	1.4398646195903756E-5	TEST
Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999999412516335	WITHOUT_CLASSIFICATION	5.874836646907303E-8	TEST
check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999996892925355	WITHOUT_CLASSIFICATION	3.107074645367589E-7	TEST
long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999922926124643	WITHOUT_CLASSIFICATION	7.707387535635416E-6	TEST
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999947823425656	WITHOUT_CLASSIFICATION	5.217657434442215E-6	TEST
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999947823425656	WITHOUT_CLASSIFICATION	5.217657434442215E-6	TEST
long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999937667047414	WITHOUT_CLASSIFICATION	6.233295258683906E-6	TEST
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999671193288	WITHOUT_CLASSIFICATION	3.2880671221689175E-8	TEST
Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999997009311629	WITHOUT_CLASSIFICATION	2.9906883709861545E-7	TEST
encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999752250147	WITHOUT_CLASSIFICATION	2.47749852971142E-8	TEST
only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999996607399083	WITHOUT_CLASSIFICATION	3.3926009166907534E-7	TEST
otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999987645463251	WITHOUT_CLASSIFICATION	1.2354536749168758E-6	TEST
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999990134826027	WITHOUT_CLASSIFICATION	9.86517397293575E-7	TEST
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999987777039083	WITHOUT_CLASSIFICATION	1.2222960916953025E-6	TEST
compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999874733162	WITHOUT_CLASSIFICATION	1.2526683842813726E-8	TEST
last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999292133283	WITHOUT_CLASSIFICATION	7.07866717697849E-8	TEST
compile first node only	WITHOUT_CLASSIFICATION	0.9999998949534886	WITHOUT_CLASSIFICATION	1.0504651128510612E-7	TEST
splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999985370725873	WITHOUT_CLASSIFICATION	1.462927412658647E-6	TEST
if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999991583708615	WITHOUT_CLASSIFICATION	8.416291385131541E-7	TEST
NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999797165858296	WITHOUT_CLASSIFICATION	2.028341417034358E-5	TEST
aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9998931508237291	WITHOUT_CLASSIFICATION	1.0684917627102093E-4	TEST
one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.999996867891576	WITHOUT_CLASSIFICATION	3.1321084238915206E-6	TEST
can't do it	WITHOUT_CLASSIFICATION	0.9999970201859527	WITHOUT_CLASSIFICATION	2.9798140473895327E-6	TEST
otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999998808800233	WITHOUT_CLASSIFICATION	1.1911997674054898E-7	TEST
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999995098809046	WITHOUT_CLASSIFICATION	4.901190953706797E-7	TEST
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999995098809046	WITHOUT_CLASSIFICATION	4.901190953706797E-7	TEST
these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999998566785294	WITHOUT_CLASSIFICATION	1.4332147066829214E-7	TEST
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9999980233360516	WITHOUT_CLASSIFICATION	1.976663948487395E-6	TEST
[]	WITHOUT_CLASSIFICATION	0.9997666996308	WITHOUT_CLASSIFICATION	2.3330036919997884E-4	TEST
[]	WITHOUT_CLASSIFICATION	0.9997666996308	WITHOUT_CLASSIFICATION	2.3330036919997884E-4	TEST
context.swapValues(); context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999980960082302	WITHOUT_CLASSIFICATION	1.9039917697363946E-6	TEST
[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999954610204403	WITHOUT_CLASSIFICATION	4.538979559639556E-6	TEST
[RubyClass]	WITHOUT_CLASSIFICATION	0.9999619437021539	WITHOUT_CLASSIFICATION	3.805629784619463E-5	TEST
[RubyClass] [RubyClass, RubyClass] [RubyClass] []	WITHOUT_CLASSIFICATION	0.999973225504824	WITHOUT_CLASSIFICATION	2.6774495175941634E-5	TEST
if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999987543516813	WITHOUT_CLASSIFICATION	1.2456483187200262E-6	TEST
inspect body and args	WITHOUT_CLASSIFICATION	0.9999998527105816	WITHOUT_CLASSIFICATION	1.4728941846143049E-7	TEST
inspect body and args	WITHOUT_CLASSIFICATION	0.9999998527105816	WITHOUT_CLASSIFICATION	1.4728941846143049E-7	TEST
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999923762208	WITHOUT_CLASSIFICATION	7.623779153671778E-9	TEST
if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999979457699301	WITHOUT_CLASSIFICATION	2.0542300699301E-6	TEST
invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999998126041268	WITHOUT_CLASSIFICATION	1.873958731367143E-7	TEST
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999984381596483	WITHOUT_CLASSIFICATION	1.5618403518078803E-6	TEST
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9999980233360516	WITHOUT_CLASSIFICATION	1.976663948487395E-6	TEST
[RubyClass] []	WITHOUT_CLASSIFICATION	0.9999925949340419	WITHOUT_CLASSIFICATION	7.405065958155771E-6	TEST
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999990140314206	WITHOUT_CLASSIFICATION	9.8596857945847E-7	TEST
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999990140314206	WITHOUT_CLASSIFICATION	9.8596857945847E-7	TEST
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999923889069533	WITHOUT_CLASSIFICATION	7.611093046678789E-6	TEST
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999553237257	WITHOUT_CLASSIFICATION	4.467627430364098E-8	TEST
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999553237257	WITHOUT_CLASSIFICATION	4.467627430364098E-8	TEST
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999997545042235	WITHOUT_CLASSIFICATION	2.4549577646792E-7	TEST
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999997545042235	WITHOUT_CLASSIFICATION	2.4549577646792E-7	TEST
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999997545042235	WITHOUT_CLASSIFICATION	2.4549577646792E-7	TEST
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999553237257	WITHOUT_CLASSIFICATION	4.467627430364098E-8	TEST
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999553237257	WITHOUT_CLASSIFICATION	4.467627430364098E-8	TEST
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999923889069533	WITHOUT_CLASSIFICATION	7.611093046678789E-6	TEST
force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999999668453373	WITHOUT_CLASSIFICATION	3.3154662748257655E-8	TEST
always false or nil	WITHOUT_CLASSIFICATION	0.9999995098386545	WITHOUT_CLASSIFICATION	4.901613454220842E-7	TEST
optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999995230713419	WITHOUT_CLASSIFICATION	4.76928658073614E-7	TEST
normal	WITHOUT_CLASSIFICATION	0.9999903169013917	WITHOUT_CLASSIFICATION	9.683098608154096E-6	TEST
compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999796974121	WITHOUT_CLASSIFICATION	2.0302587933090135E-8	TEST
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999984560669628	WITHOUT_CLASSIFICATION	1.5439330371880555E-6	TEST
just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999973566956321	WITHOUT_CLASSIFICATION	2.6433043678773885E-6	TEST
"assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999997645672354	WITHOUT_CLASSIFICATION	2.3543276471025503E-7	TEST
compile first node only	WITHOUT_CLASSIFICATION	0.9999998949534886	WITHOUT_CLASSIFICATION	1.0504651128510612E-7	TEST
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999553237257	WITHOUT_CLASSIFICATION	4.467627430364098E-8	TEST
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999553237257	WITHOUT_CLASSIFICATION	4.467627430364098E-8	TEST
eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999995595433865	WITHOUT_CLASSIFICATION	4.404566135316223E-7	TEST
try optz version	WITHOUT_CLASSIFICATION	0.9999994243942372	WITHOUT_CLASSIFICATION	5.756057627681194E-7	TEST
sizes must match	WITHOUT_CLASSIFICATION	0.9999956515410194	WITHOUT_CLASSIFICATION	4.348458980499949E-6	TEST
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999991869029411	WITHOUT_CLASSIFICATION	8.130970589034286E-7	TEST
normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999995712032105	WITHOUT_CLASSIFICATION	4.287967894916515E-7	TEST
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.999999824574027	WITHOUT_CLASSIFICATION	1.7542597293697723E-7	TEST
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999513824568	WITHOUT_CLASSIFICATION	4.8617543161297674E-8	TEST
only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999999497171509	WITHOUT_CLASSIFICATION	5.028284910215015E-7	TEST
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999996277125537	WITHOUT_CLASSIFICATION	3.722874462833295E-7	TEST
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999468639345	WITHOUT_CLASSIFICATION	5.313606558002276E-8	TEST
RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999927131745397	WITHOUT_CLASSIFICATION	7.286825460289796E-6	TEST
done processing args	WITHOUT_CLASSIFICATION	0.9999891449676549	WITHOUT_CLASSIFICATION	1.0855032345104326E-5	TEST
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999993129571793	WITHOUT_CLASSIFICATION	6.870428208836569E-7	TEST
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999993752087751	WITHOUT_CLASSIFICATION	6.247912247870091E-7	TEST
if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999863012043	WITHOUT_CLASSIFICATION	1.3698795601432824E-8	TEST
[recv]	WITHOUT_CLASSIFICATION	0.9999734551234286	WITHOUT_CLASSIFICATION	2.654487657146774E-5	TEST
[recv]	WITHOUT_CLASSIFICATION	0.9999734551234286	WITHOUT_CLASSIFICATION	2.654487657146774E-5	TEST
[recv]	WITHOUT_CLASSIFICATION	0.9999734551234286	WITHOUT_CLASSIFICATION	2.654487657146774E-5	TEST
compile into array	WITHOUT_CLASSIFICATION	0.9999999677184916	WITHOUT_CLASSIFICATION	3.228150840886263E-8	TEST
compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999858489207	WITHOUT_CLASSIFICATION	1.4151079455747398E-8	TEST
check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999998601022015	WITHOUT_CLASSIFICATION	1.398977983803431E-7	TEST
condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999996473660504	WITHOUT_CLASSIFICATION	3.5263394964430623E-7	TEST
force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999995765986576	WITHOUT_CLASSIFICATION	4.234013423353777E-7	TEST
create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999983436998088	WITHOUT_CLASSIFICATION	1.6563001911172828E-6	TEST
it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999982992086	WITHOUT_CLASSIFICATION	1.700791471838875E-9	TEST
send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999995212362465	WITHOUT_CLASSIFICATION	4.787637534375295E-7	TEST
single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999997341473138	WITHOUT_CLASSIFICATION	2.658526861550046E-7	TEST
leave as a normal array	WITHOUT_CLASSIFICATION	0.9999983476376911	WITHOUT_CLASSIFICATION	1.6523623088908414E-6	TEST
This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999921946439719	WITHOUT_CLASSIFICATION	7.805356028060819E-6	TEST
The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999978875895426	WITHOUT_CLASSIFICATION	2.112410457517351E-6	TEST
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999923762208	WITHOUT_CLASSIFICATION	7.623779153671778E-9	TEST
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999553237257	WITHOUT_CLASSIFICATION	4.467627430364098E-8	TEST
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999553237257	WITHOUT_CLASSIFICATION	4.467627430364098E-8	TEST
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999923889069533	WITHOUT_CLASSIFICATION	7.611093046678789E-6	TEST
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999984560669628	WITHOUT_CLASSIFICATION	1.5439330371880555E-6	TEST
try optz version	WITHOUT_CLASSIFICATION	0.9999994243942372	WITHOUT_CLASSIFICATION	5.756057627681194E-7	TEST
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999991869029411	WITHOUT_CLASSIFICATION	8.130970589034286E-7	TEST
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.999999824574027	WITHOUT_CLASSIFICATION	1.7542597293697723E-7	TEST
sizes must match	WITHOUT_CLASSIFICATION	0.9999956515410194	WITHOUT_CLASSIFICATION	4.348458980499949E-6	TEST
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999513824568	WITHOUT_CLASSIFICATION	4.8617543161297674E-8	TEST
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999468639345	WITHOUT_CLASSIFICATION	5.313606558002276E-8	TEST
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999996277125537	WITHOUT_CLASSIFICATION	3.722874462833295E-7	TEST
done processing args	WITHOUT_CLASSIFICATION	0.9999891449676549	WITHOUT_CLASSIFICATION	1.0855032345104326E-5	TEST
Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.999999895044451	WITHOUT_CLASSIFICATION	1.04955549015614E-7	TEST
class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999998488554063	WITHOUT_CLASSIFICATION	1.5114459371309682E-7	TEST
successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.999999336888985	WITHOUT_CLASSIFICATION	6.631110150450222E-7	TEST
finally, grab the script	WITHOUT_CLASSIFICATION	0.9999997504312933	WITHOUT_CLASSIFICATION	2.495687067072535E-7	TEST
logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999996669443031	WITHOUT_CLASSIFICATION	3.3305569688057884E-7	TEST
Time the compilation	WITHOUT_CLASSIFICATION	0.9999995022680842	WITHOUT_CLASSIFICATION	4.977319157515881E-7	TEST
we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999986214497396	WITHOUT_CLASSIFICATION	1.3785502603227196E-6	TEST
If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999983490185557	WITHOUT_CLASSIFICATION	1.6509814443042061E-6	TEST
if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999997928103793	WITHOUT_CLASSIFICATION	2.0718962067890778E-7	TEST
only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999993297284983	WITHOUT_CLASSIFICATION	6.702715017992773E-7	TEST
normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.999999893175189	WITHOUT_CLASSIFICATION	1.0682481099718147E-7	TEST
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998465490818	WITHOUT_CLASSIFICATION	1.534509182032271E-7	TEST
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999911384097951	WITHOUT_CLASSIFICATION	8.861590204907586E-6	TEST
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999990339767934	WITHOUT_CLASSIFICATION	9.660232066960706E-7	TEST
return last value from execution	WITHOUT_CLASSIFICATION	0.9999999673560334	WITHOUT_CLASSIFICATION	3.264396666999803E-8	TEST
end of variable scope	WITHOUT_CLASSIFICATION	0.9999989715544382	WITHOUT_CLASSIFICATION	1.0284455618922969E-6	TEST
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999934906242353	WITHOUT_CLASSIFICATION	6.509375764722378E-6	TEST
Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999992490614612	WITHOUT_CLASSIFICATION	7.509385388528182E-7	TEST
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999778863294	WITHOUT_CLASSIFICATION	2.211367060026543E-8	TEST
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999997630769899	WITHOUT_CLASSIFICATION	2.369230100573038E-7	TEST
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999999262278501	WITHOUT_CLASSIFICATION	7.377214993413151E-8	TEST
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999997490473953	WITHOUT_CLASSIFICATION	2.509526047692421E-7	TEST
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999997490473953	WITHOUT_CLASSIFICATION	2.509526047692421E-7	TEST
value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999987135478946	WITHOUT_CLASSIFICATION	1.2864521054384436E-6	TEST
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999456947343	WITHOUT_CLASSIFICATION	5.430526579545402E-8	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999847738843377	WITHOUT_CLASSIFICATION	1.5226115662397196E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999847738843377	WITHOUT_CLASSIFICATION	1.5226115662397196E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999847738843377	WITHOUT_CLASSIFICATION	1.5226115662397196E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999847738843377	WITHOUT_CLASSIFICATION	1.5226115662397196E-5	TEST
arg0	WITHOUT_CLASSIFICATION	0.9999262068015465	WITHOUT_CLASSIFICATION	7.379319845340028E-5	TEST
arg0	WITHOUT_CLASSIFICATION	0.9999262068015465	WITHOUT_CLASSIFICATION	7.379319845340028E-5	TEST
arg0	WITHOUT_CLASSIFICATION	0.9999262068015465	WITHOUT_CLASSIFICATION	7.379319845340028E-5	TEST
arg1	WITHOUT_CLASSIFICATION	0.9999398307833245	WITHOUT_CLASSIFICATION	6.0169216675502775E-5	TEST
arg1	WITHOUT_CLASSIFICATION	0.9999398307833245	WITHOUT_CLASSIFICATION	6.0169216675502775E-5	TEST
arg2	WITHOUT_CLASSIFICATION	0.9999185171063216	WITHOUT_CLASSIFICATION	8.148289367839857E-5	TEST
args	WITHOUT_CLASSIFICATION	0.9999614297128682	WITHOUT_CLASSIFICATION	3.8570287131853726E-5	TEST
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999456947343	WITHOUT_CLASSIFICATION	5.430526579545402E-8	TEST
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9999996874005771	WITHOUT_CLASSIFICATION	3.125994228172766E-7	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999847738843377	WITHOUT_CLASSIFICATION	1.5226115662397196E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999847738843377	WITHOUT_CLASSIFICATION	1.5226115662397196E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999847738843377	WITHOUT_CLASSIFICATION	1.5226115662397196E-5	TEST
arg0	WITHOUT_CLASSIFICATION	0.9999262068015465	WITHOUT_CLASSIFICATION	7.379319845340028E-5	TEST
arg0	WITHOUT_CLASSIFICATION	0.9999262068015465	WITHOUT_CLASSIFICATION	7.379319845340028E-5	TEST
arg1	WITHOUT_CLASSIFICATION	0.9999398307833245	WITHOUT_CLASSIFICATION	6.0169216675502775E-5	TEST
args	WITHOUT_CLASSIFICATION	0.9999614297128682	WITHOUT_CLASSIFICATION	3.8570287131853726E-5	TEST
get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999283127893	WITHOUT_CLASSIFICATION	7.168721074845653E-8	TEST
get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999283127893	WITHOUT_CLASSIFICATION	7.168721074845653E-8	TEST
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999997688835918	WITHOUT_CLASSIFICATION	2.311164081612611E-7	TEST
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999997688835918	WITHOUT_CLASSIFICATION	2.311164081612611E-7	TEST
invoke	WITHOUT_CLASSIFICATION	0.9999810694935805	WITHOUT_CLASSIFICATION	1.8930506419588522E-5	TEST
invoke	WITHOUT_CLASSIFICATION	0.9999810694935805	WITHOUT_CLASSIFICATION	1.8930506419588522E-5	TEST
check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999985633052819	WITHOUT_CLASSIFICATION	1.436694718020814E-6	TEST
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999990841760473	WITHOUT_CLASSIFICATION	9.158239527021423E-7	TEST
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999990841760473	WITHOUT_CLASSIFICATION	9.158239527021423E-7	TEST
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999998239436926	WITHOUT_CLASSIFICATION	1.760563075035846E-7	TEST
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999998239436926	WITHOUT_CLASSIFICATION	1.760563075035846E-7	TEST
eval value for assignment	WITHOUT_CLASSIFICATION	0.9999988758172927	WITHOUT_CLASSIFICATION	1.1241827072466406E-6	TEST
call site	WITHOUT_CLASSIFICATION	0.9999997717298252	WITHOUT_CLASSIFICATION	2.282701748693197E-7	TEST
call site	WITHOUT_CLASSIFICATION	0.9999997717298252	WITHOUT_CLASSIFICATION	2.282701748693197E-7	TEST
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999995380820008	WITHOUT_CLASSIFICATION	4.61917999263025E-7	TEST
check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999986167262196	WITHOUT_CLASSIFICATION	1.3832737805021003E-6	TEST
eval value and save it	WITHOUT_CLASSIFICATION	0.9999988006705985	WITHOUT_CLASSIFICATION	1.1993294014475298E-6	TEST
self	WITHOUT_CLASSIFICATION	0.9999847738843377	WITHOUT_CLASSIFICATION	1.5226115662397196E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999847738843377	WITHOUT_CLASSIFICATION	1.5226115662397196E-5	TEST
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999995380820008	WITHOUT_CLASSIFICATION	4.61917999263025E-7	TEST
receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999970498369036	WITHOUT_CLASSIFICATION	2.950163096322748E-6	TEST
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999974165514691	WITHOUT_CLASSIFICATION	2.58344853087635E-6	TEST
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999974165514691	WITHOUT_CLASSIFICATION	2.58344853087635E-6	TEST
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999974165514691	WITHOUT_CLASSIFICATION	2.58344853087635E-6	TEST
super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999997467497185	WITHOUT_CLASSIFICATION	2.532502815201912E-7	TEST
args	WITHOUT_CLASSIFICATION	0.9999614297128682	WITHOUT_CLASSIFICATION	3.8570287131853726E-5	TEST
block	WITHOUT_CLASSIFICATION	0.9999651089583473	WITHOUT_CLASSIFICATION	3.489104165274353E-5	TEST
block	WITHOUT_CLASSIFICATION	0.9999651089583473	WITHOUT_CLASSIFICATION	3.489104165274353E-5	TEST
no args, no block	WITHOUT_CLASSIFICATION	0.9999992986653725	WITHOUT_CLASSIFICATION	7.01334627461145E-7	TEST
no args, with block	WITHOUT_CLASSIFICATION	0.9999990108024205	WITHOUT_CLASSIFICATION	9.891975795115977E-7	TEST
with args, no block	WITHOUT_CLASSIFICATION	0.9999993379987926	WITHOUT_CLASSIFICATION	6.620012073231654E-7	TEST
with args, with block	WITHOUT_CLASSIFICATION	0.9999910423074416	WITHOUT_CLASSIFICATION	8.957692558435192E-6	TEST
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999996102866001	WITHOUT_CLASSIFICATION	3.8971339987217247E-7	TEST
pop extra attr value	WITHOUT_CLASSIFICATION	0.9999995861	WITHOUT_CLASSIFICATION	4.1389999997438E-7	TEST
pop extra attr value	WITHOUT_CLASSIFICATION	0.9999995861	WITHOUT_CLASSIFICATION	4.1389999997438E-7	TEST
arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999999813942312	WITHOUT_CLASSIFICATION	1.8605768869527605E-8	TEST
arg	WITHOUT_CLASSIFICATION	0.9999231848227448	WITHOUT_CLASSIFICATION	7.681517725523069E-5	TEST
arg	WITHOUT_CLASSIFICATION	0.9999231848227448	WITHOUT_CLASSIFICATION	7.681517725523069E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999847738843377	WITHOUT_CLASSIFICATION	1.5226115662397196E-5	TEST
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999974165514691	WITHOUT_CLASSIFICATION	2.58344853087635E-6	TEST
args	WITHOUT_CLASSIFICATION	0.9999614297128682	WITHOUT_CLASSIFICATION	3.8570287131853726E-5	TEST
block	WITHOUT_CLASSIFICATION	0.9999651089583473	WITHOUT_CLASSIFICATION	3.489104165274353E-5	TEST
no args, no block	WITHOUT_CLASSIFICATION	0.9999992986653725	WITHOUT_CLASSIFICATION	7.01334627461145E-7	TEST
no args, with block	WITHOUT_CLASSIFICATION	0.9999990108024205	WITHOUT_CLASSIFICATION	9.891975795115977E-7	TEST
with args, no block	WITHOUT_CLASSIFICATION	0.9999993379987926	WITHOUT_CLASSIFICATION	6.620012073231654E-7	TEST
with args, with block	WITHOUT_CLASSIFICATION	0.9999910423074416	WITHOUT_CLASSIFICATION	8.957692558435192E-6	TEST
arg	WITHOUT_CLASSIFICATION	0.9999231848227448	WITHOUT_CLASSIFICATION	7.681517725523069E-5	TEST
retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999986459139946	WITHOUT_CLASSIFICATION	1.3540860053864472E-6	TEST
use numbered access method	WITHOUT_CLASSIFICATION	0.9999994644380499	WITHOUT_CLASSIFICATION	5.355619501359592E-7	TEST
retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999989413351559	WITHOUT_CLASSIFICATION	1.058664844168154E-6	TEST
add name to call site list	WITHOUT_CLASSIFICATION	0.999999574838428	WITHOUT_CLASSIFICATION	4.251615719435443E-7	TEST
module is on top of stack	WITHOUT_CLASSIFICATION	0.9999989128651012	WITHOUT_CLASSIFICATION	1.0871348987801803E-6	TEST
build scope names string	WITHOUT_CLASSIFICATION	0.9999978215203745	WITHOUT_CLASSIFICATION	2.1784796254274586E-6	TEST
build descriptor string	WITHOUT_CLASSIFICATION	0.9999991207743261	WITHOUT_CLASSIFICATION	8.792256738768725E-7	TEST
build descriptor string	WITHOUT_CLASSIFICATION	0.9999991207743261	WITHOUT_CLASSIFICATION	8.792256738768725E-7	TEST
generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999992381811625	WITHOUT_CLASSIFICATION	7.618188374484968E-7	TEST
generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999995447540245	WITHOUT_CLASSIFICATION	4.5524597551340585E-7	TEST
generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999997661469963	WITHOUT_CLASSIFICATION	2.3385300367937152E-7	TEST
generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999995633993045	WITHOUT_CLASSIFICATION	4.366006955051241E-7	TEST
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999997313962778	WITHOUT_CLASSIFICATION	2.686037221895684E-7	TEST
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999997313962778	WITHOUT_CLASSIFICATION	2.686037221895684E-7	TEST
generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999995968764873	WITHOUT_CLASSIFICATION	4.031235125601917E-7	TEST
generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999991200361726	WITHOUT_CLASSIFICATION	8.799638273228941E-7	TEST
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999996825520622	WITHOUT_CLASSIFICATION	3.1744793792982725E-7	TEST
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999996825520622	WITHOUT_CLASSIFICATION	3.1744793792982725E-7	TEST
generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999982406445111	WITHOUT_CLASSIFICATION	1.7593554889369395E-6	TEST
generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999998242514081	WITHOUT_CLASSIFICATION	1.7574859191155517E-7	TEST
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999996102866001	WITHOUT_CLASSIFICATION	3.8971339987217247E-7	TEST
use IRubyObject[]	WITHOUT_CLASSIFICATION	0.999999486160062	WITHOUT_CLASSIFICATION	5.138399380410234E-7	TEST
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998748306006	WITHOUT_CLASSIFICATION	1.2516939931864198E-7	TEST
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999966007494195	WITHOUT_CLASSIFICATION	3.399250580442626E-6	TEST
No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999997231334679	WITHOUT_CLASSIFICATION	2.7686653215962064E-7	TEST
load Object under value	WITHOUT_CLASSIFICATION	0.9999970958466217	WITHOUT_CLASSIFICATION	2.904153378313905E-6	TEST
put under object array already present	WITHOUT_CLASSIFICATION	0.9999993660720455	WITHOUT_CLASSIFICATION	6.339279544019667E-7	TEST
if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999552649165	WITHOUT_CLASSIFICATION	4.473508346348319E-8	TEST
This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999997974923708	WITHOUT_CLASSIFICATION	2.0250762921297599E-7	TEST
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999972684294	WITHOUT_CLASSIFICATION	2.73157072367323E-9	TEST
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999972684294	WITHOUT_CLASSIFICATION	2.73157072367323E-9	TEST
brute force construction inline	WITHOUT_CLASSIFICATION	0.9999994884612508	WITHOUT_CLASSIFICATION	5.115387491345411E-7	TEST
brute force construction inline	WITHOUT_CLASSIFICATION	0.9999994884612508	WITHOUT_CLASSIFICATION	5.115387491345411E-7	TEST
use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999810317203	WITHOUT_CLASSIFICATION	1.896827980202657E-8	TEST
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999995070076424	WITHOUT_CLASSIFICATION	4.929923575142684E-7	TEST
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999995070076424	WITHOUT_CLASSIFICATION	4.929923575142684E-7	TEST
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999995070076424	WITHOUT_CLASSIFICATION	4.929923575142684E-7	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999963133335161	WITHOUT_CLASSIFICATION	3.6866664838994663E-6	TEST
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999997605663254	WITHOUT_CLASSIFICATION	2.394336745951951E-7	TEST
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999997605663254	WITHOUT_CLASSIFICATION	2.394336745951951E-7	TEST
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999989232845474	WITHOUT_CLASSIFICATION	1.076715452610947E-6	TEST
check the condition	WITHOUT_CLASSIFICATION	0.9999998888767345	WITHOUT_CLASSIFICATION	1.1112326543685371E-7	TEST
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999977292937634	WITHOUT_CLASSIFICATION	2.2707062366644506E-6	TEST
skip catch block	WITHOUT_CLASSIFICATION	0.9999994740471856	WITHOUT_CLASSIFICATION	5.259528143766057E-7	TEST
catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999993607406678	WITHOUT_CLASSIFICATION	6.392593323234382E-7	TEST
next jump	WITHOUT_CLASSIFICATION	0.9999992005846773	WITHOUT_CLASSIFICATION	7.994153227744544E-7	TEST
exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.99984286689823	WITHOUT_CLASSIFICATION	1.5713310177006273E-4	TEST
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999911384097951	WITHOUT_CLASSIFICATION	8.861590204907586E-6	TEST
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999911384097951	WITHOUT_CLASSIFICATION	8.861590204907586E-6	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999963133335161	WITHOUT_CLASSIFICATION	3.6866664838994663E-6	TEST
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999989232845474	WITHOUT_CLASSIFICATION	1.076715452610947E-6	TEST
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999128004216	WITHOUT_CLASSIFICATION	8.719957847706037E-8	TEST
check the condition	WITHOUT_CLASSIFICATION	0.9999998888767345	WITHOUT_CLASSIFICATION	1.1112326543685371E-7	TEST
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999977292937634	WITHOUT_CLASSIFICATION	2.2707062366644506E-6	TEST
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999521192534	WITHOUT_CLASSIFICATION	4.788074666857049E-8	TEST
break jump	WITHOUT_CLASSIFICATION	0.9999990063574117	WITHOUT_CLASSIFICATION	9.936425883112442E-7	TEST
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999980901040371	WITHOUT_CLASSIFICATION	1.909895962984231E-6	TEST
[reg]	WITHOUT_CLASSIFICATION	0.999946930158511	WITHOUT_CLASSIFICATION	5.306984148906004E-5	TEST
for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999976571062767	WITHOUT_CLASSIFICATION	2.3428937231980107E-6	TEST
inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999039375362	WITHOUT_CLASSIFICATION	9.606246378532913E-8	TEST
inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999999523306338	WITHOUT_CLASSIFICATION	4.766936624134718E-8	TEST
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999521192534	WITHOUT_CLASSIFICATION	4.788074666857049E-8	TEST
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999487071068839	WITHOUT_CLASSIFICATION	5.1292893116009584E-5	TEST
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999487071068839	WITHOUT_CLASSIFICATION	5.1292893116009584E-5	TEST
if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999833678732729	WITHOUT_CLASSIFICATION	1.663212672704776E-5	TEST
retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999999515473837	WITHOUT_CLASSIFICATION	4.845261616320833E-8	TEST
any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999967755640071	WITHOUT_CLASSIFICATION	3.2244359928962575E-6	TEST
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999922340774191	WITHOUT_CLASSIFICATION	7.765922580912258E-6	TEST
restore the original exception	WITHOUT_CLASSIFICATION	0.9999940601963268	WITHOUT_CLASSIFICATION	5.939803673281853E-6	TEST
Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999993462559185	WITHOUT_CLASSIFICATION	6.53744081640659E-7	TEST
rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999988884560844	WITHOUT_CLASSIFICATION	1.111543915468831E-6	TEST
Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999996422737419	WITHOUT_CLASSIFICATION	3.5772625802077464E-7	TEST
inside a loop, break out of it go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999997326964049	WITHOUT_CLASSIFICATION	2.6730359508571744E-7	TEST
false zero	WITHOUT_CLASSIFICATION	0.9999996079821812	WITHOUT_CLASSIFICATION	3.920178187665393E-7	TEST
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999939471962551	WITHOUT_CLASSIFICATION	6.052803744812756E-6	TEST
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999922340774191	WITHOUT_CLASSIFICATION	7.765922580912258E-6	TEST
restore the original exception	WITHOUT_CLASSIFICATION	0.9999940601963268	WITHOUT_CLASSIFICATION	5.939803673281853E-6	TEST
retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999999535921664	WITHOUT_CLASSIFICATION	4.6407833517802084E-8	TEST
push false	WITHOUT_CLASSIFICATION	0.9999990794913084	WITHOUT_CLASSIFICATION	9.20508691554337E-7	TEST
method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999999241887341	WITHOUT_CLASSIFICATION	7.58112659191849E-8	TEST
method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999978287012967	WITHOUT_CLASSIFICATION	2.171298703316013E-6	TEST
EQ == 0 (i.e. false) [C]	WITHOUT_CLASSIFICATION	0.9999927638574311	WITHOUT_CLASSIFICATION	7.236142568974907E-6	TEST
[C, C] [C, C, String] [C, null|C]	WITHOUT_CLASSIFICATION	0.9999927862113204	WITHOUT_CLASSIFICATION	7.2137886796471785E-6	TEST
[C]	WITHOUT_CLASSIFICATION	0.9998057587238475	WITHOUT_CLASSIFICATION	1.9424127615249323E-4	TEST
push true	WITHOUT_CLASSIFICATION	0.9999988128610044	WITHOUT_CLASSIFICATION	1.187138995528656E-6	TEST
EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999881805296383	WITHOUT_CLASSIFICATION	1.1819470361640775E-5	TEST
[?, ?] [?, boolean]	WITHOUT_CLASSIFICATION	0.9999954879690611	WITHOUT_CLASSIFICATION	4.512030938863823E-6	TEST
[RubyModule] [RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999988209511059	WITHOUT_CLASSIFICATION	1.1790488940513937E-6	TEST
[boolean]	WITHOUT_CLASSIFICATION	0.999991109372005	WITHOUT_CLASSIFICATION	8.890627994976907E-6	TEST
no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999997729351664	WITHOUT_CLASSIFICATION	2.2706483366369222E-7	TEST
but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.999999719201771	WITHOUT_CLASSIFICATION	2.8079822890828455E-7	TEST
we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999939636591999	WITHOUT_CLASSIFICATION	6.036340800071434E-6	TEST
set self to the class	WITHOUT_CLASSIFICATION	0.9999999068970764	WITHOUT_CLASSIFICATION	9.310292361339329E-8	TEST
CLASS BODY	WITHOUT_CLASSIFICATION	0.9999633671674467	WITHOUT_CLASSIFICATION	3.663283255334482E-5	TEST
static scope	WITHOUT_CLASSIFICATION	0.9999989332268346	WITHOUT_CLASSIFICATION	1.06677316533176E-6	TEST
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999126545258	WITHOUT_CLASSIFICATION	8.734547409827925E-8	TEST
new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999992405577752	WITHOUT_CLASSIFICATION	7.594422248052082E-7	TEST
CLASS BODY	WITHOUT_CLASSIFICATION	0.9999633671674467	WITHOUT_CLASSIFICATION	3.663283255334482E-5	TEST
static scope	WITHOUT_CLASSIFICATION	0.9999989332268346	WITHOUT_CLASSIFICATION	1.06677316533176E-6	TEST
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999126545258	WITHOUT_CLASSIFICATION	8.734547409827925E-8	TEST
finally with exception	WITHOUT_CLASSIFICATION	0.9999920596838513	WITHOUT_CLASSIFICATION	7.940316148634665E-6	TEST
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.999999967519233	WITHOUT_CLASSIFICATION	3.2480766936856255E-8	TEST
otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999999839845685	WITHOUT_CLASSIFICATION	1.6015431593990454E-8	TEST
original exception is on stack	WITHOUT_CLASSIFICATION	0.9999967954833417	WITHOUT_CLASSIFICATION	3.204516658194946E-6	TEST
RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999900646370458	WITHOUT_CLASSIFICATION	9.935362954275122E-6	TEST
updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999995141213478	WITHOUT_CLASSIFICATION	4.858786522202736E-7	TEST
callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999999521172355	WITHOUT_CLASSIFICATION	4.788276458344688E-8	TEST
prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999999481885427	WITHOUT_CLASSIFICATION	5.181145734535668E-8	TEST
script object	WITHOUT_CLASSIFICATION	0.9999995656333773	WITHOUT_CLASSIFICATION	4.3436662265036886E-7	TEST
arities	WITHOUT_CLASSIFICATION	0.9999973548243749	WITHOUT_CLASSIFICATION	2.6451756251309433E-6	TEST
TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9969362723226229	WITHOUT_CLASSIFICATION	0.003063727677376973	TEST
we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999996265844143	WITHOUT_CLASSIFICATION	3.734155856838349E-7	TEST
we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999995401948663	WITHOUT_CLASSIFICATION	4.5980513372372635E-7	TEST
checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999997201570152	WITHOUT_CLASSIFICATION	2.798429848058869E-7	TEST
expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9968208629269465	WITHOUT_CLASSIFICATION	0.0031791370730535804	TEST
normal case, create a new label	WITHOUT_CLASSIFICATION	0.999998763686394	WITHOUT_CLASSIFICATION	1.236313606100013E-6	TEST
last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999999063236172	WITHOUT_CLASSIFICATION	9.367638271585524E-8	TEST
do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999995401271725	WITHOUT_CLASSIFICATION	4.598728274773526E-7	TEST
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999999257019365	WITHOUT_CLASSIFICATION	7.429806350109145E-7	TEST
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999992188733955	WITHOUT_CLASSIFICATION	7.811266045880916E-7	TEST
extract item from array	WITHOUT_CLASSIFICATION	0.9999979746346662	WITHOUT_CLASSIFICATION	2.0253653337687036E-6	TEST
index for the item	WITHOUT_CLASSIFICATION	0.9999994532752653	WITHOUT_CLASSIFICATION	5.467247346722397E-7	TEST
index for the item	WITHOUT_CLASSIFICATION	0.9999994532752653	WITHOUT_CLASSIFICATION	5.467247346722397E-7	TEST
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.999998525180173	WITHOUT_CLASSIFICATION	1.4748198269861274E-6	TEST
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.999998525180173	WITHOUT_CLASSIFICATION	1.4748198269861274E-6	TEST
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999963602860832	WITHOUT_CLASSIFICATION	3.6397139167996645E-6	TEST
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999963602860832	WITHOUT_CLASSIFICATION	3.6397139167996645E-6	TEST
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999990021633669	WITHOUT_CLASSIFICATION	9.978366331317723E-7	TEST
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999727484638	WITHOUT_CLASSIFICATION	2.725153623162448E-8	TEST
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999565884964	WITHOUT_CLASSIFICATION	4.341150354761126E-8	TEST
if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999964416414157	WITHOUT_CLASSIFICATION	3.558358584284336E-6	TEST
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999979770812985	WITHOUT_CLASSIFICATION	2.0229187014584143E-6	TEST
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999998043458292	WITHOUT_CLASSIFICATION	1.95654170795122E-7	TEST
first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999987383772455	WITHOUT_CLASSIFICATION	1.2616227544142752E-6	TEST
then optional args	WITHOUT_CLASSIFICATION	0.9999996404014051	WITHOUT_CLASSIFICATION	3.595985949604747E-7	TEST
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999911384097951	WITHOUT_CLASSIFICATION	8.861590204907586E-6	TEST
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999990021633669	WITHOUT_CLASSIFICATION	9.978366331317723E-7	TEST
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999727484638	WITHOUT_CLASSIFICATION	2.725153623162448E-8	TEST
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999565884964	WITHOUT_CLASSIFICATION	4.341150354761126E-8	TEST
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999979770812985	WITHOUT_CLASSIFICATION	2.0229187014584143E-6	TEST
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999998043458292	WITHOUT_CLASSIFICATION	1.95654170795122E-7	TEST
if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999978265244391	WITHOUT_CLASSIFICATION	2.17347556082931E-6	TEST
finally, post args	WITHOUT_CLASSIFICATION	0.9999992490571826	WITHOUT_CLASSIFICATION	7.509428172597415E-7	TEST
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999947015790372	WITHOUT_CLASSIFICATION	5.298420962775552E-6	TEST
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999947015790372	WITHOUT_CLASSIFICATION	5.298420962775552E-6	TEST
unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.999998582895634	WITHOUT_CLASSIFICATION	1.4171043659385718E-6	TEST
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999997196398928	WITHOUT_CLASSIFICATION	2.803601073182527E-7	TEST
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999996344438509	WITHOUT_CLASSIFICATION	3.655561491580066E-7	TEST
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999998674860082	WITHOUT_CLASSIFICATION	1.3251399180022093E-6	TEST
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999998674860082	WITHOUT_CLASSIFICATION	1.3251399180022093E-6	TEST
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999987291399672	WITHOUT_CLASSIFICATION	1.2708600327634954E-6	TEST
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999982291489583	WITHOUT_CLASSIFICATION	1.7708510417072943E-6	TEST
store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999994431110324	WITHOUT_CLASSIFICATION	5.568889676013106E-7	TEST
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999999383644206	WITHOUT_CLASSIFICATION	6.163557940255346E-8	TEST
return in a class body raises error	WITHOUT_CLASSIFICATION	0.999999971522215	WITHOUT_CLASSIFICATION	2.847778500228586E-8	TEST
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999990339767934	WITHOUT_CLASSIFICATION	9.660232066960706E-7	TEST
return last value from execution	WITHOUT_CLASSIFICATION	0.9999999673560334	WITHOUT_CLASSIFICATION	3.264396666999803E-8	TEST
end of variable scope	WITHOUT_CLASSIFICATION	0.9999989715544382	WITHOUT_CLASSIFICATION	1.0284455618922969E-6	TEST
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999934906242353	WITHOUT_CLASSIFICATION	6.509375764722378E-6	TEST
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999997630769899	WITHOUT_CLASSIFICATION	2.369230100573038E-7	TEST
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999999262278501	WITHOUT_CLASSIFICATION	7.377214993413151E-8	TEST
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999987291399672	WITHOUT_CLASSIFICATION	1.2708600327634954E-6	TEST
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999982291489583	WITHOUT_CLASSIFICATION	1.7708510417072943E-6	TEST
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999999383644206	WITHOUT_CLASSIFICATION	6.163557940255346E-8	TEST
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999667246575	WITHOUT_CLASSIFICATION	3.3275342531053396E-8	TEST
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999996344438509	WITHOUT_CLASSIFICATION	3.655561491580066E-7	TEST
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999996344438509	WITHOUT_CLASSIFICATION	3.655561491580066E-7	TEST
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999939471962551	WITHOUT_CLASSIFICATION	6.052803744812756E-6	TEST
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999939471962551	WITHOUT_CLASSIFICATION	6.052803744812756E-6	TEST
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998234066433	WITHOUT_CLASSIFICATION	1.7659335676377172E-7	TEST
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998234066433	WITHOUT_CLASSIFICATION	1.7659335676377172E-7	TEST
store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999997198987695	WITHOUT_CLASSIFICATION	2.8010123061319324E-7	TEST
if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999995749055555	WITHOUT_CLASSIFICATION	4.2509444449453963E-7	TEST
fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999989685163444	WITHOUT_CLASSIFICATION	1.0314836556143084E-6	TEST
default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999894564180164	WITHOUT_CLASSIFICATION	1.0543581983511856E-5	TEST
store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999991174912739	WITHOUT_CLASSIFICATION	8.825087261227334E-7	TEST
store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999986842877693	WITHOUT_CLASSIFICATION	1.3157122306989323E-6	TEST
in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999997922955403	WITHOUT_CLASSIFICATION	2.0770445982219669E-7	TEST
no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999790542755	WITHOUT_CLASSIFICATION	2.0945724507351747E-8	TEST
for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999997055828064	WITHOUT_CLASSIFICATION	2.9441719357393925E-7	TEST
set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999997564356268	WITHOUT_CLASSIFICATION	2.4356437329820523E-7	TEST
if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999995522438898	WITHOUT_CLASSIFICATION	4.4775611015153346E-7	TEST
verify the class	WITHOUT_CLASSIFICATION	0.9999998430976498	WITHOUT_CLASSIFICATION	1.5690235023907466E-7	TEST
create dir if necessary	WITHOUT_CLASSIFICATION	0.9999990587869331	WITHOUT_CLASSIFICATION	9.41213066878372E-7	TEST
Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999069132051	WITHOUT_CLASSIFICATION	9.308679501615506E-8	TEST
add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999988805521102	WITHOUT_CLASSIFICATION	1.1194478899383706E-6	TEST
thread context	WITHOUT_CLASSIFICATION	0.9999991378739023	WITHOUT_CLASSIFICATION	8.621260977937188E-7	TEST
line number	WITHOUT_CLASSIFICATION	0.9999951981213991	WITHOUT_CLASSIFICATION	4.801878600883097E-6	TEST
invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999999022476121	WITHOUT_CLASSIFICATION	9.775238783611387E-8	TEST
load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999999890076687	WITHOUT_CLASSIFICATION	1.09923312664108E-8	TEST
return last value from execution	WITHOUT_CLASSIFICATION	0.9999999673560334	WITHOUT_CLASSIFICATION	3.264396666999803E-8	TEST
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999934906242353	WITHOUT_CLASSIFICATION	6.509375764722378E-6	TEST
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999997490473953	WITHOUT_CLASSIFICATION	2.509526047692421E-7	TEST
block	WITHOUT_CLASSIFICATION	0.9999651089583473	WITHOUT_CLASSIFICATION	3.489104165274353E-5	TEST
block	WITHOUT_CLASSIFICATION	0.9999651089583473	WITHOUT_CLASSIFICATION	3.489104165274353E-5	TEST
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999667246575	WITHOUT_CLASSIFICATION	3.3275342531053396E-8	TEST
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999996344438509	WITHOUT_CLASSIFICATION	3.655561491580066E-7	TEST
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999939471962551	WITHOUT_CLASSIFICATION	6.052803744812756E-6	TEST
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998234066433	WITHOUT_CLASSIFICATION	1.7659335676377172E-7	TEST
add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999996711918002	WITHOUT_CLASSIFICATION	3.2880819976934935E-7	TEST
add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999942543402026	WITHOUT_CLASSIFICATION	5.745659797410887E-6	TEST
construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999997150724967	WITHOUT_CLASSIFICATION	2.8492750328123717E-7	TEST
JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999998100588927	WITHOUT_CLASSIFICATION	1.899411072330824E-7	TEST
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999300736474	WITHOUT_CLASSIFICATION	6.992635266576928E-8	TEST
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999300736474	WITHOUT_CLASSIFICATION	6.992635266576928E-8	TEST
lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999997589492803	WITHOUT_CLASSIFICATION	2.4105071974807416E-7	TEST
boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999992888620652	WITHOUT_CLASSIFICATION	7.111379347090281E-7	TEST
invoke static __file__	WITHOUT_CLASSIFICATION	0.9999996616769404	WITHOUT_CLASSIFICATION	3.383230596086417E-7	TEST
exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999987037381705	WITHOUT_CLASSIFICATION	1.296261829564996E-6	TEST
declare the field	WITHOUT_CLASSIFICATION	0.9999998286364784	WITHOUT_CLASSIFICATION	1.71363521691125E-7	TEST
declare the field	WITHOUT_CLASSIFICATION	0.9999998286364784	WITHOUT_CLASSIFICATION	1.71363521691125E-7	TEST
not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999998076563522	WITHOUT_CLASSIFICATION	1.9234364780603767E-7	TEST
normal closure	WITHOUT_CLASSIFICATION	0.9999996565664324	WITHOUT_CLASSIFICATION	3.434335675607776E-7	TEST
end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999980703704445	WITHOUT_CLASSIFICATION	1.9296295555940486E-6	TEST
we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999940491724796	WITHOUT_CLASSIFICATION	5.950827520449073E-6	TEST
handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999961882366114	WITHOUT_CLASSIFICATION	3.8117633885536096E-6	TEST
jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999379899429	WITHOUT_CLASSIFICATION	6.201005708285317E-8	TEST
Ruby name	WITHOUT_CLASSIFICATION	0.9999941568168459	WITHOUT_CLASSIFICATION	5.843183154148494E-6	TEST
Accumulate call arguments	WITHOUT_CLASSIFICATION	0.999999833419067	WITHOUT_CLASSIFICATION	1.665809331044809E-7	TEST
Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999931540098493	WITHOUT_CLASSIFICATION	6.845990150609937E-6	TEST
We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9978903954820966	WITHOUT_CLASSIFICATION	0.0021096045179034044	TEST
Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999983015840233	WITHOUT_CLASSIFICATION	1.6984159766974682E-6	TEST
Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999948886934519	WITHOUT_CLASSIFICATION	5.111306548093896E-6	TEST
NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999977348282	WITHOUT_CLASSIFICATION	2.2651718826765104E-9	TEST
Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.999999959467506	WITHOUT_CLASSIFICATION	4.053249402946558E-8	TEST
Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999606194826592	WITHOUT_CLASSIFICATION	3.9380517340775625E-5	TEST
_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999993760185627	WITHOUT_CLASSIFICATION	6.239814372959684E-7	TEST
List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.999998385900607	WITHOUT_CLASSIFICATION	1.614099393119392E-6	TEST
Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.999999877677386	WITHOUT_CLASSIFICATION	1.223226141520518E-7	TEST
Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999959619276046	WITHOUT_CLASSIFICATION	4.038072395448155E-6	TEST
get "self"	WITHOUT_CLASSIFICATION	0.9999993375990368	WITHOUT_CLASSIFICATION	6.624009632206798E-7	TEST
variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999827945182416	WITHOUT_CLASSIFICATION	1.7205481758509464E-5	TEST
inline script	WITHOUT_CLASSIFICATION	0.9999995709290522	WITHOUT_CLASSIFICATION	4.290709478527087E-7	TEST
inline script	WITHOUT_CLASSIFICATION	0.9999995709290522	WITHOUT_CLASSIFICATION	4.290709478527087E-7	TEST
This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999999634143528	WITHOUT_CLASSIFICATION	3.6585647238422607E-8	TEST
Build the class body!	WITHOUT_CLASSIFICATION	0.9999996916439943	WITHOUT_CLASSIFICATION	3.0835600568654737E-7	TEST
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999987777039083	WITHOUT_CLASSIFICATION	1.2222960916953025E-6	TEST
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999987777039083	WITHOUT_CLASSIFICATION	1.2222960916953025E-6	TEST
SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999723308818506	WITHOUT_CLASSIFICATION	2.7669118149491427E-5	TEST
Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.999999548678841	WITHOUT_CLASSIFICATION	4.5132115894929917E-7	TEST
done done done done	WITHOUT_CLASSIFICATION	0.9999715778464847	WITHOUT_CLASSIFICATION	2.8422153515239048E-5	TEST
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999998349496264	WITHOUT_CLASSIFICATION	1.6505037365163128E-7	TEST
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999998349496264	WITHOUT_CLASSIFICATION	1.6505037365163128E-7	TEST
This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999998608907466	WITHOUT_CLASSIFICATION	1.3910925339721612E-7	TEST
build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999155070364	WITHOUT_CLASSIFICATION	8.449296355301251E-8	TEST
build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999832261012	WITHOUT_CLASSIFICATION	1.6773898880536716E-8	TEST
Value of the last expression in the block	WITHOUT_CLASSIFICATION	0.9999999558099462	WITHOUT_CLASSIFICATION	4.4190053868128284E-8	TEST
If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999999651277192	WITHOUT_CLASSIFICATION	3.4872280880760224E-8	TEST
get the incoming case value	WITHOUT_CLASSIFICATION	0.9999995204918802	WITHOUT_CLASSIFICATION	4.795081197281952E-7	TEST
the CASE instruction	WITHOUT_CLASSIFICATION	0.999999954310531	WITHOUT_CLASSIFICATION	4.5689469003301185E-8	TEST
lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999587070622038	WITHOUT_CLASSIFICATION	4.12929377962434E-5	TEST
build each "when"	WITHOUT_CLASSIFICATION	0.9999990253730221	WITHOUT_CLASSIFICATION	9.746269779634145E-7	TEST
multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999995118619573	WITHOUT_CLASSIFICATION	4.881380426902636E-7	TEST
build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999953567361415	WITHOUT_CLASSIFICATION	4.643263858505385E-6	TEST
now emit bodies	WITHOUT_CLASSIFICATION	0.999999051876569	WITHOUT_CLASSIFICATION	9.481234310600988E-7	TEST
close it out	WITHOUT_CLASSIFICATION	0.9999995341770402	WITHOUT_CLASSIFICATION	4.658229597629804E-7	TEST
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999991288196783	WITHOUT_CLASSIFICATION	8.711803217009354E-7	TEST
Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999989237066633	WITHOUT_CLASSIFICATION	1.0762933365790766E-6	TEST
Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999999608847865	WITHOUT_CLASSIFICATION	3.911521348019667E-8	TEST
1. Load the module first (lhs of node) 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999643883981	WITHOUT_CLASSIFICATION	3.561160195564324E-8	TEST
Build IR for args	WITHOUT_CLASSIFICATION	0.9999984942099858	WITHOUT_CLASSIFICATION	1.5057900142484359E-6	TEST
Build IR for body	WITHOUT_CLASSIFICATION	0.9999959130281004	WITHOUT_CLASSIFICATION	4.086971899498368E-6	TEST
if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999988465875629	WITHOUT_CLASSIFICATION	1.1534124370954443E-6	TEST
Instance method	WITHOUT_CLASSIFICATION	0.9999997970355353	WITHOUT_CLASSIFICATION	2.029644647075142E-7	TEST
Class method	WITHOUT_CLASSIFICATION	0.9999987145525812	WITHOUT_CLASSIFICATION	1.2854474188308604E-6	TEST
Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999989955611353	WITHOUT_CLASSIFICATION	1.0044388647586893E-6	TEST
Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.999999112619838	WITHOUT_CLASSIFICATION	8.873801619921425E-7	TEST
Now for the rest	WITHOUT_CLASSIFICATION	0.99998718436121	WITHOUT_CLASSIFICATION	1.2815638789935502E-5	TEST
Jump to 'l' if this arg is not null. If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999983496689999	WITHOUT_CLASSIFICATION	1.6503309999946236E-6	TEST
This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999548369968303	WITHOUT_CLASSIFICATION	4.516300316961334E-5	TEST
Create a new closure context	WITHOUT_CLASSIFICATION	0.9999994751273388	WITHOUT_CLASSIFICATION	5.248726612796051E-7	TEST
Build args	WITHOUT_CLASSIFICATION	0.9999984985984208	WITHOUT_CLASSIFICATION	1.501401579146757E-6	TEST
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999671960635	WITHOUT_CLASSIFICATION	3.280393640120092E-8	TEST
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999997628649	WITHOUT_CLASSIFICATION	2.371351304532741E-10	TEST
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999991288196783	WITHOUT_CLASSIFICATION	8.711803217009354E-7	TEST
Create a new closure context	WITHOUT_CLASSIFICATION	0.9999994751273388	WITHOUT_CLASSIFICATION	5.248726612796051E-7	TEST
Build args	WITHOUT_CLASSIFICATION	0.9999984985984208	WITHOUT_CLASSIFICATION	1.501401579146757E-6	TEST
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999997628649	WITHOUT_CLASSIFICATION	2.371351304532741E-10	TEST
Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999971040554406	WITHOUT_CLASSIFICATION	2.895944559310216E-6	TEST
Build the new module	WITHOUT_CLASSIFICATION	0.9999975309928999	WITHOUT_CLASSIFICATION	2.4690071000383404E-6	TEST
Build the module body	WITHOUT_CLASSIFICATION	0.9999966300729408	WITHOUT_CLASSIFICATION	3.3699270591197532E-6	TEST
First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999974143141774	WITHOUT_CLASSIFICATION	2.5856858226485855E-6	TEST
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999875540441036	WITHOUT_CLASSIFICATION	1.2445955896431535E-5	TEST
If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999958185247	WITHOUT_CLASSIFICATION	4.181475224082163E-9	TEST
get attr	WITHOUT_CLASSIFICATION	0.9999992786797469	WITHOUT_CLASSIFICATION	7.213202530197326E-7	TEST
call operator	WITHOUT_CLASSIFICATION	0.999999121329575	WITHOUT_CLASSIFICATION	8.786704250329664E-7	TEST
set attr	WITHOUT_CLASSIFICATION	0.999999758869548	WITHOUT_CLASSIFICATION	2.41130452028338E-7	TEST
Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9999997954697287	WITHOUT_CLASSIFICATION	2.045302713386637E-7	TEST
This does the assignment!	WITHOUT_CLASSIFICATION	0.9999868376254952	WITHOUT_CLASSIFICATION	1.3162374504805582E-5	TEST
This does the assignment!	WITHOUT_CLASSIFICATION	0.9999868376254952	WITHOUT_CLASSIFICATION	1.3162374504805582E-5	TEST
if v1 is defined and true, we are done!	WITHOUT_CLASSIFICATION	0.9999975792502765	WITHOUT_CLASSIFICATION	2.4207497234376547E-6	TEST
build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999733358965	WITHOUT_CLASSIFICATION	2.666410343265652E-8	TEST
build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999922241865	WITHOUT_CLASSIFICATION	7.775813605056237E-9	TEST
Top-level script!	WITHOUT_CLASSIFICATION	0.9999994682366269	WITHOUT_CLASSIFICATION	5.317633730077191E-7	TEST
we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999662387701	WITHOUT_CLASSIFICATION	3.376122988818758E-8	TEST
----------- Private Interface ------------	WITHOUT_CLASSIFICATION	0.9999991220461346	WITHOUT_CLASSIFICATION	8.779538654372325E-7	TEST
What handles warnings	WITHOUT_CLASSIFICATION	0.9999994363162538	WITHOUT_CLASSIFICATION	5.636837462940941E-7	TEST
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999944764716	WITHOUT_CLASSIFICATION	5.5235283293055125E-9	TEST
For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999999473674417	WITHOUT_CLASSIFICATION	5.263255837564117E-8	TEST
The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999998877209	WITHOUT_CLASSIFICATION	1.12279062874195E-10	TEST
Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999997474834419	WITHOUT_CLASSIFICATION	2.52516558159619E-7	TEST
Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999998577124	WITHOUT_CLASSIFICATION	1.422876518932015E-10	TEST
------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.999998933874875	WITHOUT_CLASSIFICATION	1.0661251249054487E-6	TEST
value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999991667297697	WITHOUT_CLASSIFICATION	8.332702302391057E-7	TEST
alu operations	WITHOUT_CLASSIFICATION	0.9999995339101803	WITHOUT_CLASSIFICATION	4.6608981968144176E-7	TEST
method handle, arg receive, return value, and call instructions	WITHOUT_CLASSIFICATION	0.9999999781810673	WITHOUT_CLASSIFICATION	2.1818932646381476E-8	TEST
closure instructions	WITHOUT_CLASSIFICATION	0.9999999442820394	WITHOUT_CLASSIFICATION	5.5717960513118594E-8	TEST
eval instructions	WITHOUT_CLASSIFICATION	0.9999998756893358	WITHOUT_CLASSIFICATION	1.2431066422019535E-7	TEST
def instructions	WITHOUT_CLASSIFICATION	0.9999998796356301	WITHOUT_CLASSIFICATION	1.2036436993152697E-7	TEST
exception instructions	WITHOUT_CLASSIFICATION	0.9999993469307457	WITHOUT_CLASSIFICATION	6.530692543881307E-7	TEST
Loads	WITHOUT_CLASSIFICATION	0.9999831631752744	WITHOUT_CLASSIFICATION	1.683682472557974E-5	TEST
Stores	WITHOUT_CLASSIFICATION	0.9999946373097387	WITHOUT_CLASSIFICATION	5.362690261276746E-6	TEST
jump and branch operations	WITHOUT_CLASSIFICATION	0.9999998084025018	WITHOUT_CLASSIFICATION	1.9159749819799848E-7	TEST
others	WITHOUT_CLASSIFICATION	0.9999969698483244	WITHOUT_CLASSIFICATION	3.0301516755553855E-6	TEST
a case/when branch	WITHOUT_CLASSIFICATION	0.9999993645111181	WITHOUT_CLASSIFICATION	6.354888818994608E-7	TEST
optimization guards	WITHOUT_CLASSIFICATION	0.9999977592935378	WITHOUT_CLASSIFICATION	2.2407064621779056E-6	TEST
By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999951474999784	WITHOUT_CLASSIFICATION	4.852500021485426E-6	TEST
Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999908584978	WITHOUT_CLASSIFICATION	9.141502238199537E-9	TEST
scripts	WITHOUT_CLASSIFICATION	0.9999937740024092	WITHOUT_CLASSIFICATION	6.225997590754245E-6	TEST
scripts and modules	WITHOUT_CLASSIFICATION	0.9999997550521269	WITHOUT_CLASSIFICATION	2.449478729998162E-7	TEST
scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999998592316355	WITHOUT_CLASSIFICATION	1.407683644131092E-7	TEST
methods and closures	WITHOUT_CLASSIFICATION	0.9999999279382756	WITHOUT_CLASSIFICATION	7.206172431981944E-8	TEST
create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999940281242796	WITHOUT_CLASSIFICATION	5.971875720276815E-6	TEST
create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999941973798586	WITHOUT_CLASSIFICATION	5.802620141401444E-6	TEST
Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999991238698979	WITHOUT_CLASSIFICATION	8.761301022021747E-7	TEST
Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999969794068052	WITHOUT_CLASSIFICATION	3.0205931946998013E-6	TEST
Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.99999781455604	WITHOUT_CLASSIFICATION	2.1854439599930104E-6	TEST
While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999987765702077	WITHOUT_CLASSIFICATION	1.2234297922010298E-6	TEST
Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999997673125511	WITHOUT_CLASSIFICATION	2.326874489569272E-7	TEST
Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999848334583842	WITHOUT_CLASSIFICATION	1.5166541615770113E-5	TEST
Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999989986569076	WITHOUT_CLASSIFICATION	1.001343092434072E-6	TEST
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999279970783738	WITHOUT_CLASSIFICATION	7.200292162622363E-5	TEST
Readline	WITHOUT_CLASSIFICATION	0.99999156945305	WITHOUT_CLASSIFICATION	8.43054694990384E-6	TEST
If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999994655494334	WITHOUT_CLASSIFICATION	5.344505665987787E-7	TEST
Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.999999382320503	WITHOUT_CLASSIFICATION	6.176794970274314E-7	TEST
If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999999964183162	WITHOUT_CLASSIFICATION	3.581683776427486E-9	TEST
Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999999831911296	WITHOUT_CLASSIFICATION	1.6808870362554854E-8	TEST
If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.999999994079862	WITHOUT_CLASSIFICATION	5.9201379504545866E-9	TEST
If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999998573342322	WITHOUT_CLASSIFICATION	1.426657677813116E-7	TEST
----------- Public abstract methods ----------	WITHOUT_CLASSIFICATION	0.9999990123945465	WITHOUT_CLASSIFICATION	9.87605453551123E-7	TEST
----------- Public methods with a default implementation ----------	WITHOUT_CLASSIFICATION	0.9999999334842374	WITHOUT_CLASSIFICATION	6.651576256797091E-8	TEST
Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999995230825163	WITHOUT_CLASSIFICATION	4.769174836097902E-7	TEST
If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999760223278833	WITHOUT_CLASSIFICATION	2.3977672116680956E-5	TEST
--------- Protected fields/methods below ---------	WITHOUT_CLASSIFICATION	0.9999986328363246	WITHOUT_CLASSIFICATION	1.3671636753796008E-6	TEST
Dataflow problem with which this node is associated CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9998564041079598	WITHOUT_CLASSIFICATION	1.435958920400623E-4	TEST
-------------- Public fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9999999180403791	WITHOUT_CLASSIFICATION	8.195962090861064E-8	TEST
------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999496581405	WITHOUT_CLASSIFICATION	5.034185941406616E-8	TEST
------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999997343891507	WITHOUT_CLASSIFICATION	2.656108492821673E-7	TEST
Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.	WITHOUT_CLASSIFICATION	0.9999999501443892	WITHOUT_CLASSIFICATION	4.9855610704253475E-8	TEST
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9999789419631733	WITHOUT_CLASSIFICATION	2.105803682667505E-5	TEST
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.9999789419631733	WITHOUT_CLASSIFICATION	2.105803682667505E-5	TEST
-------------- Packaged/protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9999999525775289	WITHOUT_CLASSIFICATION	4.7422471087427E-8	TEST
We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.999994064796184	WITHOUT_CLASSIFICATION	5.935203815977314E-6	TEST
-------------- Protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9999997552843353	WITHOUT_CLASSIFICATION	2.447156647688776E-7	TEST
-------------- Private fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9999998126340733	WITHOUT_CLASSIFICATION	1.8736592664084965E-7	TEST
Initialize all flow graph nodes	WITHOUT_CLASSIFICATION	0.9999998280528194	WITHOUT_CLASSIFICATION	1.7194718067813184E-7	TEST
Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses	WITHOUT_CLASSIFICATION	0.9999999490692895	WITHOUT_CLASSIFICATION	5.093071056789507E-8	TEST
PUBLIC INTERFACE	WITHOUT_CLASSIFICATION	0.9999899437049407	WITHOUT_CLASSIFICATION	1.0056295059299337E-5	TEST
Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999922954763883	WITHOUT_CLASSIFICATION	7.704523611591308E-6	TEST
start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999990505338817	WITHOUT_CLASSIFICATION	9.494661182885321E-7	TEST
switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999999855042	WITHOUT_CLASSIFICATION	1.449580003468516E-8	TEST
----------- Public Interface ------------	WITHOUT_CLASSIFICATION	0.999999835420716	WITHOUT_CLASSIFICATION	1.645792839298187E-7	TEST
class or module	WITHOUT_CLASSIFICATION	0.9999983020387211	WITHOUT_CLASSIFICATION	1.697961278823344E-6	TEST
OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999908723411962	WITHOUT_CLASSIFICATION	9.127658803797047E-6	TEST
Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999999724556536	WITHOUT_CLASSIFICATION	2.7544346329820147E-8	TEST
v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999983373668999	WITHOUT_CLASSIFICATION	1.6626331001803975E-6	TEST
IN is the same!	WITHOUT_CLASSIFICATION	0.9999930054263774	WITHOUT_CLASSIFICATION	6.994573622614014E-6	TEST
IN changed!	WITHOUT_CLASSIFICATION	0.9999934693672683	WITHOUT_CLASSIFICATION	6.530632731594179E-6	TEST
---------- Protected / package fields, methods ---------	WITHOUT_CLASSIFICATION	0.9999998997903531	WITHOUT_CLASSIFICATION	1.0020964693872673E-7	TEST
If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999997673118799	WITHOUT_CLASSIFICATION	2.326881201488672E-7	TEST
Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999991000835007	WITHOUT_CLASSIFICATION	8.99916499350736E-7	TEST
---------- Private fields, methods ---------	WITHOUT_CLASSIFICATION	0.9999996428124187	WITHOUT_CLASSIFICATION	3.5718758125908085E-7	TEST
Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets	WITHOUT_CLASSIFICATION	0.9999998533274163	WITHOUT_CLASSIFICATION	1.4667258366439613E-7	TEST
Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999893583508048	WITHOUT_CLASSIFICATION	1.0641649195073753E-5	TEST
Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes	WITHOUT_CLASSIFICATION	0.9999988937532552	WITHOUT_CLASSIFICATION	1.1062467448012278E-6	TEST
--------- "Abstract"/"please-override" methods ---------	WITHOUT_CLASSIFICATION	0.9999997021671869	WITHOUT_CLASSIFICATION	2.978328131154997E-7	TEST
Array of all operands for this instruction	WITHOUT_CLASSIFICATION	0.99999692578141	WITHOUT_CLASSIFICATION	3.0742185899809863E-6	TEST
List of all variables used by all operands of this instruction	WITHOUT_CLASSIFICATION	0.9999986138628159	WITHOUT_CLASSIFICATION	1.3861371841539541E-6	TEST
This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify	WITHOUT_CLASSIFICATION	0.9999998881251215	WITHOUT_CLASSIFICATION	1.1187487850413515E-7	TEST
By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999997999892515	WITHOUT_CLASSIFICATION	2.0001074843931508E-7	TEST
Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.999999941784269	WITHOUT_CLASSIFICATION	5.8215731011026086E-8	TEST
By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999999857081316	WITHOUT_CLASSIFICATION	1.4291868403302922E-8	TEST
If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999970407696996	WITHOUT_CLASSIFICATION	2.9592303003937803E-6	TEST
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999998250259028	WITHOUT_CLASSIFICATION	1.7497409725455304E-7	TEST
Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999895264065819	WITHOUT_CLASSIFICATION	1.0473593418203156E-5	TEST
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999998250259028	WITHOUT_CLASSIFICATION	1.7497409725455304E-7	TEST
You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999998264890311	WITHOUT_CLASSIFICATION	1.7351096882951981E-7	TEST
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999955381430473	WITHOUT_CLASSIFICATION	4.4618569526340085E-6	TEST
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999955381430473	WITHOUT_CLASSIFICATION	4.4618569526340085E-6	TEST
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999955381430473	WITHOUT_CLASSIFICATION	4.4618569526340085E-6	TEST
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999997993329636	WITHOUT_CLASSIFICATION	2.0066703647474757E-7	TEST
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999997993329636	WITHOUT_CLASSIFICATION	2.0066703647474757E-7	TEST
The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value	WITHOUT_CLASSIFICATION	0.9999983037750189	WITHOUT_CLASSIFICATION	1.6962249811467674E-6	TEST
Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999995606464955	WITHOUT_CLASSIFICATION	4.3935350444952746E-7	TEST
Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999996512611969	WITHOUT_CLASSIFICATION	3.487388031178602E-7	TEST
The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999999978110599	WITHOUT_CLASSIFICATION	2.188940248514779E-9	TEST
Nothing to do by default	WITHOUT_CLASSIFICATION	0.9999975467201819	WITHOUT_CLASSIFICATION	2.4532798181228093E-6	TEST
Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999966343135814	WITHOUT_CLASSIFICATION	3.365686418604662E-6	TEST
Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999998706924597	WITHOUT_CLASSIFICATION	1.293075404423557E-7	TEST
ignore	WITHOUT_CLASSIFICATION	0.9999969890492948	WITHOUT_CLASSIFICATION	3.010950705135365E-6	TEST
Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id	WITHOUT_CLASSIFICATION	0.9999996979629707	WITHOUT_CLASSIFICATION	3.0203702935021593E-7	TEST
Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.999999950436785	WITHOUT_CLASSIFICATION	4.9563214966423214E-8	TEST
Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999815941916268	WITHOUT_CLASSIFICATION	1.840580837309368E-5	TEST
currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999997292290428	WITHOUT_CLASSIFICATION	2.707709572051585E-7	TEST
Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999999261571187	WITHOUT_CLASSIFICATION	7.384288120326717E-8	TEST
root-level logic	WITHOUT_CLASSIFICATION	0.9999984400240783	WITHOUT_CLASSIFICATION	1.5599759216403208E-6	TEST
root-level methods	WITHOUT_CLASSIFICATION	0.9999985773692397	WITHOUT_CLASSIFICATION	1.422630760304571E-6	TEST
root-level classes	WITHOUT_CLASSIFICATION	0.9999993094198756	WITHOUT_CLASSIFICATION	6.905801244910453E-7	TEST
case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;	WITHOUT_CLASSIFICATION	0.9999998327739161	WITHOUT_CLASSIFICATION	1.6722608386493007E-7	TEST
load receiver	WITHOUT_CLASSIFICATION	0.9999980152104112	WITHOUT_CLASSIFICATION	1.9847895888280636E-6	TEST
load receiver	WITHOUT_CLASSIFICATION	0.9999980152104112	WITHOUT_CLASSIFICATION	1.9847895888280636E-6	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
load arguments	WITHOUT_CLASSIFICATION	0.9999993493903316	WITHOUT_CLASSIFICATION	6.506096684477286E-7	TEST
load arguments	WITHOUT_CLASSIFICATION	0.9999993493903316	WITHOUT_CLASSIFICATION	6.506096684477286E-7	TEST
case 4: case 5:	WITHOUT_CLASSIFICATION	0.9999825847009798	WITHOUT_CLASSIFICATION	1.7415299020237653E-5	TEST
Object[] args	WITHOUT_CLASSIFICATION	0.9999987059704242	WITHOUT_CLASSIFICATION	1.2940295757826644E-6	TEST
load handle	WITHOUT_CLASSIFICATION	0.9999950447655399	WITHOUT_CLASSIFICATION	4.955234460167421E-6	TEST
args array	WITHOUT_CLASSIFICATION	0.9999909807092796	WITHOUT_CLASSIFICATION	9.019290720367016E-6	TEST
i'th argument	WITHOUT_CLASSIFICATION	0.9999970786399508	WITHOUT_CLASSIFICATION	2.921360049170901E-6	TEST
invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999999160387101	WITHOUT_CLASSIFICATION	8.396128993812366E-8	TEST
Object arg0	WITHOUT_CLASSIFICATION	0.9999967314377141	WITHOUT_CLASSIFICATION	3.2685622858960146E-6	TEST
useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999999322190772	WITHOUT_CLASSIFICATION	6.778092274242158E-8	TEST
No editing before startPos	WITHOUT_CLASSIFICATION	0.9999997162519185	WITHOUT_CLASSIFICATION	2.837480814938738E-7	TEST
no silly ticks!	WITHOUT_CLASSIFICATION	0.9999979417611677	WITHOUT_CLASSIFICATION	2.0582388322870945E-6	TEST
no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999984338641368	WITHOUT_CLASSIFICATION	1.5661358632281575E-6	TEST
at end	WITHOUT_CLASSIFICATION	0.9999991312473236	WITHOUT_CLASSIFICATION	8.687526764481993E-7	TEST
undo check	WITHOUT_CLASSIFICATION	0.9999996280884919	WITHOUT_CLASSIFICATION	3.7191150821248877E-7	TEST
Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999998530297587	WITHOUT_CLASSIFICATION	1.4697024139296513E-7	TEST
ignore	WITHOUT_CLASSIFICATION	0.9999969890492948	WITHOUT_CLASSIFICATION	3.010950705135365E-6	TEST
\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999053765141405	WITHOUT_CLASSIFICATION	9.462348585952928E-5	TEST
Assign the values.	WITHOUT_CLASSIFICATION	0.9999996096369534	WITHOUT_CLASSIFICATION	3.9036304666375656E-7	TEST
no check for ''	WITHOUT_CLASSIFICATION	0.9999991161221518	WITHOUT_CLASSIFICATION	8.838778483716333E-7	TEST
no check for ''	WITHOUT_CLASSIFICATION	0.9999991161221518	WITHOUT_CLASSIFICATION	8.838778483716333E-7	TEST
Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999994300426139	WITHOUT_CLASSIFICATION	5.699573861808373E-7	TEST
this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999996096510008	WITHOUT_CLASSIFICATION	3.9034899921438496E-7	TEST
no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999999839497373	WITHOUT_CLASSIFICATION	1.6050262658698198E-8	TEST
restore position	WITHOUT_CLASSIFICATION	0.9999963218352671	WITHOUT_CLASSIFICATION	3.6781647328077803E-6	TEST
Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations	WITHOUT_CLASSIFICATION	0.999999967819381	WITHOUT_CLASSIFICATION	3.2180618911035564E-8	TEST
Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.999999800029523	WITHOUT_CLASSIFICATION	1.9997047704778917E-7	TEST
JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999998900553245	WITHOUT_CLASSIFICATION	1.0994467557394969E-7	TEST
MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.999447737407219	WITHOUT_CLASSIFICATION	5.522625927808399E-4	TEST
We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999998098191979	WITHOUT_CLASSIFICATION	1.9018080210880014E-7	TEST
JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999999041936162	WITHOUT_CLASSIFICATION	9.580638378176901E-8	TEST
not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999984116175284	WITHOUT_CLASSIFICATION	1.5883824716058966E-6	TEST
Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()	WITHOUT_CLASSIFICATION	0.9999996945109667	WITHOUT_CLASSIFICATION	3.054890331880128E-7	TEST
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9996120403386545	WITHOUT_CLASSIFICATION	3.879596613455578E-4	TEST
Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999994268453074	WITHOUT_CLASSIFICATION	5.731546926972868E-7	TEST
clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999974191594473	WITHOUT_CLASSIFICATION	2.5808405527232082E-6	TEST
These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999996324022994	WITHOUT_CLASSIFICATION	3.675977005964261E-7	TEST
Timeout module methods	WITHOUT_CLASSIFICATION	0.9999984506878836	WITHOUT_CLASSIFICATION	1.5493121163803687E-6	TEST
Toplevel defines	WITHOUT_CLASSIFICATION	0.9999981476316994	WITHOUT_CLASSIFICATION	1.852368300573054E-6	TEST
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999997546637482	WITHOUT_CLASSIFICATION	2.453362517259883E-7	TEST
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999996548435166	WITHOUT_CLASSIFICATION	3.451564834037709E-7	TEST
if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.999999417411381	WITHOUT_CLASSIFICATION	5.825886189639146E-7	TEST
and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999999568482051	WITHOUT_CLASSIFICATION	4.315179497494175E-8	TEST
otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999988745185769	WITHOUT_CLASSIFICATION	1.1254814230722942E-6	TEST
Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them	WITHOUT_CLASSIFICATION	0.9999999966190668	WITHOUT_CLASSIFICATION	3.380933160704088E-9	TEST
If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.	WITHOUT_CLASSIFICATION	0.999999741134802	WITHOUT_CLASSIFICATION	2.588651980453589E-7	TEST
NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999911471830425	WITHOUT_CLASSIFICATION	8.852816957511873E-6	TEST
When a length is given, read_string acts like get_bytes	WITHOUT_CLASSIFICATION	0.9999542701523767	WITHOUT_CLASSIFICATION	4.572984762322441E-5	TEST
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999197774340496	WITHOUT_CLASSIFICATION	8.022256595042845E-5	TEST
ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999558893835	WITHOUT_CLASSIFICATION	4.411061645561332E-8	TEST
If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999977270279642	WITHOUT_CLASSIFICATION	2.272972035897804E-6	TEST
This variant of newStruct is called from StructLayoutBuilder	WITHOUT_CLASSIFICATION	0.9999998691332452	WITHOUT_CLASSIFICATION	1.3086675481229092E-7	TEST
This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999999062554437	WITHOUT_CLASSIFICATION	9.374455640323792E-8	TEST
Windows is LLP64	WITHOUT_CLASSIFICATION	0.999990530070172	WITHOUT_CLASSIFICATION	9.469929827907162E-6	TEST
Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999901178584036	WITHOUT_CLASSIFICATION	9.882141596316886E-6	TEST
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999974555285267	WITHOUT_CLASSIFICATION	2.544471473368793E-6	TEST
$blah	WITHOUT_CLASSIFICATION	0.9999529862255491	WITHOUT_CLASSIFICATION	4.7013774450926984E-5	TEST
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999197774340496	WITHOUT_CLASSIFICATION	8.022256595042845E-5	TEST
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9999973435155152	WITHOUT_CLASSIFICATION	2.656484484935751E-6	TEST
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999974555285267	WITHOUT_CLASSIFICATION	2.544471473368793E-6	TEST
Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed	WITHOUT_CLASSIFICATION	0.9999989446882223	WITHOUT_CLASSIFICATION	1.0553117776620724E-6	TEST
Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999998972328631	WITHOUT_CLASSIFICATION	1.0276713692257334E-7	TEST
Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999986417778924	WITHOUT_CLASSIFICATION	1.3582221075320354E-6	TEST
Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999993553025119	WITHOUT_CLASSIFICATION	6.446974881038051E-7	TEST
case FLOAT:	WITHOUT_CLASSIFICATION	0.9999971789931148	WITHOUT_CLASSIFICATION	2.8210068852334597E-6	TEST
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999998993459268	WITHOUT_CLASSIFICATION	1.0065407314416339E-7	TEST
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999998993459268	WITHOUT_CLASSIFICATION	1.0065407314416339E-7	TEST
No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999901472967632	WITHOUT_CLASSIFICATION	9.852703236821431E-6	TEST
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999978560699	WITHOUT_CLASSIFICATION	2.1439300323160126E-9	TEST
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999996300468338	WITHOUT_CLASSIFICATION	3.699531662630874E-7	TEST
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999996300468338	WITHOUT_CLASSIFICATION	3.699531662630874E-7	TEST
If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.	WITHOUT_CLASSIFICATION	0.9999999965666329	WITHOUT_CLASSIFICATION	3.4333670660541236E-9	TEST
------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9989429656396401	WITHOUT_CLASSIFICATION	0.0010570343603598402	TEST
AF_INET	WITHOUT_CLASSIFICATION	0.999939863328373	WITHOUT_CLASSIFICATION	6.013667162684255E-5	TEST
AF_INET	WITHOUT_CLASSIFICATION	0.999939863328373	WITHOUT_CLASSIFICATION	6.013667162684255E-5	TEST
RubyUNIXServer	WITHOUT_CLASSIFICATION	0.999964959093585	WITHOUT_CLASSIFICATION	3.5040906414945254E-5	TEST
line 321	WITHOUT_CLASSIFICATION	0.9999952823952536	WITHOUT_CLASSIFICATION	4.717604746342652E-6	TEST
Set up for potentially fast-int operations	WITHOUT_CLASSIFICATION	0.999999305918136	WITHOUT_CLASSIFICATION	6.940818640183879E-7	TEST
Hook up the MemoryPointer class if its not already there	WITHOUT_CLASSIFICATION	0.999999924764733	WITHOUT_CLASSIFICATION	7.523526699281356E-8	TEST
This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999999919168839	WITHOUT_CLASSIFICATION	8.083116115498765E-9	TEST
no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999996633592974	WITHOUT_CLASSIFICATION	3.366407026431971E-7	TEST
Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999998369278584	WITHOUT_CLASSIFICATION	1.6307214161510807E-7	TEST
There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.999998875882054	WITHOUT_CLASSIFICATION	1.1241179459108873E-6	TEST
RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999926463593113	WITHOUT_CLASSIFICATION	7.353640688760035E-6	TEST
host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999996973837515	WITHOUT_CLASSIFICATION	3.026162484749893E-7	TEST
host and port given	WITHOUT_CLASSIFICATION	0.9999992984422362	WITHOUT_CLASSIFICATION	7.015577638241368E-7	TEST
RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999902459155318	WITHOUT_CLASSIFICATION	9.754084468176367E-6	TEST
By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999998058682373	WITHOUT_CLASSIFICATION	1.9413176274480922E-7	TEST
make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999955904808191	WITHOUT_CLASSIFICATION	4.409519180874443E-6	TEST
continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999986904381264	WITHOUT_CLASSIFICATION	1.3095618735954057E-6	TEST
recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999998372197818	WITHOUT_CLASSIFICATION	1.6278021825567237E-7	TEST
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998846002035691	WITHOUT_CLASSIFICATION	1.1539979643096187E-4	TEST
RubyBasicSocket	WITHOUT_CLASSIFICATION	0.999998117816915	WITHOUT_CLASSIFICATION	1.8821830848660258E-6	TEST
we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999997220316055	WITHOUT_CLASSIFICATION	2.779683946116977E-7	TEST
mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999998007706851	WITHOUT_CLASSIFICATION	1.9922931491402882E-7	TEST
constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999947554180981	WITHOUT_CLASSIFICATION	5.244581901805822E-6	TEST
More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999902776558905	WITHOUT_CLASSIFICATION	9.72234410931467E-6	TEST
normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999996810869113	WITHOUT_CLASSIFICATION	3.189130886965881E-7	TEST
AF_INET	WITHOUT_CLASSIFICATION	0.999939863328373	WITHOUT_CLASSIFICATION	6.013667162684255E-5	TEST
255.255.255.255	WITHOUT_CLASSIFICATION	0.9988787702495783	WITHOUT_CLASSIFICATION	0.0011212297504216739	TEST
0.0.0.0	WITHOUT_CLASSIFICATION	0.9997242738378394	WITHOUT_CLASSIFICATION	2.757261621606464E-4	TEST
def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999995019165329	WITHOUT_CLASSIFICATION	4.980834671868469E-7	TEST
line 323	WITHOUT_CLASSIFICATION	0.999994048497895	WITHOUT_CLASSIFICATION	5.951502104912595E-6	TEST
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999041022556	WITHOUT_CLASSIFICATION	9.589774438175334E-8	TEST
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999041022556	WITHOUT_CLASSIFICATION	9.589774438175334E-8	TEST
ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999705718631	WITHOUT_CLASSIFICATION	2.9428136903599466E-8	TEST
datagram, set accordingly again, AF_INET	WITHOUT_CLASSIFICATION	0.9999998509559331	WITHOUT_CLASSIFICATION	1.4904406684896585E-7	TEST
IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999996179311548	WITHOUT_CLASSIFICATION	3.82068845248803E-7	TEST
When Socket::AI_PASSIVE and host is nil, return 'any' address.	WITHOUT_CLASSIFICATION	0.9999987638760405	WITHOUT_CLASSIFICATION	1.2361239595015073E-6	TEST
The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999981393109408	WITHOUT_CLASSIFICATION	1.86068905917966E-6	TEST
RubySocket	WITHOUT_CLASSIFICATION	0.9999971008329473	WITHOUT_CLASSIFICATION	2.8991670526408876E-6	TEST
numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999993930079563	WITHOUT_CLASSIFICATION	6.069920438135565E-7	TEST
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999989232352844	WITHOUT_CLASSIFICATION	1.0767647156330972E-6	TEST
we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999997970811672	WITHOUT_CLASSIFICATION	2.0291883280981953E-7	TEST
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999998573724781	WITHOUT_CLASSIFICATION	1.4262752190927254E-7	TEST
no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999991678736072	WITHOUT_CLASSIFICATION	8.321263927096268E-7	TEST
do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999989793387368	WITHOUT_CLASSIFICATION	1.0206612631675224E-6	TEST
nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999994021142788	WITHOUT_CLASSIFICATION	5.978857211620367E-7	TEST
set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999998249968816	WITHOUT_CLASSIFICATION	1.7500311840534058E-7	TEST
uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999999868780124	WITHOUT_CLASSIFICATION	1.3121987537500188E-8	TEST
Call the thread's code	WITHOUT_CLASSIFICATION	0.9999994595171686	WITHOUT_CLASSIFICATION	5.404828313816653E-7	TEST
Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999999264958511	WITHOUT_CLASSIFICATION	7.350414882006861E-8	TEST
restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999996097502185	WITHOUT_CLASSIFICATION	3.9024978157989076E-7	TEST
be dead	WITHOUT_CLASSIFICATION	0.9999968854470537	WITHOUT_CLASSIFICATION	3.114552946286203E-6	TEST
loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999997124164804	WITHOUT_CLASSIFICATION	2.8758351950612547E-7	TEST
all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999998742946371	WITHOUT_CLASSIFICATION	1.257053628736565E-7	TEST
thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999978819854569	WITHOUT_CLASSIFICATION	2.118014543073405E-6	TEST
future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999994802355583	WITHOUT_CLASSIFICATION	5.197644416629991E-7	TEST
first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999997534845746	WITHOUT_CLASSIFICATION	2.465154253286523E-7	TEST
then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999997764683927	WITHOUT_CLASSIFICATION	2.2353160737101414E-7	TEST
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999998816192146	WITHOUT_CLASSIFICATION	1.1838078540348362E-6	TEST
Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999906618163963	WITHOUT_CLASSIFICATION	9.338183603727175E-6	TEST
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999985196613651	WITHOUT_CLASSIFICATION	1.4803386349885768E-6	TEST
main body	WITHOUT_CLASSIFICATION	0.9999981323331573	WITHOUT_CLASSIFICATION	1.867666842824876E-6	TEST
return jump handling	WITHOUT_CLASSIFICATION	0.9999998685261162	WITHOUT_CLASSIFICATION	1.3147388390180247E-7	TEST
finally	WITHOUT_CLASSIFICATION	0.9999819241552166	WITHOUT_CLASSIFICATION	1.8075844783420987E-5	TEST
return result if we're still good	WITHOUT_CLASSIFICATION	0.9999993701744551	WITHOUT_CLASSIFICATION	6.298255449909101E-7	TEST
redo jump handling	WITHOUT_CLASSIFICATION	0.9999993226905488	WITHOUT_CLASSIFICATION	6.773094512918736E-7	TEST
clear the redo	WITHOUT_CLASSIFICATION	0.999998653896771	WITHOUT_CLASSIFICATION	1.3461032289775558E-6	TEST
get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999995741312641	WITHOUT_CLASSIFICATION	4.258687359653473E-7	TEST
throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999991547816732	WITHOUT_CLASSIFICATION	8.452183268160565E-7	TEST
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999997711244958	WITHOUT_CLASSIFICATION	2.2887550419506017E-6	TEST
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999996691052503	WITHOUT_CLASSIFICATION	3.308947497926518E-7	TEST
No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999775890795	WITHOUT_CLASSIFICATION	2.241092052990416E-8	TEST
actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999995775185564	WITHOUT_CLASSIFICATION	4.224814436540149E-7	TEST
actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999931898060153	WITHOUT_CLASSIFICATION	6.810193984661083E-6	TEST
simple path, no multimethod	WITHOUT_CLASSIFICATION	0.999999850319393	WITHOUT_CLASSIFICATION	1.4968060701639846E-7	TEST
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999465641309	WITHOUT_CLASSIFICATION	5.3435869129177286E-8	TEST
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999465641309	WITHOUT_CLASSIFICATION	5.3435869129177286E-8	TEST
normal all-rest method	WITHOUT_CLASSIFICATION	0.9999951082978032	WITHOUT_CLASSIFICATION	4.891702196735495E-6	TEST
for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999815188648	WITHOUT_CLASSIFICATION	1.848113516762796E-8	TEST
promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999997130492019	WITHOUT_CLASSIFICATION	2.869507980648168E-7	TEST
return	WITHOUT_CLASSIFICATION	0.9999975421989379	WITHOUT_CLASSIFICATION	2.457801062054417E-6	TEST
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999999257019365	WITHOUT_CLASSIFICATION	7.429806350109145E-7	TEST
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999992188733955	WITHOUT_CLASSIFICATION	7.811266045880916E-7	TEST
confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999988536127655	WITHOUT_CLASSIFICATION	1.146387234421923E-6	TEST
confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.999994596766883	WITHOUT_CLASSIFICATION	5.403233117050463E-6	TEST
Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999979141575938	WITHOUT_CLASSIFICATION	2.0858424062826527E-6	TEST
tc	WITHOUT_CLASSIFICATION	0.9999477271982283	WITHOUT_CLASSIFICATION	5.2272801771577966E-5	TEST
self name	WITHOUT_CLASSIFICATION	0.999997526274804	WITHOUT_CLASSIFICATION	2.4737251959933233E-6	TEST
no args	WITHOUT_CLASSIFICATION	0.9999988168062637	WITHOUT_CLASSIFICATION	1.183193736334997E-6	TEST
variable args with block	WITHOUT_CLASSIFICATION	0.9999963509758444	WITHOUT_CLASSIFICATION	3.6490241556248136E-6	TEST
variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999992063750422	WITHOUT_CLASSIFICATION	7.936249577991962E-7	TEST
zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999997666507054	WITHOUT_CLASSIFICATION	2.3334929469685857E-7	TEST
one arg with block	WITHOUT_CLASSIFICATION	0.9999987026192877	WITHOUT_CLASSIFICATION	1.2973807122888217E-6	TEST
one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999994581403658	WITHOUT_CLASSIFICATION	5.41859634123554E-7	TEST
two args with block	WITHOUT_CLASSIFICATION	0.999997488252337	WITHOUT_CLASSIFICATION	2.511747662973477E-6	TEST
two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999997654803746	WITHOUT_CLASSIFICATION	2.34519625370392E-7	TEST
three args with block	WITHOUT_CLASSIFICATION	0.999998336731378	WITHOUT_CLASSIFICATION	1.663268622000585E-6	TEST
three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999257467165	WITHOUT_CLASSIFICATION	7.425328352749104E-8	TEST
load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999983009757644	WITHOUT_CLASSIFICATION	1.6990242355737497E-6	TEST
all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999970676552491	WITHOUT_CLASSIFICATION	2.9323447509272662E-6	TEST
all other arg cases without block	WITHOUT_CLASSIFICATION	0.999998382885227	WITHOUT_CLASSIFICATION	1.617114773037652E-6	TEST
one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999996010398488	WITHOUT_CLASSIFICATION	3.989601512026022E-7	TEST
two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999995246825159	WITHOUT_CLASSIFICATION	4.753174841151195E-7	TEST
three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999998323983371	WITHOUT_CLASSIFICATION	1.676016629959228E-7	TEST
load target for invocations	WITHOUT_CLASSIFICATION	0.9999994374224438	WITHOUT_CLASSIFICATION	5.625775563045031E-7	TEST
load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999994137970831	WITHOUT_CLASSIFICATION	5.86202916847579E-7	TEST
static invocation	WITHOUT_CLASSIFICATION	0.9999938934356684	WITHOUT_CLASSIFICATION	6.106564331583112E-6	TEST
virtual invocation	WITHOUT_CLASSIFICATION	0.9999973644271722	WITHOUT_CLASSIFICATION	2.6355728276639887E-6	TEST
void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999965590170325	WITHOUT_CLASSIFICATION	3.4409829674234414E-6	TEST
normal finally and exit	WITHOUT_CLASSIFICATION	0.9999998163660698	WITHOUT_CLASSIFICATION	1.8363393017607472E-7	TEST
promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999996530418933	WITHOUT_CLASSIFICATION	3.469581066673625E-7	TEST
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999996691052503	WITHOUT_CLASSIFICATION	3.308947497926518E-7	TEST
these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999983439301257	WITHOUT_CLASSIFICATION	1.6560698743968598E-6	TEST
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9999995014193952	WITHOUT_CLASSIFICATION	4.985806047540743E-7	TEST
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9999995014193952	WITHOUT_CLASSIFICATION	4.985806047540743E-7	TEST
singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999928301367399	WITHOUT_CLASSIFICATION	7.169863260167552E-6	TEST
For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999339009884	WITHOUT_CLASSIFICATION	6.609901168831241E-8	TEST
SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999907466105521	WITHOUT_CLASSIFICATION	9.253389447885225E-6	TEST
never reached	WITHOUT_CLASSIFICATION	0.9999982731718242	WITHOUT_CLASSIFICATION	1.7268281757488897E-6	TEST
promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999991980102297	WITHOUT_CLASSIFICATION	8.019897701725493E-7	TEST
promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999993347913064	WITHOUT_CLASSIFICATION	6.652086935146191E-7	TEST
promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999991956825625	WITHOUT_CLASSIFICATION	8.04317437485481E-7	TEST
promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999988138340741	WITHOUT_CLASSIFICATION	1.1861659258875888E-6	TEST
promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999991547639387	WITHOUT_CLASSIFICATION	8.452360613680039E-7	TEST
promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999989666979611	WITHOUT_CLASSIFICATION	1.0333020389818775E-6	TEST
promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999984928187443	WITHOUT_CLASSIFICATION	1.5071812556681284E-6	TEST
promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999980271820614	WITHOUT_CLASSIFICATION	1.9728179385358305E-6	TEST
promise to implement N	WITHOUT_CLASSIFICATION	0.9999996540459787	WITHOUT_CLASSIFICATION	3.4595402124722385E-7	TEST
DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999947033499345	WITHOUT_CLASSIFICATION	5.2966500654883035E-6	TEST
We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999523355157741	WITHOUT_CLASSIFICATION	4.766448422583122E-5	TEST
Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.	WITHOUT_CLASSIFICATION	0.9999999805196174	WITHOUT_CLASSIFICATION	1.9480382590498367E-8	TEST
promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999995439606463	WITHOUT_CLASSIFICATION	4.5603935380786136E-7	TEST
promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999987671535875	WITHOUT_CLASSIFICATION	1.2328464125150224E-6	TEST
promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999992825961397	WITHOUT_CLASSIFICATION	7.174038602864357E-7	TEST
promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999991229729461	WITHOUT_CLASSIFICATION	8.77027053829429E-7	TEST
promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999988598592091	WITHOUT_CLASSIFICATION	1.1401407909852772E-6	TEST
promise to implement three	WITHOUT_CLASSIFICATION	0.9999988894480621	WITHOUT_CLASSIFICATION	1.1105519377778418E-6	TEST
all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999999691267388	WITHOUT_CLASSIFICATION	3.0873261194517035E-8	TEST
load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999998677082343	WITHOUT_CLASSIFICATION	1.3229176572453012E-7	TEST
open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.999999973297444	WITHOUT_CLASSIFICATION	2.6702556007551793E-8	TEST
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999998697738159	WITHOUT_CLASSIFICATION	1.3022618414741494E-7	TEST
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999996374111458	WITHOUT_CLASSIFICATION	3.625888541506873E-7	TEST
create constructor	WITHOUT_CLASSIFICATION	0.9999997182330882	WITHOUT_CLASSIFICATION	2.817669118384518E-7	TEST
wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999992133577261	WITHOUT_CLASSIFICATION	7.866422738775338E-7	TEST
end constructor	WITHOUT_CLASSIFICATION	0.9999997655450635	WITHOUT_CLASSIFICATION	2.3445493640649712E-7	TEST
start setup method	WITHOUT_CLASSIFICATION	0.9999994447326448	WITHOUT_CLASSIFICATION	5.552673551651079E-7	TEST
set RubyClass	WITHOUT_CLASSIFICATION	0.9999995221360378	WITHOUT_CLASSIFICATION	4.778639622026058E-7	TEST
set Ruby	WITHOUT_CLASSIFICATION	0.9999993508100474	WITHOUT_CLASSIFICATION	6.491899526067487E-7	TEST
all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.999999926107095	WITHOUT_CLASSIFICATION	7.389290512543667E-8	TEST
try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999999764307065	WITHOUT_CLASSIFICATION	2.356929359616443E-8	TEST
get current context	WITHOUT_CLASSIFICATION	0.9999995371235721	WITHOUT_CLASSIFICATION	4.6287642784078304E-7	TEST
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999985123942513	WITHOUT_CLASSIFICATION	1.48760574867837E-6	TEST
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999998697738159	WITHOUT_CLASSIFICATION	1.3022618414741494E-7	TEST
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999996374111458	WITHOUT_CLASSIFICATION	3.625888541506873E-7	TEST
create constructor	WITHOUT_CLASSIFICATION	0.9999997182330882	WITHOUT_CLASSIFICATION	2.817669118384518E-7	TEST
end constructor	WITHOUT_CLASSIFICATION	0.9999997655450635	WITHOUT_CLASSIFICATION	2.3445493640649712E-7	TEST
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999285959745	WITHOUT_CLASSIFICATION	7.140402546982961E-8	TEST
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999801910807	WITHOUT_CLASSIFICATION	1.9808919262711967E-8	TEST
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999986167465114	WITHOUT_CLASSIFICATION	1.3832534887198234E-6	TEST
load null block	WITHOUT_CLASSIFICATION	0.9999965646690409	WITHOUT_CLASSIFICATION	3.4353309591350074E-6	TEST
invoke method	WITHOUT_CLASSIFICATION	0.9999977736436734	WITHOUT_CLASSIFICATION	2.22635632671091E-6	TEST
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999997794331101	WITHOUT_CLASSIFICATION	2.205668898217561E-7	TEST
end setup method	WITHOUT_CLASSIFICATION	0.999999374138219	WITHOUT_CLASSIFICATION	6.258617808948182E-7	TEST
end class	WITHOUT_CLASSIFICATION	0.9999996714262187	WITHOUT_CLASSIFICATION	3.285737812030999E-7	TEST
create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.999999734035964	WITHOUT_CLASSIFICATION	2.659640359498987E-7	TEST
store the wrapper	WITHOUT_CLASSIFICATION	0.9999968588416424	WITHOUT_CLASSIFICATION	3.1411583576218E-6	TEST
prepare temp locals	WITHOUT_CLASSIFICATION	0.999996623126441	WITHOUT_CLASSIFICATION	3.3768735589988024E-6	TEST
Try to look up field for simple name get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999999655210864	WITHOUT_CLASSIFICATION	3.447891358882876E-8	TEST
field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.999999935965366	WITHOUT_CLASSIFICATION	6.403463401429081E-8	TEST
try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999999838697162	WITHOUT_CLASSIFICATION	1.613028381183135E-8	TEST
store it	WITHOUT_CLASSIFICATION	0.999999098288213	WITHOUT_CLASSIFICATION	9.017117869241552E-7	TEST
end of try block	WITHOUT_CLASSIFICATION	0.9999997563220546	WITHOUT_CLASSIFICATION	2.436779453540145E-7	TEST
finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999998684352769	WITHOUT_CLASSIFICATION	1.3156472312407312E-7	TEST
exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999983283253051	WITHOUT_CLASSIFICATION	1.6716746949719503E-6	TEST
re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999999822204396	WITHOUT_CLASSIFICATION	1.777956035237353E-8	TEST
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999985123942513	WITHOUT_CLASSIFICATION	1.48760574867837E-6	TEST
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999801910807	WITHOUT_CLASSIFICATION	1.9808919262711967E-8	TEST
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999986167465114	WITHOUT_CLASSIFICATION	1.3832534887198234E-6	TEST
invoke method	WITHOUT_CLASSIFICATION	0.9999977736436734	WITHOUT_CLASSIFICATION	2.22635632671091E-6	TEST
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999997794331101	WITHOUT_CLASSIFICATION	2.205668898217561E-7	TEST
end setup method	WITHOUT_CLASSIFICATION	0.999999374138219	WITHOUT_CLASSIFICATION	6.258617808948182E-7	TEST
end class	WITHOUT_CLASSIFICATION	0.9999996714262187	WITHOUT_CLASSIFICATION	3.285737812030999E-7	TEST
create the class	WITHOUT_CLASSIFICATION	0.9999993669853083	WITHOUT_CLASSIFICATION	6.330146917520455E-7	TEST
method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999927244506412	WITHOUT_CLASSIFICATION	7.275549358687652E-6	TEST
perform the dispatch	WITHOUT_CLASSIFICATION	0.999999968951484	WITHOUT_CLASSIFICATION	3.104851597839858E-8	TEST
try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999834144055	WITHOUT_CLASSIFICATION	1.6585594447567696E-8	TEST
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.999993475950835	WITHOUT_CLASSIFICATION	6.524049165029828E-6	TEST
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.999993475950835	WITHOUT_CLASSIFICATION	6.524049165029828E-6	TEST
setup the class	WITHOUT_CLASSIFICATION	0.9999998938271328	WITHOUT_CLASSIFICATION	1.0617286717990255E-7	TEST
now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999999848115088	WITHOUT_CLASSIFICATION	1.518849129143156E-8	TEST
do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999992049002656	WITHOUT_CLASSIFICATION	7.950997342994946E-7	TEST
probably a primitive	WITHOUT_CLASSIFICATION	0.9999997834769578	WITHOUT_CLASSIFICATION	2.1652304218416096E-7	TEST
interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999996296828565	WITHOUT_CLASSIFICATION	3.7031714356018255E-7	TEST
construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999999314220727	WITHOUT_CLASSIFICATION	6.857792736106454E-8	TEST
set the full name	WITHOUT_CLASSIFICATION	0.9999980982828485	WITHOUT_CLASSIFICATION	1.9017171514697278E-6	TEST
include all interfaces	WITHOUT_CLASSIFICATION	0.9999999538356448	WITHOUT_CLASSIFICATION	4.616435523001109E-8	TEST
if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.999998931095218	WITHOUT_CLASSIFICATION	1.0689047820030278E-6	TEST
add array construction methods	WITHOUT_CLASSIFICATION	0.999999416263594	WITHOUT_CLASSIFICATION	5.837364060792834E-7	TEST
add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999998680529326	WITHOUT_CLASSIFICATION	1.3194706733494622E-7	TEST
add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999999391535834	WITHOUT_CLASSIFICATION	6.084641659206362E-8	TEST
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999967944171775	WITHOUT_CLASSIFICATION	3.2055828225266394E-6	TEST
too much array creation!	WITHOUT_CLASSIFICATION	0.9999963186504602	WITHOUT_CLASSIFICATION	3.681349539766686E-6	TEST
only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999999705512965	WITHOUT_CLASSIFICATION	2.9448703379278956E-8	TEST
add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999999169961823	WITHOUT_CLASSIFICATION	8.300381774336974E-8	TEST
add all static variables	WITHOUT_CLASSIFICATION	0.9999979836369203	WITHOUT_CLASSIFICATION	2.0163630798143746E-6	TEST
only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999998830694565	WITHOUT_CLASSIFICATION	1.1693054356588353E-7	TEST
looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999985615664767	WITHOUT_CLASSIFICATION	1.4384335232200755E-6	TEST
NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.	WITHOUT_CLASSIFICATION	0.9999999986337431	WITHOUT_CLASSIFICATION	1.3662569538040742E-9	TEST
TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive	WITHOUT_CLASSIFICATION	0.9999740055384321	WITHOUT_CLASSIFICATION	2.5994461567855624E-5	TEST
long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999999249557828	WITHOUT_CLASSIFICATION	7.504421714119497E-8	TEST
double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999788544003	WITHOUT_CLASSIFICATION	2.114559966695644E-8	TEST
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9886909618627457	WITHOUT_CLASSIFICATION	0.011309038137254151	TEST
read-volatile	WITHOUT_CLASSIFICATION	0.9999991996260188	WITHOUT_CLASSIFICATION	8.003739811916057E-7	TEST
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999529177614	WITHOUT_CLASSIFICATION	4.708223859990876E-8	TEST
we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.999999989523747	WITHOUT_CLASSIFICATION	1.047625304556949E-8	TEST
If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999985280101191	WITHOUT_CLASSIFICATION	1.4719898808807855E-6	TEST
line 326	WITHOUT_CLASSIFICATION	0.9999943598413849	WITHOUT_CLASSIFICATION	5.640158615182825E-6	TEST
read-volatile	WITHOUT_CLASSIFICATION	0.9999991996260188	WITHOUT_CLASSIFICATION	8.003739811916057E-7	TEST
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999529177614	WITHOUT_CLASSIFICATION	4.708223859990876E-8	TEST
too much array creation!	WITHOUT_CLASSIFICATION	0.9999963186504602	WITHOUT_CLASSIFICATION	3.681349539766686E-6	TEST
construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999976078746506	WITHOUT_CLASSIFICATION	2.3921253492883134E-6	TEST
Get map of all fields we want to define.	WITHOUT_CLASSIFICATION	0.9999998375521035	WITHOUT_CLASSIFICATION	1.6244789641381844E-7	TEST
Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.999999920626727	WITHOUT_CLASSIFICATION	7.937327295485661E-8	TEST
Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999999283435329	WITHOUT_CLASSIFICATION	7.165646702817307E-8	TEST
We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999999582493478	WITHOUT_CLASSIFICATION	4.175065221210482E-8	TEST
dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999975206245068	WITHOUT_CLASSIFICATION	2.479375493333233E-6	TEST
initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999862435134677	WITHOUT_CLASSIFICATION	1.3756486532428666E-5	TEST
initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999991790949666	WITHOUT_CLASSIFICATION	8.209050333366844E-7	TEST
not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999860854227836	WITHOUT_CLASSIFICATION	1.3914577216369218E-5	TEST
setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999947443267757	WITHOUT_CLASSIFICATION	5.255673224384319E-6	TEST
First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999999764457005	WITHOUT_CLASSIFICATION	2.3554299456764E-8	TEST
list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999997857196521	WITHOUT_CLASSIFICATION	2.1428034787786452E-7	TEST
We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999995484040327	WITHOUT_CLASSIFICATION	4.515959672761223E-7	TEST
The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.999999990133894	WITHOUT_CLASSIFICATION	9.86610596527889E-9	TEST
Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999988216356	WITHOUT_CLASSIFICATION	1.1783644676343777E-9	TEST
jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999983380059014	WITHOUT_CLASSIFICATION	1.6619940985843108E-6	TEST
Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999999952736699	WITHOUT_CLASSIFICATION	4.726330159075005E-9	TEST
implement all forces implementation of all interfaces we intend for this class to implement	WITHOUT_CLASSIFICATION	0.9999997148767898	WITHOUT_CLASSIFICATION	2.851232100686348E-7	TEST
we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999144273986	WITHOUT_CLASSIFICATION	8.557260145729595E-8	TEST
walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999994826557834	WITHOUT_CLASSIFICATION	5.173442165541296E-7	TEST
construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999999822538412	WITHOUT_CLASSIFICATION	1.774615884469746E-8	TEST
assuming the user wants a collection of interfaces that can be included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999492214452	WITHOUT_CLASSIFICATION	5.077855486745732E-8	TEST
not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999998571290848	WITHOUT_CLASSIFICATION	1.4287091513135161E-7	TEST
To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well	WITHOUT_CLASSIFICATION	0.9999999998082455	WITHOUT_CLASSIFICATION	1.9175444863737538E-10	TEST
already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999957580697	WITHOUT_CLASSIFICATION	4.2419302426376774E-9	TEST
array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999996496203298	WITHOUT_CLASSIFICATION	3.503796701430271E-7	TEST
keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9924815507084352	WITHOUT_CLASSIFICATION	0.007518449291564773	TEST
array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999551040618558	WITHOUT_CLASSIFICATION	4.489593814410312E-5	TEST
parent.setConstant(name, proxyClass); where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999991285828751	WITHOUT_CLASSIFICATION	8.714171248327197E-7	TEST
including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999513067325	WITHOUT_CLASSIFICATION	4.8693267437701285E-8	TEST
add reference to interface module	WITHOUT_CLASSIFICATION	0.9999999082858235	WITHOUT_CLASSIFICATION	9.171417656691203E-8	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999999030804917	WITHOUT_CLASSIFICATION	9.691950821606137E-8	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999999030804917	WITHOUT_CLASSIFICATION	9.691950821606137E-8	TEST
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999967944171775	WITHOUT_CLASSIFICATION	3.2055828225266394E-6	TEST
same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999629457973	WITHOUT_CLASSIFICATION	3.705420268202957E-8	TEST
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999999523455589	WITHOUT_CLASSIFICATION	4.76544411001999E-7	TEST
weakly reserved names	WITHOUT_CLASSIFICATION	0.9999902460275024	WITHOUT_CLASSIFICATION	9.753972497656663E-6	TEST
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999284014367	WITHOUT_CLASSIFICATION	7.159856335969592E-8	TEST
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999284014367	WITHOUT_CLASSIFICATION	7.159856335969592E-8	TEST
modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999257358977	WITHOUT_CLASSIFICATION	7.426410234764325E-8	TEST
if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999996302888309	WITHOUT_CLASSIFICATION	3.6971116905318975E-7	TEST
caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999998614488963	WITHOUT_CLASSIFICATION	1.38551103730871E-7	TEST
proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999997758927883	WITHOUT_CLASSIFICATION	2.2410721161660699E-7	TEST
proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999994415073831	WITHOUT_CLASSIFICATION	5.584926169937345E-7	TEST
readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999998661164261	WITHOUT_CLASSIFICATION	1.3388357394901854E-7	TEST
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999995837925352	WITHOUT_CLASSIFICATION	4.1620746483471185E-7	TEST
Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999998092632804	WITHOUT_CLASSIFICATION	1.907367195638244E-7	TEST
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999997742010632	WITHOUT_CLASSIFICATION	2.257989368076951E-7	TEST
Add property name aliases	WITHOUT_CLASSIFICATION	0.999998978468911	WITHOUT_CLASSIFICATION	1.0215310890562427E-6	TEST
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.999997867901908	WITHOUT_CLASSIFICATION	2.132098092064759E-6	TEST
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999979996142584	WITHOUT_CLASSIFICATION	2.0003857415695617E-6	TEST
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9999554423789954	WITHOUT_CLASSIFICATION	4.455762100465862E-5	TEST
Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999998699098309	WITHOUT_CLASSIFICATION	1.3009016912572992E-7	TEST
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999947627094676	WITHOUT_CLASSIFICATION	5.237290532387858E-6	TEST
something?	WITHOUT_CLASSIFICATION	0.999989912517655	WITHOUT_CLASSIFICATION	1.0087482344946211E-5	TEST
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999997661308917	WITHOUT_CLASSIFICATION	2.3386910838429192E-7	TEST
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999997661308917	WITHOUT_CLASSIFICATION	2.3386910838429192E-7	TEST
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999997701512163	WITHOUT_CLASSIFICATION	2.2984878356501504E-7	TEST
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999997701512163	WITHOUT_CLASSIFICATION	2.2984878356501504E-7	TEST
create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999998349805589	WITHOUT_CLASSIFICATION	1.650194410921775E-7	TEST
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999921362984691	WITHOUT_CLASSIFICATION	7.863701531005292E-6	TEST
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999997911641859	WITHOUT_CLASSIFICATION	2.0883581393616854E-7	TEST
now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999991668153805	WITHOUT_CLASSIFICATION	8.331846194343647E-7	TEST
old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999999375938748	WITHOUT_CLASSIFICATION	6.240612510442496E-8	TEST
1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999992771510036	WITHOUT_CLASSIFICATION	7.228489963760254E-7	TEST
double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999999929411981	WITHOUT_CLASSIFICATION	7.058801849092224E-9	TEST
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999979996142584	WITHOUT_CLASSIFICATION	2.0003857415695617E-6	TEST
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9999554423789954	WITHOUT_CLASSIFICATION	4.455762100465862E-5	TEST
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999947627094676	WITHOUT_CLASSIFICATION	5.237290532387858E-6	TEST
one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999979848744701	WITHOUT_CLASSIFICATION	2.015125529897737E-6	TEST
Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999956358868693	WITHOUT_CLASSIFICATION	4.364113130623659E-6	TEST
note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999312811599	WITHOUT_CLASSIFICATION	6.871884005496974E-8	TEST
see note above re: return type	WITHOUT_CLASSIFICATION	0.9999960885562221	WITHOUT_CLASSIFICATION	3.91144377786967E-6	TEST
restrictive security policy; no matter, we only want public classes anyway	WITHOUT_CLASSIFICATION	0.9999999250783527	WITHOUT_CLASSIFICATION	7.492164727940004E-8	TEST
very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999981609080701	WITHOUT_CLASSIFICATION	1.8390919297775398E-6	TEST
one-dimensional array	WITHOUT_CLASSIFICATION	0.9999974498477056	WITHOUT_CLASSIFICATION	2.5501522944027766E-6	TEST
n-dimensional array	WITHOUT_CLASSIFICATION	0.9999993177085271	WITHOUT_CLASSIFICATION	6.822914729880214E-7	TEST
if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999977466226994	WITHOUT_CLASSIFICATION	2.253377300653497E-6	TEST
we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999657434795	WITHOUT_CLASSIFICATION	3.4256520507845856E-8	TEST
Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999999846268649	WITHOUT_CLASSIFICATION	1.5373135075848387E-8	TEST
can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999969620394932	WITHOUT_CLASSIFICATION	3.0379605067588196E-6	TEST
getFooBar() => fooBar?, foo_bar?()	WITHOUT_CLASSIFICATION	0.9999976382747622	WITHOUT_CLASSIFICATION	2.3617252377622574E-6	TEST
If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999942202082075	WITHOUT_CLASSIFICATION	5.779791792519637E-6	TEST
many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999980786097069	WITHOUT_CLASSIFICATION	1.9213902931383296E-6	TEST
for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.99999978303176	WITHOUT_CLASSIFICATION	2.169682401232141E-7	TEST
rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999994343554831	WITHOUT_CLASSIFICATION	5.656445168305145E-7	TEST
the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999995566247013	WITHOUT_CLASSIFICATION	4.433752987820593E-7	TEST
it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999903297215955	WITHOUT_CLASSIFICATION	9.670278404417759E-6	TEST
we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999010505336	WITHOUT_CLASSIFICATION	9.894946639807911E-8	TEST
set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999997816527413	WITHOUT_CLASSIFICATION	2.1834725880660843E-7	TEST
the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999982682803716	WITHOUT_CLASSIFICATION	1.7317196282651795E-6	TEST
InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999923459734487	WITHOUT_CLASSIFICATION	7.654026551317082E-6	TEST
also create the JavaProxy classes	WITHOUT_CLASSIFICATION	0.9999966159601089	WITHOUT_CLASSIFICATION	3.384039891007189E-6	TEST
The template for interface modules	WITHOUT_CLASSIFICATION	0.9999999008084299	WITHOUT_CLASSIFICATION	9.919157003070731E-8	TEST
Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999997445796419	WITHOUT_CLASSIFICATION	2.554203581374521E-7	TEST
add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999995422141693	WITHOUT_CLASSIFICATION	4.577858307152222E-7	TEST
add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999899746438615	WITHOUT_CLASSIFICATION	1.0025356138502227E-5	TEST
finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999998885680355	WITHOUT_CLASSIFICATION	1.1143196454491614E-7	TEST
shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999999565691191	WITHOUT_CLASSIFICATION	4.34308809963316E-8	TEST
include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999999169744634	WITHOUT_CLASSIFICATION	8.3025536522805E-8	TEST
java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999982704727212	WITHOUT_CLASSIFICATION	1.7295272787515314E-6	TEST
other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999996252427988	WITHOUT_CLASSIFICATION	3.747572011706031E-7	TEST
include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999999878427004	WITHOUT_CLASSIFICATION	1.2157299587939444E-8	TEST
JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999999023172137	WITHOUT_CLASSIFICATION	9.768278623275628E-8	TEST
add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999996657985409	WITHOUT_CLASSIFICATION	3.34201459091025E-7	TEST
add alias to meta	WITHOUT_CLASSIFICATION	0.9999990979861656	WITHOUT_CLASSIFICATION	9.020138344598983E-7	TEST
we'll only map conventional class names to modules	WITHOUT_CLASSIFICATION	0.9999992412652865	WITHOUT_CLASSIFICATION	7.587347134780426E-7	TEST
expected	WITHOUT_CLASSIFICATION	0.999992526971571	WITHOUT_CLASSIFICATION	7.47302842900894E-6	TEST
Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999997131740788	WITHOUT_CLASSIFICATION	2.8682592133099957E-7	TEST
upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999994428832	WITHOUT_CLASSIFICATION	5.571168001076624E-7	TEST
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999999523455589	WITHOUT_CLASSIFICATION	4.76544411001999E-7	TEST
add alias to meta	WITHOUT_CLASSIFICATION	0.9999990979861656	WITHOUT_CLASSIFICATION	9.020138344598983E-7	TEST
this is where we'll get connected when classes are opened using package module syntax.	WITHOUT_CLASSIFICATION	0.9999787922370834	WITHOUT_CLASSIFICATION	2.1207762916658876E-5	TEST
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999951165995	WITHOUT_CLASSIFICATION	4.883400548146277E-9	TEST
this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999998105399132	WITHOUT_CLASSIFICATION	1.8946008689769655E-7	TEST
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9999996713835466	WITHOUT_CLASSIFICATION	3.286164534515251E-7	TEST
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9999996713835466	WITHOUT_CLASSIFICATION	3.286164534515251E-7	TEST
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999997287624557	WITHOUT_CLASSIFICATION	2.7123754424256945E-7	TEST
Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999999526259827	WITHOUT_CLASSIFICATION	4.7374017333123255E-8	TEST
hashcode is a combination of the interfaces and the Ruby class we're using to implement them	WITHOUT_CLASSIFICATION	0.9999998856305925	WITHOUT_CLASSIFICATION	1.1436940748190578E-7	TEST
if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999128197395	WITHOUT_CLASSIFICATION	8.718026051205047E-8	TEST
normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.999999666690166	WITHOUT_CLASSIFICATION	3.3330983393004603E-7	TEST
Initialize some components.	WITHOUT_CLASSIFICATION	0.9999994485507929	WITHOUT_CLASSIFICATION	5.514492071189449E-7	TEST
not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)	WITHOUT_CLASSIFICATION	0.9999967409535778	WITHOUT_CLASSIFICATION	3.2590464222753603E-6	TEST
Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.999998488137418	WITHOUT_CLASSIFICATION	1.5118625819605036E-6	TEST
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999997733780592	WITHOUT_CLASSIFICATION	2.266219406904476E-7	TEST
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999997733780592	WITHOUT_CLASSIFICATION	2.266219406904476E-7	TEST
no matching ctor found	WITHOUT_CLASSIFICATION	0.999998195634758	WITHOUT_CLASSIFICATION	1.8043652420242395E-6	TEST
Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999914352618756	WITHOUT_CLASSIFICATION	8.564738124281438E-6	TEST
prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999999089618004	WITHOUT_CLASSIFICATION	9.103819965262437E-8	TEST
must be a public method	WITHOUT_CLASSIFICATION	0.9999997658830372	WITHOUT_CLASSIFICATION	2.3411696288076172E-7	TEST
must be a public class	WITHOUT_CLASSIFICATION	0.9999996680713369	WITHOUT_CLASSIFICATION	3.319286630733707E-7	TEST
must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999999844300845	WITHOUT_CLASSIFICATION	1.556991548852771E-8	TEST
Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).	WITHOUT_CLASSIFICATION	0.9999999998485365	WITHOUT_CLASSIFICATION	1.5146356642614514E-10	TEST
search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.999999777052072	WITHOUT_CLASSIFICATION	2.2294792794363864E-7	TEST
no matching method found	WITHOUT_CLASSIFICATION	0.9999990599037466	WITHOUT_CLASSIFICATION	9.40096253446221E-7	TEST
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9983434267252054	WITHOUT_CLASSIFICATION	0.0016565732747946251	TEST
First we need to register the JRuby engine.	WITHOUT_CLASSIFICATION	0.9999872521968183	WITHOUT_CLASSIFICATION	1.2747803181684878E-5	TEST
Now we create a new BSFManager.	WITHOUT_CLASSIFICATION	0.9999942573939774	WITHOUT_CLASSIFICATION	5.742606022630193E-6	TEST
Initialize a simple Frame.	WITHOUT_CLASSIFICATION	0.9999999080513006	WITHOUT_CLASSIFICATION	9.194869952883637E-8	TEST
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999989232352844	WITHOUT_CLASSIFICATION	1.0767647156330972E-6	TEST
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999989232352844	WITHOUT_CLASSIFICATION	1.0767647156330972E-6	TEST
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999971121793382	WITHOUT_CLASSIFICATION	2.887820661759869E-6	TEST
end class	WITHOUT_CLASSIFICATION	0.9999996714262187	WITHOUT_CLASSIFICATION	3.285737812030999E-7	TEST
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9983434267252054	WITHOUT_CLASSIFICATION	0.0016565732747946251	TEST
for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999999974596241	WITHOUT_CLASSIFICATION	2.540376012710089E-9	TEST
Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)	WITHOUT_CLASSIFICATION	0.9999999866230823	WITHOUT_CLASSIFICATION	1.3376917661491023E-8	TEST
Execute a Ruby script (add the menubar to the frame).	WITHOUT_CLASSIFICATION	0.9999999526388464	WITHOUT_CLASSIFICATION	4.736115348591987E-8	TEST
Execute Ruby statements.	WITHOUT_CLASSIFICATION	0.9999965544655147	WITHOUT_CLASSIFICATION	3.445534485330907E-6	TEST
Evaluates a Ruby expression and display the result.	WITHOUT_CLASSIFICATION	0.9999988653846814	WITHOUT_CLASSIFICATION	1.134615318561424E-6	TEST
Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999944292600959	WITHOUT_CLASSIFICATION	5.5707399041855635E-6	TEST
package scope	WITHOUT_CLASSIFICATION	0.9999982884812296	WITHOUT_CLASSIFICATION	1.7115187704169648E-6	TEST
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999999523455589	WITHOUT_CLASSIFICATION	4.76544411001999E-7	TEST
Ruby-level methods	WITHOUT_CLASSIFICATION	0.9999988672879773	WITHOUT_CLASSIFICATION	1.1327120227392147E-6	TEST
need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9998915871850236	WITHOUT_CLASSIFICATION	1.084128149765009E-4	TEST
we only collect methods and interfaces for user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999551081121	WITHOUT_CLASSIFICATION	4.4891887857003593E-8	TEST
get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.999998222301052	WITHOUT_CLASSIFICATION	1.7776989480195217E-6	TEST
get any included interfaces	WITHOUT_CLASSIFICATION	0.9999998984562316	WITHOUT_CLASSIFICATION	1.0154376837928606E-7	TEST
lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999998457392807	WITHOUT_CLASSIFICATION	1.5426071937668378E-7	TEST
statically initialized below	WITHOUT_CLASSIFICATION	0.9999997976119848	WITHOUT_CLASSIFICATION	2.0238801527868003E-7	TEST
finish class initializer	WITHOUT_CLASSIFICATION	0.9999999372575878	WITHOUT_CLASSIFICATION	6.274241214420322E-8	TEST
trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999999733192219	WITHOUT_CLASSIFICATION	2.668077813535547E-8	TEST
should not happen!	WITHOUT_CLASSIFICATION	0.9999976758069024	WITHOUT_CLASSIFICATION	2.324193097727169E-6	TEST
start class	WITHOUT_CLASSIFICATION	0.9999964146943939	WITHOUT_CLASSIFICATION	3.5853056059955874E-6	TEST
make getter for handler	WITHOUT_CLASSIFICATION	0.9999985815639681	WITHOUT_CLASSIFICATION	1.4184360318074716E-6	TEST
make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999992201603367	WITHOUT_CLASSIFICATION	7.798396633394707E-7	TEST
add (potentially) overridden names to the key. TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9986051916512685	WITHOUT_CLASSIFICATION	0.001394808348731517	TEST
We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999977821551936	WITHOUT_CLASSIFICATION	2.2178448063278313E-6	TEST
create static private method field	WITHOUT_CLASSIFICATION	0.9999996573015534	WITHOUT_CLASSIFICATION	3.4269844667436755E-7	TEST
load static empty array	WITHOUT_CLASSIFICATION	0.9999994723840046	WITHOUT_CLASSIFICATION	5.27615995540128E-7	TEST
box arguments	WITHOUT_CLASSIFICATION	0.9999992405487457	WITHOUT_CLASSIFICATION	7.594512541986773E-7	TEST
this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999979142891942	WITHOUT_CLASSIFICATION	2.085710805744563E-6	TEST
construct the super-proxy method	WITHOUT_CLASSIFICATION	0.9999996421665306	WITHOUT_CLASSIFICATION	3.5783346940592826E-7	TEST
do a void return	WITHOUT_CLASSIFICATION	0.9999998724406846	WITHOUT_CLASSIFICATION	1.2755931553155766E-7	TEST
utility methods	WITHOUT_CLASSIFICATION	0.9999992165821256	WITHOUT_CLASSIFICATION	7.83417874372585E-7	TEST
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999997287624557	WITHOUT_CLASSIFICATION	2.7123754424256945E-7	TEST
store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999974325964321	WITHOUT_CLASSIFICATION	2.5674035679426186E-6	TEST
use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999372125637	WITHOUT_CLASSIFICATION	6.278743622826553E-8	TEST
no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999954561224218	WITHOUT_CLASSIFICATION	4.543877578220729E-6	TEST
only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999957177323507	WITHOUT_CLASSIFICATION	4.282267649221229E-6	TEST
opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999903868499476	WITHOUT_CLASSIFICATION	9.613150052321946E-6	TEST
opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999986941420876	WITHOUT_CLASSIFICATION	1.30585791232282E-6	TEST
No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999994523702742	WITHOUT_CLASSIFICATION	5.4762972566771E-7	TEST
If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999998267047722	WITHOUT_CLASSIFICATION	1.7329522790063096E-7	TEST
The current block is already associated with proc. No need to create a new one	WITHOUT_CLASSIFICATION	0.999984385893395	WITHOUT_CLASSIFICATION	1.5614106605010908E-5	TEST
Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999999477419931	WITHOUT_CLASSIFICATION	5.22580067979895E-8	TEST
NUL	WITHOUT_CLASSIFICATION	0.9998905908152209	WITHOUT_CLASSIFICATION	1.0940918477908283E-4	TEST
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999975489261153	WITHOUT_CLASSIFICATION	2.451073884735603E-6	TEST
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999997599702677	WITHOUT_CLASSIFICATION	2.400297322969565E-6	TEST
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999435720248	WITHOUT_CLASSIFICATION	5.642797523052981E-8	TEST
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999931873219517	WITHOUT_CLASSIFICATION	6.812678048267614E-6	TEST
read-volatile	WITHOUT_CLASSIFICATION	0.9999991996260188	WITHOUT_CLASSIFICATION	8.003739811916057E-7	TEST
read-volatile	WITHOUT_CLASSIFICATION	0.9999991996260188	WITHOUT_CLASSIFICATION	8.003739811916057E-7	TEST
classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999999923682131	WITHOUT_CLASSIFICATION	7.631786933598718E-9	TEST
must be power of 2 must be power of 2	WITHOUT_CLASSIFICATION	0.9999970738426062	WITHOUT_CLASSIFICATION	2.926157393696273E-6	TEST
Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999989217196048	WITHOUT_CLASSIFICATION	1.078280395131789E-6	TEST
note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999998637571912	WITHOUT_CLASSIFICATION	1.3624280886784577E-7	TEST
System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999998737370072	WITHOUT_CLASSIFICATION	1.2626299275295042E-7	TEST
protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }	WITHOUT_CLASSIFICATION	0.9999999368321671	WITHOUT_CLASSIFICATION	6.316783284790765E-8	TEST
EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999998595198568	WITHOUT_CLASSIFICATION	1.404801430850785E-7	TEST
Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999998180182823	WITHOUT_CLASSIFICATION	1.8198171762573852E-7	TEST
references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.	WITHOUT_CLASSIFICATION	0.9999999035177018	WITHOUT_CLASSIFICATION	9.648229805821336E-8	TEST
ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999992301125418	WITHOUT_CLASSIFICATION	7.698874582090815E-7	TEST
must be called under lock	WITHOUT_CLASSIFICATION	0.9999997676240664	WITHOUT_CLASSIFICATION	2.3237593359361746E-7	TEST
must be called under lock	WITHOUT_CLASSIFICATION	0.9999997676240664	WITHOUT_CLASSIFICATION	2.3237593359361746E-7	TEST
must be called under lock	WITHOUT_CLASSIFICATION	0.9999997676240664	WITHOUT_CLASSIFICATION	2.3237593359361746E-7	TEST
note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999992313313	WITHOUT_CLASSIFICATION	7.686686784791865E-10	TEST
temp method to verify tableSize value must be called under lock	WITHOUT_CLASSIFICATION	0.9999999617384423	WITHOUT_CLASSIFICATION	3.8261557690013324E-8	TEST
Single node in list	WITHOUT_CLASSIFICATION	0.999999652534316	WITHOUT_CLASSIFICATION	3.474656839611631E-7	TEST
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999999842205699	WITHOUT_CLASSIFICATION	1.5779430094238834E-7	TEST
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999999842205699	WITHOUT_CLASSIFICATION	1.5779430094238834E-7	TEST
entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999995089706987	WITHOUT_CLASSIFICATION	4.910293013846594E-7	TEST
Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999972846572999	WITHOUT_CLASSIFICATION	2.715342700131994E-6	TEST
Start of string ([, (, {, <, ', ", \n)	WITHOUT_CLASSIFICATION	0.9999755236037762	WITHOUT_CLASSIFICATION	2.447639622375872E-5	TEST
Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999993193897629	WITHOUT_CLASSIFICATION	6.806102371450266E-7	TEST
How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999996860428972	WITHOUT_CLASSIFICATION	3.139571027409293E-7	TEST
For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999971345581539	WITHOUT_CLASSIFICATION	2.8654418460750315E-6	TEST
Last full line read.	WITHOUT_CLASSIFICATION	0.9999993965445185	WITHOUT_CLASSIFICATION	6.034554814589933E-7	TEST
Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999997447013825	WITHOUT_CLASSIFICATION	2.5529861742117806E-7	TEST
Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.999998497419557	WITHOUT_CLASSIFICATION	1.5025804429836613E-6	TEST
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999996601221212	WITHOUT_CLASSIFICATION	3.398778788969182E-7	TEST
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999996601221212	WITHOUT_CLASSIFICATION	3.398778788969182E-7	TEST
End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999855949374922	WITHOUT_CLASSIFICATION	1.4405062507848756E-5	TEST
How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999854618031743	WITHOUT_CLASSIFICATION	1.4538196825708781E-5	TEST
Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999985690788733	WITHOUT_CLASSIFICATION	1.4309211267537049E-6	TEST
Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999951436774163	WITHOUT_CLASSIFICATION	4.856322583787652E-6	TEST
Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.999999911582984	WITHOUT_CLASSIFICATION	8.841701605162185E-8	TEST
just ignore	WITHOUT_CLASSIFICATION	0.9999996128017261	WITHOUT_CLASSIFICATION	3.871982738726239E-7	TEST
octal constant	WITHOUT_CLASSIFICATION	0.9999967275747198	WITHOUT_CLASSIFICATION	3.272425280307642E-6	TEST
hex constant	WITHOUT_CLASSIFICATION	0.9999992011836734	WITHOUT_CLASSIFICATION	7.988163266139856E-7	TEST
PUSH(1)	WITHOUT_CLASSIFICATION	0.9999124338435872	WITHOUT_CLASSIFICATION	8.756615641280164E-5	TEST
POP	WITHOUT_CLASSIFICATION	0.9998289580462417	WITHOUT_CLASSIFICATION	1.710419537583017E-4	TEST
PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999997659323929	WITHOUT_CLASSIFICATION	2.340676070999136E-7	TEST
LEXPOP	WITHOUT_CLASSIFICATION	0.9998776284685016	WITHOUT_CLASSIFICATION	1.2237153149846273E-4	TEST
SET_P	WITHOUT_CLASSIFICATION	0.9998742978341854	WITHOUT_CLASSIFICATION	1.2570216581465364E-4	TEST
Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999992082892152	WITHOUT_CLASSIFICATION	7.917107847462024E-7	TEST
Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999901298644875	WITHOUT_CLASSIFICATION	9.870135512467615E-6	TEST
Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999999765006083	WITHOUT_CLASSIFICATION	2.3499391638565006E-8	TEST
Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999995377789216	WITHOUT_CLASSIFICATION	4.6222107847347925E-7	TEST
Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9998232489329657	WITHOUT_CLASSIFICATION	1.7675106703439168E-4	TEST
Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999993292476606	WITHOUT_CLASSIFICATION	6.70752339363948E-7	TEST
Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999614984851	WITHOUT_CLASSIFICATION	3.8501514916375564E-8	TEST
Give a name to a value. Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999600138011334	WITHOUT_CLASSIFICATION	3.998619886663037E-5	TEST
When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999999424372615	WITHOUT_CLASSIFICATION	5.756273846740312E-8	TEST
Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999992249066822	WITHOUT_CLASSIFICATION	7.75093317871111E-7	TEST
Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999602371886389	WITHOUT_CLASSIFICATION	3.976281136106021E-5	TEST
1.9 only	WITHOUT_CLASSIFICATION	0.9999875030441517	WITHOUT_CLASSIFICATION	1.2496955848267421E-5	TEST
Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999995138713507	WITHOUT_CLASSIFICATION	4.861286493147122E-7	TEST
Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999970593394686	WITHOUT_CLASSIFICATION	2.940660531359285E-6	TEST
no mb || ismbchar(term)	WITHOUT_CLASSIFICATION	0.9999988302403006	WITHOUT_CLASSIFICATION	1.1697596994715121E-6	TEST
Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.	WITHOUT_CLASSIFICATION	0.9999999024051841	WITHOUT_CLASSIFICATION	9.759481589000109E-8	TEST
DEBUGGING HELP	WITHOUT_CLASSIFICATION	0.999957336948691	WITHOUT_CLASSIFICATION	4.2663051308925493E-5	TEST
'\v'	WITHOUT_CLASSIFICATION	0.9997354930885081	WITHOUT_CLASSIFICATION	2.6450691149196775E-4	TEST
end of script.	WITHOUT_CLASSIFICATION	0.9999995968082587	WITHOUT_CLASSIFICATION	4.0319174135803957E-7	TEST
white spaces	WITHOUT_CLASSIFICATION	0.999999205409792	WITHOUT_CLASSIFICATION	7.945902079961425E-7	TEST
'\v'	WITHOUT_CLASSIFICATION	0.9997354930885081	WITHOUT_CLASSIFICATION	2.6450691149196775E-4	TEST
it's a comment	WITHOUT_CLASSIFICATION	0.9999996306830358	WITHOUT_CLASSIFICATION	3.693169641929823E-7	TEST
Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999650490140902	WITHOUT_CLASSIFICATION	3.495098590971325E-5	TEST
$\: output record separator	WITHOUT_CLASSIFICATION	0.9999927959038104	WITHOUT_CLASSIFICATION	7.204096189528012E-6	TEST
EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999922526919838	WITHOUT_CLASSIFICATION	7.747308016124856E-6	TEST
documentation nodes	WITHOUT_CLASSIFICATION	0.9999993854318305	WITHOUT_CLASSIFICATION	6.145681693560541E-7	TEST
In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999985641906242	WITHOUT_CLASSIFICATION	1.4358093758483877E-6	TEST
Just a plain bang	WITHOUT_CLASSIFICATION	0.9999993728935204	WITHOUT_CLASSIFICATION	6.271064795999922E-7	TEST
$_: last read line string	WITHOUT_CLASSIFICATION	0.9999983157764547	WITHOUT_CLASSIFICATION	1.684223545273431E-6	TEST
$~: match-data	WITHOUT_CLASSIFICATION	0.9999892287890557	WITHOUT_CLASSIFICATION	1.0771210944336157E-5	TEST
$: argv	WITHOUT_CLASSIFICATION	0.9999703587277363	WITHOUT_CLASSIFICATION	2.9641272263752138E-5	TEST
$$: pid	WITHOUT_CLASSIFICATION	0.9999774929285014	WITHOUT_CLASSIFICATION	2.2507071498547405E-5	TEST
$?: last status	WITHOUT_CLASSIFICATION	0.9999910812021073	WITHOUT_CLASSIFICATION	8.918797892754353E-6	TEST
$!: error string	WITHOUT_CLASSIFICATION	0.9999973895784501	WITHOUT_CLASSIFICATION	2.6104215500364225E-6	TEST
$@: error position	WITHOUT_CLASSIFICATION	0.9999995023972132	WITHOUT_CLASSIFICATION	4.976027867580652E-7	TEST
$/: input record separator	WITHOUT_CLASSIFICATION	0.9999969522508372	WITHOUT_CLASSIFICATION	3.0477491627759642E-6	TEST
$;: field separator	WITHOUT_CLASSIFICATION	0.9999982562050658	WITHOUT_CLASSIFICATION	1.7437949341910154E-6	TEST
$,: output field separator	WITHOUT_CLASSIFICATION	0.9999975708921451	WITHOUT_CLASSIFICATION	2.4291078548017824E-6	TEST
$.: last read line number	WITHOUT_CLASSIFICATION	0.9999984562083947	WITHOUT_CLASSIFICATION	1.543791605376913E-6	TEST
$=: ignorecase	WITHOUT_CLASSIFICATION	0.9999993759433093	WITHOUT_CLASSIFICATION	6.240566905901389E-7	TEST
$:: load path	WITHOUT_CLASSIFICATION	0.9999576814959759	WITHOUT_CLASSIFICATION	4.2318504024205216E-5	TEST
$<: reading filename	WITHOUT_CLASSIFICATION	0.9999915246952794	WITHOUT_CLASSIFICATION	8.475304720617743E-6	TEST
$": already loaded files	WITHOUT_CLASSIFICATION	0.9999974710454315	WITHOUT_CLASSIFICATION	2.528954568586466E-6	TEST
$&: last match	WITHOUT_CLASSIFICATION	0.9999853609577976	WITHOUT_CLASSIFICATION	1.4639042202455774E-5	TEST
$`: string before last match	WITHOUT_CLASSIFICATION	0.9999990248795725	WITHOUT_CLASSIFICATION	9.751204275184376E-7	TEST
$': string after last match	WITHOUT_CLASSIFICATION	0.9999907251997615	WITHOUT_CLASSIFICATION	9.274800238454531E-6	TEST
methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999996469720063	WITHOUT_CLASSIFICATION	3.530279937756081E-7	TEST
See if it is a reserved word.	WITHOUT_CLASSIFICATION	0.9999946584614533	WITHOUT_CLASSIFICATION	5.341538546715047E-6	TEST
enum lex_state	WITHOUT_CLASSIFICATION	0.9999960482075932	WITHOUT_CLASSIFICATION	3.951792406763074E-6	TEST
block (primary)	WITHOUT_CLASSIFICATION	0.9999982128672548	WITHOUT_CLASSIFICATION	1.7871327452563783E-6	TEST
block (expr)	WITHOUT_CLASSIFICATION	0.999998220011913	WITHOUT_CLASSIFICATION	1.7799880870671259E-6	TEST
hash	WITHOUT_CLASSIFICATION	0.9999151826096042	WITHOUT_CLASSIFICATION	8.481739039575224E-5	TEST
ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999703840205003	WITHOUT_CLASSIFICATION	2.961597949971562E-5	TEST
FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999342905343744	WITHOUT_CLASSIFICATION	6.570946562563808E-5	TEST
We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999997715568737	WITHOUT_CLASSIFICATION	2.2844312633895488E-7	TEST
hexadecimal	WITHOUT_CLASSIFICATION	0.9999849478729419	WITHOUT_CLASSIFICATION	1.505212705799729E-5	TEST
binary	WITHOUT_CLASSIFICATION	0.9999817327638898	WITHOUT_CLASSIFICATION	1.8267236110212348E-5	TEST
decimal	WITHOUT_CLASSIFICATION	0.9999930479887961	WITHOUT_CLASSIFICATION	6.9520112039900695E-6	TEST
Octal	WITHOUT_CLASSIFICATION	0.9999791820395659	WITHOUT_CLASSIFICATION	2.08179604340729E-5	TEST
'_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999998435640326	WITHOUT_CLASSIFICATION	1.5643596738492594E-7	TEST
backslash	WITHOUT_CLASSIFICATION	0.9999873037738776	WITHOUT_CLASSIFICATION	1.2696226122389185E-5	TEST
newline	WITHOUT_CLASSIFICATION	0.9999666540088056	WITHOUT_CLASSIFICATION	3.3345991194480483E-5	TEST
horizontal tab	WITHOUT_CLASSIFICATION	0.9999969761146409	WITHOUT_CLASSIFICATION	3.0238853592280673E-6	TEST
form feed	WITHOUT_CLASSIFICATION	0.9999966076329975	WITHOUT_CLASSIFICATION	3.392367002446923E-6	TEST
vertical tab	WITHOUT_CLASSIFICATION	0.9999986170200401	WITHOUT_CLASSIFICATION	1.3829799598657712E-6	TEST
alarm(bell)	WITHOUT_CLASSIFICATION	0.9999562909985197	WITHOUT_CLASSIFICATION	4.3709001480433314E-5	TEST
escape	WITHOUT_CLASSIFICATION	0.999982852631089	WITHOUT_CLASSIFICATION	1.7147368910958507E-5	TEST
hex constant	WITHOUT_CLASSIFICATION	0.9999992011836734	WITHOUT_CLASSIFICATION	7.988163266139856E-7	TEST
char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999996909132522	WITHOUT_CLASSIFICATION	3.090867477412133E-7	TEST
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999996632514364	WITHOUT_CLASSIFICATION	3.3674856353048257E-7	TEST
space	WITHOUT_CLASSIFICATION	0.9999946625338548	WITHOUT_CLASSIFICATION	5.337466145233072E-6	TEST
Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999456948835435	WITHOUT_CLASSIFICATION	5.43051164564893E-5	TEST
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999767810062521	WITHOUT_CLASSIFICATION	2.3218993747873307E-5	TEST
We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999999697072084	WITHOUT_CLASSIFICATION	3.0292791554200285E-8	TEST
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999996632514364	WITHOUT_CLASSIFICATION	3.3674856353048257E-7	TEST
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999706410855641	WITHOUT_CLASSIFICATION	2.9358914435869154E-5	TEST
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999706410855641	WITHOUT_CLASSIFICATION	2.9358914435869154E-5	TEST
Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999851120296858	WITHOUT_CLASSIFICATION	1.4887970314293024E-5	TEST
Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999993997472264	WITHOUT_CLASSIFICATION	6.002527735819668E-7	TEST
index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999999302735751	WITHOUT_CLASSIFICATION	6.972642481345454E-8	TEST
Character read before previous read	WITHOUT_CLASSIFICATION	0.9999988071024903	WITHOUT_CLASSIFICATION	1.1928975095777525E-6	TEST
keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999945763150143	WITHOUT_CLASSIFICATION	5.423684985618322E-6	TEST
NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999981891227786	WITHOUT_CLASSIFICATION	1.8108772214259078E-6	TEST
BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999874077125509	WITHOUT_CLASSIFICATION	1.259228744905463E-5	TEST
TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now	WITHOUT_CLASSIFICATION	0.9886209579861706	WITHOUT_CLASSIFICATION	0.01137904201382937	TEST
Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999998558792106	WITHOUT_CLASSIFICATION	1.4412078943111637E-7	TEST
that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999993202158338	WITHOUT_CLASSIFICATION	6.797841662225921E-7	TEST
Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.999997362765062	WITHOUT_CLASSIFICATION	2.6372349379759356E-6	TEST
Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999968739257	WITHOUT_CLASSIFICATION	3.126074383756626E-9	TEST
this set is only for darwin	WITHOUT_CLASSIFICATION	0.999996167495589	WITHOUT_CLASSIFICATION	3.832504411027347E-6	TEST
DigestLibrary	WITHOUT_CLASSIFICATION	0.9999355518169795	WITHOUT_CLASSIFICATION	6.444818302057029E-5	TEST
all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999901083701416	WITHOUT_CLASSIFICATION	9.89162985833072E-6	TEST
all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.999988343542591	WITHOUT_CLASSIFICATION	1.1656457408941925E-5	TEST
do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999987774927602	WITHOUT_CLASSIFICATION	1.2225072397660723E-6	TEST
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999832411315616	WITHOUT_CLASSIFICATION	1.6758868438462386E-5	TEST
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999832411315616	WITHOUT_CLASSIFICATION	1.6758868438462386E-5	TEST
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999832411315616	WITHOUT_CLASSIFICATION	1.6758868438462386E-5	TEST
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999832411315616	WITHOUT_CLASSIFICATION	1.6758868438462386E-5	TEST
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999832411315616	WITHOUT_CLASSIFICATION	1.6758868438462386E-5	TEST
line 329	WITHOUT_CLASSIFICATION	0.9999924029977256	WITHOUT_CLASSIFICATION	7.597002274324222E-6	TEST
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999980669434593	WITHOUT_CLASSIFICATION	1.9330565408134304E-6	TEST
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999923384793341	WITHOUT_CLASSIFICATION	7.661520665776568E-6	TEST
dynamically increase	WITHOUT_CLASSIFICATION	0.9999995069122519	WITHOUT_CLASSIFICATION	4.930877481031944E-7	TEST
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999823978780662	WITHOUT_CLASSIFICATION	1.7602121933803507E-5	TEST
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999997242804141	WITHOUT_CLASSIFICATION	2.7571958590623045E-7	TEST
shift to yyN	WITHOUT_CLASSIFICATION	0.999994952288593	WITHOUT_CLASSIFICATION	5.04771140697242E-6	TEST
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999958427161441	WITHOUT_CLASSIFICATION	4.157283855954937E-6	TEST
leave stack alone	WITHOUT_CLASSIFICATION	0.9999992485501028	WITHOUT_CLASSIFICATION	7.514498972645122E-7	TEST
line 271	WITHOUT_CLASSIFICATION	0.9999974988809706	WITHOUT_CLASSIFICATION	2.5011190293359616E-6	TEST
line 274	WITHOUT_CLASSIFICATION	0.9999970116578448	WITHOUT_CLASSIFICATION	2.9883421550748053E-6	TEST
line 303	WITHOUT_CLASSIFICATION	0.9999939196650546	WITHOUT_CLASSIFICATION	6.080334945369428E-6	TEST
line 311	WITHOUT_CLASSIFICATION	0.9999958018741528	WITHOUT_CLASSIFICATION	4.198125847189212E-6	TEST
line 314	WITHOUT_CLASSIFICATION	0.9999958984929405	WITHOUT_CLASSIFICATION	4.101507059551909E-6	TEST
line 317	WITHOUT_CLASSIFICATION	0.9999960275060218	WITHOUT_CLASSIFICATION	3.972493978208128E-6	TEST
line 332	WITHOUT_CLASSIFICATION	0.9999940385372602	WITHOUT_CLASSIFICATION	5.961462739775304E-6	TEST
line 338	WITHOUT_CLASSIFICATION	0.9999941602796518	WITHOUT_CLASSIFICATION	5.839720348095258E-6	TEST
line 341	WITHOUT_CLASSIFICATION	0.9999958817600503	WITHOUT_CLASSIFICATION	4.118239949793032E-6	TEST
line 344	WITHOUT_CLASSIFICATION	0.9999947446499282	WITHOUT_CLASSIFICATION	5.255350071799729E-6	TEST
line 351	WITHOUT_CLASSIFICATION	0.9999957189975253	WITHOUT_CLASSIFICATION	4.281002474718451E-6	TEST
line 358	WITHOUT_CLASSIFICATION	0.9999943914583128	WITHOUT_CLASSIFICATION	5.608541687169725E-6	TEST
line 367	WITHOUT_CLASSIFICATION	0.9999951931829627	WITHOUT_CLASSIFICATION	4.8068170372260334E-6	TEST
line 372	WITHOUT_CLASSIFICATION	0.9999945357556747	WITHOUT_CLASSIFICATION	5.464244325349323E-6	TEST
line 378	WITHOUT_CLASSIFICATION	0.9999947182399211	WITHOUT_CLASSIFICATION	5.281760078889218E-6	TEST
line 382	WITHOUT_CLASSIFICATION	0.9999936893708555	WITHOUT_CLASSIFICATION	6.3106291445362515E-6	TEST
line 407	WITHOUT_CLASSIFICATION	0.9999975612444018	WITHOUT_CLASSIFICATION	2.4387555981344744E-6	TEST
line 411	WITHOUT_CLASSIFICATION	0.9999977046564004	WITHOUT_CLASSIFICATION	2.2953435996008023E-6	TEST
line 414	WITHOUT_CLASSIFICATION	0.9999975935849639	WITHOUT_CLASSIFICATION	2.4064150361591883E-6	TEST
line 417	WITHOUT_CLASSIFICATION	0.9999978280154694	WITHOUT_CLASSIFICATION	2.1719845306152997E-6	TEST
line 420	WITHOUT_CLASSIFICATION	0.9999966086711739	WITHOUT_CLASSIFICATION	3.3913288260384746E-6	TEST
line 426	WITHOUT_CLASSIFICATION	0.9999969447030366	WITHOUT_CLASSIFICATION	3.0552969634507646E-6	TEST
line 434	WITHOUT_CLASSIFICATION	0.999996150146536	WITHOUT_CLASSIFICATION	3.849853464024173E-6	TEST
line 443	WITHOUT_CLASSIFICATION	0.9999960466437722	WITHOUT_CLASSIFICATION	3.953356227892901E-6	TEST
line 446	WITHOUT_CLASSIFICATION	0.9999971318644817	WITHOUT_CLASSIFICATION	2.8681355182778514E-6	TEST
line 452	WITHOUT_CLASSIFICATION	0.9999969899798791	WITHOUT_CLASSIFICATION	3.010020120927951E-6	TEST
line 457	WITHOUT_CLASSIFICATION	0.9999974417917668	WITHOUT_CLASSIFICATION	2.5582082332963836E-6	TEST
line 464	WITHOUT_CLASSIFICATION	0.9999971322728952	WITHOUT_CLASSIFICATION	2.867727104666186E-6	TEST
line 467	WITHOUT_CLASSIFICATION	0.9999974327044711	WITHOUT_CLASSIFICATION	2.567295528927623E-6	TEST
line 470	WITHOUT_CLASSIFICATION	0.9999974888671513	WITHOUT_CLASSIFICATION	2.511132848662287E-6	TEST
line 479	WITHOUT_CLASSIFICATION	0.9999969788749294	WITHOUT_CLASSIFICATION	3.021125070477046E-6	TEST
line 484	WITHOUT_CLASSIFICATION	0.9999968086371114	WITHOUT_CLASSIFICATION	3.191362888593287E-6	TEST
line 486	WITHOUT_CLASSIFICATION	0.9999970302451958	WITHOUT_CLASSIFICATION	2.969754804059711E-6	TEST
line 492	WITHOUT_CLASSIFICATION	0.9999964228259146	WITHOUT_CLASSIFICATION	3.5771740853271374E-6	TEST
line 498	WITHOUT_CLASSIFICATION	0.9999965201583997	WITHOUT_CLASSIFICATION	3.479841600375845E-6	TEST
line 501	WITHOUT_CLASSIFICATION	0.9999977591762662	WITHOUT_CLASSIFICATION	2.240823733782591E-6	TEST
line 504	WITHOUT_CLASSIFICATION	0.9999972597087693	WITHOUT_CLASSIFICATION	2.7402912306858222E-6	TEST
line 507	WITHOUT_CLASSIFICATION	0.999997446550598	WITHOUT_CLASSIFICATION	2.5534494020576506E-6	TEST
line 510	WITHOUT_CLASSIFICATION	0.9999978154442506	WITHOUT_CLASSIFICATION	2.1845557494590475E-6	TEST
line 519	WITHOUT_CLASSIFICATION	0.9999973365679622	WITHOUT_CLASSIFICATION	2.6634320378848295E-6	TEST
line 525	WITHOUT_CLASSIFICATION	0.9999966988739813	WITHOUT_CLASSIFICATION	3.3011260185099903E-6	TEST
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999923384793341	WITHOUT_CLASSIFICATION	7.661520665776568E-6	TEST
line 537	WITHOUT_CLASSIFICATION	0.9999964005985373	WITHOUT_CLASSIFICATION	3.599401462623659E-6	TEST
line 540	WITHOUT_CLASSIFICATION	0.9999972319154832	WITHOUT_CLASSIFICATION	2.7680845168863933E-6	TEST
line 543	WITHOUT_CLASSIFICATION	0.9999962019067897	WITHOUT_CLASSIFICATION	3.798093210343317E-6	TEST
line 546	WITHOUT_CLASSIFICATION	0.9999972447397042	WITHOUT_CLASSIFICATION	2.755260295921642E-6	TEST
line 556	WITHOUT_CLASSIFICATION	0.9999970904823687	WITHOUT_CLASSIFICATION	2.9095176313013345E-6	TEST
line 559	WITHOUT_CLASSIFICATION	0.9999965992318339	WITHOUT_CLASSIFICATION	3.400768165961703E-6	TEST
line 563	WITHOUT_CLASSIFICATION	0.9999962558830013	WITHOUT_CLASSIFICATION	3.744116998527897E-6	TEST
line 566	WITHOUT_CLASSIFICATION	0.9999970738046488	WITHOUT_CLASSIFICATION	2.926195351259634E-6	TEST
line 569	WITHOUT_CLASSIFICATION	0.9999968372662966	WITHOUT_CLASSIFICATION	3.1627337033234452E-6	TEST
line 575	WITHOUT_CLASSIFICATION	0.9999971339621547	WITHOUT_CLASSIFICATION	2.86603784530005E-6	TEST
line 578	WITHOUT_CLASSIFICATION	0.9999970673573244	WITHOUT_CLASSIFICATION	2.9326426756346627E-6	TEST
line 587	WITHOUT_CLASSIFICATION	0.9999970688991884	WITHOUT_CLASSIFICATION	2.93110081161733E-6	TEST
line 596	WITHOUT_CLASSIFICATION	0.9999968418477884	WITHOUT_CLASSIFICATION	3.1581522116701996E-6	TEST
line 604	WITHOUT_CLASSIFICATION	0.9999972692485162	WITHOUT_CLASSIFICATION	2.7307514838233288E-6	TEST
line 607	WITHOUT_CLASSIFICATION	0.99999745895567	WITHOUT_CLASSIFICATION	2.5410443298839145E-6	TEST
line 610	WITHOUT_CLASSIFICATION	0.9999978519194087	WITHOUT_CLASSIFICATION	2.148080591255002E-6	TEST
line 613	WITHOUT_CLASSIFICATION	0.9999968738225643	WITHOUT_CLASSIFICATION	3.1261774357565074E-6	TEST
line 616	WITHOUT_CLASSIFICATION	0.9999975685989192	WITHOUT_CLASSIFICATION	2.4314010809135566E-6	TEST
line 634	WITHOUT_CLASSIFICATION	0.9999963572073054	WITHOUT_CLASSIFICATION	3.642792694592667E-6	TEST
line 638	WITHOUT_CLASSIFICATION	0.9999958627861817	WITHOUT_CLASSIFICATION	4.137213818211401E-6	TEST
line 643	WITHOUT_CLASSIFICATION	0.9999962836202096	WITHOUT_CLASSIFICATION	3.7163797903442074E-6	TEST
line 646	WITHOUT_CLASSIFICATION	0.9999970791485778	WITHOUT_CLASSIFICATION	2.9208514221023402E-6	TEST
line 655	WITHOUT_CLASSIFICATION	0.999997063669246	WITHOUT_CLASSIFICATION	2.9363307540850228E-6	TEST
line 660	WITHOUT_CLASSIFICATION	0.999996990916199	WITHOUT_CLASSIFICATION	3.0090838009361237E-6	TEST
line 667	WITHOUT_CLASSIFICATION	0.9999971856161014	WITHOUT_CLASSIFICATION	2.814383898552566E-6	TEST
line 670	WITHOUT_CLASSIFICATION	0.9999974629785527	WITHOUT_CLASSIFICATION	2.5370214472754475E-6	TEST
line 672	WITHOUT_CLASSIFICATION	0.9999970206141948	WITHOUT_CLASSIFICATION	2.9793858051626823E-6	TEST
line 696	WITHOUT_CLASSIFICATION	0.9999965962798791	WITHOUT_CLASSIFICATION	3.403720120928295E-6	TEST
line 701	WITHOUT_CLASSIFICATION	0.9999980133355216	WITHOUT_CLASSIFICATION	1.98666447840481E-6	TEST
line 717	WITHOUT_CLASSIFICATION	0.9999976154033018	WITHOUT_CLASSIFICATION	2.384596698271906E-6	TEST
line 720	WITHOUT_CLASSIFICATION	0.9999966707076015	WITHOUT_CLASSIFICATION	3.3292923985229228E-6	TEST
line 726	WITHOUT_CLASSIFICATION	0.999997000598218	WITHOUT_CLASSIFICATION	2.99940178187926E-6	TEST
line 729	WITHOUT_CLASSIFICATION	0.9999959599570526	WITHOUT_CLASSIFICATION	4.040042947452626E-6	TEST
line 732	WITHOUT_CLASSIFICATION	0.99999588019936	WITHOUT_CLASSIFICATION	4.11980063986614E-6	TEST
line 735	WITHOUT_CLASSIFICATION	0.9999963213118452	WITHOUT_CLASSIFICATION	3.6786881548681144E-6	TEST
line 738	WITHOUT_CLASSIFICATION	0.9999959641362841	WITHOUT_CLASSIFICATION	4.035863715867017E-6	TEST
line 751	WITHOUT_CLASSIFICATION	0.9999977491936158	WITHOUT_CLASSIFICATION	2.250806384240412E-6	TEST
line 754	WITHOUT_CLASSIFICATION	0.9999973215407116	WITHOUT_CLASSIFICATION	2.6784592882906924E-6	TEST
line 757	WITHOUT_CLASSIFICATION	0.9999971305770189	WITHOUT_CLASSIFICATION	2.8694229811270272E-6	TEST
line 760	WITHOUT_CLASSIFICATION	0.9999972866252838	WITHOUT_CLASSIFICATION	2.713374716159759E-6	TEST
line 763	WITHOUT_CLASSIFICATION	0.9999963533113263	WITHOUT_CLASSIFICATION	3.6466886737926044E-6	TEST
line 769	WITHOUT_CLASSIFICATION	0.9999969195741426	WITHOUT_CLASSIFICATION	3.080425857289916E-6	TEST
line 772	WITHOUT_CLASSIFICATION	0.9999967416258619	WITHOUT_CLASSIFICATION	3.2583741381256133E-6	TEST
line 775	WITHOUT_CLASSIFICATION	0.9999971235562178	WITHOUT_CLASSIFICATION	2.8764437820674644E-6	TEST
line 782	WITHOUT_CLASSIFICATION	0.9999966600801704	WITHOUT_CLASSIFICATION	3.339919829591363E-6	TEST
line 788	WITHOUT_CLASSIFICATION	0.9999968732922748	WITHOUT_CLASSIFICATION	3.126707725304691E-6	TEST
line 791	WITHOUT_CLASSIFICATION	0.9999973895642806	WITHOUT_CLASSIFICATION	2.610435719330047E-6	TEST
line 794	WITHOUT_CLASSIFICATION	0.9999968893492637	WITHOUT_CLASSIFICATION	3.110650736308436E-6	TEST
line 797	WITHOUT_CLASSIFICATION	0.9999966748330291	WITHOUT_CLASSIFICATION	3.3251669707990707E-6	TEST
line 803	WITHOUT_CLASSIFICATION	0.9999951520607478	WITHOUT_CLASSIFICATION	4.847939252179286E-6	TEST
line 806	WITHOUT_CLASSIFICATION	0.999997020990944	WITHOUT_CLASSIFICATION	2.979009056058122E-6	TEST
line 809	WITHOUT_CLASSIFICATION	0.9999965238748527	WITHOUT_CLASSIFICATION	3.4761251472482483E-6	TEST
line 815	WITHOUT_CLASSIFICATION	0.9999974300612954	WITHOUT_CLASSIFICATION	2.5699387046186677E-6	TEST
line 818	WITHOUT_CLASSIFICATION	0.9999972990298782	WITHOUT_CLASSIFICATION	2.7009701218870887E-6	TEST
line 821	WITHOUT_CLASSIFICATION	0.9999970963980569	WITHOUT_CLASSIFICATION	2.903601943200576E-6	TEST
line 824	WITHOUT_CLASSIFICATION	0.9999965584903855	WITHOUT_CLASSIFICATION	3.4415096143748357E-6	TEST
line 830	WITHOUT_CLASSIFICATION	0.9999959041925754	WITHOUT_CLASSIFICATION	4.0958074245391285E-6	TEST
line 833	WITHOUT_CLASSIFICATION	0.9999955708821145	WITHOUT_CLASSIFICATION	4.42911788546521E-6	TEST
line 836	WITHOUT_CLASSIFICATION	0.9999958439464373	WITHOUT_CLASSIFICATION	4.156053562672646E-6	TEST
line 839	WITHOUT_CLASSIFICATION	0.9999951315783844	WITHOUT_CLASSIFICATION	4.868421615588549E-6	TEST
line 842	WITHOUT_CLASSIFICATION	0.9999965118049812	WITHOUT_CLASSIFICATION	3.488195018689513E-6	TEST
line 848	WITHOUT_CLASSIFICATION	0.9999967305621948	WITHOUT_CLASSIFICATION	3.269437805198292E-6	TEST
line 852	WITHOUT_CLASSIFICATION	0.9999965211411557	WITHOUT_CLASSIFICATION	3.4788588442430655E-6	TEST
line 858	WITHOUT_CLASSIFICATION	0.999996733562505	WITHOUT_CLASSIFICATION	3.2664374950715653E-6	TEST
line 861	WITHOUT_CLASSIFICATION	0.9999974300759228	WITHOUT_CLASSIFICATION	2.5699240771052156E-6	TEST
line 868	WITHOUT_CLASSIFICATION	0.9999967249085256	WITHOUT_CLASSIFICATION	3.2750914742761763E-6	TEST
line 871	WITHOUT_CLASSIFICATION	0.9999975346132225	WITHOUT_CLASSIFICATION	2.465386777587388E-6	TEST
line 876	WITHOUT_CLASSIFICATION	0.9999970676599881	WITHOUT_CLASSIFICATION	2.9323400119904E-6	TEST
line 879	WITHOUT_CLASSIFICATION	0.99999656573277	WITHOUT_CLASSIFICATION	3.434267229909461E-6	TEST
line 883	WITHOUT_CLASSIFICATION	0.999995526834218	WITHOUT_CLASSIFICATION	4.4731657820691894E-6	TEST
line 893	WITHOUT_CLASSIFICATION	0.9999950965760006	WITHOUT_CLASSIFICATION	4.903423999396295E-6	TEST
line 896	WITHOUT_CLASSIFICATION	0.9999964699547302	WITHOUT_CLASSIFICATION	3.5300452698217764E-6	TEST
line 899	WITHOUT_CLASSIFICATION	0.9999961771076971	WITHOUT_CLASSIFICATION	3.822892302915146E-6	TEST
line 903	WITHOUT_CLASSIFICATION	0.9999946618299784	WITHOUT_CLASSIFICATION	5.338170021669812E-6	TEST
line 907	WITHOUT_CLASSIFICATION	0.999996963908223	WITHOUT_CLASSIFICATION	3.036091776898166E-6	TEST
line 915	WITHOUT_CLASSIFICATION	0.9999972312103093	WITHOUT_CLASSIFICATION	2.7687896907383787E-6	TEST
line 920	WITHOUT_CLASSIFICATION	0.999995853743731	WITHOUT_CLASSIFICATION	4.146256268956524E-6	TEST
line 923	WITHOUT_CLASSIFICATION	0.9999949492835125	WITHOUT_CLASSIFICATION	5.05071648758178E-6	TEST
line 926	WITHOUT_CLASSIFICATION	0.999996264728001	WITHOUT_CLASSIFICATION	3.7352719989410366E-6	TEST
line 932	WITHOUT_CLASSIFICATION	0.9999948698387876	WITHOUT_CLASSIFICATION	5.130161212395062E-6	TEST
line 936	WITHOUT_CLASSIFICATION	0.9999954773716303	WITHOUT_CLASSIFICATION	4.52262836974765E-6	TEST
line 940	WITHOUT_CLASSIFICATION	0.9999966929573388	WITHOUT_CLASSIFICATION	3.3070426612778415E-6	TEST
line 944	WITHOUT_CLASSIFICATION	0.9999964536499096	WITHOUT_CLASSIFICATION	3.5463500902728027E-6	TEST
line 948	WITHOUT_CLASSIFICATION	0.9999963352205211	WITHOUT_CLASSIFICATION	3.6647794789247236E-6	TEST
line 956	WITHOUT_CLASSIFICATION	0.9999967471458392	WITHOUT_CLASSIFICATION	3.2528541608793083E-6	TEST
line 960	WITHOUT_CLASSIFICATION	0.9999966394833602	WITHOUT_CLASSIFICATION	3.3605166398437496E-6	TEST
line 964	WITHOUT_CLASSIFICATION	0.9999967281346827	WITHOUT_CLASSIFICATION	3.271865317282294E-6	TEST
line 967	WITHOUT_CLASSIFICATION	0.9999968569223183	WITHOUT_CLASSIFICATION	3.143077681689795E-6	TEST
line 972	WITHOUT_CLASSIFICATION	0.9999963832061791	WITHOUT_CLASSIFICATION	3.6167938209319957E-6	TEST
line 978	WITHOUT_CLASSIFICATION	0.9999965039930682	WITHOUT_CLASSIFICATION	3.4960069317788382E-6	TEST
line 980	WITHOUT_CLASSIFICATION	0.9999963909584236	WITHOUT_CLASSIFICATION	3.609041576354949E-6	TEST
line 984	WITHOUT_CLASSIFICATION	0.9999963458480603	WITHOUT_CLASSIFICATION	3.654151939677444E-6	TEST
line 986	WITHOUT_CLASSIFICATION	0.9999963511783302	WITHOUT_CLASSIFICATION	3.648821669686058E-6	TEST
line 996	WITHOUT_CLASSIFICATION	0.999996475307097	WITHOUT_CLASSIFICATION	3.524692902962766E-6	TEST
line 1001	WITHOUT_CLASSIFICATION	0.9999979624559078	WITHOUT_CLASSIFICATION	2.037544092270374E-6	TEST
line 1004	WITHOUT_CLASSIFICATION	0.9999980412460671	WITHOUT_CLASSIFICATION	1.958753932955773E-6	TEST
line 1008	WITHOUT_CLASSIFICATION	0.9999975261703539	WITHOUT_CLASSIFICATION	2.4738296462348976E-6	TEST
line 1014	WITHOUT_CLASSIFICATION	0.999997964395225	WITHOUT_CLASSIFICATION	2.035604774996738E-6	TEST
line 1029	WITHOUT_CLASSIFICATION	0.9999969729760221	WITHOUT_CLASSIFICATION	3.0270239778918033E-6	TEST
line 1032	WITHOUT_CLASSIFICATION	0.9999964258653444	WITHOUT_CLASSIFICATION	3.574134655703198E-6	TEST
line 1034	WITHOUT_CLASSIFICATION	0.9999969214513588	WITHOUT_CLASSIFICATION	3.0785486412563863E-6	TEST
line 1045	WITHOUT_CLASSIFICATION	0.9999980721893591	WITHOUT_CLASSIFICATION	1.9278106408751032E-6	TEST
line 1048	WITHOUT_CLASSIFICATION	0.9999978281162704	WITHOUT_CLASSIFICATION	2.17188372952404E-6	TEST
line 1051	WITHOUT_CLASSIFICATION	0.9999975960159457	WITHOUT_CLASSIFICATION	2.403984054185781E-6	TEST
line 1058	WITHOUT_CLASSIFICATION	0.9999975432403984	WITHOUT_CLASSIFICATION	2.456759601606393E-6	TEST
line 1070	WITHOUT_CLASSIFICATION	0.9999982312299484	WITHOUT_CLASSIFICATION	1.7687700516639415E-6	TEST
line 1073	WITHOUT_CLASSIFICATION	0.9999974743033151	WITHOUT_CLASSIFICATION	2.5256966848553488E-6	TEST
line 1076	WITHOUT_CLASSIFICATION	0.9999981720680594	WITHOUT_CLASSIFICATION	1.827931940636469E-6	TEST
line 1079	WITHOUT_CLASSIFICATION	0.9999978601414854	WITHOUT_CLASSIFICATION	2.139858514633077E-6	TEST
line 1082	WITHOUT_CLASSIFICATION	0.9999971594879635	WITHOUT_CLASSIFICATION	2.84051203637815E-6	TEST
line 1089	WITHOUT_CLASSIFICATION	0.9999971127467502	WITHOUT_CLASSIFICATION	2.8872532498372603E-6	TEST
line 1097	WITHOUT_CLASSIFICATION	0.9999977892555292	WITHOUT_CLASSIFICATION	2.2107444707830477E-6	TEST
line 1100	WITHOUT_CLASSIFICATION	0.9999980128608197	WITHOUT_CLASSIFICATION	1.9871391802555425E-6	TEST
line 1103	WITHOUT_CLASSIFICATION	0.9999968531316739	WITHOUT_CLASSIFICATION	3.1468683261160964E-6	TEST
line 1107	WITHOUT_CLASSIFICATION	0.9999981959734576	WITHOUT_CLASSIFICATION	1.8040265423615932E-6	TEST
line 1111	WITHOUT_CLASSIFICATION	0.9999975107774145	WITHOUT_CLASSIFICATION	2.4892225854860964E-6	TEST
line 1113	WITHOUT_CLASSIFICATION	0.9999968098666858	WITHOUT_CLASSIFICATION	3.1901333142099067E-6	TEST
line 1115	WITHOUT_CLASSIFICATION	0.9999976737093395	WITHOUT_CLASSIFICATION	2.3262906605160566E-6	TEST
line 1119	WITHOUT_CLASSIFICATION	0.9999973266230613	WITHOUT_CLASSIFICATION	2.673376938660088E-6	TEST
line 1130	WITHOUT_CLASSIFICATION	0.9999970745929657	WITHOUT_CLASSIFICATION	2.925407034293348E-6	TEST
line 1133	WITHOUT_CLASSIFICATION	0.9999968243346117	WITHOUT_CLASSIFICATION	3.1756653883373946E-6	TEST
line 1135	WITHOUT_CLASSIFICATION	0.9999969818861271	WITHOUT_CLASSIFICATION	3.0181138729833725E-6	TEST
line 1137	WITHOUT_CLASSIFICATION	0.9999971617591717	WITHOUT_CLASSIFICATION	2.8382408282714627E-6	TEST
line 1140	WITHOUT_CLASSIFICATION	0.9999978290158275	WITHOUT_CLASSIFICATION	2.1709841725414813E-6	TEST
line 1151	WITHOUT_CLASSIFICATION	0.9999976463308211	WITHOUT_CLASSIFICATION	2.3536691788782413E-6	TEST
line 1154	WITHOUT_CLASSIFICATION	0.9999978077117175	WITHOUT_CLASSIFICATION	2.1922882823477975E-6	TEST
line 1158	WITHOUT_CLASSIFICATION	0.9999975846721342	WITHOUT_CLASSIFICATION	2.415327865808706E-6	TEST
line 1164	WITHOUT_CLASSIFICATION	0.9999978638919372	WITHOUT_CLASSIFICATION	2.1361080626721448E-6	TEST
line 1175	WITHOUT_CLASSIFICATION	0.9999978776620425	WITHOUT_CLASSIFICATION	2.1223379575738313E-6	TEST
line 1178	WITHOUT_CLASSIFICATION	0.9999976817087891	WITHOUT_CLASSIFICATION	2.31829121076625E-6	TEST
line 1187	WITHOUT_CLASSIFICATION	0.999997716484103	WITHOUT_CLASSIFICATION	2.2835158970204353E-6	TEST
line 1189	WITHOUT_CLASSIFICATION	0.9999972405392216	WITHOUT_CLASSIFICATION	2.7594607783818067E-6	TEST
line 1193	WITHOUT_CLASSIFICATION	0.9999965308784529	WITHOUT_CLASSIFICATION	3.4691215471636513E-6	TEST
line 1204	WITHOUT_CLASSIFICATION	0.9999974034623421	WITHOUT_CLASSIFICATION	2.5965376578887986E-6	TEST
line 1207	WITHOUT_CLASSIFICATION	0.999997579621431	WITHOUT_CLASSIFICATION	2.4203785691195543E-6	TEST
line 1210	WITHOUT_CLASSIFICATION	0.9999975866310952	WITHOUT_CLASSIFICATION	2.4133689049686808E-6	TEST
line 1214	WITHOUT_CLASSIFICATION	0.9999974520065527	WITHOUT_CLASSIFICATION	2.5479934474527946E-6	TEST
line 1234	WITHOUT_CLASSIFICATION	0.9999970464493094	WITHOUT_CLASSIFICATION	2.953550690580122E-6	TEST
line 1239	WITHOUT_CLASSIFICATION	0.9999963244119434	WITHOUT_CLASSIFICATION	3.6755880564990607E-6	TEST
line 1243	WITHOUT_CLASSIFICATION	0.9999967319079324	WITHOUT_CLASSIFICATION	3.2680920675686355E-6	TEST
line 1247	WITHOUT_CLASSIFICATION	0.9999976998311468	WITHOUT_CLASSIFICATION	2.300168853120447E-6	TEST
line 1251	WITHOUT_CLASSIFICATION	0.9999974335015986	WITHOUT_CLASSIFICATION	2.566498401302653E-6	TEST
line 1263	WITHOUT_CLASSIFICATION	0.9999966745460683	WITHOUT_CLASSIFICATION	3.325453931770482E-6	TEST
line 1269	WITHOUT_CLASSIFICATION	0.9999971909272537	WITHOUT_CLASSIFICATION	2.80907274626684E-6	TEST
line 1280	WITHOUT_CLASSIFICATION	0.9999973566303402	WITHOUT_CLASSIFICATION	2.643369659861881E-6	TEST
line 1283	WITHOUT_CLASSIFICATION	0.9999963379704708	WITHOUT_CLASSIFICATION	3.6620295290985126E-6	TEST
line 1290	WITHOUT_CLASSIFICATION	0.9999967133606132	WITHOUT_CLASSIFICATION	3.2866393866644943E-6	TEST
line 1296	WITHOUT_CLASSIFICATION	0.9999967704929237	WITHOUT_CLASSIFICATION	3.2295070763415868E-6	TEST
line 1299	WITHOUT_CLASSIFICATION	0.9999965025779817	WITHOUT_CLASSIFICATION	3.4974220182719575E-6	TEST
line 1302	WITHOUT_CLASSIFICATION	0.9999967315037422	WITHOUT_CLASSIFICATION	3.2684962577968623E-6	TEST
line 1309	WITHOUT_CLASSIFICATION	0.999996687095064	WITHOUT_CLASSIFICATION	3.3129049360316813E-6	TEST
line 1313	WITHOUT_CLASSIFICATION	0.9999966521518553	WITHOUT_CLASSIFICATION	3.347848144683353E-6	TEST
line 1315	WITHOUT_CLASSIFICATION	0.9999968905735186	WITHOUT_CLASSIFICATION	3.1094264814996224E-6	TEST
line 1320	WITHOUT_CLASSIFICATION	0.9999963212743836	WITHOUT_CLASSIFICATION	3.678725616301936E-6	TEST
line 1328	WITHOUT_CLASSIFICATION	0.9999962961322051	WITHOUT_CLASSIFICATION	3.7038677949405887E-6	TEST
line 1335	WITHOUT_CLASSIFICATION	0.9999968333601827	WITHOUT_CLASSIFICATION	3.1666398172354047E-6	TEST
line 1348	WITHOUT_CLASSIFICATION	0.9999968011863739	WITHOUT_CLASSIFICATION	3.1988136261481493E-6	TEST
line 1352	WITHOUT_CLASSIFICATION	0.9999965974964202	WITHOUT_CLASSIFICATION	3.4025035797448287E-6	TEST
line 1358	WITHOUT_CLASSIFICATION	0.999996696602095	WITHOUT_CLASSIFICATION	3.303397904976982E-6	TEST
line 1374	WITHOUT_CLASSIFICATION	0.9999971816733861	WITHOUT_CLASSIFICATION	2.818326613760234E-6	TEST
line 1381	WITHOUT_CLASSIFICATION	0.999996468198736	WITHOUT_CLASSIFICATION	3.531801263904002E-6	TEST
line 1387	WITHOUT_CLASSIFICATION	0.9999968465447884	WITHOUT_CLASSIFICATION	3.1534552117270844E-6	TEST
line 1392	WITHOUT_CLASSIFICATION	0.9999960540899937	WITHOUT_CLASSIFICATION	3.945910006261561E-6	TEST
line 1415	WITHOUT_CLASSIFICATION	0.9999977043585893	WITHOUT_CLASSIFICATION	2.2956414108250856E-6	TEST
line 1431	WITHOUT_CLASSIFICATION	0.9999968930043955	WITHOUT_CLASSIFICATION	3.1069956044510283E-6	TEST
line 1434	WITHOUT_CLASSIFICATION	0.99999691225739	WITHOUT_CLASSIFICATION	3.0877426100792563E-6	TEST
line 1440	WITHOUT_CLASSIFICATION	0.9999976962315418	WITHOUT_CLASSIFICATION	2.303768458275279E-6	TEST
line 1443	WITHOUT_CLASSIFICATION	0.9999968286050914	WITHOUT_CLASSIFICATION	3.171394908572234E-6	TEST
line 1453	WITHOUT_CLASSIFICATION	0.9999970759787613	WITHOUT_CLASSIFICATION	2.924021238631264E-6	TEST
line 1456	WITHOUT_CLASSIFICATION	0.9999979228429967	WITHOUT_CLASSIFICATION	2.077157003239869E-6	TEST
line 1462	WITHOUT_CLASSIFICATION	0.9999975779519085	WITHOUT_CLASSIFICATION	2.4220480914941903E-6	TEST
line 1465	WITHOUT_CLASSIFICATION	0.9999978383622447	WITHOUT_CLASSIFICATION	2.161637755289078E-6	TEST
line 1470	WITHOUT_CLASSIFICATION	0.9999979867478884	WITHOUT_CLASSIFICATION	2.0132521115518897E-6	TEST
line 1477	WITHOUT_CLASSIFICATION	0.9999977663925395	WITHOUT_CLASSIFICATION	2.2336074606546417E-6	TEST
line 1480	WITHOUT_CLASSIFICATION	0.9999976355901273	WITHOUT_CLASSIFICATION	2.364409872561519E-6	TEST
line 1485	WITHOUT_CLASSIFICATION	0.9999976113913864	WITHOUT_CLASSIFICATION	2.388608613529501E-6	TEST
line 1488	WITHOUT_CLASSIFICATION	0.9999974442622098	WITHOUT_CLASSIFICATION	2.555737790265628E-6	TEST
line 1496	WITHOUT_CLASSIFICATION	0.9999974989170285	WITHOUT_CLASSIFICATION	2.5010829715271643E-6	TEST
line 1502	WITHOUT_CLASSIFICATION	0.9999975317057124	WITHOUT_CLASSIFICATION	2.468294287558724E-6	TEST
line 1510	WITHOUT_CLASSIFICATION	0.9999978131867164	WITHOUT_CLASSIFICATION	2.1868132836011765E-6	TEST
line 1513	WITHOUT_CLASSIFICATION	0.9999968174282323	WITHOUT_CLASSIFICATION	3.1825717677187663E-6	TEST
line 1516	WITHOUT_CLASSIFICATION	0.9999977080643114	WITHOUT_CLASSIFICATION	2.291935688627685E-6	TEST
line 1533	WITHOUT_CLASSIFICATION	0.9999968553274484	WITHOUT_CLASSIFICATION	3.144672551532001E-6	TEST
line 1550	WITHOUT_CLASSIFICATION	0.99999764799124	WITHOUT_CLASSIFICATION	2.3520087599994694E-6	TEST
line 1553	WITHOUT_CLASSIFICATION	0.9999968192028604	WITHOUT_CLASSIFICATION	3.180797139524726E-6	TEST
line 1556	WITHOUT_CLASSIFICATION	0.9999977183120135	WITHOUT_CLASSIFICATION	2.281687986598147E-6	TEST
line 1565	WITHOUT_CLASSIFICATION	0.9999977058540219	WITHOUT_CLASSIFICATION	2.2941459780667516E-6	TEST
line 1568	WITHOUT_CLASSIFICATION	0.9999976360981829	WITHOUT_CLASSIFICATION	2.363901817094473E-6	TEST
line 1571	WITHOUT_CLASSIFICATION	0.999997768631536	WITHOUT_CLASSIFICATION	2.2313684639748553E-6	TEST
line 1574	WITHOUT_CLASSIFICATION	0.999997911698628	WITHOUT_CLASSIFICATION	2.0883013719480187E-6	TEST
line 1577	WITHOUT_CLASSIFICATION	0.999997754799626	WITHOUT_CLASSIFICATION	2.2452003738436678E-6	TEST
line 1587	WITHOUT_CLASSIFICATION	0.9999977037608577	WITHOUT_CLASSIFICATION	2.296239142347639E-6	TEST
line 1595	WITHOUT_CLASSIFICATION	0.9999973677653944	WITHOUT_CLASSIFICATION	2.6322346057150292E-6	TEST
line 1598	WITHOUT_CLASSIFICATION	0.9999972502877922	WITHOUT_CLASSIFICATION	2.749712207876349E-6	TEST
line 1600	WITHOUT_CLASSIFICATION	0.9999977560138553	WITHOUT_CLASSIFICATION	2.2439861446329307E-6	TEST
line 1609	WITHOUT_CLASSIFICATION	0.9999974849403048	WITHOUT_CLASSIFICATION	2.51505969507975E-6	TEST
line 1623	WITHOUT_CLASSIFICATION	0.9999967695792448	WITHOUT_CLASSIFICATION	3.2304207553082264E-6	TEST
line 1626	WITHOUT_CLASSIFICATION	0.9999974197070612	WITHOUT_CLASSIFICATION	2.5802929388382735E-6	TEST
line 1629	WITHOUT_CLASSIFICATION	0.9999967904642224	WITHOUT_CLASSIFICATION	3.209535777639796E-6	TEST
line 1632	WITHOUT_CLASSIFICATION	0.9999966829592218	WITHOUT_CLASSIFICATION	3.3170407782378245E-6	TEST
line 1638	WITHOUT_CLASSIFICATION	0.9999967506897591	WITHOUT_CLASSIFICATION	3.2493102410089397E-6	TEST
line 1641	WITHOUT_CLASSIFICATION	0.9999977221338135	WITHOUT_CLASSIFICATION	2.2778661865008016E-6	TEST
line 1644	WITHOUT_CLASSIFICATION	0.9999977231676629	WITHOUT_CLASSIFICATION	2.2768323370919906E-6	TEST
line 1649	WITHOUT_CLASSIFICATION	0.9999975232360157	WITHOUT_CLASSIFICATION	2.476763984349282E-6	TEST
line 1655	WITHOUT_CLASSIFICATION	0.999997698285083	WITHOUT_CLASSIFICATION	2.301714917084951E-6	TEST
line 1658	WITHOUT_CLASSIFICATION	0.999997626329367	WITHOUT_CLASSIFICATION	2.373670632997873E-6	TEST
line 1661	WITHOUT_CLASSIFICATION	0.9999975264727453	WITHOUT_CLASSIFICATION	2.473527254738812E-6	TEST
line 1672	WITHOUT_CLASSIFICATION	0.9999976689435512	WITHOUT_CLASSIFICATION	2.33105644868804E-6	TEST
line 1677	WITHOUT_CLASSIFICATION	0.9999977977894814	WITHOUT_CLASSIFICATION	2.2022105186451953E-6	TEST
line 1687	WITHOUT_CLASSIFICATION	0.9999977301238565	WITHOUT_CLASSIFICATION	2.2698761435376334E-6	TEST
line 1694	WITHOUT_CLASSIFICATION	0.999997512606508	WITHOUT_CLASSIFICATION	2.48739349201229E-6	TEST
line 1705	WITHOUT_CLASSIFICATION	0.9999977442958032	WITHOUT_CLASSIFICATION	2.2557041967990564E-6	TEST
line 1708	WITHOUT_CLASSIFICATION	0.99999748945866	WITHOUT_CLASSIFICATION	2.5105413401206776E-6	TEST
line 1725	WITHOUT_CLASSIFICATION	0.9999976605525739	WITHOUT_CLASSIFICATION	2.339447426103871E-6	TEST
line 1733	WITHOUT_CLASSIFICATION	0.9999969485087634	WITHOUT_CLASSIFICATION	3.0514912365425694E-6	TEST
line 1742	WITHOUT_CLASSIFICATION	0.9999976062376262	WITHOUT_CLASSIFICATION	2.3937623738708973E-6	TEST
line 1745	WITHOUT_CLASSIFICATION	0.9999979332905903	WITHOUT_CLASSIFICATION	2.0667094097115993E-6	TEST
line 1749	WITHOUT_CLASSIFICATION	0.9999975584483222	WITHOUT_CLASSIFICATION	2.441551677786996E-6	TEST
line 1757	WITHOUT_CLASSIFICATION	0.9999977379497133	WITHOUT_CLASSIFICATION	2.262050286761713E-6	TEST
line 1769	WITHOUT_CLASSIFICATION	0.9999975718016049	WITHOUT_CLASSIFICATION	2.4281983950825134E-6	TEST
line 1772	WITHOUT_CLASSIFICATION	0.9999974315894056	WITHOUT_CLASSIFICATION	2.5684105944600354E-6	TEST
line 1775	WITHOUT_CLASSIFICATION	0.999997732619963	WITHOUT_CLASSIFICATION	2.267380036965375E-6	TEST
line 1784	WITHOUT_CLASSIFICATION	0.999997703532653	WITHOUT_CLASSIFICATION	2.2964673470267393E-6	TEST
line 1808	WITHOUT_CLASSIFICATION	0.9999972340720672	WITHOUT_CLASSIFICATION	2.765927932932329E-6	TEST
line 1814	WITHOUT_CLASSIFICATION	0.999997487989081	WITHOUT_CLASSIFICATION	2.512010919067662E-6	TEST
line 1818	WITHOUT_CLASSIFICATION	0.9999972727614755	WITHOUT_CLASSIFICATION	2.727238524512416E-6	TEST
line 1822	WITHOUT_CLASSIFICATION	0.9999971263171465	WITHOUT_CLASSIFICATION	2.873682853514822E-6	TEST
force for args	WITHOUT_CLASSIFICATION	0.999998476498453	WITHOUT_CLASSIFICATION	1.5235015470295169E-6	TEST
XXX 0;	WITHOUT_CLASSIFICATION	0.9999251404659202	WITHOUT_CLASSIFICATION	7.485953407976565E-5	TEST
$$ = $3;	WITHOUT_CLASSIFICATION	0.9999767411134864	WITHOUT_CLASSIFICATION	2.325888651364708E-5	TEST
}	WITHOUT_CLASSIFICATION	0.9998900375538903	WITHOUT_CLASSIFICATION	1.0996244610967938E-4	TEST
last expression should not be void	WITHOUT_CLASSIFICATION	0.9999977034762909	WITHOUT_CLASSIFICATION	2.296523709161287E-6	TEST
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9999993831320182	WITHOUT_CLASSIFICATION	6.168679818018227E-7	TEST
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9999983736756476	WITHOUT_CLASSIFICATION	1.6263243522858728E-6	TEST
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9999985356603466	WITHOUT_CLASSIFICATION	1.4643396535065982E-6	TEST
NOEX_PRIVATE for toplevel	WITHOUT_CLASSIFICATION	0.9999976011407292	WITHOUT_CLASSIFICATION	2.3988592708041336E-6	TEST
mirko: check	WITHOUT_CLASSIFICATION	0.999995388572985	WITHOUT_CLASSIFICATION	4.611427015046359E-6	TEST
Include pipes on multiple arg type	WITHOUT_CLASSIFICATION	0.999999807779916	WITHOUT_CLASSIFICATION	1.9222008401007082E-7	TEST
line 529	WITHOUT_CLASSIFICATION	0.9999957982903703	WITHOUT_CLASSIFICATION	4.20170962958617E-6	TEST
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9999950476364439	WITHOUT_CLASSIFICATION	4.9523635560304675E-6	TEST
XXX	WITHOUT_CLASSIFICATION	0.9997016611314739	WITHOUT_CLASSIFICATION	2.9833886852620206E-4	TEST
zero length array	WITHOUT_CLASSIFICATION	0.9999966438463792	WITHOUT_CLASSIFICATION	3.356153620742824E-6	TEST
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9999850688847302	WITHOUT_CLASSIFICATION	1.4931115269771072E-5	TEST
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9999457311337552	WITHOUT_CLASSIFICATION	5.4268866244790176E-5	TEST
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9999978537315843	WITHOUT_CLASSIFICATION	2.146268415641087E-6	TEST
line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999996132218627	WITHOUT_CLASSIFICATION	3.86778137248237E-7	TEST
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999308934645	WITHOUT_CLASSIFICATION	6.910653547789933E-8	TEST
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999992050642045	WITHOUT_CLASSIFICATION	7.949357954776722E-7	TEST
line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999915516577482	WITHOUT_CLASSIFICATION	8.448342251820671E-6	TEST
local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999996529259841	WITHOUT_CLASSIFICATION	3.470740158427952E-7	TEST
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998189623415	WITHOUT_CLASSIFICATION	1.8103765850126458E-7	TEST
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998189623415	WITHOUT_CLASSIFICATION	1.8103765850126458E-7	TEST
We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999975338330989	WITHOUT_CLASSIFICATION	2.4661669012011516E-6	TEST
ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999879973738337	WITHOUT_CLASSIFICATION	1.2002626166330784E-5	TEST
odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999732163263012	WITHOUT_CLASSIFICATION	2.6783673698824132E-5	TEST
What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999992984219085	WITHOUT_CLASSIFICATION	7.015780914761056E-7	TEST
Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999983725263066	WITHOUT_CLASSIFICATION	1.6274736933651877E-6	TEST
We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999991629326439	WITHOUT_CLASSIFICATION	8.370673560937047E-7	TEST
Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.999999920189797	WITHOUT_CLASSIFICATION	7.981020298271683E-8	TEST
Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.999998602348703	WITHOUT_CLASSIFICATION	1.3976512970386882E-6	TEST
Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999996752548715	WITHOUT_CLASSIFICATION	3.2474512837670986E-7	TEST
__END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999992941774323	WITHOUT_CLASSIFICATION	7.05822567681133E-7	TEST
Parser states:	WITHOUT_CLASSIFICATION	0.9999860720015245	WITHOUT_CLASSIFICATION	1.3927998475630354E-5	TEST
Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999756667983256	WITHOUT_CLASSIFICATION	2.4333201674371433E-5	TEST
Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999999885715066	WITHOUT_CLASSIFICATION	1.1428493435175748E-8	TEST
LOCALVAR	WITHOUT_CLASSIFICATION	0.9999317961243873	WITHOUT_CLASSIFICATION	6.820387561263433E-5	TEST
CONSTANT	WITHOUT_CLASSIFICATION	0.9999427824374247	WITHOUT_CLASSIFICATION	5.7217562575204986E-5	TEST
INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999742163087998	WITHOUT_CLASSIFICATION	2.578369120025213E-5	TEST
Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999989784688489	WITHOUT_CLASSIFICATION	1.0215311511419025E-6	TEST
MRI: block_append	WITHOUT_CLASSIFICATION	0.9999982894522006	WITHOUT_CLASSIFICATION	1.710547799359861E-6	TEST
Reduces overhead in interp by not set position every single line we encounter.	WITHOUT_CLASSIFICATION	0.9999999568154189	WITHOUT_CLASSIFICATION	4.318458109659845E-8	TEST
Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999940439175569	WITHOUT_CLASSIFICATION	5.9560824432039075E-6	TEST
return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999907029148	WITHOUT_CLASSIFICATION	9.297085212995144E-9	TEST
Node	WITHOUT_CLASSIFICATION	0.9999656859454559	WITHOUT_CLASSIFICATION	3.431405454417959E-5	TEST
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9812069921540022	WITHOUT_CLASSIFICATION	0.01879300784599778	TEST
case CONSTNODE: handleUselessWarn(node, "a constant"); return;	WITHOUT_CLASSIFICATION	0.9999999554447122	WITHOUT_CLASSIFICATION	4.455528774555905E-8	TEST
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9812069921540022	WITHOUT_CLASSIFICATION	0.01879300784599778	TEST
case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;	WITHOUT_CLASSIFICATION	0.9999999544586406	WITHOUT_CLASSIFICATION	4.5541359328074485E-8	TEST
case SELFNODE: handleUselessWarn(node, "self"); return;	WITHOUT_CLASSIFICATION	0.9999999605604103	WITHOUT_CLASSIFICATION	3.943958974507855E-8	TEST
FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999972971169546	WITHOUT_CLASSIFICATION	2.702883045375083E-6	TEST
MRI: range_op	WITHOUT_CLASSIFICATION	0.9999871826603964	WITHOUT_CLASSIFICATION	1.2817339603495886E-5	TEST
Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999996846486279	WITHOUT_CLASSIFICATION	3.153513721430334E-7	TEST
foo()	WITHOUT_CLASSIFICATION	0.9999327489077499	WITHOUT_CLASSIFICATION	6.725109225012186E-5	TEST
foo()	WITHOUT_CLASSIFICATION	0.9999327489077499	WITHOUT_CLASSIFICATION	6.725109225012186E-5	TEST
foo()	WITHOUT_CLASSIFICATION	0.9999327489077499	WITHOUT_CLASSIFICATION	6.725109225012186E-5	TEST
tail must be EvStrNode at this point	WITHOUT_CLASSIFICATION	0.9999947520513474	WITHOUT_CLASSIFICATION	5.247948652548691E-6	TEST
Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999974860025674	WITHOUT_CLASSIFICATION	2.5139974326842468E-6	TEST
Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999995517758266	WITHOUT_CLASSIFICATION	4.482241733788264E-7	TEST
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999830921548261	WITHOUT_CLASSIFICATION	1.690784517392834E-5	TEST
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999830921548261	WITHOUT_CLASSIFICATION	1.690784517392834E-5	TEST
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999830921548261	WITHOUT_CLASSIFICATION	1.690784517392834E-5	TEST
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999830921548261	WITHOUT_CLASSIFICATION	1.690784517392834E-5	TEST
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999830921548261	WITHOUT_CLASSIFICATION	1.690784517392834E-5	TEST
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999830921548261	WITHOUT_CLASSIFICATION	1.690784517392834E-5	TEST
yyLen 542	WITHOUT_CLASSIFICATION	0.9999945639516277	WITHOUT_CLASSIFICATION	5.436048372351138E-6	TEST
yyLen 542	WITHOUT_CLASSIFICATION	0.9999945639516277	WITHOUT_CLASSIFICATION	5.436048372351138E-6	TEST
yyLen 542	WITHOUT_CLASSIFICATION	0.9999945639516277	WITHOUT_CLASSIFICATION	5.436048372351138E-6	TEST
yyLen 542	WITHOUT_CLASSIFICATION	0.9999945639516277	WITHOUT_CLASSIFICATION	5.436048372351138E-6	TEST
yyLen 542	WITHOUT_CLASSIFICATION	0.9999945639516277	WITHOUT_CLASSIFICATION	5.436048372351138E-6	TEST
yyDefRed 945	WITHOUT_CLASSIFICATION	0.999968075418278	WITHOUT_CLASSIFICATION	3.19245817218424E-5	TEST
yyDefRed 945	WITHOUT_CLASSIFICATION	0.999968075418278	WITHOUT_CLASSIFICATION	3.19245817218424E-5	TEST
yyDefRed 945	WITHOUT_CLASSIFICATION	0.999968075418278	WITHOUT_CLASSIFICATION	3.19245817218424E-5	TEST
yyDefRed 945	WITHOUT_CLASSIFICATION	0.999968075418278	WITHOUT_CLASSIFICATION	3.19245817218424E-5	TEST
yyDefRed 945	WITHOUT_CLASSIFICATION	0.999968075418278	WITHOUT_CLASSIFICATION	3.19245817218424E-5	TEST
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999709196820867	WITHOUT_CLASSIFICATION	2.908031791338283E-5	TEST
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999709196820867	WITHOUT_CLASSIFICATION	2.908031791338283E-5	TEST
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999709196820867	WITHOUT_CLASSIFICATION	2.908031791338283E-5	TEST
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999709196820867	WITHOUT_CLASSIFICATION	2.908031791338283E-5	TEST
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999709196820867	WITHOUT_CLASSIFICATION	2.908031791338283E-5	TEST
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999709196820867	WITHOUT_CLASSIFICATION	2.908031791338283E-5	TEST
yySindex 945	WITHOUT_CLASSIFICATION	0.9999914922233728	WITHOUT_CLASSIFICATION	8.507776627240282E-6	TEST
yySindex 945	WITHOUT_CLASSIFICATION	0.9999914922233728	WITHOUT_CLASSIFICATION	8.507776627240282E-6	TEST
yySindex 945	WITHOUT_CLASSIFICATION	0.9999914922233728	WITHOUT_CLASSIFICATION	8.507776627240282E-6	TEST
yySindex 945	WITHOUT_CLASSIFICATION	0.9999914922233728	WITHOUT_CLASSIFICATION	8.507776627240282E-6	TEST
yySindex 945	WITHOUT_CLASSIFICATION	0.9999914922233728	WITHOUT_CLASSIFICATION	8.507776627240282E-6	TEST
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999915138616893	WITHOUT_CLASSIFICATION	8.486138310734717E-6	TEST
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999915138616893	WITHOUT_CLASSIFICATION	8.486138310734717E-6	TEST
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999915138616893	WITHOUT_CLASSIFICATION	8.486138310734717E-6	TEST
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999915138616893	WITHOUT_CLASSIFICATION	8.486138310734717E-6	TEST
yyRindex 945	WITHOUT_CLASSIFICATION	0.9999915138616893	WITHOUT_CLASSIFICATION	8.486138310734717E-6	TEST
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999923384793341	WITHOUT_CLASSIFICATION	7.661520665776568E-6	TEST
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999923384793341	WITHOUT_CLASSIFICATION	7.661520665776568E-6	TEST
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999923384793341	WITHOUT_CLASSIFICATION	7.661520665776568E-6	TEST
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999923384793341	WITHOUT_CLASSIFICATION	7.661520665776568E-6	TEST
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999923384793341	WITHOUT_CLASSIFICATION	7.661520665776568E-6	TEST
dynamically increase	WITHOUT_CLASSIFICATION	0.9999995069122519	WITHOUT_CLASSIFICATION	4.930877481031944E-7	TEST
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999997242804141	WITHOUT_CLASSIFICATION	2.7571958590623045E-7	TEST
shift to yyN	WITHOUT_CLASSIFICATION	0.999994952288593	WITHOUT_CLASSIFICATION	5.04771140697242E-6	TEST
reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999958427161441	WITHOUT_CLASSIFICATION	4.157283855954937E-6	TEST
leave stack alone	WITHOUT_CLASSIFICATION	0.9999992485501028	WITHOUT_CLASSIFICATION	7.514498972645122E-7	TEST
line 321	WITHOUT_CLASSIFICATION	0.9999952823952536	WITHOUT_CLASSIFICATION	4.717604746342652E-6	TEST
line 351	WITHOUT_CLASSIFICATION	0.9999957189975253	WITHOUT_CLASSIFICATION	4.281002474718451E-6	TEST
line 382	WITHOUT_CLASSIFICATION	0.9999936893708555	WITHOUT_CLASSIFICATION	6.3106291445362515E-6	TEST
line 417	WITHOUT_CLASSIFICATION	0.9999978280154694	WITHOUT_CLASSIFICATION	2.1719845306152997E-6	TEST
line 420	WITHOUT_CLASSIFICATION	0.9999966086711739	WITHOUT_CLASSIFICATION	3.3913288260384746E-6	TEST
line 423	WITHOUT_CLASSIFICATION	0.9999958688916923	WITHOUT_CLASSIFICATION	4.131108307605145E-6	TEST
line 426	WITHOUT_CLASSIFICATION	0.9999969447030366	WITHOUT_CLASSIFICATION	3.0552969634507646E-6	TEST
line 280	WITHOUT_CLASSIFICATION	0.9999966039431089	WITHOUT_CLASSIFICATION	3.3960568910896525E-6	TEST
line 283	WITHOUT_CLASSIFICATION	0.9999952951991675	WITHOUT_CLASSIFICATION	4.704800832494973E-6	TEST
line 296	WITHOUT_CLASSIFICATION	0.9999958719963751	WITHOUT_CLASSIFICATION	4.1280036248767584E-6	TEST
line 324	WITHOUT_CLASSIFICATION	0.999994408151069	WITHOUT_CLASSIFICATION	5.591848931016043E-6	TEST
line 327	WITHOUT_CLASSIFICATION	0.9999945576887517	WITHOUT_CLASSIFICATION	5.44231124841248E-6	TEST
line 331	WITHOUT_CLASSIFICATION	0.9999956512235637	WITHOUT_CLASSIFICATION	4.3487764362982744E-6	TEST
line 333	WITHOUT_CLASSIFICATION	0.9999943080918928	WITHOUT_CLASSIFICATION	5.6919081071863154E-6	TEST
line 336	WITHOUT_CLASSIFICATION	0.9999947445045728	WITHOUT_CLASSIFICATION	5.255495427184771E-6	TEST
line 342	WITHOUT_CLASSIFICATION	0.9999943961711015	WITHOUT_CLASSIFICATION	5.603828898403353E-6	TEST
line 345	WITHOUT_CLASSIFICATION	0.9999952233079927	WITHOUT_CLASSIFICATION	4.776692007307892E-6	TEST
line 348	WITHOUT_CLASSIFICATION	0.999994569022141	WITHOUT_CLASSIFICATION	5.430977858895778E-6	TEST
line 354	WITHOUT_CLASSIFICATION	0.9999949056096078	WITHOUT_CLASSIFICATION	5.094390392186903E-6	TEST
line 368	WITHOUT_CLASSIFICATION	0.9999944382469449	WITHOUT_CLASSIFICATION	5.561753055061082E-6	TEST
line 377	WITHOUT_CLASSIFICATION	0.9999948377833491	WITHOUT_CLASSIFICATION	5.162216650947353E-6	TEST
line 388	WITHOUT_CLASSIFICATION	0.9999940930096746	WITHOUT_CLASSIFICATION	5.906990325485027E-6	TEST
line 392	WITHOUT_CLASSIFICATION	0.9999933088767243	WITHOUT_CLASSIFICATION	6.691123275712115E-6	TEST
line 397	WITHOUT_CLASSIFICATION	0.9999943576250677	WITHOUT_CLASSIFICATION	5.642374932271372E-6	TEST
line 429	WITHOUT_CLASSIFICATION	0.9999958846691415	WITHOUT_CLASSIFICATION	4.115330858559553E-6	TEST
line 432	WITHOUT_CLASSIFICATION	0.9999958405720445	WITHOUT_CLASSIFICATION	4.159427955577472E-6	TEST
line 436	WITHOUT_CLASSIFICATION	0.9999963329531553	WITHOUT_CLASSIFICATION	3.6670468447871E-6	TEST
line 445	WITHOUT_CLASSIFICATION	0.9999971548052551	WITHOUT_CLASSIFICATION	2.845194744828249E-6	TEST
line 448	WITHOUT_CLASSIFICATION	0.9999968067375443	WITHOUT_CLASSIFICATION	3.193262455627045E-6	TEST
line 454	WITHOUT_CLASSIFICATION	0.9999971413682794	WITHOUT_CLASSIFICATION	2.8586317205466034E-6	TEST
line 459	WITHOUT_CLASSIFICATION	0.9999969437188799	WITHOUT_CLASSIFICATION	3.0562811200182294E-6	TEST
line 466	WITHOUT_CLASSIFICATION	0.9999971168416897	WITHOUT_CLASSIFICATION	2.883158310446178E-6	TEST
line 469	WITHOUT_CLASSIFICATION	0.9999968837822163	WITHOUT_CLASSIFICATION	3.1162177837042983E-6	TEST
line 478	WITHOUT_CLASSIFICATION	0.9999971495014781	WITHOUT_CLASSIFICATION	2.8504985218069383E-6	TEST
line 481	WITHOUT_CLASSIFICATION	0.9999974897501925	WITHOUT_CLASSIFICATION	2.5102498074216895E-6	TEST
line 488	WITHOUT_CLASSIFICATION	0.9999968157304183	WITHOUT_CLASSIFICATION	3.184269581666514E-6	TEST
line 494	WITHOUT_CLASSIFICATION	0.9999966222007008	WITHOUT_CLASSIFICATION	3.377799299185219E-6	TEST
line 497	WITHOUT_CLASSIFICATION	0.9999969835038596	WITHOUT_CLASSIFICATION	3.016496140416303E-6	TEST
line 503	WITHOUT_CLASSIFICATION	0.9999955091640811	WITHOUT_CLASSIFICATION	4.490835918985107E-6	TEST
line 506	WITHOUT_CLASSIFICATION	0.9999972417338183	WITHOUT_CLASSIFICATION	2.7582661815612597E-6	TEST
line 509	WITHOUT_CLASSIFICATION	0.9999967815042986	WITHOUT_CLASSIFICATION	3.2184957014067763E-6	TEST
line 512	WITHOUT_CLASSIFICATION	0.9999973671553263	WITHOUT_CLASSIFICATION	2.63284467372853E-6	TEST
line 521	WITHOUT_CLASSIFICATION	0.9999973893159828	WITHOUT_CLASSIFICATION	2.6106840170877782E-6	TEST
line 526	WITHOUT_CLASSIFICATION	0.999996878928284	WITHOUT_CLASSIFICATION	3.1210717159777797E-6	TEST
line 540	WITHOUT_CLASSIFICATION	0.9999972319154832	WITHOUT_CLASSIFICATION	2.7680845168863933E-6	TEST
line 543	WITHOUT_CLASSIFICATION	0.9999962019067897	WITHOUT_CLASSIFICATION	3.798093210343317E-6	TEST
line 546	WITHOUT_CLASSIFICATION	0.9999972447397042	WITHOUT_CLASSIFICATION	2.755260295921642E-6	TEST
line 566	WITHOUT_CLASSIFICATION	0.9999970738046488	WITHOUT_CLASSIFICATION	2.926195351259634E-6	TEST
line 610	WITHOUT_CLASSIFICATION	0.9999978519194087	WITHOUT_CLASSIFICATION	2.148080591255002E-6	TEST
line 672	WITHOUT_CLASSIFICATION	0.9999970206141948	WITHOUT_CLASSIFICATION	2.9793858051626823E-6	TEST
line 691	WITHOUT_CLASSIFICATION	0.9999973282573378	WITHOUT_CLASSIFICATION	2.67174266222576E-6	TEST
line 696	WITHOUT_CLASSIFICATION	0.9999965962798791	WITHOUT_CLASSIFICATION	3.403720120928295E-6	TEST
line 772	WITHOUT_CLASSIFICATION	0.9999967416258619	WITHOUT_CLASSIFICATION	3.2583741381256133E-6	TEST
line 782	WITHOUT_CLASSIFICATION	0.9999966600801704	WITHOUT_CLASSIFICATION	3.339919829591363E-6	TEST
line 785	WITHOUT_CLASSIFICATION	0.9999970777591849	WITHOUT_CLASSIFICATION	2.922240815139913E-6	TEST
line 788	WITHOUT_CLASSIFICATION	0.9999968732922748	WITHOUT_CLASSIFICATION	3.126707725304691E-6	TEST
line 791	WITHOUT_CLASSIFICATION	0.9999973895642806	WITHOUT_CLASSIFICATION	2.610435719330047E-6	TEST
line 534	WITHOUT_CLASSIFICATION	0.9999963158933394	WITHOUT_CLASSIFICATION	3.6841066605675722E-6	TEST
line 549	WITHOUT_CLASSIFICATION	0.9999967710492914	WITHOUT_CLASSIFICATION	3.2289507085761173E-6	TEST
line 552	WITHOUT_CLASSIFICATION	0.9999966380452715	WITHOUT_CLASSIFICATION	3.361954728497523E-6	TEST
line 558	WITHOUT_CLASSIFICATION	0.9999967368583654	WITHOUT_CLASSIFICATION	3.2631416346172738E-6	TEST
line 561	WITHOUT_CLASSIFICATION	0.9999977116995695	WITHOUT_CLASSIFICATION	2.2883004304826303E-6	TEST
line 571	WITHOUT_CLASSIFICATION	0.9999977686957748	WITHOUT_CLASSIFICATION	2.2313042251726203E-6	TEST
line 574	WITHOUT_CLASSIFICATION	0.9999973340329873	WITHOUT_CLASSIFICATION	2.6659670128210987E-6	TEST
line 579	WITHOUT_CLASSIFICATION	0.9999968918137656	WITHOUT_CLASSIFICATION	3.1081862343608864E-6	TEST
line 586	WITHOUT_CLASSIFICATION	0.9999969579184126	WITHOUT_CLASSIFICATION	3.0420815874543843E-6	TEST
line 589	WITHOUT_CLASSIFICATION	0.9999964583252716	WITHOUT_CLASSIFICATION	3.541674728290157E-6	TEST
line 592	WITHOUT_CLASSIFICATION	0.999996375024891	WITHOUT_CLASSIFICATION	3.624975108978498E-6	TEST
line 595	WITHOUT_CLASSIFICATION	0.9999966087747838	WITHOUT_CLASSIFICATION	3.391225216291273E-6	TEST
line 598	WITHOUT_CLASSIFICATION	0.9999964742512072	WITHOUT_CLASSIFICATION	3.5257487927392462E-6	TEST
line 623	WITHOUT_CLASSIFICATION	0.9999958746182387	WITHOUT_CLASSIFICATION	4.125381761260516E-6	TEST
line 627	WITHOUT_CLASSIFICATION	0.9999970683055596	WITHOUT_CLASSIFICATION	2.9316944404158495E-6	TEST
line 630	WITHOUT_CLASSIFICATION	0.9999963306628729	WITHOUT_CLASSIFICATION	3.6693371270600668E-6	TEST
line 633	WITHOUT_CLASSIFICATION	0.9999960320659527	WITHOUT_CLASSIFICATION	3.96793404725937E-6	TEST
line 639	WITHOUT_CLASSIFICATION	0.9999956385047162	WITHOUT_CLASSIFICATION	4.3614952837319114E-6	TEST
line 648	WITHOUT_CLASSIFICATION	0.9999969889050032	WITHOUT_CLASSIFICATION	3.0110949968282092E-6	TEST
line 657	WITHOUT_CLASSIFICATION	0.9999973586938107	WITHOUT_CLASSIFICATION	2.641306189290476E-6	TEST
line 661	WITHOUT_CLASSIFICATION	0.9999975283572522	WITHOUT_CLASSIFICATION	2.4716427477407726E-6	TEST
line 666	WITHOUT_CLASSIFICATION	0.9999968390883963	WITHOUT_CLASSIFICATION	3.16091160372043E-6	TEST
line 678	WITHOUT_CLASSIFICATION	0.9999971340424991	WITHOUT_CLASSIFICATION	2.865957500738529E-6	TEST
line 682	WITHOUT_CLASSIFICATION	0.9999965466680023	WITHOUT_CLASSIFICATION	3.453331997667389E-6	TEST
line 688	WITHOUT_CLASSIFICATION	0.9999967675140622	WITHOUT_CLASSIFICATION	3.2324859377749603E-6	TEST
line 699	WITHOUT_CLASSIFICATION	0.9999965869260673	WITHOUT_CLASSIFICATION	3.4130739326595785E-6	TEST
line 706	WITHOUT_CLASSIFICATION	0.9999974757763507	WITHOUT_CLASSIFICATION	2.524223649276367E-6	TEST
line 708	WITHOUT_CLASSIFICATION	0.9999968154176733	WITHOUT_CLASSIFICATION	3.184582326694418E-6	TEST
line 727	WITHOUT_CLASSIFICATION	0.9999967711323997	WITHOUT_CLASSIFICATION	3.2288676004183757E-6	TEST
line 737	WITHOUT_CLASSIFICATION	0.9999961276041436	WITHOUT_CLASSIFICATION	3.872395856325292E-6	TEST
line 753	WITHOUT_CLASSIFICATION	0.9999963350373547	WITHOUT_CLASSIFICATION	3.6649626451117596E-6	TEST
line 779	WITHOUT_CLASSIFICATION	0.999996661877151	WITHOUT_CLASSIFICATION	3.3381228489518865E-6	TEST
line 801	WITHOUT_CLASSIFICATION	0.9999975798439914	WITHOUT_CLASSIFICATION	2.4201560085201767E-6	TEST
line 808	WITHOUT_CLASSIFICATION	0.9999963816334496	WITHOUT_CLASSIFICATION	3.618366550417078E-6	TEST
line 811	WITHOUT_CLASSIFICATION	0.9999973813812605	WITHOUT_CLASSIFICATION	2.618618739480969E-6	TEST
line 817	WITHOUT_CLASSIFICATION	0.9999975220919028	WITHOUT_CLASSIFICATION	2.47790809718428E-6	TEST
line 842	WITHOUT_CLASSIFICATION	0.9999965118049812	WITHOUT_CLASSIFICATION	3.488195018689513E-6	TEST
line 845	WITHOUT_CLASSIFICATION	0.9999969883867235	WITHOUT_CLASSIFICATION	3.011613276529544E-6	TEST
line 848	WITHOUT_CLASSIFICATION	0.9999967305621948	WITHOUT_CLASSIFICATION	3.269437805198292E-6	TEST
line 893	WITHOUT_CLASSIFICATION	0.9999950965760006	WITHOUT_CLASSIFICATION	4.903423999396295E-6	TEST
line 899	WITHOUT_CLASSIFICATION	0.9999961771076971	WITHOUT_CLASSIFICATION	3.822892302915146E-6	TEST
line 932	WITHOUT_CLASSIFICATION	0.9999948698387876	WITHOUT_CLASSIFICATION	5.130161212395062E-6	TEST
line 944	WITHOUT_CLASSIFICATION	0.9999964536499096	WITHOUT_CLASSIFICATION	3.5463500902728027E-6	TEST
line 960	WITHOUT_CLASSIFICATION	0.9999966394833602	WITHOUT_CLASSIFICATION	3.3605166398437496E-6	TEST
line 980	WITHOUT_CLASSIFICATION	0.9999963909584236	WITHOUT_CLASSIFICATION	3.609041576354949E-6	TEST
line 1004	WITHOUT_CLASSIFICATION	0.9999980412460671	WITHOUT_CLASSIFICATION	1.958753932955773E-6	TEST
line 1038	WITHOUT_CLASSIFICATION	0.9999964730139482	WITHOUT_CLASSIFICATION	3.5269860516787E-6	TEST
line 820	WITHOUT_CLASSIFICATION	0.9999961469720954	WITHOUT_CLASSIFICATION	3.853027904628107E-6	TEST
line 826	WITHOUT_CLASSIFICATION	0.9999965287580725	WITHOUT_CLASSIFICATION	3.4712419274578167E-6	TEST
line 829	WITHOUT_CLASSIFICATION	0.9999953244129357	WITHOUT_CLASSIFICATION	4.6755870643461835E-6	TEST
line 832	WITHOUT_CLASSIFICATION	0.9999952856754718	WITHOUT_CLASSIFICATION	4.714324528194287E-6	TEST
line 851	WITHOUT_CLASSIFICATION	0.9999974223830409	WITHOUT_CLASSIFICATION	2.577616959101798E-6	TEST
line 857	WITHOUT_CLASSIFICATION	0.9999970544622097	WITHOUT_CLASSIFICATION	2.9455377902831196E-6	TEST
line 860	WITHOUT_CLASSIFICATION	0.9999968712643638	WITHOUT_CLASSIFICATION	3.1287356361917614E-6	TEST
line 863	WITHOUT_CLASSIFICATION	0.9999957950801599	WITHOUT_CLASSIFICATION	4.204919840134368E-6	TEST
line 866	WITHOUT_CLASSIFICATION	0.9999967136748318	WITHOUT_CLASSIFICATION	3.2863251682174965E-6	TEST
line 869	WITHOUT_CLASSIFICATION	0.9999964480255693	WITHOUT_CLASSIFICATION	3.551974430741025E-6	TEST
line 875	WITHOUT_CLASSIFICATION	0.9999970407090458	WITHOUT_CLASSIFICATION	2.959290954162994E-6	TEST
line 884	WITHOUT_CLASSIFICATION	0.9999967322361925	WITHOUT_CLASSIFICATION	3.26776380752558E-6	TEST
line 887	WITHOUT_CLASSIFICATION	0.9999968560430044	WITHOUT_CLASSIFICATION	3.143956995712149E-6	TEST
line 890	WITHOUT_CLASSIFICATION	0.9999964248722368	WITHOUT_CLASSIFICATION	3.5751277632499136E-6	TEST
line 902	WITHOUT_CLASSIFICATION	0.9999962450286456	WITHOUT_CLASSIFICATION	3.7549713543793057E-6	TEST
line 909	WITHOUT_CLASSIFICATION	0.9999964738640098	WITHOUT_CLASSIFICATION	3.526135990130625E-6	TEST
line 912	WITHOUT_CLASSIFICATION	0.9999968514194113	WITHOUT_CLASSIFICATION	3.148580588705528E-6	TEST
line 916	WITHOUT_CLASSIFICATION	0.9999972656188645	WITHOUT_CLASSIFICATION	2.7343811355975744E-6	TEST
line 922	WITHOUT_CLASSIFICATION	0.9999959778475288	WITHOUT_CLASSIFICATION	4.022152471260108E-6	TEST
line 928	WITHOUT_CLASSIFICATION	0.9999958416568616	WITHOUT_CLASSIFICATION	4.158343138329699E-6	TEST
line 941	WITHOUT_CLASSIFICATION	0.9999972209814727	WITHOUT_CLASSIFICATION	2.7790185273344056E-6	TEST
line 947	WITHOUT_CLASSIFICATION	0.9999968169981653	WITHOUT_CLASSIFICATION	3.1830018346341515E-6	TEST
line 951	WITHOUT_CLASSIFICATION	0.9999972150805682	WITHOUT_CLASSIFICATION	2.784919431761008E-6	TEST
line 955	WITHOUT_CLASSIFICATION	0.9999964616545344	WITHOUT_CLASSIFICATION	3.5383454656578966E-6	TEST
line 965	WITHOUT_CLASSIFICATION	0.9999967017950362	WITHOUT_CLASSIFICATION	3.298204963755119E-6	TEST
line 969	WITHOUT_CLASSIFICATION	0.9999964859691508	WITHOUT_CLASSIFICATION	3.5140308491862504E-6	TEST
line 977	WITHOUT_CLASSIFICATION	0.9999965831192261	WITHOUT_CLASSIFICATION	3.4168807738478036E-6	TEST
line 983	WITHOUT_CLASSIFICATION	0.9999949979172144	WITHOUT_CLASSIFICATION	5.0020827856837644E-6	TEST
line 1013	WITHOUT_CLASSIFICATION	0.9999971959683808	WITHOUT_CLASSIFICATION	2.8040316191735962E-6	TEST
line 1023	WITHOUT_CLASSIFICATION	0.999996961351075	WITHOUT_CLASSIFICATION	3.038648925095311E-6	TEST
line 1035	WITHOUT_CLASSIFICATION	0.9999967851537762	WITHOUT_CLASSIFICATION	3.214846223710914E-6	TEST
line 1041	WITHOUT_CLASSIFICATION	0.9999978974694491	WITHOUT_CLASSIFICATION	2.1025305507998865E-6	TEST
line 1043	WITHOUT_CLASSIFICATION	0.9999973109139698	WITHOUT_CLASSIFICATION	2.6890860302049898E-6	TEST
line 1054	WITHOUT_CLASSIFICATION	0.9999977583186952	WITHOUT_CLASSIFICATION	2.2416813048318435E-6	TEST
line 1057	WITHOUT_CLASSIFICATION	0.9999978473511583	WITHOUT_CLASSIFICATION	2.1526488417809034E-6	TEST
line 1060	WITHOUT_CLASSIFICATION	0.9999978918731423	WITHOUT_CLASSIFICATION	2.108126857709991E-6	TEST
line 1069	WITHOUT_CLASSIFICATION	0.9999976958723963	WITHOUT_CLASSIFICATION	2.304127603730375E-6	TEST
line 1075	WITHOUT_CLASSIFICATION	0.9999981552676397	WITHOUT_CLASSIFICATION	1.844732360347147E-6	TEST
line 1105	WITHOUT_CLASSIFICATION	0.9999977995773639	WITHOUT_CLASSIFICATION	2.200422636118425E-6	TEST
line 1111	WITHOUT_CLASSIFICATION	0.9999975107774145	WITHOUT_CLASSIFICATION	2.4892225854860964E-6	TEST
line 1122	WITHOUT_CLASSIFICATION	0.9999973430585718	WITHOUT_CLASSIFICATION	2.6569414281985008E-6	TEST
line 1130	WITHOUT_CLASSIFICATION	0.9999970745929657	WITHOUT_CLASSIFICATION	2.925407034293348E-6	TEST
line 1140	WITHOUT_CLASSIFICATION	0.9999978290158275	WITHOUT_CLASSIFICATION	2.1709841725414813E-6	TEST
line 1158	WITHOUT_CLASSIFICATION	0.9999975846721342	WITHOUT_CLASSIFICATION	2.415327865808706E-6	TEST
line 1204	WITHOUT_CLASSIFICATION	0.9999974034623421	WITHOUT_CLASSIFICATION	2.5965376578887986E-6	TEST
line 1207	WITHOUT_CLASSIFICATION	0.999997579621431	WITHOUT_CLASSIFICATION	2.4203785691195543E-6	TEST
line 1247	WITHOUT_CLASSIFICATION	0.9999976998311468	WITHOUT_CLASSIFICATION	2.300168853120447E-6	TEST
line 1251	WITHOUT_CLASSIFICATION	0.9999974335015986	WITHOUT_CLASSIFICATION	2.566498401302653E-6	TEST
line 1261	WITHOUT_CLASSIFICATION	0.9999974053053633	WITHOUT_CLASSIFICATION	2.594694636771187E-6	TEST
line 1078	WITHOUT_CLASSIFICATION	0.9999979863830701	WITHOUT_CLASSIFICATION	2.0136169297880904E-6	TEST
line 1084	WITHOUT_CLASSIFICATION	0.9999975166402258	WITHOUT_CLASSIFICATION	2.4833597741402418E-6	TEST
line 1087	WITHOUT_CLASSIFICATION	0.9999976108048279	WITHOUT_CLASSIFICATION	2.3891951721817286E-6	TEST
line 1090	WITHOUT_CLASSIFICATION	0.9999975798440937	WITHOUT_CLASSIFICATION	2.420155906258408E-6	TEST
line 1093	WITHOUT_CLASSIFICATION	0.9999968196332014	WITHOUT_CLASSIFICATION	3.1803667987002435E-6	TEST
line 1114	WITHOUT_CLASSIFICATION	0.99999768410668	WITHOUT_CLASSIFICATION	2.315893319940061E-6	TEST
line 1116	WITHOUT_CLASSIFICATION	0.9999977098673035	WITHOUT_CLASSIFICATION	2.2901326964960508E-6	TEST
line 1118	WITHOUT_CLASSIFICATION	0.9999974723918876	WITHOUT_CLASSIFICATION	2.527608112325224E-6	TEST
line 1124	WITHOUT_CLASSIFICATION	0.9999975534425478	WITHOUT_CLASSIFICATION	2.4465574522656785E-6	TEST
line 1126	WITHOUT_CLASSIFICATION	0.9999975323110177	WITHOUT_CLASSIFICATION	2.4676889822122065E-6	TEST
line 1138	WITHOUT_CLASSIFICATION	0.9999966888476166	WITHOUT_CLASSIFICATION	3.311152383343189E-6	TEST
line 1144	WITHOUT_CLASSIFICATION	0.9999976675454594	WITHOUT_CLASSIFICATION	2.3324545405258406E-6	TEST
line 1149	WITHOUT_CLASSIFICATION	0.9999974628072847	WITHOUT_CLASSIFICATION	2.5371927151930176E-6	TEST
line 1155	WITHOUT_CLASSIFICATION	0.9999976576348804	WITHOUT_CLASSIFICATION	2.3423651195384707E-6	TEST
line 1162	WITHOUT_CLASSIFICATION	0.9999975734125008	WITHOUT_CLASSIFICATION	2.426587499222457E-6	TEST
line 1173	WITHOUT_CLASSIFICATION	0.9999970942227124	WITHOUT_CLASSIFICATION	2.90577728753587E-6	TEST
line 1179	WITHOUT_CLASSIFICATION	0.9999975370192419	WITHOUT_CLASSIFICATION	2.462980758060976E-6	TEST
line 1182	WITHOUT_CLASSIFICATION	0.9999972852170425	WITHOUT_CLASSIFICATION	2.714782957641374E-6	TEST
line 1190	WITHOUT_CLASSIFICATION	0.9999974759181942	WITHOUT_CLASSIFICATION	2.5240818057733416E-6	TEST
line 1196	WITHOUT_CLASSIFICATION	0.9999975025581187	WITHOUT_CLASSIFICATION	2.4974418811900935E-6	TEST
line 1213	WITHOUT_CLASSIFICATION	0.9999964826349075	WITHOUT_CLASSIFICATION	3.5173650926288584E-6	TEST
line 1217	WITHOUT_CLASSIFICATION	0.9999975257208708	WITHOUT_CLASSIFICATION	2.4742791291492567E-6	TEST
line 1231	WITHOUT_CLASSIFICATION	0.9999966779101526	WITHOUT_CLASSIFICATION	3.3220898473617915E-6	TEST
line 1236	WITHOUT_CLASSIFICATION	0.9999968552793634	WITHOUT_CLASSIFICATION	3.144720636622165E-6	TEST
line 1244	WITHOUT_CLASSIFICATION	0.9999974458773478	WITHOUT_CLASSIFICATION	2.554122652219951E-6	TEST
line 1254	WITHOUT_CLASSIFICATION	0.9999976077012089	WITHOUT_CLASSIFICATION	2.3922987909700497E-6	TEST
line 1258	WITHOUT_CLASSIFICATION	0.9999973757907576	WITHOUT_CLASSIFICATION	2.6242092423216227E-6	TEST
line 1264	WITHOUT_CLASSIFICATION	0.9999975909193266	WITHOUT_CLASSIFICATION	2.409080673449946E-6	TEST
line 1270	WITHOUT_CLASSIFICATION	0.9999977467060557	WITHOUT_CLASSIFICATION	2.2532939442057152E-6	TEST
line 1273	WITHOUT_CLASSIFICATION	0.9999967937893499	WITHOUT_CLASSIFICATION	3.2062106500503203E-6	TEST
line 1276	WITHOUT_CLASSIFICATION	0.9999976795266442	WITHOUT_CLASSIFICATION	2.320473355697342E-6	TEST
line 1279	WITHOUT_CLASSIFICATION	0.9999972822482368	WITHOUT_CLASSIFICATION	2.717751763241648E-6	TEST
line 1282	WITHOUT_CLASSIFICATION	0.9999971153819617	WITHOUT_CLASSIFICATION	2.8846180383484074E-6	TEST
line 1289	WITHOUT_CLASSIFICATION	0.999996889683848	WITHOUT_CLASSIFICATION	3.110316151865926E-6	TEST
line 1292	WITHOUT_CLASSIFICATION	0.9999965054114609	WITHOUT_CLASSIFICATION	3.4945885392321688E-6	TEST
line 1295	WITHOUT_CLASSIFICATION	0.9999967441964331	WITHOUT_CLASSIFICATION	3.255803566870974E-6	TEST
line 1298	WITHOUT_CLASSIFICATION	0.9999963938487032	WITHOUT_CLASSIFICATION	3.606151296643267E-6	TEST
line 1305	WITHOUT_CLASSIFICATION	0.9999967770810207	WITHOUT_CLASSIFICATION	3.2229189792539667E-6	TEST
line 1348	WITHOUT_CLASSIFICATION	0.9999968011863739	WITHOUT_CLASSIFICATION	3.1988136261481493E-6	TEST
line 1387	WITHOUT_CLASSIFICATION	0.9999968465447884	WITHOUT_CLASSIFICATION	3.1534552117270844E-6	TEST
line 1392	WITHOUT_CLASSIFICATION	0.9999960540899937	WITHOUT_CLASSIFICATION	3.945910006261561E-6	TEST
line 1448	WITHOUT_CLASSIFICATION	0.9999974383551122	WITHOUT_CLASSIFICATION	2.5616448878306065E-6	TEST
line 1462	WITHOUT_CLASSIFICATION	0.9999975779519085	WITHOUT_CLASSIFICATION	2.4220480914941903E-6	TEST
line 1470	WITHOUT_CLASSIFICATION	0.9999979867478884	WITHOUT_CLASSIFICATION	2.0132521115518897E-6	TEST
line 1496	WITHOUT_CLASSIFICATION	0.9999974989170285	WITHOUT_CLASSIFICATION	2.5010829715271643E-6	TEST
line 1502	WITHOUT_CLASSIFICATION	0.9999975317057124	WITHOUT_CLASSIFICATION	2.468294287558724E-6	TEST
line 1595	WITHOUT_CLASSIFICATION	0.9999973677653944	WITHOUT_CLASSIFICATION	2.6322346057150292E-6	TEST
line 1598	WITHOUT_CLASSIFICATION	0.9999972502877922	WITHOUT_CLASSIFICATION	2.749712207876349E-6	TEST
line 1308	WITHOUT_CLASSIFICATION	0.9999964191401806	WITHOUT_CLASSIFICATION	3.580859819496883E-6	TEST
line 1311	WITHOUT_CLASSIFICATION	0.9999968316541815	WITHOUT_CLASSIFICATION	3.1683458184823135E-6	TEST
line 1317	WITHOUT_CLASSIFICATION	0.9999970019288402	WITHOUT_CLASSIFICATION	2.9980711598809374E-6	TEST
line 1323	WITHOUT_CLASSIFICATION	0.9999964892107689	WITHOUT_CLASSIFICATION	3.51078923108456E-6	TEST
line 1326	WITHOUT_CLASSIFICATION	0.9999966728858629	WITHOUT_CLASSIFICATION	3.327114137070729E-6	TEST
line 1329	WITHOUT_CLASSIFICATION	0.9999955185455455	WITHOUT_CLASSIFICATION	4.481454454595068E-6	TEST
line 1337	WITHOUT_CLASSIFICATION	0.9999970108724336	WITHOUT_CLASSIFICATION	2.9891275664327277E-6	TEST
line 1342	WITHOUT_CLASSIFICATION	0.999996699377906	WITHOUT_CLASSIFICATION	3.3006220938548026E-6	TEST
line 1345	WITHOUT_CLASSIFICATION	0.999997186557602	WITHOUT_CLASSIFICATION	2.8134423982011575E-6	TEST
line 1354	WITHOUT_CLASSIFICATION	0.999996999434803	WITHOUT_CLASSIFICATION	3.000565196995035E-6	TEST
line 1359	WITHOUT_CLASSIFICATION	0.999996557725577	WITHOUT_CLASSIFICATION	3.4422744230105648E-6	TEST
line 1366	WITHOUT_CLASSIFICATION	0.9999968189428009	WITHOUT_CLASSIFICATION	3.1810571991032328E-6	TEST
line 1369	WITHOUT_CLASSIFICATION	0.9999965618028188	WITHOUT_CLASSIFICATION	3.4381971812653083E-6	TEST
line 1373	WITHOUT_CLASSIFICATION	0.9999969746980739	WITHOUT_CLASSIFICATION	3.0253019260688113E-6	TEST
line 1377	WITHOUT_CLASSIFICATION	0.9999969699260342	WITHOUT_CLASSIFICATION	3.0300739657414942E-6	TEST
line 1383	WITHOUT_CLASSIFICATION	0.9999965222583714	WITHOUT_CLASSIFICATION	3.477741628455878E-6	TEST
line 1399	WITHOUT_CLASSIFICATION	0.9999962771916485	WITHOUT_CLASSIFICATION	3.722808351578694E-6	TEST
line 1401	WITHOUT_CLASSIFICATION	0.999997806794821	WITHOUT_CLASSIFICATION	2.193205179090705E-6	TEST
line 1406	WITHOUT_CLASSIFICATION	0.9999978858381878	WITHOUT_CLASSIFICATION	2.114161812079204E-6	TEST
line 1417	WITHOUT_CLASSIFICATION	0.9999977864208515	WITHOUT_CLASSIFICATION	2.2135791485130475E-6	TEST
line 1424	WITHOUT_CLASSIFICATION	0.9999973926172375	WITHOUT_CLASSIFICATION	2.6073827624917604E-6	TEST
line 1427	WITHOUT_CLASSIFICATION	0.999997635032038	WITHOUT_CLASSIFICATION	2.3649679621430163E-6	TEST
line 1430	WITHOUT_CLASSIFICATION	0.999997101504603	WITHOUT_CLASSIFICATION	2.8984953970954792E-6	TEST
line 1433	WITHOUT_CLASSIFICATION	0.9999968661992754	WITHOUT_CLASSIFICATION	3.133800724476625E-6	TEST
line 1436	WITHOUT_CLASSIFICATION	0.9999970588760088	WITHOUT_CLASSIFICATION	2.941123991304975E-6	TEST
line 1442	WITHOUT_CLASSIFICATION	0.9999973563869775	WITHOUT_CLASSIFICATION	2.6436130225465586E-6	TEST
line 1445	WITHOUT_CLASSIFICATION	0.9999977175762492	WITHOUT_CLASSIFICATION	2.2824237507774796E-6	TEST
line 1458	WITHOUT_CLASSIFICATION	0.9999976473422508	WITHOUT_CLASSIFICATION	2.3526577492116213E-6	TEST
line 1464	WITHOUT_CLASSIFICATION	0.9999976989907818	WITHOUT_CLASSIFICATION	2.3010092180982836E-6	TEST
line 1489	WITHOUT_CLASSIFICATION	0.9999972247180282	WITHOUT_CLASSIFICATION	2.775281971805001E-6	TEST
line 1493	WITHOUT_CLASSIFICATION	0.9999965258661117	WITHOUT_CLASSIFICATION	3.474133888380278E-6	TEST
line 1507	WITHOUT_CLASSIFICATION	0.9999980047772711	WITHOUT_CLASSIFICATION	1.995222728906755E-6	TEST
line 1519	WITHOUT_CLASSIFICATION	0.9999973332450475	WITHOUT_CLASSIFICATION	2.6667549525070946E-6	TEST
line 1532	WITHOUT_CLASSIFICATION	0.9999966528236234	WITHOUT_CLASSIFICATION	3.3471763766365315E-6	TEST
line 1538	WITHOUT_CLASSIFICATION	0.999996721200183	WITHOUT_CLASSIFICATION	3.278799816966573E-6	TEST
line 1542	WITHOUT_CLASSIFICATION	0.9999975238677202	WITHOUT_CLASSIFICATION	2.4761322798320335E-6	TEST
line 1557	WITHOUT_CLASSIFICATION	0.9999977676879618	WITHOUT_CLASSIFICATION	2.2323120382435627E-6	TEST
line 1573	WITHOUT_CLASSIFICATION	0.9999971275876531	WITHOUT_CLASSIFICATION	2.872412346824751E-6	TEST
line 1591	WITHOUT_CLASSIFICATION	0.9999973346209131	WITHOUT_CLASSIFICATION	2.665379086929464E-6	TEST
line 1615	WITHOUT_CLASSIFICATION	0.9999977112442219	WITHOUT_CLASSIFICATION	2.288755778047288E-6	TEST
line 1629	WITHOUT_CLASSIFICATION	0.9999967904642224	WITHOUT_CLASSIFICATION	3.209535777639796E-6	TEST
line 1632	WITHOUT_CLASSIFICATION	0.9999966829592218	WITHOUT_CLASSIFICATION	3.3170407782378245E-6	TEST
line 1705	WITHOUT_CLASSIFICATION	0.9999977442958032	WITHOUT_CLASSIFICATION	2.2557041967990564E-6	TEST
line 1716	WITHOUT_CLASSIFICATION	0.9999977964595527	WITHOUT_CLASSIFICATION	2.2035404474285415E-6	TEST
line 1725	WITHOUT_CLASSIFICATION	0.9999976605525739	WITHOUT_CLASSIFICATION	2.339447426103871E-6	TEST
line 1742	WITHOUT_CLASSIFICATION	0.9999976062376262	WITHOUT_CLASSIFICATION	2.3937623738708973E-6	TEST
line 1749	WITHOUT_CLASSIFICATION	0.9999975584483222	WITHOUT_CLASSIFICATION	2.441551677786996E-6	TEST
line 1818	WITHOUT_CLASSIFICATION	0.9999972727614755	WITHOUT_CLASSIFICATION	2.727238524512416E-6	TEST
line 1822	WITHOUT_CLASSIFICATION	0.9999971263171465	WITHOUT_CLASSIFICATION	2.873682853514822E-6	TEST
line 1607	WITHOUT_CLASSIFICATION	0.9999980060523503	WITHOUT_CLASSIFICATION	1.993947649594982E-6	TEST
line 1610	WITHOUT_CLASSIFICATION	0.9999978433420841	WITHOUT_CLASSIFICATION	2.156657915839067E-6	TEST
line 1622	WITHOUT_CLASSIFICATION	0.9999974274064186	WITHOUT_CLASSIFICATION	2.5725935812711395E-6	TEST
line 1625	WITHOUT_CLASSIFICATION	0.9999976385101867	WITHOUT_CLASSIFICATION	2.361489813328107E-6	TEST
line 1636	WITHOUT_CLASSIFICATION	0.9999968418594106	WITHOUT_CLASSIFICATION	3.158140589403075E-6	TEST
line 1639	WITHOUT_CLASSIFICATION	0.9999965745420477	WITHOUT_CLASSIFICATION	3.4254579522357534E-6	TEST
line 1647	WITHOUT_CLASSIFICATION	0.9999979596131696	WITHOUT_CLASSIFICATION	2.040386830464272E-6	TEST
line 1651	WITHOUT_CLASSIFICATION	0.9999976869246271	WITHOUT_CLASSIFICATION	2.3130753728474386E-6	TEST
line 1657	WITHOUT_CLASSIFICATION	0.9999979295634928	WITHOUT_CLASSIFICATION	2.070436507250644E-6	TEST
line 1660	WITHOUT_CLASSIFICATION	0.9999976411994708	WITHOUT_CLASSIFICATION	2.3588005292861E-6	TEST
line 1663	WITHOUT_CLASSIFICATION	0.9999968298538258	WITHOUT_CLASSIFICATION	3.1701461743409756E-6	TEST
line 1678	WITHOUT_CLASSIFICATION	0.9999977576893407	WITHOUT_CLASSIFICATION	2.2423106592266503E-6	TEST
line 1702	WITHOUT_CLASSIFICATION	0.9999977111001199	WITHOUT_CLASSIFICATION	2.288899880129754E-6	TEST
line 1711	WITHOUT_CLASSIFICATION	0.9999977285916636	WITHOUT_CLASSIFICATION	2.271408336365631E-6	TEST
line 1719	WITHOUT_CLASSIFICATION	0.9999974399180415	WITHOUT_CLASSIFICATION	2.5600819584701404E-6	TEST
line 1722	WITHOUT_CLASSIFICATION	0.999997450371667	WITHOUT_CLASSIFICATION	2.5496283331197005E-6	TEST
line 1731	WITHOUT_CLASSIFICATION	0.9999969751538282	WITHOUT_CLASSIFICATION	3.024846171840979E-6	TEST
line 1734	WITHOUT_CLASSIFICATION	0.9999971985549616	WITHOUT_CLASSIFICATION	2.801445038384388E-6	TEST
line 1738	WITHOUT_CLASSIFICATION	0.9999968183195336	WITHOUT_CLASSIFICATION	3.1816804664824497E-6	TEST
line 1746	WITHOUT_CLASSIFICATION	0.9999979166267223	WITHOUT_CLASSIFICATION	2.083373277676251E-6	TEST
line 1756	WITHOUT_CLASSIFICATION	0.9999979275054875	WITHOUT_CLASSIFICATION	2.0724945124347736E-6	TEST
line 1758	WITHOUT_CLASSIFICATION	0.9999976753874641	WITHOUT_CLASSIFICATION	2.324612535921704E-6	TEST
line 1761	WITHOUT_CLASSIFICATION	0.9999977571065859	WITHOUT_CLASSIFICATION	2.242893414075987E-6	TEST
line 1767	WITHOUT_CLASSIFICATION	0.9999977682661446	WITHOUT_CLASSIFICATION	2.231733855425383E-6	TEST
line 1776	WITHOUT_CLASSIFICATION	0.9999977532695278	WITHOUT_CLASSIFICATION	2.2467304722208346E-6	TEST
line 1782	WITHOUT_CLASSIFICATION	0.9999973735790005	WITHOUT_CLASSIFICATION	2.6264209993971276E-6	TEST
line 1785	WITHOUT_CLASSIFICATION	0.9999977020304832	WITHOUT_CLASSIFICATION	2.2979695169179205E-6	TEST
line 1788	WITHOUT_CLASSIFICATION	0.9999975412432413	WITHOUT_CLASSIFICATION	2.4587567587449186E-6	TEST
line 1791	WITHOUT_CLASSIFICATION	0.9999973730023417	WITHOUT_CLASSIFICATION	2.6269976583213183E-6	TEST
line 1797	WITHOUT_CLASSIFICATION	0.9999973788848443	WITHOUT_CLASSIFICATION	2.621115155802776E-6	TEST
line 1800	WITHOUT_CLASSIFICATION	0.9999976407330093	WITHOUT_CLASSIFICATION	2.3592669907000277E-6	TEST
line 1803	WITHOUT_CLASSIFICATION	0.9999962941691253	WITHOUT_CLASSIFICATION	3.7058308748300166E-6	TEST
line 1806	WITHOUT_CLASSIFICATION	0.9999977228058561	WITHOUT_CLASSIFICATION	2.2771941440136333E-6	TEST
line 1809	WITHOUT_CLASSIFICATION	0.999997342803393	WITHOUT_CLASSIFICATION	2.657196607082948E-6	TEST
line 1815	WITHOUT_CLASSIFICATION	0.9999974767112609	WITHOUT_CLASSIFICATION	2.523288739028552E-6	TEST
line 1825	WITHOUT_CLASSIFICATION	0.9999973618472566	WITHOUT_CLASSIFICATION	2.6381527433695365E-6	TEST
line 1828	WITHOUT_CLASSIFICATION	0.9999971258993661	WITHOUT_CLASSIFICATION	2.8741006337940953E-6	TEST
line 1831	WITHOUT_CLASSIFICATION	0.9999966280801837	WITHOUT_CLASSIFICATION	3.3719198162417506E-6	TEST
line 1847	WITHOUT_CLASSIFICATION	0.9999977408760536	WITHOUT_CLASSIFICATION	2.2591239464830616E-6	TEST
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9999983736756476	WITHOUT_CLASSIFICATION	1.6263243522858728E-6	TEST
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9999985356603466	WITHOUT_CLASSIFICATION	1.4643396535065982E-6	TEST
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9999950476364439	WITHOUT_CLASSIFICATION	4.9523635560304675E-6	TEST
zero length array	WITHOUT_CLASSIFICATION	0.9999966438463792	WITHOUT_CLASSIFICATION	3.356153620742824E-6	TEST
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.9999850688847302	WITHOUT_CLASSIFICATION	1.4931115269771072E-5	TEST
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.9999457311337552	WITHOUT_CLASSIFICATION	5.4268866244790176E-5	TEST
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9999978537315843	WITHOUT_CLASSIFICATION	2.146268415641087E-6	TEST
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998476179055649	WITHOUT_CLASSIFICATION	1.5238209443515065E-4	TEST
line 1854	WITHOUT_CLASSIFICATION	0.9999976415452959	WITHOUT_CLASSIFICATION	2.3584547040342654E-6	TEST
line 1869	WITHOUT_CLASSIFICATION	0.9999972686786942	WITHOUT_CLASSIFICATION	2.731321305818369E-6	TEST
line 1872	WITHOUT_CLASSIFICATION	0.9999974224922159	WITHOUT_CLASSIFICATION	2.5775077841423635E-6	TEST
line 1877	WITHOUT_CLASSIFICATION	0.9999975649603703	WITHOUT_CLASSIFICATION	2.4350396296262564E-6	TEST
line 1886	WITHOUT_CLASSIFICATION	0.9999974998967461	WITHOUT_CLASSIFICATION	2.500103253767667E-6	TEST
line 1898	WITHOUT_CLASSIFICATION	0.9999970682057052	WITHOUT_CLASSIFICATION	2.931794294730201E-6	TEST
line 1902	WITHOUT_CLASSIFICATION	0.9999971780872497	WITHOUT_CLASSIFICATION	2.821912750357782E-6	TEST
line 1905	WITHOUT_CLASSIFICATION	0.9999972160598187	WITHOUT_CLASSIFICATION	2.783940181224522E-6	TEST
line 1911	WITHOUT_CLASSIFICATION	0.9999972818553984	WITHOUT_CLASSIFICATION	2.718144601731451E-6	TEST
line 1918	WITHOUT_CLASSIFICATION	0.9999971015993185	WITHOUT_CLASSIFICATION	2.8984006813893627E-6	TEST
line 1935	WITHOUT_CLASSIFICATION	0.9999965375493289	WITHOUT_CLASSIFICATION	3.4624506711760585E-6	TEST
line 1938	WITHOUT_CLASSIFICATION	0.999996201375972	WITHOUT_CLASSIFICATION	3.7986240279839414E-6	TEST
line 1942	WITHOUT_CLASSIFICATION	0.9999971411823333	WITHOUT_CLASSIFICATION	2.8588176666051343E-6	TEST
line 1948	WITHOUT_CLASSIFICATION	0.9999972298879484	WITHOUT_CLASSIFICATION	2.7701120516448357E-6	TEST
line 1960	WITHOUT_CLASSIFICATION	0.9999974599050956	WITHOUT_CLASSIFICATION	2.540094904465206E-6	TEST
line 1963	WITHOUT_CLASSIFICATION	0.9999965861936373	WITHOUT_CLASSIFICATION	3.413806362756607E-6	TEST
line 1968	WITHOUT_CLASSIFICATION	0.9999972511359542	WITHOUT_CLASSIFICATION	2.7488640458135933E-6	TEST
line 1972	WITHOUT_CLASSIFICATION	0.999997266191927	WITHOUT_CLASSIFICATION	2.7338080731288887E-6	TEST
line 1982	WITHOUT_CLASSIFICATION	0.9999968401201936	WITHOUT_CLASSIFICATION	3.1598798062280516E-6	TEST
line 1995	WITHOUT_CLASSIFICATION	0.9999973157268717	WITHOUT_CLASSIFICATION	2.6842731283146255E-6	TEST
line 2000	WITHOUT_CLASSIFICATION	0.9999953377255423	WITHOUT_CLASSIFICATION	4.66227445769457E-6	TEST
line 2006	WITHOUT_CLASSIFICATION	0.9999955273554417	WITHOUT_CLASSIFICATION	4.472644558330113E-6	TEST
line 2010	WITHOUT_CLASSIFICATION	0.999997221952057	WITHOUT_CLASSIFICATION	2.778047943088959E-6	TEST
We may need to subtract addition offset off of first	WITHOUT_CLASSIFICATION	0.9999995873847045	WITHOUT_CLASSIFICATION	4.126152955195993E-7	TEST
string fragment (we optimistically take one off in	WITHOUT_CLASSIFICATION	0.9999991577948905	WITHOUT_CLASSIFICATION	8.422051094214499E-7	TEST
ParserSupport.literal_concat). Check token length	WITHOUT_CLASSIFICATION	0.999999567227265	WITHOUT_CLASSIFICATION	4.3277273510128264E-7	TEST
and subtract as neeeded.	WITHOUT_CLASSIFICATION	0.9999924803750463	WITHOUT_CLASSIFICATION	7.519624953686831E-6	TEST
$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);	WITHOUT_CLASSIFICATION	0.9999998424745274	WITHOUT_CLASSIFICATION	1.5752547253651392E-7	TEST
ENEBO: arg surrounded by in_defined set/unset	WITHOUT_CLASSIFICATION	0.9999985563341991	WITHOUT_CLASSIFICATION	1.4436658009926545E-6	TEST
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999308934645	WITHOUT_CLASSIFICATION	6.910653547789933E-8	TEST
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999992050642045	WITHOUT_CLASSIFICATION	7.949357954776722E-7	TEST
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998189623415	WITHOUT_CLASSIFICATION	1.8103765850126458E-7	TEST
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998189623415	WITHOUT_CLASSIFICATION	1.8103765850126458E-7	TEST
ENEBO: Removed !compile_for_eval which probably is to reduce warnings	WITHOUT_CLASSIFICATION	0.9999980381443522	WITHOUT_CLASSIFICATION	1.961855647714453E-6	TEST
was $$ = null;	WITHOUT_CLASSIFICATION	0.9999971143684377	WITHOUT_CLASSIFICATION	2.8856315622405958E-6	TEST
line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999988147774754	WITHOUT_CLASSIFICATION	1.1852225245907933E-6	TEST
line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999909800648826	WITHOUT_CLASSIFICATION	9.019935117336864E-6	TEST
we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999989175631147	WITHOUT_CLASSIFICATION	1.0824368854231549E-6	TEST
No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999890866275117	WITHOUT_CLASSIFICATION	1.0913372488239818E-5	TEST
Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.	WITHOUT_CLASSIFICATION	0.9999975286235153	WITHOUT_CLASSIFICATION	2.471376484694273E-6	TEST
Live reference to module	WITHOUT_CLASSIFICATION	0.9999997168408606	WITHOUT_CLASSIFICATION	2.831591393025945E-7	TEST
Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999999807758395	WITHOUT_CLASSIFICATION	1.9224160564677014E-8	TEST
Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.999998374202404	WITHOUT_CLASSIFICATION	1.6257975959201175E-6	TEST
number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999943732941683	WITHOUT_CLASSIFICATION	5.626705831717848E-6	TEST
number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.999988616064438	WITHOUT_CLASSIFICATION	1.1383935561982239E-5	TEST
index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999938160191152	WITHOUT_CLASSIFICATION	6.183980884781696E-6	TEST
Note that this object equality check is intentional, to ensure the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999982659321137	WITHOUT_CLASSIFICATION	1.734067886304499E-6	TEST
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999991032381459	WITHOUT_CLASSIFICATION	8.967618539851487E-7	TEST
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999991032381459	WITHOUT_CLASSIFICATION	8.967618539851487E-7	TEST
Note: Only used by compiler until it can use getConstant again or use some other refactoring	WITHOUT_CLASSIFICATION	0.9999915297183501	WITHOUT_CLASSIFICATION	8.470281649734341E-6	TEST
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999999763797504	WITHOUT_CLASSIFICATION	2.362024963887687E-8	TEST
Try and unload the autoload specified from internedName	WITHOUT_CLASSIFICATION	0.9999999808845554	WITHOUT_CLASSIFICATION	1.9115444482918142E-8	TEST
We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999985402845061	WITHOUT_CLASSIFICATION	1.4597154939238772E-6	TEST
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996551230099	WITHOUT_CLASSIFICATION	3.44876990027616E-7	TEST
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999994503020544	WITHOUT_CLASSIFICATION	5.496979456318836E-7	TEST
source extensions	WITHOUT_CLASSIFICATION	0.999999749774751	WITHOUT_CLASSIFICATION	2.5022524901393423E-7	TEST
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999994503020544	WITHOUT_CLASSIFICATION	5.496979456318836E-7	TEST
. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999635525611338	WITHOUT_CLASSIFICATION	3.6447438866239694E-5	TEST
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999762022262	WITHOUT_CLASSIFICATION	2.3797773797925075E-7	TEST
Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999983605531144	WITHOUT_CLASSIFICATION	1.6394468855543116E-6	TEST
Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999880661516175	WITHOUT_CLASSIFICATION	1.1933848382594803E-5	TEST
private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.999999978652368	WITHOUT_CLASSIFICATION	2.1347632089962088E-8	TEST
private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.999999944139518	WITHOUT_CLASSIFICATION	5.586048206035527E-8	TEST
List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.	WITHOUT_CLASSIFICATION	0.9999997615916046	WITHOUT_CLASSIFICATION	2.3840839540217006E-7	TEST
File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999991320146178	WITHOUT_CLASSIFICATION	8.679853822823008E-7	TEST
Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999989254588978	WITHOUT_CLASSIFICATION	1.0745411022350183E-6	TEST
In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.	WITHOUT_CLASSIFICATION	0.9999980668845868	WITHOUT_CLASSIFICATION	1.9331154131195037E-6	TEST
TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999999494329479	WITHOUT_CLASSIFICATION	5.0567052032906855E-8	TEST
CATCH MANAGEMENT	WITHOUT_CLASSIFICATION	0.999936497147998	WITHOUT_CLASSIFICATION	6.350285200205062E-5	TEST
FRAME MANAGEMENT	WITHOUT_CLASSIFICATION	0.9999324034729644	WITHOUT_CLASSIFICATION	6.759652703552292E-5	TEST
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999904086014628	WITHOUT_CLASSIFICATION	9.591398537240324E-6	TEST
assert level == 0;	WITHOUT_CLASSIFICATION	0.999992256623275	WITHOUT_CLASSIFICATION	7.743376725063598E-6	TEST
assert level == 0;	WITHOUT_CLASSIFICATION	0.999992256623275	WITHOUT_CLASSIFICATION	7.743376725063598E-6	TEST
look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999997893125018	WITHOUT_CLASSIFICATION	2.106874981278299E-7	TEST
if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999979625417257	WITHOUT_CLASSIFICATION	2.0374582743354056E-6	TEST
look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999997245477528	WITHOUT_CLASSIFICATION	2.7545224724463497E-7	TEST
All entries following removed node can stay in list, but all preceding ones need to be cloned.	WITHOUT_CLASSIFICATION	0.9999998140360938	WITHOUT_CLASSIFICATION	1.8596390618800805E-7	TEST
required and optional only	WITHOUT_CLASSIFICATION	0.9999996698226381	WITHOUT_CLASSIFICATION	3.301773619345076E-7	TEST
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999994503020544	WITHOUT_CLASSIFICATION	5.496979456318836E-7	TEST
look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.999999852516053	WITHOUT_CLASSIFICATION	1.474839470475734E-7	TEST
set the binding's frame's "previous" file and line to current, so trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999980039034	WITHOUT_CLASSIFICATION	1.996096598937913E-9	TEST
framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999951711549164	WITHOUT_CLASSIFICATION	4.82884508347237E-6	TEST
look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.999999936623019	WITHOUT_CLASSIFICATION	6.337698093906675E-8	TEST
unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999967606563	WITHOUT_CLASSIFICATION	3.239343700699061E-9	TEST
try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999026572901	WITHOUT_CLASSIFICATION	9.734270985419228E-8	TEST
Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999998663304003	WITHOUT_CLASSIFICATION	1.3366959977647355E-7	TEST
Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999991392563105	WITHOUT_CLASSIFICATION	8.60743689547285E-7	TEST
Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.	WITHOUT_CLASSIFICATION	0.9999998990575105	WITHOUT_CLASSIFICATION	1.0094248949257222E-7	TEST
new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999983134398239	WITHOUT_CLASSIFICATION	1.6865601760071524E-6	TEST
No argument blocks	WITHOUT_CLASSIFICATION	0.9999999146641216	WITHOUT_CLASSIFICATION	8.533587837652754E-8	TEST
just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999505287311	WITHOUT_CLASSIFICATION	4.947126880165316E-8	TEST
Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999974092578879	WITHOUT_CLASSIFICATION	2.5907421120188794E-6	TEST
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999945602245596	WITHOUT_CLASSIFICATION	5.439775440432454E-6	TEST
This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999988873467194	WITHOUT_CLASSIFICATION	1.1126532806566994E-6	TEST
Highest reserved id	WITHOUT_CLASSIFICATION	0.9999692599068464	WITHOUT_CLASSIFICATION	3.0740093153557005E-5	TEST
binary typed calls	WITHOUT_CLASSIFICATION	0.999999866995028	WITHOUT_CLASSIFICATION	1.3300497211001473E-7	TEST
id must always be even	WITHOUT_CLASSIFICATION	0.9999978053665268	WITHOUT_CLASSIFICATION	2.194633473138368E-6	TEST
with block pass	WITHOUT_CLASSIFICATION	0.9999952485928822	WITHOUT_CLASSIFICATION	4.751407117751477E-6	TEST
no block	WITHOUT_CLASSIFICATION	0.9999982278113657	WITHOUT_CLASSIFICATION	1.7721886343988045E-6	TEST
with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999955056568487	WITHOUT_CLASSIFICATION	4.494343151210925E-6	TEST
assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999854980650061	WITHOUT_CLASSIFICATION	1.4501934993907709E-5	TEST
if we have multiple asgn with just args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999991475457063	WITHOUT_CLASSIFICATION	8.524542938035844E-7	TEST
&& args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999983976016953	WITHOUT_CLASSIFICATION	1.6023983047634792E-6	TEST
return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999995266874403	WITHOUT_CLASSIFICATION	4.733125597487099E-7	TEST
ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999980314113264	WITHOUT_CLASSIFICATION	1.968588673553857E-6	TEST
predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999999572691289	WITHOUT_CLASSIFICATION	4.2730870959624476E-8	TEST
fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999998224560877	WITHOUT_CLASSIFICATION	1.775439124071189E-7	TEST
Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9998903947683815	WITHOUT_CLASSIFICATION	1.0960523161855129E-4	TEST
Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999993999825865	WITHOUT_CLASSIFICATION	6.00017413475125E-7	TEST
Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999979733082525	WITHOUT_CLASSIFICATION	2.0266917476651142E-6	TEST
Lastline	WITHOUT_CLASSIFICATION	0.999996923207551	WITHOUT_CLASSIFICATION	3.0767924491749796E-6	TEST
No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999942759539592	WITHOUT_CLASSIFICATION	5.724046040741009E-6	TEST
bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.999999717510806	WITHOUT_CLASSIFICATION	2.8248919402413146E-7	TEST
Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999997494760816	WITHOUT_CLASSIFICATION	2.5052391847204074E-7	TEST
try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999999662307291	WITHOUT_CLASSIFICATION	3.3769271003340195E-8	TEST
Some helper functions:	WITHOUT_CLASSIFICATION	0.9999998936388883	WITHOUT_CLASSIFICATION	1.0636111168133452E-7	TEST
silently ignore	WITHOUT_CLASSIFICATION	0.9999998191047093	WITHOUT_CLASSIFICATION	1.8089529069781001E-7	TEST
used by compiler	WITHOUT_CLASSIFICATION	0.9999994400603036	WITHOUT_CLASSIFICATION	5.5993969638709E-7	TEST
initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999923819873	WITHOUT_CLASSIFICATION	7.618012696914032E-9	TEST
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998476179055649	WITHOUT_CLASSIFICATION	1.5238209443515065E-4	TEST
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999078831620817	WITHOUT_CLASSIFICATION	9.211683791834395E-5	TEST
Single node on list	WITHOUT_CLASSIFICATION	0.9999990272554787	WITHOUT_CLASSIFICATION	9.727445213274528E-7	TEST
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999975489261153	WITHOUT_CLASSIFICATION	2.451073884735603E-6	TEST
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999997599702677	WITHOUT_CLASSIFICATION	2.400297322969565E-6	TEST
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999762022262	WITHOUT_CLASSIFICATION	2.3797773797925075E-7	TEST
Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.	WITHOUT_CLASSIFICATION	0.9999997260856441	WITHOUT_CLASSIFICATION	2.73914355918757E-7	TEST
We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999999953401028	WITHOUT_CLASSIFICATION	4.659897297630654E-9	TEST
If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.	WITHOUT_CLASSIFICATION	0.9999997300406116	WITHOUT_CLASSIFICATION	2.699593883545812E-7	TEST
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999393387129	WITHOUT_CLASSIFICATION	6.066128706067367E-8	TEST
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999393387129	WITHOUT_CLASSIFICATION	6.066128706067367E-8	TEST
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999365085226	WITHOUT_CLASSIFICATION	6.349147746013333E-8	TEST
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999365085226	WITHOUT_CLASSIFICATION	6.349147746013333E-8	TEST
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999365085226	WITHOUT_CLASSIFICATION	6.349147746013333E-8	TEST
no extra args for rest	WITHOUT_CLASSIFICATION	0.9999907087796823	WITHOUT_CLASSIFICATION	9.29122031774549E-6	TEST
no extra args for rest	WITHOUT_CLASSIFICATION	0.9999907087796823	WITHOUT_CLASSIFICATION	9.29122031774549E-6	TEST
extra args for rest	WITHOUT_CLASSIFICATION	0.9999807772784488	WITHOUT_CLASSIFICATION	1.9222721551192093E-5	TEST
extra args for rest	WITHOUT_CLASSIFICATION	0.9999807772784488	WITHOUT_CLASSIFICATION	1.9222721551192093E-5	TEST
This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.	WITHOUT_CLASSIFICATION	0.9999925045370952	WITHOUT_CLASSIFICATION	7.49546290483208E-6	TEST
This is the proper behavior for all non-expanded assigners.	WITHOUT_CLASSIFICATION	0.9999997442746079	WITHOUT_CLASSIFICATION	2.557253920588896E-7	TEST
prefill ?	WITHOUT_CLASSIFICATION	0.9999989606877823	WITHOUT_CLASSIFICATION	1.039312217702124E-6	TEST
prefill ?	WITHOUT_CLASSIFICATION	0.9999989606877823	WITHOUT_CLASSIFICATION	1.039312217702124E-6	TEST
MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.999999954934755	WITHOUT_CLASSIFICATION	4.506524502467281E-8	TEST
retrieve method module name	WITHOUT_CLASSIFICATION	0.9999977475464803	WITHOUT_CLASSIFICATION	2.252453519827046E-6	TEST
call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999954874423626	WITHOUT_CLASSIFICATION	4.512557637481534E-6	TEST
if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999990615386806	WITHOUT_CLASSIFICATION	9.38461319375777E-7	TEST
if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.999999505549818	WITHOUT_CLASSIFICATION	4.944501820244442E-7	TEST
method object already present, push various args tc self klazz name	WITHOUT_CLASSIFICATION	0.9999998728465128	WITHOUT_CLASSIFICATION	1.271534872598345E-7	TEST
if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999868387102842	WITHOUT_CLASSIFICATION	1.316128971580963E-5	TEST
invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999973245336886	WITHOUT_CLASSIFICATION	2.6754663114071517E-6	TEST
caller	WITHOUT_CLASSIFICATION	0.9999948875105871	WITHOUT_CLASSIFICATION	5.1124894128764384E-6	TEST
calltype block	WITHOUT_CLASSIFICATION	0.9999995197516572	WITHOUT_CLASSIFICATION	4.802483426979598E-7	TEST
if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999999082934081	WITHOUT_CLASSIFICATION	9.170659180721839E-8	TEST
load arity for check	WITHOUT_CLASSIFICATION	0.9999996195652227	WITHOUT_CLASSIFICATION	3.80434777330178E-7	TEST
throw	WITHOUT_CLASSIFICATION	0.9999596799234267	WITHOUT_CLASSIFICATION	4.032007657321815E-5	TEST
load arity for error	WITHOUT_CLASSIFICATION	0.9999993680315565	WITHOUT_CLASSIFICATION	6.31968443508994E-7	TEST
arity ok, continue	WITHOUT_CLASSIFICATION	0.9999996610996313	WITHOUT_CLASSIFICATION	3.3890036866350813E-7	TEST
InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999934001891311	WITHOUT_CLASSIFICATION	6.599810868837696E-6	TEST
ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999986251146271	WITHOUT_CLASSIFICATION	1.3748853728576438E-6	TEST
FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999851021041753	WITHOUT_CLASSIFICATION	1.4897895824700552E-5	TEST
InvocationCallback	WITHOUT_CLASSIFICATION	0.9999910308188943	WITHOUT_CLASSIFICATION	8.969181105786938E-6	TEST
DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999908385399595	WITHOUT_CLASSIFICATION	9.16146004051547E-6	TEST
for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999998701811537	WITHOUT_CLASSIFICATION	1.298188464427489E-7	TEST
for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999995863138681	WITHOUT_CLASSIFICATION	4.1368613188478906E-7	TEST
load the encoding	WITHOUT_CLASSIFICATION	0.9999997021129924	WITHOUT_CLASSIFICATION	2.9788700759217113E-7	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999840020594	WITHOUT_CLASSIFICATION	1.599794071163856E-8	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999912151711	WITHOUT_CLASSIFICATION	8.784828875509055E-9	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999545938469	WITHOUT_CLASSIFICATION	4.5406153064120436E-8	TEST
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998859972492	WITHOUT_CLASSIFICATION	1.1400275087398747E-7	TEST
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999693374498	WITHOUT_CLASSIFICATION	3.066255028724107E-8	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999845650154	WITHOUT_CLASSIFICATION	1.543498464301616E-8	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999991524303	WITHOUT_CLASSIFICATION	8.47569704092875E-9	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999561916569	WITHOUT_CLASSIFICATION	4.3808343123721104E-8	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871902736	WITHOUT_CLASSIFICATION	1.2809726323461217E-8	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999929658914	WITHOUT_CLASSIFICATION	7.034108674379534E-9	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999812689797	WITHOUT_CLASSIFICATION	1.873102033148769E-8	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999929658914	WITHOUT_CLASSIFICATION	7.034108674379534E-9	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999929658914	WITHOUT_CLASSIFICATION	7.034108674379534E-9	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999929658914	WITHOUT_CLASSIFICATION	7.034108674379534E-9	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999929658914	WITHOUT_CLASSIFICATION	7.034108674379534E-9	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999929658914	WITHOUT_CLASSIFICATION	7.034108674379534E-9	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999929658914	WITHOUT_CLASSIFICATION	7.034108674379534E-9	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999812689797	WITHOUT_CLASSIFICATION	1.873102033148769E-8	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999812689797	WITHOUT_CLASSIFICATION	1.873102033148769E-8	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999812689797	WITHOUT_CLASSIFICATION	1.873102033148769E-8	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999812689797	WITHOUT_CLASSIFICATION	1.873102033148769E-8	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999812689797	WITHOUT_CLASSIFICATION	1.873102033148769E-8	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999812689797	WITHOUT_CLASSIFICATION	1.873102033148769E-8	TEST
If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999997800107933	WITHOUT_CLASSIFICATION	2.1998920671132274E-7	TEST
BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999994964991953	WITHOUT_CLASSIFICATION	5.03500804611885E-7	TEST
ThreadContext	WITHOUT_CLASSIFICATION	0.9999982095664509	WITHOUT_CLASSIFICATION	1.7904335490644299E-6	TEST
BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999371787095	WITHOUT_CLASSIFICATION	6.282129052171444E-8	TEST
Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999971342709	WITHOUT_CLASSIFICATION	2.865729111241716E-9	TEST
RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999247481992	WITHOUT_CLASSIFICATION	7.525180071327995E-8	TEST
add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999999559463202	WITHOUT_CLASSIFICATION	4.405367970828253E-8	TEST
if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999906303622	WITHOUT_CLASSIFICATION	9.369637783974313E-9	TEST
wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.999999979851705	WITHOUT_CLASSIFICATION	2.01482949778062E-8	TEST
add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999966779975584	WITHOUT_CLASSIFICATION	3.3220024414560705E-6	TEST
Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999667850186902	WITHOUT_CLASSIFICATION	3.3214981309835776E-5	TEST
"." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999932193756	WITHOUT_CLASSIFICATION	6.780624415051597E-9	TEST
Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999800905054069	WITHOUT_CLASSIFICATION	1.9909494593083813E-5	TEST
Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999820280148	WITHOUT_CLASSIFICATION	1.7971985245593413E-8	TEST
Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.999999570524265	WITHOUT_CLASSIFICATION	4.2947573499898085E-7	TEST
We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999855966140613	WITHOUT_CLASSIFICATION	1.440338593862113E-5	TEST
If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999991576769863	WITHOUT_CLASSIFICATION	8.423230135979426E-7	TEST
quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999999529998546	WITHOUT_CLASSIFICATION	4.700014531757406E-8	TEST
If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999999663947773	WITHOUT_CLASSIFICATION	3.3605222640410225E-8	TEST
no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999677117892	WITHOUT_CLASSIFICATION	3.2288210844885155E-8	TEST
if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999989340984411	WITHOUT_CLASSIFICATION	1.0659015590012842E-6	TEST
signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999987843369806	WITHOUT_CLASSIFICATION	1.215663019375909E-6	TEST
source extensions	WITHOUT_CLASSIFICATION	0.999999749774751	WITHOUT_CLASSIFICATION	2.5022524901393423E-7	TEST
We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999942989616385	WITHOUT_CLASSIFICATION	5.701038361518343E-6	TEST
This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.999996449909912	WITHOUT_CLASSIFICATION	3.550090088056244E-6	TEST
Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999241253933	WITHOUT_CLASSIFICATION	7.587460675780427E-8	TEST
It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999809060143	WITHOUT_CLASSIFICATION	1.909398569785094E-8	TEST
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999991146478078	WITHOUT_CLASSIFICATION	8.853521922646768E-7	TEST
extension extensions	WITHOUT_CLASSIFICATION	0.9999966907048654	WITHOUT_CLASSIFICATION	3.309295134482957E-6	TEST
unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999999143830304	WITHOUT_CLASSIFICATION	8.561696963003427E-8	TEST
try all extensions	WITHOUT_CLASSIFICATION	0.999999780718617	WITHOUT_CLASSIFICATION	2.192813830555855E-7	TEST
if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999623364298	WITHOUT_CLASSIFICATION	3.766357016109404E-8	TEST
unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999796953634	WITHOUT_CLASSIFICATION	2.030463671326193E-8	TEST
try only literal search	WITHOUT_CLASSIFICATION	0.999999778052821	WITHOUT_CLASSIFICATION	2.219471788558249E-7	TEST
attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999999459423103	WITHOUT_CLASSIFICATION	5.4057689743708245E-8	TEST
otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999998474408123	WITHOUT_CLASSIFICATION	1.5255918780408666E-7	TEST
allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999998871683959	WITHOUT_CLASSIFICATION	1.1283160416587495E-7	TEST
Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999996815397393	WITHOUT_CLASSIFICATION	3.184602606511279E-7	TEST
check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.999999999690711	WITHOUT_CLASSIFICATION	3.0928896962894584E-10	TEST
if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999549760276	WITHOUT_CLASSIFICATION	4.502397255703488E-8	TEST
end suffix iteration	WITHOUT_CLASSIFICATION	0.9999989098130442	WITHOUT_CLASSIFICATION	1.09018695580177E-6	TEST
if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999989517859811	WITHOUT_CLASSIFICATION	1.0482140189042411E-6	TEST
if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999981340189577	WITHOUT_CLASSIFICATION	1.8659810422498729E-6	TEST
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999990134673875	WITHOUT_CLASSIFICATION	9.865326124280885E-7	TEST
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999990134673875	WITHOUT_CLASSIFICATION	9.865326124280885E-7	TEST
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999989187221882	WITHOUT_CLASSIFICATION	1.0812778119068057E-6	TEST
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999989187221882	WITHOUT_CLASSIFICATION	1.0812778119068057E-6	TEST
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999982204048167	WITHOUT_CLASSIFICATION	1.7795951833936495E-6	TEST
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999982204048167	WITHOUT_CLASSIFICATION	1.7795951833936495E-6	TEST
actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999998837506954	WITHOUT_CLASSIFICATION	1.1624930468481995E-7	TEST
handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999999772391891	WITHOUT_CLASSIFICATION	2.27608109847567E-8	TEST
if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999982583969586	WITHOUT_CLASSIFICATION	1.7416030414510223E-6	TEST
if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999998154653278	WITHOUT_CLASSIFICATION	1.845346722388185E-7	TEST
otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999999536318634	WITHOUT_CLASSIFICATION	4.63681364754794E-8	TEST
Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999777034091238	WITHOUT_CLASSIFICATION	2.229659087625421E-5	TEST
signed short, native	WITHOUT_CLASSIFICATION	0.9999987207138654	WITHOUT_CLASSIFICATION	1.2792861345488166E-6	TEST
If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999977761623	WITHOUT_CLASSIFICATION	2.2238376080112646E-9	TEST
write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999212503246	WITHOUT_CLASSIFICATION	7.874967547580092E-8	TEST
if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999989126357264	WITHOUT_CLASSIFICATION	1.0873642735643809E-6	TEST
Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999971166844851	WITHOUT_CLASSIFICATION	2.8833155148390193E-6	TEST
Directories and unavailable resources are not able to open a stream.	WITHOUT_CLASSIFICATION	0.9999992586320448	WITHOUT_CLASSIFICATION	7.413679552800197E-7	TEST
Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999832200356	WITHOUT_CLASSIFICATION	1.6779964440546366E-8	TEST
object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999999904784493	WITHOUT_CLASSIFICATION	9.521550728392073E-9	TEST
flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999950557292574	WITHOUT_CLASSIFICATION	4.944270742554954E-6	TEST
write('S');	WITHOUT_CLASSIFICATION	0.9999731391752018	WITHOUT_CLASSIFICATION	2.6860824798192663E-5	TEST
switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999953172426	WITHOUT_CLASSIFICATION	4.6827573441835696E-9	TEST
object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999996925281908	WITHOUT_CLASSIFICATION	3.074718092334906E-7	TEST
We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999996922198293	WITHOUT_CLASSIFICATION	3.0778017065667563E-7	TEST
w_symbol	WITHOUT_CLASSIFICATION	0.9999516229880926	WITHOUT_CLASSIFICATION	4.837701190755E-5	TEST
w_unique	WITHOUT_CLASSIFICATION	0.9999766931702656	WITHOUT_CLASSIFICATION	2.3306829734429154E-5	TEST
call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999992219395936	WITHOUT_CLASSIFICATION	7.780604063450421E-7	TEST
Major Minor	WITHOUT_CLASSIFICATION	0.9999889455918224	WITHOUT_CLASSIFICATION	1.1054408177681777E-5	TEST
any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999622794009	WITHOUT_CLASSIFICATION	3.77205991751665E-8	TEST
"hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.999997346151234	WITHOUT_CLASSIFICATION	2.653848766000972E-6	TEST
All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999840164864	WITHOUT_CLASSIFICATION	1.598351364554459E-8	TEST
sic	WITHOUT_CLASSIFICATION	0.9999550484383001	WITHOUT_CLASSIFICATION	4.495156169992171E-5	TEST
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998996212854	WITHOUT_CLASSIFICATION	1.0037871456579351E-7	TEST
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998996212854	WITHOUT_CLASSIFICATION	1.0037871456579351E-7	TEST
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998996212854	WITHOUT_CLASSIFICATION	1.0037871456579351E-7	TEST
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999940625575	WITHOUT_CLASSIFICATION	5.937442579879638E-9	TEST
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999940625575	WITHOUT_CLASSIFICATION	5.937442579879638E-9	TEST
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999945602245596	WITHOUT_CLASSIFICATION	5.439775440432454E-6	TEST
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999945602245596	WITHOUT_CLASSIFICATION	5.439775440432454E-6	TEST
If we are setting post arguments we can assume there are no pre or others	WITHOUT_CLASSIFICATION	0.9999998275192442	WITHOUT_CLASSIFICATION	1.7248075572808295E-7	TEST
XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9997532214451074	WITHOUT_CLASSIFICATION	2.467785548926406E-4	TEST
unsigned short, native	WITHOUT_CLASSIFICATION	0.9999983866375584	WITHOUT_CLASSIFICATION	1.61336244163799E-6	TEST
int, native long, native	WITHOUT_CLASSIFICATION	0.9999974527644854	WITHOUT_CLASSIFICATION	2.5472355145500325E-6	TEST
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998996212854	WITHOUT_CLASSIFICATION	1.0037871456579351E-7	TEST
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998996212854	WITHOUT_CLASSIFICATION	1.0037871456579351E-7	TEST
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998996212854	WITHOUT_CLASSIFICATION	1.0037871456579351E-7	TEST
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999940625575	WITHOUT_CLASSIFICATION	5.937442579879638E-9	TEST
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999940625575	WITHOUT_CLASSIFICATION	5.937442579879638E-9	TEST
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999940625575	WITHOUT_CLASSIFICATION	5.937442579879638E-9	TEST
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999945602245596	WITHOUT_CLASSIFICATION	5.439775440432454E-6	TEST
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999945602245596	WITHOUT_CLASSIFICATION	5.439775440432454E-6	TEST
Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999996141222895	WITHOUT_CLASSIFICATION	3.858777105439294E-7	TEST
Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999996757406433	WITHOUT_CLASSIFICATION	3.2425935673274037E-7	TEST
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999959129522717	WITHOUT_CLASSIFICATION	4.087047728255223E-6	TEST
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999959129522717	WITHOUT_CLASSIFICATION	4.087047728255223E-6	TEST
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999959129522717	WITHOUT_CLASSIFICATION	4.087047728255223E-6	TEST
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999959129522717	WITHOUT_CLASSIFICATION	4.087047728255223E-6	TEST
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999959129522717	WITHOUT_CLASSIFICATION	4.087047728255223E-6	TEST
SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999946302217207	WITHOUT_CLASSIFICATION	5.369778279193577E-6	TEST
All braces pushed..	WITHOUT_CLASSIFICATION	0.9999977289286605	WITHOUT_CLASSIFICATION	2.2710713394506318E-6	TEST
failed : try next recursion	WITHOUT_CLASSIFICATION	0.9999997401484539	WITHOUT_CLASSIFICATION	2.5985154601524647E-7	TEST
leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999951894879164	WITHOUT_CLASSIFICATION	4.8105120835560244E-6	TEST
are we at ''	WITHOUT_CLASSIFICATION	0.9999954800975198	WITHOUT_CLASSIFICATION	4.5199024802224616E-6	TEST
No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999912677641909	WITHOUT_CLASSIFICATION	8.73223580909206E-6	TEST
not enough bytes	WITHOUT_CLASSIFICATION	0.9999726366963542	WITHOUT_CLASSIFICATION	2.7363303645825937E-5	TEST
Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999995910802486	WITHOUT_CLASSIFICATION	4.0891975138258147E-7	TEST
skip inner braces	WITHOUT_CLASSIFICATION	0.9999990637447037	WITHOUT_CLASSIFICATION	9.362552963412835E-7	TEST
Process {}'s (example: Dir.glob("{jruby,jython}/README")	WITHOUT_CLASSIFICATION	0.99999765139024	WITHOUT_CLASSIFICATION	2.3486097600185184E-6	TEST
complete, according to Posix.2	WITHOUT_CLASSIFICATION	0.9999993946086091	WITHOUT_CLASSIFICATION	6.053913907944532E-7	TEST
Only accept an open brace if there is a close	WITHOUT_CLASSIFICATION	0.9999987638164599	WITHOUT_CLASSIFICATION	1.236183540103026E-6	TEST
brace to match it. Bracket expressions must be	WITHOUT_CLASSIFICATION	0.9999975908196745	WITHOUT_CLASSIFICATION	2.4091803254825554E-6	TEST
index of left-most brace index of right-most brace	WITHOUT_CLASSIFICATION	0.9999998598223074	WITHOUT_CLASSIFICATION	1.401776925191391E-7	TEST
Length check is a hack. We should not be reeiving "" as a filename ever.	WITHOUT_CLASSIFICATION	0.9999988767143414	WITHOUT_CLASSIFICATION	1.1232856586805744E-6	TEST
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999596320168898	WITHOUT_CLASSIFICATION	4.0367983110324805E-5	TEST
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999596320168898	WITHOUT_CLASSIFICATION	4.0367983110324805E-5	TEST
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999596320168898	WITHOUT_CLASSIFICATION	4.0367983110324805E-5	TEST
Pickaxe says @ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9995829608794958	WITHOUT_CLASSIFICATION	4.1703912050413094E-4	TEST
Pickaxe says @@ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9995830942211518	WITHOUT_CLASSIFICATION	4.1690577884820915E-4	TEST
SimpleSampler	WITHOUT_CLASSIFICATION	0.9999769219294831	WITHOUT_CLASSIFICATION	2.307807051698291E-5	TEST
convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )	WITHOUT_CLASSIFICATION	0.9999999888656108	WITHOUT_CLASSIFICATION	1.1134389167842431E-8	TEST
b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999994163457605	WITHOUT_CLASSIFICATION	5.836542396056637E-7	TEST
single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999994251793162	WITHOUT_CLASSIFICATION	5.74820683924757E-7	TEST
single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999990662642517	WITHOUT_CLASSIFICATION	9.337357481949989E-7	TEST
single precision, native	WITHOUT_CLASSIFICATION	0.999998466499003	WITHOUT_CLASSIFICATION	1.5335009969063742E-6	TEST
single precision, native single precision, native	WITHOUT_CLASSIFICATION	0.9999979462632201	WITHOUT_CLASSIFICATION	2.0537367799332194E-6	TEST
double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999998658402042	WITHOUT_CLASSIFICATION	1.3415979579037105E-7	TEST
double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999997147617021	WITHOUT_CLASSIFICATION	2.8523829796195445E-7	TEST
double precision, native	WITHOUT_CLASSIFICATION	0.9999997576646746	WITHOUT_CLASSIFICATION	2.423353253485156E-7	TEST
signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999991967474263	WITHOUT_CLASSIFICATION	8.032525736522481E-7	TEST
signed char	WITHOUT_CLASSIFICATION	0.9999988863030358	WITHOUT_CLASSIFICATION	1.1136969642167786E-6	TEST
unsigned char	WITHOUT_CLASSIFICATION	0.9999994373274582	WITHOUT_CLASSIFICATION	5.626725418212794E-7	TEST
long, little-endian	WITHOUT_CLASSIFICATION	0.9999994759555066	WITHOUT_CLASSIFICATION	5.240444933784244E-7	TEST
long, big-endian	WITHOUT_CLASSIFICATION	0.999998624737536	WITHOUT_CLASSIFICATION	1.3752624641037183E-6	TEST
unsigned int, native	WITHOUT_CLASSIFICATION	0.9999996360701018	WITHOUT_CLASSIFICATION	3.639298981707267E-7	TEST
int, native	WITHOUT_CLASSIFICATION	0.9999980773613433	WITHOUT_CLASSIFICATION	1.9226386566973115E-6	TEST
64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.999999347281146	WITHOUT_CLASSIFICATION	6.527188540676256E-7	TEST
How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999991225473406	WITHOUT_CLASSIFICATION	8.77452659329666E-7	TEST
See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999992624136821	WITHOUT_CLASSIFICATION	7.375863180213326E-7	TEST
Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999998145328063	WITHOUT_CLASSIFICATION	1.8546719365843758E-7	TEST
Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999995301969935	WITHOUT_CLASSIFICATION	4.69803006460611E-7	TEST
obtain a	WITHOUT_CLASSIFICATION	0.9999990868932862	WITHOUT_CLASSIFICATION	9.13106713829297E-7	TEST
obtain b	WITHOUT_CLASSIFICATION	0.9999993249253867	WITHOUT_CLASSIFICATION	6.75074613272293E-7	TEST
obtain c	WITHOUT_CLASSIFICATION	0.9999994617948924	WITHOUT_CLASSIFICATION	5.382051075513226E-7	TEST
obtain d	WITHOUT_CLASSIFICATION	0.9999994527012663	WITHOUT_CLASSIFICATION	5.472987337145911E-7	TEST
encode.limit() -	WITHOUT_CLASSIFICATION	0.9999995433999749	WITHOUT_CLASSIFICATION	4.5660002508749346E-7	TEST
1	WITHOUT_CLASSIFICATION	0.9998142111211322	WITHOUT_CLASSIFICATION	1.8578887886775818E-4	TEST
2	WITHOUT_CLASSIFICATION	0.9997609231075266	WITHOUT_CLASSIFICATION	2.3907689247337552E-4	TEST
3	WITHOUT_CLASSIFICATION	0.999645371722828	WITHOUT_CLASSIFICATION	3.5462827717201094E-4	TEST
4	WITHOUT_CLASSIFICATION	0.9997788533926174	WITHOUT_CLASSIFICATION	2.211466073826365E-4	TEST
5	WITHOUT_CLASSIFICATION	0.9997760715583698	WITHOUT_CLASSIFICATION	2.2392844163021105E-4	TEST
6	WITHOUT_CLASSIFICATION	0.9997788783838004	WITHOUT_CLASSIFICATION	2.2112161619962435E-4	TEST
7	WITHOUT_CLASSIFICATION	0.999785405431515	WITHOUT_CLASSIFICATION	2.145945684850255E-4	TEST
Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999998880190158	WITHOUT_CLASSIFICATION	1.1198098426021958E-7	TEST
Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999998811006553	WITHOUT_CLASSIFICATION	1.1889934474575805E-7	TEST
In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.999999440405215	WITHOUT_CLASSIFICATION	5.595947850085602E-7	TEST
normal exit, this should be faster than a test at each iterations for string with more than about 40 char	WITHOUT_CLASSIFICATION	0.7023222316145293	WITHOUT_CLASSIFICATION	0.29767776838547083	TEST
We encountered '\0' when were reading the buffer above, increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999747629037566	WITHOUT_CLASSIFICATION	2.5237096243432267E-5	TEST
MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.999999957181558	WITHOUT_CLASSIFICATION	4.281844192067212E-8	TEST
Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.999972797404722	WITHOUT_CLASSIFICATION	2.7202595277996792E-5	TEST
'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999997854480716	WITHOUT_CLASSIFICATION	2.1455192850375276E-7	TEST
if the low bit is set set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999796722986808	WITHOUT_CLASSIFICATION	2.0327701319183998E-5	TEST
if the index is not a multiple of 8, we are not on a byte boundary shift the byte	WITHOUT_CLASSIFICATION	0.9999995186539401	WITHOUT_CLASSIFICATION	4.81346059791588E-7	TEST
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999903649481164	WITHOUT_CLASSIFICATION	9.635051883494862E-6	TEST
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999903649481164	WITHOUT_CLASSIFICATION	9.635051883494862E-6	TEST
do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999985249086749	WITHOUT_CLASSIFICATION	1.4750913250979435E-6	TEST
we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999999794080573	WITHOUT_CLASSIFICATION	2.059194272548705E-8	TEST
if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999997756642958	WITHOUT_CLASSIFICATION	2.2433570434333754E-7	TEST
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9984813380401037	WITHOUT_CLASSIFICATION	0.0015186619598962251	TEST
we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999534472803938	WITHOUT_CLASSIFICATION	4.6552719606140956E-5	TEST
populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999967661507687	WITHOUT_CLASSIFICATION	3.2338492312549042E-6	TEST
are we recursing?	WITHOUT_CLASSIFICATION	0.9999989648178169	WITHOUT_CLASSIFICATION	1.0351821830890379E-6	TEST
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997644493612	WITHOUT_CLASSIFICATION	2.355506388585748E-7	TEST
default PidGetter	WITHOUT_CLASSIFICATION	0.9999996055482807	WITHOUT_CLASSIFICATION	3.944517193027405E-7	TEST
ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999999232693845	WITHOUT_CLASSIFICATION	7.673061549535942E-8	TEST
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998541848971	WITHOUT_CLASSIFICATION	1.4581510294496791E-7	TEST
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998541848971	WITHOUT_CLASSIFICATION	1.4581510294496791E-7	TEST
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998541848971	WITHOUT_CLASSIFICATION	1.4581510294496791E-7	TEST
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998541848971	WITHOUT_CLASSIFICATION	1.4581510294496791E-7	TEST
try both	WITHOUT_CLASSIFICATION	0.9999976752756556	WITHOUT_CLASSIFICATION	2.3247243442759834E-6	TEST
just unix	WITHOUT_CLASSIFICATION	0.9999966443426589	WITHOUT_CLASSIFICATION	3.3556573412076587E-6	TEST
just windows	WITHOUT_CLASSIFICATION	0.9999977498539182	WITHOUT_CLASSIFICATION	2.2501460818144896E-6	TEST
neither	WITHOUT_CLASSIFICATION	0.9999930347689956	WITHOUT_CLASSIFICATION	6.965231004344785E-6	TEST
CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999862243410755	WITHOUT_CLASSIFICATION	1.3775658924551786E-5	TEST
single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999992797872823	WITHOUT_CLASSIFICATION	7.20212717660232E-7	TEST
direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999956852163525	WITHOUT_CLASSIFICATION	4.314783647469809E-6	TEST
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999998787123919	WITHOUT_CLASSIFICATION	1.212876081115019E-7	TEST
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999998787123919	WITHOUT_CLASSIFICATION	1.212876081115019E-7	TEST
close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999836004325	WITHOUT_CLASSIFICATION	1.6399567422004585E-8	TEST
ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999993720878095	WITHOUT_CLASSIFICATION	6.279121904886308E-7	TEST
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998385015506649	WITHOUT_CLASSIFICATION	1.6149844933507806E-4	TEST
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999640027636	WITHOUT_CLASSIFICATION	3.599723641785496E-8	TEST
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999640027636	WITHOUT_CLASSIFICATION	3.599723641785496E-8	TEST
popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999995985263987	WITHOUT_CLASSIFICATION	4.014736013174002E-7	TEST
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999953043347195	WITHOUT_CLASSIFICATION	4.69566528046761E-6	TEST
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999953043347195	WITHOUT_CLASSIFICATION	4.69566528046761E-6	TEST
execute command with sh -c this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999602321693866	WITHOUT_CLASSIFICATION	3.976783061346859E-5	TEST
We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999906046648328	WITHOUT_CLASSIFICATION	9.395335167210689E-6	TEST
we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999706199058	WITHOUT_CLASSIFICATION	2.9380094258107313E-8	TEST
The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999817872103987	WITHOUT_CLASSIFICATION	1.8212789601358616E-5	TEST
Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999997725358951	WITHOUT_CLASSIFICATION	2.2746410479958006E-7	TEST
Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999918739451	WITHOUT_CLASSIFICATION	8.126055010857717E-9	TEST
Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999914454781019	WITHOUT_CLASSIFICATION	8.5545218980229E-6	TEST
sequential	WITHOUT_CLASSIFICATION	0.9999990247349059	WITHOUT_CLASSIFICATION	9.752650941353919E-7	TEST
reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999305570867	WITHOUT_CLASSIFICATION	6.944291328964569E-8	TEST
do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999989190863565	WITHOUT_CLASSIFICATION	1.0809136434844052E-6	TEST
if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999798269898633	WITHOUT_CLASSIFICATION	2.0173010136685756E-5	TEST
SignalFacade	WITHOUT_CLASSIFICATION	0.9999916777920357	WITHOUT_CLASSIFICATION	8.322207964227117E-6	TEST
this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9627973329697191	WITHOUT_CLASSIFICATION	0.0372026670302808	TEST
this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9560111362035885	WITHOUT_CLASSIFICATION	0.04398886379641148	TEST
basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999998289581986	WITHOUT_CLASSIFICATION	1.71041801476467E-7	TEST
not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999998799129396	WITHOUT_CLASSIFICATION	1.2008706038640284E-7	TEST
Args	WITHOUT_CLASSIFICATION	0.9999567223369075	WITHOUT_CLASSIFICATION	4.327766309256266E-5	TEST
static methods only	WITHOUT_CLASSIFICATION	0.9999997315499368	WITHOUT_CLASSIFICATION	2.684500632537409E-7	TEST
System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999999904159235	WITHOUT_CLASSIFICATION	9.584076497440487E-8	TEST
MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999999191188877	WITHOUT_CLASSIFICATION	8.088111217019682E-8	TEST
last index (+1) accessed by next() last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999975201959239	WITHOUT_CLASSIFICATION	2.4798040761120408E-6	TEST
Special form of sprintf that returns a RubyString and handles tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999995362123696	WITHOUT_CLASSIFICATION	4.6378763031470967E-7	TEST
Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999986114513245	WITHOUT_CLASSIFICATION	1.3885486755024767E-6	TEST
MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )	WITHOUT_CLASSIFICATION	0.9999203232688585	WITHOUT_CLASSIFICATION	7.967673114156416E-5	TEST
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9999892856288161	WITHOUT_CLASSIFICATION	1.0714371183941786E-5	TEST
MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999870160541262	WITHOUT_CLASSIFICATION	1.2983945873856484E-5	TEST
'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.999999450490982	WITHOUT_CLASSIFICATION	5.495090180054704E-7	TEST
'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999970880430301	WITHOUT_CLASSIFICATION	2.9119569698423695E-6	TEST
We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999986026575	WITHOUT_CLASSIFICATION	1.3973424247355342E-9	TEST
skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999984786957626	WITHOUT_CLASSIFICATION	1.5213042374497706E-6	TEST
..	WITHOUT_CLASSIFICATION	0.9997702409573511	WITHOUT_CLASSIFICATION	2.297590426489881E-4	TEST
the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999991939859674	WITHOUT_CLASSIFICATION	8.060140325344719E-7	TEST
FIXME: what is correct 'recv' argument? (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9996017833621502	WITHOUT_CLASSIFICATION	3.9821663784974065E-4	TEST
gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999953454400664	WITHOUT_CLASSIFICATION	4.6545599335432375E-6	TEST
OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.	WITHOUT_CLASSIFICATION	0.99999999675394	WITHOUT_CLASSIFICATION	3.246059875964778E-9	TEST
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999930369646559	WITHOUT_CLASSIFICATION	6.963035344069913E-6	TEST
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9999957162384789	WITHOUT_CLASSIFICATION	4.283761521075791E-6	TEST
System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.999999925661893	WITHOUT_CLASSIFICATION	7.433810698354197E-8	TEST
System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999993966217486	WITHOUT_CLASSIFICATION	6.033782514663842E-7	TEST
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999930369646559	WITHOUT_CLASSIFICATION	6.963035344069913E-6	TEST
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9999957162384789	WITHOUT_CLASSIFICATION	4.283761521075791E-6	TEST
precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.999999424580755	WITHOUT_CLASSIFICATION	5.75419245107363E-7	TEST
deal with length/width	WITHOUT_CLASSIFICATION	0.9999653499996684	WITHOUT_CLASSIFICATION	3.4650000331622617E-5	TEST
deal with length/width	WITHOUT_CLASSIFICATION	0.9999653499996684	WITHOUT_CLASSIFICATION	3.4650000331622617E-5	TEST
first digit is always printed	WITHOUT_CLASSIFICATION	0.9999990177427643	WITHOUT_CLASSIFICATION	9.82257235662351E-7	TEST
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999994253362825	WITHOUT_CLASSIFICATION	5.746637175618235E-7	TEST
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999929984202048	WITHOUT_CLASSIFICATION	7.001579795142508E-6	TEST
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999931978352874	WITHOUT_CLASSIFICATION	6.8021647125844245E-6	TEST
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999868225023131	WITHOUT_CLASSIFICATION	1.3177497687024582E-5	TEST
MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05	WITHOUT_CLASSIFICATION	0.9999794994630947	WITHOUT_CLASSIFICATION	2.0500536905193915E-5	TEST
'.' is printed	WITHOUT_CLASSIFICATION	0.9999953441524926	WITHOUT_CLASSIFICATION	4.655847507481746E-6	TEST
all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999997769654589	WITHOUT_CLASSIFICATION	2.2303454095909513E-7	TEST
now some data...	WITHOUT_CLASSIFICATION	0.999998430194148	WITHOUT_CLASSIFICATION	1.5698058519781068E-6	TEST
'.'	WITHOUT_CLASSIFICATION	0.9996912994808909	WITHOUT_CLASSIFICATION	3.087005191091466E-4	TEST
decimal form, like (but not just like!) 'f'	WITHOUT_CLASSIFICATION	0.9999997372567786	WITHOUT_CLASSIFICATION	2.627432214585963E-7	TEST
digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999969582468031	WITHOUT_CLASSIFICATION	3.0417531969387144E-6	TEST
will have a trailing '.' g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999955562857913	WITHOUT_CLASSIFICATION	4.443714208697618E-6	TEST
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999996978931335	WITHOUT_CLASSIFICATION	3.0210686646147944E-7	TEST
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999996978931335	WITHOUT_CLASSIFICATION	3.0210686646147944E-7	TEST
always need at least a 0	WITHOUT_CLASSIFICATION	0.9998824281853129	WITHOUT_CLASSIFICATION	1.1757181468709489E-4	TEST
always need at least a 0	WITHOUT_CLASSIFICATION	0.9998824281853129	WITHOUT_CLASSIFICATION	1.1757181468709489E-4	TEST
digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999985459717438	WITHOUT_CLASSIFICATION	1.4540282562176218E-6	TEST
(1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999974956001147	WITHOUT_CLASSIFICATION	2.504399885280695E-6	TEST
(1|intlen)	WITHOUT_CLASSIFICATION	0.9999971622431697	WITHOUT_CLASSIFICATION	2.8377568303034195E-6	TEST
will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999968722374504	WITHOUT_CLASSIFICATION	3.1277625495339805E-6	TEST
fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999480383429655	WITHOUT_CLASSIFICATION	5.196165703445869E-5	TEST
System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999986626270443	WITHOUT_CLASSIFICATION	1.3373729557614944E-6	TEST
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999929984202048	WITHOUT_CLASSIFICATION	7.001579795142508E-6	TEST
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999931978352874	WITHOUT_CLASSIFICATION	6.8021647125844245E-6	TEST
now some data...	WITHOUT_CLASSIFICATION	0.999998430194148	WITHOUT_CLASSIFICATION	1.5698058519781068E-6	TEST
'.'	WITHOUT_CLASSIFICATION	0.9996912994808909	WITHOUT_CLASSIFICATION	3.087005191091466E-4	TEST
equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999996776738911	WITHOUT_CLASSIFICATION	3.223261088707648E-7	TEST
'.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999994114378383	WITHOUT_CLASSIFICATION	5.885621616887514E-7	TEST
\v	WITHOUT_CLASSIFICATION	0.9997406631828598	WITHOUT_CLASSIFICATION	2.593368171401795E-4	TEST
dangling '%' char	WITHOUT_CLASSIFICATION	0.9999900457959544	WITHOUT_CLASSIFICATION	9.954204045693905E-6	TEST
main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999993964147321	WITHOUT_CLASSIFICATION	6.03585267874321E-7	TEST
debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999941351563982	WITHOUT_CLASSIFICATION	5.864843601697158E-6	TEST
MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do	WITHOUT_CLASSIFICATION	0.9999977915233269	WITHOUT_CLASSIFICATION	2.2084766730933063E-6	TEST
"%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9997808538717928	WITHOUT_CLASSIFICATION	2.191461282072047E-4	TEST
limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999956042792244	WITHOUT_CLASSIFICATION	4.395720775569203E-6	TEST
negative values	WITHOUT_CLASSIFICATION	0.9999971373956485	WITHOUT_CLASSIFICATION	2.8626043514277683E-6	TEST
calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.	WITHOUT_CLASSIFICATION	0.9999999483071077	WITHOUT_CLASSIFICATION	5.1692892202015357E-8	TEST
relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9998809040966417	WITHOUT_CLASSIFICATION	1.1909590335838549E-4	TEST
no such luck...	WITHOUT_CLASSIFICATION	0.9999974698882336	WITHOUT_CLASSIFICATION	2.5301117664606985E-6	TEST
ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999898886276268	WITHOUT_CLASSIFICATION	1.011137237329981E-5	TEST
go through negated powers of 32 until we find one small enough	WITHOUT_CLASSIFICATION	0.9999989823681013	WITHOUT_CLASSIFICATION	1.0176318987494398E-6	TEST
add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999942785900853	WITHOUT_CLASSIFICATION	5.721409914631211E-6	TEST
constant vector a	WITHOUT_CLASSIFICATION	0.9999996102556644	WITHOUT_CLASSIFICATION	3.8974433569455055E-7	TEST
most significant w-r bits	WITHOUT_CLASSIFICATION	0.999999069619949	WITHOUT_CLASSIFICATION	9.303800511047736E-7	TEST
least significant r bits	WITHOUT_CLASSIFICATION	0.9999996023225332	WITHOUT_CLASSIFICATION	3.976774667648966E-7	TEST
state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999898058545488	WITHOUT_CLASSIFICATION	1.0194145451350286E-5	TEST
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999931791135426	WITHOUT_CLASSIFICATION	6.820886457386292E-6	TEST
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999931791135426	WITHOUT_CLASSIFICATION	6.820886457386292E-6	TEST
MSB is 1; assuring non-zero initial array	WITHOUT_CLASSIFICATION	0.9999993768056317	WITHOUT_CLASSIFICATION	6.231943683823105E-7	TEST
Tempering	WITHOUT_CLASSIFICATION	0.9999876838447708	WITHOUT_CLASSIFICATION	1.2316155229235389E-5	TEST
MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999994073684267	WITHOUT_CLASSIFICATION	5.926315732544717E-7	TEST
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999998139966835	WITHOUT_CLASSIFICATION	1.860033164378234E-7	TEST
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999998139966835	WITHOUT_CLASSIFICATION	1.860033164378234E-7	TEST
\v	WITHOUT_CLASSIFICATION	0.9997406631828598	WITHOUT_CLASSIFICATION	2.593368171401795E-4	TEST
System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999940621501897	WITHOUT_CLASSIFICATION	5.937849810270515E-6	TEST
System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999984837535657	WITHOUT_CLASSIFICATION	1.5162464342772312E-6	TEST
System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999996979768325	WITHOUT_CLASSIFICATION	3.02023167395641E-7	TEST
System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999998392146647	WITHOUT_CLASSIFICATION	1.6078533536790147E-7	TEST
System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999998936518654	WITHOUT_CLASSIFICATION	1.063481346098896E-7	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999995562238132	WITHOUT_CLASSIFICATION	4.4377618683798473E-7	TEST
no number	WITHOUT_CLASSIFICATION	0.9999990284382214	WITHOUT_CLASSIFICATION	9.715617785419135E-7	TEST
trailing garbage	WITHOUT_CLASSIFICATION	0.9999955050119123	WITHOUT_CLASSIFICATION	4.494988087719095E-6	TEST
System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999979092680001	WITHOUT_CLASSIFICATION	2.0907319999147E-6	TEST
it was not found at all!	WITHOUT_CLASSIFICATION	0.9999968795413652	WITHOUT_CLASSIFICATION	3.1204586347750005E-6	TEST
can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999998826549586	WITHOUT_CLASSIFICATION	1.1734504123706254E-7	TEST
we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999999694593988	WITHOUT_CLASSIFICATION	3.054060111653261E-8	TEST
goto next bucket	WITHOUT_CLASSIFICATION	0.9999994169006805	WITHOUT_CLASSIFICATION	5.830993195240652E-7	TEST
we reached the end	WITHOUT_CLASSIFICATION	0.9999998258913376	WITHOUT_CLASSIFICATION	1.7410866234212665E-7	TEST
entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999998899609812	WITHOUT_CLASSIFICATION	1.1003901874853607E-7	TEST
states	WITHOUT_CLASSIFICATION	0.9999201352623776	WITHOUT_CLASSIFICATION	7.986473762241655E-5	TEST
remove leading whitespace (includes _ for lax) get sign, if any	WITHOUT_CLASSIFICATION	0.9999992521642549	WITHOUT_CLASSIFICATION	7.47835745059867E-7	TEST
optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999996829168345	WITHOUT_CLASSIFICATION	3.170831654941725E-7	TEST
fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999969458158	WITHOUT_CLASSIFICATION	3.05418430873811E-9	TEST
drop through for sign	WITHOUT_CLASSIFICATION	0.999991163349829	WITHOUT_CLASSIFICATION	8.836650170967772E-6	TEST
switch will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999995739260781	WITHOUT_CLASSIFICATION	4.260739219672908E-7	TEST
drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999936215038561	WITHOUT_CLASSIFICATION	6.378496143948097E-6	TEST
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999763669002	WITHOUT_CLASSIFICATION	2.3633099765691826E-8	TEST
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999984935236846	WITHOUT_CLASSIFICATION	1.506476315343166E-6	TEST
no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999792176726	WITHOUT_CLASSIFICATION	2.078232737412178E-8	TEST
ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999934996002625	WITHOUT_CLASSIFICATION	6.5003997375201255E-6	TEST
just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999982145693	WITHOUT_CLASSIFICATION	1.785430767007798E-9	TEST
ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999994292691402	WITHOUT_CLASSIFICATION	5.707308599174649E-7	TEST
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996560423631	WITHOUT_CLASSIFICATION	3.4395763683370003E-7	TEST
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996560423631	WITHOUT_CLASSIFICATION	3.4395763683370003E-7	TEST
oh, well, it was worth a try. go let Double/FloatingDecimal handle it	WITHOUT_CLASSIFICATION	0.9999998260135592	WITHOUT_CLASSIFICATION	1.7398644088513237E-7	TEST
ignore switch	WITHOUT_CLASSIFICATION	0.9999998407196637	WITHOUT_CLASSIFICATION	1.5928033633410977E-7	TEST
ignore switch	WITHOUT_CLASSIFICATION	0.9999998407196637	WITHOUT_CLASSIFICATION	1.5928033633410977E-7	TEST
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999954394285	WITHOUT_CLASSIFICATION	4.560571491732939E-8	TEST
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999954394285	WITHOUT_CLASSIFICATION	4.560571491732939E-8	TEST
switch for	WITHOUT_CLASSIFICATION	0.9999993853648425	WITHOUT_CLASSIFICATION	6.146351576012288E-7	TEST
first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999033992324	WITHOUT_CLASSIFICATION	9.660076762813767E-8	TEST
no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999910134217	WITHOUT_CLASSIFICATION	8.986578237284363E-9	TEST
switch if	WITHOUT_CLASSIFICATION	0.9999971177816728	WITHOUT_CLASSIFICATION	2.8822183273338333E-6	TEST
difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999428155275	WITHOUT_CLASSIFICATION	5.718447243864141E-8	TEST
block	WITHOUT_CLASSIFICATION	0.9999651089583473	WITHOUT_CLASSIFICATION	3.489104165274353E-5	TEST
block	WITHOUT_CLASSIFICATION	0.9999651089583473	WITHOUT_CLASSIFICATION	3.489104165274353E-5	TEST
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999763669002	WITHOUT_CLASSIFICATION	2.3633099765691826E-8	TEST
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999763669002	WITHOUT_CLASSIFICATION	2.3633099765691826E-8	TEST
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999763669002	WITHOUT_CLASSIFICATION	2.3633099765691826E-8	TEST
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999984935236846	WITHOUT_CLASSIFICATION	1.506476315343166E-6	TEST
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996560423631	WITHOUT_CLASSIFICATION	3.4395763683370003E-7	TEST
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996560423631	WITHOUT_CLASSIFICATION	3.4395763683370003E-7	TEST
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996560423631	WITHOUT_CLASSIFICATION	3.4395763683370003E-7	TEST
switch for	WITHOUT_CLASSIFICATION	0.9999993853648425	WITHOUT_CLASSIFICATION	6.146351576012288E-7	TEST
switch for	WITHOUT_CLASSIFICATION	0.9999993853648425	WITHOUT_CLASSIFICATION	6.146351576012288E-7	TEST
switch for	WITHOUT_CLASSIFICATION	0.9999993853648425	WITHOUT_CLASSIFICATION	6.146351576012288E-7	TEST
switch if	WITHOUT_CLASSIFICATION	0.9999971177816728	WITHOUT_CLASSIFICATION	2.8822183273338333E-6	TEST
switch if	WITHOUT_CLASSIFICATION	0.9999971177816728	WITHOUT_CLASSIFICATION	2.8822183273338333E-6	TEST
lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999999303699089	WITHOUT_CLASSIFICATION	6.963009113830883E-8	TEST
switch for no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999997118369376	WITHOUT_CLASSIFICATION	2.88163062451207E-7	TEST
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999998079072012	WITHOUT_CLASSIFICATION	1.9209279869611109E-7	TEST
TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999822379767711	WITHOUT_CLASSIFICATION	1.7762023228936475E-5	TEST
no digits, error	WITHOUT_CLASSIFICATION	0.9999998758105675	WITHOUT_CLASSIFICATION	1.2418943259094244E-7	TEST
too big for us	WITHOUT_CLASSIFICATION	0.9999988420086742	WITHOUT_CLASSIFICATION	1.1579913257722484E-6	TEST
too big for us	WITHOUT_CLASSIFICATION	0.9999988420086742	WITHOUT_CLASSIFICATION	1.1579913257722484E-6	TEST
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999997764089124	WITHOUT_CLASSIFICATION	2.2359108764599773E-7	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999991022722116	WITHOUT_CLASSIFICATION	8.977277884598582E-7	TEST
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999991022722116	WITHOUT_CLASSIFICATION	8.977277884598582E-7	TEST
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999991022722116	WITHOUT_CLASSIFICATION	8.977277884598582E-7	TEST
first char must be digit	WITHOUT_CLASSIFICATION	0.999999764401083	WITHOUT_CLASSIFICATION	2.3559891705718265E-7	TEST
no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999987216656548	WITHOUT_CLASSIFICATION	1.2783343450546824E-6	TEST
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999984935236846	WITHOUT_CLASSIFICATION	1.506476315343166E-6	TEST
switch for	WITHOUT_CLASSIFICATION	0.9999993853648425	WITHOUT_CLASSIFICATION	6.146351576012288E-7	TEST
switch for	WITHOUT_CLASSIFICATION	0.9999993853648425	WITHOUT_CLASSIFICATION	6.146351576012288E-7	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999991022722116	WITHOUT_CLASSIFICATION	8.977277884598582E-7	TEST
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999997764089124	WITHOUT_CLASSIFICATION	2.2359108764599773E-7	TEST
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9999968242566953	WITHOUT_CLASSIFICATION	3.1757433046062603E-6	TEST
switch while	WITHOUT_CLASSIFICATION	0.9999957698296773	WITHOUT_CLASSIFICATION	4.230170322715225E-6	TEST
All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)	WITHOUT_CLASSIFICATION	0.9999999696030403	WITHOUT_CLASSIFICATION	3.039695973603191E-8	TEST
Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999998050888789	WITHOUT_CLASSIFICATION	1.9491112117232124E-7	TEST
rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999713268779401	WITHOUT_CLASSIFICATION	2.867312205994037E-5	TEST
rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999866158509568	WITHOUT_CLASSIFICATION	1.3384149043171435E-5	TEST
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999924606444768	WITHOUT_CLASSIFICATION	7.5393555232112855E-6	TEST
arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999986394065318	WITHOUT_CLASSIFICATION	1.3605934682063647E-6	TEST
NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999992176255635	WITHOUT_CLASSIFICATION	7.823744363182026E-7	TEST
Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999996624588668	WITHOUT_CLASSIFICATION	3.375411330678401E-7	TEST
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999995729578174	WITHOUT_CLASSIFICATION	4.27042182635972E-7	TEST
strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999975576997209	WITHOUT_CLASSIFICATION	2.4423002791178237E-6	TEST
Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.999999329808494	WITHOUT_CLASSIFICATION	6.701915060591451E-7	TEST
Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999936621720669	WITHOUT_CLASSIFICATION	6.337827933068614E-6	TEST
Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999923615843828	WITHOUT_CLASSIFICATION	7.638415617293228E-6	TEST
next entry to return current slot current entry	WITHOUT_CLASSIFICATION	0.9999999086776856	WITHOUT_CLASSIFICATION	9.132231435837494E-8	TEST
advance to first entry	WITHOUT_CLASSIFICATION	0.9999999887464407	WITHOUT_CLASSIFICATION	1.1253559254739112E-8	TEST
The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999835718094123	WITHOUT_CLASSIFICATION	1.6428190587725722E-5	TEST
package-protected	WITHOUT_CLASSIFICATION	0.9999972608542651	WITHOUT_CLASSIFICATION	2.7391457350247043E-6	TEST
raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999774766059	WITHOUT_CLASSIFICATION	2.2523394132797408E-8	TEST
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999962846153514	WITHOUT_CLASSIFICATION	3.7153846484776654E-6	TEST
if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999987114338973	WITHOUT_CLASSIFICATION	1.2885661027449345E-6	TEST
if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999993713425721	WITHOUT_CLASSIFICATION	6.286574279194501E-7	TEST
otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999999929687708	WITHOUT_CLASSIFICATION	7.031229168914045E-9	TEST
r/w buffer are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999983908508475	WITHOUT_CLASSIFICATION	1.6091491524580485E-6	TEST
this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999968281470746	WITHOUT_CLASSIFICATION	3.171852925431276E-6	TEST
unread back	WITHOUT_CLASSIFICATION	0.9999989123237718	WITHOUT_CLASSIFICATION	1.0876762282329361E-6	TEST
iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999998300592383	WITHOUT_CLASSIFICATION	1.6994076161980564E-7	TEST
terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999998857613837	WITHOUT_CLASSIFICATION	1.142386164245283E-7	TEST
no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999999030609996	WITHOUT_CLASSIFICATION	9.693900038673209E-8	TEST
found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999992973697764	WITHOUT_CLASSIFICATION	7.02630223665879E-7	TEST
Check file size - special files in /proc have zero size and need to be handled by the generic read path.	WITHOUT_CLASSIFICATION	0.9999999915598135	WITHOUT_CLASSIFICATION	8.440186490479806E-9	TEST
Copy any buffered data (including ungetc byte)	WITHOUT_CLASSIFICATION	0.9999998855580214	WITHOUT_CLASSIFICATION	1.1444197855013358E-7	TEST
Now read unbuffered directly from the file	WITHOUT_CLASSIFICATION	0.9999999741178096	WITHOUT_CLASSIFICATION	2.5882190396826877E-8	TEST
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9999968242566953	WITHOUT_CLASSIFICATION	3.1757433046062603E-6	TEST
Need to clamp source (buffer) size to avoid overrun	WITHOUT_CLASSIFICATION	0.9999999652678737	WITHOUT_CLASSIFICATION	3.473212630709827E-8	TEST
not closing from finalize	WITHOUT_CLASSIFICATION	0.9999995819685188	WITHOUT_CLASSIFICATION	4.1803148130271816E-7	TEST
clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999933861117739	WITHOUT_CLASSIFICATION	6.613888226051714E-6	TEST
silence	WITHOUT_CLASSIFICATION	0.9999968360843359	WITHOUT_CLASSIFICATION	3.1639156642247635E-6	TEST
silence	WITHOUT_CLASSIFICATION	0.9999968360843359	WITHOUT_CLASSIFICATION	3.1639156642247635E-6	TEST
Don't bother	WITHOUT_CLASSIFICATION	0.9999986001790535	WITHOUT_CLASSIFICATION	1.3998209464691437E-6	TEST
Don't bother	WITHOUT_CLASSIFICATION	0.9999986001790535	WITHOUT_CLASSIFICATION	1.3998209464691437E-6	TEST
For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999993478286806	WITHOUT_CLASSIFICATION	6.521713194742839E-7	TEST
Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999993639687511	WITHOUT_CLASSIFICATION	6.360312488523115E-7	TEST
Adjust for buffered data	WITHOUT_CLASSIFICATION	0.999999627873348	WITHOUT_CLASSIFICATION	3.7212665207985495E-7	TEST
for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999991424614195	WITHOUT_CLASSIFICATION	8.575385805724801E-7	TEST
libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999996876222028	WITHOUT_CLASSIFICATION	3.123777971601767E-7	TEST
we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.99999964637269	WITHOUT_CLASSIFICATION	3.5362731005402276E-7	TEST
128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.99999979461317	WITHOUT_CLASSIFICATION	2.0538682999314692E-7	TEST
limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations	WITHOUT_CLASSIFICATION	0.9999999705151786	WITHOUT_CLASSIFICATION	2.948482135621943E-8	TEST
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999992414963	WITHOUT_CLASSIFICATION	7.585036501819045E-10	TEST
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9999996544063376	WITHOUT_CLASSIFICATION	3.455936623016217E-7	TEST
Avoid double-copying for reads that are larger than the buffer size	WITHOUT_CLASSIFICATION	0.9999999924198856	WITHOUT_CLASSIFICATION	7.580114461704654E-9	TEST
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999985270435313	WITHOUT_CLASSIFICATION	1.472956468754593E-6	TEST
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999985270435313	WITHOUT_CLASSIFICATION	1.472956468754593E-6	TEST
Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.	WITHOUT_CLASSIFICATION	0.9999995667957744	WITHOUT_CLASSIFICATION	4.332042255906568E-7	TEST
We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.	WITHOUT_CLASSIFICATION	0.9999996241158176	WITHOUT_CLASSIFICATION	3.758841824291453E-7	TEST
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999993075225712	WITHOUT_CLASSIFICATION	6.924774288554048E-7	TEST
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999993075225712	WITHOUT_CLASSIFICATION	6.924774288554048E-7	TEST
Doesn't fit in buffer. Write immediately. ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999987587752102	WITHOUT_CLASSIFICATION	1.2412247898267572E-6	TEST
truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999963615154	WITHOUT_CLASSIFICATION	3.6384845143753947E-9	TEST
how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999927054354504	WITHOUT_CLASSIFICATION	7.294564549600592E-6	TEST
if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999995164429661	WITHOUT_CLASSIFICATION	4.835570338734529E-7	TEST
close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999997597546413	WITHOUT_CLASSIFICATION	2.402453586908058E-7	TEST
putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999995934682049	WITHOUT_CLASSIFICATION	4.0653179507460335E-7	TEST
save the ungot	WITHOUT_CLASSIFICATION	0.9999976025087798	WITHOUT_CLASSIFICATION	2.397491220173767E-6	TEST
otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999998934260966	WITHOUT_CLASSIFICATION	1.0657390328989191E-7	TEST
ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999893042052969	WITHOUT_CLASSIFICATION	1.0695794703215933E-5	TEST
flush first	WITHOUT_CLASSIFICATION	0.9999975587614808	WITHOUT_CLASSIFICATION	2.4412385192340565E-6	TEST
Wake up any channels that became unblocked	WITHOUT_CLASSIFICATION	0.9999986359871407	WITHOUT_CLASSIFICATION	1.36401285932533E-6	TEST
Register any new blocking I/O requests	WITHOUT_CLASSIFICATION	0.9999415052831129	WITHOUT_CLASSIFICATION	5.84947168871366E-5	TEST
Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999997939683269	WITHOUT_CLASSIFICATION	2.0603167298496935E-7	TEST
Wait for I/O on any channel	WITHOUT_CLASSIFICATION	0.9999988451100164	WITHOUT_CLASSIFICATION	1.1548899837196436E-6	TEST
Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.999999857785432	WITHOUT_CLASSIFICATION	1.4221456811415116E-7	TEST
Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999922859107635	WITHOUT_CLASSIFICATION	7.714089236568838E-6	TEST
seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999998369203518	WITHOUT_CLASSIFICATION	1.6307964825609662E-7	TEST
seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999999705305617	WITHOUT_CLASSIFICATION	2.9469438295722874E-8	TEST
result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);	WITHOUT_CLASSIFICATION	0.9997515499827041	WITHOUT_CLASSIFICATION	2.484500172959104E-4	TEST
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999878453557	WITHOUT_CLASSIFICATION	1.215464418019977E-8	TEST
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9976428439613747	WITHOUT_CLASSIFICATION	0.002357156038625238	TEST
make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.999999847410973	WITHOUT_CLASSIFICATION	1.5258902700320256E-7	TEST
make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999998242042685	WITHOUT_CLASSIFICATION	1.757957315812219E-7	TEST
first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999998695900665	WITHOUT_CLASSIFICATION	1.3040993347789203E-7	TEST
then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999995618053413	WITHOUT_CLASSIFICATION	4.381946586437624E-7	TEST
if we get here, the class and field exist; construct our Unsafe impl that calls it directly	WITHOUT_CLASSIFICATION	0.9999999988060383	WITHOUT_CLASSIFICATION	1.1939617316374422E-9	TEST
else leave it null	WITHOUT_CLASSIFICATION	0.9999992064627877	WITHOUT_CLASSIFICATION	7.935372123484355E-7	TEST
TypeMatcher	WITHOUT_CLASSIFICATION	0.9999947572955405	WITHOUT_CLASSIFICATION	5.242704459407751E-6	TEST
This is now needed, since module Java isn't in by default	WITHOUT_CLASSIFICATION	0.99999915169057	WITHOUT_CLASSIFICATION	8.483094301177549E-7	TEST
Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999971888898891	WITHOUT_CLASSIFICATION	2.811110110937443E-6	TEST
Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999997854443283	WITHOUT_CLASSIFICATION	2.1455567155282376E-7	TEST
Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999995413227202	WITHOUT_CLASSIFICATION	4.586772797966358E-7	TEST
Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999751572254	WITHOUT_CLASSIFICATION	2.484277462780296E-8	TEST
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999329627436	WITHOUT_CLASSIFICATION	6.703725645454338E-8	TEST
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999329627436	WITHOUT_CLASSIFICATION	6.703725645454338E-8	TEST
Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999997717713756	WITHOUT_CLASSIFICATION	2.282286243828214E-7	TEST
If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999999983003346	WITHOUT_CLASSIFICATION	1.6996653199278653E-9	TEST
assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999944290098723	WITHOUT_CLASSIFICATION	5.5709901277049076E-6	TEST
Init	WITHOUT_CLASSIFICATION	0.9999878793543681	WITHOUT_CLASSIFICATION	1.2120645631934318E-5	TEST
Block	WITHOUT_CLASSIFICATION	0.9999524377171726	WITHOUT_CLASSIFICATION	4.75622828274379E-5	TEST
Copy constructor	WITHOUT_CLASSIFICATION	0.9999991767952173	WITHOUT_CLASSIFICATION	8.232047828287859E-7	TEST
presumably this require should fail	WITHOUT_CLASSIFICATION	0.9997416002312635	WITHOUT_CLASSIFICATION	2.5839976873651355E-4	TEST
JRUBY-646 presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999307741951095	WITHOUT_CLASSIFICATION	6.922580489056533E-5	TEST
Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999848049683481	WITHOUT_CLASSIFICATION	1.5195031651916549E-5	TEST
ok	WITHOUT_CLASSIFICATION	0.9998713927310429	WITHOUT_CLASSIFICATION	1.2860726895705507E-4	TEST
Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999998521727714	WITHOUT_CLASSIFICATION	1.4782722863499357E-7	TEST
load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999975630298851	WITHOUT_CLASSIFICATION	2.436970114991956E-6	TEST
reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999762467093053	WITHOUT_CLASSIFICATION	2.3753290694742713E-5	TEST
call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999985854195772	WITHOUT_CLASSIFICATION	1.4145804228390561E-6	TEST
Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999999642693496	WITHOUT_CLASSIFICATION	3.5730650535138825E-8	TEST
wait for the go signal	WITHOUT_CLASSIFICATION	0.9999997110087113	WITHOUT_CLASSIFICATION	2.889912887701625E-7	TEST
run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999996623040012	WITHOUT_CLASSIFICATION	3.3769599878565043E-7	TEST
wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999995449562463	WITHOUT_CLASSIFICATION	4.550437536425547E-7	TEST
notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999991604769435	WITHOUT_CLASSIFICATION	8.395230564829301E-7	TEST
wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999978213319183	WITHOUT_CLASSIFICATION	2.1786680817519443E-6	TEST
we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.999999291111741	WITHOUT_CLASSIFICATION	7.088882588880047E-7	TEST
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999987985239536	WITHOUT_CLASSIFICATION	1.201476046451488E-6	TEST
MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.	WITHOUT_CLASSIFICATION	0.9999997906541357	WITHOUT_CLASSIFICATION	2.0934586428051972E-7	TEST
if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999996091172573	WITHOUT_CLASSIFICATION	3.9088274262080253E-7	TEST
there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999969026722048	WITHOUT_CLASSIFICATION	3.0973277953079864E-6	TEST
construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999997699744679	WITHOUT_CLASSIFICATION	2.3002553206407626E-7	TEST
Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999950068239	WITHOUT_CLASSIFICATION	4.993176080924292E-9	TEST
assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999927272194405	WITHOUT_CLASSIFICATION	7.272780559475715E-6	TEST
void methods should work	WITHOUT_CLASSIFICATION	0.9999913148265499	WITHOUT_CLASSIFICATION	8.685173450005753E-6	TEST
methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999994158172574	WITHOUT_CLASSIFICATION	5.841827425929238E-7	TEST
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999774169446413	WITHOUT_CLASSIFICATION	2.2583055358667808E-5	TEST
Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9996077497515335	WITHOUT_CLASSIFICATION	3.9225024846652423E-4	TEST
Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999981003309912	WITHOUT_CLASSIFICATION	1.8996690088712138E-6	TEST
assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999970665979075	WITHOUT_CLASSIFICATION	2.933402092371649E-6	TEST
int n = 10;	WITHOUT_CLASSIFICATION	0.9999971328492162	WITHOUT_CLASSIFICATION	2.8671507837510185E-6	TEST
there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9996224286715225	WITHOUT_CLASSIFICATION	3.7757132847746126E-4	TEST
No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999979808730508	WITHOUT_CLASSIFICATION	2.0191269491807506E-6	TEST
value equality	WITHOUT_CLASSIFICATION	0.9999970851393776	WITHOUT_CLASSIFICATION	2.9148606223565644E-6	TEST
identity equality	WITHOUT_CLASSIFICATION	0.9999995279360276	WITHOUT_CLASSIFICATION	4.720639722968219E-7	TEST
bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.999999792985207	WITHOUT_CLASSIFICATION	2.0701479293345407E-7	TEST
bench Integer fib	WITHOUT_CLASSIFICATION	0.9999994536267874	WITHOUT_CLASSIFICATION	5.463732124947839E-7	TEST
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999983320277872	WITHOUT_CLASSIFICATION	1.667972212821066E-6	TEST
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999983320277872	WITHOUT_CLASSIFICATION	1.667972212821066E-6	TEST
bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999980673633316	WITHOUT_CLASSIFICATION	1.9326366682991237E-6	TEST
bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999997450731918	WITHOUT_CLASSIFICATION	2.5492680825671063E-7	TEST
bench Long fib	WITHOUT_CLASSIFICATION	0.9999961279810972	WITHOUT_CLASSIFICATION	3.872018902811962E-6	TEST
skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999993656629197	WITHOUT_CLASSIFICATION	6.343370802282569E-7	TEST
start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999968418363121	WITHOUT_CLASSIFICATION	3.1581636879790775E-6	TEST
public class Hello { public static String getMessage() { return "....."; } }	WITHOUT_CLASSIFICATION	0.9999999839352751	WITHOUT_CLASSIFICATION	1.6064724850945E-8	TEST
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999997490473953	WITHOUT_CLASSIFICATION	2.509526047692421E-7	TEST
Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999999864064321	WITHOUT_CLASSIFICATION	1.3593567894183678E-8	TEST
We are creating a new IO object that shares the same IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999995680074143	WITHOUT_CLASSIFICATION	4.319925856256379E-7	TEST
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.999999992980982	WITHOUT_CLASSIFICATION	7.019018097920898E-9	TEST
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999984381596483	WITHOUT_CLASSIFICATION	1.5618403518078803E-6	TEST
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9999996874005771	WITHOUT_CLASSIFICATION	3.125994228172766E-7	TEST
Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9999993747664357	WITHOUT_CLASSIFICATION	6.252335643610332E-7	TEST
Force the client socket to be blocking	WITHOUT_CLASSIFICATION	0.9999999462441236	WITHOUT_CLASSIFICATION	5.375587634281251E-8	TEST
Additional context surrounding tokens that both the lexer and grammar use.	WITHOUT_CLASSIFICATION	0.999999923491442	WITHOUT_CLASSIFICATION	7.65085579917552E-8	TEST
Enebo: c can never be antrhign but '.' Why did I put this here?	WITHOUT_CLASSIFICATION	0.999995327615172	WITHOUT_CLASSIFICATION	4.672384828123476E-6	TEST
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999951165995	WITHOUT_CLASSIFICATION	4.883400548146277E-9	TEST
[C,C] [C, boolean]	WITHOUT_CLASSIFICATION	0.9999957597614719	WITHOUT_CLASSIFICATION	4.240238528115027E-6	TEST
Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999964642363	WITHOUT_CLASSIFICATION	3.5357637953871952E-9	TEST
ignore; job was cancelled FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.999970183133743	WITHOUT_CLASSIFICATION	2.9816866257091846E-5	TEST
check arity checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999997406512455	WITHOUT_CLASSIFICATION	2.5934875449905263E-7	TEST
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9999945293114171	WITHOUT_CLASSIFICATION	5.470688582937022E-6	TEST
we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.	WITHOUT_CLASSIFICATION	0.9999999997613103	WITHOUT_CLASSIFICATION	2.386896723886537E-10	TEST
Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999998854785888	WITHOUT_CLASSIFICATION	1.1452141124449223E-7	TEST
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999997742010632	WITHOUT_CLASSIFICATION	2.257989368076951E-7	TEST
it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999942472629568	WITHOUT_CLASSIFICATION	5.752737043217385E-6	TEST
package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,	WITHOUT_CLASSIFICATION	0.9999996573419098	WITHOUT_CLASSIFICATION	3.426580902776248E-7	TEST
construct the proxy method	WITHOUT_CLASSIFICATION	0.9999993287893814	WITHOUT_CLASSIFICATION	6.712106185974854E-7	TEST
line 159 "-" %token constants	WITHOUT_CLASSIFICATION	0.9999995695252365	WITHOUT_CLASSIFICATION	4.304747634065881E-7	TEST
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.999999481810701	WITHOUT_CLASSIFICATION	5.181892989938419E-7	TEST
line 152 "-" %token constants	WITHOUT_CLASSIFICATION	0.9999995767288276	WITHOUT_CLASSIFICATION	4.2327117232576005E-7	TEST
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999759184242	WITHOUT_CLASSIFICATION	2.408157590785726E-8	TEST
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.999999481810701	WITHOUT_CLASSIFICATION	5.181892989938419E-7	TEST
We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.999994955991525	WITHOUT_CLASSIFICATION	5.044008475016564E-6	TEST
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9999892856288161	WITHOUT_CLASSIFICATION	1.0714371183941786E-5	TEST
A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.	WITHOUT_CLASSIFICATION	0.9999998433692218	WITHOUT_CLASSIFICATION	1.5663077827349673E-7	TEST
TODO: make it 16 now ? MUST be power of 2!	WITHOUT_CLASSIFICATION	0.999580120934522	WITHOUT_CLASSIFICATION	4.1987906547809556E-4	TEST
check visibility dup method	WITHOUT_CLASSIFICATION	0.9999995596243805	WITHOUT_CLASSIFICATION	4.4037561948157975E-7	TEST
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999959129522717	WITHOUT_CLASSIFICATION	4.087047728255223E-6	TEST
unsigned int, native unsigned long, native	WITHOUT_CLASSIFICATION	0.9999989218828336	WITHOUT_CLASSIFICATION	1.078117166454774E-6	TEST
need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999974716913899	WITHOUT_CLASSIFICATION	2.5283086100762763E-6	TEST
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999994253362825	WITHOUT_CLASSIFICATION	5.746637175618235E-7	TEST
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999878453557	WITHOUT_CLASSIFICATION	1.215464418019977E-8	TEST
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999998079072012	WITHOUT_CLASSIFICATION	1.9209279869611109E-7	TEST
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999992539216345	WITHOUT_CLASSIFICATION	7.460783655538794E-7	TEST
Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999993195129747	WITHOUT_CLASSIFICATION	6.804870253330387E-7	TEST
captures begin and end are used when not groups defined source string	WITHOUT_CLASSIFICATION	0.9999998113690752	WITHOUT_CLASSIFICATION	1.886309247933537E-7	TEST
INSTANCE VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9998996214488394	WITHOUT_CLASSIFICATION	1.0037855116057301E-4	TEST
switch while	WITHOUT_CLASSIFICATION	0.9999957698296773	WITHOUT_CLASSIFICATION	4.230170322715225E-6	TEST
For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999716616924395	WITHOUT_CLASSIFICATION	2.833830756055757E-5	TEST
This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999999408549022	WITHOUT_CLASSIFICATION	5.9145097870966153E-8	TEST
Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999914662336	WITHOUT_CLASSIFICATION	8.533766330593709E-9	TEST
Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9999999518769237	WITHOUT_CLASSIFICATION	4.812307628289963E-8	TEST
expected	WITHOUT_CLASSIFICATION	0.999992526971571	WITHOUT_CLASSIFICATION	7.47302842900894E-6	TEST
Do nothing	WITHOUT_CLASSIFICATION	0.9999944991233468	WITHOUT_CLASSIFICATION	5.500876653205568E-6	TEST
constructor	WITHOUT_CLASSIFICATION	0.999994992448654	WITHOUT_CLASSIFICATION	5.0075513460858515E-6	TEST
If a line is followed by a blank line put it back.	WITHOUT_CLASSIFICATION	0.9999992557903546	WITHOUT_CLASSIFICATION	7.442096453755013E-7	TEST
$>: default output handle	WITHOUT_CLASSIFICATION	0.9999993955895933	WITHOUT_CLASSIFICATION	6.044104067217235E-7	TEST
line 423	WITHOUT_CLASSIFICATION	0.9999958688916923	WITHOUT_CLASSIFICATION	4.131108307605145E-6	TEST
line 486	WITHOUT_CLASSIFICATION	0.9999970302451958	WITHOUT_CLASSIFICATION	2.969754804059711E-6	TEST
Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999998599956732	WITHOUT_CLASSIFICATION	1.400043268892783E-7	TEST
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999996959498871	WITHOUT_CLASSIFICATION	3.04050112922574E-7	TEST
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999995083199319	WITHOUT_CLASSIFICATION	4.916800680072071E-7	TEST
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999995083199319	WITHOUT_CLASSIFICATION	4.916800680072071E-7	TEST
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999995098809046	WITHOUT_CLASSIFICATION	4.901190953706797E-7	TEST
if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999952720375	WITHOUT_CLASSIFICATION	4.727962484880408E-9	TEST
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999978560699	WITHOUT_CLASSIFICATION	2.1439300323160126E-9	TEST
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9886909618627457	WITHOUT_CLASSIFICATION	0.011309038137254151	TEST
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9886909618627457	WITHOUT_CLASSIFICATION	0.011309038137254151	TEST
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9886909618627457	WITHOUT_CLASSIFICATION	0.011309038137254151	TEST
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9886909618627457	WITHOUT_CLASSIFICATION	0.011309038137254151	TEST
Decrease value to hit upper range.	WITHOUT_CLASSIFICATION	0.9999992515330864	WITHOUT_CLASSIFICATION	7.484669136506343E-7	TEST
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999993752087751	WITHOUT_CLASSIFICATION	6.247912247870091E-7	TEST
"else" body	WITHOUT_CLASSIFICATION	0.999993970961598	WITHOUT_CLASSIFICATION	6.0290384020227085E-6	TEST
done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done	WITHOUT_CLASSIFICATION	0.9999998217268415	WITHOUT_CLASSIFICATION	1.7827315851335487E-7	TEST
read-volatile	WITHOUT_CLASSIFICATION	0.9999991996260188	WITHOUT_CLASSIFICATION	8.003739811916057E-7	TEST
$+: string matches last paren.	WITHOUT_CLASSIFICATION	0.9999945319101918	WITHOUT_CLASSIFICATION	5.468089808213067E-6	TEST
should alter global state	WITHOUT_CLASSIFICATION	0.9999830889876282	WITHOUT_CLASSIFICATION	1.6911012371700745E-5	TEST
should alter global state	WITHOUT_CLASSIFICATION	0.9999830889876282	WITHOUT_CLASSIFICATION	1.6911012371700745E-5	TEST
Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999884822626	WITHOUT_CLASSIFICATION	1.1517737399770878E-8	TEST
10!	WITHOUT_CLASSIFICATION	0.9997825116623587	WITHOUT_CLASSIFICATION	2.1748833764144662E-4	TEST
case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done	WITHOUT_CLASSIFICATION	0.9999998633957401	WITHOUT_CLASSIFICATION	1.3660425996452625E-7	TEST
Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9996202324332696	WITHOUT_CLASSIFICATION	3.797675667304425E-4	TEST
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999993129571793	WITHOUT_CLASSIFICATION	6.870428208836569E-7	TEST
first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999988466950572	WITHOUT_CLASSIFICATION	1.1533049427319618E-6	TEST
Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.	WITHOUT_CLASSIFICATION	0.9999998811894146	WITHOUT_CLASSIFICATION	1.1881058533177733E-7	TEST
Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.999997025991373	WITHOUT_CLASSIFICATION	2.974008627015419E-6	TEST
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999832411315616	WITHOUT_CLASSIFICATION	1.6758868438462386E-5	TEST
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999832411315616	WITHOUT_CLASSIFICATION	1.6758868438462386E-5	TEST
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999759184242	WITHOUT_CLASSIFICATION	2.408157590785726E-8	TEST
line 449	WITHOUT_CLASSIFICATION	0.9999966387683777	WITHOUT_CLASSIFICATION	3.3612316222991266E-6	TEST
line 495	WITHOUT_CLASSIFICATION	0.9999968582094342	WITHOUT_CLASSIFICATION	3.1417905657571205E-6	TEST
Management/monitoring	WITHOUT_CLASSIFICATION	0.9999932687938277	WITHOUT_CLASSIFICATION	6.731206172332106E-6	TEST
if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999996151655187	WITHOUT_CLASSIFICATION	3.848344813020643E-7	TEST
14!	WITHOUT_CLASSIFICATION	0.9997702246416312	WITHOUT_CLASSIFICATION	2.2977535836870352E-4	TEST
Process any set of annotations No supported options	WITHOUT_CLASSIFICATION	0.999996930160771	WITHOUT_CLASSIFICATION	3.069839229057055E-6	TEST
add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999996190220136	WITHOUT_CLASSIFICATION	3.809779863484669E-7	TEST
extract item from array	WITHOUT_CLASSIFICATION	0.9999979746346662	WITHOUT_CLASSIFICATION	2.0253653337687036E-6	TEST
extract item from array	WITHOUT_CLASSIFICATION	0.9999979746346662	WITHOUT_CLASSIFICATION	2.0253653337687036E-6	TEST
case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done	WITHOUT_CLASSIFICATION	0.9999999859298833	WITHOUT_CLASSIFICATION	1.4070116778782019E-8	TEST
Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run	WITHOUT_CLASSIFICATION	0.9999999984154933	WITHOUT_CLASSIFICATION	1.584506770070613E-9	TEST
The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.	WITHOUT_CLASSIFICATION	0.9999982010739735	WITHOUT_CLASSIFICATION	1.7989260263772956E-6	TEST
index for the item	WITHOUT_CLASSIFICATION	0.9999994532752653	WITHOUT_CLASSIFICATION	5.467247346722397E-7	TEST
Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999998715438487	WITHOUT_CLASSIFICATION	1.2845615134467008E-7	TEST
18!	WITHOUT_CLASSIFICATION	0.9997492242072189	WITHOUT_CLASSIFICATION	2.507757927810717E-4	TEST
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999999105280266	WITHOUT_CLASSIFICATION	8.947197333623201E-8	TEST
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998465490818	WITHOUT_CLASSIFICATION	1.534509182032271E-7	TEST
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998465490818	WITHOUT_CLASSIFICATION	1.534509182032271E-7	TEST
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998465490818	WITHOUT_CLASSIFICATION	1.534509182032271E-7	TEST
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998465490818	WITHOUT_CLASSIFICATION	1.534509182032271E-7	TEST
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999998349496264	WITHOUT_CLASSIFICATION	1.6505037365163128E-7	TEST
This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction	WITHOUT_CLASSIFICATION	0.9999990067993538	WITHOUT_CLASSIFICATION	9.932006462288243E-7	TEST
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998846002035691	WITHOUT_CLASSIFICATION	1.1539979643096187E-4	TEST
An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999986431164091	WITHOUT_CLASSIFICATION	1.3568835909606998E-6	TEST
MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.999998960239938	WITHOUT_CLASSIFICATION	1.0397600620875156E-6	TEST
22!	WITHOUT_CLASSIFICATION	0.9996646470113666	WITHOUT_CLASSIFICATION	3.353529886335082E-4	TEST
attribute set.	WITHOUT_CLASSIFICATION	0.9999994294343529	WITHOUT_CLASSIFICATION	5.705656469610601E-7	TEST
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999911384097951	WITHOUT_CLASSIFICATION	8.861590204907586E-6	TEST
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999911384097951	WITHOUT_CLASSIFICATION	8.861590204907586E-6	TEST
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999911384097951	WITHOUT_CLASSIFICATION	8.861590204907586E-6	TEST
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999997196398928	WITHOUT_CLASSIFICATION	2.803601073182527E-7	TEST
Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999999641695042	WITHOUT_CLASSIFICATION	3.583049582002722E-8	TEST
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999998250259028	WITHOUT_CLASSIFICATION	1.7497409725455304E-7	TEST
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.9999998250259028	WITHOUT_CLASSIFICATION	1.7497409725455304E-7	TEST
AF_INET	WITHOUT_CLASSIFICATION	0.999939863328373	WITHOUT_CLASSIFICATION	6.013667162684255E-5	TEST
Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.	WITHOUT_CLASSIFICATION	0.9999999999999158	WITHOUT_CLASSIFICATION	8.425292823152589E-14	TEST
Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999998809507423	WITHOUT_CLASSIFICATION	1.1904925772636609E-7	TEST
BASE64	WITHOUT_CLASSIFICATION	0.9998781510896698	WITHOUT_CLASSIFICATION	1.2184891033024985E-4	TEST
note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.	WITHOUT_CLASSIFICATION	0.9999999903033868	WITHOUT_CLASSIFICATION	9.69661325572774E-9	TEST
element set	WITHOUT_CLASSIFICATION	0.9999993883351265	WITHOUT_CLASSIFICATION	6.116648734892076E-7	TEST
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999990339767934	WITHOUT_CLASSIFICATION	9.660232066960706E-7	TEST
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999990339767934	WITHOUT_CLASSIFICATION	9.660232066960706E-7	TEST
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999998674860082	WITHOUT_CLASSIFICATION	1.3251399180022093E-6	TEST
SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999830987704	WITHOUT_CLASSIFICATION	1.6901229643207853E-8	TEST
getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999998856199044	WITHOUT_CLASSIFICATION	1.1438009565703825E-7	TEST
IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999996294420901	WITHOUT_CLASSIFICATION	3.7055790988500685E-7	TEST
promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999985999315923	WITHOUT_CLASSIFICATION	1.4000684077223709E-6	TEST
Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999803891884	WITHOUT_CLASSIFICATION	1.9610811617451177E-8	TEST
carriage return	WITHOUT_CLASSIFICATION	0.9999997836170785	WITHOUT_CLASSIFICATION	2.1638292144611128E-7	TEST
yyDgoto 136	WITHOUT_CLASSIFICATION	0.999965091088435	WITHOUT_CLASSIFICATION	3.490891156496409E-5	TEST
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999823978780662	WITHOUT_CLASSIFICATION	1.7602121933803507E-5	TEST
String construction routines by NOT byte[] buffer and making the target String shared	WITHOUT_CLASSIFICATION	0.9999999345193836	WITHOUT_CLASSIFICATION	6.548061638545174E-8	TEST
insert all nodes in sequence, hash them in the final instruction KEY	WITHOUT_CLASSIFICATION	0.9999999416930458	WITHOUT_CLASSIFICATION	5.8306954111711224E-8	TEST
return last value from execution	WITHOUT_CLASSIFICATION	0.9999999673560334	WITHOUT_CLASSIFICATION	3.264396666999803E-8	TEST
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998234066433	WITHOUT_CLASSIFICATION	1.7659335676377172E-7	TEST
Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions	WITHOUT_CLASSIFICATION	0.999999616390583	WITHOUT_CLASSIFICATION	3.836094170069834E-7	TEST
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999998573724781	WITHOUT_CLASSIFICATION	1.4262752190927254E-7	TEST
For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999999984383526	WITHOUT_CLASSIFICATION	1.5616474037942341E-9	TEST
implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999997463562345	WITHOUT_CLASSIFICATION	2.536437655041015E-7	TEST
CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999966482113	WITHOUT_CLASSIFICATION	3.3517886644040096E-9	TEST
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999778863294	WITHOUT_CLASSIFICATION	2.211367060026543E-8	TEST
leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999999522301216	WITHOUT_CLASSIFICATION	4.7769878411415964E-8	TEST
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999671960635	WITHOUT_CLASSIFICATION	3.280393640120092E-8	TEST
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999285959745	WITHOUT_CLASSIFICATION	7.140402546982961E-8	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999999030804917	WITHOUT_CLASSIFICATION	9.691950821606137E-8	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999999030804917	WITHOUT_CLASSIFICATION	9.691950821606137E-8	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999999030804917	WITHOUT_CLASSIFICATION	9.691950821606137E-8	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999999030804917	WITHOUT_CLASSIFICATION	9.691950821606137E-8	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999999030804917	WITHOUT_CLASSIFICATION	9.691950821606137E-8	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999999030804917	WITHOUT_CLASSIFICATION	9.691950821606137E-8	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999999030804917	WITHOUT_CLASSIFICATION	9.691950821606137E-8	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999999030804917	WITHOUT_CLASSIFICATION	9.691950821606137E-8	TEST
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999997911641859	WITHOUT_CLASSIFICATION	2.0883581393616854E-7	TEST
fall through	WITHOUT_CLASSIFICATION	0.9999849160774813	WITHOUT_CLASSIFICATION	1.5083922518626354E-5	TEST
deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999620451826392	WITHOUT_CLASSIFICATION	3.7954817360872354E-5	TEST
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999997787175378	WITHOUT_CLASSIFICATION	2.2128246221954828E-7	TEST
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999997490473953	WITHOUT_CLASSIFICATION	2.509526047692421E-7	TEST
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999997490473953	WITHOUT_CLASSIFICATION	2.509526047692421E-7	TEST
store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999991301793418	WITHOUT_CLASSIFICATION	8.698206582545252E-7	TEST
the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999997511672184	WITHOUT_CLASSIFICATION	2.488327816005662E-7	TEST
First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.999999840562453	WITHOUT_CLASSIFICATION	1.5943754698401318E-7	TEST
public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999991398513399	WITHOUT_CLASSIFICATION	8.601486600516646E-7	TEST
get current context	WITHOUT_CLASSIFICATION	0.9999995371235721	WITHOUT_CLASSIFICATION	4.6287642784078304E-7	TEST
octal constant	WITHOUT_CLASSIFICATION	0.9999967275747198	WITHOUT_CLASSIFICATION	3.272425280307642E-6	TEST
read	WITHOUT_CLASSIFICATION	0.9999872274033936	WITHOUT_CLASSIFICATION	1.2772596606378049E-5	TEST
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.999995275912332	WITHOUT_CLASSIFICATION	4.724087668104906E-6	TEST
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999979344352327	WITHOUT_CLASSIFICATION	2.0655647673757205E-6	TEST
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998672804251	WITHOUT_CLASSIFICATION	1.3271957487092513E-7	TEST
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998672804251	WITHOUT_CLASSIFICATION	1.3271957487092513E-7	TEST
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998672804251	WITHOUT_CLASSIFICATION	1.3271957487092513E-7	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999300736474	WITHOUT_CLASSIFICATION	6.992635266576928E-8	TEST
at end	WITHOUT_CLASSIFICATION	0.9999991312473236	WITHOUT_CLASSIFICATION	8.687526764481993E-7	TEST
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.9999965052855456	WITHOUT_CLASSIFICATION	3.494714454426336E-6	TEST
save blocking state	WITHOUT_CLASSIFICATION	0.9999993279932866	WITHOUT_CLASSIFICATION	6.720067133552692E-7	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999887095390616	WITHOUT_CLASSIFICATION	1.1290460938420794E-5	TEST
invoke static __file__	WITHOUT_CLASSIFICATION	0.9999996616769404	WITHOUT_CLASSIFICATION	3.383230596086417E-7	TEST
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999875540441036	WITHOUT_CLASSIFICATION	1.2445955896431535E-5	TEST
fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999999964261729	WITHOUT_CLASSIFICATION	3.5738271561445116E-9	TEST
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999998816192146	WITHOUT_CLASSIFICATION	1.1838078540348362E-6	TEST
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999998816192146	WITHOUT_CLASSIFICATION	1.1838078540348362E-6	TEST
load null block	WITHOUT_CLASSIFICATION	0.9999965646690409	WITHOUT_CLASSIFICATION	3.4353309591350074E-6	TEST
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999999523455589	WITHOUT_CLASSIFICATION	4.76544411001999E-7	TEST
nothing else to here - the module version will be included in the class.	WITHOUT_CLASSIFICATION	0.9999999920198491	WITHOUT_CLASSIFICATION	7.98015080776206E-9	TEST
JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999510411013	WITHOUT_CLASSIFICATION	4.8958898747363456E-8	TEST
block given	WITHOUT_CLASSIFICATION	0.9999968974024015	WITHOUT_CLASSIFICATION	3.1025975985879744E-6	TEST
block given	WITHOUT_CLASSIFICATION	0.9999968974024015	WITHOUT_CLASSIFICATION	3.1025975985879744E-6	TEST
Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9999997879874668	WITHOUT_CLASSIFICATION	2.1201253314766353E-7	TEST
Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999037132987	WITHOUT_CLASSIFICATION	9.628670131925018E-8	TEST
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999997098476279	WITHOUT_CLASSIFICATION	2.901523721021216E-6	TEST
self	WITHOUT_CLASSIFICATION	0.9999847738843377	WITHOUT_CLASSIFICATION	1.5226115662397196E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999847738843377	WITHOUT_CLASSIFICATION	1.5226115662397196E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999847738843377	WITHOUT_CLASSIFICATION	1.5226115662397196E-5	TEST
declare the field	WITHOUT_CLASSIFICATION	0.9999998286364784	WITHOUT_CLASSIFICATION	1.71363521691125E-7	TEST
Assign the values.	WITHOUT_CLASSIFICATION	0.9999996096369534	WITHOUT_CLASSIFICATION	3.9036304666375656E-7	TEST
Assign the values.	WITHOUT_CLASSIFICATION	0.9999996096369534	WITHOUT_CLASSIFICATION	3.9036304666375656E-7	TEST
check arity	WITHOUT_CLASSIFICATION	0.9999996039259479	WITHOUT_CLASSIFICATION	3.960740521495266E-7	TEST
check arity	WITHOUT_CLASSIFICATION	0.9999996039259479	WITHOUT_CLASSIFICATION	3.960740521495266E-7	TEST
create the class	WITHOUT_CLASSIFICATION	0.9999993669853083	WITHOUT_CLASSIFICATION	6.330146917520455E-7	TEST
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999284014367	WITHOUT_CLASSIFICATION	7.159856335969592E-8	TEST
No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999929298371646	WITHOUT_CLASSIFICATION	7.070162835485246E-6	TEST
1.8	WITHOUT_CLASSIFICATION	0.9997127463728605	WITHOUT_CLASSIFICATION	2.8725362713962567E-4	TEST
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9999988800101796	WITHOUT_CLASSIFICATION	1.1199898203805414E-6	TEST
Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999997474526711	WITHOUT_CLASSIFICATION	2.5254732893097573E-7	TEST
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999947015406	WITHOUT_CLASSIFICATION	5.29845943292633E-9	TEST
block	WITHOUT_CLASSIFICATION	0.9999651089583473	WITHOUT_CLASSIFICATION	3.489104165274353E-5	TEST
Label for the start of the method Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999994656655457	WITHOUT_CLASSIFICATION	5.343344544019937E-7	TEST
comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999974696376	WITHOUT_CLASSIFICATION	2.5303623382362897E-9	TEST
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9996120403386545	WITHOUT_CLASSIFICATION	3.879596613455578E-4	TEST
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999985196613651	WITHOUT_CLASSIFICATION	1.4803386349885768E-6	TEST
all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999979828069516	WITHOUT_CLASSIFICATION	2.0171930483025353E-6	TEST
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999995837925352	WITHOUT_CLASSIFICATION	4.1620746483471185E-7	TEST
Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999939262527	WITHOUT_CLASSIFICATION	6.073747266232391E-9	TEST
Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.999997935432407	WITHOUT_CLASSIFICATION	2.0645675930200956E-6	TEST
Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999991922486391	WITHOUT_CLASSIFICATION	8.077513609256301E-7	TEST
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999934881902	WITHOUT_CLASSIFICATION	6.511809662740436E-9	TEST
ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999890497234332	WITHOUT_CLASSIFICATION	1.0950276566721205E-5	TEST
return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999919517693932	WITHOUT_CLASSIFICATION	8.048230606887844E-6	TEST
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999992539216345	WITHOUT_CLASSIFICATION	7.460783655538794E-7	TEST
arg	WITHOUT_CLASSIFICATION	0.9999231848227448	WITHOUT_CLASSIFICATION	7.681517725523069E-5	TEST
Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999992413607319	WITHOUT_CLASSIFICATION	7.586392680422388E-7	TEST
normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.999999972958731	WITHOUT_CLASSIFICATION	2.704126889354001E-8	TEST
coerce arguments	WITHOUT_CLASSIFICATION	0.9999996979672215	WITHOUT_CLASSIFICATION	3.0203277844117005E-7	TEST
0.0 is ok float range inverted float range? NaN +infinity -infinity	WITHOUT_CLASSIFICATION	0.9999959013689211	WITHOUT_CLASSIFICATION	4.098631078818862E-6	TEST
expected	WITHOUT_CLASSIFICATION	0.999992526971571	WITHOUT_CLASSIFICATION	7.47302842900894E-6	TEST
set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999989833693785	WITHOUT_CLASSIFICATION	1.0166306214413922E-6	TEST
ignore backslashed spaces in %w	WITHOUT_CLASSIFICATION	0.9999999366652901	WITHOUT_CLASSIFICATION	6.333470994163797E-8	TEST
Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999996256459	WITHOUT_CLASSIFICATION	3.743540725556107E-10	TEST
no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999990153177619	WITHOUT_CLASSIFICATION	9.846822380402536E-7	TEST
<=> may return nil in many circumstances, e.g. 3 <=> NaN	WITHOUT_CLASSIFICATION	0.9999995988213559	WITHOUT_CLASSIFICATION	4.0117864410073043E-7	TEST
use numbered access method	WITHOUT_CLASSIFICATION	0.9999994644380499	WITHOUT_CLASSIFICATION	5.355619501359592E-7	TEST
Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.999999952538865	WITHOUT_CLASSIFICATION	4.74611349857157E-8	TEST
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999995254931269	WITHOUT_CLASSIFICATION	4.745068730785446E-7	TEST
The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999923606492755	WITHOUT_CLASSIFICATION	7.639350724422336E-6	TEST
Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999997414048002	WITHOUT_CLASSIFICATION	2.5859519978706196E-7	TEST
arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999994791775921	WITHOUT_CLASSIFICATION	5.208224079151706E-7	TEST
build scope names string	WITHOUT_CLASSIFICATION	0.9999978215203745	WITHOUT_CLASSIFICATION	2.1784796254274586E-6	TEST
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999944764716	WITHOUT_CLASSIFICATION	5.5235283293055125E-9	TEST
Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999990885864313	WITHOUT_CLASSIFICATION	9.114135687990738E-7	TEST
finally	WITHOUT_CLASSIFICATION	0.9999819241552166	WITHOUT_CLASSIFICATION	1.8075844783420987E-5	TEST
MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999974834225341	WITHOUT_CLASSIFICATION	2.5165774658256298E-6	TEST
?l | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999998121751766	WITHOUT_CLASSIFICATION	1.8782482349622805E-7	TEST
This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999997359185735	WITHOUT_CLASSIFICATION	2.640814264828341E-7	TEST
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999931873219517	WITHOUT_CLASSIFICATION	6.812678048267614E-6	TEST
specific arity	WITHOUT_CLASSIFICATION	0.9999998346651823	WITHOUT_CLASSIFICATION	1.6533481770276216E-7	TEST
In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999895281572	WITHOUT_CLASSIFICATION	1.0471842946671825E-8	TEST
?w | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999996010926593	WITHOUT_CLASSIFICATION	3.9890734073170253E-7	TEST
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998546876880086	WITHOUT_CLASSIFICATION	1.4531231199142058E-4	TEST
@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }	WITHOUT_CLASSIFICATION	0.9999999389512507	WITHOUT_CLASSIFICATION	6.104874930708038E-8	TEST
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999999673357016	WITHOUT_CLASSIFICATION	3.2664298392771907E-7	TEST
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999999673357016	WITHOUT_CLASSIFICATION	3.2664298392771907E-7	TEST
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998748306006	WITHOUT_CLASSIFICATION	1.2516939931864198E-7	TEST
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999998748306006	WITHOUT_CLASSIFICATION	1.2516939931864198E-7	TEST
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999279970783738	WITHOUT_CLASSIFICATION	7.200292162622363E-5	TEST
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999279970783738	WITHOUT_CLASSIFICATION	7.200292162622363E-5	TEST
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9999992257666439	WITHOUT_CLASSIFICATION	7.742333560496041E-7	TEST
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9999992257666439	WITHOUT_CLASSIFICATION	7.742333560496041E-7	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999980730615922	WITHOUT_CLASSIFICATION	1.926938407742702E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999980730615922	WITHOUT_CLASSIFICATION	1.926938407742702E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999980730615922	WITHOUT_CLASSIFICATION	1.926938407742702E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999980730615922	WITHOUT_CLASSIFICATION	1.926938407742702E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999980730615922	WITHOUT_CLASSIFICATION	1.926938407742702E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999980730615922	WITHOUT_CLASSIFICATION	1.926938407742702E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999980730615922	WITHOUT_CLASSIFICATION	1.926938407742702E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999980730615922	WITHOUT_CLASSIFICATION	1.926938407742702E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999980730615922	WITHOUT_CLASSIFICATION	1.926938407742702E-6	TEST
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999966007494195	WITHOUT_CLASSIFICATION	3.399250580442626E-6	TEST
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999966007494195	WITHOUT_CLASSIFICATION	3.399250580442626E-6	TEST
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999966007494195	WITHOUT_CLASSIFICATION	3.399250580442626E-6	TEST
Add property name aliases	WITHOUT_CLASSIFICATION	0.999998978468911	WITHOUT_CLASSIFICATION	1.0215310890562427E-6	TEST
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999998273172982	WITHOUT_CLASSIFICATION	1.726827018318703E-7	TEST
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999998273172982	WITHOUT_CLASSIFICATION	1.726827018318703E-7	TEST
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999998273172982	WITHOUT_CLASSIFICATION	1.726827018318703E-7	TEST
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999991345406742	WITHOUT_CLASSIFICATION	8.654593258408046E-7	TEST
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999991345406742	WITHOUT_CLASSIFICATION	8.654593258408046E-7	TEST
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999991345406742	WITHOUT_CLASSIFICATION	8.654593258408046E-7	TEST
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998512813034809	WITHOUT_CLASSIFICATION	1.4871869651903477E-4	TEST
backspace	WITHOUT_CLASSIFICATION	0.9999969471631855	WITHOUT_CLASSIFICATION	3.0528368144234057E-6	TEST
yySindex 889	WITHOUT_CLASSIFICATION	0.9999900986284769	WITHOUT_CLASSIFICATION	9.901371523204158E-6	TEST
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999908123771314	WITHOUT_CLASSIFICATION	9.187622868665415E-6	TEST
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999908123771314	WITHOUT_CLASSIFICATION	9.187622868665415E-6	TEST
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999908123771314	WITHOUT_CLASSIFICATION	9.187622868665415E-6	TEST
package-private	WITHOUT_CLASSIFICATION	0.9999971471851813	WITHOUT_CLASSIFICATION	2.852814818779136E-6	TEST
fall through	WITHOUT_CLASSIFICATION	0.9999849160774813	WITHOUT_CLASSIFICATION	1.5083922518626354E-5	TEST
fall through	WITHOUT_CLASSIFICATION	0.9999849160774813	WITHOUT_CLASSIFICATION	1.5083922518626354E-5	TEST
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.999997973561404	WITHOUT_CLASSIFICATION	2.0264385960601847E-6	TEST
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997771304366	WITHOUT_CLASSIFICATION	2.2286956342852986E-7	TEST
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997771304366	WITHOUT_CLASSIFICATION	2.2286956342852986E-7	TEST
Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable	WITHOUT_CLASSIFICATION	0.9998291221736556	WITHOUT_CLASSIFICATION	1.708778263443518E-4	TEST
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999078831620817	WITHOUT_CLASSIFICATION	9.211683791834395E-5	TEST
The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999973919381272	WITHOUT_CLASSIFICATION	2.608061872887114E-6	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999963133335161	WITHOUT_CLASSIFICATION	3.6866664838994663E-6	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999963133335161	WITHOUT_CLASSIFICATION	3.6866664838994663E-6	TEST
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999995647210739	WITHOUT_CLASSIFICATION	4.3527892624400254E-7	TEST
We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999989168230468	WITHOUT_CLASSIFICATION	1.0831769532932784E-6	TEST
note that addMethod now does its own put, so any change made to functionality here should be made there as well	WITHOUT_CLASSIFICATION	0.9999977809456865	WITHOUT_CLASSIFICATION	2.219054313496784E-6	TEST
Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }	WITHOUT_CLASSIFICATION	0.999999996419673	WITHOUT_CLASSIFICATION	3.5803270294364046E-9	TEST
empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999894760689227	WITHOUT_CLASSIFICATION	1.0523931077218604E-5	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999963133335161	WITHOUT_CLASSIFICATION	3.6866664838994663E-6	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999963133335161	WITHOUT_CLASSIFICATION	3.6866664838994663E-6	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999963133335161	WITHOUT_CLASSIFICATION	3.6866664838994663E-6	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999963133335161	WITHOUT_CLASSIFICATION	3.6866664838994663E-6	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999963133335161	WITHOUT_CLASSIFICATION	3.6866664838994663E-6	TEST
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999997546637482	WITHOUT_CLASSIFICATION	2.453362517259883E-7	TEST
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999997711244958	WITHOUT_CLASSIFICATION	2.2887550419506017E-6	TEST
if it's an inner class and it's not public, we can't access it; skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999959478479	WITHOUT_CLASSIFICATION	4.0521520899623305E-9	TEST
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.999997867901908	WITHOUT_CLASSIFICATION	2.132098092064759E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.	WITHOUT_CLASSIFICATION	0.9999999310989406	WITHOUT_CLASSIFICATION	6.890105944875962E-8	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999996063207891	WITHOUT_CLASSIFICATION	3.9367921096913365E-7	TEST
This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999621197653812	WITHOUT_CLASSIFICATION	3.788023461872157E-5	TEST
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999981059675269	WITHOUT_CLASSIFICATION	1.894032473101571E-6	TEST
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999128004216	WITHOUT_CLASSIFICATION	8.719957847706037E-8	TEST
get "self"	WITHOUT_CLASSIFICATION	0.9999993375990368	WITHOUT_CLASSIFICATION	6.624009632206798E-7	TEST
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999996548435166	WITHOUT_CLASSIFICATION	3.451564834037709E-7	TEST
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9999945293114171	WITHOUT_CLASSIFICATION	5.470688582937022E-6	TEST
only public methods	WITHOUT_CLASSIFICATION	0.9999998179770212	WITHOUT_CLASSIFICATION	1.8202297889095016E-7	TEST
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999960197735404	WITHOUT_CLASSIFICATION	3.980226459649737E-6	TEST
First try to use drive letter from supplied dir value, then try current work dir.	WITHOUT_CLASSIFICATION	0.9999999936393915	WITHOUT_CLASSIFICATION	6.360608408742288E-9	TEST
JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.	WITHOUT_CLASSIFICATION	0.9999999822756566	WITHOUT_CLASSIFICATION	1.7724343393370168E-8	TEST
generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999997708630638	WITHOUT_CLASSIFICATION	2.2913693615208778E-7	TEST
block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry	WITHOUT_CLASSIFICATION	0.9999999985618149	WITHOUT_CLASSIFICATION	1.4381851614226683E-9	TEST
Add aliases in Type::, NativeType:: and FFI::TYPE_	WITHOUT_CLASSIFICATION	0.9999993735540568	WITHOUT_CLASSIFICATION	6.26445943205527E-7	TEST
Create constants for flock	WITHOUT_CLASSIFICATION	0.9999955638251707	WITHOUT_CLASSIFICATION	4.436174829246302E-6	TEST
double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.999985611878192	WITHOUT_CLASSIFICATION	1.4388121808036173E-5	TEST
indices for temp values	WITHOUT_CLASSIFICATION	0.999998392085687	WITHOUT_CLASSIFICATION	1.607914313043007E-6	TEST
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.999999992980982	WITHOUT_CLASSIFICATION	7.019018097920898E-9	TEST
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999980901040371	WITHOUT_CLASSIFICATION	1.909895962984231E-6	TEST
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999980901040371	WITHOUT_CLASSIFICATION	1.909895962984231E-6	TEST
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999980901040371	WITHOUT_CLASSIFICATION	1.909895962984231E-6	TEST
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999980901040371	WITHOUT_CLASSIFICATION	1.909895962984231E-6	TEST
snapshot of contents of directory current position in directory	WITHOUT_CLASSIFICATION	0.9999996252208222	WITHOUT_CLASSIFICATION	3.7477917779438107E-7	TEST
Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999993818819084	WITHOUT_CLASSIFICATION	6.181180915982001E-7	TEST
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999998132883346	WITHOUT_CLASSIFICATION	1.8671166528668866E-7	TEST
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999998132883346	WITHOUT_CLASSIFICATION	1.8671166528668866E-7	TEST
set self to the class	WITHOUT_CLASSIFICATION	0.9999999068970764	WITHOUT_CLASSIFICATION	9.310292361339329E-8	TEST
---------- Public fields, methods ---------	WITHOUT_CLASSIFICATION	0.999999776704389	WITHOUT_CLASSIFICATION	2.232956111079315E-7	TEST
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9999973435155152	WITHOUT_CLASSIFICATION	2.656484484935751E-6	TEST
zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999997409501863	WITHOUT_CLASSIFICATION	2.59049813708827E-7	TEST
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999921362984691	WITHOUT_CLASSIFICATION	7.863701531005292E-6	TEST
Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999981963524327	WITHOUT_CLASSIFICATION	1.8036475673916056E-6	TEST
Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999926816032556	WITHOUT_CLASSIFICATION	7.318396744380981E-6	TEST
do nothing	WITHOUT_CLASSIFICATION	0.9999961561492547	WITHOUT_CLASSIFICATION	3.843850745281421E-6	TEST
do nothing	WITHOUT_CLASSIFICATION	0.9999961561492547	WITHOUT_CLASSIFICATION	3.843850745281421E-6	TEST
do nothing	WITHOUT_CLASSIFICATION	0.9999961561492547	WITHOUT_CLASSIFICATION	3.843850745281421E-6	TEST
do nothing	WITHOUT_CLASSIFICATION	0.9999961561492547	WITHOUT_CLASSIFICATION	3.843850745281421E-6	TEST
If an IO exception occurs (something odd, but possible) A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999149390207	WITHOUT_CLASSIFICATION	8.506097925275275E-8	TEST
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999233525994	WITHOUT_CLASSIFICATION	7.664740058400473E-8	TEST
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999233525994	WITHOUT_CLASSIFICATION	7.664740058400473E-8	TEST
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999233525994	WITHOUT_CLASSIFICATION	7.664740058400473E-8	TEST
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999990134826027	WITHOUT_CLASSIFICATION	9.86517397293575E-7	TEST
finally with no exception	WITHOUT_CLASSIFICATION	0.9999956170369186	WITHOUT_CLASSIFICATION	4.382963081385599E-6	TEST
Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.999999424889836	WITHOUT_CLASSIFICATION	5.751101641259733E-7	TEST
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9886909618627457	WITHOUT_CLASSIFICATION	0.011309038137254151	TEST
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9886909618627457	WITHOUT_CLASSIFICATION	0.011309038137254151	TEST
The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.	WITHOUT_CLASSIFICATION	0.999999986312251	WITHOUT_CLASSIFICATION	1.3687749099020586E-8	TEST
This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999998306426803	WITHOUT_CLASSIFICATION	1.6935731974581007E-7	TEST
not a class	WITHOUT_CLASSIFICATION	0.9999990982712926	WITHOUT_CLASSIFICATION	9.017287072222299E-7	TEST
not a class	WITHOUT_CLASSIFICATION	0.9999990982712926	WITHOUT_CLASSIFICATION	9.017287072222299E-7	TEST
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999997786764962	WITHOUT_CLASSIFICATION	2.213235037927989E-6	TEST
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999997786764962	WITHOUT_CLASSIFICATION	2.213235037927989E-6	TEST
io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999995580749883	WITHOUT_CLASSIFICATION	4.4192501161339404E-7	TEST
In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999990747223443	WITHOUT_CLASSIFICATION	9.252776558385936E-7	TEST
rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999967573849404	WITHOUT_CLASSIFICATION	3.2426150596946502E-6	TEST
Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999987191225252	WITHOUT_CLASSIFICATION	1.2808774747169362E-6	TEST
CONSTANT API METHODS	WITHOUT_CLASSIFICATION	0.9999336158816152	WITHOUT_CLASSIFICATION	6.638411838477592E-5	TEST
create the default thread group	WITHOUT_CLASSIFICATION	0.9999987119579603	WITHOUT_CLASSIFICATION	1.2880420396998558E-6	TEST
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999995682154014	WITHOUT_CLASSIFICATION	4.317845986352668E-7	TEST
============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================	WITHOUT_CLASSIFICATION	0.9999995417520657	WITHOUT_CLASSIFICATION	4.582479343695597E-7	TEST
LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module	WITHOUT_CLASSIFICATION	0.9999979111458771	WITHOUT_CLASSIFICATION	2.0888541229059003E-6	TEST
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999667637409	WITHOUT_CLASSIFICATION	3.323625913274449E-8	TEST
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999667637409	WITHOUT_CLASSIFICATION	3.323625913274449E-8	TEST
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999996700245547	WITHOUT_CLASSIFICATION	3.29975445297435E-7	TEST
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999996700245547	WITHOUT_CLASSIFICATION	3.29975445297435E-7	TEST
retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999996429345762	WITHOUT_CLASSIFICATION	3.5706542375965507E-7	TEST
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999972166507708	WITHOUT_CLASSIFICATION	2.783349229196687E-6	TEST
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9999146260367037	WITHOUT_CLASSIFICATION	8.537396329626082E-5	TEST
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999980669434593	WITHOUT_CLASSIFICATION	1.9330565408134304E-6	TEST
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999980669434593	WITHOUT_CLASSIFICATION	1.9330565408134304E-6	TEST
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999980669434593	WITHOUT_CLASSIFICATION	1.9330565408134304E-6	TEST
line 286	WITHOUT_CLASSIFICATION	0.9999965680258571	WITHOUT_CLASSIFICATION	3.431974142968094E-6	TEST
line 476	WITHOUT_CLASSIFICATION	0.9999974204204863	WITHOUT_CLASSIFICATION	2.5795795135891177E-6	TEST
line 513	WITHOUT_CLASSIFICATION	0.9999968207137242	WITHOUT_CLASSIFICATION	3.179286275842364E-6	TEST
line 530	WITHOUT_CLASSIFICATION	0.9999963080847966	WITHOUT_CLASSIFICATION	3.6919152033959565E-6	TEST
line 533	WITHOUT_CLASSIFICATION	0.9999959870644795	WITHOUT_CLASSIFICATION	4.0129355205952E-6	TEST
line 537	WITHOUT_CLASSIFICATION	0.9999964005985373	WITHOUT_CLASSIFICATION	3.599401462623659E-6	TEST
line 551	WITHOUT_CLASSIFICATION	0.9999975090017591	WITHOUT_CLASSIFICATION	2.4909982409313614E-6	TEST
end loop	WITHOUT_CLASSIFICATION	0.9999984260392685	WITHOUT_CLASSIFICATION	1.5739607314201932E-6	TEST
MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999999867060813	WITHOUT_CLASSIFICATION	1.3293918740545357E-8	TEST
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.999999967519233	WITHOUT_CLASSIFICATION	3.2480766936856255E-8	TEST
Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!	WITHOUT_CLASSIFICATION	0.9999999191117164	WITHOUT_CLASSIFICATION	8.088828366204115E-8	TEST
fields should really be an immutable map as it is never modified after construction	WITHOUT_CLASSIFICATION	0.9999990838113937	WITHOUT_CLASSIFICATION	9.161886062509364E-7	TEST
load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999987786779174	WITHOUT_CLASSIFICATION	1.2213220825913301E-6	TEST
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9886909618627457	WITHOUT_CLASSIFICATION	0.011309038137254151	TEST
If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999999911964274	WITHOUT_CLASSIFICATION	8.803572688065241E-9	TEST
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9999980110040474	WITHOUT_CLASSIFICATION	1.988995952508219E-6	TEST
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999995083199319	WITHOUT_CLASSIFICATION	4.916800680072071E-7	TEST
value	WITHOUT_CLASSIFICATION	0.9999709424841675	WITHOUT_CLASSIFICATION	2.905751583246903E-5	TEST
value	WITHOUT_CLASSIFICATION	0.9999709424841675	WITHOUT_CLASSIFICATION	2.905751583246903E-5	TEST
value	WITHOUT_CLASSIFICATION	0.9999709424841675	WITHOUT_CLASSIFICATION	2.905751583246903E-5	TEST
value	WITHOUT_CLASSIFICATION	0.9999709424841675	WITHOUT_CLASSIFICATION	2.905751583246903E-5	TEST
value	WITHOUT_CLASSIFICATION	0.9999709424841675	WITHOUT_CLASSIFICATION	2.905751583246903E-5	TEST
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999830921548261	WITHOUT_CLASSIFICATION	1.690784517392834E-5	TEST
value	WITHOUT_CLASSIFICATION	0.9999709424841675	WITHOUT_CLASSIFICATION	2.905751583246903E-5	TEST
value	WITHOUT_CLASSIFICATION	0.9999709424841675	WITHOUT_CLASSIFICATION	2.905751583246903E-5	TEST
value	WITHOUT_CLASSIFICATION	0.9999709424841675	WITHOUT_CLASSIFICATION	2.905751583246903E-5	TEST
MRI has extra pointer which makes our code look a little bit more strange in comparison	WITHOUT_CLASSIFICATION	0.9999999437172954	WITHOUT_CLASSIFICATION	5.6282704628352446E-8	TEST
Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.	WITHOUT_CLASSIFICATION	0.9999995960469611	WITHOUT_CLASSIFICATION	4.039530388442302E-7	TEST
tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999909649671064	WITHOUT_CLASSIFICATION	9.035032893596608E-6	TEST
What is \v in C? case '\v': c2 = 'v'; break;	WITHOUT_CLASSIFICATION	0.9999987974183838	WITHOUT_CLASSIFICATION	1.2025816161832534E-6	TEST
Consider Thread aspects of this	WITHOUT_CLASSIFICATION	0.9999976632467126	WITHOUT_CLASSIFICATION	2.33675328747854E-6	TEST
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999767810062521	WITHOUT_CLASSIFICATION	2.3218993747873307E-5	TEST
An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999327757431	WITHOUT_CLASSIFICATION	6.722425688579835E-8	TEST
line 572	WITHOUT_CLASSIFICATION	0.999996966034587	WITHOUT_CLASSIFICATION	3.0339654130185046E-6	TEST
line 601	WITHOUT_CLASSIFICATION	0.9999977674805202	WITHOUT_CLASSIFICATION	2.2325194798408694E-6	TEST
line 601	WITHOUT_CLASSIFICATION	0.9999977674805202	WITHOUT_CLASSIFICATION	2.2325194798408694E-6	TEST
line 625	WITHOUT_CLASSIFICATION	0.9999969842784924	WITHOUT_CLASSIFICATION	3.0157215076425024E-6	TEST
line 649	WITHOUT_CLASSIFICATION	0.9999968305180176	WITHOUT_CLASSIFICATION	3.169481982363397E-6	TEST
line 691	WITHOUT_CLASSIFICATION	0.9999973282573378	WITHOUT_CLASSIFICATION	2.67174266222576E-6	TEST
line 723	WITHOUT_CLASSIFICATION	0.9999959444682429	WITHOUT_CLASSIFICATION	4.055531757162846E-6	TEST
line 732	WITHOUT_CLASSIFICATION	0.99999588019936	WITHOUT_CLASSIFICATION	4.11980063986614E-6	TEST
line 745	WITHOUT_CLASSIFICATION	0.9999973781510002	WITHOUT_CLASSIFICATION	2.621848999817576E-6	TEST
line 766	WITHOUT_CLASSIFICATION	0.9999971499626537	WITHOUT_CLASSIFICATION	2.85003734626076E-6	TEST
line 785	WITHOUT_CLASSIFICATION	0.9999970777591849	WITHOUT_CLASSIFICATION	2.922240815139913E-6	TEST
line 794	WITHOUT_CLASSIFICATION	0.9999968893492637	WITHOUT_CLASSIFICATION	3.110650736308436E-6	TEST
line 800	WITHOUT_CLASSIFICATION	0.9999969054529412	WITHOUT_CLASSIFICATION	3.094547058756825E-6	TEST
line 812	WITHOUT_CLASSIFICATION	0.9999970794354608	WITHOUT_CLASSIFICATION	2.920564539157134E-6	TEST
line 827	WITHOUT_CLASSIFICATION	0.9999966504203992	WITHOUT_CLASSIFICATION	3.3495796007823296E-6	TEST
line 839	WITHOUT_CLASSIFICATION	0.9999951315783844	WITHOUT_CLASSIFICATION	4.868421615588549E-6	TEST
line 845	WITHOUT_CLASSIFICATION	0.9999969883867235	WITHOUT_CLASSIFICATION	3.011613276529544E-6	TEST
line 864	WITHOUT_CLASSIFICATION	0.9999969538012604	WITHOUT_CLASSIFICATION	3.0461987395141667E-6	TEST
line 886	WITHOUT_CLASSIFICATION	0.9999967370028442	WITHOUT_CLASSIFICATION	3.2629971556813028E-6	TEST
line 896	WITHOUT_CLASSIFICATION	0.9999964699547302	WITHOUT_CLASSIFICATION	3.5300452698217764E-6	TEST
line 911	WITHOUT_CLASSIFICATION	0.9999971787383328	WITHOUT_CLASSIFICATION	2.821261667190099E-6	TEST
line 929	WITHOUT_CLASSIFICATION	0.9999953629058104	WITHOUT_CLASSIFICATION	4.637094189620679E-6	TEST
line 952	WITHOUT_CLASSIFICATION	0.9999962413192739	WITHOUT_CLASSIFICATION	3.7586807262348156E-6	TEST
line 970	WITHOUT_CLASSIFICATION	0.9999969202308718	WITHOUT_CLASSIFICATION	3.0797691282395523E-6	TEST
line 972	WITHOUT_CLASSIFICATION	0.9999963832061791	WITHOUT_CLASSIFICATION	3.6167938209319957E-6	TEST
line 991	WITHOUT_CLASSIFICATION	0.999997010632424	WITHOUT_CLASSIFICATION	2.989367575932098E-6	TEST
line 1011	WITHOUT_CLASSIFICATION	0.9999979905689744	WITHOUT_CLASSIFICATION	2.0094310256666246E-6	TEST
line 1026	WITHOUT_CLASSIFICATION	0.9999977526679281	WITHOUT_CLASSIFICATION	2.247332071998586E-6	TEST
line 1038	WITHOUT_CLASSIFICATION	0.9999964730139482	WITHOUT_CLASSIFICATION	3.5269860516787E-6	TEST
line 1067	WITHOUT_CLASSIFICATION	0.9999981017451091	WITHOUT_CLASSIFICATION	1.8982548908722243E-6	TEST
line 1085	WITHOUT_CLASSIFICATION	0.9999975150158058	WITHOUT_CLASSIFICATION	2.4849841941821235E-6	TEST
line 1097	WITHOUT_CLASSIFICATION	0.9999977892555292	WITHOUT_CLASSIFICATION	2.2107444707830477E-6	TEST
line 1105	WITHOUT_CLASSIFICATION	0.9999977995773639	WITHOUT_CLASSIFICATION	2.200422636118425E-6	TEST
line 1122	WITHOUT_CLASSIFICATION	0.9999973430585718	WITHOUT_CLASSIFICATION	2.6569414281985008E-6	TEST
line 1133	WITHOUT_CLASSIFICATION	0.9999968243346117	WITHOUT_CLASSIFICATION	3.1756653883373946E-6	TEST
line 1145	WITHOUT_CLASSIFICATION	0.999997852468925	WITHOUT_CLASSIFICATION	2.147531075041154E-6	TEST
line 1169	WITHOUT_CLASSIFICATION	0.9999975016604343	WITHOUT_CLASSIFICATION	2.498339565730156E-6	TEST
line 1201	WITHOUT_CLASSIFICATION	0.9999972799040729	WITHOUT_CLASSIFICATION	2.720095927042243E-6	TEST
line 1210	WITHOUT_CLASSIFICATION	0.9999975866310952	WITHOUT_CLASSIFICATION	2.4133689049686808E-6	TEST
line 1229	WITHOUT_CLASSIFICATION	0.9999965246531234	WITHOUT_CLASSIFICATION	3.4753468766891636E-6	TEST
line 1261	WITHOUT_CLASSIFICATION	0.9999974053053633	WITHOUT_CLASSIFICATION	2.594694636771187E-6	TEST
line 1287	WITHOUT_CLASSIFICATION	0.9999974261432295	WITHOUT_CLASSIFICATION	2.5738567704934663E-6	TEST
line 1293	WITHOUT_CLASSIFICATION	0.9999955140392982	WITHOUT_CLASSIFICATION	4.485960701787887E-6	TEST
line 1307	WITHOUT_CLASSIFICATION	0.9999973577069815	WITHOUT_CLASSIFICATION	2.642293018389582E-6	TEST
line 1320	WITHOUT_CLASSIFICATION	0.9999963212743836	WITHOUT_CLASSIFICATION	3.678725616301936E-6	TEST
line 1325	WITHOUT_CLASSIFICATION	0.9999967114477863	WITHOUT_CLASSIFICATION	3.2885522135919434E-6	TEST
line 1363	WITHOUT_CLASSIFICATION	0.9999968235332507	WITHOUT_CLASSIFICATION	3.176466749294448E-6	TEST
line 1398	WITHOUT_CLASSIFICATION	0.999996161455495	WITHOUT_CLASSIFICATION	3.83854450506519E-6	TEST
line 1448	WITHOUT_CLASSIFICATION	0.9999974383551122	WITHOUT_CLASSIFICATION	2.5616448878306065E-6	TEST
line 1456	WITHOUT_CLASSIFICATION	0.9999979228429967	WITHOUT_CLASSIFICATION	2.077157003239869E-6	TEST
line 1473	WITHOUT_CLASSIFICATION	0.9999971424250117	WITHOUT_CLASSIFICATION	2.8575749881812586E-6	TEST
line 1492	WITHOUT_CLASSIFICATION	0.9999971291106912	WITHOUT_CLASSIFICATION	2.870889308823244E-6	TEST
line 1513	WITHOUT_CLASSIFICATION	0.9999968174282323	WITHOUT_CLASSIFICATION	3.1825717677187663E-6	TEST
line 1523	WITHOUT_CLASSIFICATION	0.9999966942773821	WITHOUT_CLASSIFICATION	3.305722617880872E-6	TEST
line 1562	WITHOUT_CLASSIFICATION	0.9999975978088425	WITHOUT_CLASSIFICATION	2.402191157504375E-6	TEST
line 1582	WITHOUT_CLASSIFICATION	0.999997270090879	WITHOUT_CLASSIFICATION	2.7299091210483756E-6	TEST
line 1603	WITHOUT_CLASSIFICATION	0.9999964906907601	WITHOUT_CLASSIFICATION	3.509309239824027E-6	TEST
line 1603	WITHOUT_CLASSIFICATION	0.9999964906907601	WITHOUT_CLASSIFICATION	3.509309239824027E-6	TEST
line 1615	WITHOUT_CLASSIFICATION	0.9999977112442219	WITHOUT_CLASSIFICATION	2.288755778047288E-6	TEST
line 1620	WITHOUT_CLASSIFICATION	0.9999973480437058	WITHOUT_CLASSIFICATION	2.6519562942908582E-6	TEST
line 1635	WITHOUT_CLASSIFICATION	0.9999970382491168	WITHOUT_CLASSIFICATION	2.961750883102275E-6	TEST
line 1652	WITHOUT_CLASSIFICATION	0.9999975546884784	WITHOUT_CLASSIFICATION	2.445311521620254E-6	TEST
line 1681	WITHOUT_CLASSIFICATION	0.9999974577825641	WITHOUT_CLASSIFICATION	2.54221743586566E-6	TEST
line 1708	WITHOUT_CLASSIFICATION	0.99999748945866	WITHOUT_CLASSIFICATION	2.5105413401206776E-6	TEST
line 1716	WITHOUT_CLASSIFICATION	0.9999977964595527	WITHOUT_CLASSIFICATION	2.2035404474285415E-6	TEST
line 1755	WITHOUT_CLASSIFICATION	0.9999977456098682	WITHOUT_CLASSIFICATION	2.25439013176799E-6	TEST
line 1772	WITHOUT_CLASSIFICATION	0.9999974315894056	WITHOUT_CLASSIFICATION	2.5684105944600354E-6	TEST
line 1789	WITHOUT_CLASSIFICATION	0.9999973429430213	WITHOUT_CLASSIFICATION	2.6570569786591817E-6	TEST
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9997868149815927	WITHOUT_CLASSIFICATION	2.131850184072992E-4	TEST
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9997868149815927	WITHOUT_CLASSIFICATION	2.131850184072992E-4	TEST
force for args	WITHOUT_CLASSIFICATION	0.999998476498453	WITHOUT_CLASSIFICATION	1.5235015470295169E-6	TEST
last expression should not be void	WITHOUT_CLASSIFICATION	0.9999977034762909	WITHOUT_CLASSIFICATION	2.296523709161287E-6	TEST
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9999993831320182	WITHOUT_CLASSIFICATION	6.168679818018227E-7	TEST
We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999995552083102	WITHOUT_CLASSIFICATION	4.447916897498508E-7	TEST
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999308934645	WITHOUT_CLASSIFICATION	6.910653547789933E-8	TEST
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999308934645	WITHOUT_CLASSIFICATION	6.910653547789933E-8	TEST
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999308934645	WITHOUT_CLASSIFICATION	6.910653547789933E-8	TEST
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999308934645	WITHOUT_CLASSIFICATION	6.910653547789933E-8	TEST
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9812069921540022	WITHOUT_CLASSIFICATION	0.01879300784599778	TEST
This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.	WITHOUT_CLASSIFICATION	0.9999741229648681	WITHOUT_CLASSIFICATION	2.587703513184972E-5	TEST
line 313	WITHOUT_CLASSIFICATION	0.99999560759038	WITHOUT_CLASSIFICATION	4.392409620069917E-6	TEST
line 339	WITHOUT_CLASSIFICATION	0.9999938436879287	WITHOUT_CLASSIFICATION	6.156312071250382E-6	TEST
line 361	WITHOUT_CLASSIFICATION	0.9999957785654763	WITHOUT_CLASSIFICATION	4.221434523792344E-6	TEST
line 413	WITHOUT_CLASSIFICATION	0.9999969108487672	WITHOUT_CLASSIFICATION	3.089151232747979E-6	TEST
line 451	WITHOUT_CLASSIFICATION	0.9999977613321989	WITHOUT_CLASSIFICATION	2.2386678011008954E-6	TEST
line 472	WITHOUT_CLASSIFICATION	0.9999970510168111	WITHOUT_CLASSIFICATION	2.948983188923855E-6	TEST
line 500	WITHOUT_CLASSIFICATION	0.9999971220802315	WITHOUT_CLASSIFICATION	2.877919768546147E-6	TEST
line 515	WITHOUT_CLASSIFICATION	0.9999975200661134	WITHOUT_CLASSIFICATION	2.4799338864937017E-6	TEST
line 555	WITHOUT_CLASSIFICATION	0.9999968168037503	WITHOUT_CLASSIFICATION	3.183196249677196E-6	TEST
line 582	WITHOUT_CLASSIFICATION	0.9999965153290294	WITHOUT_CLASSIFICATION	3.4846709706212595E-6	TEST
line 619	WITHOUT_CLASSIFICATION	0.9999973887515197	WITHOUT_CLASSIFICATION	2.611248480289165E-6	TEST
line 636	WITHOUT_CLASSIFICATION	0.9999959788686696	WITHOUT_CLASSIFICATION	4.021131330256324E-6	TEST
line 669	WITHOUT_CLASSIFICATION	0.999996583863216	WITHOUT_CLASSIFICATION	3.4161367838957885E-6	TEST
line 703	WITHOUT_CLASSIFICATION	0.9999958727591923	WITHOUT_CLASSIFICATION	4.127240807722536E-6	TEST
line 776	WITHOUT_CLASSIFICATION	0.999997149752654	WITHOUT_CLASSIFICATION	2.850247345962308E-6	TEST
line 814	WITHOUT_CLASSIFICATION	0.9999974415476164	WITHOUT_CLASSIFICATION	2.558452383522359E-6	TEST
line 823	WITHOUT_CLASSIFICATION	0.9999953064875737	WITHOUT_CLASSIFICATION	4.693512426294773E-6	TEST
line 854	WITHOUT_CLASSIFICATION	0.9999969326363629	WITHOUT_CLASSIFICATION	3.0673636370511152E-6	TEST
line 872	WITHOUT_CLASSIFICATION	0.9999966477400998	WITHOUT_CLASSIFICATION	3.3522599001801096E-6	TEST
line 905	WITHOUT_CLASSIFICATION	0.999996295556706	WITHOUT_CLASSIFICATION	3.7044432939074292E-6	TEST
line 925	WITHOUT_CLASSIFICATION	0.9999963078699827	WITHOUT_CLASSIFICATION	3.6921300172805336E-6	TEST
line 958	WITHOUT_CLASSIFICATION	0.9999963514381202	WITHOUT_CLASSIFICATION	3.6485618797823133E-6	TEST
line 992	WITHOUT_CLASSIFICATION	0.9999959523137071	WITHOUT_CLASSIFICATION	4.047686292973736E-6	TEST
line 1047	WITHOUT_CLASSIFICATION	0.9999981136899674	WITHOUT_CLASSIFICATION	1.8863100326844967E-6	TEST
line 1072	WITHOUT_CLASSIFICATION	0.9999979111930279	WITHOUT_CLASSIFICATION	2.088806972053981E-6	TEST
line 1081	WITHOUT_CLASSIFICATION	0.9999973257858868	WITHOUT_CLASSIFICATION	2.674214113059016E-6	TEST
line 1108	WITHOUT_CLASSIFICATION	0.999997552540304	WITHOUT_CLASSIFICATION	2.4474596960430926E-6	TEST
line 1136	WITHOUT_CLASSIFICATION	0.9999970201212133	WITHOUT_CLASSIFICATION	2.9798787867965108E-6	TEST
line 1168	WITHOUT_CLASSIFICATION	0.9999976184824896	WITHOUT_CLASSIFICATION	2.3815175104853352E-6	TEST
line 1192	WITHOUT_CLASSIFICATION	0.9999971379794356	WITHOUT_CLASSIFICATION	2.8620205643802173E-6	TEST
line 1241	WITHOUT_CLASSIFICATION	0.9999974361805546	WITHOUT_CLASSIFICATION	2.5638194454025237E-6	TEST
line 1267	WITHOUT_CLASSIFICATION	0.9999976857459868	WITHOUT_CLASSIFICATION	2.3142540131354583E-6	TEST
line 1286	WITHOUT_CLASSIFICATION	0.9999973286888103	WITHOUT_CLASSIFICATION	2.671311189686772E-6	TEST
line 1301	WITHOUT_CLASSIFICATION	0.9999970403333962	WITHOUT_CLASSIFICATION	2.9596666038480522E-6	TEST
line 1314	WITHOUT_CLASSIFICATION	0.9999969045729197	WITHOUT_CLASSIFICATION	3.0954270802347103E-6	TEST
line 1333	WITHOUT_CLASSIFICATION	0.9999966114521645	WITHOUT_CLASSIFICATION	3.388547835599445E-6	TEST
line 1362	WITHOUT_CLASSIFICATION	0.9999966694930881	WITHOUT_CLASSIFICATION	3.330506911885302E-6	TEST
line 1395	WITHOUT_CLASSIFICATION	0.9999965343527905	WITHOUT_CLASSIFICATION	3.465647209687809E-6	TEST
line 1420	WITHOUT_CLASSIFICATION	0.9999972795774951	WITHOUT_CLASSIFICATION	2.72042250488006E-6	TEST
line 1439	WITHOUT_CLASSIFICATION	0.9999965547521513	WITHOUT_CLASSIFICATION	3.445247848534101E-6	TEST
line 1476	WITHOUT_CLASSIFICATION	0.9999979318720729	WITHOUT_CLASSIFICATION	2.06812792716015E-6	TEST
line 1535	WITHOUT_CLASSIFICATION	0.9999968019698744	WITHOUT_CLASSIFICATION	3.1980301256358257E-6	TEST
line 1588	WITHOUT_CLASSIFICATION	0.9999974446730163	WITHOUT_CLASSIFICATION	2.5553269835913832E-6	TEST
line 1618	WITHOUT_CLASSIFICATION	0.9999975131750348	WITHOUT_CLASSIFICATION	2.4868249650418865E-6	TEST
line 1643	WITHOUT_CLASSIFICATION	0.9999971050299734	WITHOUT_CLASSIFICATION	2.894970026655432E-6	TEST
line 1669	WITHOUT_CLASSIFICATION	0.9999973221131429	WITHOUT_CLASSIFICATION	2.6778868572215807E-6	TEST
line 1728	WITHOUT_CLASSIFICATION	0.9999973639941141	WITHOUT_CLASSIFICATION	2.6360058859294237E-6	TEST
line 1753	WITHOUT_CLASSIFICATION	0.999997110801979	WITHOUT_CLASSIFICATION	2.889198020963338E-6	TEST
line 1779	WITHOUT_CLASSIFICATION	0.9999973686974536	WITHOUT_CLASSIFICATION	2.631302546477954E-6	TEST
line 1794	WITHOUT_CLASSIFICATION	0.9999975479807509	WITHOUT_CLASSIFICATION	2.452019249143671E-6	TEST
line 1812	WITHOUT_CLASSIFICATION	0.9999971324500281	WITHOUT_CLASSIFICATION	2.8675499718809534E-6	TEST
line 1837	WITHOUT_CLASSIFICATION	0.999996966130626	WITHOUT_CLASSIFICATION	3.0338693739380374E-6	TEST
line 1895	WITHOUT_CLASSIFICATION	0.9999972635007885	WITHOUT_CLASSIFICATION	2.7364992114022447E-6	TEST
line 1925	WITHOUT_CLASSIFICATION	0.9999972134701149	WITHOUT_CLASSIFICATION	2.7865298850590994E-6	TEST
line 1950	WITHOUT_CLASSIFICATION	0.9999974654415277	WITHOUT_CLASSIFICATION	2.5345584723858036E-6	TEST
line 1992	WITHOUT_CLASSIFICATION	0.9999969437450777	WITHOUT_CLASSIFICATION	3.056254922271508E-6	TEST
line 2014	WITHOUT_CLASSIFICATION	0.9999971601935895	WITHOUT_CLASSIFICATION	2.8398064104100297E-6	TEST
Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999993649970219	WITHOUT_CLASSIFICATION	6.350029781900868E-7	TEST
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999999763797504	WITHOUT_CLASSIFICATION	2.362024963887687E-8	TEST
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996551230099	WITHOUT_CLASSIFICATION	3.44876990027616E-7	TEST
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996551230099	WITHOUT_CLASSIFICATION	3.44876990027616E-7	TEST
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996551230099	WITHOUT_CLASSIFICATION	3.44876990027616E-7	TEST
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996551230099	WITHOUT_CLASSIFICATION	3.44876990027616E-7	TEST
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996551230099	WITHOUT_CLASSIFICATION	3.44876990027616E-7	TEST
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996551230099	WITHOUT_CLASSIFICATION	3.44876990027616E-7	TEST
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996551230099	WITHOUT_CLASSIFICATION	3.44876990027616E-7	TEST
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999762022262	WITHOUT_CLASSIFICATION	2.3797773797925075E-7	TEST
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999762022262	WITHOUT_CLASSIFICATION	2.3797773797925075E-7	TEST
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999762022262	WITHOUT_CLASSIFICATION	2.3797773797925075E-7	TEST
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999762022262	WITHOUT_CLASSIFICATION	2.3797773797925075E-7	TEST
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999904086014628	WITHOUT_CLASSIFICATION	9.591398537240324E-6	TEST
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999904086014628	WITHOUT_CLASSIFICATION	9.591398537240324E-6	TEST
We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999990531134629	WITHOUT_CLASSIFICATION	9.468865370131296E-7	TEST
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999393387129	WITHOUT_CLASSIFICATION	6.066128706067367E-8	TEST
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999393387129	WITHOUT_CLASSIFICATION	6.066128706067367E-8	TEST
tc under method self under method name args	WITHOUT_CLASSIFICATION	0.9999990868203488	WITHOUT_CLASSIFICATION	9.131796511868128E-7	TEST
allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999988853591545	WITHOUT_CLASSIFICATION	1.1146408455386955E-6	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871902736	WITHOUT_CLASSIFICATION	1.2809726323461217E-8	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871902736	WITHOUT_CLASSIFICATION	1.2809726323461217E-8	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871902736	WITHOUT_CLASSIFICATION	1.2809726323461217E-8	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871902736	WITHOUT_CLASSIFICATION	1.2809726323461217E-8	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871902736	WITHOUT_CLASSIFICATION	1.2809726323461217E-8	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871902736	WITHOUT_CLASSIFICATION	1.2809726323461217E-8	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871902736	WITHOUT_CLASSIFICATION	1.2809726323461217E-8	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999929658914	WITHOUT_CLASSIFICATION	7.034108674379534E-9	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999812689797	WITHOUT_CLASSIFICATION	1.873102033148769E-8	TEST
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999991146478078	WITHOUT_CLASSIFICATION	8.853521922646768E-7	TEST
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999991146478078	WITHOUT_CLASSIFICATION	8.853521922646768E-7	TEST
Check for a builtin first.	WITHOUT_CLASSIFICATION	0.999999979872438	WITHOUT_CLASSIFICATION	2.0127561957984296E-8	TEST
end suffix iteration	WITHOUT_CLASSIFICATION	0.9999989098130442	WITHOUT_CLASSIFICATION	1.09018695580177E-6	TEST
end suffix iteration	WITHOUT_CLASSIFICATION	0.9999989098130442	WITHOUT_CLASSIFICATION	1.09018695580177E-6	TEST
Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e	WITHOUT_CLASSIFICATION	0.9999999937279542	WITHOUT_CLASSIFICATION	6.272045712097333E-9	TEST
Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local	WITHOUT_CLASSIFICATION	0.9974772340179524	WITHOUT_CLASSIFICATION	0.002522765982047682	TEST
This method handles '' patterns and delegates to fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999999766128936	WITHOUT_CLASSIFICATION	2.3387106304907857E-8	TEST
Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.999999992337842	WITHOUT_CLASSIFICATION	7.662158084430165E-9	TEST
double precision, native double precision, native	WITHOUT_CLASSIFICATION	0.999999510892201	WITHOUT_CLASSIFICATION	4.891077989761784E-7	TEST
64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999999511384506	WITHOUT_CLASSIFICATION	4.886154939501779E-7	TEST
Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999990563189163	WITHOUT_CLASSIFICATION	9.436810836669E-7	TEST
calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999998130752912	WITHOUT_CLASSIFICATION	1.86924708774263E-7	TEST
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998385015506649	WITHOUT_CLASSIFICATION	1.6149844933507806E-4	TEST
MRI behavior: for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999933874626138	WITHOUT_CLASSIFICATION	6.612537386241313E-6	TEST
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9984813380401037	WITHOUT_CLASSIFICATION	0.0015186619598962251	TEST
exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999977999436	WITHOUT_CLASSIFICATION	2.200056291766852E-9	TEST
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997644493612	WITHOUT_CLASSIFICATION	2.355506388585748E-7	TEST
The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.999993285548803	WITHOUT_CLASSIFICATION	6.714451197090402E-6	TEST
first digit is always printed	WITHOUT_CLASSIFICATION	0.9999990177427643	WITHOUT_CLASSIFICATION	9.82257235662351E-7	TEST
an empirically derived rule: precision applies to significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999999302211994	WITHOUT_CLASSIFICATION	6.977880055911714E-8	TEST
an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999996285922358	WITHOUT_CLASSIFICATION	3.7140776421262656E-7	TEST
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999868225023131	WITHOUT_CLASSIFICATION	1.3177497687024582E-5	TEST
now some data...	WITHOUT_CLASSIFICATION	0.999998430194148	WITHOUT_CLASSIFICATION	1.5698058519781068E-6	TEST
now some data...	WITHOUT_CLASSIFICATION	0.999998430194148	WITHOUT_CLASSIFICATION	1.5698058519781068E-6	TEST
MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999985351931869	WITHOUT_CLASSIFICATION	1.4648068131420315E-6	TEST
else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996560423631	WITHOUT_CLASSIFICATION	3.4395763683370003E-7	TEST
calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999503125544	WITHOUT_CLASSIFICATION	4.9687445620548076E-8	TEST
switch	WITHOUT_CLASSIFICATION	0.9999894310734507	WITHOUT_CLASSIFICATION	1.0568926549348514E-5	TEST
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999924606444768	WITHOUT_CLASSIFICATION	7.5393555232112855E-6	TEST
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999924606444768	WITHOUT_CLASSIFICATION	7.5393555232112855E-6	TEST
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999924606444768	WITHOUT_CLASSIFICATION	7.5393555232112855E-6	TEST
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999995729578174	WITHOUT_CLASSIFICATION	4.27042182635972E-7	TEST
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999962846153514	WITHOUT_CLASSIFICATION	3.7153846484776654E-6	TEST
call chmod after we created the RandomAccesFile because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999999951688833	WITHOUT_CLASSIFICATION	4.831116746514374E-9	TEST
attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999999893553421	WITHOUT_CLASSIFICATION	1.0644657894955549E-8	TEST
When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M	WITHOUT_CLASSIFICATION	0.9999965264561885	WITHOUT_CLASSIFICATION	3.473543811376819E-6	TEST
If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file	WITHOUT_CLASSIFICATION	0.9999998875689666	WITHOUT_CLASSIFICATION	1.1243103328358428E-7	TEST
Cannot discern the total read length - allocate at least enough for the buffered data	WITHOUT_CLASSIFICATION	0.9999997177044954	WITHOUT_CLASSIFICATION	2.822955046095967E-7	TEST
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9999996544063376	WITHOUT_CLASSIFICATION	3.455936623016217E-7	TEST
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999992414963	WITHOUT_CLASSIFICATION	7.585036501819045E-10	TEST
already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999986116512243	WITHOUT_CLASSIFICATION	1.3883487756793428E-6	TEST
reset buffer	WITHOUT_CLASSIFICATION	0.9999989095205496	WITHOUT_CLASSIFICATION	1.0904794503635764E-6	TEST
Synchronize and re-check to avoid creating more than one Selector per provider	WITHOUT_CLASSIFICATION	0.9999998028739961	WITHOUT_CLASSIFICATION	1.9712600389927222E-7	TEST
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9976428439613747	WITHOUT_CLASSIFICATION	0.002357156038625238	TEST
Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999932000968689	WITHOUT_CLASSIFICATION	6.7999031311987E-6	TEST
Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999996587726968	WITHOUT_CLASSIFICATION	3.412273031854707E-7	TEST
value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9997817568897875	WITHOUT_CLASSIFICATION	2.1824311021234128E-4	TEST
Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999994022844	WITHOUT_CLASSIFICATION	5.977155999781756E-7	TEST
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999774169446413	WITHOUT_CLASSIFICATION	2.2583055358667808E-5	TEST
change the thread context to include the class	WITHOUT_CLASSIFICATION	0.999999995204436	WITHOUT_CLASSIFICATION	4.795563892052118E-9	TEST
