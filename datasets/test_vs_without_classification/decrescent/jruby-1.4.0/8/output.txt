// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999906101454044	WITHOUT_CLASSIFICATION	9.389854595631614E-6	TEST
// TODO make an assert here	TEST	0.9985884562558915	WITHOUT_CLASSIFICATION	0.001411543744108465	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.7894317123670131	WITHOUT_CLASSIFICATION	0.21056828763298685	TEST
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9999340440770066	WITHOUT_CLASSIFICATION	6.595592299348562E-5	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9999905098036205	WITHOUT_CLASSIFICATION	9.49019637952783E-6	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999686973456123	WITHOUT_CLASSIFICATION	3.130265438757194E-5	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999999924196511	WITHOUT_CLASSIFICATION	7.580348844541277E-9	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999996294656975	WITHOUT_CLASSIFICATION	3.705343024509697E-7	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999944002750143	WITHOUT_CLASSIFICATION	5.599724985746848E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999944002750143	WITHOUT_CLASSIFICATION	5.599724985746848E-6	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.99998249767325	WITHOUT_CLASSIFICATION	1.750232675000257E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.99998249767325	WITHOUT_CLASSIFICATION	1.750232675000257E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999885867396988	WITHOUT_CLASSIFICATION	1.1413260301240634E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999993857108673	WITHOUT_CLASSIFICATION	6.142891327713908E-7	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999996163346794	WITHOUT_CLASSIFICATION	3.8366532060333385E-7	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999996258086006	WITHOUT_CLASSIFICATION	3.7419139943316294E-7	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999951257278539	WITHOUT_CLASSIFICATION	4.8742721462008896E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999951257278539	WITHOUT_CLASSIFICATION	4.8742721462008896E-6	TEST
// line 391	WITHOUT_CLASSIFICATION	0.999999584162487	WITHOUT_CLASSIFICATION	4.1583751305836684E-7	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999948703353505	WITHOUT_CLASSIFICATION	5.129664649452488E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999948703353505	WITHOUT_CLASSIFICATION	5.129664649452488E-6	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9999886536158196	WITHOUT_CLASSIFICATION	1.1346384180533528E-5	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999932665776988	WITHOUT_CLASSIFICATION	6.733422301159797E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999945531345726	WITHOUT_CLASSIFICATION	5.446865427288908E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999945531345726	WITHOUT_CLASSIFICATION	5.446865427288908E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999945531345726	WITHOUT_CLASSIFICATION	5.446865427288908E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999945531345726	WITHOUT_CLASSIFICATION	5.446865427288908E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999945531345726	WITHOUT_CLASSIFICATION	5.446865427288908E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999945531345726	WITHOUT_CLASSIFICATION	5.446865427288908E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999945531345726	WITHOUT_CLASSIFICATION	5.446865427288908E-6	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999819188099619	WITHOUT_CLASSIFICATION	1.8081190038019997E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999819188099619	WITHOUT_CLASSIFICATION	1.8081190038019997E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999819188099619	WITHOUT_CLASSIFICATION	1.8081190038019997E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999819188099619	WITHOUT_CLASSIFICATION	1.8081190038019997E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999819188099619	WITHOUT_CLASSIFICATION	1.8081190038019997E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999819188099619	WITHOUT_CLASSIFICATION	1.8081190038019997E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999819188099619	WITHOUT_CLASSIFICATION	1.8081190038019997E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999865500436711	WITHOUT_CLASSIFICATION	1.3449956328871975E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999865500436711	WITHOUT_CLASSIFICATION	1.3449956328871975E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999865500436711	WITHOUT_CLASSIFICATION	1.3449956328871975E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999865500436711	WITHOUT_CLASSIFICATION	1.3449956328871975E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999865500436711	WITHOUT_CLASSIFICATION	1.3449956328871975E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999865500436711	WITHOUT_CLASSIFICATION	1.3449956328871975E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999949567275908	WITHOUT_CLASSIFICATION	5.043272409264708E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999949567275908	WITHOUT_CLASSIFICATION	5.043272409264708E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999949567275908	WITHOUT_CLASSIFICATION	5.043272409264708E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999949567275908	WITHOUT_CLASSIFICATION	5.043272409264708E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999949567275908	WITHOUT_CLASSIFICATION	5.043272409264708E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999949567275908	WITHOUT_CLASSIFICATION	5.043272409264708E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999946924801919	WITHOUT_CLASSIFICATION	5.307519808151669E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999946924801919	WITHOUT_CLASSIFICATION	5.307519808151669E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999946924801919	WITHOUT_CLASSIFICATION	5.307519808151669E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999946924801919	WITHOUT_CLASSIFICATION	5.307519808151669E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999946924801919	WITHOUT_CLASSIFICATION	5.307519808151669E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999946924801919	WITHOUT_CLASSIFICATION	5.307519808151669E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999946924801919	WITHOUT_CLASSIFICATION	5.307519808151669E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999947673999076	WITHOUT_CLASSIFICATION	5.232600092420126E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999947673999076	WITHOUT_CLASSIFICATION	5.232600092420126E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999947673999076	WITHOUT_CLASSIFICATION	5.232600092420126E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999947673999076	WITHOUT_CLASSIFICATION	5.232600092420126E-6	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.999973127146128	WITHOUT_CLASSIFICATION	2.6872853872023543E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.999973127146128	WITHOUT_CLASSIFICATION	2.6872853872023543E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999995450841045	WITHOUT_CLASSIFICATION	4.549158955000171E-7	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999999568618548	WITHOUT_CLASSIFICATION	4.313814514222368E-8	TEST
// name	WITHOUT_CLASSIFICATION	0.9999992653011645	WITHOUT_CLASSIFICATION	7.346988355652944E-7	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999994115685886	WITHOUT_CLASSIFICATION	5.88431411400176E-7	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999999146570445	WITHOUT_CLASSIFICATION	8.534295551031892E-8	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996318291074	WITHOUT_CLASSIFICATION	3.681708926274091E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996318291074	WITHOUT_CLASSIFICATION	3.681708926274091E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996318291074	WITHOUT_CLASSIFICATION	3.681708926274091E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996318291074	WITHOUT_CLASSIFICATION	3.681708926274091E-7	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999998723006156	WITHOUT_CLASSIFICATION	1.2769938438847676E-7	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999999880181196	WITHOUT_CLASSIFICATION	1.198188046227113E-8	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999997980226148	WITHOUT_CLASSIFICATION	2.0197738512065003E-7	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999999053560191	WITHOUT_CLASSIFICATION	9.464398092381597E-8	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999995614103132	WITHOUT_CLASSIFICATION	4.385896867896526E-7	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999786927235	WITHOUT_CLASSIFICATION	2.1307276585677797E-8	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999999250722702	WITHOUT_CLASSIFICATION	7.49277297104584E-8	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999864998996	WITHOUT_CLASSIFICATION	1.350010040091032E-8	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999921851911	WITHOUT_CLASSIFICATION	7.814808966965045E-9	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999995587776099	WITHOUT_CLASSIFICATION	4.412223900676423E-7	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999955372549	WITHOUT_CLASSIFICATION	4.462745045308464E-9	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999996654435864	WITHOUT_CLASSIFICATION	3.3455641361321597E-7	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999923127252168	WITHOUT_CLASSIFICATION	7.687274783062684E-6	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999999612182909	WITHOUT_CLASSIFICATION	3.878170911458282E-8	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998803711744	WITHOUT_CLASSIFICATION	1.196288255911753E-7	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.999994631923051	WITHOUT_CLASSIFICATION	5.368076948888212E-6	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999999920613961	WITHOUT_CLASSIFICATION	7.938603917797317E-9	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996318291074	WITHOUT_CLASSIFICATION	3.681708926274091E-7	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999771423551	WITHOUT_CLASSIFICATION	2.2857644886495972E-8	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999998797657287	WITHOUT_CLASSIFICATION	1.2023427125657027E-7	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998604853101	WITHOUT_CLASSIFICATION	1.395146900008379E-7	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999988963189987	WITHOUT_CLASSIFICATION	1.1036810012469562E-6	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999999752358566	WITHOUT_CLASSIFICATION	2.4764143417821486E-8	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999997468289836	WITHOUT_CLASSIFICATION	2.5317101633925365E-7	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999997638216666	WITHOUT_CLASSIFICATION	2.3617833339337716E-7	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999998279474348	WITHOUT_CLASSIFICATION	1.7205256524079092E-7	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999996504939417	WITHOUT_CLASSIFICATION	3.4950605828618533E-7	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999998813035527	WITHOUT_CLASSIFICATION	1.1869644738504838E-7	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.999972007240804	WITHOUT_CLASSIFICATION	2.799275919586928E-5	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999997880915952	WITHOUT_CLASSIFICATION	2.1190840487924413E-7	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999998459907992	WITHOUT_CLASSIFICATION	1.5400920090674424E-7	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999987305510967	WITHOUT_CLASSIFICATION	1.2694489032534809E-6	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999967115711285	WITHOUT_CLASSIFICATION	3.2884288714835334E-6	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999980679059226	WITHOUT_CLASSIFICATION	1.9320940774104363E-6	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999998882503752	WITHOUT_CLASSIFICATION	1.1174962480483267E-7	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999679151989	WITHOUT_CLASSIFICATION	3.208480115721781E-8	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9959022455865424	WITHOUT_CLASSIFICATION	0.004097754413457637	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999993532444102	WITHOUT_CLASSIFICATION	6.467555897647552E-7	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999992502702668	WITHOUT_CLASSIFICATION	7.497297331616252E-7	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.999999247680189	WITHOUT_CLASSIFICATION	7.523198110502895E-7	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999998235521264	WITHOUT_CLASSIFICATION	1.764478736514476E-7	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9999808425511647	WITHOUT_CLASSIFICATION	1.915744883531706E-5	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999997391079475	WITHOUT_CLASSIFICATION	2.6089205248438985E-7	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9999982990593456	WITHOUT_CLASSIFICATION	1.700940654538354E-6	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999994122720811	WITHOUT_CLASSIFICATION	5.877279189343509E-7	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999999639374797	WITHOUT_CLASSIFICATION	3.606252032103099E-8	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999758864073	WITHOUT_CLASSIFICATION	2.4113592725666433E-8	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999999708061417	WITHOUT_CLASSIFICATION	2.9193858372148625E-8	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999995364190982	WITHOUT_CLASSIFICATION	4.635809017926261E-7	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999998520242722	WITHOUT_CLASSIFICATION	1.479757277900655E-7	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999998145463661	WITHOUT_CLASSIFICATION	1.8545363395387822E-7	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999685741768	WITHOUT_CLASSIFICATION	3.142582318839619E-8	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999999920315796	WITHOUT_CLASSIFICATION	7.96842032894149E-9	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999998487839445	WITHOUT_CLASSIFICATION	1.5121605558783018E-7	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999999748960171	WITHOUT_CLASSIFICATION	2.51039829395201E-8	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.999999921861194	WITHOUT_CLASSIFICATION	7.813880601285184E-8	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999992688650902	WITHOUT_CLASSIFICATION	7.311349098247676E-7	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996695603692	WITHOUT_CLASSIFICATION	3.3043963069184796E-7	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999809083229	WITHOUT_CLASSIFICATION	1.9091677139054454E-8	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999394748649	WITHOUT_CLASSIFICATION	6.052513507170211E-8	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999989607543522	WITHOUT_CLASSIFICATION	1.0392456477316798E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999988547541253	WITHOUT_CLASSIFICATION	1.145245874706598E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999988547541253	WITHOUT_CLASSIFICATION	1.145245874706598E-6	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999969223152224	WITHOUT_CLASSIFICATION	3.077684777653504E-6	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.999999995685524	WITHOUT_CLASSIFICATION	4.314476070126904E-9	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.999997230211575	WITHOUT_CLASSIFICATION	2.769788424884068E-6	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999999769207183	WITHOUT_CLASSIFICATION	2.3079281746696E-8	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999998644037067	WITHOUT_CLASSIFICATION	1.3559629330052517E-7	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999989629181059	WITHOUT_CLASSIFICATION	1.0370818940820537E-6	TEST
// ???	WITHOUT_CLASSIFICATION	0.9999984328314913	WITHOUT_CLASSIFICATION	1.567168508709007E-6	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999964536625269	WITHOUT_CLASSIFICATION	3.5463374731173053E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999394748649	WITHOUT_CLASSIFICATION	6.052513507170211E-8	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999710973835	WITHOUT_CLASSIFICATION	2.890261646971948E-8	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.999999474608086	WITHOUT_CLASSIFICATION	5.253919139069103E-7	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.999999998229041	WITHOUT_CLASSIFICATION	1.770959000426862E-9	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999968979081	WITHOUT_CLASSIFICATION	3.102091904282367E-9	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999998997624626	WITHOUT_CLASSIFICATION	1.0023753732861563E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998580418153	WITHOUT_CLASSIFICATION	1.419581845938338E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998580418153	WITHOUT_CLASSIFICATION	1.419581845938338E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998580418153	WITHOUT_CLASSIFICATION	1.419581845938338E-7	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999999904943752	WITHOUT_CLASSIFICATION	9.505624817571851E-9	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999978679692269	WITHOUT_CLASSIFICATION	2.1320307730615312E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999999473512411	WITHOUT_CLASSIFICATION	5.2648758814743104E-8	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999758095320206	WITHOUT_CLASSIFICATION	2.4190467979391997E-5	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.99999991309145	WITHOUT_CLASSIFICATION	8.690855005248769E-8	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999998973139607	WITHOUT_CLASSIFICATION	1.026860392939697E-7	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999999611633034	WITHOUT_CLASSIFICATION	3.883669664207349E-8	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999728836398	WITHOUT_CLASSIFICATION	2.7116360160612235E-8	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999997997067896	WITHOUT_CLASSIFICATION	2.002932103798572E-7	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999997997067896	WITHOUT_CLASSIFICATION	2.002932103798572E-7	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999995358549885	WITHOUT_CLASSIFICATION	4.6414501146311446E-7	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999974327445268	WITHOUT_CLASSIFICATION	2.567255473197054E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999997657994043	WITHOUT_CLASSIFICATION	2.3420059573458038E-7	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999997657994043	WITHOUT_CLASSIFICATION	2.3420059573458038E-7	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999998630007745	WITHOUT_CLASSIFICATION	1.3699922547823572E-7	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999502982887	WITHOUT_CLASSIFICATION	4.970171141582335E-8	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999985530494712	WITHOUT_CLASSIFICATION	1.4469505288474736E-6	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999998861101035	WITHOUT_CLASSIFICATION	1.1388989645207091E-7	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999996202499375	WITHOUT_CLASSIFICATION	3.797500625089956E-7	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999999292845652	WITHOUT_CLASSIFICATION	7.071543490763297E-8	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999989279332718	WITHOUT_CLASSIFICATION	1.0720667281039234E-6	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999986948570617	WITHOUT_CLASSIFICATION	1.3051429383167578E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999998778751003	WITHOUT_CLASSIFICATION	1.2212489972395805E-7	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999998968339527	WITHOUT_CLASSIFICATION	1.0316604725602534E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999394748649	WITHOUT_CLASSIFICATION	6.052513507170211E-8	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999952969636413	WITHOUT_CLASSIFICATION	4.703036358652504E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999501840958	WITHOUT_CLASSIFICATION	4.9815904159922405E-8	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.999999908328585	WITHOUT_CLASSIFICATION	9.167141498553879E-8	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999989967534935	WITHOUT_CLASSIFICATION	1.0032465066292332E-6	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999996120658463	WITHOUT_CLASSIFICATION	3.879341536632016E-7	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999937755028512	WITHOUT_CLASSIFICATION	6.224497148860281E-6	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999994226964294	WITHOUT_CLASSIFICATION	5.773035706207805E-7	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999987612141963	WITHOUT_CLASSIFICATION	1.2387858037544437E-6	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.999999935144877	WITHOUT_CLASSIFICATION	6.485512301470677E-8	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999997854175845	WITHOUT_CLASSIFICATION	2.1458241551093854E-7	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999999571726357	WITHOUT_CLASSIFICATION	4.282736438746454E-8	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999693581213	WITHOUT_CLASSIFICATION	3.064187859560942E-8	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999999810433016	WITHOUT_CLASSIFICATION	1.895669844582944E-8	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999999475859427	WITHOUT_CLASSIFICATION	5.2414057325319405E-8	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999284634083917	WITHOUT_CLASSIFICATION	7.153659160830035E-5	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999999907950914	WITHOUT_CLASSIFICATION	9.204908594021854E-9	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999999824136391	WITHOUT_CLASSIFICATION	1.7586360974305856E-8	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999998805745116	WITHOUT_CLASSIFICATION	1.1942548841151086E-7	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.999999993336488	WITHOUT_CLASSIFICATION	6.663511910636137E-9	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999999915391031	WITHOUT_CLASSIFICATION	8.460896866553669E-9	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999999889176227	WITHOUT_CLASSIFICATION	1.1082377367856025E-8	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999995070677	WITHOUT_CLASSIFICATION	4.929322278168705E-10	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999998727086	WITHOUT_CLASSIFICATION	1.2729147934656512E-10	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.999999481599094	WITHOUT_CLASSIFICATION	5.184009059321464E-7	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999998781130468	WITHOUT_CLASSIFICATION	1.2188695318482047E-7	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999998967531907	WITHOUT_CLASSIFICATION	1.0324680939182276E-7	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999984399352528	WITHOUT_CLASSIFICATION	1.5600647471457515E-6	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999999938581515	WITHOUT_CLASSIFICATION	6.1418485105312435E-9	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999980294775	WITHOUT_CLASSIFICATION	1.970522514606024E-9	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999998660613844	WITHOUT_CLASSIFICATION	1.3393861558675174E-7	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999900225331	WITHOUT_CLASSIFICATION	9.977466761345619E-9	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999999736921359	WITHOUT_CLASSIFICATION	2.6307864136890066E-8	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999929488914682	WITHOUT_CLASSIFICATION	7.0511085318110585E-6	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999998558974089	WITHOUT_CLASSIFICATION	1.441025910488472E-7	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999997106579596	WITHOUT_CLASSIFICATION	2.89342040388899E-7	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999980793695157	WITHOUT_CLASSIFICATION	1.920630484354911E-6	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999295524952	WITHOUT_CLASSIFICATION	7.044750477897357E-8	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999729225881376	WITHOUT_CLASSIFICATION	2.707741186236196E-5	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999998702765495	WITHOUT_CLASSIFICATION	1.2972345050645415E-7	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999538026961	WITHOUT_CLASSIFICATION	4.6197303891587106E-8	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999999581151255	WITHOUT_CLASSIFICATION	4.188487454300931E-8	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999999680161838	WITHOUT_CLASSIFICATION	3.198381611621827E-8	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999995447450246	WITHOUT_CLASSIFICATION	4.552549753378201E-7	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999999142450507	WITHOUT_CLASSIFICATION	8.575494937088033E-8	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999998760856337	WITHOUT_CLASSIFICATION	1.2391436634600042E-7	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999998004613554	WITHOUT_CLASSIFICATION	1.9953864466515494E-7	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999998519692911	WITHOUT_CLASSIFICATION	1.4803070885496328E-7	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999999751008702	WITHOUT_CLASSIFICATION	2.4899129657517205E-8	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999999797939327	WITHOUT_CLASSIFICATION	2.020606726915584E-8	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999999921945008	WITHOUT_CLASSIFICATION	7.805499236397853E-9	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999999858307899	WITHOUT_CLASSIFICATION	1.4169210133967861E-8	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999999798179279	WITHOUT_CLASSIFICATION	2.0182072076150024E-8	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.999999967844318	WITHOUT_CLASSIFICATION	3.2155681903278093E-8	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999999815971904	WITHOUT_CLASSIFICATION	1.840280971393277E-8	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999997855580465	WITHOUT_CLASSIFICATION	2.1444195344672602E-7	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999999881853294	WITHOUT_CLASSIFICATION	1.1814670643423637E-8	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999999058688581	WITHOUT_CLASSIFICATION	9.413114184676541E-8	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999999593373743	WITHOUT_CLASSIFICATION	4.066262569314801E-8	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999999500085077	WITHOUT_CLASSIFICATION	4.999149213694196E-8	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999999774376712	WITHOUT_CLASSIFICATION	2.2562328705586498E-8	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999981658157233	WITHOUT_CLASSIFICATION	1.8341842766759072E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999981658157233	WITHOUT_CLASSIFICATION	1.8341842766759072E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999994870092047	WITHOUT_CLASSIFICATION	5.129907953471826E-7	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999994870092047	WITHOUT_CLASSIFICATION	5.129907953471826E-7	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999984719335714	WITHOUT_CLASSIFICATION	1.5280664286536776E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999984719335714	WITHOUT_CLASSIFICATION	1.5280664286536776E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999988753476593	WITHOUT_CLASSIFICATION	1.124652340763578E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999988753476593	WITHOUT_CLASSIFICATION	1.124652340763578E-6	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999997071062742	WITHOUT_CLASSIFICATION	2.928937257969988E-7	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999998994541787	WITHOUT_CLASSIFICATION	1.005458213754706E-7	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999997549877889	WITHOUT_CLASSIFICATION	2.450122110352121E-7	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999984158871056	WITHOUT_CLASSIFICATION	1.5841128943382804E-6	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999998537318531	WITHOUT_CLASSIFICATION	1.46268146903839E-7	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999943485518348	WITHOUT_CLASSIFICATION	5.651448165293296E-6	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999954721230065	WITHOUT_CLASSIFICATION	4.527876993523625E-6	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999561508125	WITHOUT_CLASSIFICATION	4.384918750427394E-8	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999999363291268	WITHOUT_CLASSIFICATION	6.36708732428172E-8	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999997314526969	WITHOUT_CLASSIFICATION	2.685473030789887E-7	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999997752496667	WITHOUT_CLASSIFICATION	2.24750333209337E-7	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999372105268	WITHOUT_CLASSIFICATION	6.27894731888144E-8	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.999999355933498	WITHOUT_CLASSIFICATION	6.440665019076673E-7	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999995574143833	WITHOUT_CLASSIFICATION	4.4258561661407017E-7	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999998679912935	WITHOUT_CLASSIFICATION	1.3200870658358124E-7	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999989424121384	WITHOUT_CLASSIFICATION	1.057587861657243E-6	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999995179314	WITHOUT_CLASSIFICATION	4.820686910404789E-10	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999998233931733	WITHOUT_CLASSIFICATION	1.7660682664730405E-7	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999973455169439	WITHOUT_CLASSIFICATION	2.654483056198119E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999994298223446	WITHOUT_CLASSIFICATION	5.701776554218562E-7	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999999197765568	WITHOUT_CLASSIFICATION	8.022344327623397E-8	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999995986543541	WITHOUT_CLASSIFICATION	4.013456458757394E-7	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999997904755042	WITHOUT_CLASSIFICATION	2.0952449565199079E-7	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999995347519731	WITHOUT_CLASSIFICATION	4.652480269472211E-7	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999992343470785	WITHOUT_CLASSIFICATION	7.656529214435806E-7	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999993774934528	WITHOUT_CLASSIFICATION	6.225065472108808E-7	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999995866115681	WITHOUT_CLASSIFICATION	4.1338843190371575E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.99999985146857	WITHOUT_CLASSIFICATION	1.4853143004523033E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.99999985146857	WITHOUT_CLASSIFICATION	1.4853143004523033E-7	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999993875518003	WITHOUT_CLASSIFICATION	6.124481997757382E-7	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999991214860628	WITHOUT_CLASSIFICATION	8.785139371038606E-7	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999987250907634	WITHOUT_CLASSIFICATION	1.2749092366313158E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999999290366965	WITHOUT_CLASSIFICATION	7.096330346695588E-8	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999982067169182	WITHOUT_CLASSIFICATION	1.793283081726921E-6	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999988558297709	WITHOUT_CLASSIFICATION	1.1441702291514782E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.999998418313807	WITHOUT_CLASSIFICATION	1.5816861929511061E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.999998418313807	WITHOUT_CLASSIFICATION	1.5816861929511061E-6	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999997543252338	WITHOUT_CLASSIFICATION	2.4567476621416914E-7	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9993528087979033	WITHOUT_CLASSIFICATION	6.471912020966195E-4	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999996194211135	WITHOUT_CLASSIFICATION	3.8057888645643786E-7	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999996194211135	WITHOUT_CLASSIFICATION	3.8057888645643786E-7	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999999247070003	WITHOUT_CLASSIFICATION	7.529299976570286E-8	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999981404623783	WITHOUT_CLASSIFICATION	1.8595376216525755E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999981404623783	WITHOUT_CLASSIFICATION	1.8595376216525755E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999992618404111	WITHOUT_CLASSIFICATION	7.381595888230216E-7	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999992618404111	WITHOUT_CLASSIFICATION	7.381595888230216E-7	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999974833266358	WITHOUT_CLASSIFICATION	2.5166733642181973E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999974833266358	WITHOUT_CLASSIFICATION	2.5166733642181973E-6	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9999984628594074	WITHOUT_CLASSIFICATION	1.5371405926938317E-6	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999997352823211	WITHOUT_CLASSIFICATION	2.647176789041903E-7	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999998638188407	WITHOUT_CLASSIFICATION	1.3618115946818175E-7	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.999999946150527	WITHOUT_CLASSIFICATION	5.384947307410897E-8	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999988372056	WITHOUT_CLASSIFICATION	1.1627944447921412E-9	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999999954726131	WITHOUT_CLASSIFICATION	4.527386897547682E-9	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999998462011513	WITHOUT_CLASSIFICATION	1.5379884861954511E-7	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999999952603824	WITHOUT_CLASSIFICATION	4.739617512794851E-9	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999998462011513	WITHOUT_CLASSIFICATION	1.5379884861954511E-7	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9996125531345404	WITHOUT_CLASSIFICATION	3.874468654595256E-4	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999998213969676	WITHOUT_CLASSIFICATION	1.7860303236663386E-7	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999998085927571	WITHOUT_CLASSIFICATION	1.9140724303768243E-7	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999992902311381	WITHOUT_CLASSIFICATION	7.097688618744146E-7	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999999575110475	WITHOUT_CLASSIFICATION	4.248895239030873E-8	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999984959253594	WITHOUT_CLASSIFICATION	1.5040746405535238E-6	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999977393408728	WITHOUT_CLASSIFICATION	2.2606591272647587E-6	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999990543990025	WITHOUT_CLASSIFICATION	9.45600997403741E-7	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999992271571	WITHOUT_CLASSIFICATION	7.728428656762818E-10	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999999865721695	WITHOUT_CLASSIFICATION	1.3427830579384914E-8	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999999479542067	WITHOUT_CLASSIFICATION	5.2045793224131084E-8	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999844094923465	WITHOUT_CLASSIFICATION	1.559050765355177E-5	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999998089173575	WITHOUT_CLASSIFICATION	1.91082642528699E-7	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999999082518688	WITHOUT_CLASSIFICATION	9.174813120071256E-8	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999997662627234	WITHOUT_CLASSIFICATION	2.337372765008445E-7	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999874152552	WITHOUT_CLASSIFICATION	1.2584744760207328E-8	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999995936128183	WITHOUT_CLASSIFICATION	4.063871816935037E-7	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999998992092479	WITHOUT_CLASSIFICATION	1.007907519871276E-7	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999992886676154	WITHOUT_CLASSIFICATION	7.113323846311443E-7	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999943522708767	WITHOUT_CLASSIFICATION	5.6477291232037E-6	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999989973974197	WITHOUT_CLASSIFICATION	1.0026025802623873E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999579539742	WITHOUT_CLASSIFICATION	4.204602579733426E-8	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999998721758564	WITHOUT_CLASSIFICATION	1.2782414362808457E-7	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999998495274243	WITHOUT_CLASSIFICATION	1.5047257572193152E-7	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999996117865428	WITHOUT_CLASSIFICATION	3.882134572061868E-7	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999999804345612	WITHOUT_CLASSIFICATION	1.956543882638219E-8	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999999246499802	WITHOUT_CLASSIFICATION	7.535001986352909E-8	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.999999708334778	WITHOUT_CLASSIFICATION	2.9166522202839365E-7	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999867154781	WITHOUT_CLASSIFICATION	1.3284521850601015E-8	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999999536584614	WITHOUT_CLASSIFICATION	4.6341538609102296E-8	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.999999942941926	WITHOUT_CLASSIFICATION	5.705807396708097E-8	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999989359093	WITHOUT_CLASSIFICATION	1.064090643683812E-9	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999978105839	WITHOUT_CLASSIFICATION	2.1894159939477623E-9	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999998530391488	WITHOUT_CLASSIFICATION	1.469608511782779E-7	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999291175805	WITHOUT_CLASSIFICATION	7.088241945352334E-8	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999998659054656	WITHOUT_CLASSIFICATION	1.340945343415266E-7	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999393583976	WITHOUT_CLASSIFICATION	6.064160232321996E-8	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999999900945741	WITHOUT_CLASSIFICATION	9.905425893702765E-9	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999999994272314	WITHOUT_CLASSIFICATION	5.727686340468761E-10	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999999458919128	WITHOUT_CLASSIFICATION	5.410808731275139E-8	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999878341626	WITHOUT_CLASSIFICATION	1.216583745231882E-8	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999274297261	WITHOUT_CLASSIFICATION	7.257027383033756E-8	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999508506741	WITHOUT_CLASSIFICATION	4.9149325871186E-8	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999714456287	WITHOUT_CLASSIFICATION	2.8554371319468774E-8	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.99999999436125	WITHOUT_CLASSIFICATION	5.638750090855974E-9	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999838347511	WITHOUT_CLASSIFICATION	1.6165248984717877E-8	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.999999704068355	WITHOUT_CLASSIFICATION	2.9593164492738425E-7	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999978653364	WITHOUT_CLASSIFICATION	2.1346635617847186E-9	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999799691572	WITHOUT_CLASSIFICATION	2.0030842791469853E-7	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999995217746924	WITHOUT_CLASSIFICATION	4.782253075312114E-7	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999999863893578	WITHOUT_CLASSIFICATION	1.3610642064443258E-8	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999908294891	WITHOUT_CLASSIFICATION	9.170510828764851E-9	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999843990842704	WITHOUT_CLASSIFICATION	1.5600915729559363E-5	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999999242852685	WITHOUT_CLASSIFICATION	7.571473143582148E-8	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999806475915	WITHOUT_CLASSIFICATION	1.9352408450058596E-8	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999806475915	WITHOUT_CLASSIFICATION	1.9352408450058596E-8	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999986735234212	WITHOUT_CLASSIFICATION	1.3264765787934878E-6	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999941394653932	WITHOUT_CLASSIFICATION	5.860534606820354E-6	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999737325662	WITHOUT_CLASSIFICATION	2.626743371446155E-8	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999999857436211	WITHOUT_CLASSIFICATION	1.4256378697656101E-8	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999999741012442	WITHOUT_CLASSIFICATION	2.5898755753707933E-8	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999989157953624	WITHOUT_CLASSIFICATION	1.0842046375690182E-6	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999974493730176	WITHOUT_CLASSIFICATION	2.5506269823382487E-6	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999999991893966	WITHOUT_CLASSIFICATION	8.106033237803898E-10	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.999999763255666	WITHOUT_CLASSIFICATION	2.3674433405273414E-7	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.999999883398919	WITHOUT_CLASSIFICATION	1.1660108103010729E-7	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999999990573337	WITHOUT_CLASSIFICATION	9.426663050863034E-9	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.999999990573337	WITHOUT_CLASSIFICATION	9.426663050863034E-9	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999999545486782	WITHOUT_CLASSIFICATION	4.545132177194703E-8	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999999981436701	WITHOUT_CLASSIFICATION	1.8563298165134517E-9	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999213622762673	WITHOUT_CLASSIFICATION	7.863772373281951E-5	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999999277345039	WITHOUT_CLASSIFICATION	7.226549618160351E-8	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999996624071874	WITHOUT_CLASSIFICATION	3.375928125707205E-7	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999855126516	WITHOUT_CLASSIFICATION	1.4487348517119971E-8	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999997484962939	WITHOUT_CLASSIFICATION	2.515037061005259E-7	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999998418329995	WITHOUT_CLASSIFICATION	1.5816700042689083E-7	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999999864220938	WITHOUT_CLASSIFICATION	1.3577906180068698E-8	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.999999828956281	WITHOUT_CLASSIFICATION	1.7104371891168484E-7	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.999999950778848	WITHOUT_CLASSIFICATION	4.9221151914912884E-8	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999992938998333	WITHOUT_CLASSIFICATION	7.061001666317688E-7	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999999889427983	WITHOUT_CLASSIFICATION	1.105720160888461E-8	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999999889427983	WITHOUT_CLASSIFICATION	1.105720160888461E-8	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999999791344134	WITHOUT_CLASSIFICATION	2.0865586520173144E-8	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999998660771016	WITHOUT_CLASSIFICATION	1.339228984260188E-7	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999998988553531	WITHOUT_CLASSIFICATION	1.0114464682147605E-7	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999972892215959	WITHOUT_CLASSIFICATION	2.7107784040120105E-6	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999999519029528	WITHOUT_CLASSIFICATION	4.80970472644443E-8	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.999999827559296	WITHOUT_CLASSIFICATION	1.7244070405617984E-7	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999985881753941	WITHOUT_CLASSIFICATION	1.4118246059159782E-6	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999997540349436	WITHOUT_CLASSIFICATION	2.459650564491364E-7	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999992841622826	WITHOUT_CLASSIFICATION	7.158377175035504E-7	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999999836779183	WITHOUT_CLASSIFICATION	1.632208167565188E-8	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999213622762673	WITHOUT_CLASSIFICATION	7.863772373281951E-5	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999996150573824	WITHOUT_CLASSIFICATION	3.8494261763756384E-7	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999967077209837	WITHOUT_CLASSIFICATION	3.29227901627299E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999951394073968	WITHOUT_CLASSIFICATION	4.860592603100679E-6	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999999876208878	WITHOUT_CLASSIFICATION	1.2379112030054923E-8	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999999839969124	WITHOUT_CLASSIFICATION	1.6003087599500127E-8	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999953753087	WITHOUT_CLASSIFICATION	4.624691193332005E-9	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999991617411018	WITHOUT_CLASSIFICATION	8.382588982514767E-7	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999999148882767	WITHOUT_CLASSIFICATION	8.511172335690013E-8	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999661961386	WITHOUT_CLASSIFICATION	3.380386143935368E-8	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999999665658527	WITHOUT_CLASSIFICATION	3.3434147358637254E-8	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999999177098564	WITHOUT_CLASSIFICATION	8.229014361930088E-8	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.999998781963199	WITHOUT_CLASSIFICATION	1.218036800992763E-6	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999991358372432	WITHOUT_CLASSIFICATION	8.641627568183766E-7	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999990140059309	WITHOUT_CLASSIFICATION	9.859940690578074E-7	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.999992885969998	WITHOUT_CLASSIFICATION	7.114030001969885E-6	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999999579314037	WITHOUT_CLASSIFICATION	4.206859633175376E-8	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999991971831756	WITHOUT_CLASSIFICATION	8.028168243474442E-7	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999997948889122	WITHOUT_CLASSIFICATION	2.051110877146908E-7	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999995729209836	WITHOUT_CLASSIFICATION	4.270790164735346E-7	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999994847362795	WITHOUT_CLASSIFICATION	5.152637204411025E-7	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999975369227	WITHOUT_CLASSIFICATION	2.4630773852982023E-9	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.999999845713081	WITHOUT_CLASSIFICATION	1.5428691900493768E-7	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999998967306558	WITHOUT_CLASSIFICATION	1.0326934419867126E-7	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999966356323972	WITHOUT_CLASSIFICATION	3.364367602858509E-6	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999998832323788	WITHOUT_CLASSIFICATION	1.1676762125104592E-7	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.999999768229303	WITHOUT_CLASSIFICATION	2.3177069693011102E-7	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999982035561495	WITHOUT_CLASSIFICATION	1.7964438503992955E-6	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999997204609631	WITHOUT_CLASSIFICATION	2.7953903688841074E-7	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999997432511393	WITHOUT_CLASSIFICATION	2.56748860652199E-7	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.999999986764735	WITHOUT_CLASSIFICATION	1.3235264939169438E-8	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999945741908539	WITHOUT_CLASSIFICATION	5.425809146090355E-6	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999945741908539	WITHOUT_CLASSIFICATION	5.425809146090355E-6	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999997745078404	WITHOUT_CLASSIFICATION	2.2549215952077157E-7	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999998559436857	WITHOUT_CLASSIFICATION	1.4405631436520612E-7	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.999999983256517	WITHOUT_CLASSIFICATION	1.6743483030328125E-8	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999999486045472	WITHOUT_CLASSIFICATION	5.139545286029737E-8	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999979046421356	WITHOUT_CLASSIFICATION	2.095357864394718E-6	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999995847938213	WITHOUT_CLASSIFICATION	4.152061786280522E-7	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999999394748649	WITHOUT_CLASSIFICATION	6.052513507170211E-8	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999993379900481	WITHOUT_CLASSIFICATION	6.620099518328426E-7	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999975909638249	WITHOUT_CLASSIFICATION	2.4090361750585344E-6	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999998657908084	WITHOUT_CLASSIFICATION	1.3420919157956092E-7	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999387641363	WITHOUT_CLASSIFICATION	6.123586371559917E-8	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999997398185181	WITHOUT_CLASSIFICATION	2.601814818856125E-7	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999897246648177	WITHOUT_CLASSIFICATION	1.0275335182257421E-5	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999538026961	WITHOUT_CLASSIFICATION	4.6197303891587106E-8	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999957620092	WITHOUT_CLASSIFICATION	4.237990744961894E-9	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999518783657424	WITHOUT_CLASSIFICATION	4.812163425758285E-5	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999999004351	WITHOUT_CLASSIFICATION	9.956496383405622E-11	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999723854538	WITHOUT_CLASSIFICATION	2.7614546199126058E-8	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999999905922137	WITHOUT_CLASSIFICATION	9.407786373312482E-9	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999979777768209	WITHOUT_CLASSIFICATION	2.022223179179218E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999988085480473	WITHOUT_CLASSIFICATION	1.1914519526797892E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999988085480473	WITHOUT_CLASSIFICATION	1.1914519526797892E-6	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999999127162871	WITHOUT_CLASSIFICATION	8.7283712901925E-8	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999999246895604	WITHOUT_CLASSIFICATION	7.531043953112146E-8	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999999080920877	WITHOUT_CLASSIFICATION	9.190791227261026E-8	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999995517856877	WITHOUT_CLASSIFICATION	4.482143123109497E-7	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999997455010906	WITHOUT_CLASSIFICATION	2.5449890937940773E-7	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999999897837881	WITHOUT_CLASSIFICATION	1.0216211978826224E-8	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999993599864	WITHOUT_CLASSIFICATION	6.400136110881179E-10	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999480444715	WITHOUT_CLASSIFICATION	5.1955528623775544E-8	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999996538866368	WITHOUT_CLASSIFICATION	3.461133631485403E-7	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999999583696701	WITHOUT_CLASSIFICATION	4.163032979515762E-8	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999995597038285	WITHOUT_CLASSIFICATION	4.402961715681801E-7	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999994877583547	WITHOUT_CLASSIFICATION	5.122416452198681E-7	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999981206204357	WITHOUT_CLASSIFICATION	1.8793795643426809E-6	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999998002139566	WITHOUT_CLASSIFICATION	1.9978604334780728E-7	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999994822190043	WITHOUT_CLASSIFICATION	5.17780995718722E-7	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999988142501774	WITHOUT_CLASSIFICATION	1.1857498224461446E-6	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999999067345248	WITHOUT_CLASSIFICATION	9.326547527713266E-8	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999999089784689	WITHOUT_CLASSIFICATION	9.102153114099117E-8	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999777265635	WITHOUT_CLASSIFICATION	2.2273436453639596E-8	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999997317357993	WITHOUT_CLASSIFICATION	2.682642008047856E-7	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999999636678893	WITHOUT_CLASSIFICATION	3.6332110628246355E-8	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999997804737419	WITHOUT_CLASSIFICATION	2.195262579899533E-7	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999999135320713	WITHOUT_CLASSIFICATION	8.64679287180926E-8	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999983555998729	WITHOUT_CLASSIFICATION	1.6444001271147933E-6	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999999139748507	WITHOUT_CLASSIFICATION	8.6025149245713E-8	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999999769300976	WITHOUT_CLASSIFICATION	2.306990238984781E-8	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999894005476362	WITHOUT_CLASSIFICATION	1.0599452363899037E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.999999954921974	WITHOUT_CLASSIFICATION	4.5078025953238206E-8	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999997838639867	WITHOUT_CLASSIFICATION	2.1613601335425368E-7	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999993345976569	WITHOUT_CLASSIFICATION	6.654023432224074E-7	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999999946765593	WITHOUT_CLASSIFICATION	5.323440586197022E-9	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999990061722238	WITHOUT_CLASSIFICATION	9.938277761384919E-7	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999997397147733	WITHOUT_CLASSIFICATION	2.6028522664915134E-7	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.9999973203796394	WITHOUT_CLASSIFICATION	2.6796203606262766E-6	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999972405928991	WITHOUT_CLASSIFICATION	2.759407100880074E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999275906759	WITHOUT_CLASSIFICATION	7.240932405423358E-8	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999782353767	WITHOUT_CLASSIFICATION	2.1764623247092662E-8	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999998161031829	WITHOUT_CLASSIFICATION	1.8389681700837948E-7	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999999440118074	WITHOUT_CLASSIFICATION	5.5988192606536815E-8	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999998611953168	WITHOUT_CLASSIFICATION	1.388046831464821E-7	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.999999827318167	WITHOUT_CLASSIFICATION	1.7268183304564432E-7	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999998128445902	WITHOUT_CLASSIFICATION	1.8715540983112107E-7	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.999999715600861	WITHOUT_CLASSIFICATION	2.84399139074683E-7	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999996481484899	WITHOUT_CLASSIFICATION	3.51851510120427E-7	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.999999678795906	WITHOUT_CLASSIFICATION	3.2120409396560434E-7	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999996481484899	WITHOUT_CLASSIFICATION	3.51851510120427E-7	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999601825084	WITHOUT_CLASSIFICATION	3.98174915497383E-8	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9999980130614082	WITHOUT_CLASSIFICATION	1.9869385917156106E-6	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999998625350461	WITHOUT_CLASSIFICATION	1.3746495378132284E-7	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9995007419860883	WITHOUT_CLASSIFICATION	4.992580139117177E-4	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999994148182841	WITHOUT_CLASSIFICATION	5.851817158577369E-7	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999997875492959	WITHOUT_CLASSIFICATION	2.1245070425586204E-7	TEST
// write	WITHOUT_CLASSIFICATION	0.9999997398033779	WITHOUT_CLASSIFICATION	2.601966221495928E-7	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999341687174669	WITHOUT_CLASSIFICATION	6.583128253316558E-5	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999999026599294	WITHOUT_CLASSIFICATION	9.734007055776092E-8	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999962127242383	WITHOUT_CLASSIFICATION	3.7872757617247716E-6	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999995976760114	WITHOUT_CLASSIFICATION	4.0232398849708815E-7	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999991460536543	WITHOUT_CLASSIFICATION	8.539463456409067E-7	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999997767901999	WITHOUT_CLASSIFICATION	2.2320980008379473E-7	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.999999994296788	WITHOUT_CLASSIFICATION	5.703211957668911E-9	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999874717448302	WITHOUT_CLASSIFICATION	1.2528255169957246E-5	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9998972997895945	WITHOUT_CLASSIFICATION	1.0270021040549776E-4	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999968847998	WITHOUT_CLASSIFICATION	3.1152002434541445E-9	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999996688873821	WITHOUT_CLASSIFICATION	3.311126177960013E-7	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999983821068732	WITHOUT_CLASSIFICATION	1.617893126868352E-6	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999989280323738	WITHOUT_CLASSIFICATION	1.0719676261420501E-6	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999999590001539	WITHOUT_CLASSIFICATION	4.09998460074269E-8	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999422651904	WITHOUT_CLASSIFICATION	5.77348096568184E-8	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999993324153225	WITHOUT_CLASSIFICATION	6.675846775808617E-7	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999999173817671	WITHOUT_CLASSIFICATION	8.261823297756888E-8	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999999546346986	WITHOUT_CLASSIFICATION	4.5365301297693756E-8	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999996794150886	WITHOUT_CLASSIFICATION	3.205849113926087E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999478494931	WITHOUT_CLASSIFICATION	5.215050681072333E-8	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999999869306565	WITHOUT_CLASSIFICATION	1.3069343448866702E-8	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999955372549	WITHOUT_CLASSIFICATION	4.462745045308464E-9	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.999999773792334	WITHOUT_CLASSIFICATION	2.262076659664336E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999872306584158	WITHOUT_CLASSIFICATION	1.2769341584110795E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999833834316137	WITHOUT_CLASSIFICATION	1.661656838617947E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999876764788778	WITHOUT_CLASSIFICATION	1.232352112219474E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999999733352376	WITHOUT_CLASSIFICATION	2.666476231272051E-8	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.999999969726052	WITHOUT_CLASSIFICATION	3.02739480061397E-8	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.999999966280038	WITHOUT_CLASSIFICATION	3.371996202495397E-8	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.999999806665502	WITHOUT_CLASSIFICATION	1.9333449803069487E-7	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999596277022	WITHOUT_CLASSIFICATION	4.037229781287305E-8	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999971847744763	WITHOUT_CLASSIFICATION	2.8152255236691913E-6	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999953081492706	WITHOUT_CLASSIFICATION	4.691850729347752E-6	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999956412868	WITHOUT_CLASSIFICATION	4.358713233249147E-9	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999985501222288	WITHOUT_CLASSIFICATION	1.449877771195179E-6	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999810198539	WITHOUT_CLASSIFICATION	1.8980146140676375E-8	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.999999695795303	WITHOUT_CLASSIFICATION	3.042046970408686E-7	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.999999695795303	WITHOUT_CLASSIFICATION	3.042046970408686E-7	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999993140127916	WITHOUT_CLASSIFICATION	6.859872083822332E-7	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.999999918608293	WITHOUT_CLASSIFICATION	8.139170710698186E-8	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999999612121055	WITHOUT_CLASSIFICATION	3.8787894376743396E-8	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.999999578839456	WITHOUT_CLASSIFICATION	4.211605439690442E-7	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999955993645	WITHOUT_CLASSIFICATION	4.400635524679331E-9	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999920344118	WITHOUT_CLASSIFICATION	7.965588251102467E-9	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999998870540905	WITHOUT_CLASSIFICATION	1.1294590955580907E-7	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999998703920432	WITHOUT_CLASSIFICATION	1.2960795686294206E-7	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999995998656489	WITHOUT_CLASSIFICATION	4.001343511092532E-7	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999959437652	WITHOUT_CLASSIFICATION	4.056234804045543E-9	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999998306124991	WITHOUT_CLASSIFICATION	1.6938750087838737E-7	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999964005287	WITHOUT_CLASSIFICATION	3.599471363134211E-9	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.999999466948996	WITHOUT_CLASSIFICATION	5.330510040294521E-7	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.999999518933513	WITHOUT_CLASSIFICATION	4.810664869813283E-7	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999920511505	WITHOUT_CLASSIFICATION	7.948849428649957E-9	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999999532206505	WITHOUT_CLASSIFICATION	4.677934941024758E-8	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999999624427052	WITHOUT_CLASSIFICATION	3.755729475535474E-8	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999999884984764	WITHOUT_CLASSIFICATION	1.1501523516931517E-8	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999997843856431	WITHOUT_CLASSIFICATION	2.156143569421944E-7	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999999695545	WITHOUT_CLASSIFICATION	3.044550005418737E-8	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.999981477823034	WITHOUT_CLASSIFICATION	1.8522176965987376E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999944851474155	WITHOUT_CLASSIFICATION	5.514852584507517E-6	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.99999999677168	WITHOUT_CLASSIFICATION	3.228319843453199E-9	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.999999998729933	WITHOUT_CLASSIFICATION	1.2700670413904395E-9	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999924479576416	WITHOUT_CLASSIFICATION	7.552042358330932E-6	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999936424653	WITHOUT_CLASSIFICATION	6.357534761741342E-9	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998833886625	WITHOUT_CLASSIFICATION	1.1661133736721905E-7	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999995517151106	WITHOUT_CLASSIFICATION	4.4828488943819935E-7	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999999385597972	WITHOUT_CLASSIFICATION	6.14402028912852E-8	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999998682708646	WITHOUT_CLASSIFICATION	1.3172913546153638E-7	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999998974094538	WITHOUT_CLASSIFICATION	1.0259054625357308E-7	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.99999996725438	WITHOUT_CLASSIFICATION	3.27456199997045E-8	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999994096245	WITHOUT_CLASSIFICATION	5.903754690551856E-10	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999999943720976	WITHOUT_CLASSIFICATION	5.627902348878135E-9	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999636764826	WITHOUT_CLASSIFICATION	3.632351738594381E-8	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999988492337	WITHOUT_CLASSIFICATION	1.1507662342860766E-9	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999930475346346	WITHOUT_CLASSIFICATION	6.952465365403675E-6	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999869899322699	WITHOUT_CLASSIFICATION	1.3010067730067334E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999991318485164	WITHOUT_CLASSIFICATION	8.681514835582916E-7	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999928010425824	WITHOUT_CLASSIFICATION	7.198957417631784E-6	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999962414932831	WITHOUT_CLASSIFICATION	3.758506716791167E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999998128401183	WITHOUT_CLASSIFICATION	1.8715988167037905E-7	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999958606964406	WITHOUT_CLASSIFICATION	4.13930355933912E-6	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999957506395	WITHOUT_CLASSIFICATION	4.249360470961442E-9	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999996387209249	WITHOUT_CLASSIFICATION	3.612790750982159E-7	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999998978965802	WITHOUT_CLASSIFICATION	1.0210341974561951E-7	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999520061715	WITHOUT_CLASSIFICATION	4.799382833620136E-8	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999999588808292	WITHOUT_CLASSIFICATION	4.111917077738197E-8	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9999856783948958	WITHOUT_CLASSIFICATION	1.4321605104265076E-5	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.999999902868469	WITHOUT_CLASSIFICATION	9.713153114076607E-8	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999956026473	WITHOUT_CLASSIFICATION	4.397352729229073E-9	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999998762813163	WITHOUT_CLASSIFICATION	1.2371868379904963E-7	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999872010987	WITHOUT_CLASSIFICATION	1.27989012573289E-8	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999983526412	WITHOUT_CLASSIFICATION	1.6473587520698603E-9	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999999835974517	WITHOUT_CLASSIFICATION	1.640254831834101E-8	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.99999999468597	WITHOUT_CLASSIFICATION	5.3140299792316795E-9	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999999935649938	WITHOUT_CLASSIFICATION	6.435006115887366E-9	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998983301542	WITHOUT_CLASSIFICATION	1.0166984573801122E-7	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999999875188954	WITHOUT_CLASSIFICATION	1.248110469099964E-8	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999926449767	WITHOUT_CLASSIFICATION	7.355023280499475E-9	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999999896747828	WITHOUT_CLASSIFICATION	1.0325217167036707E-8	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999997753853296	WITHOUT_CLASSIFICATION	2.246146703162028E-7	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999998761094064	WITHOUT_CLASSIFICATION	1.2389059356146697E-7	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999810452861	WITHOUT_CLASSIFICATION	1.895471394587694E-8	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999999436658701	WITHOUT_CLASSIFICATION	5.633413000723729E-8	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999854948098539	WITHOUT_CLASSIFICATION	1.4505190146122642E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999928471166142	WITHOUT_CLASSIFICATION	7.152883385793969E-6	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999995722336217	WITHOUT_CLASSIFICATION	4.277663783546056E-7	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999983790803127	WITHOUT_CLASSIFICATION	1.6209196872159593E-6	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999998679836449	WITHOUT_CLASSIFICATION	1.3201635499979277E-7	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999995267154996	WITHOUT_CLASSIFICATION	4.732845003864342E-7	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999999342058234	WITHOUT_CLASSIFICATION	6.579417658142925E-8	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999799138523	WITHOUT_CLASSIFICATION	2.0086147795599584E-8	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999919726205865	WITHOUT_CLASSIFICATION	8.027379413470942E-6	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9999907234803836	WITHOUT_CLASSIFICATION	9.276519616333094E-6	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.999993243242123	WITHOUT_CLASSIFICATION	6.756757876945605E-6	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9999917943504723	WITHOUT_CLASSIFICATION	8.205649527806735E-6	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9999901629096505	WITHOUT_CLASSIFICATION	9.837090349481114E-6	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9999926345950682	WITHOUT_CLASSIFICATION	7.365404931837669E-6	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.999992694118228	WITHOUT_CLASSIFICATION	7.305881771930781E-6	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9999927694981994	WITHOUT_CLASSIFICATION	7.230501800645616E-6	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9999929711601104	WITHOUT_CLASSIFICATION	7.0288398895853494E-6	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9999922808053752	WITHOUT_CLASSIFICATION	7.71919462487018E-6	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9999916959197105	WITHOUT_CLASSIFICATION	8.304080289531673E-6	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.9999919159458829	WITHOUT_CLASSIFICATION	8.08405411704648E-6	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9999908135838492	WITHOUT_CLASSIFICATION	9.18641615068068E-6	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9999894344534122	WITHOUT_CLASSIFICATION	1.0565546587823652E-5	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.9999918247578423	WITHOUT_CLASSIFICATION	8.17524215774633E-6	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.999991876752625	WITHOUT_CLASSIFICATION	8.123247375006384E-6	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9999921420142306	WITHOUT_CLASSIFICATION	7.857985769417638E-6	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.9999909639019543	WITHOUT_CLASSIFICATION	9.036098045737678E-6	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.9999871616886911	WITHOUT_CLASSIFICATION	1.2838311309045562E-5	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9999910309088523	WITHOUT_CLASSIFICATION	8.969091147662055E-6	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999999824208657	WITHOUT_CLASSIFICATION	1.7579134335182846E-8	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.999995369600488	WITHOUT_CLASSIFICATION	4.630399512122526E-6	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999995537121664	WITHOUT_CLASSIFICATION	4.4628783361465495E-7	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999998693231593	WITHOUT_CLASSIFICATION	1.3067684065479954E-7	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999995226399443	WITHOUT_CLASSIFICATION	4.773600557253593E-7	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999999975012048	WITHOUT_CLASSIFICATION	2.498795147286178E-9	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999999955448353	WITHOUT_CLASSIFICATION	4.4551646947317764E-9	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999999135469583	WITHOUT_CLASSIFICATION	8.645304176176822E-8	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999726833396	WITHOUT_CLASSIFICATION	2.7316660422206994E-8	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999997346619899	WITHOUT_CLASSIFICATION	2.653380100889015E-7	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9379141969474548	WITHOUT_CLASSIFICATION	0.06208580305254508	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999999161628516	WITHOUT_CLASSIFICATION	8.383714853294678E-8	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999967960123528	WITHOUT_CLASSIFICATION	3.2039876472594525E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999998545887078	WITHOUT_CLASSIFICATION	1.4541129212505693E-7	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999998545887078	WITHOUT_CLASSIFICATION	1.4541129212505693E-7	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999999874381399	WITHOUT_CLASSIFICATION	1.256186015823644E-8	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999988019261703	WITHOUT_CLASSIFICATION	1.1980738297365265E-6	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999973258796	WITHOUT_CLASSIFICATION	2.6741202664926967E-9	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999998853140942	WITHOUT_CLASSIFICATION	1.1468590573607559E-7	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999999895727592	WITHOUT_CLASSIFICATION	1.0427240828428036E-8	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999996289006311	WITHOUT_CLASSIFICATION	3.7109936894835595E-7	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999995413749854	WITHOUT_CLASSIFICATION	4.586250146345856E-7	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999999765681584	WITHOUT_CLASSIFICATION	2.343184152849466E-8	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999999737532851	WITHOUT_CLASSIFICATION	2.624671483806178E-8	TEST
// base	WITHOUT_CLASSIFICATION	0.9999997081301583	WITHOUT_CLASSIFICATION	2.9186984180030027E-7	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9996828205862274	WITHOUT_CLASSIFICATION	3.1717941377261356E-4	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999905950337	WITHOUT_CLASSIFICATION	9.404966280141587E-9	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.999997800627761	WITHOUT_CLASSIFICATION	2.1993722389563395E-6	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999983541268092	WITHOUT_CLASSIFICATION	1.6458731908521972E-6	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999999683264363	WITHOUT_CLASSIFICATION	3.167356360807086E-8	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999838179793127	WITHOUT_CLASSIFICATION	1.6182020687350235E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999997468289836	WITHOUT_CLASSIFICATION	2.5317101633925365E-7	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999652914785	WITHOUT_CLASSIFICATION	3.4708521596208485E-8	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999994204344621	WITHOUT_CLASSIFICATION	5.795655378960188E-7	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999982853035904	WITHOUT_CLASSIFICATION	1.7146964096348472E-6	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.999999909099846	WITHOUT_CLASSIFICATION	9.090015385890292E-8	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999999994335049	WITHOUT_CLASSIFICATION	5.664950987230852E-10	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999995243564063	WITHOUT_CLASSIFICATION	4.756435937195434E-7	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999997294448169	WITHOUT_CLASSIFICATION	2.705551831653591E-7	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999838062317	WITHOUT_CLASSIFICATION	1.6193768419269025E-8	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999993968701637	WITHOUT_CLASSIFICATION	6.031298363085386E-7	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999999799724488	WITHOUT_CLASSIFICATION	2.002755118229194E-8	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999996121188638	WITHOUT_CLASSIFICATION	3.8788113612190005E-7	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999997692182453	WITHOUT_CLASSIFICATION	2.307817546857983E-7	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999967431416842	WITHOUT_CLASSIFICATION	3.2568583158121972E-6	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999997306009293	WITHOUT_CLASSIFICATION	2.6939907069791855E-7	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.999999545441139	WITHOUT_CLASSIFICATION	4.5455886094408446E-7	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999963210670167	WITHOUT_CLASSIFICATION	3.6789329831759876E-6	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999993627517028	WITHOUT_CLASSIFICATION	6.372482973123152E-7	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.99999994116472	WITHOUT_CLASSIFICATION	5.883527988178861E-8	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999998374103427	WITHOUT_CLASSIFICATION	1.6258965720657633E-7	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995623092914	WITHOUT_CLASSIFICATION	4.376907085524273E-7	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.999999987431046	WITHOUT_CLASSIFICATION	1.256895389203135E-8	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999999469064921	WITHOUT_CLASSIFICATION	5.309350797115774E-8	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999963423586	WITHOUT_CLASSIFICATION	3.6576413599522837E-9	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999999505400663	WITHOUT_CLASSIFICATION	4.9459933703986555E-8	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999999231635981	WITHOUT_CLASSIFICATION	7.683640194470935E-8	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999999210950109	WITHOUT_CLASSIFICATION	7.890498909885157E-8	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999993338084885	WITHOUT_CLASSIFICATION	6.66191511606417E-7	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999993338084885	WITHOUT_CLASSIFICATION	6.66191511606417E-7	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999999690124042	WITHOUT_CLASSIFICATION	3.098759580104186E-8	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999999580333805	WITHOUT_CLASSIFICATION	4.1966619468358274E-8	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999999337438523	WITHOUT_CLASSIFICATION	6.625614771420062E-8	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999998335916516	WITHOUT_CLASSIFICATION	1.664083483370076E-7	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999953053793136	WITHOUT_CLASSIFICATION	4.6946206863541874E-6	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999998847467017	WITHOUT_CLASSIFICATION	1.1525329826810112E-7	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.999999958679749	WITHOUT_CLASSIFICATION	4.132025096240522E-8	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999718164167688	WITHOUT_CLASSIFICATION	2.8183583231263385E-5	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999998728267965	WITHOUT_CLASSIFICATION	1.2717320347507526E-7	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999997817229204	WITHOUT_CLASSIFICATION	2.1827707975738638E-7	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999998302459068	WITHOUT_CLASSIFICATION	1.6975409336453886E-7	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999998514182923	WITHOUT_CLASSIFICATION	1.4858170760353887E-7	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999930498736034	WITHOUT_CLASSIFICATION	6.950126396602213E-6	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999997209072856	WITHOUT_CLASSIFICATION	2.790927143390349E-7	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9996898832344625	WITHOUT_CLASSIFICATION	3.1011676553748793E-4	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999973823678643	WITHOUT_CLASSIFICATION	2.617632135648963E-6	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999968678338396	WITHOUT_CLASSIFICATION	3.132166160407101E-6	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999998261258165	WITHOUT_CLASSIFICATION	1.7387418348614338E-7	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999981605576942	WITHOUT_CLASSIFICATION	1.8394423058360054E-6	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999729225881376	WITHOUT_CLASSIFICATION	2.707741186236196E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999698534281	WITHOUT_CLASSIFICATION	3.0146571914299596E-8	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999698534281	WITHOUT_CLASSIFICATION	3.0146571914299596E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999709445814	WITHOUT_CLASSIFICATION	2.9055418694629233E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999709445814	WITHOUT_CLASSIFICATION	2.9055418694629233E-8	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999734570524	WITHOUT_CLASSIFICATION	2.654294764337059E-8	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999998603022452	WITHOUT_CLASSIFICATION	1.3969775489020224E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999998423595229	WITHOUT_CLASSIFICATION	1.5764047702536748E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999165454604	WITHOUT_CLASSIFICATION	8.345453955199259E-8	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999998638188407	WITHOUT_CLASSIFICATION	1.3618115946818175E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999924972731	WITHOUT_CLASSIFICATION	7.502726802308787E-9	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999995855135893	WITHOUT_CLASSIFICATION	4.144864107143774E-7	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999996211683643	WITHOUT_CLASSIFICATION	3.7883163567275265E-7	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999997769462637	WITHOUT_CLASSIFICATION	2.230537362393216E-7	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999998941430583	WITHOUT_CLASSIFICATION	1.0585694165076037E-7	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.999999845374071	WITHOUT_CLASSIFICATION	1.546259290291932E-7	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999999225808971	WITHOUT_CLASSIFICATION	7.74191028738782E-8	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999998616878237	WITHOUT_CLASSIFICATION	1.3831217624872898E-7	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999678738984883	WITHOUT_CLASSIFICATION	3.212610151168199E-5	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999999431104984	WITHOUT_CLASSIFICATION	5.688950161069041E-8	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999997619314673	WITHOUT_CLASSIFICATION	2.3806853255365439E-7	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999993401376186	WITHOUT_CLASSIFICATION	6.598623813702985E-7	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999999153498997	WITHOUT_CLASSIFICATION	8.465010024676771E-8	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9999936516272211	WITHOUT_CLASSIFICATION	6.348372778915663E-6	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999996052189305	WITHOUT_CLASSIFICATION	3.947810695789446E-7	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999997219490684	WITHOUT_CLASSIFICATION	2.7805093164276436E-7	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999999628063984	WITHOUT_CLASSIFICATION	3.7193601545914016E-8	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999996926102495	WITHOUT_CLASSIFICATION	3.073897505594142E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999478494931	WITHOUT_CLASSIFICATION	5.215050681072333E-8	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999920344118	WITHOUT_CLASSIFICATION	7.965588251102467E-9	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999998123219798	WITHOUT_CLASSIFICATION	1.8767802010168333E-7	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999984980807	WITHOUT_CLASSIFICATION	1.5019191460715332E-9	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999999219408565	WITHOUT_CLASSIFICATION	7.805914355682514E-8	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999996634752043	WITHOUT_CLASSIFICATION	3.365247957760023E-7	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999999984416249	WITHOUT_CLASSIFICATION	1.5583750946641308E-8	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.999999984416249	WITHOUT_CLASSIFICATION	1.5583750946641308E-8	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999845287812	WITHOUT_CLASSIFICATION	1.5471218765285807E-8	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.999999801813093	WITHOUT_CLASSIFICATION	1.9818690703947378E-7	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999626802646	WITHOUT_CLASSIFICATION	3.73197355287947E-8	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999999263134274	WITHOUT_CLASSIFICATION	7.368657264597712E-8	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999999932965659	WITHOUT_CLASSIFICATION	6.70343422871017E-9	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999999847975772	WITHOUT_CLASSIFICATION	1.5202422732612717E-8	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999999741814157	WITHOUT_CLASSIFICATION	2.581858423107637E-8	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999999994035972	WITHOUT_CLASSIFICATION	5.964027419713063E-10	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999999176271523	WITHOUT_CLASSIFICATION	8.237284775324146E-8	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999997183806492	WITHOUT_CLASSIFICATION	2.8161935076342383E-7	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.999999863987285	WITHOUT_CLASSIFICATION	1.3601271503071518E-7	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999999929440987	WITHOUT_CLASSIFICATION	7.055901223967228E-9	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999996663326672	WITHOUT_CLASSIFICATION	3.336673326965694E-7	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999996657889064	WITHOUT_CLASSIFICATION	3.3421109362041507E-7	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999460801566	WITHOUT_CLASSIFICATION	5.3919843325038486E-8	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999997549877889	WITHOUT_CLASSIFICATION	2.450122110352121E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999996333000836	WITHOUT_CLASSIFICATION	3.6669991647337E-7	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999999539102924	WITHOUT_CLASSIFICATION	4.608970764107587E-8	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.999999991930201	WITHOUT_CLASSIFICATION	8.069799020980779E-9	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9998311726884725	WITHOUT_CLASSIFICATION	1.6882731152734133E-4	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.99999964842894	WITHOUT_CLASSIFICATION	3.5157105998225074E-7	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999984229952175	WITHOUT_CLASSIFICATION	1.5770047825853723E-6	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999946687070711	WITHOUT_CLASSIFICATION	5.331292928941691E-6	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999996471587107	WITHOUT_CLASSIFICATION	3.528412892824218E-7	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999999011321771	WITHOUT_CLASSIFICATION	9.886782287204552E-8	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999998264263313	WITHOUT_CLASSIFICATION	1.7357366862393906E-7	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999998568598132	WITHOUT_CLASSIFICATION	1.4314018688071583E-7	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999997227075167	WITHOUT_CLASSIFICATION	2.7729248334719057E-7	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999400484998	WITHOUT_CLASSIFICATION	5.995150027267618E-8	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999996850250928	WITHOUT_CLASSIFICATION	3.1497490710924653E-7	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.999999935695753	WITHOUT_CLASSIFICATION	6.430424713541857E-8	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999995392483142	WITHOUT_CLASSIFICATION	4.6075168578298833E-7	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999995649735132	WITHOUT_CLASSIFICATION	4.3502648680619644E-7	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9999994124713313	WITHOUT_CLASSIFICATION	5.875286687129312E-7	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999990641724666	WITHOUT_CLASSIFICATION	9.358275334671002E-7	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999999903685839	WITHOUT_CLASSIFICATION	9.63141612534956E-9	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999954481285975	WITHOUT_CLASSIFICATION	4.551871402488303E-6	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999978579952067	WITHOUT_CLASSIFICATION	2.1420047932953497E-6	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999999104217573	WITHOUT_CLASSIFICATION	8.957824273569543E-8	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999998904757755	WITHOUT_CLASSIFICATION	1.0952422442541221E-7	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999970571263	WITHOUT_CLASSIFICATION	2.942873600997145E-9	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999999706170268	WITHOUT_CLASSIFICATION	2.9382973061828396E-8	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999998778959706	WITHOUT_CLASSIFICATION	1.2210402942425405E-7	TEST
// while	WITHOUT_CLASSIFICATION	0.9999993406419183	WITHOUT_CLASSIFICATION	6.593580817139959E-7	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999828161860199	WITHOUT_CLASSIFICATION	1.7183813980042252E-5	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999999694140896	WITHOUT_CLASSIFICATION	3.0585910367038055E-8	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999999160870446	WITHOUT_CLASSIFICATION	8.391295527401016E-8	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999904372872	WITHOUT_CLASSIFICATION	9.562712746571688E-9	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999999823913553	WITHOUT_CLASSIFICATION	1.7608644652335163E-8	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999998869467095	WITHOUT_CLASSIFICATION	1.1305329048264367E-7	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999942042774312	WITHOUT_CLASSIFICATION	5.795722568773454E-6	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999936209797483	WITHOUT_CLASSIFICATION	6.379020251591484E-6	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999934473668617	WITHOUT_CLASSIFICATION	6.552633138322023E-6	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999956298821641	WITHOUT_CLASSIFICATION	4.37011783591344E-6	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999982102453588	WITHOUT_CLASSIFICATION	1.7897546410962953E-6	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999928561351669	WITHOUT_CLASSIFICATION	7.143864833164482E-6	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999972615941944	WITHOUT_CLASSIFICATION	2.738405805584366E-6	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999726078018	WITHOUT_CLASSIFICATION	2.7392198192898236E-8	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999920932296705	WITHOUT_CLASSIFICATION	7.906770329509274E-6	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999998318732378	WITHOUT_CLASSIFICATION	1.6812676214794663E-7	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999821042193424	WITHOUT_CLASSIFICATION	1.7895780657604353E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999942042774312	WITHOUT_CLASSIFICATION	5.795722568773454E-6	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999934473668617	WITHOUT_CLASSIFICATION	6.552633138322023E-6	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999936209797483	WITHOUT_CLASSIFICATION	6.379020251591484E-6	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999929800348617	WITHOUT_CLASSIFICATION	7.019965138320415E-6	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999960889281941	WITHOUT_CLASSIFICATION	3.911071805926819E-6	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999988357699942	WITHOUT_CLASSIFICATION	1.1642300058773037E-6	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999999452056264	WITHOUT_CLASSIFICATION	5.479437347546361E-8	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.999999969301559	WITHOUT_CLASSIFICATION	3.069844104835314E-8	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999997647501685	WITHOUT_CLASSIFICATION	2.3524983141682284E-7	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999997261527187	WITHOUT_CLASSIFICATION	2.738472813276599E-7	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999999152780467	WITHOUT_CLASSIFICATION	8.472195337781824E-8	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999998184209458	WITHOUT_CLASSIFICATION	1.815790542790801E-7	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999999840780639	WITHOUT_CLASSIFICATION	1.5921936161448015E-8	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999999930280216	WITHOUT_CLASSIFICATION	6.971978496037446E-9	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.99999996848588	WITHOUT_CLASSIFICATION	3.151411990219863E-8	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999997731345017	WITHOUT_CLASSIFICATION	2.2686549836922864E-7	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999996662168449	WITHOUT_CLASSIFICATION	3.3378315517513547E-7	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999999932845465	WITHOUT_CLASSIFICATION	6.715453516331104E-9	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999997176907296	WITHOUT_CLASSIFICATION	2.8230927036461543E-7	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999997813752981	WITHOUT_CLASSIFICATION	2.1862470199375964E-7	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999995762563734	WITHOUT_CLASSIFICATION	4.23743626696889E-7	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999995762563734	WITHOUT_CLASSIFICATION	4.23743626696889E-7	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999997704859112	WITHOUT_CLASSIFICATION	2.295140888466511E-7	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999999217127248	WITHOUT_CLASSIFICATION	7.828727519433703E-8	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999987584710978	WITHOUT_CLASSIFICATION	1.2415289021851325E-6	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999933037594544	WITHOUT_CLASSIFICATION	6.696240545587525E-6	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999998445921208	WITHOUT_CLASSIFICATION	1.554078792662776E-7	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999999978954343	WITHOUT_CLASSIFICATION	2.104565619734768E-9	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999999919467645	WITHOUT_CLASSIFICATION	8.053235442080109E-9	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999999412746796	WITHOUT_CLASSIFICATION	5.87253203730128E-8	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999999463769886	WITHOUT_CLASSIFICATION	5.3623011343202725E-8	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999974611945	WITHOUT_CLASSIFICATION	2.538805498549039E-9	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999999342442352	WITHOUT_CLASSIFICATION	6.575576478297394E-8	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999984933176383	WITHOUT_CLASSIFICATION	1.5066823616764932E-6	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999999590022347	WITHOUT_CLASSIFICATION	4.0997765236087705E-8	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999997416646748	WITHOUT_CLASSIFICATION	2.5833532515590695E-7	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999999245913116	WITHOUT_CLASSIFICATION	7.54086883315907E-8	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999265217951	WITHOUT_CLASSIFICATION	7.347820483493413E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999999642904189	WITHOUT_CLASSIFICATION	3.5709581035302536E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999772951341	WITHOUT_CLASSIFICATION	2.270486593028438E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999772951341	WITHOUT_CLASSIFICATION	2.270486593028438E-8	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9999995445726538	WITHOUT_CLASSIFICATION	4.5542734614579624E-7	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999991588100111	WITHOUT_CLASSIFICATION	8.411899888441112E-7	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999953361496207	WITHOUT_CLASSIFICATION	4.663850379353286E-6	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999985696390358	WITHOUT_CLASSIFICATION	1.4303609642183204E-6	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999999820583763	WITHOUT_CLASSIFICATION	1.7941623750736466E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999772951341	WITHOUT_CLASSIFICATION	2.270486593028438E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999772951341	WITHOUT_CLASSIFICATION	2.270486593028438E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999991172015	WITHOUT_CLASSIFICATION	8.827984133016874E-10	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999991172015	WITHOUT_CLASSIFICATION	8.827984133016874E-10	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.999999485244557	WITHOUT_CLASSIFICATION	5.147554430619214E-7	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999982666281422	WITHOUT_CLASSIFICATION	1.733371857901372E-6	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.999999994834902	WITHOUT_CLASSIFICATION	5.165098096476577E-9	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999999508198961	WITHOUT_CLASSIFICATION	4.91801039018573E-8	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999945797633	WITHOUT_CLASSIFICATION	5.4202366602792495E-9	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999945797633	WITHOUT_CLASSIFICATION	5.4202366602792495E-9	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999999271699817	WITHOUT_CLASSIFICATION	7.283001839401843E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999992395590455	WITHOUT_CLASSIFICATION	7.604409544698936E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993614524465	WITHOUT_CLASSIFICATION	6.3854755351446E-7	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999996039733818	WITHOUT_CLASSIFICATION	3.960266182411745E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999990833293	WITHOUT_CLASSIFICATION	9.166708882866152E-10	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999998483527489	WITHOUT_CLASSIFICATION	1.5164725111741088E-7	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999992765414848	WITHOUT_CLASSIFICATION	7.234585151284095E-7	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999999728112878	WITHOUT_CLASSIFICATION	2.7188712156906144E-8	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999998052001758	WITHOUT_CLASSIFICATION	1.9479982431320903E-7	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.999999995077198	WITHOUT_CLASSIFICATION	4.922802082835863E-9	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999979161232263	WITHOUT_CLASSIFICATION	2.083876773571362E-6	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999999582995936	WITHOUT_CLASSIFICATION	4.170040643062937E-8	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999998757272924	WITHOUT_CLASSIFICATION	1.2427270753114507E-7	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999637389484	WITHOUT_CLASSIFICATION	3.62610516072341E-8	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999265217951	WITHOUT_CLASSIFICATION	7.347820483493413E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999772951341	WITHOUT_CLASSIFICATION	2.270486593028438E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999991172015	WITHOUT_CLASSIFICATION	8.827984133016874E-10	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999998483527489	WITHOUT_CLASSIFICATION	1.5164725111741088E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999658740688	WITHOUT_CLASSIFICATION	3.412593121865988E-8	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999658740688	WITHOUT_CLASSIFICATION	3.412593121865988E-8	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999998171141281	WITHOUT_CLASSIFICATION	1.8288587185146838E-7	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999619189015	WITHOUT_CLASSIFICATION	3.8081098429155344E-8	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999979497929	WITHOUT_CLASSIFICATION	2.0502072256175594E-9	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999973765794	WITHOUT_CLASSIFICATION	2.6234205585471673E-9	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999993312883315	WITHOUT_CLASSIFICATION	6.687116684659018E-7	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999999060344726	WITHOUT_CLASSIFICATION	9.39655272924564E-8	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999998239517095	WITHOUT_CLASSIFICATION	1.7604829044916067E-7	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999980853292655	WITHOUT_CLASSIFICATION	1.9146707345717947E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999951616892	WITHOUT_CLASSIFICATION	4.838310817127255E-9	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999999362539026	WITHOUT_CLASSIFICATION	6.374609737405624E-8	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999994175675525	WITHOUT_CLASSIFICATION	5.824324474836167E-7	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999892021025	WITHOUT_CLASSIFICATION	1.0797897446575121E-8	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.999999957965273	WITHOUT_CLASSIFICATION	4.203472713121751E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999999642904189	WITHOUT_CLASSIFICATION	3.5709581035302536E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999991172015	WITHOUT_CLASSIFICATION	8.827984133016874E-10	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999992395590455	WITHOUT_CLASSIFICATION	7.604409544698936E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993614524465	WITHOUT_CLASSIFICATION	6.3854755351446E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993614524465	WITHOUT_CLASSIFICATION	6.3854755351446E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999990833293	WITHOUT_CLASSIFICATION	9.166708882866152E-10	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999998483527489	WITHOUT_CLASSIFICATION	1.5164725111741088E-7	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999998483527489	WITHOUT_CLASSIFICATION	1.5164725111741088E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999658740688	WITHOUT_CLASSIFICATION	3.412593121865988E-8	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999998002101225	WITHOUT_CLASSIFICATION	1.9978987746579064E-7	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999988156400105	WITHOUT_CLASSIFICATION	1.1843599895810956E-6	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999794879072	WITHOUT_CLASSIFICATION	2.0512092816982718E-8	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999966445908591	WITHOUT_CLASSIFICATION	3.355409140755728E-6	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999995435787362	WITHOUT_CLASSIFICATION	4.5642126382933614E-7	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999649866880377	WITHOUT_CLASSIFICATION	3.501331196233589E-5	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999999405603102	WITHOUT_CLASSIFICATION	5.94396898759318E-8	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999997674367	WITHOUT_CLASSIFICATION	2.3256322687692946E-10	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999999766054672	WITHOUT_CLASSIFICATION	2.3394532691723744E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999992395590455	WITHOUT_CLASSIFICATION	7.604409544698936E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993614524465	WITHOUT_CLASSIFICATION	6.3854755351446E-7	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993614524465	WITHOUT_CLASSIFICATION	6.3854755351446E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999990833293	WITHOUT_CLASSIFICATION	9.166708882866152E-10	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999980853292655	WITHOUT_CLASSIFICATION	1.9146707345717947E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999999362539026	WITHOUT_CLASSIFICATION	6.374609737405624E-8	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9991563137101612	WITHOUT_CLASSIFICATION	8.43686289838823E-4	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.999999913130236	WITHOUT_CLASSIFICATION	8.68697640167337E-8	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999983656383837	WITHOUT_CLASSIFICATION	1.6343616161871346E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999983656383837	WITHOUT_CLASSIFICATION	1.6343616161871346E-6	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999997908477662	WITHOUT_CLASSIFICATION	2.0915223376427533E-7	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999998610416735	WITHOUT_CLASSIFICATION	1.3895832662536682E-7	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999999262652765	WITHOUT_CLASSIFICATION	7.373472348463962E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999694313516	WITHOUT_CLASSIFICATION	3.056864844465906E-8	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.999999873779885	WITHOUT_CLASSIFICATION	1.2622011494107173E-7	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.999999873779885	WITHOUT_CLASSIFICATION	1.2622011494107173E-7	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999999092333016	WITHOUT_CLASSIFICATION	9.076669837937915E-8	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999999092333016	WITHOUT_CLASSIFICATION	9.076669837937915E-8	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999874452207	WITHOUT_CLASSIFICATION	1.2554779405204293E-8	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999874452207	WITHOUT_CLASSIFICATION	1.2554779405204293E-8	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999997749576163	WITHOUT_CLASSIFICATION	2.2504238386511093E-7	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999999001522177	WITHOUT_CLASSIFICATION	9.984778217101735E-8	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999979821062313	WITHOUT_CLASSIFICATION	2.0178937687962534E-6	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.999999982848778	WITHOUT_CLASSIFICATION	1.7151222010628084E-8	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999999964471457	WITHOUT_CLASSIFICATION	3.5528543133344223E-9	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.999999263430866	WITHOUT_CLASSIFICATION	7.365691340076442E-7	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999998399597799	WITHOUT_CLASSIFICATION	1.6004021999260463E-7	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999999060137463	WITHOUT_CLASSIFICATION	9.398625370189888E-8	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.999996326951476	WITHOUT_CLASSIFICATION	3.673048524047426E-6	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999974909305367	WITHOUT_CLASSIFICATION	2.509069463334887E-6	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999999846138433	WITHOUT_CLASSIFICATION	1.538615669865778E-8	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999999717764113	WITHOUT_CLASSIFICATION	2.8223588600312985E-8	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999996676505696	WITHOUT_CLASSIFICATION	3.3234943048698177E-7	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999986307214922	WITHOUT_CLASSIFICATION	1.3692785078140777E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999986307214922	WITHOUT_CLASSIFICATION	1.3692785078140777E-6	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999993317012337	WITHOUT_CLASSIFICATION	6.682987662138074E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999924972731	WITHOUT_CLASSIFICATION	7.502726802308787E-9	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999999524764792	WITHOUT_CLASSIFICATION	4.752352075317972E-8	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999957384157	WITHOUT_CLASSIFICATION	4.261584263792069E-9	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999999387309476	WITHOUT_CLASSIFICATION	6.12690524766249E-8	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999997475687891	WITHOUT_CLASSIFICATION	2.52431210936921E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999246322137	WITHOUT_CLASSIFICATION	7.536778632471181E-8	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999999253703121	WITHOUT_CLASSIFICATION	7.462968786049139E-8	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999972498427	WITHOUT_CLASSIFICATION	2.7501573293895223E-9	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999610623581	WITHOUT_CLASSIFICATION	3.893764177028865E-8	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999879320477	WITHOUT_CLASSIFICATION	1.2067952416129584E-8	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999990771730792	WITHOUT_CLASSIFICATION	9.228269206698562E-7	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999999337277691	WITHOUT_CLASSIFICATION	6.627223093167962E-8	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999987951524564	WITHOUT_CLASSIFICATION	1.2048475435749987E-6	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999792205661203	WITHOUT_CLASSIFICATION	2.0779433879650865E-5	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.999999691400471	WITHOUT_CLASSIFICATION	3.0859952895105455E-7	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999998874748037	WITHOUT_CLASSIFICATION	1.1252519633547676E-7	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999999849425629	WITHOUT_CLASSIFICATION	1.505743711822119E-8	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999618071348	WITHOUT_CLASSIFICATION	3.8192865068167144E-8	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999618071348	WITHOUT_CLASSIFICATION	3.8192865068167144E-8	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999999687764858	WITHOUT_CLASSIFICATION	3.122351423971883E-8	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999961642637814	WITHOUT_CLASSIFICATION	3.835736218704834E-6	TEST
//[]	WITHOUT_CLASSIFICATION	0.9999394533181848	WITHOUT_CLASSIFICATION	6.054668181515928E-5	TEST
//[]	WITHOUT_CLASSIFICATION	0.9999394533181848	WITHOUT_CLASSIFICATION	6.054668181515928E-5	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.999999616626107	WITHOUT_CLASSIFICATION	3.8337389299247386E-7	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999969867737599	WITHOUT_CLASSIFICATION	3.0132262401174565E-6	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999930372094584	WITHOUT_CLASSIFICATION	6.962790541609302E-6	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999992616829546	WITHOUT_CLASSIFICATION	7.3831704539972705E-6	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999999166801088	WITHOUT_CLASSIFICATION	8.331989120588309E-8	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999848897186	WITHOUT_CLASSIFICATION	1.511028141930946E-8	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999848897186	WITHOUT_CLASSIFICATION	1.511028141930946E-8	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999987527269	WITHOUT_CLASSIFICATION	1.247273171413749E-9	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999998699794889	WITHOUT_CLASSIFICATION	1.3002051116461455E-7	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999999678952824	WITHOUT_CLASSIFICATION	3.210471759610602E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999996622332432	WITHOUT_CLASSIFICATION	3.377667567897365E-6	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999961642637814	WITHOUT_CLASSIFICATION	3.835736218704834E-6	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999971325586127	WITHOUT_CLASSIFICATION	2.867441387274332E-6	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999992727730458	WITHOUT_CLASSIFICATION	7.272269542520058E-7	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999992727730458	WITHOUT_CLASSIFICATION	7.272269542520058E-7	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999993663822849	WITHOUT_CLASSIFICATION	6.33617715075286E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999862319829	WITHOUT_CLASSIFICATION	1.3768016994261516E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999862319829	WITHOUT_CLASSIFICATION	1.3768016994261516E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999894935543	WITHOUT_CLASSIFICATION	1.050644566250313E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999894935543	WITHOUT_CLASSIFICATION	1.050644566250313E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999894935543	WITHOUT_CLASSIFICATION	1.050644566250313E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999862319829	WITHOUT_CLASSIFICATION	1.3768016994261516E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999862319829	WITHOUT_CLASSIFICATION	1.3768016994261516E-8	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999993663822849	WITHOUT_CLASSIFICATION	6.33617715075286E-7	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999999659652035	WITHOUT_CLASSIFICATION	3.4034796609970966E-8	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999999311533928	WITHOUT_CLASSIFICATION	6.88466072133393E-8	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999998813678089	WITHOUT_CLASSIFICATION	1.1863219105705456E-7	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999998229732859	WITHOUT_CLASSIFICATION	1.770267141120819E-7	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999977489181	WITHOUT_CLASSIFICATION	2.25108193460259E-9	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999992983554237	WITHOUT_CLASSIFICATION	7.016445763270389E-7	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999996774544202	WITHOUT_CLASSIFICATION	3.225455798509585E-7	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999871120904	WITHOUT_CLASSIFICATION	1.2887909715029842E-8	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999879320477	WITHOUT_CLASSIFICATION	1.2067952416129584E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999862319829	WITHOUT_CLASSIFICATION	1.3768016994261516E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999862319829	WITHOUT_CLASSIFICATION	1.3768016994261516E-8	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999840291175	WITHOUT_CLASSIFICATION	1.5970882425034684E-8	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999999345736897	WITHOUT_CLASSIFICATION	6.542631032529384E-8	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999996240895858	WITHOUT_CLASSIFICATION	3.75910414225784E-7	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999803756707	WITHOUT_CLASSIFICATION	1.9624329360316973E-8	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.999999920559491	WITHOUT_CLASSIFICATION	7.944050903576058E-8	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999693728908	WITHOUT_CLASSIFICATION	3.0627109188126426E-8	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999929278638	WITHOUT_CLASSIFICATION	7.0721361703623395E-9	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999435049043	WITHOUT_CLASSIFICATION	5.649509557337841E-8	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999997595038964	WITHOUT_CLASSIFICATION	2.4049610359225265E-7	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999836016589	WITHOUT_CLASSIFICATION	1.6398341120046865E-8	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999929388183553	WITHOUT_CLASSIFICATION	7.061181644838569E-6	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999981686511279	WITHOUT_CLASSIFICATION	1.8313488720710938E-6	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999999558078692	WITHOUT_CLASSIFICATION	4.4192130806081344E-8	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999999198511783	WITHOUT_CLASSIFICATION	8.014882160629938E-8	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999985532463	WITHOUT_CLASSIFICATION	1.4467537482395162E-9	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.99999959928571	WITHOUT_CLASSIFICATION	4.0071428986316923E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.99999959928571	WITHOUT_CLASSIFICATION	4.0071428986316923E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.99999959928571	WITHOUT_CLASSIFICATION	4.0071428986316923E-7	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.999999995465443	WITHOUT_CLASSIFICATION	4.534556945371997E-9	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999983022448	WITHOUT_CLASSIFICATION	1.697755114510472E-9	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999999841676346	WITHOUT_CLASSIFICATION	1.583236538868286E-8	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.999999975286359	WITHOUT_CLASSIFICATION	2.471364106392591E-8	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999999883099421	WITHOUT_CLASSIFICATION	1.1690057973176057E-8	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999997014285874	WITHOUT_CLASSIFICATION	2.9857141258141987E-7	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.999999999808931	WITHOUT_CLASSIFICATION	1.9106903221812564E-10	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999996914029005	WITHOUT_CLASSIFICATION	3.0859709959011765E-7	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999999456429365	WITHOUT_CLASSIFICATION	5.435706356248567E-8	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999998905500496	WITHOUT_CLASSIFICATION	1.0944995035110508E-7	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999993597936876	WITHOUT_CLASSIFICATION	6.402063123497323E-7	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999994750622885	WITHOUT_CLASSIFICATION	5.249377115886378E-7	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999987527269	WITHOUT_CLASSIFICATION	1.247273171413749E-9	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999862319829	WITHOUT_CLASSIFICATION	1.3768016994261516E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999862319829	WITHOUT_CLASSIFICATION	1.3768016994261516E-8	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999993663822849	WITHOUT_CLASSIFICATION	6.33617715075286E-7	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999992983554237	WITHOUT_CLASSIFICATION	7.016445763270389E-7	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999999345736897	WITHOUT_CLASSIFICATION	6.542631032529384E-8	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999803756707	WITHOUT_CLASSIFICATION	1.9624329360316973E-8	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999693728908	WITHOUT_CLASSIFICATION	3.0627109188126426E-8	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999996240895858	WITHOUT_CLASSIFICATION	3.75910414225784E-7	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999929278638	WITHOUT_CLASSIFICATION	7.0721361703623395E-9	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999836016589	WITHOUT_CLASSIFICATION	1.6398341120046865E-8	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999997595038964	WITHOUT_CLASSIFICATION	2.4049610359225265E-7	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999981686511279	WITHOUT_CLASSIFICATION	1.8313488720710938E-6	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999999441720623	WITHOUT_CLASSIFICATION	5.582793771555031E-8	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999999181810512	WITHOUT_CLASSIFICATION	8.18189488539008E-8	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999994908366332	WITHOUT_CLASSIFICATION	5.091633666917605E-7	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999749833329	WITHOUT_CLASSIFICATION	2.5016667101526353E-8	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999999826207309	WITHOUT_CLASSIFICATION	1.737926905213771E-8	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999998591549606	WITHOUT_CLASSIFICATION	1.4084503942077632E-7	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999999137516115	WITHOUT_CLASSIFICATION	8.62483885554196E-8	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999997601761615	WITHOUT_CLASSIFICATION	2.3982383839981754E-7	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999999619543793	WITHOUT_CLASSIFICATION	3.804562070622907E-8	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999407995056	WITHOUT_CLASSIFICATION	5.920049451254975E-8	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999999780700654	WITHOUT_CLASSIFICATION	2.1929934639450474E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999878485959	WITHOUT_CLASSIFICATION	1.21514041853421E-8	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999995005277813	WITHOUT_CLASSIFICATION	4.994722187216792E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999999944169341	WITHOUT_CLASSIFICATION	5.5830658969467565E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999987061924	WITHOUT_CLASSIFICATION	1.2938076125796635E-9	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999571007976	WITHOUT_CLASSIFICATION	4.289920251426686E-8	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999993154107613	WITHOUT_CLASSIFICATION	6.84589238769648E-7	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999999602993683	WITHOUT_CLASSIFICATION	3.9700631733287775E-8	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999999995835732	WITHOUT_CLASSIFICATION	4.1642680628553904E-9	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999999802169287	WITHOUT_CLASSIFICATION	1.9783071299048147E-8	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999999987529261	WITHOUT_CLASSIFICATION	1.2470738951903708E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999925819228	WITHOUT_CLASSIFICATION	7.418077190175434E-9	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999925819228	WITHOUT_CLASSIFICATION	7.418077190175434E-9	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999995822911061	WITHOUT_CLASSIFICATION	4.177088938982081E-7	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999930909981	WITHOUT_CLASSIFICATION	6.90900197829137E-9	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188330396	WITHOUT_CLASSIFICATION	1.0981166960489273E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188330396	WITHOUT_CLASSIFICATION	1.0981166960489273E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188330396	WITHOUT_CLASSIFICATION	1.0981166960489273E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155407554	WITHOUT_CLASSIFICATION	1.7384459244514086E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155407554	WITHOUT_CLASSIFICATION	1.7384459244514086E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155407554	WITHOUT_CLASSIFICATION	1.7384459244514086E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155407554	WITHOUT_CLASSIFICATION	1.7384459244514086E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999679438073359	WITHOUT_CLASSIFICATION	3.205619266415978E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999679438073359	WITHOUT_CLASSIFICATION	3.205619266415978E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999679438073359	WITHOUT_CLASSIFICATION	3.205619266415978E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999738551371954	WITHOUT_CLASSIFICATION	2.6144862804611816E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999738551371954	WITHOUT_CLASSIFICATION	2.6144862804611816E-5	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999676258381689	WITHOUT_CLASSIFICATION	3.2374161831183754E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.999977780105704	WITHOUT_CLASSIFICATION	2.221989429596167E-5	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999930909981	WITHOUT_CLASSIFICATION	6.90900197829137E-9	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999556415656	WITHOUT_CLASSIFICATION	4.435843445310266E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188330396	WITHOUT_CLASSIFICATION	1.0981166960489273E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188330396	WITHOUT_CLASSIFICATION	1.0981166960489273E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155407554	WITHOUT_CLASSIFICATION	1.7384459244514086E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155407554	WITHOUT_CLASSIFICATION	1.7384459244514086E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155407554	WITHOUT_CLASSIFICATION	1.7384459244514086E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999679438073359	WITHOUT_CLASSIFICATION	3.205619266415978E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999679438073359	WITHOUT_CLASSIFICATION	3.205619266415978E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999738551371954	WITHOUT_CLASSIFICATION	2.6144862804611816E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.999977780105704	WITHOUT_CLASSIFICATION	2.221989429596167E-5	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999883652929	WITHOUT_CLASSIFICATION	1.1634706994396123E-8	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999883652929	WITHOUT_CLASSIFICATION	1.1634706994396123E-8	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999766325043	WITHOUT_CLASSIFICATION	2.3367495686918365E-8	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999766325043	WITHOUT_CLASSIFICATION	2.3367495686918365E-8	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999993993470234	WITHOUT_CLASSIFICATION	6.006529765592858E-7	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999993993470234	WITHOUT_CLASSIFICATION	6.006529765592858E-7	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999998213874836	WITHOUT_CLASSIFICATION	1.786125163452825E-7	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999381699152	WITHOUT_CLASSIFICATION	6.183008481031176E-8	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999381699152	WITHOUT_CLASSIFICATION	6.183008481031176E-8	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999999818091644	WITHOUT_CLASSIFICATION	1.8190835684179098E-8	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999999818091644	WITHOUT_CLASSIFICATION	1.8190835684179098E-8	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999239720553	WITHOUT_CLASSIFICATION	7.602794473689915E-8	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999999683288373	WITHOUT_CLASSIFICATION	3.1671162627206296E-8	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999999683288373	WITHOUT_CLASSIFICATION	3.1671162627206296E-8	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999824667111	WITHOUT_CLASSIFICATION	1.753328893530029E-8	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999997896016156	WITHOUT_CLASSIFICATION	2.1039838434188626E-7	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999657688073	WITHOUT_CLASSIFICATION	3.42311925850962E-8	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155407554	WITHOUT_CLASSIFICATION	1.7384459244514086E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155407554	WITHOUT_CLASSIFICATION	1.7384459244514086E-5	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999824667111	WITHOUT_CLASSIFICATION	1.753328893530029E-8	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.99999989742328	WITHOUT_CLASSIFICATION	1.0257671997620552E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999999802242018	WITHOUT_CLASSIFICATION	1.9775798199891795E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999999802242018	WITHOUT_CLASSIFICATION	1.9775798199891795E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999999802242018	WITHOUT_CLASSIFICATION	1.9775798199891795E-7	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.999999964355976	WITHOUT_CLASSIFICATION	3.564402404553405E-8	TEST
// args	WITHOUT_CLASSIFICATION	0.9999996326806592	WITHOUT_CLASSIFICATION	3.673193408392516E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.999999626026481	WITHOUT_CLASSIFICATION	3.739735190382754E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.999999626026481	WITHOUT_CLASSIFICATION	3.739735190382754E-7	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999999793092237	WITHOUT_CLASSIFICATION	2.0690776345366684E-8	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.999999892028392	WITHOUT_CLASSIFICATION	1.0797160806727268E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999998920543332	WITHOUT_CLASSIFICATION	1.0794566688042054E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999996749481341	WITHOUT_CLASSIFICATION	3.2505186579416576E-7	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999285674775	WITHOUT_CLASSIFICATION	7.143252239264693E-8	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999710268846	WITHOUT_CLASSIFICATION	2.8973115326793266E-8	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999710268846	WITHOUT_CLASSIFICATION	2.8973115326793266E-8	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999999967340176	WITHOUT_CLASSIFICATION	3.265982343313237E-9	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.999970279399099	WITHOUT_CLASSIFICATION	2.9720600900975866E-5	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.999970279399099	WITHOUT_CLASSIFICATION	2.9720600900975866E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155407554	WITHOUT_CLASSIFICATION	1.7384459244514086E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999999802242018	WITHOUT_CLASSIFICATION	1.9775798199891795E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.9999996326806592	WITHOUT_CLASSIFICATION	3.673193408392516E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.999999626026481	WITHOUT_CLASSIFICATION	3.739735190382754E-7	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999999793092237	WITHOUT_CLASSIFICATION	2.0690776345366684E-8	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.999999892028392	WITHOUT_CLASSIFICATION	1.0797160806727268E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999998920543332	WITHOUT_CLASSIFICATION	1.0794566688042054E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999996749481341	WITHOUT_CLASSIFICATION	3.2505186579416576E-7	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.999970279399099	WITHOUT_CLASSIFICATION	2.9720600900975866E-5	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999998575958119	WITHOUT_CLASSIFICATION	1.4240418808778507E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999999469040498	WITHOUT_CLASSIFICATION	5.3095950178879507E-8	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999999115035658	WITHOUT_CLASSIFICATION	8.849643423424114E-8	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999999832736727	WITHOUT_CLASSIFICATION	1.6726327365292725E-8	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999999137672366	WITHOUT_CLASSIFICATION	8.623276339334555E-8	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999997232469261	WITHOUT_CLASSIFICATION	2.7675307392710235E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998719201625	WITHOUT_CLASSIFICATION	1.280798374467077E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998719201625	WITHOUT_CLASSIFICATION	1.280798374467077E-7	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.999999948581207	WITHOUT_CLASSIFICATION	5.141879290981152E-8	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999999724437806	WITHOUT_CLASSIFICATION	2.755621946232665E-8	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999999755464395	WITHOUT_CLASSIFICATION	2.445356058977536E-8	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999852549402	WITHOUT_CLASSIFICATION	1.4745059693523889E-8	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999999978105768	WITHOUT_CLASSIFICATION	2.189423206574223E-8	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999999978105768	WITHOUT_CLASSIFICATION	2.189423206574223E-8	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999999853099969	WITHOUT_CLASSIFICATION	1.4690003059219374E-8	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999999779333616	WITHOUT_CLASSIFICATION	2.206663842208576E-8	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999999765225245	WITHOUT_CLASSIFICATION	2.3477475628162573E-8	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999999765225245	WITHOUT_CLASSIFICATION	2.3477475628162573E-8	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999998230652476	WITHOUT_CLASSIFICATION	1.769347523985278E-7	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.999999988582665	WITHOUT_CLASSIFICATION	1.1417334971782212E-8	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999285674775	WITHOUT_CLASSIFICATION	7.143252239264693E-8	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999571106615	WITHOUT_CLASSIFICATION	4.288933844292733E-8	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999786247908	WITHOUT_CLASSIFICATION	2.137520915028328E-8	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999127706347	WITHOUT_CLASSIFICATION	8.722936521486062E-8	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999449271336	WITHOUT_CLASSIFICATION	5.5072866423995295E-8	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999998837724567	WITHOUT_CLASSIFICATION	1.1622754322685126E-7	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999999010761411	WITHOUT_CLASSIFICATION	9.892385887620039E-8	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999944469076	WITHOUT_CLASSIFICATION	5.5530924308594425E-9	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999999088132858	WITHOUT_CLASSIFICATION	9.118671409537395E-8	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999991260612	WITHOUT_CLASSIFICATION	8.739386818924886E-10	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999991260612	WITHOUT_CLASSIFICATION	8.739386818924886E-10	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999999622548404	WITHOUT_CLASSIFICATION	3.774515958340621E-8	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999999622548404	WITHOUT_CLASSIFICATION	3.774515958340621E-8	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999942604607	WITHOUT_CLASSIFICATION	5.739539286020965E-9	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999999284545031	WITHOUT_CLASSIFICATION	7.154549685570143E-8	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999999284545031	WITHOUT_CLASSIFICATION	7.154549685570143E-8	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999999284545031	WITHOUT_CLASSIFICATION	7.154549685570143E-8	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344199848	WITHOUT_CLASSIFICATION	5.655800151326733E-7	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999999574738081	WITHOUT_CLASSIFICATION	4.2526191918872456E-8	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999999574738081	WITHOUT_CLASSIFICATION	4.2526191918872456E-8	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999998017894961	WITHOUT_CLASSIFICATION	1.982105039489019E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999999803846862	WITHOUT_CLASSIFICATION	1.961531383109454E-8	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999999747501907	WITHOUT_CLASSIFICATION	2.524980929459111E-7	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999999321833934	WITHOUT_CLASSIFICATION	6.78166066031532E-8	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999999096096214	WITHOUT_CLASSIFICATION	9.039037874470673E-8	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999998647991774	WITHOUT_CLASSIFICATION	1.3520082267246442E-7	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999788519248047	WITHOUT_CLASSIFICATION	2.1148075195261155E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999995005277813	WITHOUT_CLASSIFICATION	4.994722187216792E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999995005277813	WITHOUT_CLASSIFICATION	4.994722187216792E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344199848	WITHOUT_CLASSIFICATION	5.655800151326733E-7	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999998017894961	WITHOUT_CLASSIFICATION	1.982105039489019E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999269476071	WITHOUT_CLASSIFICATION	7.305239290992958E-8	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999999803846862	WITHOUT_CLASSIFICATION	1.961531383109454E-8	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999999747501907	WITHOUT_CLASSIFICATION	2.524980929459111E-7	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999951074499	WITHOUT_CLASSIFICATION	4.892550138025478E-9	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999998987835625	WITHOUT_CLASSIFICATION	1.0121643743687996E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997359360673	WITHOUT_CLASSIFICATION	2.640639327545009E-7	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9999758346701477	WITHOUT_CLASSIFICATION	2.4165329852297328E-5	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999993901049107	WITHOUT_CLASSIFICATION	6.098950892707852E-7	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999949646967	WITHOUT_CLASSIFICATION	5.0353032183409715E-9	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.999999998354309	WITHOUT_CLASSIFICATION	1.6456911015853413E-9	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999951074499	WITHOUT_CLASSIFICATION	4.892550138025478E-9	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999935963753223	WITHOUT_CLASSIFICATION	6.403624677688872E-6	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999935963753223	WITHOUT_CLASSIFICATION	6.403624677688872E-6	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999994113660909	WITHOUT_CLASSIFICATION	5.886339091822063E-7	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999999893105891	WITHOUT_CLASSIFICATION	1.0689410960385327E-8	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999997804531986	WITHOUT_CLASSIFICATION	2.1954680141511573E-7	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999994884972523	WITHOUT_CLASSIFICATION	5.115027476384119E-7	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999994389244736	WITHOUT_CLASSIFICATION	5.610755263124054E-7	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999999221873042	WITHOUT_CLASSIFICATION	7.78126958498894E-8	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999998821947141	WITHOUT_CLASSIFICATION	1.1780528586621354E-7	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.999999970050917	WITHOUT_CLASSIFICATION	2.994908286602886E-8	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.999999992316926	WITHOUT_CLASSIFICATION	7.68307391142417E-9	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999998427388078	WITHOUT_CLASSIFICATION	1.5726119216759622E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999999364017755	WITHOUT_CLASSIFICATION	6.359822450023176E-7	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999994884972523	WITHOUT_CLASSIFICATION	5.115027476384119E-7	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999994389244736	WITHOUT_CLASSIFICATION	5.610755263124054E-7	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999999897595211	WITHOUT_CLASSIFICATION	1.024047903790069E-8	TEST
// push false	WITHOUT_CLASSIFICATION	0.999999767784734	WITHOUT_CLASSIFICATION	2.322152661471242E-7	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.999999831491421	WITHOUT_CLASSIFICATION	1.6850857901748223E-7	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999986180714375	WITHOUT_CLASSIFICATION	1.3819285624578212E-6	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999986061238371	WITHOUT_CLASSIFICATION	1.3938761628693923E-6	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999975706756621	WITHOUT_CLASSIFICATION	2.429324337961713E-6	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9999457171101852	WITHOUT_CLASSIFICATION	5.428288981479774E-5	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999996174476707	WITHOUT_CLASSIFICATION	3.8255232930285565E-7	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999988034659295	WITHOUT_CLASSIFICATION	1.1965340705769226E-6	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999960503058182	WITHOUT_CLASSIFICATION	3.949694181884954E-6	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999987299592934	WITHOUT_CLASSIFICATION	1.2700407066522162E-6	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9999931262259378	WITHOUT_CLASSIFICATION	6.873774062187345E-6	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999999618478934	WITHOUT_CLASSIFICATION	3.815210657250221E-8	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999999185394542	WITHOUT_CLASSIFICATION	8.146054574662724E-8	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999987420096	WITHOUT_CLASSIFICATION	1.257990399991311E-6	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999884465935	WITHOUT_CLASSIFICATION	1.1553406427784758E-8	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999958793764666	WITHOUT_CLASSIFICATION	4.120623533368319E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999999100466024	WITHOUT_CLASSIFICATION	8.995339754932356E-8	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999915097625	WITHOUT_CLASSIFICATION	8.490237509807285E-9	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999999467296437	WITHOUT_CLASSIFICATION	5.327035641191608E-8	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999958793764666	WITHOUT_CLASSIFICATION	4.120623533368319E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999999100466024	WITHOUT_CLASSIFICATION	8.995339754932356E-8	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999915097625	WITHOUT_CLASSIFICATION	8.490237509807285E-9	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999997419014451	WITHOUT_CLASSIFICATION	2.580985548534103E-7	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999978678986	WITHOUT_CLASSIFICATION	2.132101430284636E-9	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999999927145353	WITHOUT_CLASSIFICATION	7.285464742026359E-9	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999996943834101	WITHOUT_CLASSIFICATION	3.0561658992132845E-7	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999993062676399	WITHOUT_CLASSIFICATION	6.937323600687777E-7	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.999999927041695	WITHOUT_CLASSIFICATION	7.295830503620166E-8	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999999934215584	WITHOUT_CLASSIFICATION	6.5784415313566505E-9	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999999984640675	WITHOUT_CLASSIFICATION	1.5359324720810945E-9	TEST
// script object	WITHOUT_CLASSIFICATION	0.999999956183982	WITHOUT_CLASSIFICATION	4.3816018157521936E-8	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999999105528075	WITHOUT_CLASSIFICATION	8.944719250241497E-8	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.99465031146161	WITHOUT_CLASSIFICATION	0.005349688538390026	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999999270484103	WITHOUT_CLASSIFICATION	7.295158966555654E-8	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999998179057674	WITHOUT_CLASSIFICATION	1.8209423270740876E-7	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999997959337231	WITHOUT_CLASSIFICATION	2.0406627690646882E-7	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9995726188733498	WITHOUT_CLASSIFICATION	4.2738112665024255E-4	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.999999925055865	WITHOUT_CLASSIFICATION	7.494413504956145E-8	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999999939192455	WITHOUT_CLASSIFICATION	6.0807544175918125E-9	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999997346908689	WITHOUT_CLASSIFICATION	2.6530913109317273E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999998369790905	WITHOUT_CLASSIFICATION	1.6302090961084366E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999997312875641	WITHOUT_CLASSIFICATION	2.6871243593610817E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999072262759	WITHOUT_CLASSIFICATION	9.277372419326364E-8	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999997673551282	WITHOUT_CLASSIFICATION	2.3264487174034956E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999997673551282	WITHOUT_CLASSIFICATION	2.3264487174034956E-7	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999995427687618	WITHOUT_CLASSIFICATION	4.5723123822753244E-7	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999995427687618	WITHOUT_CLASSIFICATION	4.5723123822753244E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999997352464134	WITHOUT_CLASSIFICATION	2.6475358665202635E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999997352464134	WITHOUT_CLASSIFICATION	2.6475358665202635E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999130562894	WITHOUT_CLASSIFICATION	8.694371059106775E-8	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999899507473	WITHOUT_CLASSIFICATION	1.004925269385775E-8	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999960953249	WITHOUT_CLASSIFICATION	3.9046751699722435E-9	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999996619405638	WITHOUT_CLASSIFICATION	3.380594361807952E-7	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999994256144916	WITHOUT_CLASSIFICATION	5.743855083908166E-7	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999689736871	WITHOUT_CLASSIFICATION	3.102631282707124E-8	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999997768957388	WITHOUT_CLASSIFICATION	2.2310426122889957E-7	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999999090011544	WITHOUT_CLASSIFICATION	9.099884565637026E-8	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999995005277813	WITHOUT_CLASSIFICATION	4.994722187216792E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999130562894	WITHOUT_CLASSIFICATION	8.694371059106775E-8	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999899507473	WITHOUT_CLASSIFICATION	1.004925269385775E-8	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999960953249	WITHOUT_CLASSIFICATION	3.9046751699722435E-9	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999994256144916	WITHOUT_CLASSIFICATION	5.743855083908166E-7	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999689736871	WITHOUT_CLASSIFICATION	3.102631282707124E-8	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999996881463816	WITHOUT_CLASSIFICATION	3.1185361836771053E-7	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.999999878949956	WITHOUT_CLASSIFICATION	1.2105004395680316E-7	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999996596870496	WITHOUT_CLASSIFICATION	3.4031295034843353E-7	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999996596870496	WITHOUT_CLASSIFICATION	3.4031295034843353E-7	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999997289485344	WITHOUT_CLASSIFICATION	2.710514657062403E-7	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999372124414	WITHOUT_CLASSIFICATION	6.278755854371945E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999756455275	WITHOUT_CLASSIFICATION	2.4354472632741856E-8	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.99999991813274	WITHOUT_CLASSIFICATION	8.186725989884069E-8	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.99999991813274	WITHOUT_CLASSIFICATION	8.186725989884069E-8	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999997998934523	WITHOUT_CLASSIFICATION	2.0010654766278327E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999996568112511	WITHOUT_CLASSIFICATION	3.431887487808355E-7	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999823405401	WITHOUT_CLASSIFICATION	1.7659459934374965E-8	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999999604996086	WITHOUT_CLASSIFICATION	3.9500391388597724E-8	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999956761751	WITHOUT_CLASSIFICATION	4.323824865647627E-9	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999999944169341	WITHOUT_CLASSIFICATION	5.5830658969467565E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999987061924	WITHOUT_CLASSIFICATION	1.2938076125796635E-9	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999571007976	WITHOUT_CLASSIFICATION	4.289920251426686E-8	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999993154107613	WITHOUT_CLASSIFICATION	6.84589238769648E-7	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999999802169287	WITHOUT_CLASSIFICATION	1.9783071299048147E-8	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999999987529261	WITHOUT_CLASSIFICATION	1.2470738951903708E-8	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999997998934523	WITHOUT_CLASSIFICATION	2.0010654766278327E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999996568112511	WITHOUT_CLASSIFICATION	3.431887487808355E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999999604996086	WITHOUT_CLASSIFICATION	3.9500391388597724E-8	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999913363489	WITHOUT_CLASSIFICATION	8.66365109956837E-9	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999756455275	WITHOUT_CLASSIFICATION	2.4354472632741856E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999756455275	WITHOUT_CLASSIFICATION	2.4354472632741856E-8	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999999364017755	WITHOUT_CLASSIFICATION	6.359822450023176E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999999364017755	WITHOUT_CLASSIFICATION	6.359822450023176E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999916454227	WITHOUT_CLASSIFICATION	8.354577208475541E-9	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999916454227	WITHOUT_CLASSIFICATION	8.354577208475541E-9	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999897265095	WITHOUT_CLASSIFICATION	1.0273490499638446E-8	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999999757451633	WITHOUT_CLASSIFICATION	2.425483666296395E-8	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999999065409625	WITHOUT_CLASSIFICATION	9.345903756882566E-8	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999964196236873	WITHOUT_CLASSIFICATION	3.580376312750981E-6	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999999283319975	WITHOUT_CLASSIFICATION	7.166800254676666E-8	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999599166991	WITHOUT_CLASSIFICATION	4.008330082609167E-8	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999684543409	WITHOUT_CLASSIFICATION	3.154565906922472E-8	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999974648571	WITHOUT_CLASSIFICATION	2.5351428605064615E-9	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.99999998408177	WITHOUT_CLASSIFICATION	1.591822992769219E-8	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999999846202571	WITHOUT_CLASSIFICATION	1.5379743007134023E-8	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999998394577034	WITHOUT_CLASSIFICATION	1.605422965125129E-7	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999999777121826	WITHOUT_CLASSIFICATION	2.228781731504125E-8	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999999452820727	WITHOUT_CLASSIFICATION	5.471792719835759E-8	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999867851108	WITHOUT_CLASSIFICATION	1.3214889083341425E-8	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.99999979227369	WITHOUT_CLASSIFICATION	2.0772630989833996E-7	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999998780309982	WITHOUT_CLASSIFICATION	1.2196900174982763E-7	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999998714659342	WITHOUT_CLASSIFICATION	1.2853406582156479E-7	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999999872495183	WITHOUT_CLASSIFICATION	1.2750481719480141E-8	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999999962107414	WITHOUT_CLASSIFICATION	3.78925855591179E-9	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999987061924	WITHOUT_CLASSIFICATION	1.2938076125796635E-9	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999993154107613	WITHOUT_CLASSIFICATION	6.84589238769648E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999925819228	WITHOUT_CLASSIFICATION	7.418077190175434E-9	TEST
// block	WITHOUT_CLASSIFICATION	0.999999626026481	WITHOUT_CLASSIFICATION	3.739735190382754E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.999999626026481	WITHOUT_CLASSIFICATION	3.739735190382754E-7	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999913363489	WITHOUT_CLASSIFICATION	8.66365109956837E-9	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999756455275	WITHOUT_CLASSIFICATION	2.4354472632741856E-8	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999999364017755	WITHOUT_CLASSIFICATION	6.359822450023176E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999916454227	WITHOUT_CLASSIFICATION	8.354577208475541E-9	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.999999968169472	WITHOUT_CLASSIFICATION	3.183052805468338E-8	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999998886675943	WITHOUT_CLASSIFICATION	1.1133240570936657E-7	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999999769354548	WITHOUT_CLASSIFICATION	2.3064545148819423E-8	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999999318678356	WITHOUT_CLASSIFICATION	6.813216435108799E-8	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999864664949	WITHOUT_CLASSIFICATION	1.3533504966319429E-8	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999864664949	WITHOUT_CLASSIFICATION	1.3533504966319429E-8	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999675824768	WITHOUT_CLASSIFICATION	3.241752320873601E-8	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999999252709588	WITHOUT_CLASSIFICATION	7.47290411219765E-8	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999795908685	WITHOUT_CLASSIFICATION	2.040913151051679E-8	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999999568496754	WITHOUT_CLASSIFICATION	4.315032468352871E-8	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999999238199111	WITHOUT_CLASSIFICATION	7.618008893576844E-8	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999999238199111	WITHOUT_CLASSIFICATION	7.618008893576844E-8	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999999386993272	WITHOUT_CLASSIFICATION	6.130067279717774E-8	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999999827544903	WITHOUT_CLASSIFICATION	1.724550971138796E-8	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999997384182796	WITHOUT_CLASSIFICATION	2.6158172042739327E-7	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999994605960959	WITHOUT_CLASSIFICATION	5.394039040674353E-7	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.999998954857816	WITHOUT_CLASSIFICATION	1.0451421839647E-6	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999902693422	WITHOUT_CLASSIFICATION	9.730657782845256E-9	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999996536804092	WITHOUT_CLASSIFICATION	3.46319590827745E-7	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999916073585	WITHOUT_CLASSIFICATION	8.39264142815218E-9	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999982044496598	WITHOUT_CLASSIFICATION	1.7955503401165853E-6	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9986875325481643	WITHOUT_CLASSIFICATION	0.0013124674518356287	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999998887435408	WITHOUT_CLASSIFICATION	1.1125645909780513E-7	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.999999757414053	WITHOUT_CLASSIFICATION	2.425859469999084E-7	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999876368858	WITHOUT_CLASSIFICATION	1.236311420374673E-8	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999999703532031	WITHOUT_CLASSIFICATION	2.9646796834970297E-8	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999908781253104	WITHOUT_CLASSIFICATION	9.121874689635974E-6	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999988386096726	WITHOUT_CLASSIFICATION	1.1613903273331503E-6	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999998860091974	WITHOUT_CLASSIFICATION	1.139908025820619E-7	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999999746051247	WITHOUT_CLASSIFICATION	2.5394875216690023E-8	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999996685318716	WITHOUT_CLASSIFICATION	3.314681283323379E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999997703987998	WITHOUT_CLASSIFICATION	2.2960120019425142E-7	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999992058247801	WITHOUT_CLASSIFICATION	7.941752199648346E-7	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999999828415492	WITHOUT_CLASSIFICATION	1.715845071267747E-8	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999999828415492	WITHOUT_CLASSIFICATION	1.715845071267747E-8	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999999605290724	WITHOUT_CLASSIFICATION	3.9470927547366246E-8	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999998787789192	WITHOUT_CLASSIFICATION	1.2122108084016263E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999999253703121	WITHOUT_CLASSIFICATION	7.462968786049139E-8	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999999253703121	WITHOUT_CLASSIFICATION	7.462968786049139E-8	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999973713336157	WITHOUT_CLASSIFICATION	2.628666384401793E-6	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999997016820227	WITHOUT_CLASSIFICATION	2.983179773554582E-7	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999946102245388	WITHOUT_CLASSIFICATION	5.389775461183194E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999584850786	WITHOUT_CLASSIFICATION	4.151492142500452E-8	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999584850786	WITHOUT_CLASSIFICATION	4.151492142500452E-8	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.999999933735225	WITHOUT_CLASSIFICATION	6.626477498737613E-8	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.999999977370653	WITHOUT_CLASSIFICATION	2.2629347003296747E-8	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999980833317	WITHOUT_CLASSIFICATION	1.9166683032209123E-9	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999999931625881	WITHOUT_CLASSIFICATION	6.837411909719578E-9	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999999847299786	WITHOUT_CLASSIFICATION	1.5270021400346467E-8	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999999397326202	WITHOUT_CLASSIFICATION	6.026737973782871E-8	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999999629080527	WITHOUT_CLASSIFICATION	3.7091947319753136E-8	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.999993653672738	WITHOUT_CLASSIFICATION	6.346327262100466E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999998839539231	WITHOUT_CLASSIFICATION	1.160460769279564E-7	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999998496650032	WITHOUT_CLASSIFICATION	1.503349967723265E-7	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999995539838298	WITHOUT_CLASSIFICATION	4.460161702069686E-7	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999997907676892	WITHOUT_CLASSIFICATION	2.0923231077306309E-7	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999999600388798	WITHOUT_CLASSIFICATION	3.9961120240005755E-8	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999996639086963	WITHOUT_CLASSIFICATION	3.360913037314638E-7	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999999146704596	WITHOUT_CLASSIFICATION	8.532954047339657E-8	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999999949754319	WITHOUT_CLASSIFICATION	5.024568080946798E-9	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999959181368	WITHOUT_CLASSIFICATION	4.081863232908939E-9	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.99999979272815	WITHOUT_CLASSIFICATION	2.0727185004423568E-7	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999994949875011	WITHOUT_CLASSIFICATION	5.050124989406664E-7	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999998134016373	WITHOUT_CLASSIFICATION	1.865983625911466E-7	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999999837808912	WITHOUT_CLASSIFICATION	1.6219108816392258E-8	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999999240563572	WITHOUT_CLASSIFICATION	7.594364271873969E-8	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999998566524984	WITHOUT_CLASSIFICATION	1.4334750162608288E-7	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999998778658877	WITHOUT_CLASSIFICATION	1.2213411224534567E-7	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999881044305933	WITHOUT_CLASSIFICATION	1.1895569406715663E-5	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999996166880758	WITHOUT_CLASSIFICATION	3.833119242483848E-7	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999930185814291	WITHOUT_CLASSIFICATION	6.981418570932835E-6	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999999925548393	WITHOUT_CLASSIFICATION	7.445160698674311E-8	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999997750707895	WITHOUT_CLASSIFICATION	2.2492921061305072E-7	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999907228437	WITHOUT_CLASSIFICATION	9.277156264138841E-9	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999999522213	WITHOUT_CLASSIFICATION	4.777856968607358E-11	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999996639086963	WITHOUT_CLASSIFICATION	3.360913037314638E-7	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999999925548393	WITHOUT_CLASSIFICATION	7.445160698674311E-8	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999997750707895	WITHOUT_CLASSIFICATION	2.2492921061305072E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999999522213	WITHOUT_CLASSIFICATION	4.777856968607358E-11	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999996639809753	WITHOUT_CLASSIFICATION	3.360190247412136E-7	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999993887266551	WITHOUT_CLASSIFICATION	6.112733448568352E-7	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999995269989113	WITHOUT_CLASSIFICATION	4.7300108877762187E-7	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999954375318296	WITHOUT_CLASSIFICATION	4.562468170419983E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999985439795338	WITHOUT_CLASSIFICATION	1.456020466165679E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999988236845	WITHOUT_CLASSIFICATION	1.1763155292597324E-9	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999997995611039	WITHOUT_CLASSIFICATION	2.0043889620418436E-7	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999999559786463	WITHOUT_CLASSIFICATION	4.402135374893446E-8	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999999266259753	WITHOUT_CLASSIFICATION	7.33740247147068E-8	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999999121771628	WITHOUT_CLASSIFICATION	8.782283711757599E-8	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999963714671073	WITHOUT_CLASSIFICATION	3.6285328926984824E-6	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999963714671073	WITHOUT_CLASSIFICATION	3.6285328926984824E-6	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999997137780425	WITHOUT_CLASSIFICATION	2.862219574315886E-7	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999968671897	WITHOUT_CLASSIFICATION	3.1328103576606195E-9	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.999999996314396	WITHOUT_CLASSIFICATION	3.6856040359918976E-9	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999997918145954	WITHOUT_CLASSIFICATION	2.0818540458443544E-7	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999872451998	WITHOUT_CLASSIFICATION	1.2754800240474839E-8	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999989604558563	WITHOUT_CLASSIFICATION	1.0395441436139105E-6	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999999157409809	WITHOUT_CLASSIFICATION	8.425901910703904E-8	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999994427577	WITHOUT_CLASSIFICATION	5.572422406412853E-10	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999998954520334	WITHOUT_CLASSIFICATION	1.0454796664159471E-7	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999999554247	WITHOUT_CLASSIFICATION	4.4575428227506276E-11	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999999071739701	WITHOUT_CLASSIFICATION	9.282602982903372E-8	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999999175945	WITHOUT_CLASSIFICATION	8.240548898306117E-11	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999994355259056	WITHOUT_CLASSIFICATION	5.644740944183649E-7	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999999808626794	WITHOUT_CLASSIFICATION	1.913732069601825E-8	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999999646615655	WITHOUT_CLASSIFICATION	3.533843450363675E-8	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999999990497307	WITHOUT_CLASSIFICATION	9.502693353882735E-10	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999999810529233	WITHOUT_CLASSIFICATION	1.894707668087304E-8	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999999819421417	WITHOUT_CLASSIFICATION	1.8057858353795448E-8	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999999804827278	WITHOUT_CLASSIFICATION	1.9517272292018092E-8	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999999658663694	WITHOUT_CLASSIFICATION	3.413363053610217E-8	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9999995131168994	WITHOUT_CLASSIFICATION	4.868831005516808E-7	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999997741474959	WITHOUT_CLASSIFICATION	2.2585250415810365E-7	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999999733546928	WITHOUT_CLASSIFICATION	2.6645307122934484E-8	TEST
// others	WITHOUT_CLASSIFICATION	0.999999694370782	WITHOUT_CLASSIFICATION	3.0562921813211844E-7	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999999329039112	WITHOUT_CLASSIFICATION	6.709608870294926E-8	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999998018025995	WITHOUT_CLASSIFICATION	1.9819740057265357E-7	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999964576259379	WITHOUT_CLASSIFICATION	3.542374062054642E-6	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999983630575	WITHOUT_CLASSIFICATION	1.6369424573478041E-9	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999998073693078	WITHOUT_CLASSIFICATION	1.9263069211025502E-7	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999999605470868	WITHOUT_CLASSIFICATION	3.9452913169627544E-8	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999999794622884	WITHOUT_CLASSIFICATION	2.0537711581453974E-8	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999999921329299	WITHOUT_CLASSIFICATION	7.867070036166629E-9	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999994441545995	WITHOUT_CLASSIFICATION	5.558454005512411E-7	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.999999737016217	WITHOUT_CLASSIFICATION	2.629837828854452E-7	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999999564708181	WITHOUT_CLASSIFICATION	4.352918197644184E-8	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.999998623640034	WITHOUT_CLASSIFICATION	1.3763599659714043E-6	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999997644250531	WITHOUT_CLASSIFICATION	2.3557494698321454E-7	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.999999837176834	WITHOUT_CLASSIFICATION	1.6282316591927225E-7	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999999330342508	WITHOUT_CLASSIFICATION	6.696574915523889E-8	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.999997528645843	WITHOUT_CLASSIFICATION	2.471354157068892E-6	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999994553284582	WITHOUT_CLASSIFICATION	5.446715417962856E-7	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998973376973089	WITHOUT_CLASSIFICATION	1.0266230269098999E-4	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999998615036596	WITHOUT_CLASSIFICATION	1.3849634040602147E-7	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999998097558439	WITHOUT_CLASSIFICATION	1.9024415607663735E-7	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999999221317496	WITHOUT_CLASSIFICATION	7.78682504962251E-8	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999999946788972	WITHOUT_CLASSIFICATION	5.321102797433119E-9	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999999969913258	WITHOUT_CLASSIFICATION	3.0086743172042854E-9	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999968728976	WITHOUT_CLASSIFICATION	3.127102382552591E-9	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999999179614724	WITHOUT_CLASSIFICATION	8.203852762966643E-8	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999995681139924	WITHOUT_CLASSIFICATION	4.3188600764010773E-7	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999999739928586	WITHOUT_CLASSIFICATION	2.6007141425534104E-8	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999999899743662	WITHOUT_CLASSIFICATION	1.0025633837973009E-8	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999642742969088	WITHOUT_CLASSIFICATION	3.5725703091287435E-5	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.999990115909719	WITHOUT_CLASSIFICATION	9.884090281033978E-6	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999145519753088	WITHOUT_CLASSIFICATION	8.544802469129061E-5	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999997670360085	WITHOUT_CLASSIFICATION	2.3296399159425914E-7	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999933969652	WITHOUT_CLASSIFICATION	6.603034814033163E-9	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999999289476732	WITHOUT_CLASSIFICATION	7.105232679629177E-8	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999999250928501	WITHOUT_CLASSIFICATION	7.490714983383097E-8	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999971338275977	WITHOUT_CLASSIFICATION	2.8661724023510086E-6	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999971338275977	WITHOUT_CLASSIFICATION	2.8661724023510086E-6	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999995537793319	WITHOUT_CLASSIFICATION	4.4622066805631935E-7	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999977054350649	WITHOUT_CLASSIFICATION	2.2945649350326573E-6	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999985652220404	WITHOUT_CLASSIFICATION	1.4347779595683544E-6	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999990864664522	WITHOUT_CLASSIFICATION	9.135335477995247E-7	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999999375915841	WITHOUT_CLASSIFICATION	6.240841595277124E-8	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999994637166977	WITHOUT_CLASSIFICATION	5.362833022474325E-7	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999727180446749	WITHOUT_CLASSIFICATION	2.728195532509574E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999994322531403	WITHOUT_CLASSIFICATION	5.677468597407654E-7	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999998964063539	WITHOUT_CLASSIFICATION	1.0359364599271918E-7	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999999985466081	WITHOUT_CLASSIFICATION	1.453391861817411E-9	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999998314258873	WITHOUT_CLASSIFICATION	1.6857411264438907E-7	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999999413241228	WITHOUT_CLASSIFICATION	5.867587717103177E-8	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999993972313627	WITHOUT_CLASSIFICATION	6.027686373146143E-7	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999999796899827	WITHOUT_CLASSIFICATION	2.031001742798528E-8	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999995181871694	WITHOUT_CLASSIFICATION	4.81812830730312E-7	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999988197775378	WITHOUT_CLASSIFICATION	1.1802224622531283E-6	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999995423805312	WITHOUT_CLASSIFICATION	4.5761946869773817E-7	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999995579233508	WITHOUT_CLASSIFICATION	4.420766491932424E-7	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999999457450516	WITHOUT_CLASSIFICATION	5.425494850586633E-8	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.999999806410761	WITHOUT_CLASSIFICATION	1.9358923899968884E-7	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999988154957954	WITHOUT_CLASSIFICATION	1.1845042046112012E-6	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999999267694379	WITHOUT_CLASSIFICATION	7.323056208199577E-8	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999988995960343	WITHOUT_CLASSIFICATION	1.1004039656485534E-6	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.999999846855452	WITHOUT_CLASSIFICATION	1.5314454805753264E-7	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999997067029199	WITHOUT_CLASSIFICATION	2.932970800356867E-7	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999984851339048	WITHOUT_CLASSIFICATION	1.5148660953097886E-6	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999983666785034	WITHOUT_CLASSIFICATION	1.633321496635242E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999998042708186	WITHOUT_CLASSIFICATION	1.9572918144042173E-7	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999999730404372	WITHOUT_CLASSIFICATION	2.6959562805204975E-8	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999778640623	WITHOUT_CLASSIFICATION	2.2135937772759874E-8	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999999902430889	WITHOUT_CLASSIFICATION	9.756911148933705E-9	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999993905040466	WITHOUT_CLASSIFICATION	6.094959534247556E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999621833425	WITHOUT_CLASSIFICATION	3.781665754634788E-8	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999981194620905	WITHOUT_CLASSIFICATION	1.8805379094931811E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999621833425	WITHOUT_CLASSIFICATION	3.781665754634788E-8	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999999847065166	WITHOUT_CLASSIFICATION	1.529348338124053E-8	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999986226821685	WITHOUT_CLASSIFICATION	1.377317831522485E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999986226821685	WITHOUT_CLASSIFICATION	1.377317831522485E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999986226821685	WITHOUT_CLASSIFICATION	1.377317831522485E-6	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999999951671329	WITHOUT_CLASSIFICATION	4.8328671026745E-8	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999999951671329	WITHOUT_CLASSIFICATION	4.8328671026745E-8	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999989186426868	WITHOUT_CLASSIFICATION	1.081357313278614E-6	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999699757972	WITHOUT_CLASSIFICATION	3.002420275839078E-8	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999082770907	WITHOUT_CLASSIFICATION	9.172290921183865E-8	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999999987423878	WITHOUT_CLASSIFICATION	1.25761230305954E-9	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999988592371922	WITHOUT_CLASSIFICATION	1.1407628077936248E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999987185656908	WITHOUT_CLASSIFICATION	1.2814343092673265E-6	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999999170718654	WITHOUT_CLASSIFICATION	8.292813455791105E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999999035558584	WITHOUT_CLASSIFICATION	9.644414146765352E-8	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999986409575066	WITHOUT_CLASSIFICATION	1.359042493490232E-6	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999999855448589	WITHOUT_CLASSIFICATION	1.4455141199498785E-8	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999994500788212	WITHOUT_CLASSIFICATION	5.499211788964319E-7	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999999792624432	WITHOUT_CLASSIFICATION	2.0737556844870916E-8	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999999929561589	WITHOUT_CLASSIFICATION	7.043841150293262E-9	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.999999912839416	WITHOUT_CLASSIFICATION	8.71605840735268E-8	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999998768925383	WITHOUT_CLASSIFICATION	1.2310746160775254E-7	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999998853104604	WITHOUT_CLASSIFICATION	1.1468953965231786E-7	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999999156774843	WITHOUT_CLASSIFICATION	8.432251567773547E-8	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999998960271363	WITHOUT_CLASSIFICATION	1.0397286373726992E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999998960271363	WITHOUT_CLASSIFICATION	1.0397286373726992E-7	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999998320319842	WITHOUT_CLASSIFICATION	1.6796801582298035E-7	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999999386866372	WITHOUT_CLASSIFICATION	6.131336288374697E-8	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999999386866372	WITHOUT_CLASSIFICATION	6.131336288374697E-8	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999968603081141	WITHOUT_CLASSIFICATION	3.1396918860618976E-6	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999999264750262	WITHOUT_CLASSIFICATION	7.352497375152499E-8	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999998249477844	WITHOUT_CLASSIFICATION	1.7505221558842866E-7	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999995590161658	WITHOUT_CLASSIFICATION	4.40983834241881E-7	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999997925340696	WITHOUT_CLASSIFICATION	2.074659304676634E-7	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999999897168372	WITHOUT_CLASSIFICATION	1.0283162823497054E-8	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999998595141911	WITHOUT_CLASSIFICATION	1.404858088996256E-7	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999999898023214	WITHOUT_CLASSIFICATION	1.0197678647543752E-8	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999023716333	WITHOUT_CLASSIFICATION	9.76283666668765E-8	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.999999873654564	WITHOUT_CLASSIFICATION	1.2634543611222398E-7	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999995163511782	WITHOUT_CLASSIFICATION	4.836488217615417E-7	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999997733866853	WITHOUT_CLASSIFICATION	2.2661331455441334E-7	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999998123219798	WITHOUT_CLASSIFICATION	1.8767802010168333E-7	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999999826654027	WITHOUT_CLASSIFICATION	1.733459735921146E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999999035558584	WITHOUT_CLASSIFICATION	9.644414146765352E-8	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.999973216529926	WITHOUT_CLASSIFICATION	2.6783470074122013E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999513937183	WITHOUT_CLASSIFICATION	4.86062817830511E-8	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999999148230093	WITHOUT_CLASSIFICATION	8.517699069489725E-8	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999999148230093	WITHOUT_CLASSIFICATION	8.517699069489725E-8	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.99999979642708	WITHOUT_CLASSIFICATION	2.035729200328397E-7	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999996760416753	WITHOUT_CLASSIFICATION	3.239583247697741E-7	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.999999996789084	WITHOUT_CLASSIFICATION	3.2109159616931656E-9	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999995303997908	WITHOUT_CLASSIFICATION	4.696002091078313E-7	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999706834524	WITHOUT_CLASSIFICATION	2.9316547660674232E-8	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999998970898865	WITHOUT_CLASSIFICATION	1.0291011357281379E-7	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999778281287	WITHOUT_CLASSIFICATION	2.21718713127345E-8	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999325218632485	WITHOUT_CLASSIFICATION	6.747813675139276E-5	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999999908716826	WITHOUT_CLASSIFICATION	9.12831742772189E-9	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999999715570497	WITHOUT_CLASSIFICATION	2.844295043578728E-8	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999998135944741	WITHOUT_CLASSIFICATION	1.864055259671493E-7	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999996933450824	WITHOUT_CLASSIFICATION	3.0665491753070215E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999776848299935	WITHOUT_CLASSIFICATION	2.2315170006416387E-5	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999998670935404	WITHOUT_CLASSIFICATION	1.3290645953683483E-7	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.999999901664267	WITHOUT_CLASSIFICATION	9.833573293263252E-8	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999997723894722	WITHOUT_CLASSIFICATION	2.2761052771149623E-7	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999998832211922	WITHOUT_CLASSIFICATION	1.1677880780297431E-7	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999994802591197	WITHOUT_CLASSIFICATION	5.197408803484094E-7	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999999271037611	WITHOUT_CLASSIFICATION	7.28962389511366E-8	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999692469708	WITHOUT_CLASSIFICATION	3.07530292008057E-8	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999999476820343	WITHOUT_CLASSIFICATION	5.231796576640762E-8	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999999963140664	WITHOUT_CLASSIFICATION	3.685933452080866E-9	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999996946235037	WITHOUT_CLASSIFICATION	3.053764963267995E-7	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999997038302	WITHOUT_CLASSIFICATION	2.961698264784356E-10	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999998891767469	WITHOUT_CLASSIFICATION	1.1082325304165937E-7	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999996696096547	WITHOUT_CLASSIFICATION	3.303903453635453E-7	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999484795882819	WITHOUT_CLASSIFICATION	5.152041171810495E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999924917342011	WITHOUT_CLASSIFICATION	7.5082657989336145E-6	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999943716007	WITHOUT_CLASSIFICATION	5.628399303911194E-9	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999992181559619	WITHOUT_CLASSIFICATION	7.818440381576263E-7	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.999999944367454	WITHOUT_CLASSIFICATION	5.56325459744372E-8	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999999814211163	WITHOUT_CLASSIFICATION	1.8578883621215958E-8	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999663489262488	WITHOUT_CLASSIFICATION	3.365107375124814E-5	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999966707584736	WITHOUT_CLASSIFICATION	3.3292415263692313E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999987094271193	WITHOUT_CLASSIFICATION	1.2905728806303542E-6	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999993201599007	WITHOUT_CLASSIFICATION	6.798400993335822E-7	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999924917342011	WITHOUT_CLASSIFICATION	7.5082657989336145E-6	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999978793579515	WITHOUT_CLASSIFICATION	2.1206420485294377E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999987094271193	WITHOUT_CLASSIFICATION	1.2905728806303542E-6	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.999999068553083	WITHOUT_CLASSIFICATION	9.314469169718703E-7	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999999728735433	WITHOUT_CLASSIFICATION	2.71264566835332E-8	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999984250481309	WITHOUT_CLASSIFICATION	1.5749518691800213E-6	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999999482138139	WITHOUT_CLASSIFICATION	5.178618611600024E-8	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999992371036112	WITHOUT_CLASSIFICATION	7.628963889300363E-7	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999999232862097	WITHOUT_CLASSIFICATION	7.671379033010579E-8	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999999232862097	WITHOUT_CLASSIFICATION	7.671379033010579E-8	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999987612679965	WITHOUT_CLASSIFICATION	1.2387320035111656E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999982441461	WITHOUT_CLASSIFICATION	1.7558538475589535E-9	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999504592845	WITHOUT_CLASSIFICATION	4.9540715500507055E-8	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999504592845	WITHOUT_CLASSIFICATION	4.9540715500507055E-8	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999984519893	WITHOUT_CLASSIFICATION	1.5480107729151994E-9	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9997843640174958	WITHOUT_CLASSIFICATION	2.1563598250427533E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9999486286469914	WITHOUT_CLASSIFICATION	5.137135300870084E-5	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9999486286469914	WITHOUT_CLASSIFICATION	5.137135300870084E-5	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999997247356147	WITHOUT_CLASSIFICATION	2.752643852300039E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999995857903908	WITHOUT_CLASSIFICATION	4.1420960916513316E-7	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999996634385855	WITHOUT_CLASSIFICATION	3.3656141446106395E-7	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999999263146025	WITHOUT_CLASSIFICATION	7.368539743667305E-8	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999999902518968	WITHOUT_CLASSIFICATION	9.748103204318083E-9	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.999998064915101	WITHOUT_CLASSIFICATION	1.935084899000481E-6	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.99999982319519	WITHOUT_CLASSIFICATION	1.7680480997751527E-7	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999997057593942	WITHOUT_CLASSIFICATION	2.9424060580312667E-7	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999998945336028	WITHOUT_CLASSIFICATION	1.0546639706191815E-7	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999994917411471	WITHOUT_CLASSIFICATION	5.082588528823582E-7	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999996698234292	WITHOUT_CLASSIFICATION	3.3017657084662034E-7	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999998224431527	WITHOUT_CLASSIFICATION	1.7755684736477107E-7	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999999618806178	WITHOUT_CLASSIFICATION	3.8119382084192357E-8	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999985781822941	WITHOUT_CLASSIFICATION	1.421817705844524E-6	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999999536460333	WITHOUT_CLASSIFICATION	4.635396662679474E-8	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999999913423724	WITHOUT_CLASSIFICATION	8.657627625514023E-9	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999663426448693	WITHOUT_CLASSIFICATION	3.365735513068197E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999999441521396	WITHOUT_CLASSIFICATION	5.5847860394705224E-8	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999999621489426	WITHOUT_CLASSIFICATION	3.78510573218717E-8	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999999392203988	WITHOUT_CLASSIFICATION	6.077960123942204E-8	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999997680107165	WITHOUT_CLASSIFICATION	2.3198928351822081E-7	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999978239991493	WITHOUT_CLASSIFICATION	2.176000850744772E-6	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.999999950534118	WITHOUT_CLASSIFICATION	4.946588188473477E-8	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999985680563541	WITHOUT_CLASSIFICATION	1.4319436458817694E-6	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999975092322543	WITHOUT_CLASSIFICATION	2.4907677456729496E-6	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.999996678579305	WITHOUT_CLASSIFICATION	3.321420695103146E-6	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999986965354482	WITHOUT_CLASSIFICATION	1.3034645517721639E-6	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999995927271914	WITHOUT_CLASSIFICATION	4.072728085232555E-7	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999926449767	WITHOUT_CLASSIFICATION	7.355023280499475E-9	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999926449767	WITHOUT_CLASSIFICATION	7.355023280499475E-9	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999732006125	WITHOUT_CLASSIFICATION	2.6799387565733006E-8	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999998812792786	WITHOUT_CLASSIFICATION	1.1872072137063506E-7	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999982513508976	WITHOUT_CLASSIFICATION	1.7486491023114526E-6	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999996045397417	WITHOUT_CLASSIFICATION	3.954602583483166E-7	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999993683472654	WITHOUT_CLASSIFICATION	6.316527345725457E-7	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999998630167353	WITHOUT_CLASSIFICATION	1.36983264747442E-7	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999996093183179	WITHOUT_CLASSIFICATION	3.9068168217023506E-7	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999284684223	WITHOUT_CLASSIFICATION	7.1531577689576E-8	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999999471561154	WITHOUT_CLASSIFICATION	5.2843884632231324E-8	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999999953380659	WITHOUT_CLASSIFICATION	4.661934112119951E-8	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999997865893178	WITHOUT_CLASSIFICATION	2.1341068219481773E-7	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.999999858323325	WITHOUT_CLASSIFICATION	1.4167667501563238E-7	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999989192566688	WITHOUT_CLASSIFICATION	1.0807433312409204E-6	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999998353967129	WITHOUT_CLASSIFICATION	1.646032870511548E-7	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999999983306014	WITHOUT_CLASSIFICATION	1.6693986727596306E-9	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999999777481134	WITHOUT_CLASSIFICATION	2.225188649570191E-8	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999999856775427	WITHOUT_CLASSIFICATION	1.4322457346732048E-8	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999999520331833	WITHOUT_CLASSIFICATION	4.796681685489533E-8	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999997147860462	WITHOUT_CLASSIFICATION	2.8521395384550595E-7	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999998017012771	WITHOUT_CLASSIFICATION	1.982987229842592E-7	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999999712459997	WITHOUT_CLASSIFICATION	2.8754000202420986E-8	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999981385856432	WITHOUT_CLASSIFICATION	1.8614143567431042E-6	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999998395138523	WITHOUT_CLASSIFICATION	1.6048614767666995E-7	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999669022601	WITHOUT_CLASSIFICATION	3.3097739904215807E-8	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999999783216101	WITHOUT_CLASSIFICATION	2.167838987525632E-8	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999998884196345	WITHOUT_CLASSIFICATION	1.1158036541309438E-7	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999987064131032	WITHOUT_CLASSIFICATION	1.2935868968534154E-6	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999997422760205	WITHOUT_CLASSIFICATION	2.5772397954686204E-7	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999997281438333	WITHOUT_CLASSIFICATION	2.718561667353935E-7	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999999929699548	WITHOUT_CLASSIFICATION	7.030045192187459E-9	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999996990400033	WITHOUT_CLASSIFICATION	3.009599967760609E-7	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999999345818893	WITHOUT_CLASSIFICATION	6.541811078323968E-8	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999999512810236	WITHOUT_CLASSIFICATION	4.871897652637993E-8	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999998630069445	WITHOUT_CLASSIFICATION	1.3699305551199028E-7	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.999999920967542	WITHOUT_CLASSIFICATION	7.903245805333774E-8	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999997708883946	WITHOUT_CLASSIFICATION	2.2911160538216715E-7	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999998538368451	WITHOUT_CLASSIFICATION	1.4616315482455046E-7	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999995934437436	WITHOUT_CLASSIFICATION	4.06556256365344E-7	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.99999998066018	WITHOUT_CLASSIFICATION	1.9339820007467732E-8	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.99999994991338	WITHOUT_CLASSIFICATION	5.008662000187329E-8	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999985791237015	WITHOUT_CLASSIFICATION	1.4208762985377785E-6	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999999768240846	WITHOUT_CLASSIFICATION	2.3175915463661244E-8	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999912142201	WITHOUT_CLASSIFICATION	8.78577995079802E-9	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999912142201	WITHOUT_CLASSIFICATION	8.78577995079802E-9	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999995405661731	WITHOUT_CLASSIFICATION	4.594338268806226E-7	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999965291341	WITHOUT_CLASSIFICATION	3.4708658156030086E-9	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999998853765519	WITHOUT_CLASSIFICATION	1.1462344810362383E-7	TEST
// return	WITHOUT_CLASSIFICATION	0.9999999578533919	WITHOUT_CLASSIFICATION	4.2146608068798015E-8	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999998369790905	WITHOUT_CLASSIFICATION	1.6302090961084366E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999997312875641	WITHOUT_CLASSIFICATION	2.6871243593610817E-7	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999997123934286	WITHOUT_CLASSIFICATION	2.876065714867881E-7	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999995430180867	WITHOUT_CLASSIFICATION	4.569819132741191E-7	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999996429094307	WITHOUT_CLASSIFICATION	3.570905693304922E-7	TEST
// tc	WITHOUT_CLASSIFICATION	0.9999992369533945	WITHOUT_CLASSIFICATION	7.630466053312284E-7	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999996497678586	WITHOUT_CLASSIFICATION	3.5023214143106297E-7	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999998792425064	WITHOUT_CLASSIFICATION	1.2075749348052162E-7	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999998335294611	WITHOUT_CLASSIFICATION	1.6647053887825747E-7	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999999661751441	WITHOUT_CLASSIFICATION	3.382485592823438E-8	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999562551555	WITHOUT_CLASSIFICATION	4.374484450120106E-8	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999998320010182	WITHOUT_CLASSIFICATION	1.6799898182206308E-7	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999305454337	WITHOUT_CLASSIFICATION	6.945456636671723E-8	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999997662246598	WITHOUT_CLASSIFICATION	2.3377534009160778E-7	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999436921562	WITHOUT_CLASSIFICATION	5.630784385317077E-8	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999997625611186	WITHOUT_CLASSIFICATION	2.374388814524013E-7	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999999929040915	WITHOUT_CLASSIFICATION	7.095908507094462E-8	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999996163288085	WITHOUT_CLASSIFICATION	3.836711915499907E-7	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999996406166397	WITHOUT_CLASSIFICATION	3.593833602837131E-7	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999998692566584	WITHOUT_CLASSIFICATION	1.3074334154158131E-7	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999313571444	WITHOUT_CLASSIFICATION	6.864285561254231E-8	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999907615392	WITHOUT_CLASSIFICATION	9.238460789091679E-8	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999284763644	WITHOUT_CLASSIFICATION	7.152363558385201E-8	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999131539499	WITHOUT_CLASSIFICATION	8.684605010525237E-8	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999999537064659	WITHOUT_CLASSIFICATION	4.629353415755463E-8	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999998570160397	WITHOUT_CLASSIFICATION	1.4298396031460973E-7	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999999146679357	WITHOUT_CLASSIFICATION	8.53320644001914E-8	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999995072756127	WITHOUT_CLASSIFICATION	4.927243873385191E-7	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999999848234828	WITHOUT_CLASSIFICATION	1.5176517145379434E-8	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999998816373966	WITHOUT_CLASSIFICATION	1.1836260335180886E-7	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999995934437436	WITHOUT_CLASSIFICATION	4.06556256365344E-7	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999994141853116	WITHOUT_CLASSIFICATION	5.858146883915909E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999998502951764	WITHOUT_CLASSIFICATION	1.4970482373983674E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999998502951764	WITHOUT_CLASSIFICATION	1.4970482373983674E-7	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.999998931792549	WITHOUT_CLASSIFICATION	1.068207450984219E-6	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999704066885	WITHOUT_CLASSIFICATION	2.9593311371547484E-8	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999999113968482	WITHOUT_CLASSIFICATION	8.860315182561172E-8	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999998092394753	WITHOUT_CLASSIFICATION	1.9076052464813152E-7	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999997440831455	WITHOUT_CLASSIFICATION	2.559168544961323E-7	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.999999795293042	WITHOUT_CLASSIFICATION	2.0470695802322463E-7	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999997886152544	WITHOUT_CLASSIFICATION	2.113847454907464E-7	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.999999655216123	WITHOUT_CLASSIFICATION	3.447838770457902E-7	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999998309128699	WITHOUT_CLASSIFICATION	1.6908713006088301E-7	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999998237143044	WITHOUT_CLASSIFICATION	1.7628569561277902E-7	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999997152098871	WITHOUT_CLASSIFICATION	2.8479011287583067E-7	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999996110974879	WITHOUT_CLASSIFICATION	3.8890251205386574E-7	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999999291912777	WITHOUT_CLASSIFICATION	7.080872237824543E-8	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999998824659397	WITHOUT_CLASSIFICATION	1.1753406032448828E-7	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999986682048936	WITHOUT_CLASSIFICATION	1.3317951064308242E-6	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999999979977263	WITHOUT_CLASSIFICATION	2.0022737924498766E-9	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999998152289507	WITHOUT_CLASSIFICATION	1.8477104944291273E-7	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999995552780492	WITHOUT_CLASSIFICATION	4.447219508377506E-7	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999998785376827	WITHOUT_CLASSIFICATION	1.2146231737406642E-7	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999998733666534	WITHOUT_CLASSIFICATION	1.2663334663455082E-7	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999998042048105	WITHOUT_CLASSIFICATION	1.9579518960864316E-7	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999998619555946	WITHOUT_CLASSIFICATION	1.380444053850012E-7	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999999939296963	WITHOUT_CLASSIFICATION	6.070303731609295E-9	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999999958938461	WITHOUT_CLASSIFICATION	4.106153858950049E-9	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999978157194	WITHOUT_CLASSIFICATION	2.1842805435609263E-9	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999999636097612	WITHOUT_CLASSIFICATION	3.6390238864787367E-8	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999997923432511	WITHOUT_CLASSIFICATION	2.0765674881927547E-7	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999999489586086	WITHOUT_CLASSIFICATION	5.104139150142053E-8	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999998808356979	WITHOUT_CLASSIFICATION	1.1916430200197149E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999999745962883	WITHOUT_CLASSIFICATION	2.5403711665125853E-8	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999998981978718	WITHOUT_CLASSIFICATION	1.0180212814433342E-7	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999999644809694	WITHOUT_CLASSIFICATION	3.5519030565067675E-8	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.999999848686967	WITHOUT_CLASSIFICATION	1.513130330642038E-7	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999939986228	WITHOUT_CLASSIFICATION	6.001377208970563E-9	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999999970241191	WITHOUT_CLASSIFICATION	2.975880836889009E-9	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999999177122052	WITHOUT_CLASSIFICATION	8.228779478639367E-8	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999707124688	WITHOUT_CLASSIFICATION	2.928753115192557E-8	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999999636097612	WITHOUT_CLASSIFICATION	3.6390238864787367E-8	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999997923432511	WITHOUT_CLASSIFICATION	2.0765674881927547E-7	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999999489586086	WITHOUT_CLASSIFICATION	5.104139150142053E-8	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999999745962883	WITHOUT_CLASSIFICATION	2.5403711665125853E-8	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999943595765	WITHOUT_CLASSIFICATION	5.6404234731569664E-9	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999903690013	WITHOUT_CLASSIFICATION	9.63099858643738E-9	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999999260400404	WITHOUT_CLASSIFICATION	7.395995962366875E-8	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999998915909066	WITHOUT_CLASSIFICATION	1.0840909343509578E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999998132655029	WITHOUT_CLASSIFICATION	1.86734497066425E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.99999999373369	WITHOUT_CLASSIFICATION	6.266310026790002E-9	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999999399902842	WITHOUT_CLASSIFICATION	6.000971575076715E-8	TEST
// end class	WITHOUT_CLASSIFICATION	0.99999993839015	WITHOUT_CLASSIFICATION	6.160984995362991E-8	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999999793729246	WITHOUT_CLASSIFICATION	2.062707529709731E-8	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999996223222267	WITHOUT_CLASSIFICATION	3.776777733816095E-7	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999996519440916	WITHOUT_CLASSIFICATION	3.4805590838759263E-7	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.99999982362044	WITHOUT_CLASSIFICATION	1.7637955982234057E-7	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999999125615331	WITHOUT_CLASSIFICATION	8.74384668823783E-8	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.999999997098739	WITHOUT_CLASSIFICATION	2.9012610748365945E-9	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999995911106145	WITHOUT_CLASSIFICATION	4.0888938535334096E-7	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999999768510721	WITHOUT_CLASSIFICATION	2.314892789448762E-8	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999999847804403	WITHOUT_CLASSIFICATION	1.5219559736914894E-8	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999999087821192	WITHOUT_CLASSIFICATION	9.121788081468502E-8	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.999999995910032	WITHOUT_CLASSIFICATION	4.08996810126708E-9	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999707124688	WITHOUT_CLASSIFICATION	2.928753115192557E-8	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999903690013	WITHOUT_CLASSIFICATION	9.63099858643738E-9	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999999260400404	WITHOUT_CLASSIFICATION	7.395995962366875E-8	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999998132655029	WITHOUT_CLASSIFICATION	1.86734497066425E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.99999999373369	WITHOUT_CLASSIFICATION	6.266310026790002E-9	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999999399902842	WITHOUT_CLASSIFICATION	6.000971575076715E-8	TEST
// end class	WITHOUT_CLASSIFICATION	0.99999993839015	WITHOUT_CLASSIFICATION	6.160984995362991E-8	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999999441239578	WITHOUT_CLASSIFICATION	5.5876042194264806E-8	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.999999230841133	WITHOUT_CLASSIFICATION	7.691588670262781E-7	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999716474881	WITHOUT_CLASSIFICATION	2.8352511981885822E-8	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999988060189	WITHOUT_CLASSIFICATION	1.1939812067922323E-9	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999989390204488	WITHOUT_CLASSIFICATION	1.06097955125272E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999989390204488	WITHOUT_CLASSIFICATION	1.06097955125272E-6	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999999840145832	WITHOUT_CLASSIFICATION	1.5985416776094114E-8	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999999925611789	WITHOUT_CLASSIFICATION	7.438821082276333E-9	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999998274341151	WITHOUT_CLASSIFICATION	1.725658848601736E-7	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999999630634984	WITHOUT_CLASSIFICATION	3.6936501680385453E-8	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999999422068465	WITHOUT_CLASSIFICATION	5.779315345859294E-8	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999999609193885	WITHOUT_CLASSIFICATION	3.908061139448061E-8	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999998449802528	WITHOUT_CLASSIFICATION	1.5501974704525348E-7	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999999952930629	WITHOUT_CLASSIFICATION	4.706937010425504E-9	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999999593461258	WITHOUT_CLASSIFICATION	4.0653874142765465E-8	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.999999960392079	WITHOUT_CLASSIFICATION	3.960792100465356E-8	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999999856580472	WITHOUT_CLASSIFICATION	1.4341952798336585E-8	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999999979074907	WITHOUT_CLASSIFICATION	2.0925093097609463E-9	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999995722532483	WITHOUT_CLASSIFICATION	4.277467516380653E-7	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999998968411533	WITHOUT_CLASSIFICATION	1.0315884663017438E-7	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.999999997414686	WITHOUT_CLASSIFICATION	2.585314061082154E-9	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999999930898015	WITHOUT_CLASSIFICATION	6.910198497468287E-9	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999999569009503	WITHOUT_CLASSIFICATION	4.3099049639303404E-8	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999999877310504	WITHOUT_CLASSIFICATION	1.2268949571511876E-8	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999998871500211	WITHOUT_CLASSIFICATION	1.1284997889640764E-7	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999999974809851	WITHOUT_CLASSIFICATION	2.5190148701215244E-9	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9999584164305666	WITHOUT_CLASSIFICATION	4.158356943338809E-5	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999999784173621	WITHOUT_CLASSIFICATION	2.1582637938387723E-8	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999909919192	WITHOUT_CLASSIFICATION	9.00808081300823E-9	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9982278023564728	WITHOUT_CLASSIFICATION	0.0017721976435272411	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999879451675	WITHOUT_CLASSIFICATION	1.2054832483050633E-8	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999952054881	WITHOUT_CLASSIFICATION	4.794511952894133E-9	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999993131907	WITHOUT_CLASSIFICATION	6.868093111316164E-10	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999991014401253	WITHOUT_CLASSIFICATION	8.985598747415394E-7	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999996004476186	WITHOUT_CLASSIFICATION	3.9955238143485825E-7	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999879451675	WITHOUT_CLASSIFICATION	1.2054832483050633E-8	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999952054881	WITHOUT_CLASSIFICATION	4.794511952894133E-9	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999998968411533	WITHOUT_CLASSIFICATION	1.0315884663017438E-7	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999998363117548	WITHOUT_CLASSIFICATION	1.6368824508229086E-7	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999999666485356	WITHOUT_CLASSIFICATION	3.3351464330635785E-8	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999998213694975	WITHOUT_CLASSIFICATION	1.7863050257124855E-7	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999999904543284	WITHOUT_CLASSIFICATION	9.545671498195414E-9	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999999364922854	WITHOUT_CLASSIFICATION	6.350771469617353E-8	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999989050145582	WITHOUT_CLASSIFICATION	1.0949854417254368E-6	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999994044129621	WITHOUT_CLASSIFICATION	5.955870378537435E-7	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999999398377798	WITHOUT_CLASSIFICATION	6.016222013915531E-8	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999951126659785	WITHOUT_CLASSIFICATION	4.887334021431558E-6	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999994745055624	WITHOUT_CLASSIFICATION	5.254944376607132E-7	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999999895714676	WITHOUT_CLASSIFICATION	1.0428532373959888E-8	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999999207724763	WITHOUT_CLASSIFICATION	7.922752366492179E-8	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999999104370905	WITHOUT_CLASSIFICATION	8.956290961367212E-8	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999885922034	WITHOUT_CLASSIFICATION	1.1407796643170854E-8	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999996056872	WITHOUT_CLASSIFICATION	3.943127937614615E-10	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999977090592582	WITHOUT_CLASSIFICATION	2.290940741786119E-6	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999999992139523	WITHOUT_CLASSIFICATION	7.860477286351413E-10	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999999327970989	WITHOUT_CLASSIFICATION	6.720290112796505E-8	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999862135526	WITHOUT_CLASSIFICATION	1.3786447397491814E-8	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999999281346607	WITHOUT_CLASSIFICATION	7.186533934800977E-8	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999999936653834	WITHOUT_CLASSIFICATION	6.3346166214845824E-9	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999931431427	WITHOUT_CLASSIFICATION	6.856857263133472E-9	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999999237249637	WITHOUT_CLASSIFICATION	7.627503622798342E-8	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999999741668	WITHOUT_CLASSIFICATION	2.5833237247780073E-11	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999976496224	WITHOUT_CLASSIFICATION	2.3503776263086634E-9	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999999677505879	WITHOUT_CLASSIFICATION	3.2249412104456975E-8	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9943973607696073	WITHOUT_CLASSIFICATION	0.005602639230392721	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999995675850679	WITHOUT_CLASSIFICATION	4.3241493206125784E-7	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999998823011418	WITHOUT_CLASSIFICATION	1.1769885814580006E-7	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999827762671	WITHOUT_CLASSIFICATION	1.722373290259328E-8	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999999958808269	WITHOUT_CLASSIFICATION	4.119173092741095E-9	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.999999794606438	WITHOUT_CLASSIFICATION	2.0539356206109404E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.999999794606438	WITHOUT_CLASSIFICATION	2.0539356206109404E-7	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999995722532483	WITHOUT_CLASSIFICATION	4.277467516380653E-7	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999903825594	WITHOUT_CLASSIFICATION	9.617440608494309E-9	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999999369788474	WITHOUT_CLASSIFICATION	6.302115260563533E-8	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999997228508076	WITHOUT_CLASSIFICATION	2.771491923353181E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999919979567	WITHOUT_CLASSIFICATION	8.00204335994413E-9	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999919979567	WITHOUT_CLASSIFICATION	8.00204335994413E-9	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.99999998749223	WITHOUT_CLASSIFICATION	1.2507770133960302E-8	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999999208232611	WITHOUT_CLASSIFICATION	7.917673897882088E-8	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999846662215	WITHOUT_CLASSIFICATION	1.533377842532629E-8	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999999399663715	WITHOUT_CLASSIFICATION	6.00336285504178E-8	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999989487044931	WITHOUT_CLASSIFICATION	1.0512955069109759E-6	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999929552982	WITHOUT_CLASSIFICATION	7.044701925367739E-9	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999393458933	WITHOUT_CLASSIFICATION	6.065410675413762E-8	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999998484880621	WITHOUT_CLASSIFICATION	1.5151193783517454E-7	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999582305654	WITHOUT_CLASSIFICATION	4.176943465759561E-8	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999998824335379	WITHOUT_CLASSIFICATION	1.1756646213854529E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999995623823149	WITHOUT_CLASSIFICATION	4.3761768514204694E-7	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999998260319669	WITHOUT_CLASSIFICATION	1.7396803302833177E-7	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999981503318405	WITHOUT_CLASSIFICATION	1.8496681595475664E-6	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999999934186071	WITHOUT_CLASSIFICATION	6.581392909778772E-9	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999998942568977	WITHOUT_CLASSIFICATION	1.0574310229352668E-6	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999984676464115	WITHOUT_CLASSIFICATION	1.5323535885372102E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999489064779	WITHOUT_CLASSIFICATION	5.109352203326459E-8	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999489064779	WITHOUT_CLASSIFICATION	5.109352203326459E-8	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999998983291875	WITHOUT_CLASSIFICATION	1.0167081246316313E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999998983291875	WITHOUT_CLASSIFICATION	1.0167081246316313E-7	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999826137524	WITHOUT_CLASSIFICATION	1.7386247660254576E-8	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999996106267115	WITHOUT_CLASSIFICATION	3.8937328840271733E-7	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999969070448	WITHOUT_CLASSIFICATION	3.092955195697342E-9	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999998404550401	WITHOUT_CLASSIFICATION	1.595449599793787E-7	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999999510199196	WITHOUT_CLASSIFICATION	4.898008033814033E-8	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999998651421902	WITHOUT_CLASSIFICATION	1.348578098515744E-7	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999999910001032	WITHOUT_CLASSIFICATION	8.999896821491075E-9	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999998260319669	WITHOUT_CLASSIFICATION	1.7396803302833177E-7	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999981503318405	WITHOUT_CLASSIFICATION	1.8496681595475664E-6	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999998942568977	WITHOUT_CLASSIFICATION	1.0574310229352668E-6	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999998327061933	WITHOUT_CLASSIFICATION	1.6729380671979491E-7	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999990381667735	WITHOUT_CLASSIFICATION	9.618332264911545E-7	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999878325727	WITHOUT_CLASSIFICATION	1.2167427218397965E-8	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999996552741637	WITHOUT_CLASSIFICATION	3.447258363036527E-7	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999999790284773	WITHOUT_CLASSIFICATION	2.097152281244362E-8	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.999998518738783	WITHOUT_CLASSIFICATION	1.481261217043147E-6	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999999195862341	WITHOUT_CLASSIFICATION	8.041376584538486E-8	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999999334287771	WITHOUT_CLASSIFICATION	6.657122284839089E-8	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999999037094355	WITHOUT_CLASSIFICATION	9.629056454106784E-8	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999881339623	WITHOUT_CLASSIFICATION	1.1866037586411332E-8	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999999829407361	WITHOUT_CLASSIFICATION	1.7059263884108862E-8	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999998506181795	WITHOUT_CLASSIFICATION	1.4938182049396938E-7	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.99999973845472	WITHOUT_CLASSIFICATION	2.6154527996497846E-7	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999981078011311	WITHOUT_CLASSIFICATION	1.8921988688815463E-6	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999997725655024	WITHOUT_CLASSIFICATION	2.2743449748492483E-7	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999835328247	WITHOUT_CLASSIFICATION	1.6467175279340743E-8	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999997528415067	WITHOUT_CLASSIFICATION	2.4715849338660917E-7	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999999175054821	WITHOUT_CLASSIFICATION	8.249451791863298E-8	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999991102034528	WITHOUT_CLASSIFICATION	8.897965472589922E-7	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999866714487	WITHOUT_CLASSIFICATION	1.3328551261840917E-8	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999593627942	WITHOUT_CLASSIFICATION	4.063720580284118E-8	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999996646540357	WITHOUT_CLASSIFICATION	3.353459643336346E-7	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999961817494533	WITHOUT_CLASSIFICATION	3.818250546679894E-6	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.999999864498611	WITHOUT_CLASSIFICATION	1.3550138899872156E-7	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999998573050246	WITHOUT_CLASSIFICATION	1.4269497540193845E-7	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999997907788954	WITHOUT_CLASSIFICATION	2.0922110462342705E-7	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999999127424924	WITHOUT_CLASSIFICATION	8.725750749872089E-8	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999981890133429	WITHOUT_CLASSIFICATION	1.8109866571550747E-6	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999999694907192	WITHOUT_CLASSIFICATION	3.050928078608578E-8	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999999754072849	WITHOUT_CLASSIFICATION	2.459271517568081E-8	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999999892266089	WITHOUT_CLASSIFICATION	1.0773391072989012E-8	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999993253480148	WITHOUT_CLASSIFICATION	6.746519851430946E-7	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999998961866632	WITHOUT_CLASSIFICATION	1.0381333685570002E-7	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999999949329607	WITHOUT_CLASSIFICATION	5.067039302761376E-9	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999999183402448	WITHOUT_CLASSIFICATION	8.165975517360342E-8	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999999645774084	WITHOUT_CLASSIFICATION	3.5422591638069215E-8	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999999642261878	WITHOUT_CLASSIFICATION	3.5773812168160835E-8	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999999788951156	WITHOUT_CLASSIFICATION	2.1104884339976333E-8	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.999998355474902	WITHOUT_CLASSIFICATION	1.6445250979433113E-6	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999713714748	WITHOUT_CLASSIFICATION	2.8628525188127598E-8	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999999462007468	WITHOUT_CLASSIFICATION	5.3799253229282596E-8	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999999369788474	WITHOUT_CLASSIFICATION	6.302115260563533E-8	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999999642261878	WITHOUT_CLASSIFICATION	3.5773812168160835E-8	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999853370560353	WITHOUT_CLASSIFICATION	1.4662943964625407E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999995469878	WITHOUT_CLASSIFICATION	4.5301229771602796E-10	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999998802600124	WITHOUT_CLASSIFICATION	1.1973998758094148E-7	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999993849931496	WITHOUT_CLASSIFICATION	6.150068505572639E-7	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999993849931496	WITHOUT_CLASSIFICATION	6.150068505572639E-7	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999998373716883	WITHOUT_CLASSIFICATION	1.6262831168151605E-7	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999999926808472	WITHOUT_CLASSIFICATION	7.319152778182468E-9	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999999775181821	WITHOUT_CLASSIFICATION	2.2481817761989857E-8	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999933320496	WITHOUT_CLASSIFICATION	6.66795039507616E-9	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999999212615467	WITHOUT_CLASSIFICATION	7.87384533104792E-8	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999999491918814	WITHOUT_CLASSIFICATION	5.080811869723009E-8	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.999999743548371	WITHOUT_CLASSIFICATION	2.5645162906260614E-7	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999998980852819	WITHOUT_CLASSIFICATION	1.0191471809334534E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999729186707	WITHOUT_CLASSIFICATION	2.708132940909495E-8	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999729186707	WITHOUT_CLASSIFICATION	2.708132940909495E-8	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999998241103832	WITHOUT_CLASSIFICATION	1.7588961684843352E-7	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999978091445827	WITHOUT_CLASSIFICATION	2.190855417358984E-6	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999999790445334	WITHOUT_CLASSIFICATION	2.0955466646599575E-8	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999999801824063	WITHOUT_CLASSIFICATION	1.9817593672825913E-8	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999999737008257	WITHOUT_CLASSIFICATION	2.6299174337162304E-8	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999999890988933	WITHOUT_CLASSIFICATION	1.0901106566161924E-8	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999999549876	WITHOUT_CLASSIFICATION	4.5012507364364065E-11	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.999999951665695	WITHOUT_CLASSIFICATION	4.8334305070533654E-8	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999998994030149	WITHOUT_CLASSIFICATION	1.005969850470495E-7	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.999795580522816	WITHOUT_CLASSIFICATION	2.0441947718385329E-4	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999712428937425	WITHOUT_CLASSIFICATION	2.8757106257403168E-5	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999991880293634	WITHOUT_CLASSIFICATION	8.119706364887729E-7	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999999858795267	WITHOUT_CLASSIFICATION	1.4120473428296043E-8	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999988139820973	WITHOUT_CLASSIFICATION	1.1860179027022584E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999988139820973	WITHOUT_CLASSIFICATION	1.1860179027022584E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999998610416735	WITHOUT_CLASSIFICATION	1.3895832662536682E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.99999993839015	WITHOUT_CLASSIFICATION	6.160984995362991E-8	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9998116313466964	WITHOUT_CLASSIFICATION	1.8836865330367083E-4	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999999986342706	WITHOUT_CLASSIFICATION	1.365729452358961E-9	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.999999999154426	WITHOUT_CLASSIFICATION	8.455739895373003E-10	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999999647192612	WITHOUT_CLASSIFICATION	3.52807389094914E-8	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.999999300914206	WITHOUT_CLASSIFICATION	6.990857940314598E-7	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999994631979182	WITHOUT_CLASSIFICATION	5.368020816628976E-7	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999963224561371	WITHOUT_CLASSIFICATION	3.677543862944282E-6	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999996177319428	WITHOUT_CLASSIFICATION	3.822680572034433E-7	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999999197713234	WITHOUT_CLASSIFICATION	8.022867665058194E-8	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999998812544648	WITHOUT_CLASSIFICATION	1.1874553525229016E-7	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999890958710258	WITHOUT_CLASSIFICATION	1.09041289741721E-5	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999935364653	WITHOUT_CLASSIFICATION	6.4635346662114485E-9	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999993567382438	WITHOUT_CLASSIFICATION	6.432617561645344E-7	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999813427404	WITHOUT_CLASSIFICATION	1.8657259622141897E-8	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999999657365017	WITHOUT_CLASSIFICATION	3.426349827221781E-8	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999999235958469	WITHOUT_CLASSIFICATION	7.64041530959459E-8	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999999951327373	WITHOUT_CLASSIFICATION	4.867262696973098E-9	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999999959317785	WITHOUT_CLASSIFICATION	4.0682214624053954E-9	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.999999212472457	WITHOUT_CLASSIFICATION	7.87527543042036E-7	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999998629845326	WITHOUT_CLASSIFICATION	1.3701546743065488E-7	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999995235242345	WITHOUT_CLASSIFICATION	4.764757655339235E-7	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999995560124405	WITHOUT_CLASSIFICATION	4.439875595084737E-7	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.999696466207406	WITHOUT_CLASSIFICATION	3.035337925940026E-4	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999998293906645	WITHOUT_CLASSIFICATION	1.7060933555089026E-7	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999998839701743	WITHOUT_CLASSIFICATION	1.160298257956509E-7	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999999568118644	WITHOUT_CLASSIFICATION	4.318813570238608E-8	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999999512345525	WITHOUT_CLASSIFICATION	4.8765447370593796E-8	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999990445984017	WITHOUT_CLASSIFICATION	9.55401598260908E-7	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.999999946090406	WITHOUT_CLASSIFICATION	5.3909594021187034E-8	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.999999990188003	WITHOUT_CLASSIFICATION	9.811997129963785E-9	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999999281910497	WITHOUT_CLASSIFICATION	7.18089503040422E-8	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999997867001615	WITHOUT_CLASSIFICATION	2.132998384609194E-7	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999997892799682	WITHOUT_CLASSIFICATION	2.1072003177976533E-7	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999944575346	WITHOUT_CLASSIFICATION	5.542465267740954E-9	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999988725010345	WITHOUT_CLASSIFICATION	1.1274989654876415E-6	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.999998224428214	WITHOUT_CLASSIFICATION	1.7755717860585235E-6	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999975953769727	WITHOUT_CLASSIFICATION	2.404623027389423E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999993203219797	WITHOUT_CLASSIFICATION	6.796780203145013E-7	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999999666125245	WITHOUT_CLASSIFICATION	3.338747552022978E-8	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.999999985740128	WITHOUT_CLASSIFICATION	1.4259871927496746E-8	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999869349288741	WITHOUT_CLASSIFICATION	1.3065071125931573E-5	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999999894062142	WITHOUT_CLASSIFICATION	1.0593785934363857E-8	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.999993398664967	WITHOUT_CLASSIFICATION	6.601335033025956E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999998423595229	WITHOUT_CLASSIFICATION	1.5764047702536748E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999165454604	WITHOUT_CLASSIFICATION	8.345453955199259E-8	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999951616892	WITHOUT_CLASSIFICATION	4.838310817127255E-9	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999966445908591	WITHOUT_CLASSIFICATION	3.355409140755728E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999879451675	WITHOUT_CLASSIFICATION	1.2054832483050633E-8	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999879451675	WITHOUT_CLASSIFICATION	1.2054832483050633E-8	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999999963159607	WITHOUT_CLASSIFICATION	3.6840393291286394E-9	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999993279216627	WITHOUT_CLASSIFICATION	6.720783373902234E-7	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999981835615247	WITHOUT_CLASSIFICATION	1.816438475261147E-6	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999999189804752	WITHOUT_CLASSIFICATION	8.10195248140565E-8	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999998637930946	WITHOUT_CLASSIFICATION	1.3620690540587704E-7	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999995439033832	WITHOUT_CLASSIFICATION	4.560966168423634E-7	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999998501639352	WITHOUT_CLASSIFICATION	1.4983606475419902E-7	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999486588264	WITHOUT_CLASSIFICATION	5.1341173723982084E-8	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.999999995710791	WITHOUT_CLASSIFICATION	4.289209064955475E-9	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999998102310635	WITHOUT_CLASSIFICATION	1.897689364745738E-7	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999999810805272	WITHOUT_CLASSIFICATION	1.8919472706166938E-8	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999999810805272	WITHOUT_CLASSIFICATION	1.8919472706166938E-8	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999999810805272	WITHOUT_CLASSIFICATION	1.8919472706166938E-8	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999973756507	WITHOUT_CLASSIFICATION	2.6243492893708343E-9	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999999948180408	WITHOUT_CLASSIFICATION	5.181959116024114E-9	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999999315009772	WITHOUT_CLASSIFICATION	6.849902286296881E-8	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999999985535227	WITHOUT_CLASSIFICATION	1.446477300461631E-8	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999999985535227	WITHOUT_CLASSIFICATION	1.446477300461631E-8	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999999192955972	WITHOUT_CLASSIFICATION	8.070440281274877E-8	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999993528866831	WITHOUT_CLASSIFICATION	6.471133168750709E-7	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999991160926223	WITHOUT_CLASSIFICATION	8.839073778434263E-7	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999997133753611	WITHOUT_CLASSIFICATION	2.8662463889069146E-7	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999999191022328	WITHOUT_CLASSIFICATION	8.089776717859525E-8	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999975135062856	WITHOUT_CLASSIFICATION	2.4864937143705635E-6	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999998273758367	WITHOUT_CLASSIFICATION	1.726241632254045E-7	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999999535256714	WITHOUT_CLASSIFICATION	4.647432864176683E-8	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999998842716761	WITHOUT_CLASSIFICATION	1.1572832390147352E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999999746174809	WITHOUT_CLASSIFICATION	2.5382519103236738E-8	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999999746174809	WITHOUT_CLASSIFICATION	2.5382519103236738E-8	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999975643005911	WITHOUT_CLASSIFICATION	2.4356994088727063E-6	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999916078834387	WITHOUT_CLASSIFICATION	8.392116561335E-6	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999992604890616	WITHOUT_CLASSIFICATION	7.395109383552046E-7	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999996732429595	WITHOUT_CLASSIFICATION	3.267570404730007E-7	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999999880985628	WITHOUT_CLASSIFICATION	1.1901437149675267E-8	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999998013875144	WITHOUT_CLASSIFICATION	1.9861248564749905E-7	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999997978449829	WITHOUT_CLASSIFICATION	2.0215501699295317E-7	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.999999827029788	WITHOUT_CLASSIFICATION	1.7297021203868137E-7	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999986933882696	WITHOUT_CLASSIFICATION	1.3066117303753424E-6	TEST
// POP	WITHOUT_CLASSIFICATION	0.9999966929016089	WITHOUT_CLASSIFICATION	3.3070983910613932E-6	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999999645661921	WITHOUT_CLASSIFICATION	3.5433807922740196E-8	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999975698567141	WITHOUT_CLASSIFICATION	2.4301432858994063E-6	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9999986043914821	WITHOUT_CLASSIFICATION	1.3956085178953614E-6	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999998918494819	WITHOUT_CLASSIFICATION	1.0815051807512908E-7	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999951073976019	WITHOUT_CLASSIFICATION	4.892602398059124E-6	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999999876908906	WITHOUT_CLASSIFICATION	1.2309109342765282E-8	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999998788591804	WITHOUT_CLASSIFICATION	1.2114081966651997E-7	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999621574153512	WITHOUT_CLASSIFICATION	3.7842584648722726E-5	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999999265466266	WITHOUT_CLASSIFICATION	7.345337333823523E-8	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999899034367	WITHOUT_CLASSIFICATION	1.0096563193499405E-8	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999991489891136	WITHOUT_CLASSIFICATION	8.510108865047246E-7	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999998553705572	WITHOUT_CLASSIFICATION	1.4462944273947115E-7	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999998882732087	WITHOUT_CLASSIFICATION	1.117267912552741E-7	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999853779694076	WITHOUT_CLASSIFICATION	1.4622030592346364E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999992922325972	WITHOUT_CLASSIFICATION	7.077674026854445E-7	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999999548770789	WITHOUT_CLASSIFICATION	4.512292101055501E-8	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.999999772259722	WITHOUT_CLASSIFICATION	2.27740277917314E-7	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999987319338448	WITHOUT_CLASSIFICATION	1.2680661551583472E-6	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999633741437	WITHOUT_CLASSIFICATION	3.662585630816387E-8	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999991569738302	WITHOUT_CLASSIFICATION	8.43026169824916E-7	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999914047071465	WITHOUT_CLASSIFICATION	8.5952928535433E-6	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999996225424967	WITHOUT_CLASSIFICATION	3.774575032325013E-7	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999994974065276	WITHOUT_CLASSIFICATION	5.025934723586708E-7	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999914047071465	WITHOUT_CLASSIFICATION	8.5952928535433E-6	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999998429414872	WITHOUT_CLASSIFICATION	1.570585128246213E-7	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999978855223045	WITHOUT_CLASSIFICATION	2.1144776954955146E-6	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999976597374307	WITHOUT_CLASSIFICATION	2.340262569297319E-6	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999993976320652	WITHOUT_CLASSIFICATION	6.023679348408488E-7	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999999178081943	WITHOUT_CLASSIFICATION	8.219180568800526E-8	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999999281424391	WITHOUT_CLASSIFICATION	7.185756093533968E-8	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999999353993809	WITHOUT_CLASSIFICATION	6.460061907271993E-8	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999994103656852	WITHOUT_CLASSIFICATION	5.896343148541036E-7	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999990454724283	WITHOUT_CLASSIFICATION	9.545275716711327E-7	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999968492850068	WITHOUT_CLASSIFICATION	3.150714993199314E-6	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999916692318433	WITHOUT_CLASSIFICATION	8.33076815664975E-6	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999983083752673	WITHOUT_CLASSIFICATION	1.6916247327598393E-6	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999977878174063	WITHOUT_CLASSIFICATION	2.2121825936090447E-6	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999997256594303	WITHOUT_CLASSIFICATION	2.743405697301447E-7	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999976119102579	WITHOUT_CLASSIFICATION	2.3880897421434424E-6	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999915250346264	WITHOUT_CLASSIFICATION	8.474965373624632E-6	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999866074918609	WITHOUT_CLASSIFICATION	1.3392508139231293E-5	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999993287630998	WITHOUT_CLASSIFICATION	6.712369001646265E-7	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999998155222604	WITHOUT_CLASSIFICATION	1.8447773963257596E-7	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999897710106159	WITHOUT_CLASSIFICATION	1.022898938400301E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999992353747998	WITHOUT_CLASSIFICATION	7.646252000573744E-7	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999995985071324	WITHOUT_CLASSIFICATION	4.0149286767747114E-7	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999972312927823	WITHOUT_CLASSIFICATION	2.768707217634323E-6	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.999998020098404	WITHOUT_CLASSIFICATION	1.979901596036657E-6	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999921705821938	WITHOUT_CLASSIFICATION	7.829417806193714E-6	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999996978742175	WITHOUT_CLASSIFICATION	3.0212578257193016E-7	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999936787130805	WITHOUT_CLASSIFICATION	6.321286919512665E-6	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999997549308742	WITHOUT_CLASSIFICATION	2.4506912573051717E-7	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999999581142166	WITHOUT_CLASSIFICATION	4.188578332375293E-8	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999999383582113	WITHOUT_CLASSIFICATION	6.164178864545926E-8	TEST
// hash	WITHOUT_CLASSIFICATION	0.9999982574326404	WITHOUT_CLASSIFICATION	1.7425673595636967E-6	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999646540442273	WITHOUT_CLASSIFICATION	3.534595577265991E-5	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999629556454885	WITHOUT_CLASSIFICATION	3.7044354511516564E-5	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999999029469386	WITHOUT_CLASSIFICATION	9.705306134782822E-8	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999998822930171	WITHOUT_CLASSIFICATION	1.1770698301096992E-7	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999996739779581	WITHOUT_CLASSIFICATION	3.2602204190482796E-7	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999998815810679	WITHOUT_CLASSIFICATION	1.1841893201379164E-7	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9999906873811102	WITHOUT_CLASSIFICATION	9.312618889836582E-6	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999999444782067	WITHOUT_CLASSIFICATION	5.5521793337776354E-8	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999997907697367	WITHOUT_CLASSIFICATION	2.0923026336434167E-7	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999994543156489	WITHOUT_CLASSIFICATION	5.456843510775609E-7	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999998360701509	WITHOUT_CLASSIFICATION	1.6392984911971304E-7	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999979580097915	WITHOUT_CLASSIFICATION	2.0419902084455264E-6	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999999584117271	WITHOUT_CLASSIFICATION	4.158827297713514E-8	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999998325320323	WITHOUT_CLASSIFICATION	1.6746796758005384E-7	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999996351556344	WITHOUT_CLASSIFICATION	3.648443656203458E-7	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999999433738012	WITHOUT_CLASSIFICATION	5.6626198893323494E-8	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999998724151534	WITHOUT_CLASSIFICATION	1.275848465099649E-7	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999991134890006	WITHOUT_CLASSIFICATION	8.865109993881388E-7	TEST
// space	WITHOUT_CLASSIFICATION	0.9999998915269306	WITHOUT_CLASSIFICATION	1.0847306947926115E-7	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999861800245592	WITHOUT_CLASSIFICATION	1.3819975440733748E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999993842389469	WITHOUT_CLASSIFICATION	6.157610532392022E-7	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999998009728146	WITHOUT_CLASSIFICATION	1.9902718547529582E-7	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999991134890006	WITHOUT_CLASSIFICATION	8.865109993881388E-7	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999324223366941	WITHOUT_CLASSIFICATION	6.757766330587556E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999324223366941	WITHOUT_CLASSIFICATION	6.757766330587556E-5	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999958158057499	WITHOUT_CLASSIFICATION	4.184194250085832E-6	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999999138205252	WITHOUT_CLASSIFICATION	8.61794747846046E-8	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999999790154819	WITHOUT_CLASSIFICATION	2.0984518112068624E-8	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999985276814123	WITHOUT_CLASSIFICATION	1.4723185877519027E-6	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999995411194339	WITHOUT_CLASSIFICATION	4.5888056609140394E-7	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999996624191605	WITHOUT_CLASSIFICATION	3.3758083954989025E-7	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999998938521305	WITHOUT_CLASSIFICATION	1.0614786950114803E-7	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9848365773906658	WITHOUT_CLASSIFICATION	0.015163422609334343	TEST
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999999705970207	WITHOUT_CLASSIFICATION	2.9402979325382084E-8	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999834622380038	WITHOUT_CLASSIFICATION	1.6537761996239315E-5	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999997431297556	WITHOUT_CLASSIFICATION	2.568702443305998E-7	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999962939027	WITHOUT_CLASSIFICATION	3.7060973275755007E-9	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999986934872961	WITHOUT_CLASSIFICATION	1.3065127040269518E-6	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999987314311598	WITHOUT_CLASSIFICATION	1.2685688401789838E-6	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.999997730038991	WITHOUT_CLASSIFICATION	2.2699610089989757E-6	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999967601485907	WITHOUT_CLASSIFICATION	3.2398514092665756E-6	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999998607669268	WITHOUT_CLASSIFICATION	1.3923307323115504E-7	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999858059060934	WITHOUT_CLASSIFICATION	1.4194093906690046E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999858059060934	WITHOUT_CLASSIFICATION	1.4194093906690046E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999858059060934	WITHOUT_CLASSIFICATION	1.4194093906690046E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999858059060934	WITHOUT_CLASSIFICATION	1.4194093906690046E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999858059060934	WITHOUT_CLASSIFICATION	1.4194093906690046E-5	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999995044251446	WITHOUT_CLASSIFICATION	4.955748554378895E-7	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999987261905317	WITHOUT_CLASSIFICATION	1.27380946842793E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999955594557611	WITHOUT_CLASSIFICATION	4.44054423882759E-6	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999752810751	WITHOUT_CLASSIFICATION	2.4718924946705538E-8	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999983931560263	WITHOUT_CLASSIFICATION	1.6068439736577581E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999999985040165	WITHOUT_CLASSIFICATION	1.4959834951991847E-8	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999994511921303	WITHOUT_CLASSIFICATION	5.488078696561414E-7	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999998825305529	WITHOUT_CLASSIFICATION	1.1746944709945391E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999999443568756	WITHOUT_CLASSIFICATION	5.564312446018625E-8	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999997512465852	WITHOUT_CLASSIFICATION	2.487534147418632E-7	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999997541391762	WITHOUT_CLASSIFICATION	2.458608238054262E-7	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999995458740946	WITHOUT_CLASSIFICATION	4.5412590538465796E-7	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999996314079708	WITHOUT_CLASSIFICATION	3.6859202916330964E-7	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999996673231148	WITHOUT_CLASSIFICATION	3.326768850907217E-7	TEST
// line 317	WITHOUT_CLASSIFICATION	0.999999687892171	WITHOUT_CLASSIFICATION	3.121078289227877E-7	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999995990836233	WITHOUT_CLASSIFICATION	4.009163766253886E-7	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999996156684405	WITHOUT_CLASSIFICATION	3.8433155945024607E-7	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999996231195059	WITHOUT_CLASSIFICATION	3.768804941571487E-7	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999996275611482	WITHOUT_CLASSIFICATION	3.724388518666477E-7	TEST
// line 351	WITHOUT_CLASSIFICATION	0.999999625201387	WITHOUT_CLASSIFICATION	3.7479861308825776E-7	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999996210027173	WITHOUT_CLASSIFICATION	3.789972826911985E-7	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999996631837442	WITHOUT_CLASSIFICATION	3.3681625579904243E-7	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999996258086006	WITHOUT_CLASSIFICATION	3.7419139943316294E-7	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999996394835794	WITHOUT_CLASSIFICATION	3.6051642057341154E-7	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999996184932172	WITHOUT_CLASSIFICATION	3.8150678288393627E-7	TEST
// line 407	WITHOUT_CLASSIFICATION	0.999999769544413	WITHOUT_CLASSIFICATION	2.3045558705532196E-7	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999997629994601	WITHOUT_CLASSIFICATION	2.3700053978490278E-7	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999997843734314	WITHOUT_CLASSIFICATION	2.1562656860429392E-7	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999997993175406	WITHOUT_CLASSIFICATION	2.0068245951186163E-7	TEST
// line 420	WITHOUT_CLASSIFICATION	0.999999702714643	WITHOUT_CLASSIFICATION	2.972853569721417E-7	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999997415978787	WITHOUT_CLASSIFICATION	2.584021212899212E-7	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999996976344192	WITHOUT_CLASSIFICATION	3.0236558085759945E-7	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999996973149056	WITHOUT_CLASSIFICATION	3.026850945262002E-7	TEST
// line 446	WITHOUT_CLASSIFICATION	0.99999976570128	WITHOUT_CLASSIFICATION	2.3429871994834096E-7	TEST
// line 452	WITHOUT_CLASSIFICATION	0.999999753311752	WITHOUT_CLASSIFICATION	2.466882479693463E-7	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999997807328008	WITHOUT_CLASSIFICATION	2.1926719916886606E-7	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999997625969592	WITHOUT_CLASSIFICATION	2.37403040874083E-7	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999997822817153	WITHOUT_CLASSIFICATION	2.1771828478611867E-7	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999997765093068	WITHOUT_CLASSIFICATION	2.2349069325414768E-7	TEST
// line 479	WITHOUT_CLASSIFICATION	0.999999753893563	WITHOUT_CLASSIFICATION	2.4610643697525543E-7	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999997473392102	WITHOUT_CLASSIFICATION	2.52660789900512E-7	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999997592592348	WITHOUT_CLASSIFICATION	2.4074076512569545E-7	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999997236518976	WITHOUT_CLASSIFICATION	2.763481024691043E-7	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999997320851077	WITHOUT_CLASSIFICATION	2.679148922015239E-7	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999997431677069	WITHOUT_CLASSIFICATION	2.5683229310302495E-7	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999997376121009	WITHOUT_CLASSIFICATION	2.623878991457117E-7	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999997663258571	WITHOUT_CLASSIFICATION	2.3367414288461801E-7	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999998001082309	WITHOUT_CLASSIFICATION	1.998917692636483E-7	TEST
// line 519	WITHOUT_CLASSIFICATION	0.999999768436505	WITHOUT_CLASSIFICATION	2.315634950641745E-7	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999997332587787	WITHOUT_CLASSIFICATION	2.667412213577449E-7	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999955594557611	WITHOUT_CLASSIFICATION	4.44054423882759E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999997167247956	WITHOUT_CLASSIFICATION	2.832752043168844E-7	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999997488225935	WITHOUT_CLASSIFICATION	2.5117740651904307E-7	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999996970630367	WITHOUT_CLASSIFICATION	3.029369633220286E-7	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999997655226434	WITHOUT_CLASSIFICATION	2.344773567126462E-7	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999997683124198	WITHOUT_CLASSIFICATION	2.3168758021589754E-7	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999997362541815	WITHOUT_CLASSIFICATION	2.637458185434246E-7	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999997115775241	WITHOUT_CLASSIFICATION	2.884224758490248E-7	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999997665172865	WITHOUT_CLASSIFICATION	2.334827134808956E-7	TEST
// line 569	WITHOUT_CLASSIFICATION	0.999999748854261	WITHOUT_CLASSIFICATION	2.511457390531113E-7	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999997695096441	WITHOUT_CLASSIFICATION	2.3049035597795635E-7	TEST
// line 578	WITHOUT_CLASSIFICATION	0.999999768230182	WITHOUT_CLASSIFICATION	2.3176981798813512E-7	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999997682257943	WITHOUT_CLASSIFICATION	2.317742056888582E-7	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999997485786971	WITHOUT_CLASSIFICATION	2.5142130291600506E-7	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999997398483744	WITHOUT_CLASSIFICATION	2.6015162559374064E-7	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999997684076	WITHOUT_CLASSIFICATION	2.3159239999706317E-7	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999998021531096	WITHOUT_CLASSIFICATION	1.978468903053448E-7	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999997340651531	WITHOUT_CLASSIFICATION	2.6593484685322423E-7	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999997853768471	WITHOUT_CLASSIFICATION	2.1462315293364826E-7	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999997033376087	WITHOUT_CLASSIFICATION	2.9666239132592325E-7	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999996942335551	WITHOUT_CLASSIFICATION	3.0576644495864906E-7	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999997009460471	WITHOUT_CLASSIFICATION	2.990539529504896E-7	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999997578344725	WITHOUT_CLASSIFICATION	2.4216552746772E-7	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999997646594608	WITHOUT_CLASSIFICATION	2.3534053909817484E-7	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999997464639786	WITHOUT_CLASSIFICATION	2.535360215009835E-7	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999997747557076	WITHOUT_CLASSIFICATION	2.2524429243181126E-7	TEST
// line 670	WITHOUT_CLASSIFICATION	0.999999780252254	WITHOUT_CLASSIFICATION	2.1974774608751626E-7	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999997633987567	WITHOUT_CLASSIFICATION	2.3660124336025439E-7	TEST
// line 696	WITHOUT_CLASSIFICATION	0.999999738194709	WITHOUT_CLASSIFICATION	2.618052910904251E-7	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999997760561211	WITHOUT_CLASSIFICATION	2.239438788343846E-7	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999997911848608	WITHOUT_CLASSIFICATION	2.088151391985542E-7	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999997152550546	WITHOUT_CLASSIFICATION	2.847449454407838E-7	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999997525165344	WITHOUT_CLASSIFICATION	2.4748346553797795E-7	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999996930395494	WITHOUT_CLASSIFICATION	3.0696045057932515E-7	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999996903081124	WITHOUT_CLASSIFICATION	3.0969188758537407E-7	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999997137337151	WITHOUT_CLASSIFICATION	2.862662848412328E-7	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999997031077981	WITHOUT_CLASSIFICATION	2.968922020076409E-7	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999997685948623	WITHOUT_CLASSIFICATION	2.3140513784268727E-7	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999997715021202	WITHOUT_CLASSIFICATION	2.2849787994578243E-7	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999997704490426	WITHOUT_CLASSIFICATION	2.295509573037524E-7	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999997640781807	WITHOUT_CLASSIFICATION	2.359218193665671E-7	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999997186298413	WITHOUT_CLASSIFICATION	2.8137015872091295E-7	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999997549957055	WITHOUT_CLASSIFICATION	2.4500429451801147E-7	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999997494685422	WITHOUT_CLASSIFICATION	2.5053145774655334E-7	TEST
// line 775	WITHOUT_CLASSIFICATION	0.999999769015321	WITHOUT_CLASSIFICATION	2.309846791138869E-7	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999997550493405	WITHOUT_CLASSIFICATION	2.44950659600029E-7	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999997603761183	WITHOUT_CLASSIFICATION	2.3962388172917283E-7	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999997425191318	WITHOUT_CLASSIFICATION	2.5748086821787315E-7	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999997458839995	WITHOUT_CLASSIFICATION	2.5411600048216895E-7	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999997473748126	WITHOUT_CLASSIFICATION	2.5262518746091416E-7	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999996044337197	WITHOUT_CLASSIFICATION	3.9556628023416643E-7	TEST
// line 806	WITHOUT_CLASSIFICATION	0.999999732009022	WITHOUT_CLASSIFICATION	2.679909779945567E-7	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999996986433893	WITHOUT_CLASSIFICATION	3.01356610614098E-7	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999997780554347	WITHOUT_CLASSIFICATION	2.2194456522814523E-7	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999997818678807	WITHOUT_CLASSIFICATION	2.181321192957014E-7	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999997220675734	WITHOUT_CLASSIFICATION	2.779324266245866E-7	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999997216379124	WITHOUT_CLASSIFICATION	2.783620876063886E-7	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999996737708794	WITHOUT_CLASSIFICATION	3.262291205415992E-7	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999996793884651	WITHOUT_CLASSIFICATION	3.2061153487166473E-7	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999996918478252	WITHOUT_CLASSIFICATION	3.081521748218213E-7	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999996519351817	WITHOUT_CLASSIFICATION	3.480648183702185E-7	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999997266271157	WITHOUT_CLASSIFICATION	2.7337288428296136E-7	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999997392615515	WITHOUT_CLASSIFICATION	2.607384486036204E-7	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999997389613272	WITHOUT_CLASSIFICATION	2.6103867274669963E-7	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999997480688817	WITHOUT_CLASSIFICATION	2.5193111825079607E-7	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999997473625507	WITHOUT_CLASSIFICATION	2.526374492947701E-7	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999997482308892	WITHOUT_CLASSIFICATION	2.517691108346152E-7	TEST
// line 871	WITHOUT_CLASSIFICATION	0.999999757049462	WITHOUT_CLASSIFICATION	2.429505379410721E-7	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999997690212407	WITHOUT_CLASSIFICATION	2.3097875940021716E-7	TEST
// line 879	WITHOUT_CLASSIFICATION	0.999999740375235	WITHOUT_CLASSIFICATION	2.596247649882738E-7	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999996789411087	WITHOUT_CLASSIFICATION	3.2105889127724007E-7	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999996616662047	WITHOUT_CLASSIFICATION	3.3833379524068927E-7	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999997343242507	WITHOUT_CLASSIFICATION	2.656757492092338E-7	TEST
// line 899	WITHOUT_CLASSIFICATION	0.999999720903686	WITHOUT_CLASSIFICATION	2.7909631395383387E-7	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999995730174202	WITHOUT_CLASSIFICATION	4.269825798748016E-7	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999997364689033	WITHOUT_CLASSIFICATION	2.635310968335341E-7	TEST
// line 915	WITHOUT_CLASSIFICATION	0.999999760880774	WITHOUT_CLASSIFICATION	2.391192259632451E-7	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999996628752178	WITHOUT_CLASSIFICATION	3.37124782212974E-7	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999996291144476	WITHOUT_CLASSIFICATION	3.7088555242689663E-7	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999997069911064	WITHOUT_CLASSIFICATION	2.930088935417202E-7	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999996364216417	WITHOUT_CLASSIFICATION	3.635783582421431E-7	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999996708340856	WITHOUT_CLASSIFICATION	3.2916591440943257E-7	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999997145670303	WITHOUT_CLASSIFICATION	2.854329696718031E-7	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999997224949299	WITHOUT_CLASSIFICATION	2.775050700974059E-7	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999997149451081	WITHOUT_CLASSIFICATION	2.850548919486765E-7	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999997465077227	WITHOUT_CLASSIFICATION	2.534922772984866E-7	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999997218224443	WITHOUT_CLASSIFICATION	2.781775556714588E-7	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999997326670405	WITHOUT_CLASSIFICATION	2.673329594929006E-7	TEST
// line 967	WITHOUT_CLASSIFICATION	0.999999752863887	WITHOUT_CLASSIFICATION	2.4713611304213397E-7	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999997288087384	WITHOUT_CLASSIFICATION	2.7119126159596873E-7	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999997382382724	WITHOUT_CLASSIFICATION	2.617617276351549E-7	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999997082720699	WITHOUT_CLASSIFICATION	2.917279301282028E-7	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999997155843684	WITHOUT_CLASSIFICATION	2.844156316905332E-7	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999997268258204	WITHOUT_CLASSIFICATION	2.731741796681546E-7	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999997316606101	WITHOUT_CLASSIFICATION	2.683393898964729E-7	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999997465816055	WITHOUT_CLASSIFICATION	2.5341839453624115E-7	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999997720535414	WITHOUT_CLASSIFICATION	2.2794645854267401E-7	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.999999738600856	WITHOUT_CLASSIFICATION	2.613991439283825E-7	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999997856375576	WITHOUT_CLASSIFICATION	2.1436244222572834E-7	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.999999703124222	WITHOUT_CLASSIFICATION	2.968757779871272E-7	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999996583346643	WITHOUT_CLASSIFICATION	3.416653356777782E-7	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999996821589526	WITHOUT_CLASSIFICATION	3.1784104747651393E-7	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999997847679116	WITHOUT_CLASSIFICATION	2.1523208841876E-7	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999997715658901	WITHOUT_CLASSIFICATION	2.2843410973428822E-7	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999997247837902	WITHOUT_CLASSIFICATION	2.752162098068473E-7	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.999999755339282	WITHOUT_CLASSIFICATION	2.446607180567444E-7	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999998311362688	WITHOUT_CLASSIFICATION	1.688637312432582E-7	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999997533707998	WITHOUT_CLASSIFICATION	2.466292001195025E-7	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999998086648951	WITHOUT_CLASSIFICATION	1.9133510493466437E-7	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.99999978495507	WITHOUT_CLASSIFICATION	2.1504492994118337E-7	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999997381535993	WITHOUT_CLASSIFICATION	2.6184640065355267E-7	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.999999726212075	WITHOUT_CLASSIFICATION	2.7378792509429876E-7	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999997748995079	WITHOUT_CLASSIFICATION	2.2510049204944852E-7	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.999999796579234	WITHOUT_CLASSIFICATION	2.0342076589620864E-7	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999997035194592	WITHOUT_CLASSIFICATION	2.964805407851525E-7	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999998166641747	WITHOUT_CLASSIFICATION	1.833358253233327E-7	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999997521224885	WITHOUT_CLASSIFICATION	2.4787751150503333E-7	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.999999732802527	WITHOUT_CLASSIFICATION	2.671974730212625E-7	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999997908708412	WITHOUT_CLASSIFICATION	2.0912915871872126E-7	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999997696841383	WITHOUT_CLASSIFICATION	2.3031586173910293E-7	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999997291881751	WITHOUT_CLASSIFICATION	2.7081182481485716E-7	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999997336553201	WITHOUT_CLASSIFICATION	2.663446798287338E-7	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999997386361176	WITHOUT_CLASSIFICATION	2.613638824731346E-7	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999997511650125	WITHOUT_CLASSIFICATION	2.488349874636321E-7	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999997824642577	WITHOUT_CLASSIFICATION	2.1753574225392056E-7	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999997609195267	WITHOUT_CLASSIFICATION	2.3908047337671384E-7	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999997923113271	WITHOUT_CLASSIFICATION	2.076886730380428E-7	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999997872946882	WITHOUT_CLASSIFICATION	2.1270531189765673E-7	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.999999794500649	WITHOUT_CLASSIFICATION	2.0549935095341283E-7	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.999999805835916	WITHOUT_CLASSIFICATION	1.9416408405133158E-7	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.999999797216661	WITHOUT_CLASSIFICATION	2.0278333896048155E-7	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999998077622376	WITHOUT_CLASSIFICATION	1.9223776228940666E-7	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999997776324092	WITHOUT_CLASSIFICATION	2.223675908063571E-7	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999997196176738	WITHOUT_CLASSIFICATION	2.803823262138665E-7	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999997224584151	WITHOUT_CLASSIFICATION	2.775415849633158E-7	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999997531867639	WITHOUT_CLASSIFICATION	2.4681323606573056E-7	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999997763027983	WITHOUT_CLASSIFICATION	2.2369720167877838E-7	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999997603191444	WITHOUT_CLASSIFICATION	2.39680855553338E-7	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999997239586723	WITHOUT_CLASSIFICATION	2.7604132768559225E-7	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999996866853389	WITHOUT_CLASSIFICATION	3.1331466117500083E-7	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999996996410612	WITHOUT_CLASSIFICATION	3.00358938809556E-7	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999997748291455	WITHOUT_CLASSIFICATION	2.2517085455724505E-7	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999997294867242	WITHOUT_CLASSIFICATION	2.705132757499887E-7	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999997088351835	WITHOUT_CLASSIFICATION	2.9116481648542433E-7	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999997464669641	WITHOUT_CLASSIFICATION	2.535330358630598E-7	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999997445706862	WITHOUT_CLASSIFICATION	2.554293138322484E-7	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999996914631843	WITHOUT_CLASSIFICATION	3.0853681562129175E-7	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999997013416335	WITHOUT_CLASSIFICATION	2.986583664280487E-7	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999997219324531	WITHOUT_CLASSIFICATION	2.780675468487068E-7	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999997078859191	WITHOUT_CLASSIFICATION	2.921140809353991E-7	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999996848561633	WITHOUT_CLASSIFICATION	3.1514383662308267E-7	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999996787470125	WITHOUT_CLASSIFICATION	3.212529876198994E-7	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.999999719011905	WITHOUT_CLASSIFICATION	2.809880950371146E-7	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999997270924122	WITHOUT_CLASSIFICATION	2.729075876989683E-7	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999996624329432	WITHOUT_CLASSIFICATION	3.3756705678168397E-7	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999996859645127	WITHOUT_CLASSIFICATION	3.140354873007901E-7	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.999999726609072	WITHOUT_CLASSIFICATION	2.733909280373371E-7	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999997187962608	WITHOUT_CLASSIFICATION	2.8120373922720707E-7	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999997158270092	WITHOUT_CLASSIFICATION	2.841729907990577E-7	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999997214246419	WITHOUT_CLASSIFICATION	2.785753581007083E-7	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999997400566206	WITHOUT_CLASSIFICATION	2.5994337941847315E-7	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999996753784932	WITHOUT_CLASSIFICATION	3.246215068065286E-7	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.999999738421365	WITHOUT_CLASSIFICATION	2.615786349701834E-7	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999996809809921	WITHOUT_CLASSIFICATION	3.1901900779207846E-7	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999997846676898	WITHOUT_CLASSIFICATION	2.1533231028047624E-7	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999996815935969	WITHOUT_CLASSIFICATION	3.184064031245819E-7	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999997261920035	WITHOUT_CLASSIFICATION	2.7380799657512317E-7	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999997728698755	WITHOUT_CLASSIFICATION	2.2713012458189297E-7	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999997258902251	WITHOUT_CLASSIFICATION	2.7410977486256254E-7	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999997355807134	WITHOUT_CLASSIFICATION	2.6441928663731403E-7	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999998002091478	WITHOUT_CLASSIFICATION	1.9979085211699241E-7	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999997753877428	WITHOUT_CLASSIFICATION	2.2461225733358577E-7	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999997936861286	WITHOUT_CLASSIFICATION	2.0631387146736693E-7	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.999999797706498	WITHOUT_CLASSIFICATION	2.0229350188474557E-7	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.999999792471137	WITHOUT_CLASSIFICATION	2.0752886306738738E-7	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.999999767070485	WITHOUT_CLASSIFICATION	2.3292951504728765E-7	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999997800668937	WITHOUT_CLASSIFICATION	2.199331063975502E-7	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999997719187684	WITHOUT_CLASSIFICATION	2.2808123146911356E-7	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999997741490019	WITHOUT_CLASSIFICATION	2.2585099823371984E-7	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999997492471097	WITHOUT_CLASSIFICATION	2.507528902529106E-7	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999997982922313	WITHOUT_CLASSIFICATION	2.017077687046476E-7	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999997288892282	WITHOUT_CLASSIFICATION	2.7111077188598555E-7	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999997906982152	WITHOUT_CLASSIFICATION	2.093017847568005E-7	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999997310661306	WITHOUT_CLASSIFICATION	2.689338694017251E-7	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999997732294175	WITHOUT_CLASSIFICATION	2.267705824688624E-7	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999997296097272	WITHOUT_CLASSIFICATION	2.703902727947537E-7	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999997943064354	WITHOUT_CLASSIFICATION	2.0569356458985828E-7	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999997926176325	WITHOUT_CLASSIFICATION	2.0738236750075056E-7	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999997881200577	WITHOUT_CLASSIFICATION	2.1187994215763388E-7	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999997677097582	WITHOUT_CLASSIFICATION	2.3229024193389347E-7	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999997980018677	WITHOUT_CLASSIFICATION	2.0199813223271463E-7	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999997965376078	WITHOUT_CLASSIFICATION	2.0346239203867732E-7	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999997941976309	WITHOUT_CLASSIFICATION	2.058023691139315E-7	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999997659041576	WITHOUT_CLASSIFICATION	2.340958423520489E-7	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999997615732761	WITHOUT_CLASSIFICATION	2.384267240022615E-7	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999997691246696	WITHOUT_CLASSIFICATION	2.308753303368424E-7	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999997450787164	WITHOUT_CLASSIFICATION	2.5492128367104624E-7	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.999999713850125	WITHOUT_CLASSIFICATION	2.861498749816566E-7	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999997636709133	WITHOUT_CLASSIFICATION	2.363290867739051E-7	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999997198971563	WITHOUT_CLASSIFICATION	2.8010284367242596E-7	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999997157187265	WITHOUT_CLASSIFICATION	2.842812735008686E-7	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999997274784344	WITHOUT_CLASSIFICATION	2.725215655878789E-7	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999997529159467	WITHOUT_CLASSIFICATION	2.470840532926317E-7	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999997851729181	WITHOUT_CLASSIFICATION	2.148270818769663E-7	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999997704409521	WITHOUT_CLASSIFICATION	2.2955904795970724E-7	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999997903318099	WITHOUT_CLASSIFICATION	2.0966819019175094E-7	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999997871646794	WITHOUT_CLASSIFICATION	2.1283532057293423E-7	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999997496311424	WITHOUT_CLASSIFICATION	2.503688575513693E-7	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999997892728776	WITHOUT_CLASSIFICATION	2.1072712251929676E-7	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.999999799221441	WITHOUT_CLASSIFICATION	2.0077855902248223E-7	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999997954489385	WITHOUT_CLASSIFICATION	2.0455106157568586E-7	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999997672702359	WITHOUT_CLASSIFICATION	2.3272976414385974E-7	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999997754086999	WITHOUT_CLASSIFICATION	2.2459130010763436E-7	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999997571711596	WITHOUT_CLASSIFICATION	2.4282884030048413E-7	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999997788796504	WITHOUT_CLASSIFICATION	2.2112034961431168E-7	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999997412544456	WITHOUT_CLASSIFICATION	2.587455544079579E-7	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.999999779570945	WITHOUT_CLASSIFICATION	2.2042905502196098E-7	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999997987531246	WITHOUT_CLASSIFICATION	2.0124687541153644E-7	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999997778195617	WITHOUT_CLASSIFICATION	2.2218043841369576E-7	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999997964068683	WITHOUT_CLASSIFICATION	2.035931316682652E-7	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999997827020819	WITHOUT_CLASSIFICATION	2.1729791806077563E-7	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999997778016534	WITHOUT_CLASSIFICATION	2.2219834663550137E-7	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999997951370665	WITHOUT_CLASSIFICATION	2.048629333631614E-7	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999997883087952	WITHOUT_CLASSIFICATION	2.1169120473791907E-7	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999997408822247	WITHOUT_CLASSIFICATION	2.591177753655639E-7	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.999999784285851	WITHOUT_CLASSIFICATION	2.1571414890682786E-7	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.999999779214703	WITHOUT_CLASSIFICATION	2.2078529691721973E-7	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.99999977275814	WITHOUT_CLASSIFICATION	2.272418600266551E-7	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999995887216732	WITHOUT_CLASSIFICATION	4.112783268814353E-7	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999724677567652	WITHOUT_CLASSIFICATION	2.7532243234806184E-5	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999842633610111	WITHOUT_CLASSIFICATION	1.5736638988922965E-5	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999898219755694	WITHOUT_CLASSIFICATION	1.017802443056864E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999988246450076	WITHOUT_CLASSIFICATION	1.175354992387806E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999992802273131	WITHOUT_CLASSIFICATION	7.197726869462137E-7	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999960655997855	WITHOUT_CLASSIFICATION	3.934400214462914E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.999996166178473	WITHOUT_CLASSIFICATION	3.833821527062385E-6	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999857389742346	WITHOUT_CLASSIFICATION	1.4261025765423723E-5	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999963114077736	WITHOUT_CLASSIFICATION	3.6885922264630302E-6	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999998800473913	WITHOUT_CLASSIFICATION	1.1995260873058513E-7	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999996877568053	WITHOUT_CLASSIFICATION	3.122431946878037E-7	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999990337444393	WITHOUT_CLASSIFICATION	9.662555606521719E-7	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999835902682109	WITHOUT_CLASSIFICATION	1.6409731788993777E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999984903061053	WITHOUT_CLASSIFICATION	1.5096938946493092E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999696785019753	WITHOUT_CLASSIFICATION	3.0321498024708038E-5	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999843727295064	WITHOUT_CLASSIFICATION	1.5627270493694698E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999952786616396	WITHOUT_CLASSIFICATION	4.721338360319519E-6	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999589780795	WITHOUT_CLASSIFICATION	4.1021920473934425E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999861847275	WITHOUT_CLASSIFICATION	1.3815272464645377E-8	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999995219659953	WITHOUT_CLASSIFICATION	4.780340047725918E-7	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999997454178234	WITHOUT_CLASSIFICATION	2.545821765635385E-7	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999999580383327	WITHOUT_CLASSIFICATION	4.196166720637887E-8	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999978211582	WITHOUT_CLASSIFICATION	2.1788417902719107E-8	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999978211582	WITHOUT_CLASSIFICATION	2.1788417902719107E-8	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999957859741686	WITHOUT_CLASSIFICATION	4.214025831333505E-6	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.999992389869523	WITHOUT_CLASSIFICATION	7.610130476896158E-6	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999968412898629	WITHOUT_CLASSIFICATION	3.1587101370752307E-6	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999998583749505	WITHOUT_CLASSIFICATION	1.4162504952169333E-7	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999998511841411	WITHOUT_CLASSIFICATION	1.4881585874360918E-7	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.999999925358508	WITHOUT_CLASSIFICATION	7.46414920391752E-8	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.999999993620587	WITHOUT_CLASSIFICATION	6.3794130200458856E-9	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999993119359114	WITHOUT_CLASSIFICATION	6.880640886973839E-7	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999999428697158	WITHOUT_CLASSIFICATION	5.713028409938977E-8	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999997174165922	WITHOUT_CLASSIFICATION	2.82583407802187E-7	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999979509107941	WITHOUT_CLASSIFICATION	2.0490892057486493E-6	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999591094533139	WITHOUT_CLASSIFICATION	4.089054668609958E-5	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999999977479022	WITHOUT_CLASSIFICATION	2.2520978220519017E-9	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999986423689714	WITHOUT_CLASSIFICATION	1.3576310286242663E-6	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999982691298277	WITHOUT_CLASSIFICATION	1.7308701723316253E-6	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999987924448959	WITHOUT_CLASSIFICATION	1.2075551041293655E-6	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999998984610785	WITHOUT_CLASSIFICATION	1.015389214337759E-7	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999993471518775	WITHOUT_CLASSIFICATION	6.528481225132703E-7	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999999877267067	WITHOUT_CLASSIFICATION	1.2273293300963716E-8	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999994637181592	WITHOUT_CLASSIFICATION	5.362818408439847E-7	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999982144611	WITHOUT_CLASSIFICATION	1.7855388988908843E-9	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999988748004458	WITHOUT_CLASSIFICATION	1.1251995542509355E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9930601257304696	WITHOUT_CLASSIFICATION	0.006939874269530387	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999998677561729	WITHOUT_CLASSIFICATION	1.322438271085806E-7	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9930601257304696	WITHOUT_CLASSIFICATION	0.006939874269530387	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999997515123228	WITHOUT_CLASSIFICATION	2.484876771918509E-7	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999997563018577	WITHOUT_CLASSIFICATION	2.4369814231841443E-7	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999990284166058	WITHOUT_CLASSIFICATION	9.715833941157613E-7	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999985164119688	WITHOUT_CLASSIFICATION	1.483588031212654E-6	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999999247990329	WITHOUT_CLASSIFICATION	7.520096710606716E-8	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999990465779478	WITHOUT_CLASSIFICATION	9.534220521028771E-7	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999990465779478	WITHOUT_CLASSIFICATION	9.534220521028771E-7	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999990465779478	WITHOUT_CLASSIFICATION	9.534220521028771E-7	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999986498776471	WITHOUT_CLASSIFICATION	1.3501223529503803E-6	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999949820292562	WITHOUT_CLASSIFICATION	5.017970743782886E-6	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999999668726907	WITHOUT_CLASSIFICATION	3.312730936511613E-8	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999854213004559	WITHOUT_CLASSIFICATION	1.4578699544128169E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999854213004559	WITHOUT_CLASSIFICATION	1.4578699544128169E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999854213004559	WITHOUT_CLASSIFICATION	1.4578699544128169E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999854213004559	WITHOUT_CLASSIFICATION	1.4578699544128169E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999854213004559	WITHOUT_CLASSIFICATION	1.4578699544128169E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999854213004559	WITHOUT_CLASSIFICATION	1.4578699544128169E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999944002750143	WITHOUT_CLASSIFICATION	5.599724985746848E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999944002750143	WITHOUT_CLASSIFICATION	5.599724985746848E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999944002750143	WITHOUT_CLASSIFICATION	5.599724985746848E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999944002750143	WITHOUT_CLASSIFICATION	5.599724985746848E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999944002750143	WITHOUT_CLASSIFICATION	5.599724985746848E-6	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.99998249767325	WITHOUT_CLASSIFICATION	1.750232675000257E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.99998249767325	WITHOUT_CLASSIFICATION	1.750232675000257E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.99998249767325	WITHOUT_CLASSIFICATION	1.750232675000257E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.99998249767325	WITHOUT_CLASSIFICATION	1.750232675000257E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.99998249767325	WITHOUT_CLASSIFICATION	1.750232675000257E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999885867396988	WITHOUT_CLASSIFICATION	1.1413260301240634E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999885867396988	WITHOUT_CLASSIFICATION	1.1413260301240634E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999885867396988	WITHOUT_CLASSIFICATION	1.1413260301240634E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999885867396988	WITHOUT_CLASSIFICATION	1.1413260301240634E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999885867396988	WITHOUT_CLASSIFICATION	1.1413260301240634E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999885867396988	WITHOUT_CLASSIFICATION	1.1413260301240634E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999951257278539	WITHOUT_CLASSIFICATION	4.8742721462008896E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999951257278539	WITHOUT_CLASSIFICATION	4.8742721462008896E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999951257278539	WITHOUT_CLASSIFICATION	4.8742721462008896E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999951257278539	WITHOUT_CLASSIFICATION	4.8742721462008896E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999951257278539	WITHOUT_CLASSIFICATION	4.8742721462008896E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999948703353505	WITHOUT_CLASSIFICATION	5.129664649452488E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999948703353505	WITHOUT_CLASSIFICATION	5.129664649452488E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999948703353505	WITHOUT_CLASSIFICATION	5.129664649452488E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999948703353505	WITHOUT_CLASSIFICATION	5.129664649452488E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999948703353505	WITHOUT_CLASSIFICATION	5.129664649452488E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999955594557611	WITHOUT_CLASSIFICATION	4.44054423882759E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999955594557611	WITHOUT_CLASSIFICATION	4.44054423882759E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999955594557611	WITHOUT_CLASSIFICATION	4.44054423882759E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999955594557611	WITHOUT_CLASSIFICATION	4.44054423882759E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999955594557611	WITHOUT_CLASSIFICATION	4.44054423882759E-6	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999752810751	WITHOUT_CLASSIFICATION	2.4718924946705538E-8	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999999985040165	WITHOUT_CLASSIFICATION	1.4959834951991847E-8	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999994511921303	WITHOUT_CLASSIFICATION	5.488078696561414E-7	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999998825305529	WITHOUT_CLASSIFICATION	1.1746944709945391E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999999443568756	WITHOUT_CLASSIFICATION	5.564312446018625E-8	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999995857903908	WITHOUT_CLASSIFICATION	4.1420960916513316E-7	TEST
// line 351	WITHOUT_CLASSIFICATION	0.999999625201387	WITHOUT_CLASSIFICATION	3.7479861308825776E-7	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999996184932172	WITHOUT_CLASSIFICATION	3.8150678288393627E-7	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999997993175406	WITHOUT_CLASSIFICATION	2.0068245951186163E-7	TEST
// line 420	WITHOUT_CLASSIFICATION	0.999999702714643	WITHOUT_CLASSIFICATION	2.972853569721417E-7	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999996729220991	WITHOUT_CLASSIFICATION	3.270779009072206E-7	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999997415978787	WITHOUT_CLASSIFICATION	2.584021212899212E-7	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999997220352203	WITHOUT_CLASSIFICATION	2.779647796851184E-7	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999996642412082	WITHOUT_CLASSIFICATION	3.3575879173116434E-7	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999996977277269	WITHOUT_CLASSIFICATION	3.0227227302872295E-7	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999995851436063	WITHOUT_CLASSIFICATION	4.148563937307175E-7	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999996141507485	WITHOUT_CLASSIFICATION	3.8584925151466046E-7	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999996154206648	WITHOUT_CLASSIFICATION	3.8457933520305295E-7	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999996202879038	WITHOUT_CLASSIFICATION	3.79712096244329E-7	TEST
// line 336	WITHOUT_CLASSIFICATION	0.999999637028926	WITHOUT_CLASSIFICATION	3.6297107401979945E-7	TEST
// line 342	WITHOUT_CLASSIFICATION	0.999999605123227	WITHOUT_CLASSIFICATION	3.94876773019264E-7	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999996419310556	WITHOUT_CLASSIFICATION	3.580689443675944E-7	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999996174268475	WITHOUT_CLASSIFICATION	3.825731524688858E-7	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999996299107468	WITHOUT_CLASSIFICATION	3.700892532236313E-7	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999996258264879	WITHOUT_CLASSIFICATION	3.741735120893101E-7	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999996434744154	WITHOUT_CLASSIFICATION	3.5652558464424193E-7	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999996151344022	WITHOUT_CLASSIFICATION	3.848655978385947E-7	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999995660613421	WITHOUT_CLASSIFICATION	4.3393865790470533E-7	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999996228744283	WITHOUT_CLASSIFICATION	3.7712557170931806E-7	TEST
// line 429	WITHOUT_CLASSIFICATION	0.999999679497347	WITHOUT_CLASSIFICATION	3.205026529617634E-7	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999996775023245	WITHOUT_CLASSIFICATION	3.224976755259543E-7	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999997080219534	WITHOUT_CLASSIFICATION	2.919780466572484E-7	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999997638206276	WITHOUT_CLASSIFICATION	2.361793725441214E-7	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999997493452865	WITHOUT_CLASSIFICATION	2.506547136057474E-7	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999997619762883	WITHOUT_CLASSIFICATION	2.3802371176406414E-7	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999997471778009	WITHOUT_CLASSIFICATION	2.528221990043662E-7	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999997634303017	WITHOUT_CLASSIFICATION	2.3656969832965918E-7	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999997455008309	WITHOUT_CLASSIFICATION	2.5449916907542126E-7	TEST
// line 478	WITHOUT_CLASSIFICATION	0.999999768510508	WITHOUT_CLASSIFICATION	2.3148949199842185E-7	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999997462981175	WITHOUT_CLASSIFICATION	2.537018824468091E-7	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999997481295599	WITHOUT_CLASSIFICATION	2.518704400814093E-7	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999997365488906	WITHOUT_CLASSIFICATION	2.634511093890396E-7	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999997619041444	WITHOUT_CLASSIFICATION	2.3809585563326377E-7	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999996213344072	WITHOUT_CLASSIFICATION	3.786655928579976E-7	TEST
// line 506	WITHOUT_CLASSIFICATION	0.999999743470433	WITHOUT_CLASSIFICATION	2.5652956707293716E-7	TEST
// line 509	WITHOUT_CLASSIFICATION	0.99999971152944	WITHOUT_CLASSIFICATION	2.8847056006043327E-7	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999997714389315	WITHOUT_CLASSIFICATION	2.285610684337875E-7	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999997358588689	WITHOUT_CLASSIFICATION	2.6414113102464443E-7	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999997452089215	WITHOUT_CLASSIFICATION	2.5479107844270004E-7	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999997488225935	WITHOUT_CLASSIFICATION	2.5117740651904307E-7	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999996970630367	WITHOUT_CLASSIFICATION	3.029369633220286E-7	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999997655226434	WITHOUT_CLASSIFICATION	2.344773567126462E-7	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999997665172865	WITHOUT_CLASSIFICATION	2.334827134808956E-7	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999998021531096	WITHOUT_CLASSIFICATION	1.978468903053448E-7	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999997633987567	WITHOUT_CLASSIFICATION	2.3660124336025439E-7	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999997351978485	WITHOUT_CLASSIFICATION	2.648021514984769E-7	TEST
// line 696	WITHOUT_CLASSIFICATION	0.999999738194709	WITHOUT_CLASSIFICATION	2.618052910904251E-7	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999997494685422	WITHOUT_CLASSIFICATION	2.5053145774655334E-7	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999997550493405	WITHOUT_CLASSIFICATION	2.44950659600029E-7	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999997685885623	WITHOUT_CLASSIFICATION	2.314114378065807E-7	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999997603761183	WITHOUT_CLASSIFICATION	2.3962388172917283E-7	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999997425191318	WITHOUT_CLASSIFICATION	2.5748086821787315E-7	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999997008562873	WITHOUT_CLASSIFICATION	2.991437126807059E-7	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999997390582257	WITHOUT_CLASSIFICATION	2.609417742766686E-7	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999997426425596	WITHOUT_CLASSIFICATION	2.573574403135017E-7	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999997477451956	WITHOUT_CLASSIFICATION	2.5225480440034076E-7	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999997641952483	WITHOUT_CLASSIFICATION	2.3580475162923278E-7	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999997697681221	WITHOUT_CLASSIFICATION	2.3023187795926902E-7	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999997724453381	WITHOUT_CLASSIFICATION	2.2755466182397953E-7	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999997539671895	WITHOUT_CLASSIFICATION	2.460328104578368E-7	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999997598608955	WITHOUT_CLASSIFICATION	2.401391044914513E-7	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999997318399543	WITHOUT_CLASSIFICATION	2.681600457372724E-7	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999997225842722	WITHOUT_CLASSIFICATION	2.774157278063667E-7	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999997355778101	WITHOUT_CLASSIFICATION	2.644221899650247E-7	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999997310525188	WITHOUT_CLASSIFICATION	2.6894748112510455E-7	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999996788404669	WITHOUT_CLASSIFICATION	3.2115953314755986E-7	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999997552405404	WITHOUT_CLASSIFICATION	2.447594596287068E-7	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999996942934933	WITHOUT_CLASSIFICATION	3.0570650666369646E-7	TEST
// line 633	WITHOUT_CLASSIFICATION	0.999999699558173	WITHOUT_CLASSIFICATION	3.0044182689545027E-7	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999996738319783	WITHOUT_CLASSIFICATION	3.2616802178264704E-7	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999997521771784	WITHOUT_CLASSIFICATION	2.478228216657816E-7	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999997833528312	WITHOUT_CLASSIFICATION	2.1664716867939406E-7	TEST
// line 661	WITHOUT_CLASSIFICATION	0.999999752801054	WITHOUT_CLASSIFICATION	2.47198945982432E-7	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999997550143929	WITHOUT_CLASSIFICATION	2.44985607143881E-7	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999997735024082	WITHOUT_CLASSIFICATION	2.2649759169248024E-7	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999997458430624	WITHOUT_CLASSIFICATION	2.5415693765870984E-7	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999997510242163	WITHOUT_CLASSIFICATION	2.489757835809022E-7	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999997369108626	WITHOUT_CLASSIFICATION	2.6308913732094544E-7	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999997668892656	WITHOUT_CLASSIFICATION	2.3311073439360154E-7	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999997262240901	WITHOUT_CLASSIFICATION	2.737759099371319E-7	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999997414319787	WITHOUT_CLASSIFICATION	2.5856802131418817E-7	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999997048988086	WITHOUT_CLASSIFICATION	2.9510119143378264E-7	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999997174556202	WITHOUT_CLASSIFICATION	2.825443798480899E-7	TEST
// line 779	WITHOUT_CLASSIFICATION	0.999999743768809	WITHOUT_CLASSIFICATION	2.562311910576403E-7	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999997316959954	WITHOUT_CLASSIFICATION	2.6830400454983567E-7	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999996910659573	WITHOUT_CLASSIFICATION	3.0893404262481046E-7	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999997494959167	WITHOUT_CLASSIFICATION	2.5050408328770804E-7	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999997878828147	WITHOUT_CLASSIFICATION	2.1211718539551047E-7	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999997266271157	WITHOUT_CLASSIFICATION	2.7337288428296136E-7	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999997504492991	WITHOUT_CLASSIFICATION	2.4955070091787275E-7	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999997392615515	WITHOUT_CLASSIFICATION	2.607384486036204E-7	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999996616662047	WITHOUT_CLASSIFICATION	3.3833379524068927E-7	TEST
// line 899	WITHOUT_CLASSIFICATION	0.999999720903686	WITHOUT_CLASSIFICATION	2.7909631395383387E-7	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999996364216417	WITHOUT_CLASSIFICATION	3.635783582421431E-7	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999997224949299	WITHOUT_CLASSIFICATION	2.775050700974059E-7	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999997218224443	WITHOUT_CLASSIFICATION	2.781775556714588E-7	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999997082720699	WITHOUT_CLASSIFICATION	2.917279301282028E-7	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999997720535414	WITHOUT_CLASSIFICATION	2.2794645854267401E-7	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.999999671825682	WITHOUT_CLASSIFICATION	3.2817431805207024E-7	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999996915426151	WITHOUT_CLASSIFICATION	3.0845738486930545E-7	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999997319066642	WITHOUT_CLASSIFICATION	2.6809333573024504E-7	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999996674820215	WITHOUT_CLASSIFICATION	3.325179785127387E-7	TEST
// line 832	WITHOUT_CLASSIFICATION	0.99999965962689	WITHOUT_CLASSIFICATION	3.4037311006994616E-7	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999997469677776	WITHOUT_CLASSIFICATION	2.53032222401972E-7	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999997679870785	WITHOUT_CLASSIFICATION	2.320129214950892E-7	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999997409160234	WITHOUT_CLASSIFICATION	2.5908397651040637E-7	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999996910052088	WITHOUT_CLASSIFICATION	3.089947912489576E-7	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999997498642655	WITHOUT_CLASSIFICATION	2.5013573446703594E-7	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999997309450961	WITHOUT_CLASSIFICATION	2.690549039390503E-7	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999997659561163	WITHOUT_CLASSIFICATION	2.340438835855715E-7	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999997408560712	WITHOUT_CLASSIFICATION	2.591439287617957E-7	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999997597687845	WITHOUT_CLASSIFICATION	2.4023121548223723E-7	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999997164736818	WITHOUT_CLASSIFICATION	2.835263182269462E-7	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999996812308196	WITHOUT_CLASSIFICATION	3.187691803211175E-7	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999996961999602	WITHOUT_CLASSIFICATION	3.038000397467669E-7	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999997400477888	WITHOUT_CLASSIFICATION	2.5995221120065884E-7	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999997641377646	WITHOUT_CLASSIFICATION	2.358622354315706E-7	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999997040897389	WITHOUT_CLASSIFICATION	2.95910261166718E-7	TEST
// line 928	WITHOUT_CLASSIFICATION	0.999999686982056	WITHOUT_CLASSIFICATION	3.1301794398387746E-7	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999997191854514	WITHOUT_CLASSIFICATION	2.8081454859945926E-7	TEST
// line 947	WITHOUT_CLASSIFICATION	0.999999742151143	WITHOUT_CLASSIFICATION	2.578488570816257E-7	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999997270608695	WITHOUT_CLASSIFICATION	2.729391305642183E-7	TEST
// line 955	WITHOUT_CLASSIFICATION	0.999999728073636	WITHOUT_CLASSIFICATION	2.71926363990189E-7	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999997414236889	WITHOUT_CLASSIFICATION	2.5857631111857237E-7	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999997302099142	WITHOUT_CLASSIFICATION	2.697900857811181E-7	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999997411359163	WITHOUT_CLASSIFICATION	2.588640837278724E-7	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999996476314639	WITHOUT_CLASSIFICATION	3.523685361159441E-7	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999997311468697	WITHOUT_CLASSIFICATION	2.6885313032113184E-7	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999996970321018	WITHOUT_CLASSIFICATION	3.02967898248164E-7	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999996835712011	WITHOUT_CLASSIFICATION	3.1642879900171637E-7	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999997442282509	WITHOUT_CLASSIFICATION	2.557717490841887E-7	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999997241288069	WITHOUT_CLASSIFICATION	2.758711931199627E-7	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999997608891104	WITHOUT_CLASSIFICATION	2.391108896745824E-7	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999997779620549	WITHOUT_CLASSIFICATION	2.2203794516342607E-7	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999997917095688	WITHOUT_CLASSIFICATION	2.082904311808966E-7	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999997636335034	WITHOUT_CLASSIFICATION	2.3636649657876429E-7	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999998061254177	WITHOUT_CLASSIFICATION	1.9387458224868932E-7	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999997788239023	WITHOUT_CLASSIFICATION	2.2117609768665205E-7	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999997521224885	WITHOUT_CLASSIFICATION	2.4787751150503333E-7	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999997724298362	WITHOUT_CLASSIFICATION	2.2757016368158857E-7	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999997291881751	WITHOUT_CLASSIFICATION	2.7081182481485716E-7	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999997824642577	WITHOUT_CLASSIFICATION	2.1753574225392056E-7	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999997872946882	WITHOUT_CLASSIFICATION	2.1270531189765673E-7	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999997224584151	WITHOUT_CLASSIFICATION	2.775415849633158E-7	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999997531867639	WITHOUT_CLASSIFICATION	2.4681323606573056E-7	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999997748291455	WITHOUT_CLASSIFICATION	2.2517085455724505E-7	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999997294867242	WITHOUT_CLASSIFICATION	2.705132757499887E-7	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999997294255228	WITHOUT_CLASSIFICATION	2.7057447714611563E-7	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.999999797867882	WITHOUT_CLASSIFICATION	2.0213211815120298E-7	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999997447349473	WITHOUT_CLASSIFICATION	2.552650526508698E-7	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999997633732896	WITHOUT_CLASSIFICATION	2.3662671032298483E-7	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999997690864341	WITHOUT_CLASSIFICATION	2.3091356604185654E-7	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.999999700873894	WITHOUT_CLASSIFICATION	2.991261060624971E-7	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999997869580792	WITHOUT_CLASSIFICATION	2.1304192075600786E-7	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999997938794198	WITHOUT_CLASSIFICATION	2.0612058005622153E-7	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999997912525628	WITHOUT_CLASSIFICATION	2.087474371639869E-7	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999997660257652	WITHOUT_CLASSIFICATION	2.339742348966617E-7	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999997746569436	WITHOUT_CLASSIFICATION	2.2534305640168875E-7	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999997289345524	WITHOUT_CLASSIFICATION	2.710654477088645E-7	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.999999788387247	WITHOUT_CLASSIFICATION	2.1161275303023278E-7	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.999999774852409	WITHOUT_CLASSIFICATION	2.2514759098497766E-7	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999997904335074	WITHOUT_CLASSIFICATION	2.0956649272032645E-7	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.999999783292996	WITHOUT_CLASSIFICATION	2.1670700394972256E-7	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999997530015877	WITHOUT_CLASSIFICATION	2.4699841228101915E-7	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999997846639215	WITHOUT_CLASSIFICATION	2.1533607847135603E-7	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999997872807695	WITHOUT_CLASSIFICATION	2.1271923046188606E-7	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999997638858866	WITHOUT_CLASSIFICATION	2.3611411341689594E-7	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999997798315446	WITHOUT_CLASSIFICATION	2.2016845537718896E-7	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999996991843513	WITHOUT_CLASSIFICATION	3.0081564872004614E-7	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.99999977496644	WITHOUT_CLASSIFICATION	2.2503355998526803E-7	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999996650347776	WITHOUT_CLASSIFICATION	3.3496522247658274E-7	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999997218505022	WITHOUT_CLASSIFICATION	2.7814949771597314E-7	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999997578367825	WITHOUT_CLASSIFICATION	2.421632175056076E-7	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999997649326858	WITHOUT_CLASSIFICATION	2.3506731416997503E-7	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999997594550301	WITHOUT_CLASSIFICATION	2.40544970037089E-7	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999997653826812	WITHOUT_CLASSIFICATION	2.3461731873286816E-7	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999997781010305	WITHOUT_CLASSIFICATION	2.2189896949824216E-7	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999997200366938	WITHOUT_CLASSIFICATION	2.799633061875229E-7	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999997824748549	WITHOUT_CLASSIFICATION	2.1752514501116933E-7	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999997554895111	WITHOUT_CLASSIFICATION	2.4451048888285533E-7	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.999999765615201	WITHOUT_CLASSIFICATION	2.343847990652201E-7	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999997328916699	WITHOUT_CLASSIFICATION	2.6710833017407977E-7	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.999999718493445	WITHOUT_CLASSIFICATION	2.8150655494816305E-7	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999997182126404	WITHOUT_CLASSIFICATION	2.8178735948887146E-7	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999997025425832	WITHOUT_CLASSIFICATION	2.974574167396027E-7	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.999999685693254	WITHOUT_CLASSIFICATION	3.143067459846019E-7	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999997187962608	WITHOUT_CLASSIFICATION	2.8120373922720707E-7	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.999999738421365	WITHOUT_CLASSIFICATION	2.615786349701834E-7	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999996809809921	WITHOUT_CLASSIFICATION	3.1901900779207846E-7	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999997730086218	WITHOUT_CLASSIFICATION	2.2699137823344894E-7	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999997753877428	WITHOUT_CLASSIFICATION	2.2461225733358577E-7	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.999999797706498	WITHOUT_CLASSIFICATION	2.0229350188474557E-7	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999997741490019	WITHOUT_CLASSIFICATION	2.2585099823371984E-7	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999997492471097	WITHOUT_CLASSIFICATION	2.507528902529106E-7	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999997659041576	WITHOUT_CLASSIFICATION	2.340958423520489E-7	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999997615732761	WITHOUT_CLASSIFICATION	2.384267240022615E-7	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999996645494988	WITHOUT_CLASSIFICATION	3.3545050118645246E-7	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999996919738785	WITHOUT_CLASSIFICATION	3.080261214552306E-7	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999997391763613	WITHOUT_CLASSIFICATION	2.608236386873436E-7	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999997003560749	WITHOUT_CLASSIFICATION	2.9964392508977136E-7	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999997060369039	WITHOUT_CLASSIFICATION	2.9396309607707717E-7	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999996353901783	WITHOUT_CLASSIFICATION	3.646098216611016E-7	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999997394384371	WITHOUT_CLASSIFICATION	2.6056156291842644E-7	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999997097526976	WITHOUT_CLASSIFICATION	2.9024730238492343E-7	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999997368076542	WITHOUT_CLASSIFICATION	2.631923457089201E-7	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999997279723345	WITHOUT_CLASSIFICATION	2.72027665397944E-7	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999997087401672	WITHOUT_CLASSIFICATION	2.912598328129983E-7	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999997308812298	WITHOUT_CLASSIFICATION	2.691187700705644E-7	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999997105227815	WITHOUT_CLASSIFICATION	2.8947721851820935E-7	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999997404520413	WITHOUT_CLASSIFICATION	2.5954795876626647E-7	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999997381723229	WITHOUT_CLASSIFICATION	2.618276771388838E-7	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999997186008187	WITHOUT_CLASSIFICATION	2.8139918129676685E-7	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999996962691163	WITHOUT_CLASSIFICATION	3.0373088369597823E-7	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999997391306223	WITHOUT_CLASSIFICATION	2.608693776830954E-7	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999997700482348	WITHOUT_CLASSIFICATION	2.2995176518481914E-7	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.999999794200207	WITHOUT_CLASSIFICATION	2.0579979300094158E-7	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999997550802251	WITHOUT_CLASSIFICATION	2.449197749651988E-7	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999997740127398	WITHOUT_CLASSIFICATION	2.2598726029832017E-7	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999997200928973	WITHOUT_CLASSIFICATION	2.7990710272860095E-7	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.999999724946009	WITHOUT_CLASSIFICATION	2.7505399093914856E-7	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999997355984643	WITHOUT_CLASSIFICATION	2.6440153569713704E-7	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999997657001061	WITHOUT_CLASSIFICATION	2.3429989396454705E-7	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999997861174025	WITHOUT_CLASSIFICATION	2.1388259745700575E-7	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.999999781012206	WITHOUT_CLASSIFICATION	2.1898779409752253E-7	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999997849861829	WITHOUT_CLASSIFICATION	2.150138171193699E-7	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999997565557336	WITHOUT_CLASSIFICATION	2.434442663811373E-7	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999997168441026	WITHOUT_CLASSIFICATION	2.8315589735465094E-7	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999997927267154	WITHOUT_CLASSIFICATION	2.0727328456295515E-7	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999997663218841	WITHOUT_CLASSIFICATION	2.3367811593485748E-7	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999997144893534	WITHOUT_CLASSIFICATION	2.8551064658107586E-7	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999997263005146	WITHOUT_CLASSIFICATION	2.736994854430901E-7	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999997701950298	WITHOUT_CLASSIFICATION	2.2980497009669583E-7	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999997969224109	WITHOUT_CLASSIFICATION	2.0307758908257288E-7	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999997495451524	WITHOUT_CLASSIFICATION	2.504548475768486E-7	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999997321388989	WITHOUT_CLASSIFICATION	2.6786110116004565E-7	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999997891446428	WITHOUT_CLASSIFICATION	2.1085535715384582E-7	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999997198971563	WITHOUT_CLASSIFICATION	2.8010284367242596E-7	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999997157187265	WITHOUT_CLASSIFICATION	2.842812735008686E-7	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999997754086999	WITHOUT_CLASSIFICATION	2.2459130010763436E-7	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999997991731288	WITHOUT_CLASSIFICATION	2.0082687113449998E-7	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999997788796504	WITHOUT_CLASSIFICATION	2.2112034961431168E-7	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.999999779570945	WITHOUT_CLASSIFICATION	2.2042905502196098E-7	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999997778195617	WITHOUT_CLASSIFICATION	2.2218043841369576E-7	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.999999779214703	WITHOUT_CLASSIFICATION	2.2078529691721973E-7	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.99999977275814	WITHOUT_CLASSIFICATION	2.272418600266551E-7	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999997935614985	WITHOUT_CLASSIFICATION	2.0643850143139822E-7	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.999999799572931	WITHOUT_CLASSIFICATION	2.004270689721928E-7	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999997716937009	WITHOUT_CLASSIFICATION	2.2830629904287435E-7	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999997722612914	WITHOUT_CLASSIFICATION	2.2773870857586694E-7	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999997309435068	WITHOUT_CLASSIFICATION	2.690564931490553E-7	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999997092950466	WITHOUT_CLASSIFICATION	2.9070495341665016E-7	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999998005934567	WITHOUT_CLASSIFICATION	1.9940654320144782E-7	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999997607733971	WITHOUT_CLASSIFICATION	2.3922660294221776E-7	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999998070068381	WITHOUT_CLASSIFICATION	1.9299316183201576E-7	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999997740723048	WITHOUT_CLASSIFICATION	2.2592769510444045E-7	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999997305496863	WITHOUT_CLASSIFICATION	2.6945031362075026E-7	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999997982716192	WITHOUT_CLASSIFICATION	2.0172838073169755E-7	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999997718864934	WITHOUT_CLASSIFICATION	2.2811350659803852E-7	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999997704058963	WITHOUT_CLASSIFICATION	2.2959410363541708E-7	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.999999775779924	WITHOUT_CLASSIFICATION	2.2422007588751936E-7	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.999999778278415	WITHOUT_CLASSIFICATION	2.2172158488103778E-7	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999997005081144	WITHOUT_CLASSIFICATION	2.994918855790312E-7	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.999999744894717	WITHOUT_CLASSIFICATION	2.5510528293940136E-7	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999997366683667	WITHOUT_CLASSIFICATION	2.6333163329118506E-7	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999998003559286	WITHOUT_CLASSIFICATION	1.996440713963622E-7	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999998093864796	WITHOUT_CLASSIFICATION	1.9061352043519925E-7	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.999999792462406	WITHOUT_CLASSIFICATION	2.0753759399740165E-7	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999997680948656	WITHOUT_CLASSIFICATION	2.319051344039581E-7	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999997988897743	WITHOUT_CLASSIFICATION	2.0111022565325037E-7	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999997978200265	WITHOUT_CLASSIFICATION	2.02179973483169E-7	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.999999782875148	WITHOUT_CLASSIFICATION	2.1712485202857159E-7	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999997948763469	WITHOUT_CLASSIFICATION	2.0512365305012068E-7	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999997875968167	WITHOUT_CLASSIFICATION	2.1240318322241243E-7	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999997405666531	WITHOUT_CLASSIFICATION	2.5943334691727056E-7	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999997760483486	WITHOUT_CLASSIFICATION	2.2395165152058716E-7	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999997715227331	WITHOUT_CLASSIFICATION	2.284772669456746E-7	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999996682196138	WITHOUT_CLASSIFICATION	3.317803862109566E-7	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.999999775223135	WITHOUT_CLASSIFICATION	2.247768649499839E-7	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999997472377801	WITHOUT_CLASSIFICATION	2.527622199715067E-7	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999997882476918	WITHOUT_CLASSIFICATION	2.1175230830973322E-7	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999997733140836	WITHOUT_CLASSIFICATION	2.2668591642898143E-7	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999997633094443	WITHOUT_CLASSIFICATION	2.3669055574654494E-7	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.999999688543457	WITHOUT_CLASSIFICATION	3.1145654295382476E-7	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999997988596065	WITHOUT_CLASSIFICATION	2.011403934226184E-7	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999960655997855	WITHOUT_CLASSIFICATION	3.934400214462914E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.999996166178473	WITHOUT_CLASSIFICATION	3.833821527062385E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999990337444393	WITHOUT_CLASSIFICATION	9.662555606521719E-7	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999984903061053	WITHOUT_CLASSIFICATION	1.5096938946493092E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999696785019753	WITHOUT_CLASSIFICATION	3.0321498024708038E-5	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999843727295064	WITHOUT_CLASSIFICATION	1.5627270493694698E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999952786616396	WITHOUT_CLASSIFICATION	4.721338360319519E-6	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999825070128354	WITHOUT_CLASSIFICATION	1.7492987164598476E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999997902896888	WITHOUT_CLASSIFICATION	2.0971031131351377E-7	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999997741714314	WITHOUT_CLASSIFICATION	2.2582856868952015E-7	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999997869339873	WITHOUT_CLASSIFICATION	2.1306601267748334E-7	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999997969929713	WITHOUT_CLASSIFICATION	2.0300702868876038E-7	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999997910951999	WITHOUT_CLASSIFICATION	2.0890480007912137E-7	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999997651759909	WITHOUT_CLASSIFICATION	2.3482400922843276E-7	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999997250729027	WITHOUT_CLASSIFICATION	2.7492709724572097E-7	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999997257759949	WITHOUT_CLASSIFICATION	2.7422400511231265E-7	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999997351861329	WITHOUT_CLASSIFICATION	2.6481386701669894E-7	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999997658068364	WITHOUT_CLASSIFICATION	2.3419316352987114E-7	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999997098383671	WITHOUT_CLASSIFICATION	2.901616329766215E-7	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999996990684251	WITHOUT_CLASSIFICATION	3.0093157486184774E-7	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999997459904225	WITHOUT_CLASSIFICATION	2.5400957742279627E-7	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999997539143862	WITHOUT_CLASSIFICATION	2.4608561379025217E-7	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999997598537612	WITHOUT_CLASSIFICATION	2.4014623879112793E-7	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999997135916234	WITHOUT_CLASSIFICATION	2.8640837651778845E-7	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999997629882292	WITHOUT_CLASSIFICATION	2.370117706981802E-7	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999997667496605	WITHOUT_CLASSIFICATION	2.3325033945231322E-7	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999997480793599	WITHOUT_CLASSIFICATION	2.519206401329137E-7	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999997659675994	WITHOUT_CLASSIFICATION	2.3403240049978426E-7	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999996333572848	WITHOUT_CLASSIFICATION	3.666427152209162E-7	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999996243381815	WITHOUT_CLASSIFICATION	3.756618185793529E-7	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999997670433577	WITHOUT_CLASSIFICATION	2.329566422298842E-7	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999997240738874	WITHOUT_CLASSIFICATION	2.759261125490191E-7	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999987793464489	WITHOUT_CLASSIFICATION	1.220653551145332E-6	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999995943124268	WITHOUT_CLASSIFICATION	4.056875731499758E-7	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999985142286028	WITHOUT_CLASSIFICATION	1.4857713972065229E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.999999961882477	WITHOUT_CLASSIFICATION	3.811752305277258E-8	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999974774756579	WITHOUT_CLASSIFICATION	2.522524342013236E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999861847275	WITHOUT_CLASSIFICATION	1.3815272464645377E-8	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999995219659953	WITHOUT_CLASSIFICATION	4.780340047725918E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999978211582	WITHOUT_CLASSIFICATION	2.1788417902719107E-8	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999978211582	WITHOUT_CLASSIFICATION	2.1788417902719107E-8	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999944365769164	WITHOUT_CLASSIFICATION	5.563423083485284E-6	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999994537450637	WITHOUT_CLASSIFICATION	5.462549362367367E-7	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999550770985	WITHOUT_CLASSIFICATION	4.4922901492505345E-8	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999997257272776	WITHOUT_CLASSIFICATION	2.7427272245929986E-7	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999999611580427	WITHOUT_CLASSIFICATION	3.88419573483933E-8	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999951285637596	WITHOUT_CLASSIFICATION	4.871436240392294E-6	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.999999621158983	WITHOUT_CLASSIFICATION	3.7884101702094226E-7	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999999893244104	WITHOUT_CLASSIFICATION	1.0675589698718268E-8	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999999718074501	WITHOUT_CLASSIFICATION	2.8192549850712374E-8	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999996026710526	WITHOUT_CLASSIFICATION	3.973289473439574E-7	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999993873915572	WITHOUT_CLASSIFICATION	6.126084427207917E-7	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.999999492474744	WITHOUT_CLASSIFICATION	5.075252561167973E-7	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999994925620362	WITHOUT_CLASSIFICATION	5.074379637265324E-7	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999992718522285	WITHOUT_CLASSIFICATION	7.281477716016398E-7	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999999334905381	WITHOUT_CLASSIFICATION	6.650946195567294E-8	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999999334905381	WITHOUT_CLASSIFICATION	6.650946195567294E-8	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999842295815359	WITHOUT_CLASSIFICATION	1.5770418464118693E-5	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999999870115284	WITHOUT_CLASSIFICATION	1.2988471668530552E-8	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999408407575	WITHOUT_CLASSIFICATION	5.915924246252649E-8	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.999999680691651	WITHOUT_CLASSIFICATION	3.1930834888178185E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998408275937	WITHOUT_CLASSIFICATION	1.59172406265907E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998535962311	WITHOUT_CLASSIFICATION	1.4640376877691675E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999999793232232	WITHOUT_CLASSIFICATION	2.0676776833262738E-8	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998535962311	WITHOUT_CLASSIFICATION	1.4640376877691675E-7	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.999990994268754	WITHOUT_CLASSIFICATION	9.005731245962566E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999691448476	WITHOUT_CLASSIFICATION	3.0855152436823304E-8	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999996999867844	WITHOUT_CLASSIFICATION	3.0001321568440417E-7	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.999999265373337	WITHOUT_CLASSIFICATION	7.346266629369058E-7	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999998598191384	WITHOUT_CLASSIFICATION	1.4018086161004277E-7	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.999999654456883	WITHOUT_CLASSIFICATION	3.455431170364176E-7	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999998777492337	WITHOUT_CLASSIFICATION	1.2225076640196957E-7	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999988462388197	WITHOUT_CLASSIFICATION	1.1537611802446785E-6	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999999063835033	WITHOUT_CLASSIFICATION	9.361649670676554E-7	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999988603964249	WITHOUT_CLASSIFICATION	1.139603575135886E-6	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999997305180185	WITHOUT_CLASSIFICATION	2.694819815135221E-7	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999931716199852	WITHOUT_CLASSIFICATION	6.8283800148074946E-6	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999877428600058	WITHOUT_CLASSIFICATION	1.2257139994277192E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999966726122783	WITHOUT_CLASSIFICATION	3.327387721760819E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999985792351302	WITHOUT_CLASSIFICATION	1.4207648698244334E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999985792351302	WITHOUT_CLASSIFICATION	1.4207648698244334E-6	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999999844256812	WITHOUT_CLASSIFICATION	1.5574318757798373E-8	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999993610401907	WITHOUT_CLASSIFICATION	6.389598093110985E-7	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999999689072766	WITHOUT_CLASSIFICATION	3.109272339555119E-8	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999999307415485	WITHOUT_CLASSIFICATION	6.925845153692084E-8	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999999902719582	WITHOUT_CLASSIFICATION	9.72804189539402E-9	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998535962311	WITHOUT_CLASSIFICATION	1.4640376877691675E-7	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999999848190702	WITHOUT_CLASSIFICATION	1.518092985704846E-8	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999992924439	WITHOUT_CLASSIFICATION	7.075561732909494E-10	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999964784376619	WITHOUT_CLASSIFICATION	3.521562338003499E-6	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999926821181	WITHOUT_CLASSIFICATION	7.317881800351765E-9	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999977334988	WITHOUT_CLASSIFICATION	2.266501135850241E-9	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999906442769	WITHOUT_CLASSIFICATION	9.355723088921504E-9	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999998865996763	WITHOUT_CLASSIFICATION	1.1340032366259155E-7	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999996747439124	WITHOUT_CLASSIFICATION	3.252560875484212E-7	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999999990183406	WITHOUT_CLASSIFICATION	9.816594658181874E-10	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999997090037088	WITHOUT_CLASSIFICATION	2.909962911199793E-7	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999999688330541	WITHOUT_CLASSIFICATION	3.116694583483845E-8	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999871569962	WITHOUT_CLASSIFICATION	1.2843003725622178E-8	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999884059602505	WITHOUT_CLASSIFICATION	1.1594039749444587E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999988592195517	WITHOUT_CLASSIFICATION	1.1407804483419556E-6	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999999064473012	WITHOUT_CLASSIFICATION	9.355269888186452E-8	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.999990992197126	WITHOUT_CLASSIFICATION	9.007802874108832E-6	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999999726988836	WITHOUT_CLASSIFICATION	2.730111629205324E-8	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999998550036343	WITHOUT_CLASSIFICATION	1.449963657708011E-7	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999993392356928	WITHOUT_CLASSIFICATION	6.607643071811902E-7	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999998640522253	WITHOUT_CLASSIFICATION	1.359477747885407E-7	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999996711792624	WITHOUT_CLASSIFICATION	3.288207375425735E-7	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.999997271635197	WITHOUT_CLASSIFICATION	2.72836480293029E-6	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999998810971281	WITHOUT_CLASSIFICATION	1.1890287196801065E-7	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999998642578884	WITHOUT_CLASSIFICATION	1.3574211154331587E-7	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999999696083208	WITHOUT_CLASSIFICATION	3.039167924293843E-8	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999996521597025	WITHOUT_CLASSIFICATION	3.478402974188791E-7	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999999963863342	WITHOUT_CLASSIFICATION	3.613665935958889E-9	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999999863563693	WITHOUT_CLASSIFICATION	1.3643630625518432E-8	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999922411178116	WITHOUT_CLASSIFICATION	7.758882188346063E-6	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999999081388441	WITHOUT_CLASSIFICATION	9.186115585356156E-8	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999998450812778	WITHOUT_CLASSIFICATION	1.5491872221459726E-7	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999998334381126	WITHOUT_CLASSIFICATION	1.6656188743398074E-7	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999991325037472	WITHOUT_CLASSIFICATION	8.6749625290367E-7	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999999605804294	WITHOUT_CLASSIFICATION	3.9419570667495765E-8	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999999688045751	WITHOUT_CLASSIFICATION	3.1195424850334535E-8	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999999948006983	WITHOUT_CLASSIFICATION	5.199301645852409E-9	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999999732974707	WITHOUT_CLASSIFICATION	2.670252932941242E-8	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.999999984801672	WITHOUT_CLASSIFICATION	1.519832812395911E-8	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999999265264846	WITHOUT_CLASSIFICATION	7.347351532430656E-8	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999995478082	WITHOUT_CLASSIFICATION	4.521918644780012E-10	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999825070128354	WITHOUT_CLASSIFICATION	1.7492987164598476E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999910140519288	WITHOUT_CLASSIFICATION	8.985948071274061E-6	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999998603022452	WITHOUT_CLASSIFICATION	1.3969775489020224E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999998423595229	WITHOUT_CLASSIFICATION	1.5764047702536748E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999165454604	WITHOUT_CLASSIFICATION	8.345453955199259E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999691448476	WITHOUT_CLASSIFICATION	3.0855152436823304E-8	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999998887656805	WITHOUT_CLASSIFICATION	1.1123431953780241E-7	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.999999998195916	WITHOUT_CLASSIFICATION	1.8040840364344471E-9	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999999751309017	WITHOUT_CLASSIFICATION	2.486909836490665E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999895238031	WITHOUT_CLASSIFICATION	1.0476196824196221E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999895238031	WITHOUT_CLASSIFICATION	1.0476196824196221E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999918162751	WITHOUT_CLASSIFICATION	8.183724910978193E-9	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999918162751	WITHOUT_CLASSIFICATION	8.183724910978193E-9	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999918162751	WITHOUT_CLASSIFICATION	8.183724910978193E-9	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999991494299821	WITHOUT_CLASSIFICATION	8.505700179724434E-7	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999991494299821	WITHOUT_CLASSIFICATION	8.505700179724434E-7	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.999997340741029	WITHOUT_CLASSIFICATION	2.6592589709916436E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.999997340741029	WITHOUT_CLASSIFICATION	2.6592589709916436E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999901455586183	WITHOUT_CLASSIFICATION	9.854441381729335E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999996863707539	WITHOUT_CLASSIFICATION	3.1362924616853584E-7	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999998160628681	WITHOUT_CLASSIFICATION	1.8393713183504848E-7	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999998160628681	WITHOUT_CLASSIFICATION	1.8393713183504848E-7	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999999748034178	WITHOUT_CLASSIFICATION	2.519658216652564E-8	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999999226837887	WITHOUT_CLASSIFICATION	7.731621126717051E-8	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999995269456642	WITHOUT_CLASSIFICATION	4.730543359301697E-7	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999083586912	WITHOUT_CLASSIFICATION	9.164130886937058E-8	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999998832743606	WITHOUT_CLASSIFICATION	1.1672563942580683E-7	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999999895292162	WITHOUT_CLASSIFICATION	1.0470783716844349E-8	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999987053105224	WITHOUT_CLASSIFICATION	1.2946894776359751E-6	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.99999980734209	WITHOUT_CLASSIFICATION	1.9265790982234217E-7	TEST
// caller	WITHOUT_CLASSIFICATION	0.999999941087992	WITHOUT_CLASSIFICATION	5.89120078970768E-8	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999999614813831	WITHOUT_CLASSIFICATION	3.85186168527733E-8	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999999774071537	WITHOUT_CLASSIFICATION	2.2592846235969542E-8	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999998561691471	WITHOUT_CLASSIFICATION	1.4383085281441168E-7	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999983002626799	WITHOUT_CLASSIFICATION	1.6997373200575568E-6	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999998544772598	WITHOUT_CLASSIFICATION	1.4552274018251658E-7	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999999784095985	WITHOUT_CLASSIFICATION	2.159040156553854E-8	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999988467971419	WITHOUT_CLASSIFICATION	1.1532028581190272E-6	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999990862748158	WITHOUT_CLASSIFICATION	9.137251842371112E-7	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999997335845106	WITHOUT_CLASSIFICATION	2.6641548944167376E-7	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999998853254262	WITHOUT_CLASSIFICATION	1.1467457381261612E-7	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999927866933462	WITHOUT_CLASSIFICATION	7.2133066537338816E-6	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999999962401443	WITHOUT_CLASSIFICATION	3.7598557117026554E-8	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999998907553697	WITHOUT_CLASSIFICATION	1.0924463040483298E-7	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999999504124001	WITHOUT_CLASSIFICATION	4.958759996106672E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999931406024	WITHOUT_CLASSIFICATION	6.859397608940502E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999947778305	WITHOUT_CLASSIFICATION	5.222169526061458E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999793729534	WITHOUT_CLASSIFICATION	2.0627046719494334E-8	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999752369688	WITHOUT_CLASSIFICATION	2.4763031243265243E-8	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999884742043	WITHOUT_CLASSIFICATION	1.1525795736943318E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999992990199	WITHOUT_CLASSIFICATION	7.009800980377458E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999946633259	WITHOUT_CLASSIFICATION	5.336674027626634E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999789206719	WITHOUT_CLASSIFICATION	2.1079328027944313E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959838688	WITHOUT_CLASSIFICATION	4.016131256429424E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999969424548	WITHOUT_CLASSIFICATION	3.0575452016981077E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907309058	WITHOUT_CLASSIFICATION	9.26909416634857E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999969424548	WITHOUT_CLASSIFICATION	3.0575452016981077E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999969424548	WITHOUT_CLASSIFICATION	3.0575452016981077E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999969424548	WITHOUT_CLASSIFICATION	3.0575452016981077E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999969424548	WITHOUT_CLASSIFICATION	3.0575452016981077E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999969424548	WITHOUT_CLASSIFICATION	3.0575452016981077E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999969424548	WITHOUT_CLASSIFICATION	3.0575452016981077E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907309058	WITHOUT_CLASSIFICATION	9.26909416634857E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907309058	WITHOUT_CLASSIFICATION	9.26909416634857E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907309058	WITHOUT_CLASSIFICATION	9.26909416634857E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907309058	WITHOUT_CLASSIFICATION	9.26909416634857E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907309058	WITHOUT_CLASSIFICATION	9.26909416634857E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907309058	WITHOUT_CLASSIFICATION	9.26909416634857E-9	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999999540206111	WITHOUT_CLASSIFICATION	4.597938889897109E-8	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999999331689019	WITHOUT_CLASSIFICATION	6.683109801320279E-8	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999999092031164	WITHOUT_CLASSIFICATION	9.079688350424034E-8	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999693618157	WITHOUT_CLASSIFICATION	3.063818431570887E-8	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999985621705	WITHOUT_CLASSIFICATION	1.4378295187608714E-9	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999686288279	WITHOUT_CLASSIFICATION	3.137117206489834E-8	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999999795846094	WITHOUT_CLASSIFICATION	2.041539058054439E-8	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.999999998297844	WITHOUT_CLASSIFICATION	1.7021559492712094E-9	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999999940357169	WITHOUT_CLASSIFICATION	5.964283056998214E-9	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999995097295328	WITHOUT_CLASSIFICATION	4.902704671384684E-7	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999792731810982	WITHOUT_CLASSIFICATION	2.0726818901754568E-5	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999948361527	WITHOUT_CLASSIFICATION	5.163847384127887E-9	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999994416554503	WITHOUT_CLASSIFICATION	5.583445497202143E-7	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999938031959	WITHOUT_CLASSIFICATION	6.196804142608328E-9	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999999194216028	WITHOUT_CLASSIFICATION	8.057839717735605E-8	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999970478873704	WITHOUT_CLASSIFICATION	2.952112629621119E-6	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.999999793013354	WITHOUT_CLASSIFICATION	2.0698664601714404E-7	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999999813193672	WITHOUT_CLASSIFICATION	1.868063281902717E-8	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999999902186821	WITHOUT_CLASSIFICATION	9.78131780125122E-9	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999980103339	WITHOUT_CLASSIFICATION	1.9896661700235535E-9	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999996910334713	WITHOUT_CLASSIFICATION	3.089665287321579E-7	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999998182422373	WITHOUT_CLASSIFICATION	1.817577626406271E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999999793232232	WITHOUT_CLASSIFICATION	2.0676776833262738E-8	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999993706677053	WITHOUT_CLASSIFICATION	6.293322946389738E-7	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999989025772938	WITHOUT_CLASSIFICATION	1.0974227060734927E-6	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.999999992970108	WITHOUT_CLASSIFICATION	7.029891917616322E-9	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999891644259	WITHOUT_CLASSIFICATION	1.0835574092498415E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999999373733354	WITHOUT_CLASSIFICATION	6.26266646404758E-8	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999997265800316	WITHOUT_CLASSIFICATION	2.734199684348503E-7	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999999843304074	WITHOUT_CLASSIFICATION	1.5669592638189503E-8	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999999597713731	WITHOUT_CLASSIFICATION	4.0228626834354124E-8	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999958781848	WITHOUT_CLASSIFICATION	4.121815210655543E-9	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999954989275	WITHOUT_CLASSIFICATION	4.501072467605076E-9	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999798036133	WITHOUT_CLASSIFICATION	2.0196386657971522E-8	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999999813794557	WITHOUT_CLASSIFICATION	1.8620544346134378E-8	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999998989823201	WITHOUT_CLASSIFICATION	1.0101767995839445E-7	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999999826231716	WITHOUT_CLASSIFICATION	1.7376828409208438E-8	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999999333646575	WITHOUT_CLASSIFICATION	6.663534251783494E-8	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999999637846	WITHOUT_CLASSIFICATION	3.621537392514507E-11	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999970946473	WITHOUT_CLASSIFICATION	2.9053527446001118E-9	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.999999758837139	WITHOUT_CLASSIFICATION	2.411628610627397E-7	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999998951613206	WITHOUT_CLASSIFICATION	1.0483867937770215E-7	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999996848570115	WITHOUT_CLASSIFICATION	3.151429884554536E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999986791150731	WITHOUT_CLASSIFICATION	1.3208849268994205E-6	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999986791150731	WITHOUT_CLASSIFICATION	1.3208849268994205E-6	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999997816737107	WITHOUT_CLASSIFICATION	2.1832628926669243E-7	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999997816737107	WITHOUT_CLASSIFICATION	2.1832628926669243E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999997623564897	WITHOUT_CLASSIFICATION	2.376435103510317E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999997623564897	WITHOUT_CLASSIFICATION	2.376435103510317E-7	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999514236773	WITHOUT_CLASSIFICATION	4.8576322748091036E-8	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999999966057251	WITHOUT_CLASSIFICATION	3.3942748438987845E-9	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999998352653331	WITHOUT_CLASSIFICATION	1.6473466699913064E-7	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999999841021932	WITHOUT_CLASSIFICATION	1.5897806855509063E-8	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999999871900287	WITHOUT_CLASSIFICATION	1.2809971375526718E-8	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999984441868144	WITHOUT_CLASSIFICATION	1.5558131855850942E-6	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999997184163536	WITHOUT_CLASSIFICATION	2.8158364640932994E-7	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999983680679	WITHOUT_CLASSIFICATION	1.6319321191769616E-9	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999414598263	WITHOUT_CLASSIFICATION	5.8540173675292576E-8	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999775731782	WITHOUT_CLASSIFICATION	2.2426821782900432E-8	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999993886315647	WITHOUT_CLASSIFICATION	6.113684352588316E-7	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999998440817034	WITHOUT_CLASSIFICATION	1.5591829651672903E-7	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.999999994490132	WITHOUT_CLASSIFICATION	5.509868006932937E-9	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999999990535162	WITHOUT_CLASSIFICATION	9.46483780545544E-10	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999993157880378	WITHOUT_CLASSIFICATION	6.842119621374031E-7	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999995273796843	WITHOUT_CLASSIFICATION	4.726203156319634E-7	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999995549067	WITHOUT_CLASSIFICATION	4.4509324385539916E-10	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999998757803747	WITHOUT_CLASSIFICATION	1.2421962525611293E-7	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999999352788197	WITHOUT_CLASSIFICATION	6.472118029363729E-8	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999991392248794	WITHOUT_CLASSIFICATION	8.607751206768452E-7	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999993885321773	WITHOUT_CLASSIFICATION	6.114678228315096E-7	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999996225470917	WITHOUT_CLASSIFICATION	3.7745290820405463E-7	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999992049967478	WITHOUT_CLASSIFICATION	7.950032521590588E-7	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999893887711	WITHOUT_CLASSIFICATION	1.0611228973074164E-8	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999998284369322	WITHOUT_CLASSIFICATION	1.7156306781125617E-7	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999938813949	WITHOUT_CLASSIFICATION	6.118605078800839E-9	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999994610647231	WITHOUT_CLASSIFICATION	5.389352768505086E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999050827849	WITHOUT_CLASSIFICATION	9.491721519221801E-8	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999050827849	WITHOUT_CLASSIFICATION	9.491721519221801E-8	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999050827849	WITHOUT_CLASSIFICATION	9.491721519221801E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999993512364	WITHOUT_CLASSIFICATION	6.487636387747467E-10	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999993512364	WITHOUT_CLASSIFICATION	6.487636387747467E-10	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999988592195517	WITHOUT_CLASSIFICATION	1.1407804483419556E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999988592195517	WITHOUT_CLASSIFICATION	1.1407804483419556E-6	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999588115981	WITHOUT_CLASSIFICATION	4.118840184286896E-8	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999969536322341	WITHOUT_CLASSIFICATION	3.0463677660837024E-6	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999998209920617	WITHOUT_CLASSIFICATION	1.7900793827632658E-7	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.999999879457554	WITHOUT_CLASSIFICATION	1.2054244607189158E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999050827849	WITHOUT_CLASSIFICATION	9.491721519221801E-8	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999050827849	WITHOUT_CLASSIFICATION	9.491721519221801E-8	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999050827849	WITHOUT_CLASSIFICATION	9.491721519221801E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999993512364	WITHOUT_CLASSIFICATION	6.487636387747467E-10	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999993512364	WITHOUT_CLASSIFICATION	6.487636387747467E-10	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999993512364	WITHOUT_CLASSIFICATION	6.487636387747467E-10	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999988592195517	WITHOUT_CLASSIFICATION	1.1407804483419556E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999988592195517	WITHOUT_CLASSIFICATION	1.1407804483419556E-6	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999998610369822	WITHOUT_CLASSIFICATION	1.3896301775472005E-7	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999714484138	WITHOUT_CLASSIFICATION	2.8551586113705303E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999997169248995	WITHOUT_CLASSIFICATION	2.830751004928989E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999997169248995	WITHOUT_CLASSIFICATION	2.830751004928989E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999997169248995	WITHOUT_CLASSIFICATION	2.830751004928989E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999997169248995	WITHOUT_CLASSIFICATION	2.830751004928989E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999997169248995	WITHOUT_CLASSIFICATION	2.830751004928989E-7	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999999715963123	WITHOUT_CLASSIFICATION	2.8403687770642877E-8	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999997586752903	WITHOUT_CLASSIFICATION	2.4132470963716166E-7	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999997503652632	WITHOUT_CLASSIFICATION	2.4963473683228877E-7	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999992313910838	WITHOUT_CLASSIFICATION	7.686089161146806E-7	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.999999736239045	WITHOUT_CLASSIFICATION	2.637609549517864E-7	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999884099977389	WITHOUT_CLASSIFICATION	1.1590002261167278E-5	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999944754128638	WITHOUT_CLASSIFICATION	5.524587136199766E-6	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999999194506969	WITHOUT_CLASSIFICATION	8.054930310056061E-8	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999999121201801	WITHOUT_CLASSIFICATION	8.787981988733625E-8	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999988367743274	WITHOUT_CLASSIFICATION	1.163225672503407E-6	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999993551772526	WITHOUT_CLASSIFICATION	6.448227474861263E-7	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999986828012598	WITHOUT_CLASSIFICATION	1.3171987402076556E-6	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999986875225737	WITHOUT_CLASSIFICATION	1.3124774263037517E-6	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999999077485098	WITHOUT_CLASSIFICATION	9.225149018776992E-8	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999992324851648	WITHOUT_CLASSIFICATION	7.675148351882891E-7	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999895053654407	WITHOUT_CLASSIFICATION	1.0494634559260231E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999895053654407	WITHOUT_CLASSIFICATION	1.0494634559260231E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999895053654407	WITHOUT_CLASSIFICATION	1.0494634559260231E-5	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9998942181961132	WITHOUT_CLASSIFICATION	1.0578180388674452E-4	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9998942336679868	WITHOUT_CLASSIFICATION	1.0576633201322804E-4	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999998131062959	WITHOUT_CLASSIFICATION	1.8689370393274674E-7	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999987461756	WITHOUT_CLASSIFICATION	1.2538243190634745E-9	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999165840128	WITHOUT_CLASSIFICATION	8.341598724592879E-8	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999998931594388	WITHOUT_CLASSIFICATION	1.0684056117977836E-7	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.999999833977097	WITHOUT_CLASSIFICATION	1.660229029232837E-7	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999998853783064	WITHOUT_CLASSIFICATION	1.146216935069598E-7	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999995192390041	WITHOUT_CLASSIFICATION	4.807609958610027E-7	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999632616875	WITHOUT_CLASSIFICATION	3.673831253762735E-8	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999319897848	WITHOUT_CLASSIFICATION	6.801021523412586E-8	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.99999996864479	WITHOUT_CLASSIFICATION	3.135521002678726E-8	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999998959720164	WITHOUT_CLASSIFICATION	1.0402798354589227E-7	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999999097852924	WITHOUT_CLASSIFICATION	9.02147076532909E-8	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999999361903873	WITHOUT_CLASSIFICATION	6.380961270746448E-8	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999999163211114	WITHOUT_CLASSIFICATION	8.367888866971432E-8	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999999161932902	WITHOUT_CLASSIFICATION	8.380670985959452E-8	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999999234775163	WITHOUT_CLASSIFICATION	7.652248366398538E-8	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999999345176049	WITHOUT_CLASSIFICATION	6.548239504735574E-8	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999997835552877	WITHOUT_CLASSIFICATION	2.1644471229730665E-7	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999999096851326	WITHOUT_CLASSIFICATION	9.031486734567133E-8	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999998267170054	WITHOUT_CLASSIFICATION	1.7328299476156945E-7	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999999374561738	WITHOUT_CLASSIFICATION	6.254382619745534E-8	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999999156739141	WITHOUT_CLASSIFICATION	8.432608599910128E-8	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999998237936533	WITHOUT_CLASSIFICATION	1.7620634677697572E-7	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999998424691195	WITHOUT_CLASSIFICATION	1.575308803947924E-7	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999999066374899	WITHOUT_CLASSIFICATION	9.33625100337084E-8	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999998409560189	WITHOUT_CLASSIFICATION	1.5904398108911222E-7	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999993585635318	WITHOUT_CLASSIFICATION	6.414364680276863E-7	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.999993560591027	WITHOUT_CLASSIFICATION	6.43940897307495E-6	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.999992507867657	WITHOUT_CLASSIFICATION	7.492132342952518E-6	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9999859094768944	WITHOUT_CLASSIFICATION	1.4090523105678285E-5	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9999934581096943	WITHOUT_CLASSIFICATION	6.541890305659483E-6	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9999922869709181	WITHOUT_CLASSIFICATION	7.713029081962352E-6	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9999933922583446	WITHOUT_CLASSIFICATION	6.607741655364606E-6	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.999993529244671	WITHOUT_CLASSIFICATION	6.4707553290396505E-6	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999999207162508	WITHOUT_CLASSIFICATION	7.928374931567721E-8	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999999724944143	WITHOUT_CLASSIFICATION	2.7505585758121207E-8	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999958735144204	WITHOUT_CLASSIFICATION	4.126485579524055E-6	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.6141051790118496	WITHOUT_CLASSIFICATION	0.3858948209881504	TEST
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999804039261413	WITHOUT_CLASSIFICATION	1.9596073858785543E-5	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999999935180083	WITHOUT_CLASSIFICATION	6.48199176574951E-9	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999974528677728	WITHOUT_CLASSIFICATION	2.547132227174368E-6	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999999846488402	WITHOUT_CLASSIFICATION	1.5351159814678923E-8	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999480820389441	WITHOUT_CLASSIFICATION	5.191796105586177E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999982504443764	WITHOUT_CLASSIFICATION	1.7495556235276429E-6	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998682475916145	WITHOUT_CLASSIFICATION	1.317524083855131E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998682475916145	WITHOUT_CLASSIFICATION	1.317524083855131E-4	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999938607735339	WITHOUT_CLASSIFICATION	6.139226466069435E-6	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999999954499036	WITHOUT_CLASSIFICATION	4.550096409643953E-9	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.999999227140217	WITHOUT_CLASSIFICATION	7.728597829105418E-7	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9978214195826131	WITHOUT_CLASSIFICATION	0.002178580417386857	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.999993124375282	WITHOUT_CLASSIFICATION	6.875624717975104E-6	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999992600200976	WITHOUT_CLASSIFICATION	7.399799023643709E-7	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999999092251207	WITHOUT_CLASSIFICATION	9.077487930122898E-8	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999843157393	WITHOUT_CLASSIFICATION	1.5684260641595032E-8	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999999332278877	WITHOUT_CLASSIFICATION	6.677211228523997E-8	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.999999928877646	WITHOUT_CLASSIFICATION	7.112235406579485E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999934232747	WITHOUT_CLASSIFICATION	6.576725160647529E-9	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999934232747	WITHOUT_CLASSIFICATION	6.576725160647529E-9	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999934232747	WITHOUT_CLASSIFICATION	6.576725160647529E-9	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999934232747	WITHOUT_CLASSIFICATION	6.576725160647529E-9	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999994420516944	WITHOUT_CLASSIFICATION	5.579483055044259E-7	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999995515131649	WITHOUT_CLASSIFICATION	4.4848683513446936E-7	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999974579591748	WITHOUT_CLASSIFICATION	2.5420408251692822E-6	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999995795409277	WITHOUT_CLASSIFICATION	4.204590723073161E-7	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999982101301925	WITHOUT_CLASSIFICATION	1.7898698074590098E-6	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999999711431676	WITHOUT_CLASSIFICATION	2.8856832433764746E-8	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999999200112817	WITHOUT_CLASSIFICATION	7.998871830710204E-8	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999999788747562	WITHOUT_CLASSIFICATION	2.1125243846451023E-8	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999999788747562	WITHOUT_CLASSIFICATION	2.1125243846451023E-8	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.999999974791321	WITHOUT_CLASSIFICATION	2.5208679066119436E-8	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999999380315985	WITHOUT_CLASSIFICATION	6.196840156742294E-8	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999756103179211	WITHOUT_CLASSIFICATION	2.438968207889146E-5	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999993555097	WITHOUT_CLASSIFICATION	6.444903780652541E-10	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999993555097	WITHOUT_CLASSIFICATION	6.444903780652541E-10	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999973123422	WITHOUT_CLASSIFICATION	2.6876576761273333E-9	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999974648669968	WITHOUT_CLASSIFICATION	2.5351330031124263E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999974648669968	WITHOUT_CLASSIFICATION	2.5351330031124263E-6	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999973919226431	WITHOUT_CLASSIFICATION	2.6080773567934294E-6	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999940833414076	WITHOUT_CLASSIFICATION	5.9166585924667585E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999948508761	WITHOUT_CLASSIFICATION	5.149123942490606E-9	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999956195840979	WITHOUT_CLASSIFICATION	4.380415902034114E-6	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999970446881868	WITHOUT_CLASSIFICATION	2.955311813252904E-6	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999968593576	WITHOUT_CLASSIFICATION	3.140642350330469E-9	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999960916686	WITHOUT_CLASSIFICATION	3.908331399929955E-6	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9999984025164823	WITHOUT_CLASSIFICATION	1.5974835176141448E-6	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999812177366	WITHOUT_CLASSIFICATION	1.8782263477514566E-8	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999998347143652	WITHOUT_CLASSIFICATION	1.652856347409599E-7	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999990828441783	WITHOUT_CLASSIFICATION	9.171558216819674E-7	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999999604671959	WITHOUT_CLASSIFICATION	3.953280423227161E-8	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9924816504622485	WITHOUT_CLASSIFICATION	0.007518349537751494	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.989143025684348	WITHOUT_CLASSIFICATION	0.01085697431565206	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999999471678915	WITHOUT_CLASSIFICATION	5.2832108487939915E-8	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.999999978502891	WITHOUT_CLASSIFICATION	2.14971090545682E-8	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999995113178595	WITHOUT_CLASSIFICATION	4.886821404226545E-7	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999999811733631	WITHOUT_CLASSIFICATION	1.8826636816699288E-8	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999996983856346	WITHOUT_CLASSIFICATION	3.0161436542859355E-7	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999998347851982	WITHOUT_CLASSIFICATION	1.652148018102489E-7	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999983096861054	WITHOUT_CLASSIFICATION	1.6903138947273495E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999999467003929	WITHOUT_CLASSIFICATION	5.329960714574894E-8	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999999371419168	WITHOUT_CLASSIFICATION	6.285808309891787E-8	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999477776678057	WITHOUT_CLASSIFICATION	5.2222332194201735E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999966168624664	WITHOUT_CLASSIFICATION	3.383137533677161E-6	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999949759410023	WITHOUT_CLASSIFICATION	5.024058997742095E-6	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999999594754179	WITHOUT_CLASSIFICATION	4.0524582059530276E-8	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999986399367655	WITHOUT_CLASSIFICATION	1.3600632344731924E-6	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999994938765	WITHOUT_CLASSIFICATION	5.061234508688283E-10	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999992415389288	WITHOUT_CLASSIFICATION	7.584610712613815E-7	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999984158498966	WITHOUT_CLASSIFICATION	1.5841501034348713E-6	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999995866772825	WITHOUT_CLASSIFICATION	4.1332271744377603E-7	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.998162501894715	WITHOUT_CLASSIFICATION	0.001837498105284937	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999989786903948	WITHOUT_CLASSIFICATION	1.021309605175924E-6	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999999903579414	WITHOUT_CLASSIFICATION	9.642058598368987E-9	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999976052769466	WITHOUT_CLASSIFICATION	2.394723053425031E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999988602810006	WITHOUT_CLASSIFICATION	1.1397189994825765E-6	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999997561009425	WITHOUT_CLASSIFICATION	2.4389905750119106E-7	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999973577037636	WITHOUT_CLASSIFICATION	2.642296236414681E-6	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999976052769466	WITHOUT_CLASSIFICATION	2.394723053425031E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999988602810006	WITHOUT_CLASSIFICATION	1.1397189994825765E-6	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999999158324399	WITHOUT_CLASSIFICATION	8.416756013699331E-8	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999985870414608	WITHOUT_CLASSIFICATION	1.4129585391872454E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999985870414608	WITHOUT_CLASSIFICATION	1.4129585391872454E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999999241172144	WITHOUT_CLASSIFICATION	7.588278559826978E-7	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999056318197	WITHOUT_CLASSIFICATION	9.436818022761597E-8	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999996320965489	WITHOUT_CLASSIFICATION	3.679034510686499E-7	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999999790450963	WITHOUT_CLASSIFICATION	2.0954903712538152E-7	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999975290579332	WITHOUT_CLASSIFICATION	2.4709420668826632E-6	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999843216657317	WITHOUT_CLASSIFICATION	1.5678334268370922E-5	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999980600057847	WITHOUT_CLASSIFICATION	1.9399942151791474E-6	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999999055323072	WITHOUT_CLASSIFICATION	9.44676927937998E-8	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998797300684	WITHOUT_CLASSIFICATION	1.2026993159403923E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999976425685672	WITHOUT_CLASSIFICATION	2.3574314328762977E-6	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.999999956311718	WITHOUT_CLASSIFICATION	4.3688282057185707E-8	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999996662429897	WITHOUT_CLASSIFICATION	3.33757010220794E-7	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999989580458271	WITHOUT_CLASSIFICATION	1.041954172918544E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999137824118	WITHOUT_CLASSIFICATION	8.62175882189367E-8	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999137824118	WITHOUT_CLASSIFICATION	8.62175882189367E-8	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999935407942695	WITHOUT_CLASSIFICATION	6.459205730495245E-6	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999935407942695	WITHOUT_CLASSIFICATION	6.459205730495245E-6	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.999999776690345	WITHOUT_CLASSIFICATION	2.233096551398793E-7	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999999648974948	WITHOUT_CLASSIFICATION	3.5102505178289045E-8	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999998684009311	WITHOUT_CLASSIFICATION	1.3159906896392794E-7	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999997747042318	WITHOUT_CLASSIFICATION	2.2529576825192392E-7	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999837054598127	WITHOUT_CLASSIFICATION	1.629454018717782E-5	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999979867871575	WITHOUT_CLASSIFICATION	2.0132128426005204E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999996320965489	WITHOUT_CLASSIFICATION	3.679034510686499E-7	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999999790450963	WITHOUT_CLASSIFICATION	2.0954903712538152E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998797300684	WITHOUT_CLASSIFICATION	1.2026993159403923E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999976425685672	WITHOUT_CLASSIFICATION	2.3574314328762977E-6	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.999999956863293	WITHOUT_CLASSIFICATION	4.3136707054935884E-8	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999999007019702	WITHOUT_CLASSIFICATION	9.929802987602718E-8	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999977711371842	WITHOUT_CLASSIFICATION	2.228862815728106E-6	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999997930702181	WITHOUT_CLASSIFICATION	2.0692978186226648E-7	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999999024957617	WITHOUT_CLASSIFICATION	9.7504238400355E-8	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999993493796911	WITHOUT_CLASSIFICATION	6.506203089401202E-7	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999990192957758	WITHOUT_CLASSIFICATION	9.807042241579692E-7	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.999997246330441	WITHOUT_CLASSIFICATION	2.753669558979556E-6	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.999998554450351	WITHOUT_CLASSIFICATION	1.4455496489318814E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999997661820573	WITHOUT_CLASSIFICATION	2.3381794259559769E-7	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999922778714	WITHOUT_CLASSIFICATION	7.72212852650182E-9	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9998523762184073	WITHOUT_CLASSIFICATION	1.4762378159277918E-4	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999999157364785	WITHOUT_CLASSIFICATION	8.426352148365592E-8	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999984291701552	WITHOUT_CLASSIFICATION	1.5708298447358856E-6	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999995228235922	WITHOUT_CLASSIFICATION	4.771764078786311E-7	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999991061900668	WITHOUT_CLASSIFICATION	8.9380993312118E-7	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999999239578373	WITHOUT_CLASSIFICATION	7.604216263794013E-8	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999988254391301	WITHOUT_CLASSIFICATION	1.1745608698525973E-6	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999998170434745	WITHOUT_CLASSIFICATION	1.8295652549691973E-7	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999992362328318	WITHOUT_CLASSIFICATION	7.637671682066007E-7	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999992383320969	WITHOUT_CLASSIFICATION	7.616679030844704E-7	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999992383320969	WITHOUT_CLASSIFICATION	7.616679030844704E-7	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999996097975208	WITHOUT_CLASSIFICATION	3.9020247916104667E-7	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999952871777402	WITHOUT_CLASSIFICATION	4.7128222597327694E-6	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999989897914401	WITHOUT_CLASSIFICATION	1.0102085599406425E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999992454740754	WITHOUT_CLASSIFICATION	7.545259245340086E-7	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999992454740754	WITHOUT_CLASSIFICATION	7.545259245340086E-7	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999977711371842	WITHOUT_CLASSIFICATION	2.228862815728106E-6	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999957301174841	WITHOUT_CLASSIFICATION	4.269882515880658E-6	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999984400605687	WITHOUT_CLASSIFICATION	1.5599394312402315E-6	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999987194595649	WITHOUT_CLASSIFICATION	1.2805404351832248E-6	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.999999083705849	WITHOUT_CLASSIFICATION	9.16294150868188E-7	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999999622700418	WITHOUT_CLASSIFICATION	3.77299581961295E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.999986544406844	WITHOUT_CLASSIFICATION	1.3455593156096572E-5	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999987408881866	WITHOUT_CLASSIFICATION	1.2591118133993029E-6	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999998440779264	WITHOUT_CLASSIFICATION	1.5592207365652657E-7	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999998059219158	WITHOUT_CLASSIFICATION	1.9407808421136695E-7	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999961774526581	WITHOUT_CLASSIFICATION	3.822547341809545E-6	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999993423204164	WITHOUT_CLASSIFICATION	6.576795835199033E-7	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999999612651038	WITHOUT_CLASSIFICATION	3.8734896193667673E-8	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.999999978313679	WITHOUT_CLASSIFICATION	2.1686320957460053E-8	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999999469440255	WITHOUT_CLASSIFICATION	5.305597450260263E-8	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999999341799914	WITHOUT_CLASSIFICATION	6.582000848736926E-8	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999999360834217	WITHOUT_CLASSIFICATION	6.391657823915678E-8	TEST
// states	WITHOUT_CLASSIFICATION	0.9999957343555321	WITHOUT_CLASSIFICATION	4.265644467793568E-6	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999997403652923	WITHOUT_CLASSIFICATION	2.596347077489879E-7	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999859940618	WITHOUT_CLASSIFICATION	1.4005938221342105E-8	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999970668868	WITHOUT_CLASSIFICATION	2.933113129064605E-9	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999992883494287	WITHOUT_CLASSIFICATION	7.116505712019931E-7	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999999196849776	WITHOUT_CLASSIFICATION	8.031502247152227E-8	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999992323471467	WITHOUT_CLASSIFICATION	7.676528533047936E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999963430943	WITHOUT_CLASSIFICATION	3.65690568005641E-9	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999995508530948	WITHOUT_CLASSIFICATION	4.491469052593722E-7	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999969095185	WITHOUT_CLASSIFICATION	3.0904815222821384E-9	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.999999652399473	WITHOUT_CLASSIFICATION	3.476005269458343E-7	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999995672614	WITHOUT_CLASSIFICATION	4.327385199750322E-10	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999998744012942	WITHOUT_CLASSIFICATION	1.2559870573286908E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999704491814	WITHOUT_CLASSIFICATION	2.955081859119947E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999704491814	WITHOUT_CLASSIFICATION	2.955081859119947E-8	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999999670379898	WITHOUT_CLASSIFICATION	3.296201015519118E-8	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999999329862186	WITHOUT_CLASSIFICATION	6.701378142414671E-8	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999999329862186	WITHOUT_CLASSIFICATION	6.701378142414671E-8	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999995241303	WITHOUT_CLASSIFICATION	4.758697023943023E-9	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999995241303	WITHOUT_CLASSIFICATION	4.758697023943023E-9	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994366123619	WITHOUT_CLASSIFICATION	5.633876380531522E-7	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.999999988172226	WITHOUT_CLASSIFICATION	1.1827773965560348E-8	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999990256528	WITHOUT_CLASSIFICATION	9.743471421078807E-10	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999992264004751	WITHOUT_CLASSIFICATION	7.735995247816077E-7	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.999999992796928	WITHOUT_CLASSIFICATION	7.203072003736666E-9	TEST
// block	WITHOUT_CLASSIFICATION	0.999999626026481	WITHOUT_CLASSIFICATION	3.739735190382754E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.999999626026481	WITHOUT_CLASSIFICATION	3.739735190382754E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999963430943	WITHOUT_CLASSIFICATION	3.65690568005641E-9	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999963430943	WITHOUT_CLASSIFICATION	3.65690568005641E-9	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999963430943	WITHOUT_CLASSIFICATION	3.65690568005641E-9	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999995508530948	WITHOUT_CLASSIFICATION	4.491469052593722E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999704491814	WITHOUT_CLASSIFICATION	2.955081859119947E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999704491814	WITHOUT_CLASSIFICATION	2.955081859119947E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999704491814	WITHOUT_CLASSIFICATION	2.955081859119947E-8	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994366123619	WITHOUT_CLASSIFICATION	5.633876380531522E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994366123619	WITHOUT_CLASSIFICATION	5.633876380531522E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994366123619	WITHOUT_CLASSIFICATION	5.633876380531522E-7	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999992264004751	WITHOUT_CLASSIFICATION	7.735995247816077E-7	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999992264004751	WITHOUT_CLASSIFICATION	7.735995247816077E-7	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999999743208676	WITHOUT_CLASSIFICATION	2.5679132358111425E-8	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999999225607533	WITHOUT_CLASSIFICATION	7.74392467479045E-8	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999998659410986	WITHOUT_CLASSIFICATION	1.3405890143121013E-7	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999159162934891	WITHOUT_CLASSIFICATION	8.408370651091148E-5	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999999863805814	WITHOUT_CLASSIFICATION	1.3619418705881109E-8	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999999023984754	WITHOUT_CLASSIFICATION	9.760152461289557E-8	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999999023984754	WITHOUT_CLASSIFICATION	9.760152461289557E-8	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999999928078079	WITHOUT_CLASSIFICATION	7.192192102879823E-8	TEST
//switch	WITHOUT_CLASSIFICATION	0.999986544406844	WITHOUT_CLASSIFICATION	1.3455593156096572E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.999986544406844	WITHOUT_CLASSIFICATION	1.3455593156096572E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.999986544406844	WITHOUT_CLASSIFICATION	1.3455593156096572E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.999986544406844	WITHOUT_CLASSIFICATION	1.3455593156096572E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.999986544406844	WITHOUT_CLASSIFICATION	1.3455593156096572E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999995136497776	WITHOUT_CLASSIFICATION	4.863502224527604E-7	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999995136497776	WITHOUT_CLASSIFICATION	4.863502224527604E-7	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999995136497776	WITHOUT_CLASSIFICATION	4.863502224527604E-7	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999872361687	WITHOUT_CLASSIFICATION	1.2763831419912008E-8	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999998039811856	WITHOUT_CLASSIFICATION	1.9601881447429445E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999995508530948	WITHOUT_CLASSIFICATION	4.491469052593722E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994366123619	WITHOUT_CLASSIFICATION	5.633876380531522E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999994366123619	WITHOUT_CLASSIFICATION	5.633876380531522E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.999986544406844	WITHOUT_CLASSIFICATION	1.3455593156096572E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.999986544406844	WITHOUT_CLASSIFICATION	1.3455593156096572E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999995136497776	WITHOUT_CLASSIFICATION	4.863502224527604E-7	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999999928078079	WITHOUT_CLASSIFICATION	7.192192102879823E-8	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999984644449759	WITHOUT_CLASSIFICATION	1.5355550241228758E-6	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999995578791164	WITHOUT_CLASSIFICATION	4.421208836572772E-7	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999999776950431	WITHOUT_CLASSIFICATION	2.2304956802090255E-8	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999999671602685	WITHOUT_CLASSIFICATION	3.283973146040029E-8	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.999999909994432	WITHOUT_CLASSIFICATION	9.00055679013645E-8	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999999204496448	WITHOUT_CLASSIFICATION	7.9550355186602E-8	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999885500800626	WITHOUT_CLASSIFICATION	1.1449919937296992E-5	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999999224410493	WITHOUT_CLASSIFICATION	7.755895075110806E-8	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999999837422118	WITHOUT_CLASSIFICATION	1.625778820694557E-8	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999999121235476	WITHOUT_CLASSIFICATION	8.787645251161808E-8	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.999999925498375	WITHOUT_CLASSIFICATION	7.450162505786648E-8	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999994655206657	WITHOUT_CLASSIFICATION	5.34479334292285E-7	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999997903842217	WITHOUT_CLASSIFICATION	2.0961577829403119E-7	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.999994826633742	WITHOUT_CLASSIFICATION	5.173366258020163E-6	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999992452942082	WITHOUT_CLASSIFICATION	7.547057917186015E-7	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999999892256086	WITHOUT_CLASSIFICATION	1.0774391348431556E-8	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999999984079404	WITHOUT_CLASSIFICATION	1.5920595702962716E-9	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999886701620927	WITHOUT_CLASSIFICATION	1.1329837907414962E-5	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999933366508696	WITHOUT_CLASSIFICATION	6.663349130375675E-6	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999971457266	WITHOUT_CLASSIFICATION	2.8542732569984874E-9	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999997370532021	WITHOUT_CLASSIFICATION	2.629467978552263E-7	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999998989618818	WITHOUT_CLASSIFICATION	1.010381181632746E-7	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999614593941	WITHOUT_CLASSIFICATION	3.854060588938889E-8	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999999977863278	WITHOUT_CLASSIFICATION	2.2136721648675327E-9	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999998156918546	WITHOUT_CLASSIFICATION	1.8430814541732374E-7	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999966561215751	WITHOUT_CLASSIFICATION	3.343878424978778E-6	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999999080283989	WITHOUT_CLASSIFICATION	9.197160120129118E-8	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999428117787	WITHOUT_CLASSIFICATION	5.718822119080838E-8	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999999494782036	WITHOUT_CLASSIFICATION	5.052179643353227E-8	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.999999992547621	WITHOUT_CLASSIFICATION	7.452378939762325E-9	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999998452463982	WITHOUT_CLASSIFICATION	1.5475360179524918E-7	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999952200933	WITHOUT_CLASSIFICATION	4.779906640135603E-9	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999762102366	WITHOUT_CLASSIFICATION	2.3789763311592482E-8	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999908851483	WITHOUT_CLASSIFICATION	9.11485162173919E-9	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999984644449759	WITHOUT_CLASSIFICATION	1.5355550241228758E-6	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999608981509	WITHOUT_CLASSIFICATION	3.910184915450133E-8	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999999517474546	WITHOUT_CLASSIFICATION	4.825254550030043E-8	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999988972398467	WITHOUT_CLASSIFICATION	1.1027601532927818E-6	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999999302541007	WITHOUT_CLASSIFICATION	6.97458992642364E-8	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999999302541007	WITHOUT_CLASSIFICATION	6.97458992642364E-8	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999998021749792	WITHOUT_CLASSIFICATION	1.9782502073821807E-7	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999998021749792	WITHOUT_CLASSIFICATION	1.9782502073821807E-7	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999998106370657	WITHOUT_CLASSIFICATION	1.8936293419814192E-7	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999998692450804	WITHOUT_CLASSIFICATION	1.3075491966207966E-7	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999135359312	WITHOUT_CLASSIFICATION	8.646406878346444E-8	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999997341987342	WITHOUT_CLASSIFICATION	2.6580126579300346E-7	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999786828996	WITHOUT_CLASSIFICATION	2.131710037917536E-8	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999999427527184	WITHOUT_CLASSIFICATION	5.7247281538168395E-8	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999772329216	WITHOUT_CLASSIFICATION	2.276707839340946E-8	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999999966657009	WITHOUT_CLASSIFICATION	3.334298923606958E-9	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999998649896	WITHOUT_CLASSIFICATION	1.3501036815051186E-10	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999997991233196	WITHOUT_CLASSIFICATION	2.0087668043192704E-7	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999965897407	WITHOUT_CLASSIFICATION	3.4102591704005217E-9	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999968150712392	WITHOUT_CLASSIFICATION	3.184928760868511E-6	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999968150712392	WITHOUT_CLASSIFICATION	3.184928760868511E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999998870248448	WITHOUT_CLASSIFICATION	1.1297515521578184E-7	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999993430676483	WITHOUT_CLASSIFICATION	6.56932351785265E-7	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999998521943461	WITHOUT_CLASSIFICATION	1.478056539697605E-7	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999998521943461	WITHOUT_CLASSIFICATION	1.478056539697605E-7	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999983504043433	WITHOUT_CLASSIFICATION	1.6495956567631218E-6	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999985399324	WITHOUT_CLASSIFICATION	1.460067695921308E-9	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999991408068015	WITHOUT_CLASSIFICATION	8.591931983923079E-7	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999998558290357	WITHOUT_CLASSIFICATION	1.4417096430333386E-7	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.999999949333059	WITHOUT_CLASSIFICATION	5.066694093185739E-8	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999997399790193	WITHOUT_CLASSIFICATION	2.6002098080832045E-7	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999996307256457	WITHOUT_CLASSIFICATION	3.6927435440948425E-7	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999999538807718	WITHOUT_CLASSIFICATION	4.611922833607517E-8	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999961891360006	WITHOUT_CLASSIFICATION	3.810863999275746E-6	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999998171984751	WITHOUT_CLASSIFICATION	1.8280152493636614E-7	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999996587359531	WITHOUT_CLASSIFICATION	3.4126404690692203E-7	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999755032840085	WITHOUT_CLASSIFICATION	2.4496715991529578E-5	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999998766121595	WITHOUT_CLASSIFICATION	1.2338784051666598E-7	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999994532984637	WITHOUT_CLASSIFICATION	5.467015362324105E-7	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999830487131	WITHOUT_CLASSIFICATION	1.6951286956243813E-8	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999988094819922	WITHOUT_CLASSIFICATION	1.190518007820834E-6	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999999428890191	WITHOUT_CLASSIFICATION	5.711098092454794E-8	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999999849736071	WITHOUT_CLASSIFICATION	1.502639290377082E-8	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999757638454536	WITHOUT_CLASSIFICATION	2.4236154546363076E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999967547278	WITHOUT_CLASSIFICATION	3.245272210615271E-9	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9912382795402725	WITHOUT_CLASSIFICATION	0.008761720459727389	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999999529728133	WITHOUT_CLASSIFICATION	4.7027186699610854E-8	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999999784930775	WITHOUT_CLASSIFICATION	2.1506922457204668E-8	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999999489333236	WITHOUT_CLASSIFICATION	5.106667636930246E-8	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999999713104791	WITHOUT_CLASSIFICATION	2.868952093844162E-8	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999999967419512	WITHOUT_CLASSIFICATION	3.2580486851586116E-9	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999998984756747	WITHOUT_CLASSIFICATION	1.0152432526929131E-7	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999998160573146	WITHOUT_CLASSIFICATION	1.839426854108384E-7	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999995224565583	WITHOUT_CLASSIFICATION	4.775434416824241E-7	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999993378316455	WITHOUT_CLASSIFICATION	6.62168354499835E-7	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999654911031	WITHOUT_CLASSIFICATION	3.450889685814914E-8	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.999999884219087	WITHOUT_CLASSIFICATION	1.1578091290087365E-7	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999913891389	WITHOUT_CLASSIFICATION	8.610861181318358E-9	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999944844623	WITHOUT_CLASSIFICATION	5.515537660248627E-9	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999944844623	WITHOUT_CLASSIFICATION	5.515537660248627E-9	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999756796493	WITHOUT_CLASSIFICATION	2.4320350647582835E-8	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999999976994829	WITHOUT_CLASSIFICATION	2.3005170429095895E-9	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999757094286147	WITHOUT_CLASSIFICATION	2.4290571385363414E-5	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999996133421493	WITHOUT_CLASSIFICATION	3.8665785076225197E-7	TEST
// Block	WITHOUT_CLASSIFICATION	0.999999441157419	WITHOUT_CLASSIFICATION	5.588425809578533E-7	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999999419323883	WITHOUT_CLASSIFICATION	5.806761180014015E-8	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999644383138219	WITHOUT_CLASSIFICATION	3.556168617822846E-5	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999672960613337	WITHOUT_CLASSIFICATION	3.270393866627826E-5	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999927359071364	WITHOUT_CLASSIFICATION	7.264092863599395E-6	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999978934392293	WITHOUT_CLASSIFICATION	2.1065607706798673E-6	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999958808808	WITHOUT_CLASSIFICATION	4.119119189885762E-9	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999983850694207	WITHOUT_CLASSIFICATION	1.6149305792357111E-6	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999495873746624	WITHOUT_CLASSIFICATION	5.04126253376522E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999983496319861	WITHOUT_CLASSIFICATION	1.6503680139460028E-6	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999999740007238	WITHOUT_CLASSIFICATION	2.5999276184395938E-8	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999998988133775	WITHOUT_CLASSIFICATION	1.0118662246084703E-7	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999999664373054	WITHOUT_CLASSIFICATION	3.3562694576138016E-8	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999999304037911	WITHOUT_CLASSIFICATION	6.959620897825848E-8	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999997038808958	WITHOUT_CLASSIFICATION	2.9611910418291794E-7	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999988882430749	WITHOUT_CLASSIFICATION	1.1117569250573067E-6	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999998849755384	WITHOUT_CLASSIFICATION	1.1502446157732882E-7	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999993774934528	WITHOUT_CLASSIFICATION	6.225065472108808E-7	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999999016113771	WITHOUT_CLASSIFICATION	9.838862284378673E-8	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999999515580835	WITHOUT_CLASSIFICATION	4.8441916392396573E-8	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999993044525872	WITHOUT_CLASSIFICATION	6.95547412892575E-7	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999999734746782	WITHOUT_CLASSIFICATION	2.6525321793472328E-8	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999955223409	WITHOUT_CLASSIFICATION	4.477659206538783E-9	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999986096351398	WITHOUT_CLASSIFICATION	1.3903648603196498E-6	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999997216478883	WITHOUT_CLASSIFICATION	2.7835211170074806E-7	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.999999940847762	WITHOUT_CLASSIFICATION	5.915223805487008E-8	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999761091418682	WITHOUT_CLASSIFICATION	2.389085813175417E-5	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.995412373077991	WITHOUT_CLASSIFICATION	0.004587626922009039	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.99999926763284	WITHOUT_CLASSIFICATION	7.323671600137603E-7	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999996101785069	WITHOUT_CLASSIFICATION	3.8982149319597303E-7	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999997225965966	WITHOUT_CLASSIFICATION	2.774034034655502E-7	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9998451801322488	WITHOUT_CLASSIFICATION	1.548198677513301E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999975934990971	WITHOUT_CLASSIFICATION	2.406500902875995E-6	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999999144103378	WITHOUT_CLASSIFICATION	8.558966222582987E-8	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999999703658028	WITHOUT_CLASSIFICATION	2.9634197175844188E-8	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999999109845119	WITHOUT_CLASSIFICATION	8.9015488118777E-8	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999999213864212	WITHOUT_CLASSIFICATION	7.861357871773543E-8	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999997673770088	WITHOUT_CLASSIFICATION	2.3262299113789008E-7	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999997673770088	WITHOUT_CLASSIFICATION	2.3262299113789008E-7	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999996558717139	WITHOUT_CLASSIFICATION	3.4412828610261113E-7	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999998465180291	WITHOUT_CLASSIFICATION	1.5348197090164166E-7	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999994995729454	WITHOUT_CLASSIFICATION	5.004270545478125E-7	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999990249240569	WITHOUT_CLASSIFICATION	9.750759430601718E-7	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999994667245875	WITHOUT_CLASSIFICATION	5.332754125104575E-7	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999962712447	WITHOUT_CLASSIFICATION	3.7287553905959164E-9	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999925819228	WITHOUT_CLASSIFICATION	7.418077190175434E-9	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999999926535714	WITHOUT_CLASSIFICATION	7.346428469834924E-9	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999999149577873	WITHOUT_CLASSIFICATION	8.504221267809523E-8	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999994834855	WITHOUT_CLASSIFICATION	5.165144870727356E-10	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999996622332432	WITHOUT_CLASSIFICATION	3.377667567897365E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999556415656	WITHOUT_CLASSIFICATION	4.435843445310266E-8	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999997643839686	WITHOUT_CLASSIFICATION	2.356160313961315E-7	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.999999972592343	WITHOUT_CLASSIFICATION	2.740765712584172E-8	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999951182234	WITHOUT_CLASSIFICATION	4.881776640095664E-9	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999958250441962	WITHOUT_CLASSIFICATION	4.174955803871696E-6	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999995469878	WITHOUT_CLASSIFICATION	4.5301229771602796E-10	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999967120349403	WITHOUT_CLASSIFICATION	3.287965059792185E-6	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999961705401	WITHOUT_CLASSIFICATION	3.829459827235545E-9	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999923293902976	WITHOUT_CLASSIFICATION	7.670609702427298E-6	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999998139217389	WITHOUT_CLASSIFICATION	1.8607826120516882E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999996155060369	WITHOUT_CLASSIFICATION	3.844939630880967E-7	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999999148615	WITHOUT_CLASSIFICATION	8.513846501881671E-11	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999999857925681	WITHOUT_CLASSIFICATION	1.420743196293388E-8	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999582305654	WITHOUT_CLASSIFICATION	4.176943465759561E-8	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999994566642864	WITHOUT_CLASSIFICATION	5.433357136874049E-7	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999998489762705	WITHOUT_CLASSIFICATION	1.5102372959993966E-7	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999997968794468	WITHOUT_CLASSIFICATION	2.0312055315948384E-7	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999999953607224	WITHOUT_CLASSIFICATION	4.639277600933953E-8	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999998907195786	WITHOUT_CLASSIFICATION	1.0928042134604288E-7	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999523221079	WITHOUT_CLASSIFICATION	4.767789204526306E-8	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999946801703	WITHOUT_CLASSIFICATION	5.319829680214608E-9	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999998907195786	WITHOUT_CLASSIFICATION	1.0928042134604288E-7	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999845313149598	WITHOUT_CLASSIFICATION	1.5468685040216307E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999966168624664	WITHOUT_CLASSIFICATION	3.383137533677161E-6	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999999512482209	WITHOUT_CLASSIFICATION	4.875177903822663E-8	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9979706983515744	WITHOUT_CLASSIFICATION	0.0020293016484256346	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999998044123404	WITHOUT_CLASSIFICATION	1.955876596468581E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999997169248995	WITHOUT_CLASSIFICATION	2.830751004928989E-7	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999998660018874	WITHOUT_CLASSIFICATION	1.339981126016235E-7	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999892700161326	WITHOUT_CLASSIFICATION	1.0729983867381658E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999056318197	WITHOUT_CLASSIFICATION	9.436818022761597E-8	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999967547278	WITHOUT_CLASSIFICATION	3.245272210615271E-9	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999998659410986	WITHOUT_CLASSIFICATION	1.3405890143121013E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999658740688	WITHOUT_CLASSIFICATION	3.412593121865988E-8	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999994381483238	WITHOUT_CLASSIFICATION	5.618516761095449E-7	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999999924231582	WITHOUT_CLASSIFICATION	7.57684185665312E-9	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999880984337252	WITHOUT_CLASSIFICATION	1.1901566274829518E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999996320882154	WITHOUT_CLASSIFICATION	3.6791178449437457E-7	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999876488221866	WITHOUT_CLASSIFICATION	1.235117781336095E-5	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999995981154507	WITHOUT_CLASSIFICATION	4.018845493502449E-7	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999938494655	WITHOUT_CLASSIFICATION	6.1505344299342705E-9	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999997049851523	WITHOUT_CLASSIFICATION	2.9501484771290946E-7	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999991942262519	WITHOUT_CLASSIFICATION	8.057737481606799E-7	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999988902407906	WITHOUT_CLASSIFICATION	1.1097592094603754E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999999419616206	WITHOUT_CLASSIFICATION	5.803837929658447E-8	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999994851552925	WITHOUT_CLASSIFICATION	5.148447075314825E-7	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999998761525355	WITHOUT_CLASSIFICATION	1.2384746457660407E-7	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999996729220991	WITHOUT_CLASSIFICATION	3.270779009072206E-7	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999997592592348	WITHOUT_CLASSIFICATION	2.4074076512569545E-7	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.999999986731603	WITHOUT_CLASSIFICATION	1.3268397085188417E-8	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999480444715	WITHOUT_CLASSIFICATION	5.1955528623775544E-8	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998983301542	WITHOUT_CLASSIFICATION	1.0166984573801122E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998983301542	WITHOUT_CLASSIFICATION	1.0166984573801122E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999618071348	WITHOUT_CLASSIFICATION	3.8192865068167144E-8	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999979750603	WITHOUT_CLASSIFICATION	2.0249397020140373E-9	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999982441461	WITHOUT_CLASSIFICATION	1.7558538475589535E-9	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9982278023564728	WITHOUT_CLASSIFICATION	0.0017721976435272411	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9982278023564728	WITHOUT_CLASSIFICATION	0.0017721976435272411	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9982278023564728	WITHOUT_CLASSIFICATION	0.0017721976435272411	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9982278023564728	WITHOUT_CLASSIFICATION	0.0017721976435272411	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999999503588632	WITHOUT_CLASSIFICATION	4.96411368423882E-8	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999999198511783	WITHOUT_CLASSIFICATION	8.014882160629938E-8	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999996583924151	WITHOUT_CLASSIFICATION	3.4160758492941757E-7	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999884171056987	WITHOUT_CLASSIFICATION	1.1582894301250165E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999879451675	WITHOUT_CLASSIFICATION	1.2054832483050633E-8	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999941971931474	WITHOUT_CLASSIFICATION	5.8028068524950345E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999929488914682	WITHOUT_CLASSIFICATION	7.0511085318110585E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999929488914682	WITHOUT_CLASSIFICATION	7.0511085318110585E-6	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999612307817	WITHOUT_CLASSIFICATION	3.876921819109269E-8	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9999914206504323	WITHOUT_CLASSIFICATION	8.579349567753259E-6	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999997226108578	WITHOUT_CLASSIFICATION	2.773891421734194E-7	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9998788070351802	WITHOUT_CLASSIFICATION	1.2119296481979195E-4	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999999558078692	WITHOUT_CLASSIFICATION	4.4192130806081344E-8	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999997607806744	WITHOUT_CLASSIFICATION	2.3921932551440574E-7	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999178502372	WITHOUT_CLASSIFICATION	8.214976278951257E-8	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999950791349075	WITHOUT_CLASSIFICATION	4.920865092571612E-6	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999858059060934	WITHOUT_CLASSIFICATION	1.4194093906690046E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999858059060934	WITHOUT_CLASSIFICATION	1.4194093906690046E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999946801703	WITHOUT_CLASSIFICATION	5.319829680214608E-9	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999997412819484	WITHOUT_CLASSIFICATION	2.587180515641602E-7	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999997461974072	WITHOUT_CLASSIFICATION	2.538025928560556E-7	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999998952766724	WITHOUT_CLASSIFICATION	1.0472332751484579E-7	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999998553132305	WITHOUT_CLASSIFICATION	1.4468676944864716E-7	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9999916445422548	WITHOUT_CLASSIFICATION	8.355457745277824E-6	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999991819571492	WITHOUT_CLASSIFICATION	8.180428507267884E-7	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999999041302413	WITHOUT_CLASSIFICATION	9.586975867359527E-8	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999072262759	WITHOUT_CLASSIFICATION	9.277372419326364E-8	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999072262759	WITHOUT_CLASSIFICATION	9.277372419326364E-8	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999999685813803	WITHOUT_CLASSIFICATION	3.141861962181119E-8	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999992258198	WITHOUT_CLASSIFICATION	7.741802172636981E-10	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999976880323196	WITHOUT_CLASSIFICATION	2.3119676804922745E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999997673551282	WITHOUT_CLASSIFICATION	2.3264487174034956E-7	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999999818484476	WITHOUT_CLASSIFICATION	1.8151552353617596E-8	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.999991833876153	WITHOUT_CLASSIFICATION	8.16612384704647E-6	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999999245913116	WITHOUT_CLASSIFICATION	7.54086883315907E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999878485959	WITHOUT_CLASSIFICATION	1.21514041853421E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999878485959	WITHOUT_CLASSIFICATION	1.21514041853421E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999878485959	WITHOUT_CLASSIFICATION	1.21514041853421E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999878485959	WITHOUT_CLASSIFICATION	1.21514041853421E-8	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999584850786	WITHOUT_CLASSIFICATION	4.151492142500452E-8	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999758502107	WITHOUT_CLASSIFICATION	2.4149789245860525E-8	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999663426448693	WITHOUT_CLASSIFICATION	3.365735513068197E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999999442364786	WITHOUT_CLASSIFICATION	5.5763521407667844E-8	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999995535042969	WITHOUT_CLASSIFICATION	4.4649570316436056E-7	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.9999897067006286	WITHOUT_CLASSIFICATION	1.0293299371421309E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999265217951	WITHOUT_CLASSIFICATION	7.347820483493413E-8	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999995005277813	WITHOUT_CLASSIFICATION	4.994722187216792E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999995005277813	WITHOUT_CLASSIFICATION	4.994722187216792E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999995005277813	WITHOUT_CLASSIFICATION	4.994722187216792E-7	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999372124414	WITHOUT_CLASSIFICATION	6.278755854371945E-8	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999999902112671	WITHOUT_CLASSIFICATION	9.788732935484298E-9	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999621833425	WITHOUT_CLASSIFICATION	3.781665754634788E-8	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999621833425	WITHOUT_CLASSIFICATION	3.781665754634788E-8	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999985680563541	WITHOUT_CLASSIFICATION	1.4319436458817694E-6	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999999998944	WITHOUT_CLASSIFICATION	1.0558054201990567E-13	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999999012040724	WITHOUT_CLASSIFICATION	9.879592753387038E-8	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9999986046548293	WITHOUT_CLASSIFICATION	1.3953451708136113E-6	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999836544451	WITHOUT_CLASSIFICATION	1.6345554890400872E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999999642904189	WITHOUT_CLASSIFICATION	3.5709581035302536E-8	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999999944169341	WITHOUT_CLASSIFICATION	5.5830658969467565E-8	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999999944169341	WITHOUT_CLASSIFICATION	5.5830658969467565E-8	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.99999991813274	WITHOUT_CLASSIFICATION	8.186725989884069E-8	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999669384603	WITHOUT_CLASSIFICATION	3.3061539684191304E-8	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999773155135	WITHOUT_CLASSIFICATION	2.2684486523601495E-8	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999993885927752	WITHOUT_CLASSIFICATION	6.114072247763904E-7	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999995120688336	WITHOUT_CLASSIFICATION	4.879311662861167E-7	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999949291747	WITHOUT_CLASSIFICATION	5.070825257283688E-9	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.999999993230676	WITHOUT_CLASSIFICATION	6.769323933911306E-9	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999865500436711	WITHOUT_CLASSIFICATION	1.3449956328871975E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999983931560263	WITHOUT_CLASSIFICATION	1.6068439736577581E-6	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999339846922	WITHOUT_CLASSIFICATION	6.601530781228392E-8	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999999840582342	WITHOUT_CLASSIFICATION	1.59417657919113E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999987061924	WITHOUT_CLASSIFICATION	1.2938076125796635E-9	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999916454227	WITHOUT_CLASSIFICATION	8.354577208475541E-9	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999998961584832	WITHOUT_CLASSIFICATION	1.0384151686587619E-7	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999999953380659	WITHOUT_CLASSIFICATION	4.661934112119951E-8	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999999994025061	WITHOUT_CLASSIFICATION	5.974938750893976E-10	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999999191528078	WITHOUT_CLASSIFICATION	8.084719210530064E-8	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.999999987259525	WITHOUT_CLASSIFICATION	1.2740475001167825E-8	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999999995835732	WITHOUT_CLASSIFICATION	4.1642680628553904E-9	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999999974947477	WITHOUT_CLASSIFICATION	2.5052524426251213E-9	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999907228437	WITHOUT_CLASSIFICATION	9.277156264138841E-9	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999943595765	WITHOUT_CLASSIFICATION	5.6404234731569664E-9	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.999999794606438	WITHOUT_CLASSIFICATION	2.0539356206109404E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.999999794606438	WITHOUT_CLASSIFICATION	2.0539356206109404E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.999999794606438	WITHOUT_CLASSIFICATION	2.0539356206109404E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.999999794606438	WITHOUT_CLASSIFICATION	2.0539356206109404E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.999999794606438	WITHOUT_CLASSIFICATION	2.0539356206109404E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.999999794606438	WITHOUT_CLASSIFICATION	2.0539356206109404E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.999999794606438	WITHOUT_CLASSIFICATION	2.0539356206109404E-7	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.999999794606438	WITHOUT_CLASSIFICATION	2.0539356206109404E-7	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999969070448	WITHOUT_CLASSIFICATION	3.092955195697342E-9	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.999997255653345	WITHOUT_CLASSIFICATION	2.744346655084507E-6	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999970244719144	WITHOUT_CLASSIFICATION	2.975528085627497E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999601825084	WITHOUT_CLASSIFICATION	3.98174915497383E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999925819228	WITHOUT_CLASSIFICATION	7.418077190175434E-9	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999925819228	WITHOUT_CLASSIFICATION	7.418077190175434E-9	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999999089935374	WITHOUT_CLASSIFICATION	9.10064625212559E-8	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999999446546138	WITHOUT_CLASSIFICATION	5.5345386178430343E-8	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999260290737	WITHOUT_CLASSIFICATION	7.397092624782247E-8	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999989679865647	WITHOUT_CLASSIFICATION	1.032013435263579E-6	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999999177122052	WITHOUT_CLASSIFICATION	8.228779478639367E-8	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999999389943416	WITHOUT_CLASSIFICATION	6.100565839095035E-8	TEST
// read	WITHOUT_CLASSIFICATION	0.9999997774501646	WITHOUT_CLASSIFICATION	2.2254983552740758E-7	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999994298223446	WITHOUT_CLASSIFICATION	5.701776554218562E-7	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999997346619899	WITHOUT_CLASSIFICATION	2.653380100889015E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999772951341	WITHOUT_CLASSIFICATION	2.270486593028438E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999772951341	WITHOUT_CLASSIFICATION	2.270486593028438E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999772951341	WITHOUT_CLASSIFICATION	2.270486593028438E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188330396	WITHOUT_CLASSIFICATION	1.0981166960489273E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188330396	WITHOUT_CLASSIFICATION	1.0981166960489273E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188330396	WITHOUT_CLASSIFICATION	1.0981166960489273E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188330396	WITHOUT_CLASSIFICATION	1.0981166960489273E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188330396	WITHOUT_CLASSIFICATION	1.0981166960489273E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188330396	WITHOUT_CLASSIFICATION	1.0981166960489273E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188330396	WITHOUT_CLASSIFICATION	1.0981166960489273E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188330396	WITHOUT_CLASSIFICATION	1.0981166960489273E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188330396	WITHOUT_CLASSIFICATION	1.0981166960489273E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999864664949	WITHOUT_CLASSIFICATION	1.3533504966319429E-8	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999997733866853	WITHOUT_CLASSIFICATION	2.2661331455441334E-7	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999992343470785	WITHOUT_CLASSIFICATION	7.656529214435806E-7	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999997875492959	WITHOUT_CLASSIFICATION	2.1245070425586204E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188330396	WITHOUT_CLASSIFICATION	1.0981166960489273E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188330396	WITHOUT_CLASSIFICATION	1.0981166960489273E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999890188330396	WITHOUT_CLASSIFICATION	1.0981166960489273E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999795908685	WITHOUT_CLASSIFICATION	2.040913151051679E-8	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999985439795338	WITHOUT_CLASSIFICATION	1.456020466165679E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.999999997818704	WITHOUT_CLASSIFICATION	2.1812959381068483E-9	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999998884196345	WITHOUT_CLASSIFICATION	1.1158036541309438E-7	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999998884196345	WITHOUT_CLASSIFICATION	1.1158036541309438E-7	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999998915909066	WITHOUT_CLASSIFICATION	1.0840909343509578E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999999369788474	WITHOUT_CLASSIFICATION	6.302115260563533E-8	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999975374051	WITHOUT_CLASSIFICATION	2.462594903597869E-9	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999441271712	WITHOUT_CLASSIFICATION	5.5872828881111794E-8	TEST
// block given	WITHOUT_CLASSIFICATION	0.99999985146857	WITHOUT_CLASSIFICATION	1.4853143004523033E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.99999985146857	WITHOUT_CLASSIFICATION	1.4853143004523033E-7	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999977835137817	WITHOUT_CLASSIFICATION	2.2164862184063637E-6	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999846713349	WITHOUT_CLASSIFICATION	1.532866512977214E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999992395590455	WITHOUT_CLASSIFICATION	7.604409544698936E-7	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155407554	WITHOUT_CLASSIFICATION	1.7384459244514086E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155407554	WITHOUT_CLASSIFICATION	1.7384459244514086E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999826155407554	WITHOUT_CLASSIFICATION	1.7384459244514086E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999999238199111	WITHOUT_CLASSIFICATION	7.618008893576844E-8	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999513937183	WITHOUT_CLASSIFICATION	4.86062817830511E-8	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999513937183	WITHOUT_CLASSIFICATION	4.86062817830511E-8	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999999723518679	WITHOUT_CLASSIFICATION	2.764813213302802E-8	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999999723518679	WITHOUT_CLASSIFICATION	2.764813213302802E-8	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999999441239578	WITHOUT_CLASSIFICATION	5.5876042194264806E-8	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999919979567	WITHOUT_CLASSIFICATION	8.00204335994413E-9	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999991846526013	WITHOUT_CLASSIFICATION	8.153473987307724E-7	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999974833266358	WITHOUT_CLASSIFICATION	2.5166733642181973E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999993324153225	WITHOUT_CLASSIFICATION	6.675846775808617E-7	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999999772613715	WITHOUT_CLASSIFICATION	2.273862856481473E-8	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999990833293	WITHOUT_CLASSIFICATION	9.166708882866152E-10	TEST
// block	WITHOUT_CLASSIFICATION	0.999999626026481	WITHOUT_CLASSIFICATION	3.739735190382754E-7	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999998546742822	WITHOUT_CLASSIFICATION	1.4532571782660825E-7	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999955133869	WITHOUT_CLASSIFICATION	4.4866131547207444E-9	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999776848299935	WITHOUT_CLASSIFICATION	2.2315170006416387E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999997422760205	WITHOUT_CLASSIFICATION	2.5772397954686204E-7	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999996559982187	WITHOUT_CLASSIFICATION	3.4400178135593575E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999393458933	WITHOUT_CLASSIFICATION	6.065410675413762E-8	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999968724024	WITHOUT_CLASSIFICATION	3.1275976108597882E-9	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999997220693145	WITHOUT_CLASSIFICATION	2.7793068555614754E-7	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999987101997652	WITHOUT_CLASSIFICATION	1.289800234807989E-6	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999992271571	WITHOUT_CLASSIFICATION	7.728428656762818E-10	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999867239576122	WITHOUT_CLASSIFICATION	1.3276042387806464E-5	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999994565449133	WITHOUT_CLASSIFICATION	5.43455086666713E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999658740688	WITHOUT_CLASSIFICATION	3.412593121865988E-8	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.999970279399099	WITHOUT_CLASSIFICATION	2.9720600900975866E-5	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999997800166809	WITHOUT_CLASSIFICATION	2.1998331921170306E-7	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999999967882826	WITHOUT_CLASSIFICATION	3.21171744692114E-9	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999999777157431	WITHOUT_CLASSIFICATION	2.2284256843012957E-8	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999745612861153	WITHOUT_CLASSIFICATION	2.543871388469309E-5	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.999998355474902	WITHOUT_CLASSIFICATION	1.6445250979433113E-6	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999691350691	WITHOUT_CLASSIFICATION	3.08649309636893E-8	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999999284936761	WITHOUT_CLASSIFICATION	7.150632390542603E-8	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.999999999741458	WITHOUT_CLASSIFICATION	2.58541880072029E-10	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999995052361366	WITHOUT_CLASSIFICATION	4.947638635429689E-7	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999826277302	WITHOUT_CLASSIFICATION	1.737226990025583E-8	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999999469040498	WITHOUT_CLASSIFICATION	5.3095950178879507E-8	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999858593166	WITHOUT_CLASSIFICATION	1.4140683418417548E-8	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999579539742	WITHOUT_CLASSIFICATION	4.204602579733426E-8	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.999994784581684	WITHOUT_CLASSIFICATION	5.215418316005563E-6	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999999143135532	WITHOUT_CLASSIFICATION	8.568644676245129E-8	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999999800558242	WITHOUT_CLASSIFICATION	1.9944175784452577E-8	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999997232469261	WITHOUT_CLASSIFICATION	2.7675307392710235E-7	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999994427577	WITHOUT_CLASSIFICATION	5.572422406412853E-10	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999999437771986	WITHOUT_CLASSIFICATION	5.6222801427412176E-8	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999996990400033	WITHOUT_CLASSIFICATION	3.009599967760609E-7	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999924590791842	WITHOUT_CLASSIFICATION	7.540920815750745E-6	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999651522352	WITHOUT_CLASSIFICATION	3.484776480844966E-8	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999997502886816	WITHOUT_CLASSIFICATION	2.497113183589901E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999966445908591	WITHOUT_CLASSIFICATION	3.355409140755728E-6	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999999873520298	WITHOUT_CLASSIFICATION	1.2647970162063405E-8	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999973860144	WITHOUT_CLASSIFICATION	2.6139855698016387E-9	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999258609173	WITHOUT_CLASSIFICATION	7.413908263440701E-8	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999872306584158	WITHOUT_CLASSIFICATION	1.2769341584110795E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999999950156638	WITHOUT_CLASSIFICATION	4.984336225819844E-9	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999694313516	WITHOUT_CLASSIFICATION	3.056864844465906E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999694313516	WITHOUT_CLASSIFICATION	3.056864844465906E-8	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999786247908	WITHOUT_CLASSIFICATION	2.137520915028328E-8	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999786247908	WITHOUT_CLASSIFICATION	2.137520915028328E-8	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998973376973089	WITHOUT_CLASSIFICATION	1.0266230269098999E-4	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998973376973089	WITHOUT_CLASSIFICATION	1.0266230269098999E-4	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996695603692	WITHOUT_CLASSIFICATION	3.3043963069184796E-7	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996695603692	WITHOUT_CLASSIFICATION	3.3043963069184796E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999709445814	WITHOUT_CLASSIFICATION	2.9055418694629233E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999709445814	WITHOUT_CLASSIFICATION	2.9055418694629233E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999709445814	WITHOUT_CLASSIFICATION	2.9055418694629233E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999709445814	WITHOUT_CLASSIFICATION	2.9055418694629233E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999709445814	WITHOUT_CLASSIFICATION	2.9055418694629233E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999709445814	WITHOUT_CLASSIFICATION	2.9055418694629233E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999709445814	WITHOUT_CLASSIFICATION	2.9055418694629233E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999709445814	WITHOUT_CLASSIFICATION	2.9055418694629233E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999709445814	WITHOUT_CLASSIFICATION	2.9055418694629233E-8	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999127706347	WITHOUT_CLASSIFICATION	8.722936521486062E-8	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999127706347	WITHOUT_CLASSIFICATION	8.722936521486062E-8	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999127706347	WITHOUT_CLASSIFICATION	8.722936521486062E-8	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999998824335379	WITHOUT_CLASSIFICATION	1.1756646213854529E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999394748649	WITHOUT_CLASSIFICATION	6.052513507170211E-8	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999394748649	WITHOUT_CLASSIFICATION	6.052513507170211E-8	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999394748649	WITHOUT_CLASSIFICATION	6.052513507170211E-8	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999799691572	WITHOUT_CLASSIFICATION	2.0030842791469853E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999799691572	WITHOUT_CLASSIFICATION	2.0030842791469853E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999799691572	WITHOUT_CLASSIFICATION	2.0030842791469853E-7	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999833834316137	WITHOUT_CLASSIFICATION	1.661656838617947E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999999362352346	WITHOUT_CLASSIFICATION	6.376476531463225E-8	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999949567275908	WITHOUT_CLASSIFICATION	5.043272409264708E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999947673999076	WITHOUT_CLASSIFICATION	5.232600092420126E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999947673999076	WITHOUT_CLASSIFICATION	5.232600092420126E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999947673999076	WITHOUT_CLASSIFICATION	5.232600092420126E-6	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999995951268031	WITHOUT_CLASSIFICATION	4.0487319681601804E-7	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999995416015621	WITHOUT_CLASSIFICATION	4.5839843780635527E-7	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999995416015621	WITHOUT_CLASSIFICATION	4.5839843780635527E-7	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999989607543522	WITHOUT_CLASSIFICATION	1.0392456477316798E-6	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999246553475	WITHOUT_CLASSIFICATION	7.53446525209972E-8	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999246553475	WITHOUT_CLASSIFICATION	7.53446525209972E-8	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9941506467142783	WITHOUT_CLASSIFICATION	0.005849353285721734	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999910140519288	WITHOUT_CLASSIFICATION	8.985948071274061E-6	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999998970471752	WITHOUT_CLASSIFICATION	1.029528248696742E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344199848	WITHOUT_CLASSIFICATION	5.655800151326733E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344199848	WITHOUT_CLASSIFICATION	5.655800151326733E-7	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999998644037067	WITHOUT_CLASSIFICATION	1.3559629330052517E-7	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999947135892674	WITHOUT_CLASSIFICATION	5.2864107326943666E-6	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.999999596711979	WITHOUT_CLASSIFICATION	4.032880209768187E-7	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.999999976468644	WITHOUT_CLASSIFICATION	2.3531356004546997E-8	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999999061100252	WITHOUT_CLASSIFICATION	9.388997481122229E-8	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344199848	WITHOUT_CLASSIFICATION	5.655800151326733E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344199848	WITHOUT_CLASSIFICATION	5.655800151326733E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344199848	WITHOUT_CLASSIFICATION	5.655800151326733E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344199848	WITHOUT_CLASSIFICATION	5.655800151326733E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999994344199848	WITHOUT_CLASSIFICATION	5.655800151326733E-7	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999999271037611	WITHOUT_CLASSIFICATION	7.28962389511366E-8	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999998538368451	WITHOUT_CLASSIFICATION	1.4616315482455046E-7	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999988186392	WITHOUT_CLASSIFICATION	1.1813608021559842E-9	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999995623823149	WITHOUT_CLASSIFICATION	4.3761768514204694E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999997001335141	WITHOUT_CLASSIFICATION	2.9986648585177036E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998908084301	WITHOUT_CLASSIFICATION	1.0919156989205251E-7	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999925303710573	WITHOUT_CLASSIFICATION	7.46962894273115E-6	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999996634752043	WITHOUT_CLASSIFICATION	3.365247957760023E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999269476071	WITHOUT_CLASSIFICATION	7.305239290992958E-8	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999997703987998	WITHOUT_CLASSIFICATION	2.2960120019425142E-7	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999692469708	WITHOUT_CLASSIFICATION	3.07530292008057E-8	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999996155060369	WITHOUT_CLASSIFICATION	3.844939630880967E-7	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999999745406877	WITHOUT_CLASSIFICATION	2.545931234253602E-8	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999974327445268	WITHOUT_CLASSIFICATION	2.567255473197054E-6	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999999821577563	WITHOUT_CLASSIFICATION	1.7842243729289054E-8	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999999982283979	WITHOUT_CLASSIFICATION	1.7716021176666359E-9	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999999699997071	WITHOUT_CLASSIFICATION	3.000029282170408E-8	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999999416452	WITHOUT_CLASSIFICATION	5.835473935053978E-11	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999999667502135	WITHOUT_CLASSIFICATION	3.32497864897538E-8	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999997484962939	WITHOUT_CLASSIFICATION	2.515037061005259E-7	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999929905581448	WITHOUT_CLASSIFICATION	7.009441855110651E-6	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999997183806492	WITHOUT_CLASSIFICATION	2.8161935076342383E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999994834855	WITHOUT_CLASSIFICATION	5.165144870727356E-10	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997359360673	WITHOUT_CLASSIFICATION	2.640639327545009E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997359360673	WITHOUT_CLASSIFICATION	2.640639327545009E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997359360673	WITHOUT_CLASSIFICATION	2.640639327545009E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999997359360673	WITHOUT_CLASSIFICATION	2.640639327545009E-7	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999999456137357	WITHOUT_CLASSIFICATION	5.438626431334752E-8	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999998135346474	WITHOUT_CLASSIFICATION	1.8646535256970147E-7	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999999980447449	WITHOUT_CLASSIFICATION	1.9552551076516118E-8	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999999980447449	WITHOUT_CLASSIFICATION	1.9552551076516118E-8	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999884465935	WITHOUT_CLASSIFICATION	1.1553406427784758E-8	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999999604201705	WITHOUT_CLASSIFICATION	3.95798294954962E-7	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999978793579515	WITHOUT_CLASSIFICATION	2.1206420485294377E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999567663984	WITHOUT_CLASSIFICATION	4.323360149039478E-8	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999996106267115	WITHOUT_CLASSIFICATION	3.8937328840271733E-7	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999997983190844	WITHOUT_CLASSIFICATION	2.0168091559921287E-7	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999996490178259	WITHOUT_CLASSIFICATION	3.509821740624891E-7	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999989302422269	WITHOUT_CLASSIFICATION	1.0697577730905107E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999989302422269	WITHOUT_CLASSIFICATION	1.0697577730905107E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999989302422269	WITHOUT_CLASSIFICATION	1.0697577730905107E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999989302422269	WITHOUT_CLASSIFICATION	1.0697577730905107E-6	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999957570495	WITHOUT_CLASSIFICATION	4.242950516494447E-9	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998833886625	WITHOUT_CLASSIFICATION	1.1661133736721905E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998833886625	WITHOUT_CLASSIFICATION	1.1661133736721905E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998833886625	WITHOUT_CLASSIFICATION	1.1661133736721905E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999246322137	WITHOUT_CLASSIFICATION	7.536778632471181E-8	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999998588339996	WITHOUT_CLASSIFICATION	1.4116600047737888E-7	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999993549006327	WITHOUT_CLASSIFICATION	6.450993672651102E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9982278023564728	WITHOUT_CLASSIFICATION	0.0017721976435272411	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9982278023564728	WITHOUT_CLASSIFICATION	0.0017721976435272411	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999994523007	WITHOUT_CLASSIFICATION	5.476993066080662E-10	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999448085819	WITHOUT_CLASSIFICATION	5.5191418176777545E-8	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999997167174647	WITHOUT_CLASSIFICATION	2.8328253531286715E-7	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999997167174647	WITHOUT_CLASSIFICATION	2.8328253531286715E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999996333000836	WITHOUT_CLASSIFICATION	3.6669991647337E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999996333000836	WITHOUT_CLASSIFICATION	3.6669991647337E-7	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999998124504224	WITHOUT_CLASSIFICATION	1.8754957762734943E-7	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999998272394683	WITHOUT_CLASSIFICATION	1.727605316761632E-7	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999997003636997	WITHOUT_CLASSIFICATION	2.996363002802536E-7	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999985036193237	WITHOUT_CLASSIFICATION	1.4963806762350423E-6	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999873310351493	WITHOUT_CLASSIFICATION	1.266896485077209E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999998804074053	WITHOUT_CLASSIFICATION	1.1959259471164425E-7	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999501840958	WITHOUT_CLASSIFICATION	4.9815904159922405E-8	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999996102701657	WITHOUT_CLASSIFICATION	3.8972983431522645E-7	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.999997580270687	WITHOUT_CLASSIFICATION	2.4197293130726668E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999904372872	WITHOUT_CLASSIFICATION	9.562712746571688E-9	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999904372872	WITHOUT_CLASSIFICATION	9.562712746571688E-9	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999999475859427	WITHOUT_CLASSIFICATION	5.2414057325319405E-8	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999999475859427	WITHOUT_CLASSIFICATION	5.2414057325319405E-8	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999999349640805	WITHOUT_CLASSIFICATION	6.503591955040676E-8	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999998978965802	WITHOUT_CLASSIFICATION	1.0210341974561951E-7	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999956298821641	WITHOUT_CLASSIFICATION	4.37011783591344E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999987261905317	WITHOUT_CLASSIFICATION	1.27380946842793E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999987261905317	WITHOUT_CLASSIFICATION	1.27380946842793E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999987261905317	WITHOUT_CLASSIFICATION	1.27380946842793E-6	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999997397018575	WITHOUT_CLASSIFICATION	2.6029814255980794E-7	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999997810480082	WITHOUT_CLASSIFICATION	2.1895199177447992E-7	TEST
// line 513	WITHOUT_CLASSIFICATION	0.999999731330071	WITHOUT_CLASSIFICATION	2.686699289799652E-7	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999996926295801	WITHOUT_CLASSIFICATION	3.0737041989459577E-7	TEST
// line 533	WITHOUT_CLASSIFICATION	0.99999969704524	WITHOUT_CLASSIFICATION	3.0295475991258303E-7	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999997167247956	WITHOUT_CLASSIFICATION	2.832752043168844E-7	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999997505361011	WITHOUT_CLASSIFICATION	2.4946389889916747E-7	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999997715647344	WITHOUT_CLASSIFICATION	2.2843526553956023E-7	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999999885749278	WITHOUT_CLASSIFICATION	1.1425072208439806E-8	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999978678986	WITHOUT_CLASSIFICATION	2.132101430284636E-9	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999998685865246	WITHOUT_CLASSIFICATION	1.3141347547308187E-7	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999998528871986	WITHOUT_CLASSIFICATION	1.4711280141056486E-7	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999997569529243	WITHOUT_CLASSIFICATION	2.430470756594487E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9982278023564728	WITHOUT_CLASSIFICATION	0.0017721976435272411	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999999868446761	WITHOUT_CLASSIFICATION	1.3155323909098816E-8	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999979777768209	WITHOUT_CLASSIFICATION	2.022223179179218E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998983301542	WITHOUT_CLASSIFICATION	1.0166984573801122E-7	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999782236888133	WITHOUT_CLASSIFICATION	2.1776311186748034E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999782236888133	WITHOUT_CLASSIFICATION	2.1776311186748034E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999782236888133	WITHOUT_CLASSIFICATION	2.1776311186748034E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999782236888133	WITHOUT_CLASSIFICATION	2.1776311186748034E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999782236888133	WITHOUT_CLASSIFICATION	2.1776311186748034E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999854213004559	WITHOUT_CLASSIFICATION	1.4578699544128169E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999782236888133	WITHOUT_CLASSIFICATION	2.1776311186748034E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999782236888133	WITHOUT_CLASSIFICATION	2.1776311186748034E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999782236888133	WITHOUT_CLASSIFICATION	2.1776311186748034E-5	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999999883671025	WITHOUT_CLASSIFICATION	1.1632897588984172E-8	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999995925043946	WITHOUT_CLASSIFICATION	4.074956053553847E-7	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999233764742141	WITHOUT_CLASSIFICATION	7.662352578577457E-5	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999984343442881	WITHOUT_CLASSIFICATION	1.5656557118554942E-6	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999987256009526	WITHOUT_CLASSIFICATION	1.2743990473056483E-6	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999993842389469	WITHOUT_CLASSIFICATION	6.157610532392022E-7	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999830604199	WITHOUT_CLASSIFICATION	1.6939580126894697E-8	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999997594387716	WITHOUT_CLASSIFICATION	2.4056122832059407E-7	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999997453590256	WITHOUT_CLASSIFICATION	2.5464097439181907E-7	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999997453590256	WITHOUT_CLASSIFICATION	2.5464097439181907E-7	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999997443980787	WITHOUT_CLASSIFICATION	2.5560192138206196E-7	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999997421993206	WITHOUT_CLASSIFICATION	2.578006794549859E-7	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999997351978485	WITHOUT_CLASSIFICATION	2.648021514984769E-7	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999996867421255	WITHOUT_CLASSIFICATION	3.1325787458268567E-7	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999996903081124	WITHOUT_CLASSIFICATION	3.0969188758537407E-7	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999997730628464	WITHOUT_CLASSIFICATION	2.269371535883638E-7	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999997722271748	WITHOUT_CLASSIFICATION	2.2777282505815608E-7	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999997685885623	WITHOUT_CLASSIFICATION	2.314114378065807E-7	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999997458839995	WITHOUT_CLASSIFICATION	2.5411600048216895E-7	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999997276281369	WITHOUT_CLASSIFICATION	2.7237186303194434E-7	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999997588178452	WITHOUT_CLASSIFICATION	2.411821548035016E-7	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999997414834412	WITHOUT_CLASSIFICATION	2.585165588590638E-7	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999996519351817	WITHOUT_CLASSIFICATION	3.480648183702185E-7	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999997504492991	WITHOUT_CLASSIFICATION	2.4955070091787275E-7	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999997510154883	WITHOUT_CLASSIFICATION	2.489845117667853E-7	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999997510990711	WITHOUT_CLASSIFICATION	2.489009289604358E-7	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999997343242507	WITHOUT_CLASSIFICATION	2.656757492092338E-7	TEST
// line 911	WITHOUT_CLASSIFICATION	0.999999730110645	WITHOUT_CLASSIFICATION	2.698893549935912E-7	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999996606430653	WITHOUT_CLASSIFICATION	3.3935693466913955E-7	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999997184224492	WITHOUT_CLASSIFICATION	2.8157755082687025E-7	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999997476659549	WITHOUT_CLASSIFICATION	2.5233404508986225E-7	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999997288087384	WITHOUT_CLASSIFICATION	2.7119126159596873E-7	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999997162587226	WITHOUT_CLASSIFICATION	2.8374127738460526E-7	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999997725789505	WITHOUT_CLASSIFICATION	2.274210495208914E-7	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999997606451874	WITHOUT_CLASSIFICATION	2.393548126216835E-7	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.999999671825682	WITHOUT_CLASSIFICATION	3.2817431805207024E-7	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.999999797793807	WITHOUT_CLASSIFICATION	2.0220619292443885E-7	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999997526532716	WITHOUT_CLASSIFICATION	2.4734672849399617E-7	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999997748995079	WITHOUT_CLASSIFICATION	2.2510049204944852E-7	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999997788239023	WITHOUT_CLASSIFICATION	2.2117609768665205E-7	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999997724298362	WITHOUT_CLASSIFICATION	2.2757016368158857E-7	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999997336553201	WITHOUT_CLASSIFICATION	2.663446798287338E-7	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999997951904955	WITHOUT_CLASSIFICATION	2.0480950450810838E-7	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999997777426233	WITHOUT_CLASSIFICATION	2.222573767999433E-7	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999996912748562	WITHOUT_CLASSIFICATION	3.087251437240607E-7	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999997763027983	WITHOUT_CLASSIFICATION	2.2369720167877838E-7	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999997080340276	WITHOUT_CLASSIFICATION	2.9196597238890034E-7	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999997294255228	WITHOUT_CLASSIFICATION	2.7057447714611563E-7	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.999999769137773	WITHOUT_CLASSIFICATION	2.3086222691325088E-7	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999996458854509	WITHOUT_CLASSIFICATION	3.541145491064984E-7	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.999999739884512	WITHOUT_CLASSIFICATION	2.6011548810181407E-7	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999996624329432	WITHOUT_CLASSIFICATION	3.3756705678168397E-7	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999997038646998	WITHOUT_CLASSIFICATION	2.961353001258684E-7	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.999999732281788	WITHOUT_CLASSIFICATION	2.677182120630645E-7	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999996907132865	WITHOUT_CLASSIFICATION	3.0928671339545705E-7	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999997730086218	WITHOUT_CLASSIFICATION	2.2699137823344894E-7	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999998002091478	WITHOUT_CLASSIFICATION	1.9979085211699241E-7	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999997445398892	WITHOUT_CLASSIFICATION	2.5546011086942163E-7	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999997507949582	WITHOUT_CLASSIFICATION	2.49205041773684E-7	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999997288892282	WITHOUT_CLASSIFICATION	2.7111077188598555E-7	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999997136869414	WITHOUT_CLASSIFICATION	2.8631305858647566E-7	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999997827439341	WITHOUT_CLASSIFICATION	2.172560658287397E-7	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999997722706012	WITHOUT_CLASSIFICATION	2.2772939872385075E-7	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999996653741599	WITHOUT_CLASSIFICATION	3.3462584014559715E-7	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999996653741599	WITHOUT_CLASSIFICATION	3.3462584014559715E-7	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999997891446428	WITHOUT_CLASSIFICATION	2.1085535715384582E-7	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999997398950344	WITHOUT_CLASSIFICATION	2.60104965575472E-7	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999997372316877	WITHOUT_CLASSIFICATION	2.627683123361967E-7	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.999999782862615	WITHOUT_CLASSIFICATION	2.171373850003856E-7	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999997461498235	WITHOUT_CLASSIFICATION	2.5385017659098803E-7	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999997571711596	WITHOUT_CLASSIFICATION	2.4282884030048413E-7	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999997991731288	WITHOUT_CLASSIFICATION	2.0082687113449998E-7	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999997955249669	WITHOUT_CLASSIFICATION	2.0447503304130106E-7	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999997778016534	WITHOUT_CLASSIFICATION	2.2219834663550137E-7	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999997743985509	WITHOUT_CLASSIFICATION	2.2560144915253126E-7	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999976386955344	WITHOUT_CLASSIFICATION	2.3613044656688724E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999976386955344	WITHOUT_CLASSIFICATION	2.3613044656688724E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999995887216732	WITHOUT_CLASSIFICATION	4.112783268814353E-7	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999988246450076	WITHOUT_CLASSIFICATION	1.175354992387806E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999992802273131	WITHOUT_CLASSIFICATION	7.197726869462137E-7	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999998819764347	WITHOUT_CLASSIFICATION	1.1802356525510821E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999861847275	WITHOUT_CLASSIFICATION	1.3815272464645377E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999861847275	WITHOUT_CLASSIFICATION	1.3815272464645377E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999861847275	WITHOUT_CLASSIFICATION	1.3815272464645377E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999861847275	WITHOUT_CLASSIFICATION	1.3815272464645377E-8	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9930601257304696	WITHOUT_CLASSIFICATION	0.006939874269530387	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999966977980789	WITHOUT_CLASSIFICATION	3.302201921246196E-6	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999996642357268	WITHOUT_CLASSIFICATION	3.3576427317139354E-7	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999995900237916	WITHOUT_CLASSIFICATION	4.0997620843183156E-7	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999996303119526	WITHOUT_CLASSIFICATION	3.696880473324009E-7	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999997317157664	WITHOUT_CLASSIFICATION	2.682842335174947E-7	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999997608682033	WITHOUT_CLASSIFICATION	2.391317966779416E-7	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999997593667825	WITHOUT_CLASSIFICATION	2.4063321744078973E-7	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999997385289398	WITHOUT_CLASSIFICATION	2.614710602385132E-7	TEST
// line 515	WITHOUT_CLASSIFICATION	0.999999781479888	WITHOUT_CLASSIFICATION	2.1852011200143348E-7	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999997509861188	WITHOUT_CLASSIFICATION	2.490138812198946E-7	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999997435316194	WITHOUT_CLASSIFICATION	2.564683807208608E-7	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999997708528201	WITHOUT_CLASSIFICATION	2.2914717979250318E-7	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999996981213313	WITHOUT_CLASSIFICATION	3.0187866879648476E-7	TEST
// line 669	WITHOUT_CLASSIFICATION	0.999999736703807	WITHOUT_CLASSIFICATION	2.6329619285389136E-7	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999996555233192	WITHOUT_CLASSIFICATION	3.444766807997376E-7	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999997720403807	WITHOUT_CLASSIFICATION	2.27959619378553E-7	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999997739028993	WITHOUT_CLASSIFICATION	2.260971007386876E-7	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999996606557731	WITHOUT_CLASSIFICATION	3.3934422688437953E-7	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999997501471382	WITHOUT_CLASSIFICATION	2.498528618219143E-7	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999997461490918	WITHOUT_CLASSIFICATION	2.538509082210673E-7	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999996820460325	WITHOUT_CLASSIFICATION	3.1795396750469754E-7	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999997048232413	WITHOUT_CLASSIFICATION	2.9517675865816897E-7	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999997240008112	WITHOUT_CLASSIFICATION	2.7599918890132676E-7	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999997039017307	WITHOUT_CLASSIFICATION	2.960982693441839E-7	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999997933696615	WITHOUT_CLASSIFICATION	2.0663033851269673E-7	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999997897686901	WITHOUT_CLASSIFICATION	2.1023130989068316E-7	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999997067289976	WITHOUT_CLASSIFICATION	2.932710024645222E-7	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999997639164988	WITHOUT_CLASSIFICATION	2.3608350114124936E-7	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999997440020331	WITHOUT_CLASSIFICATION	2.55997966970576E-7	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999997887752906	WITHOUT_CLASSIFICATION	2.1122470946620174E-7	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999997571082195	WITHOUT_CLASSIFICATION	2.4289178051866456E-7	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999997212805729	WITHOUT_CLASSIFICATION	2.7871942718719813E-7	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999997831095314	WITHOUT_CLASSIFICATION	2.1689046866069757E-7	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999997608057882	WITHOUT_CLASSIFICATION	2.3919421174976767E-7	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999996746034739	WITHOUT_CLASSIFICATION	3.253965260274047E-7	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999997219875584	WITHOUT_CLASSIFICATION	2.7801244166937255E-7	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999997198023444	WITHOUT_CLASSIFICATION	2.801976555769883E-7	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999997179141754	WITHOUT_CLASSIFICATION	2.82085824616664E-7	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999997070043695	WITHOUT_CLASSIFICATION	2.929956305945526E-7	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999997307815686	WITHOUT_CLASSIFICATION	2.6921843146576865E-7	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999997013581846	WITHOUT_CLASSIFICATION	2.9864181542588393E-7	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999998018131058	WITHOUT_CLASSIFICATION	1.9818689427315204E-7	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999997257459428	WITHOUT_CLASSIFICATION	2.7425405719774165E-7	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999997769122514	WITHOUT_CLASSIFICATION	2.2308774866197888E-7	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.999999789529186	WITHOUT_CLASSIFICATION	2.1047081409264697E-7	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999997339135507	WITHOUT_CLASSIFICATION	2.660864493164672E-7	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999997653753158	WITHOUT_CLASSIFICATION	2.3462468417457062E-7	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999997654587619	WITHOUT_CLASSIFICATION	2.345412380788875E-7	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.999999749405431	WITHOUT_CLASSIFICATION	2.50594568998596E-7	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.999999772745648	WITHOUT_CLASSIFICATION	2.2725435197887737E-7	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999997747270984	WITHOUT_CLASSIFICATION	2.2527290142862566E-7	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999997698935407	WITHOUT_CLASSIFICATION	2.3010645922046876E-7	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.999999748465412	WITHOUT_CLASSIFICATION	2.515345880083202E-7	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999997740710519	WITHOUT_CLASSIFICATION	2.259289480704284E-7	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999997451803425	WITHOUT_CLASSIFICATION	2.548196574306599E-7	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999997587310349	WITHOUT_CLASSIFICATION	2.41268965091437E-7	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999997451786918	WITHOUT_CLASSIFICATION	2.548213081246396E-7	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999997269623653	WITHOUT_CLASSIFICATION	2.730376347578649E-7	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999993994637129	WITHOUT_CLASSIFICATION	6.00536287119049E-7	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999999870115284	WITHOUT_CLASSIFICATION	1.2988471668530552E-8	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998408275937	WITHOUT_CLASSIFICATION	1.59172406265907E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998408275937	WITHOUT_CLASSIFICATION	1.59172406265907E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998408275937	WITHOUT_CLASSIFICATION	1.59172406265907E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998408275937	WITHOUT_CLASSIFICATION	1.59172406265907E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998408275937	WITHOUT_CLASSIFICATION	1.59172406265907E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998408275937	WITHOUT_CLASSIFICATION	1.59172406265907E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998408275937	WITHOUT_CLASSIFICATION	1.59172406265907E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999691448476	WITHOUT_CLASSIFICATION	3.0855152436823304E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999691448476	WITHOUT_CLASSIFICATION	3.0855152436823304E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999691448476	WITHOUT_CLASSIFICATION	3.0855152436823304E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999691448476	WITHOUT_CLASSIFICATION	3.0855152436823304E-8	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999966726122783	WITHOUT_CLASSIFICATION	3.327387721760819E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999966726122783	WITHOUT_CLASSIFICATION	3.327387721760819E-6	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999998750370136	WITHOUT_CLASSIFICATION	1.2496298651467695E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999895238031	WITHOUT_CLASSIFICATION	1.0476196824196221E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999895238031	WITHOUT_CLASSIFICATION	1.0476196824196221E-8	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999999433669096	WITHOUT_CLASSIFICATION	5.663309034511469E-8	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999999568051967	WITHOUT_CLASSIFICATION	4.319480340402986E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959838688	WITHOUT_CLASSIFICATION	4.016131256429424E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959838688	WITHOUT_CLASSIFICATION	4.016131256429424E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959838688	WITHOUT_CLASSIFICATION	4.016131256429424E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959838688	WITHOUT_CLASSIFICATION	4.016131256429424E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959838688	WITHOUT_CLASSIFICATION	4.016131256429424E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959838688	WITHOUT_CLASSIFICATION	4.016131256429424E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959838688	WITHOUT_CLASSIFICATION	4.016131256429424E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999969424548	WITHOUT_CLASSIFICATION	3.0575452016981077E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907309058	WITHOUT_CLASSIFICATION	9.26909416634857E-9	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999999373733354	WITHOUT_CLASSIFICATION	6.26266646404758E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999999373733354	WITHOUT_CLASSIFICATION	6.26266646404758E-8	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999923280944	WITHOUT_CLASSIFICATION	7.671905593215558E-9	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.999999758837139	WITHOUT_CLASSIFICATION	2.411628610627397E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.999999758837139	WITHOUT_CLASSIFICATION	2.411628610627397E-7	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999096421742	WITHOUT_CLASSIFICATION	9.035782580282496E-8	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9962523285504266	WITHOUT_CLASSIFICATION	0.003747671449573573	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999999444073713	WITHOUT_CLASSIFICATION	5.55926286222634E-8	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999999856126264	WITHOUT_CLASSIFICATION	1.4387373617177234E-8	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999998684859249	WITHOUT_CLASSIFICATION	1.3151407509505436E-7	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999999891742807	WITHOUT_CLASSIFICATION	1.0825719289941909E-7	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999993620102358	WITHOUT_CLASSIFICATION	6.37989764179608E-7	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999999872810515	WITHOUT_CLASSIFICATION	1.2718948474162697E-8	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999756103179211	WITHOUT_CLASSIFICATION	2.438968207889146E-5	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999970876301665	WITHOUT_CLASSIFICATION	2.9123698335551293E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9978214195826131	WITHOUT_CLASSIFICATION	0.002178580417386857	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.999999999483862	WITHOUT_CLASSIFICATION	5.161380384626727E-10	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999843157393	WITHOUT_CLASSIFICATION	1.5684260641595032E-8	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.999993876857163	WITHOUT_CLASSIFICATION	6.123142836953574E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999999241172144	WITHOUT_CLASSIFICATION	7.588278559826978E-7	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999999930089672	WITHOUT_CLASSIFICATION	6.991032868213334E-9	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999249934872	WITHOUT_CLASSIFICATION	7.500651272774156E-8	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999975290579332	WITHOUT_CLASSIFICATION	2.4709420668826632E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998797300684	WITHOUT_CLASSIFICATION	1.2026993159403923E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998797300684	WITHOUT_CLASSIFICATION	1.2026993159403923E-7	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.999999657469076	WITHOUT_CLASSIFICATION	3.4253092402199157E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999704491814	WITHOUT_CLASSIFICATION	2.955081859119947E-8	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999799991529	WITHOUT_CLASSIFICATION	2.000084704028689E-8	TEST
//switch	WITHOUT_CLASSIFICATION	0.999986544406844	WITHOUT_CLASSIFICATION	1.3455593156096572E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999885500800626	WITHOUT_CLASSIFICATION	1.1449919937296992E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999885500800626	WITHOUT_CLASSIFICATION	1.1449919937296992E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999885500800626	WITHOUT_CLASSIFICATION	1.1449919937296992E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.999999925498375	WITHOUT_CLASSIFICATION	7.450162505786648E-8	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999997370532021	WITHOUT_CLASSIFICATION	2.629467978552263E-7	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999999861155615	WITHOUT_CLASSIFICATION	1.3884438622921439E-8	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.999999986854639	WITHOUT_CLASSIFICATION	1.3145360955804257E-8	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999997759673851	WITHOUT_CLASSIFICATION	2.2403261497161514E-7	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999818187707	WITHOUT_CLASSIFICATION	1.818122922414784E-8	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999482000037	WITHOUT_CLASSIFICATION	5.1799996322829706E-8	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999997991233196	WITHOUT_CLASSIFICATION	2.0087668043192704E-7	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999998649896	WITHOUT_CLASSIFICATION	1.3501036815051186E-10	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999998826238949	WITHOUT_CLASSIFICATION	1.1737610502050684E-7	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999999283117498	WITHOUT_CLASSIFICATION	7.16882502430189E-8	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999999960282578	WITHOUT_CLASSIFICATION	3.971742236474385E-9	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9912382795402725	WITHOUT_CLASSIFICATION	0.008761720459727389	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999985199541027	WITHOUT_CLASSIFICATION	1.4800458973641604E-6	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999994767966343	WITHOUT_CLASSIFICATION	5.232033657329202E-7	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999433051015196	WITHOUT_CLASSIFICATION	5.6694898480477006E-5	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999999547979415	WITHOUT_CLASSIFICATION	4.520205854549439E-8	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999761091418682	WITHOUT_CLASSIFICATION	2.389085813175417E-5	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999999990132181	WITHOUT_CLASSIFICATION	9.867818420664557E-10	TEST
