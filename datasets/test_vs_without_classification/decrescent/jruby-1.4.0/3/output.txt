// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999999638684128	WITHOUT_CLASSIFICATION	3.613158718500377E-8	TEST
// TODO make an assert here	TEST	0.9956357451076098	WITHOUT_CLASSIFICATION	0.004364254892390317	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.8920959964988373	WITHOUT_CLASSIFICATION	0.10790400350116265	TEST
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9998774753576954	WITHOUT_CLASSIFICATION	1.2252464230446975E-4	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9999838110792268	WITHOUT_CLASSIFICATION	1.618892077318726E-5	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999998088053621	WITHOUT_CLASSIFICATION	1.9119463786390848E-7	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.999999885266025	WITHOUT_CLASSIFICATION	1.147339749743049E-7	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999985290928362	WITHOUT_CLASSIFICATION	1.4709071638505723E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999735124581117	WITHOUT_CLASSIFICATION	2.6487541888262332E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999735124581117	WITHOUT_CLASSIFICATION	2.6487541888262332E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999543962023217	WITHOUT_CLASSIFICATION	4.560379767817883E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999543962023217	WITHOUT_CLASSIFICATION	4.560379767817883E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999681314660314	WITHOUT_CLASSIFICATION	3.186853396866595E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999980406677501	WITHOUT_CLASSIFICATION	1.959332249937215E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999982654761366	WITHOUT_CLASSIFICATION	1.7345238634480503E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999982803155179	WITHOUT_CLASSIFICATION	1.719684482196828E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.99998440514689	WITHOUT_CLASSIFICATION	1.5594853109968197E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.99998440514689	WITHOUT_CLASSIFICATION	1.5594853109968197E-5	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999985731401048	WITHOUT_CLASSIFICATION	1.4268598953003595E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999831699074867	WITHOUT_CLASSIFICATION	1.6830092513274154E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999831699074867	WITHOUT_CLASSIFICATION	1.6830092513274154E-5	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9999463111893395	WITHOUT_CLASSIFICATION	5.368881066043308E-5	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999640286824479	WITHOUT_CLASSIFICATION	3.597131755197639E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999976246210888	WITHOUT_CLASSIFICATION	2.3753789112031013E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999976246210888	WITHOUT_CLASSIFICATION	2.3753789112031013E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999976246210888	WITHOUT_CLASSIFICATION	2.3753789112031013E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999976246210888	WITHOUT_CLASSIFICATION	2.3753789112031013E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999976246210888	WITHOUT_CLASSIFICATION	2.3753789112031013E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999976246210888	WITHOUT_CLASSIFICATION	2.3753789112031013E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.999976246210888	WITHOUT_CLASSIFICATION	2.3753789112031013E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999510722374935	WITHOUT_CLASSIFICATION	4.892776250647317E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999510722374935	WITHOUT_CLASSIFICATION	4.892776250647317E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999510722374935	WITHOUT_CLASSIFICATION	4.892776250647317E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999510722374935	WITHOUT_CLASSIFICATION	4.892776250647317E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999510722374935	WITHOUT_CLASSIFICATION	4.892776250647317E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999510722374935	WITHOUT_CLASSIFICATION	4.892776250647317E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999510722374935	WITHOUT_CLASSIFICATION	4.892776250647317E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999637574502626	WITHOUT_CLASSIFICATION	3.624254973748099E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999637574502626	WITHOUT_CLASSIFICATION	3.624254973748099E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999637574502626	WITHOUT_CLASSIFICATION	3.624254973748099E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999637574502626	WITHOUT_CLASSIFICATION	3.624254973748099E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999637574502626	WITHOUT_CLASSIFICATION	3.624254973748099E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999637574502626	WITHOUT_CLASSIFICATION	3.624254973748099E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999832684342717	WITHOUT_CLASSIFICATION	1.673156572836495E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999832684342717	WITHOUT_CLASSIFICATION	1.673156572836495E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999832684342717	WITHOUT_CLASSIFICATION	1.673156572836495E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999832684342717	WITHOUT_CLASSIFICATION	1.673156572836495E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999832684342717	WITHOUT_CLASSIFICATION	1.673156572836495E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999832684342717	WITHOUT_CLASSIFICATION	1.673156572836495E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999981943159595	WITHOUT_CLASSIFICATION	1.805684040499808E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999981943159595	WITHOUT_CLASSIFICATION	1.805684040499808E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999981943159595	WITHOUT_CLASSIFICATION	1.805684040499808E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999981943159595	WITHOUT_CLASSIFICATION	1.805684040499808E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999981943159595	WITHOUT_CLASSIFICATION	1.805684040499808E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999981943159595	WITHOUT_CLASSIFICATION	1.805684040499808E-5	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999981943159595	WITHOUT_CLASSIFICATION	1.805684040499808E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999836823492411	WITHOUT_CLASSIFICATION	1.6317650758967807E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999836823492411	WITHOUT_CLASSIFICATION	1.6317650758967807E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999836823492411	WITHOUT_CLASSIFICATION	1.6317650758967807E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999836823492411	WITHOUT_CLASSIFICATION	1.6317650758967807E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999457006050859	WITHOUT_CLASSIFICATION	5.429939491412382E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9999457006050859	WITHOUT_CLASSIFICATION	5.429939491412382E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// switch	WITHOUT_CLASSIFICATION	0.9999983452260192	WITHOUT_CLASSIFICATION	1.6547739808715817E-6	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999998871398209	WITHOUT_CLASSIFICATION	1.1286017910486692E-7	TEST
// name	WITHOUT_CLASSIFICATION	0.999994728217068	WITHOUT_CLASSIFICATION	5.2717829319631596E-6	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999989438026561	WITHOUT_CLASSIFICATION	1.0561973439256354E-6	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999993211862113	WITHOUT_CLASSIFICATION	6.78813788681326E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999992117214733	WITHOUT_CLASSIFICATION	7.882785268208227E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999992117214733	WITHOUT_CLASSIFICATION	7.882785268208227E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999992117214733	WITHOUT_CLASSIFICATION	7.882785268208227E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999992117214733	WITHOUT_CLASSIFICATION	7.882785268208227E-7	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999999089700755	WITHOUT_CLASSIFICATION	9.102992441965204E-8	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999999583176167	WITHOUT_CLASSIFICATION	4.1682383271689704E-8	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999997503743691	WITHOUT_CLASSIFICATION	2.4962563093791913E-7	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999996222531913	WITHOUT_CLASSIFICATION	3.7774680878456296E-7	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999978305709976	WITHOUT_CLASSIFICATION	2.1694290024652467E-6	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.999999979767779	WITHOUT_CLASSIFICATION	2.0232221071080467E-8	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999992659390395	WITHOUT_CLASSIFICATION	7.340609604236605E-7	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999998387412515	WITHOUT_CLASSIFICATION	1.6125874855231018E-7	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999998635716688	WITHOUT_CLASSIFICATION	1.3642833114422599E-7	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999988247027607	WITHOUT_CLASSIFICATION	1.1752972392340585E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999759247868	WITHOUT_CLASSIFICATION	2.407521316967444E-8	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999998820250139	WITHOUT_CLASSIFICATION	1.1797498611392061E-7	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999967338107242	WITHOUT_CLASSIFICATION	3.2661892758669517E-6	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999998680079853	WITHOUT_CLASSIFICATION	1.319920146727141E-7	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.999999720424711	WITHOUT_CLASSIFICATION	2.795752891147112E-7	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999980852014634	WITHOUT_CLASSIFICATION	1.9147985366737796E-6	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999999459749073	WITHOUT_CLASSIFICATION	5.402509278283345E-8	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999992117214733	WITHOUT_CLASSIFICATION	7.882785268208227E-7	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999164862426	WITHOUT_CLASSIFICATION	8.351375731237031E-8	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999146221078	WITHOUT_CLASSIFICATION	8.53778922638434E-8	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999996747113858	WITHOUT_CLASSIFICATION	3.25288614207892E-7	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999989000526606	WITHOUT_CLASSIFICATION	1.0999473394629464E-6	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999999690982206	WITHOUT_CLASSIFICATION	3.09017793259473E-8	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999982139149934	WITHOUT_CLASSIFICATION	1.786085006640146E-6	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999998559759087	WITHOUT_CLASSIFICATION	1.4402409121987936E-7	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999981560502674	WITHOUT_CLASSIFICATION	1.8439497324736253E-6	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999981573984706	WITHOUT_CLASSIFICATION	1.8426015293787636E-6	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999996254477452	WITHOUT_CLASSIFICATION	3.745522548036716E-7	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999691245467065	WITHOUT_CLASSIFICATION	3.087545329354989E-5	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999973807320275	WITHOUT_CLASSIFICATION	2.61926797251132E-6	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999999139102709	WITHOUT_CLASSIFICATION	8.608972914824738E-8	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.999998812225814	WITHOUT_CLASSIFICATION	1.1877741859577731E-6	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999977507393641	WITHOUT_CLASSIFICATION	2.2492606358921326E-6	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999935201081516	WITHOUT_CLASSIFICATION	6.4798918484194055E-6	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.999999590549028	WITHOUT_CLASSIFICATION	4.0945097201637054E-7	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999341214705	WITHOUT_CLASSIFICATION	6.587852947289983E-8	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9985957466368	WITHOUT_CLASSIFICATION	0.0014042533632000467	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999992017102999	WITHOUT_CLASSIFICATION	7.982896999893957E-7	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999991710912053	WITHOUT_CLASSIFICATION	8.289087946471538E-7	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999965591383128	WITHOUT_CLASSIFICATION	3.440861687234277E-6	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999998002552372	WITHOUT_CLASSIFICATION	1.9974476280394473E-7	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9999681715667799	WITHOUT_CLASSIFICATION	3.1828433220054564E-5	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999989100574688	WITHOUT_CLASSIFICATION	1.0899425312076645E-6	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9999916078548924	WITHOUT_CLASSIFICATION	8.392145107661464E-6	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.99999958344653	WITHOUT_CLASSIFICATION	4.1655347004200886E-7	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999999475350497	WITHOUT_CLASSIFICATION	5.2464950208853944E-8	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999998990370164	WITHOUT_CLASSIFICATION	1.0096298365534612E-7	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999997979626326	WITHOUT_CLASSIFICATION	2.0203736731344767E-7	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999994139957392	WITHOUT_CLASSIFICATION	5.860042608649076E-7	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999994385575488	WITHOUT_CLASSIFICATION	5.614424512359176E-7	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999980034706089	WITHOUT_CLASSIFICATION	1.996529391166617E-6	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999195825422	WITHOUT_CLASSIFICATION	8.041745771289309E-8	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999999901535711	WITHOUT_CLASSIFICATION	9.84642891544372E-9	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999998608535307	WITHOUT_CLASSIFICATION	1.3914646944749357E-7	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.999999934573359	WITHOUT_CLASSIFICATION	6.542664102804321E-8	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999990648514603	WITHOUT_CLASSIFICATION	9.351485397634E-7	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999997091691396	WITHOUT_CLASSIFICATION	2.908308604579575E-7	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999991864298763	WITHOUT_CLASSIFICATION	8.135701236952535E-7	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999214568781	WITHOUT_CLASSIFICATION	7.854312194862528E-8	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996319392539	WITHOUT_CLASSIFICATION	3.6806074609537446E-7	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999991145923476	WITHOUT_CLASSIFICATION	8.854076523430535E-7	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999997028300697	WITHOUT_CLASSIFICATION	2.971699302218835E-7	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999997028300697	WITHOUT_CLASSIFICATION	2.971699302218835E-7	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999868977926222	WITHOUT_CLASSIFICATION	1.3102207377813502E-5	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999999672430062	WITHOUT_CLASSIFICATION	3.275699374840389E-8	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.99998490768186	WITHOUT_CLASSIFICATION	1.5092318140020596E-5	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999998608119065	WITHOUT_CLASSIFICATION	1.3918809342626127E-7	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999988291169177	WITHOUT_CLASSIFICATION	1.170883082255519E-6	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999892880467819	WITHOUT_CLASSIFICATION	1.0711953218140284E-5	TEST
// ???	WITHOUT_CLASSIFICATION	0.999995057260021	WITHOUT_CLASSIFICATION	4.942739978954139E-6	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999886960963232	WITHOUT_CLASSIFICATION	1.1303903676764748E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996319392539	WITHOUT_CLASSIFICATION	3.6806074609537446E-7	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999098297586	WITHOUT_CLASSIFICATION	9.017024144201217E-8	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999988195214394	WITHOUT_CLASSIFICATION	1.1804785606332506E-6	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999900317958	WITHOUT_CLASSIFICATION	9.968204241535027E-9	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999623926101	WITHOUT_CLASSIFICATION	3.760738984891197E-8	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999996678061943	WITHOUT_CLASSIFICATION	3.3219380568038244E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999997110602222	WITHOUT_CLASSIFICATION	2.8893977781016926E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999997110602222	WITHOUT_CLASSIFICATION	2.8893977781016926E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999997110602222	WITHOUT_CLASSIFICATION	2.8893977781016926E-7	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999999682547858	WITHOUT_CLASSIFICATION	3.1745214232846366E-8	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999957643123746	WITHOUT_CLASSIFICATION	4.235687625381445E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999993387618863	WITHOUT_CLASSIFICATION	6.612381137077014E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999896014769788	WITHOUT_CLASSIFICATION	1.0398523021185661E-5	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999997303594952	WITHOUT_CLASSIFICATION	2.6964050490172073E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999998208104618	WITHOUT_CLASSIFICATION	1.7918953828331783E-7	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999998922925489	WITHOUT_CLASSIFICATION	1.0770745095989083E-7	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999998716385843	WITHOUT_CLASSIFICATION	1.2836141577517334E-7	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999986799977548	WITHOUT_CLASSIFICATION	1.3200022452208446E-6	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999986799977548	WITHOUT_CLASSIFICATION	1.3200022452208446E-6	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999982898898854	WITHOUT_CLASSIFICATION	1.7101101145913645E-6	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999998985377112	WITHOUT_CLASSIFICATION	1.0146228881000918E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999998696662284	WITHOUT_CLASSIFICATION	1.3033377159140754E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999998696662284	WITHOUT_CLASSIFICATION	1.3033377159140754E-6	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999995353643014	WITHOUT_CLASSIFICATION	4.6463569857578374E-7	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999333342076	WITHOUT_CLASSIFICATION	6.666579240911281E-8	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.999998335070445	WITHOUT_CLASSIFICATION	1.664929554990999E-6	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999996249098833	WITHOUT_CLASSIFICATION	3.75090116700151E-7	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999994302741047	WITHOUT_CLASSIFICATION	5.69725895370964E-7	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999995111849443	WITHOUT_CLASSIFICATION	4.888150556256313E-7	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999980674294526	WITHOUT_CLASSIFICATION	1.9325705474362316E-6	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999967722423168	WITHOUT_CLASSIFICATION	3.2277576832549753E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.999999556732254	WITHOUT_CLASSIFICATION	4.432677458575769E-7	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999995821519192	WITHOUT_CLASSIFICATION	4.1784808071793133E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996319392539	WITHOUT_CLASSIFICATION	3.6806074609537446E-7	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999939911279622	WITHOUT_CLASSIFICATION	6.008872037828735E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999998958317564	WITHOUT_CLASSIFICATION	1.0416824352383677E-7	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999996647793966	WITHOUT_CLASSIFICATION	3.3522060334156034E-7	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.99999878625309	WITHOUT_CLASSIFICATION	1.2137469099649265E-6	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.999997882695415	WITHOUT_CLASSIFICATION	2.1173045848798717E-6	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999874916578556	WITHOUT_CLASSIFICATION	1.2508342144369703E-5	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999992993531187	WITHOUT_CLASSIFICATION	7.00646881313838E-7	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999981471192388	WITHOUT_CLASSIFICATION	1.8528807611724911E-6	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999996379244206	WITHOUT_CLASSIFICATION	3.6207557937142297E-7	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999983719638242	WITHOUT_CLASSIFICATION	1.628036175800666E-6	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999999436040615	WITHOUT_CLASSIFICATION	5.639593846709616E-8	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999998465152118	WITHOUT_CLASSIFICATION	1.5348478820094462E-7	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999998863226915	WITHOUT_CLASSIFICATION	1.1367730844128565E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999997189646256	WITHOUT_CLASSIFICATION	2.8103537442971663E-7	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9997359419001882	WITHOUT_CLASSIFICATION	2.6405809981174195E-4	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999999329476125	WITHOUT_CLASSIFICATION	6.705238759575842E-8	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.999999893629201	WITHOUT_CLASSIFICATION	1.063707989136659E-7	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999996386139243	WITHOUT_CLASSIFICATION	3.613860758118734E-7	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.999999991728883	WITHOUT_CLASSIFICATION	8.271117008868378E-9	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999998838440582	WITHOUT_CLASSIFICATION	1.1615594167543663E-7	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999999764349908	WITHOUT_CLASSIFICATION	2.356500920671925E-8	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999976229735	WITHOUT_CLASSIFICATION	2.377026455390302E-9	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999987925637	WITHOUT_CLASSIFICATION	1.2074362388374983E-9	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999984333795658	WITHOUT_CLASSIFICATION	1.5666204341757364E-6	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999998975975911	WITHOUT_CLASSIFICATION	1.0240240887179891E-7	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999993030775906	WITHOUT_CLASSIFICATION	6.969224095701897E-7	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999971608320266	WITHOUT_CLASSIFICATION	2.839167973344868E-6	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999999704067013	WITHOUT_CLASSIFICATION	2.9593298599515952E-8	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999511529739	WITHOUT_CLASSIFICATION	4.884702597540586E-8	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.999999783200196	WITHOUT_CLASSIFICATION	2.1679980396075579E-7	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999767144561	WITHOUT_CLASSIFICATION	2.328554389197472E-8	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999998274581451	WITHOUT_CLASSIFICATION	1.7254185485537816E-7	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999861962551526	WITHOUT_CLASSIFICATION	1.3803744847388904E-5	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.999999498726724	WITHOUT_CLASSIFICATION	5.012732759989576E-7	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999995776037024	WITHOUT_CLASSIFICATION	4.22396297679983E-7	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999959742839706	WITHOUT_CLASSIFICATION	4.0257160294170975E-6	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999999303632081	WITHOUT_CLASSIFICATION	6.963679189624525E-7	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999982528845814	WITHOUT_CLASSIFICATION	1.7471154185973867E-5	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.999999878738581	WITHOUT_CLASSIFICATION	1.21261418981468E-7	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999043087958	WITHOUT_CLASSIFICATION	9.569120421726198E-8	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999996888588336	WITHOUT_CLASSIFICATION	3.111411664073461E-7	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999997457814205	WITHOUT_CLASSIFICATION	2.5421857942805243E-7	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999989859393018	WITHOUT_CLASSIFICATION	1.0140606982219626E-6	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999998372467314	WITHOUT_CLASSIFICATION	1.627532685709523E-7	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999993840686986	WITHOUT_CLASSIFICATION	6.159313014126878E-7	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999983149399724	WITHOUT_CLASSIFICATION	1.6850600275536998E-6	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999990627025203	WITHOUT_CLASSIFICATION	9.372974797643521E-7	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999997245228296	WITHOUT_CLASSIFICATION	2.75477170366853E-7	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999998663415353	WITHOUT_CLASSIFICATION	1.336584646846189E-7	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999998725431114	WITHOUT_CLASSIFICATION	1.2745688863897219E-7	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999998820503587	WITHOUT_CLASSIFICATION	1.179496413069458E-7	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999997889245177	WITHOUT_CLASSIFICATION	2.110754821739046E-7	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999998468808493	WITHOUT_CLASSIFICATION	1.5311915075044713E-7	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999999015244225	WITHOUT_CLASSIFICATION	9.847557744645622E-8	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999993872541938	WITHOUT_CLASSIFICATION	6.127458062299341E-7	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999999094817794	WITHOUT_CLASSIFICATION	9.051822056695172E-8	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999999657798684	WITHOUT_CLASSIFICATION	3.4220131678446044E-8	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999996623681641	WITHOUT_CLASSIFICATION	3.376318359360923E-7	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999998774291976	WITHOUT_CLASSIFICATION	1.2257080237617283E-7	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999999294799821	WITHOUT_CLASSIFICATION	7.05200179708158E-8	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999947927854415	WITHOUT_CLASSIFICATION	5.20721455850406E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999947927854415	WITHOUT_CLASSIFICATION	5.20721455850406E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999985661558499	WITHOUT_CLASSIFICATION	1.433844150060922E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999985661558499	WITHOUT_CLASSIFICATION	1.433844150060922E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999932719618002	WITHOUT_CLASSIFICATION	6.728038199761707E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999932719618002	WITHOUT_CLASSIFICATION	6.728038199761707E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999959708931265	WITHOUT_CLASSIFICATION	4.029106873466191E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999959708931265	WITHOUT_CLASSIFICATION	4.029106873466191E-6	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999980961667423	WITHOUT_CLASSIFICATION	1.9038332576731476E-6	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999990051550656	WITHOUT_CLASSIFICATION	9.948449344576664E-7	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992922559342	WITHOUT_CLASSIFICATION	7.077440658233162E-7	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999904804642483	WITHOUT_CLASSIFICATION	9.519535751661545E-6	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999993359753512	WITHOUT_CLASSIFICATION	6.640246487831477E-7	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999883878094404	WITHOUT_CLASSIFICATION	1.1612190559557786E-5	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999839631607822	WITHOUT_CLASSIFICATION	1.603683921778441E-5	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999997782492182	WITHOUT_CLASSIFICATION	2.2175078189057273E-7	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.999999443877729	WITHOUT_CLASSIFICATION	5.561222711283466E-7	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999980800841913	WITHOUT_CLASSIFICATION	1.919915808770711E-6	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999978762244636	WITHOUT_CLASSIFICATION	2.1237755364512294E-6	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999998137232033	WITHOUT_CLASSIFICATION	1.8627679667916904E-7	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999951575578256	WITHOUT_CLASSIFICATION	4.842442174358547E-6	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999977135828477	WITHOUT_CLASSIFICATION	2.286417152228671E-6	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999996691735246	WITHOUT_CLASSIFICATION	3.3082647545326134E-7	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999898686477805	WITHOUT_CLASSIFICATION	1.0131352219540823E-5	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999939835473	WITHOUT_CLASSIFICATION	6.016452656086518E-9	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999994719493059	WITHOUT_CLASSIFICATION	5.280506941105592E-7	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.999990863371702	WITHOUT_CLASSIFICATION	9.136628297960273E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999985943522922	WITHOUT_CLASSIFICATION	1.4056477078506139E-6	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999994390658682	WITHOUT_CLASSIFICATION	5.609341317144396E-7	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.999998751974459	WITHOUT_CLASSIFICATION	1.2480255410005944E-6	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999997006873669	WITHOUT_CLASSIFICATION	2.9931263318635023E-7	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999976305304653	WITHOUT_CLASSIFICATION	2.3694695347510317E-6	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999969231365377	WITHOUT_CLASSIFICATION	3.0768634623590797E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999971553847055	WITHOUT_CLASSIFICATION	2.844615294472941E-6	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999980795523008	WITHOUT_CLASSIFICATION	1.920447699213119E-6	TEST
// block given	WITHOUT_CLASSIFICATION	0.99999945130055	WITHOUT_CLASSIFICATION	5.48699449965208E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.99999945130055	WITHOUT_CLASSIFICATION	5.48699449965208E-7	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999956385220196	WITHOUT_CLASSIFICATION	4.36147798045325E-6	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999960122567921	WITHOUT_CLASSIFICATION	3.9877432077792564E-6	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999959091776505	WITHOUT_CLASSIFICATION	4.0908223496156E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999990022047105	WITHOUT_CLASSIFICATION	9.977952894682362E-7	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999904994096243	WITHOUT_CLASSIFICATION	9.500590375755194E-6	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999929675590351	WITHOUT_CLASSIFICATION	7.032440964847526E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.999995586198268	WITHOUT_CLASSIFICATION	4.41380173197588E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.999995586198268	WITHOUT_CLASSIFICATION	4.41380173197588E-6	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999983301995603	WITHOUT_CLASSIFICATION	1.6698004396931551E-6	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9995714275032288	WITHOUT_CLASSIFICATION	4.285724967711643E-4	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999987327793484	WITHOUT_CLASSIFICATION	1.2672206516909502E-6	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999987327793484	WITHOUT_CLASSIFICATION	1.2672206516909502E-6	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.999998269926865	WITHOUT_CLASSIFICATION	1.7300731350059212E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999892713218796	WITHOUT_CLASSIFICATION	1.0728678120310104E-5	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999892713218796	WITHOUT_CLASSIFICATION	1.0728678120310104E-5	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999987173081449	WITHOUT_CLASSIFICATION	1.2826918550461034E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999987173081449	WITHOUT_CLASSIFICATION	1.2826918550461034E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999934678003425	WITHOUT_CLASSIFICATION	6.532199657532081E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999934678003425	WITHOUT_CLASSIFICATION	6.532199657532081E-6	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.999994571764576	WITHOUT_CLASSIFICATION	5.428235424057178E-6	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999983291436021	WITHOUT_CLASSIFICATION	1.6708563978992005E-6	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999992823292984	WITHOUT_CLASSIFICATION	7.176707016359617E-7	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999996469036868	WITHOUT_CLASSIFICATION	3.5309631311599446E-7	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999947853891	WITHOUT_CLASSIFICATION	5.214610924066686E-9	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999999748726529	WITHOUT_CLASSIFICATION	2.512734714517466E-8	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999999146402663	WITHOUT_CLASSIFICATION	8.535973369410993E-7	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999999254452666	WITHOUT_CLASSIFICATION	7.455473330885113E-8	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999999146402663	WITHOUT_CLASSIFICATION	8.535973369410993E-7	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.999896540426728	WITHOUT_CLASSIFICATION	1.034595732719398E-4	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999995532263211	WITHOUT_CLASSIFICATION	4.4677367900591354E-7	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999995745641352	WITHOUT_CLASSIFICATION	4.254358647051707E-7	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.999999237604885	WITHOUT_CLASSIFICATION	7.623951151122576E-7	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999997866758938	WITHOUT_CLASSIFICATION	2.1332410614499203E-7	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.999998868678326	WITHOUT_CLASSIFICATION	1.1313216739464154E-6	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999935562951731	WITHOUT_CLASSIFICATION	6.443704826853566E-6	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999979487727862	WITHOUT_CLASSIFICATION	2.0512272136388525E-6	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999943032902	WITHOUT_CLASSIFICATION	5.696709784632108E-9	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.999999988257773	WITHOUT_CLASSIFICATION	1.1742226921194193E-8	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999997831555409	WITHOUT_CLASSIFICATION	2.1684445902642145E-7	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999914417999901	WITHOUT_CLASSIFICATION	8.558200009775721E-6	TEST
// file not given	WITHOUT_CLASSIFICATION	0.999999575695173	WITHOUT_CLASSIFICATION	4.2430482700318685E-7	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999994613588064	WITHOUT_CLASSIFICATION	5.386411936915783E-7	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999997121938698	WITHOUT_CLASSIFICATION	2.878061301582932E-7	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999773411834	WITHOUT_CLASSIFICATION	2.2658816504576447E-8	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999986751499792	WITHOUT_CLASSIFICATION	1.3248500207252959E-6	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999994852216152	WITHOUT_CLASSIFICATION	5.147783848155754E-7	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999990665968111	WITHOUT_CLASSIFICATION	9.334031889582715E-7	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999907734368739	WITHOUT_CLASSIFICATION	9.226563126051797E-6	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999993027747383	WITHOUT_CLASSIFICATION	6.972252616776124E-7	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999999810648514	WITHOUT_CLASSIFICATION	1.8935148608186288E-7	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999998566458886	WITHOUT_CLASSIFICATION	1.4335411132087425E-7	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999997957475057	WITHOUT_CLASSIFICATION	2.042524943947701E-7	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999996898825443	WITHOUT_CLASSIFICATION	3.101174557368099E-7	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999999480841658	WITHOUT_CLASSIFICATION	5.1915834151073335E-8	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999998841754618	WITHOUT_CLASSIFICATION	1.1582453816139565E-7	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999996468301928	WITHOUT_CLASSIFICATION	3.531698072620304E-7	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999572644177	WITHOUT_CLASSIFICATION	4.273558226463192E-8	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.999999850271364	WITHOUT_CLASSIFICATION	1.4972863605313415E-7	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999998826905752	WITHOUT_CLASSIFICATION	1.1730942487529663E-7	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999912697725	WITHOUT_CLASSIFICATION	8.730227619510101E-9	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999940687069	WITHOUT_CLASSIFICATION	5.931293148603884E-9	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999995000402682	WITHOUT_CLASSIFICATION	4.999597318874319E-7	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999282276932	WITHOUT_CLASSIFICATION	7.177230676427625E-8	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999998652114288	WITHOUT_CLASSIFICATION	1.3478857120552107E-7	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999130103148	WITHOUT_CLASSIFICATION	8.698968523788367E-8	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999999784938032	WITHOUT_CLASSIFICATION	2.150619686268792E-8	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999999986022491	WITHOUT_CLASSIFICATION	1.3977508658815778E-9	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999999283994354	WITHOUT_CLASSIFICATION	7.160056458887217E-8	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999865841988	WITHOUT_CLASSIFICATION	1.3415801280479044E-8	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999998615237317	WITHOUT_CLASSIFICATION	1.384762682877576E-7	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999998905525181	WITHOUT_CLASSIFICATION	1.0944748174990745E-7	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.999999918727339	WITHOUT_CLASSIFICATION	8.12726610198016E-8	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999998936059918	WITHOUT_CLASSIFICATION	1.0639400805784046E-7	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999998971166536	WITHOUT_CLASSIFICATION	1.0288334646890809E-7	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999995812520984	WITHOUT_CLASSIFICATION	4.1874790159664167E-7	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999900289006	WITHOUT_CLASSIFICATION	9.971099349525031E-9	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999995970878667	WITHOUT_CLASSIFICATION	4.0291213337223425E-7	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999991812254643	WITHOUT_CLASSIFICATION	8.187745357651397E-7	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999999323874147	WITHOUT_CLASSIFICATION	6.761258525983405E-8	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999997285956648	WITHOUT_CLASSIFICATION	2.7140433520627133E-7	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.999988580001453	WITHOUT_CLASSIFICATION	1.1419998547139394E-5	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999998609454134	WITHOUT_CLASSIFICATION	1.390545866702556E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999998984215458	WITHOUT_CLASSIFICATION	1.0157845426321159E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999998984215458	WITHOUT_CLASSIFICATION	1.0157845426321159E-7	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999980566486368	WITHOUT_CLASSIFICATION	1.943351363178452E-6	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999869735664297	WITHOUT_CLASSIFICATION	1.3026433570182322E-5	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999641822641	WITHOUT_CLASSIFICATION	3.5817735973108946E-8	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999999383767707	WITHOUT_CLASSIFICATION	6.162322935176997E-8	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999999118176451	WITHOUT_CLASSIFICATION	8.818235484678902E-8	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999994090754724	WITHOUT_CLASSIFICATION	5.909245277448635E-7	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.999996522358284	WITHOUT_CLASSIFICATION	3.4776417160133625E-6	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999999887186888	WITHOUT_CLASSIFICATION	1.1281311202327466E-8	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999993254263405	WITHOUT_CLASSIFICATION	6.74573659519309E-7	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999999198092281	WITHOUT_CLASSIFICATION	8.019077194044578E-8	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999829390949	WITHOUT_CLASSIFICATION	1.7060905131751133E-8	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999829390949	WITHOUT_CLASSIFICATION	1.7060905131751133E-8	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999998068604488	WITHOUT_CLASSIFICATION	1.931395513037693E-7	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999999785615377	WITHOUT_CLASSIFICATION	2.1438462342846278E-8	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999977479544105	WITHOUT_CLASSIFICATION	2.2520455895029287E-6	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999990011157428	WITHOUT_CLASSIFICATION	9.988842572042966E-7	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999975285812117	WITHOUT_CLASSIFICATION	2.471418788359249E-6	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.999999927845656	WITHOUT_CLASSIFICATION	7.215434409727456E-8	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999998205885741	WITHOUT_CLASSIFICATION	1.7941142590900303E-6	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999995754760892	WITHOUT_CLASSIFICATION	4.2452391078317205E-7	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999999778780678	WITHOUT_CLASSIFICATION	2.212193223114378E-8	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999996487144982	WITHOUT_CLASSIFICATION	3.51285501780106E-7	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999996283878151	WITHOUT_CLASSIFICATION	3.71612184844361E-7	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999981703839628	WITHOUT_CLASSIFICATION	1.829616037154497E-6	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999999416076875	WITHOUT_CLASSIFICATION	5.839231265892478E-8	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999999416076875	WITHOUT_CLASSIFICATION	5.839231265892478E-8	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999999519983288	WITHOUT_CLASSIFICATION	4.8001671109312004E-8	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999989632569939	WITHOUT_CLASSIFICATION	1.0367430061202612E-6	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999986877372655	WITHOUT_CLASSIFICATION	1.3122627343945389E-6	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999993641222731	WITHOUT_CLASSIFICATION	6.35877726997326E-7	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.99999967772539	WITHOUT_CLASSIFICATION	3.2227460991479E-7	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999997543043766	WITHOUT_CLASSIFICATION	2.4569562337364893E-7	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999961343377184	WITHOUT_CLASSIFICATION	3.865662281640699E-6	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999984354298241	WITHOUT_CLASSIFICATION	1.564570175823457E-6	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999984835815298	WITHOUT_CLASSIFICATION	1.5164184702122174E-6	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999999226185796	WITHOUT_CLASSIFICATION	7.738142036038716E-8	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999977479544105	WITHOUT_CLASSIFICATION	2.2520455895029287E-6	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.999998868177669	WITHOUT_CLASSIFICATION	1.131822331016582E-6	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999991303545407	WITHOUT_CLASSIFICATION	8.696454593015649E-7	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999901998108108	WITHOUT_CLASSIFICATION	9.800189189203159E-6	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.999999985883414	WITHOUT_CLASSIFICATION	1.4116585971929333E-8	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999999330224904	WITHOUT_CLASSIFICATION	6.697750970285632E-8	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999936477996	WITHOUT_CLASSIFICATION	6.352200477393778E-9	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999991752786889	WITHOUT_CLASSIFICATION	8.247213111253557E-7	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999998190390095	WITHOUT_CLASSIFICATION	1.809609904911444E-7	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999997531411382	WITHOUT_CLASSIFICATION	2.4685886181317055E-7	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999998630511956	WITHOUT_CLASSIFICATION	1.3694880442113999E-7	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999996279605825	WITHOUT_CLASSIFICATION	3.720394174936957E-7	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999920957959553	WITHOUT_CLASSIFICATION	7.904204044681627E-6	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999986382075249	WITHOUT_CLASSIFICATION	1.3617924750914787E-6	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999993270136692	WITHOUT_CLASSIFICATION	6.729863307421976E-7	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999892155315399	WITHOUT_CLASSIFICATION	1.078446846017049E-5	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.999999655713333	WITHOUT_CLASSIFICATION	3.442866669095264E-7	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999986915233166	WITHOUT_CLASSIFICATION	1.308476683381105E-6	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999990307774955	WITHOUT_CLASSIFICATION	9.692225044975136E-7	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999946831464688	WITHOUT_CLASSIFICATION	5.316853531168581E-6	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9999985426802488	WITHOUT_CLASSIFICATION	1.4573197512745926E-6	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.999999994167995	WITHOUT_CLASSIFICATION	5.832004976564442E-9	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999986661049988	WITHOUT_CLASSIFICATION	1.3338950011869228E-6	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.999999745965164	WITHOUT_CLASSIFICATION	2.540348358856634E-7	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.999992331610347	WITHOUT_CLASSIFICATION	7.668389653004991E-6	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999993271427389	WITHOUT_CLASSIFICATION	6.728572611715153E-7	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999996751394057	WITHOUT_CLASSIFICATION	3.2486059432658795E-7	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999947456161133	WITHOUT_CLASSIFICATION	5.254383886677666E-6	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999994706784302	WITHOUT_CLASSIFICATION	5.293215697862802E-7	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999990475742656	WITHOUT_CLASSIFICATION	9.524257344158176E-7	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999999705301119	WITHOUT_CLASSIFICATION	2.9469888003284426E-8	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999868638995938	WITHOUT_CLASSIFICATION	1.3136100406244141E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999868638995938	WITHOUT_CLASSIFICATION	1.3136100406244141E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999998799932045	WITHOUT_CLASSIFICATION	1.2000679540351993E-7	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999998951926119	WITHOUT_CLASSIFICATION	1.0480738808448467E-7	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999695087091	WITHOUT_CLASSIFICATION	3.0491290811733496E-8	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999999542567769	WITHOUT_CLASSIFICATION	4.574322307427763E-8	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999943222421673	WITHOUT_CLASSIFICATION	5.677757832589468E-6	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999991466880882	WITHOUT_CLASSIFICATION	8.533119117132631E-7	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999996319392539	WITHOUT_CLASSIFICATION	3.6806074609537446E-7	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999991548756718	WITHOUT_CLASSIFICATION	8.451243282235887E-7	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.999993651729778	WITHOUT_CLASSIFICATION	6.3482702219034675E-6	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999998451934975	WITHOUT_CLASSIFICATION	1.5480650240551132E-7	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999998046405574	WITHOUT_CLASSIFICATION	1.9535944253073868E-7	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999979565474273	WITHOUT_CLASSIFICATION	2.0434525726949036E-6	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999754144895775	WITHOUT_CLASSIFICATION	2.458551042247845E-5	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999043087958	WITHOUT_CLASSIFICATION	9.569120421726198E-8	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999645847009	WITHOUT_CLASSIFICATION	3.541529924431023E-8	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999889941814349	WITHOUT_CLASSIFICATION	1.1005818564993529E-5	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.999999985015978	WITHOUT_CLASSIFICATION	1.4984021967501113E-8	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999326393703	WITHOUT_CLASSIFICATION	6.736062973307673E-8	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999999399567301	WITHOUT_CLASSIFICATION	6.004326988219027E-8	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999941028189274	WITHOUT_CLASSIFICATION	5.897181072578545E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999982388884141	WITHOUT_CLASSIFICATION	1.7611115859764083E-6	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999982388884141	WITHOUT_CLASSIFICATION	1.7611115859764083E-6	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999992763386893	WITHOUT_CLASSIFICATION	7.236613105619021E-7	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999995854670509	WITHOUT_CLASSIFICATION	4.1453294912493365E-7	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999997246259362	WITHOUT_CLASSIFICATION	2.7537406373015186E-7	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999980062807908	WITHOUT_CLASSIFICATION	1.993719209185493E-6	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999974786983541	WITHOUT_CLASSIFICATION	2.521301645921726E-6	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999999694781992	WITHOUT_CLASSIFICATION	3.052180077511588E-8	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999924289453	WITHOUT_CLASSIFICATION	7.571054673735837E-9	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999997138345964	WITHOUT_CLASSIFICATION	2.861654036042665E-7	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999994873223401	WITHOUT_CLASSIFICATION	5.126776598811985E-7	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999998739426691	WITHOUT_CLASSIFICATION	1.2605733090910258E-7	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999988976835468	WITHOUT_CLASSIFICATION	1.102316453274644E-6	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999996531898465	WITHOUT_CLASSIFICATION	3.4681015347719104E-7	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999968408305329	WITHOUT_CLASSIFICATION	3.1591694671330185E-6	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999997890084665	WITHOUT_CLASSIFICATION	2.1099153349399828E-7	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999978915964701	WITHOUT_CLASSIFICATION	2.1084035298982687E-6	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999981594958985	WITHOUT_CLASSIFICATION	1.840504101410789E-6	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999995157193804	WITHOUT_CLASSIFICATION	4.842806195610288E-7	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999994467103765	WITHOUT_CLASSIFICATION	5.532896234865749E-7	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999574069103	WITHOUT_CLASSIFICATION	4.259308977113367E-8	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999984047543916	WITHOUT_CLASSIFICATION	1.5952456083255298E-6	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999999254809054	WITHOUT_CLASSIFICATION	7.451909460670349E-8	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999994326159993	WITHOUT_CLASSIFICATION	5.673840006130463E-7	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999997772931905	WITHOUT_CLASSIFICATION	2.2270680957937951E-7	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999979687510673	WITHOUT_CLASSIFICATION	2.031248932759578E-6	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999988205898733	WITHOUT_CLASSIFICATION	1.1794101266345465E-6	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999998314319224	WITHOUT_CLASSIFICATION	1.6856807762801592E-7	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999503539841823	WITHOUT_CLASSIFICATION	4.96460158177766E-5	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999998219289038	WITHOUT_CLASSIFICATION	1.7807109614824586E-7	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999976103957383	WITHOUT_CLASSIFICATION	2.3896042617615216E-6	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999991790357504	WITHOUT_CLASSIFICATION	8.209642495915919E-7	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999999910982172	WITHOUT_CLASSIFICATION	8.901782764849965E-9	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999975730315476	WITHOUT_CLASSIFICATION	2.426968452305514E-6	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999994884479999	WITHOUT_CLASSIFICATION	5.115520001588438E-7	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.9999896624695471	WITHOUT_CLASSIFICATION	1.0337530452759052E-5	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.999994929406951	WITHOUT_CLASSIFICATION	5.0705930490458735E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999996204803577	WITHOUT_CLASSIFICATION	3.7951964225923155E-7	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999997384844495	WITHOUT_CLASSIFICATION	2.6151555054066656E-7	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999991674504242	WITHOUT_CLASSIFICATION	8.325495758686206E-7	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999997752051589	WITHOUT_CLASSIFICATION	2.2479484101211932E-7	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999999174586715	WITHOUT_CLASSIFICATION	8.254132850738231E-8	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999997779959631	WITHOUT_CLASSIFICATION	2.2200403702918577E-7	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999997253786709	WITHOUT_CLASSIFICATION	2.746213291772889E-7	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999995407984481	WITHOUT_CLASSIFICATION	4.592015518069327E-7	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999998876092479	WITHOUT_CLASSIFICATION	1.1239075210698552E-6	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999957678196553	WITHOUT_CLASSIFICATION	4.232180344723704E-6	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999998876092479	WITHOUT_CLASSIFICATION	1.1239075210698552E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999998984448513	WITHOUT_CLASSIFICATION	1.0155514870043745E-6	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9999964517649925	WITHOUT_CLASSIFICATION	3.5482350074105283E-6	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999996449260969	WITHOUT_CLASSIFICATION	3.550739030613356E-7	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9994843325127718	WITHOUT_CLASSIFICATION	5.156674872280988E-4	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999966670421835	WITHOUT_CLASSIFICATION	3.3329578164458828E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999992318708509	WITHOUT_CLASSIFICATION	7.681291490018994E-7	TEST
// write	WITHOUT_CLASSIFICATION	0.9999983854565978	WITHOUT_CLASSIFICATION	1.6145434021809252E-6	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9996705114084895	WITHOUT_CLASSIFICATION	3.29488591510492E-4	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999994049988511	WITHOUT_CLASSIFICATION	5.950011490039965E-7	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999984419713592	WITHOUT_CLASSIFICATION	1.5580286408164255E-6	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999959164292642	WITHOUT_CLASSIFICATION	4.083570735718401E-6	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999989636823233	WITHOUT_CLASSIFICATION	1.0363176767158467E-6	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999987038848251	WITHOUT_CLASSIFICATION	1.2961151748347757E-6	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999999282142613	WITHOUT_CLASSIFICATION	7.178573870327063E-8	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999661923519578	WITHOUT_CLASSIFICATION	3.3807648042194813E-5	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9998054730171992	WITHOUT_CLASSIFICATION	1.945269828008155E-4	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999692300571	WITHOUT_CLASSIFICATION	3.0769942923562194E-8	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999983367129825	WITHOUT_CLASSIFICATION	1.663287017470308E-6	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999961463301157	WITHOUT_CLASSIFICATION	3.853669884272764E-6	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999962726593108	WITHOUT_CLASSIFICATION	3.7273406893191302E-6	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999996779535519	WITHOUT_CLASSIFICATION	3.220464480532559E-7	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999997317978585	WITHOUT_CLASSIFICATION	2.6820214156286363E-7	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999976048564091	WITHOUT_CLASSIFICATION	2.3951435908675024E-6	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999998499205506	WITHOUT_CLASSIFICATION	1.5007944933821974E-7	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999999457813281	WITHOUT_CLASSIFICATION	5.4218671818154896E-8	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999982334285048	WITHOUT_CLASSIFICATION	1.766571495221989E-6	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999999796263178	WITHOUT_CLASSIFICATION	2.0373682192775453E-7	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999999035975593	WITHOUT_CLASSIFICATION	9.640244059912059E-8	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999759247868	WITHOUT_CLASSIFICATION	2.407521316967444E-8	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999996326299138	WITHOUT_CLASSIFICATION	3.67370086266013E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999691122964217	WITHOUT_CLASSIFICATION	3.088770357818427E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999769767927585	WITHOUT_CLASSIFICATION	2.3023207241401076E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999798083367574	WITHOUT_CLASSIFICATION	2.019166324257427E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999997354500605	WITHOUT_CLASSIFICATION	2.6454993955673725E-7	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999998563368009	WITHOUT_CLASSIFICATION	1.4366319909249395E-7	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999997717376824	WITHOUT_CLASSIFICATION	2.2826231757400354E-7	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999976251497151	WITHOUT_CLASSIFICATION	2.3748502848474463E-6	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999998806000183	WITHOUT_CLASSIFICATION	1.1939998164883355E-7	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999928152375152	WITHOUT_CLASSIFICATION	7.184762484882469E-6	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.999987756815924	WITHOUT_CLASSIFICATION	1.2243184076020903E-5	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999874943338	WITHOUT_CLASSIFICATION	1.2505666064409357E-8	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999981729020081	WITHOUT_CLASSIFICATION	1.8270979919714511E-6	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999193352116	WITHOUT_CLASSIFICATION	8.066478833256975E-8	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.99999886792109	WITHOUT_CLASSIFICATION	1.1320789098683631E-6	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.99999886792109	WITHOUT_CLASSIFICATION	1.1320789098683631E-6	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999992239446398	WITHOUT_CLASSIFICATION	7.760553602383227E-7	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999996358482305	WITHOUT_CLASSIFICATION	3.641517694764218E-7	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999995888865612	WITHOUT_CLASSIFICATION	4.111134388385273E-7	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999989906680228	WITHOUT_CLASSIFICATION	1.0093319772664648E-6	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.999999941920395	WITHOUT_CLASSIFICATION	5.8079604907567005E-8	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999809677991	WITHOUT_CLASSIFICATION	1.903220102251313E-8	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999989214857159	WITHOUT_CLASSIFICATION	1.0785142841331604E-6	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999998717127295	WITHOUT_CLASSIFICATION	1.2828727044355927E-7	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999997114383029	WITHOUT_CLASSIFICATION	2.88561697108504E-7	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999612065601	WITHOUT_CLASSIFICATION	3.879343991017189E-8	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999988966492817	WITHOUT_CLASSIFICATION	1.1033507184292992E-6	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.999999982946141	WITHOUT_CLASSIFICATION	1.7053858927416853E-8	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999994653219877	WITHOUT_CLASSIFICATION	5.346780123915622E-7	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999976878113522	WITHOUT_CLASSIFICATION	2.3121886478660794E-6	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999998616857858	WITHOUT_CLASSIFICATION	1.3831421409691998E-7	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999998819235775	WITHOUT_CLASSIFICATION	1.1807642258068872E-7	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.999999793188231	WITHOUT_CLASSIFICATION	2.0681176910119502E-7	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999998489173654	WITHOUT_CLASSIFICATION	1.510826346168259E-7	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999976346112287	WITHOUT_CLASSIFICATION	2.365388771267876E-6	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999997019419598	WITHOUT_CLASSIFICATION	2.980580402626325E-7	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999877158419624	WITHOUT_CLASSIFICATION	1.228415803748799E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999982991083998	WITHOUT_CLASSIFICATION	1.7008916002060343E-6	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.99999996711029	WITHOUT_CLASSIFICATION	3.2889709996182216E-8	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999999879208764	WITHOUT_CLASSIFICATION	1.2079123655987007E-8	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999858428175517	WITHOUT_CLASSIFICATION	1.4157182448418859E-5	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999793065997	WITHOUT_CLASSIFICATION	2.0693400381636105E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998473611229	WITHOUT_CLASSIFICATION	1.5263887706039496E-7	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999991282103372	WITHOUT_CLASSIFICATION	8.717896628488817E-7	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.999999821704586	WITHOUT_CLASSIFICATION	1.7829541398439709E-7	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999985302391805	WITHOUT_CLASSIFICATION	1.4697608194663178E-6	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999998132944798	WITHOUT_CLASSIFICATION	1.867055201993087E-7	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999989661805102	WITHOUT_CLASSIFICATION	1.0338194898073673E-6	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999555352239	WITHOUT_CLASSIFICATION	4.446477616312735E-8	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999999402292147	WITHOUT_CLASSIFICATION	5.977078540247202E-8	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999998307522152	WITHOUT_CLASSIFICATION	1.6924778483415184E-7	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.999999958177095	WITHOUT_CLASSIFICATION	4.182290504716319E-8	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999832155600453	WITHOUT_CLASSIFICATION	1.6784439954643955E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999770666859477	WITHOUT_CLASSIFICATION	2.293331405229049E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999997564841336	WITHOUT_CLASSIFICATION	2.4351586635601826E-7	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999799815721594	WITHOUT_CLASSIFICATION	2.001842784056243E-5	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999905516433231	WITHOUT_CLASSIFICATION	9.448356676910456E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999998527499815	WITHOUT_CLASSIFICATION	1.4725001841680512E-7	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999978584366201	WITHOUT_CLASSIFICATION	2.1415633799588407E-6	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999998163715372	WITHOUT_CLASSIFICATION	1.8362846267424817E-7	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999985695678486	WITHOUT_CLASSIFICATION	1.430432151303959E-6	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999080496131	WITHOUT_CLASSIFICATION	9.195038691731569E-8	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999224560662	WITHOUT_CLASSIFICATION	7.754393390705163E-8	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999999279935192	WITHOUT_CLASSIFICATION	7.200648076825773E-8	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9999460510183775	WITHOUT_CLASSIFICATION	5.394898162251977E-5	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999990248800313	WITHOUT_CLASSIFICATION	9.75119968707604E-7	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999909587295	WITHOUT_CLASSIFICATION	9.041270608796923E-9	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999995364136114	WITHOUT_CLASSIFICATION	4.6358638865119444E-7	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999288424563	WITHOUT_CLASSIFICATION	7.115754369102728E-8	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999928341701	WITHOUT_CLASSIFICATION	7.165829968880218E-9	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999998973614965	WITHOUT_CLASSIFICATION	1.0263850352110513E-7	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999999513523233	WITHOUT_CLASSIFICATION	4.8647676811340345E-8	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999999549992832	WITHOUT_CLASSIFICATION	4.500071677836584E-8	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999987420123333	WITHOUT_CLASSIFICATION	1.2579876666546533E-6	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999999558934086	WITHOUT_CLASSIFICATION	4.4106591319733475E-8	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999999939959579	WITHOUT_CLASSIFICATION	6.004042095011543E-8	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.999999967871963	WITHOUT_CLASSIFICATION	3.2128037129729055E-8	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999997237754612	WITHOUT_CLASSIFICATION	2.7622453885971914E-7	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999997560495199	WITHOUT_CLASSIFICATION	2.43950480163942E-7	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999264824224	WITHOUT_CLASSIFICATION	7.3517577624691E-8	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.999999711482784	WITHOUT_CLASSIFICATION	2.8851721605886255E-7	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999693379816825	WITHOUT_CLASSIFICATION	3.066201831756142E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999890231815856	WITHOUT_CLASSIFICATION	1.0976818414422625E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999969301245708	WITHOUT_CLASSIFICATION	3.069875429190484E-6	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999953054327965	WITHOUT_CLASSIFICATION	4.694567203513567E-6	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999996639331834	WITHOUT_CLASSIFICATION	3.360668165419511E-7	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999995749891745	WITHOUT_CLASSIFICATION	4.2501082555809947E-7	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.99999954348188	WITHOUT_CLASSIFICATION	4.5651811985459385E-7	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999659310039	WITHOUT_CLASSIFICATION	3.406899600302936E-8	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999855605902609	WITHOUT_CLASSIFICATION	1.4439409739101304E-5	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9999506319768272	WITHOUT_CLASSIFICATION	4.936802317273751E-5	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9999724006158578	WITHOUT_CLASSIFICATION	2.759938414223972E-5	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9999553574542758	WITHOUT_CLASSIFICATION	4.464254572421418E-5	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9999478062922927	WITHOUT_CLASSIFICATION	5.219370770727075E-5	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9999658111354427	WITHOUT_CLASSIFICATION	3.4188864557419625E-5	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9999656853766222	WITHOUT_CLASSIFICATION	3.431462337784112E-5	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9999660330986717	WITHOUT_CLASSIFICATION	3.3966901328324564E-5	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9999662324019779	WITHOUT_CLASSIFICATION	3.376759802213375E-5	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9999619165719005	WITHOUT_CLASSIFICATION	3.808342809955913E-5	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9999600288377705	WITHOUT_CLASSIFICATION	3.997116222962991E-5	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.9999607669521248	WITHOUT_CLASSIFICATION	3.9233047875155414E-5	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9999508920547512	WITHOUT_CLASSIFICATION	4.910794524876669E-5	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9999445596959659	WITHOUT_CLASSIFICATION	5.544030403410671E-5	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.9999601275975628	WITHOUT_CLASSIFICATION	3.987240243715578E-5	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9999603793773328	WITHOUT_CLASSIFICATION	3.9620622667058183E-5	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.999960841944032	WITHOUT_CLASSIFICATION	3.915805596789272E-5	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.9999548686824825	WITHOUT_CLASSIFICATION	4.513131751750764E-5	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.9999022194838022	WITHOUT_CLASSIFICATION	9.778051619778596E-5	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9999434689383324	WITHOUT_CLASSIFICATION	5.653106166759871E-5	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999996475948918	WITHOUT_CLASSIFICATION	3.524051082357868E-7	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999863044922769	WITHOUT_CLASSIFICATION	1.3695507723007146E-5	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999993163045899	WITHOUT_CLASSIFICATION	6.836954101399121E-7	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999998030410573	WITHOUT_CLASSIFICATION	1.9695894275317403E-7	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999990673871224	WITHOUT_CLASSIFICATION	9.326128774466787E-7	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999999732484955	WITHOUT_CLASSIFICATION	2.6751504368211764E-8	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999999710337067	WITHOUT_CLASSIFICATION	2.896629321274112E-8	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999997342681864	WITHOUT_CLASSIFICATION	2.657318134882463E-7	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999128891279	WITHOUT_CLASSIFICATION	8.711087201248225E-8	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999989008769922	WITHOUT_CLASSIFICATION	1.0991230077979697E-6	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9801636242464846	WITHOUT_CLASSIFICATION	0.019836375753515326	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999996214881092	WITHOUT_CLASSIFICATION	3.7851189082685884E-7	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999982234236854	WITHOUT_CLASSIFICATION	1.7765763146710239E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.999999634106636	WITHOUT_CLASSIFICATION	3.6589336403988903E-7	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.999999634106636	WITHOUT_CLASSIFICATION	3.6589336403988903E-7	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999998991736613	WITHOUT_CLASSIFICATION	1.0082633879615746E-7	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999980431811557	WITHOUT_CLASSIFICATION	1.9568188443526755E-6	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999926480446	WITHOUT_CLASSIFICATION	7.351955470162103E-9	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999997114270621	WITHOUT_CLASSIFICATION	2.885729377813857E-7	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.999999997770757	WITHOUT_CLASSIFICATION	2.229242907593723E-9	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999959528906762	WITHOUT_CLASSIFICATION	4.0471093237140935E-6	TEST
// sign	WITHOUT_CLASSIFICATION	0.9999985499837201	WITHOUT_CLASSIFICATION	1.4500162799071036E-6	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999999055302284	WITHOUT_CLASSIFICATION	9.446977160203423E-8	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999999037546715	WITHOUT_CLASSIFICATION	9.62453284212097E-8	TEST
// base	WITHOUT_CLASSIFICATION	0.9999984586594073	WITHOUT_CLASSIFICATION	1.5413405927678307E-6	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999318541869074	WITHOUT_CLASSIFICATION	6.814581309265475E-5	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999998910816152	WITHOUT_CLASSIFICATION	1.0891838471988201E-7	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9999923315577929	WITHOUT_CLASSIFICATION	7.668442207164678E-6	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999996993722031	WITHOUT_CLASSIFICATION	3.0062779689669614E-7	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999998109919023	WITHOUT_CLASSIFICATION	1.8900809772037969E-7	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.999986257950763	WITHOUT_CLASSIFICATION	1.3742049237072493E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999982139149934	WITHOUT_CLASSIFICATION	1.786085006640146E-6	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999998384443789	WITHOUT_CLASSIFICATION	1.6155562122541836E-7	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999988656203377	WITHOUT_CLASSIFICATION	1.1343796622333491E-6	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999885267205271	WITHOUT_CLASSIFICATION	1.1473279472870017E-5	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999996130532994	WITHOUT_CLASSIFICATION	3.8694670059916575E-7	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.999999998375575	WITHOUT_CLASSIFICATION	1.6244250002297066E-9	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999967912673963	WITHOUT_CLASSIFICATION	3.2087326036213267E-6	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.999999452241215	WITHOUT_CLASSIFICATION	5.477587849777741E-7	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999377023775	WITHOUT_CLASSIFICATION	6.229762258432034E-8	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.999998588203674	WITHOUT_CLASSIFICATION	1.4117963259885218E-6	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.999999875883148	WITHOUT_CLASSIFICATION	1.2411685210426178E-7	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999998772701456	WITHOUT_CLASSIFICATION	1.227298543867204E-7	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999975050340487	WITHOUT_CLASSIFICATION	2.4949659512590524E-6	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.999996453420397	WITHOUT_CLASSIFICATION	3.546579602971602E-6	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999986375720247	WITHOUT_CLASSIFICATION	1.362427975334054E-6	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999990951345481	WITHOUT_CLASSIFICATION	9.048654517575972E-7	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999968016096009	WITHOUT_CLASSIFICATION	3.1983903991111275E-6	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999978848841258	WITHOUT_CLASSIFICATION	2.1151158742219803E-6	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999995842395697	WITHOUT_CLASSIFICATION	4.157604302509451E-7	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999993431015834	WITHOUT_CLASSIFICATION	6.568984165542879E-7	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999983750231699	WITHOUT_CLASSIFICATION	1.6249768301193414E-6	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999493206004	WITHOUT_CLASSIFICATION	5.067939954575341E-8	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999999108655737	WITHOUT_CLASSIFICATION	8.9134426259689E-8	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999829510982	WITHOUT_CLASSIFICATION	1.7048901805950103E-8	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999996007742222	WITHOUT_CLASSIFICATION	3.9922577775961956E-7	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999998141245641	WITHOUT_CLASSIFICATION	1.8587543582304E-7	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999999053593844	WITHOUT_CLASSIFICATION	9.464061559132829E-8	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999969794937442	WITHOUT_CLASSIFICATION	3.0205062557089637E-6	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999969794937442	WITHOUT_CLASSIFICATION	3.0205062557089637E-6	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999999369951732	WITHOUT_CLASSIFICATION	6.3004826830256E-8	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.999999860399702	WITHOUT_CLASSIFICATION	1.396002980661066E-7	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999990714554455	WITHOUT_CLASSIFICATION	9.285445546035059E-7	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999991486438995	WITHOUT_CLASSIFICATION	8.513561004027678E-7	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.999975772718215	WITHOUT_CLASSIFICATION	2.4227281784912038E-5	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999998072918607	WITHOUT_CLASSIFICATION	1.9270813939645354E-7	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999999369112839	WITHOUT_CLASSIFICATION	6.308871611337035E-8	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999795493430176	WITHOUT_CLASSIFICATION	2.0450656982418618E-5	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999996507154909	WITHOUT_CLASSIFICATION	3.492845090376662E-7	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999987895631527	WITHOUT_CLASSIFICATION	1.2104368472970689E-6	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999992068992287	WITHOUT_CLASSIFICATION	7.931007713630312E-7	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999995340523538	WITHOUT_CLASSIFICATION	4.659476462444555E-7	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999937411462936	WITHOUT_CLASSIFICATION	6.2588537064316335E-6	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999964721081627	WITHOUT_CLASSIFICATION	3.527891837398423E-6	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9994913125672408	WITHOUT_CLASSIFICATION	5.086874327593224E-4	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999987804479901	WITHOUT_CLASSIFICATION	1.2195520099176565E-6	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999755337619667	WITHOUT_CLASSIFICATION	2.446623803334226E-5	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.999999411334442	WITHOUT_CLASSIFICATION	5.886655579742893E-7	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.999995137344365	WITHOUT_CLASSIFICATION	4.862655635074876E-6	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999982528845814	WITHOUT_CLASSIFICATION	1.7471154185973867E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999570133369	WITHOUT_CLASSIFICATION	4.298666314954529E-8	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999570133369	WITHOUT_CLASSIFICATION	4.298666314954529E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997685283717	WITHOUT_CLASSIFICATION	2.314716282683295E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997685283717	WITHOUT_CLASSIFICATION	2.314716282683295E-7	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999998740545484	WITHOUT_CLASSIFICATION	1.2594545163492804E-7	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999996097859203	WITHOUT_CLASSIFICATION	3.902140797335587E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999976816270043	WITHOUT_CLASSIFICATION	2.318372995722802E-6	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999992969802701	WITHOUT_CLASSIFICATION	7.030197299006338E-7	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999992823292984	WITHOUT_CLASSIFICATION	7.176707016359617E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999610394297	WITHOUT_CLASSIFICATION	3.896057032748006E-8	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.999996362110011	WITHOUT_CLASSIFICATION	3.6378899890948503E-6	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999989852672233	WITHOUT_CLASSIFICATION	1.0147327766953123E-6	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999989621018616	WITHOUT_CLASSIFICATION	1.0378981384594411E-6	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999993329362902	WITHOUT_CLASSIFICATION	6.670637098319013E-7	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999992380372773	WITHOUT_CLASSIFICATION	7.619627227568095E-7	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999999124873631	WITHOUT_CLASSIFICATION	8.75126369380528E-8	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.999999507589569	WITHOUT_CLASSIFICATION	4.924104309444411E-7	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9997745624380912	WITHOUT_CLASSIFICATION	2.254375619088595E-4	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999996075314891	WITHOUT_CLASSIFICATION	3.9246851101852966E-7	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999990611816252	WITHOUT_CLASSIFICATION	9.388183749534099E-7	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999946410136925	WITHOUT_CLASSIFICATION	5.35898630743078E-6	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999994387238408	WITHOUT_CLASSIFICATION	5.612761593297709E-7	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.99999228800375	WITHOUT_CLASSIFICATION	7.711996250042834E-6	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999981091033328	WITHOUT_CLASSIFICATION	1.8908966671737994E-6	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.999998634492878	WITHOUT_CLASSIFICATION	1.3655071220321876E-6	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999998868383423	WITHOUT_CLASSIFICATION	1.1316165773140378E-7	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.999998957634061	WITHOUT_CLASSIFICATION	1.042365939048779E-6	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999999796263178	WITHOUT_CLASSIFICATION	2.0373682192775453E-7	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999809677991	WITHOUT_CLASSIFICATION	1.903220102251313E-8	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999996605128242	WITHOUT_CLASSIFICATION	3.394871758194741E-7	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999560253107	WITHOUT_CLASSIFICATION	4.397468935879233E-8	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999998562362136	WITHOUT_CLASSIFICATION	1.437637864649546E-7	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999994021855302	WITHOUT_CLASSIFICATION	5.97814469769192E-7	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999999150062575	WITHOUT_CLASSIFICATION	8.499374243446123E-8	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999999150062575	WITHOUT_CLASSIFICATION	8.499374243446123E-8	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999770919076	WITHOUT_CLASSIFICATION	2.2908092335473188E-8	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999994150944855	WITHOUT_CLASSIFICATION	5.849055144973219E-7	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.999999820519685	WITHOUT_CLASSIFICATION	1.7948031508656957E-7	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999998559015617	WITHOUT_CLASSIFICATION	1.440984382598354E-7	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.999999997747007	WITHOUT_CLASSIFICATION	2.2529930448099366E-9	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999998199790301	WITHOUT_CLASSIFICATION	1.8002096994438656E-7	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999997996727076	WITHOUT_CLASSIFICATION	2.0032729237033894E-7	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999999941391818	WITHOUT_CLASSIFICATION	5.8608181698253424E-9	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999995742144958	WITHOUT_CLASSIFICATION	4.2578550419491615E-7	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999994888292923	WITHOUT_CLASSIFICATION	5.111707075935141E-7	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999987417500422	WITHOUT_CLASSIFICATION	1.2582499577967407E-6	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999999802925926	WITHOUT_CLASSIFICATION	1.9707407353325947E-8	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999995911128228	WITHOUT_CLASSIFICATION	4.088871772099133E-7	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999992304231036	WITHOUT_CLASSIFICATION	7.695768964654145E-7	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999071781868	WITHOUT_CLASSIFICATION	9.282181323495652E-8	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992922559342	WITHOUT_CLASSIFICATION	7.077440658233162E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999957174637704	WITHOUT_CLASSIFICATION	4.2825362296966085E-6	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999999905302231	WITHOUT_CLASSIFICATION	9.469776902570961E-8	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999999840927641	WITHOUT_CLASSIFICATION	1.5907235874530883E-8	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9998044722360183	WITHOUT_CLASSIFICATION	1.955277639816322E-4	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999997157968644	WITHOUT_CLASSIFICATION	2.8420313553833746E-7	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999989256123305	WITHOUT_CLASSIFICATION	1.07438766954296E-6	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999680598451404	WITHOUT_CLASSIFICATION	3.194015485955049E-5	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.99999854964055	WITHOUT_CLASSIFICATION	1.4503594499819332E-6	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999996002064839	WITHOUT_CLASSIFICATION	3.997935160336127E-7	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999998028701429	WITHOUT_CLASSIFICATION	1.9712985709892937E-7	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999993589895576	WITHOUT_CLASSIFICATION	6.410104423824329E-7	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999989207608153	WITHOUT_CLASSIFICATION	1.0792391846136892E-6	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.999999900977823	WITHOUT_CLASSIFICATION	9.902217707785414E-8	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999986117730569	WITHOUT_CLASSIFICATION	1.3882269431341915E-6	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999999687860505	WITHOUT_CLASSIFICATION	3.121394961231455E-8	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999990255754733	WITHOUT_CLASSIFICATION	9.744245268022041E-7	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999982317415862	WITHOUT_CLASSIFICATION	1.7682584138796519E-6	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9999980364810704	WITHOUT_CLASSIFICATION	1.963518929610317E-6	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999959945832751	WITHOUT_CLASSIFICATION	4.005416724856743E-6	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999999728299028	WITHOUT_CLASSIFICATION	2.7170097205335774E-8	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999940604301447	WITHOUT_CLASSIFICATION	5.939569855284146E-6	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999939349108533	WITHOUT_CLASSIFICATION	6.065089146697177E-6	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999999016089033	WITHOUT_CLASSIFICATION	9.83910967823285E-8	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.999999101609535	WITHOUT_CLASSIFICATION	8.983904650202997E-7	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999565557313	WITHOUT_CLASSIFICATION	4.3444268698540165E-8	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999999718540545	WITHOUT_CLASSIFICATION	2.814594549936326E-8	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999993523046222	WITHOUT_CLASSIFICATION	6.476953777354078E-7	TEST
// while	WITHOUT_CLASSIFICATION	0.9999981617347854	WITHOUT_CLASSIFICATION	1.8382652145524782E-6	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999236491981188	WITHOUT_CLASSIFICATION	7.63508018811143E-5	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999998933398656	WITHOUT_CLASSIFICATION	1.0666013428586342E-7	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999994896304142	WITHOUT_CLASSIFICATION	5.103695857454988E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999824268785	WITHOUT_CLASSIFICATION	1.7573121526920168E-8	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999999422407572	WITHOUT_CLASSIFICATION	5.775924287567969E-8	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999997640925735	WITHOUT_CLASSIFICATION	2.3590742644246032E-7	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999655424420612	WITHOUT_CLASSIFICATION	3.445755793883533E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999662166453404	WITHOUT_CLASSIFICATION	3.378335465966996E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999684293533627	WITHOUT_CLASSIFICATION	3.1570646637215546E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999742805018026	WITHOUT_CLASSIFICATION	2.571949819738683E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.999992032115234	WITHOUT_CLASSIFICATION	7.967884766088819E-6	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.99997938658102	WITHOUT_CLASSIFICATION	2.0613418980068898E-5	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999898725086485	WITHOUT_CLASSIFICATION	1.0127491351586058E-5	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999996546003935	WITHOUT_CLASSIFICATION	3.4539960640901353E-7	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999908914279547	WITHOUT_CLASSIFICATION	9.10857204537243E-6	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999996322918511	WITHOUT_CLASSIFICATION	3.6770814900202707E-7	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999076704831455	WITHOUT_CLASSIFICATION	9.232951685443383E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999655424420612	WITHOUT_CLASSIFICATION	3.445755793883533E-5	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999684293533627	WITHOUT_CLASSIFICATION	3.1570646637215546E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999662166453404	WITHOUT_CLASSIFICATION	3.378335465966996E-5	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999681975708132	WITHOUT_CLASSIFICATION	3.1802429186748056E-5	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.999979714893922	WITHOUT_CLASSIFICATION	2.0285106077993686E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999901727220853	WITHOUT_CLASSIFICATION	9.82727791470548E-6	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999996101661796	WITHOUT_CLASSIFICATION	3.8983382043730107E-7	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999996269631827	WITHOUT_CLASSIFICATION	3.730368173067536E-7	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999984797991821	WITHOUT_CLASSIFICATION	1.5202008178003635E-6	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999973900741846	WITHOUT_CLASSIFICATION	2.6099258153040644E-6	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999992228724425	WITHOUT_CLASSIFICATION	7.771275575734075E-7	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999988378368709	WITHOUT_CLASSIFICATION	1.1621631290943663E-6	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999999270816811	WITHOUT_CLASSIFICATION	7.291831892021303E-8	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999999466300035	WITHOUT_CLASSIFICATION	5.336999651988787E-8	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999999859890205	WITHOUT_CLASSIFICATION	1.4010979580844308E-8	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999985353580241	WITHOUT_CLASSIFICATION	1.4646419759038179E-6	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999990515687379	WITHOUT_CLASSIFICATION	9.484312619568124E-7	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.999999951224288	WITHOUT_CLASSIFICATION	4.8775712059242735E-8	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999982567027736	WITHOUT_CLASSIFICATION	1.7432972264406174E-6	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999986919904843	WITHOUT_CLASSIFICATION	1.3080095156127111E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999988472346615	WITHOUT_CLASSIFICATION	1.1527653385822863E-6	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999988472346615	WITHOUT_CLASSIFICATION	1.1527653385822863E-6	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999996218306728	WITHOUT_CLASSIFICATION	3.781693272196832E-7	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999995819037768	WITHOUT_CLASSIFICATION	4.1809622323695903E-7	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999991897702961	WITHOUT_CLASSIFICATION	8.102297038059893E-7	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999844754381019	WITHOUT_CLASSIFICATION	1.5524561898181117E-5	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999995668772692	WITHOUT_CLASSIFICATION	4.3312273075012095E-7	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.999999933329367	WITHOUT_CLASSIFICATION	6.66706329964183E-8	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999999593900983	WITHOUT_CLASSIFICATION	4.06099016103916E-8	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999996016803417	WITHOUT_CLASSIFICATION	3.983196583317696E-7	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999997660921632	WITHOUT_CLASSIFICATION	2.3390783681212115E-7	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999834941031	WITHOUT_CLASSIFICATION	1.6505896944978536E-8	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999998983693721	WITHOUT_CLASSIFICATION	1.016306279256611E-7	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999922874853614	WITHOUT_CLASSIFICATION	7.712514638669847E-6	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999998239023121	WITHOUT_CLASSIFICATION	1.760976879028618E-7	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999996211080208	WITHOUT_CLASSIFICATION	3.7889197921531896E-7	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999996338566856	WITHOUT_CLASSIFICATION	3.6614331437475197E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999996879717988	WITHOUT_CLASSIFICATION	3.1202820121076266E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.999999915385209	WITHOUT_CLASSIFICATION	8.461479091090235E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999018326674	WITHOUT_CLASSIFICATION	9.816733267096491E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999018326674	WITHOUT_CLASSIFICATION	9.816733267096491E-8	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9999964298954664	WITHOUT_CLASSIFICATION	3.5701045335195537E-6	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999958923248397	WITHOUT_CLASSIFICATION	4.107675160400544E-6	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999837718891003	WITHOUT_CLASSIFICATION	1.6228110899712707E-5	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999966355387732	WITHOUT_CLASSIFICATION	3.3644612268604083E-6	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999999328449797	WITHOUT_CLASSIFICATION	6.715502041633258E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999018326674	WITHOUT_CLASSIFICATION	9.816733267096491E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999018326674	WITHOUT_CLASSIFICATION	9.816733267096491E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999871423852	WITHOUT_CLASSIFICATION	1.2857614723236453E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999871423852	WITHOUT_CLASSIFICATION	1.2857614723236453E-8	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999957207477831	WITHOUT_CLASSIFICATION	4.279252216940758E-6	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999962969594202	WITHOUT_CLASSIFICATION	3.703040579833177E-6	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999999148623792	WITHOUT_CLASSIFICATION	8.51376208564257E-8	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999998536188	WITHOUT_CLASSIFICATION	1.4638120008583305E-7	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999999977377934	WITHOUT_CLASSIFICATION	2.262206590964225E-8	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999999977377934	WITHOUT_CLASSIFICATION	2.262206590964225E-8	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999998665969846	WITHOUT_CLASSIFICATION	1.3340301536017677E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999983815293207	WITHOUT_CLASSIFICATION	1.6184706792258468E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999952448539385	WITHOUT_CLASSIFICATION	4.755146061443057E-6	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.999999304085123	WITHOUT_CLASSIFICATION	6.959148769159034E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999986674005	WITHOUT_CLASSIFICATION	1.3325995063115037E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999993002527147	WITHOUT_CLASSIFICATION	6.997472853077902E-7	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999995958018046	WITHOUT_CLASSIFICATION	4.0419819529153524E-7	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999998657857283	WITHOUT_CLASSIFICATION	1.3421427164944982E-7	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999995240204703	WITHOUT_CLASSIFICATION	4.7597952966438913E-7	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999712280573	WITHOUT_CLASSIFICATION	2.8771942738183522E-8	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999814558485866	WITHOUT_CLASSIFICATION	1.8544151413399726E-5	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999999152882435	WITHOUT_CLASSIFICATION	8.471175649745325E-8	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999993596629471	WITHOUT_CLASSIFICATION	6.403370529364002E-7	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999998684133864	WITHOUT_CLASSIFICATION	1.3158661355293972E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999996879717988	WITHOUT_CLASSIFICATION	3.1202820121076266E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999018326674	WITHOUT_CLASSIFICATION	9.816733267096491E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999871423852	WITHOUT_CLASSIFICATION	1.2857614723236453E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999993002527147	WITHOUT_CLASSIFICATION	6.997472853077902E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999986557303827	WITHOUT_CLASSIFICATION	1.3442696173496145E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999986557303827	WITHOUT_CLASSIFICATION	1.3442696173496145E-6	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999998620362947	WITHOUT_CLASSIFICATION	1.3796370534409215E-7	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999998415754854	WITHOUT_CLASSIFICATION	1.5842451464636595E-7	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999558137379	WITHOUT_CLASSIFICATION	4.4186262141554095E-8	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999943801712	WITHOUT_CLASSIFICATION	5.6198288374952345E-9	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999983813906627	WITHOUT_CLASSIFICATION	1.6186093373757973E-6	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999995316510403	WITHOUT_CLASSIFICATION	4.683489596348371E-7	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999990519683742	WITHOUT_CLASSIFICATION	9.480316257696979E-7	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999944883173767	WITHOUT_CLASSIFICATION	5.511682623409425E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999689674982	WITHOUT_CLASSIFICATION	3.103250184311907E-8	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999998512221133	WITHOUT_CLASSIFICATION	1.4877788654308962E-7	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999988790766472	WITHOUT_CLASSIFICATION	1.120923352852271E-6	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999916253388	WITHOUT_CLASSIFICATION	8.37466123775834E-9	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999998671497358	WITHOUT_CLASSIFICATION	1.3285026420952004E-7	TEST
// element set	WITHOUT_CLASSIFICATION	0.999999915385209	WITHOUT_CLASSIFICATION	8.461479091090235E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999871423852	WITHOUT_CLASSIFICATION	1.2857614723236453E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999983815293207	WITHOUT_CLASSIFICATION	1.6184706792258468E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999952448539385	WITHOUT_CLASSIFICATION	4.755146061443057E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999952448539385	WITHOUT_CLASSIFICATION	4.755146061443057E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999986674005	WITHOUT_CLASSIFICATION	1.3325995063115037E-8	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999993002527147	WITHOUT_CLASSIFICATION	6.997472853077902E-7	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999993002527147	WITHOUT_CLASSIFICATION	6.997472853077902E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999986557303827	WITHOUT_CLASSIFICATION	1.3442696173496145E-6	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999993846762893	WITHOUT_CLASSIFICATION	6.153237105547511E-7	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999987522883671	WITHOUT_CLASSIFICATION	1.247711632969775E-6	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999998006848584	WITHOUT_CLASSIFICATION	1.9931514154380216E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.99997097602663	WITHOUT_CLASSIFICATION	2.9023973369966537E-5	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999979170726444	WITHOUT_CLASSIFICATION	2.082927355535899E-6	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999836435630239	WITHOUT_CLASSIFICATION	1.635643697600957E-5	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999996006155699	WITHOUT_CLASSIFICATION	3.9938443003196903E-7	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999733616957	WITHOUT_CLASSIFICATION	2.663830432687788E-8	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999998221387165	WITHOUT_CLASSIFICATION	1.7786128347295226E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999983815293207	WITHOUT_CLASSIFICATION	1.6184706792258468E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999952448539385	WITHOUT_CLASSIFICATION	4.755146061443057E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999952448539385	WITHOUT_CLASSIFICATION	4.755146061443057E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999986674005	WITHOUT_CLASSIFICATION	1.3325995063115037E-8	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999944883173767	WITHOUT_CLASSIFICATION	5.511682623409425E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999998512221133	WITHOUT_CLASSIFICATION	1.4877788654308962E-7	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9993623479826187	WITHOUT_CLASSIFICATION	6.376520173813049E-4	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999995597659348	WITHOUT_CLASSIFICATION	4.402340651768009E-7	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999967209783093	WITHOUT_CLASSIFICATION	3.2790216906377938E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999967209783093	WITHOUT_CLASSIFICATION	3.2790216906377938E-6	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.999999719708632	WITHOUT_CLASSIFICATION	2.80291368082273E-7	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999990463169419	WITHOUT_CLASSIFICATION	9.53683058069734E-7	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999940469810451	WITHOUT_CLASSIFICATION	5.95301895483738E-6	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999999927655476	WITHOUT_CLASSIFICATION	7.234452396611725E-8	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999994733200708	WITHOUT_CLASSIFICATION	5.2667992935423E-7	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999994733200708	WITHOUT_CLASSIFICATION	5.2667992935423E-7	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999996935436127	WITHOUT_CLASSIFICATION	3.0645638726560235E-7	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999996935436127	WITHOUT_CLASSIFICATION	3.0645638726560235E-7	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999363308513	WITHOUT_CLASSIFICATION	6.36691488148485E-8	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999363308513	WITHOUT_CLASSIFICATION	6.36691488148485E-8	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999990440724787	WITHOUT_CLASSIFICATION	9.559275212810707E-7	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999996790143489	WITHOUT_CLASSIFICATION	3.2098565098206743E-7	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999874991394884	WITHOUT_CLASSIFICATION	1.2500860511644578E-5	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999998692167279	WITHOUT_CLASSIFICATION	1.307832720792681E-7	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999999656295275	WITHOUT_CLASSIFICATION	3.437047253370077E-8	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999959929531875	WITHOUT_CLASSIFICATION	4.007046812461343E-6	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999980283943879	WITHOUT_CLASSIFICATION	1.9716056120494882E-6	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999940796963936	WITHOUT_CLASSIFICATION	5.9203036063196936E-6	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999586614997528	WITHOUT_CLASSIFICATION	4.133850024729051E-5	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999527522982711	WITHOUT_CLASSIFICATION	4.72477017289323E-5	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999999421746356	WITHOUT_CLASSIFICATION	5.782536448215236E-8	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999999487008611	WITHOUT_CLASSIFICATION	5.129913891722756E-8	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999984550037454	WITHOUT_CLASSIFICATION	1.5449962544909708E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999980726189905	WITHOUT_CLASSIFICATION	1.9273810094481927E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999980726189905	WITHOUT_CLASSIFICATION	1.9273810094481927E-6	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999980515675359	WITHOUT_CLASSIFICATION	1.9484324642112922E-6	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999610394297	WITHOUT_CLASSIFICATION	3.896057032748006E-8	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999987973738834	WITHOUT_CLASSIFICATION	1.2026261166385945E-6	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999550926972	WITHOUT_CLASSIFICATION	4.490730283306089E-8	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999995832404323	WITHOUT_CLASSIFICATION	4.167595678053174E-7	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999998033544383	WITHOUT_CLASSIFICATION	1.9664556166828387E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999998659826902	WITHOUT_CLASSIFICATION	1.3401730969783885E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999999863329749	WITHOUT_CLASSIFICATION	1.3667025105782623E-7	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999736637669	WITHOUT_CLASSIFICATION	2.6336233056083226E-8	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999652748346	WITHOUT_CLASSIFICATION	3.472516551034401E-8	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999068295484	WITHOUT_CLASSIFICATION	9.317045148347512E-8	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999988488859801	WITHOUT_CLASSIFICATION	1.1511140199688568E-6	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999997011985355	WITHOUT_CLASSIFICATION	2.988014645130588E-7	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999964507071148	WITHOUT_CLASSIFICATION	3.5492928851003827E-6	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999889759621439	WITHOUT_CLASSIFICATION	1.1024037856144624E-5	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999981455788666	WITHOUT_CLASSIFICATION	1.8544211333886186E-6	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9999993287515342	WITHOUT_CLASSIFICATION	6.712484659049799E-7	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999999367860144	WITHOUT_CLASSIFICATION	6.321398557285783E-8	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999996495030036	WITHOUT_CLASSIFICATION	3.504969963947707E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999996495030036	WITHOUT_CLASSIFICATION	3.504969963947707E-7	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999999516559811	WITHOUT_CLASSIFICATION	4.8344018842617734E-8	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999911412664573	WITHOUT_CLASSIFICATION	8.858733542701928E-6	TEST
//[]	WITHOUT_CLASSIFICATION	0.999796136944857	WITHOUT_CLASSIFICATION	2.0386305514306132E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.999796136944857	WITHOUT_CLASSIFICATION	2.0386305514306132E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.999997783384487	WITHOUT_CLASSIFICATION	2.216615513032307E-6	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999937499348018	WITHOUT_CLASSIFICATION	6.250065198132584E-6	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999709836855891	WITHOUT_CLASSIFICATION	2.9016314410822374E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999981458847147	WITHOUT_CLASSIFICATION	1.8541152852944133E-5	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999996483000608	WITHOUT_CLASSIFICATION	3.5169993922584646E-7	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.999999932030933	WITHOUT_CLASSIFICATION	6.796906709133177E-8	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.999999932030933	WITHOUT_CLASSIFICATION	6.796906709133177E-8	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999933698811	WITHOUT_CLASSIFICATION	6.630118995183311E-9	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.999999612205156	WITHOUT_CLASSIFICATION	3.877948440850223E-7	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999999018456956	WITHOUT_CLASSIFICATION	9.815430438086558E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999928383505128	WITHOUT_CLASSIFICATION	7.1616494871443046E-6	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999911412664573	WITHOUT_CLASSIFICATION	8.858733542701928E-6	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999867349835707	WITHOUT_CLASSIFICATION	1.326501642933388E-5	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999973616447685	WITHOUT_CLASSIFICATION	2.6383552314444805E-6	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999973616447685	WITHOUT_CLASSIFICATION	2.6383552314444805E-6	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999998357133809	WITHOUT_CLASSIFICATION	1.642866190912635E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999689399582	WITHOUT_CLASSIFICATION	3.106004172580432E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999689399582	WITHOUT_CLASSIFICATION	3.106004172580432E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998560542267	WITHOUT_CLASSIFICATION	1.439457733235762E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998560542267	WITHOUT_CLASSIFICATION	1.439457733235762E-7	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999998560542267	WITHOUT_CLASSIFICATION	1.439457733235762E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999689399582	WITHOUT_CLASSIFICATION	3.106004172580432E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999689399582	WITHOUT_CLASSIFICATION	3.106004172580432E-8	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999998357133809	WITHOUT_CLASSIFICATION	1.642866190912635E-6	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.999999946842827	WITHOUT_CLASSIFICATION	5.31571730455721E-8	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999997815743866	WITHOUT_CLASSIFICATION	2.184256133405894E-7	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999995942033498	WITHOUT_CLASSIFICATION	4.057966502435391E-7	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999988566219387	WITHOUT_CLASSIFICATION	1.1433780613035324E-6	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999388329391	WITHOUT_CLASSIFICATION	6.116706091309044E-8	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999990970272602	WITHOUT_CLASSIFICATION	9.029727398783125E-7	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999992120477132	WITHOUT_CLASSIFICATION	7.879522867170693E-7	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999673324466	WITHOUT_CLASSIFICATION	3.2667553360750305E-8	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999068295484	WITHOUT_CLASSIFICATION	9.317045148347512E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999689399582	WITHOUT_CLASSIFICATION	3.106004172580432E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999689399582	WITHOUT_CLASSIFICATION	3.106004172580432E-8	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999764715314	WITHOUT_CLASSIFICATION	2.3528468678655745E-8	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999998040980059	WITHOUT_CLASSIFICATION	1.9590199404425684E-7	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999986925416658	WITHOUT_CLASSIFICATION	1.3074583341520818E-6	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999996258680219	WITHOUT_CLASSIFICATION	3.741319780991011E-7	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999997087765671	WITHOUT_CLASSIFICATION	2.9122343285310474E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999153393961	WITHOUT_CLASSIFICATION	8.466060392153374E-8	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999664385635	WITHOUT_CLASSIFICATION	3.356143648948317E-8	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999396168228	WITHOUT_CLASSIFICATION	6.038317729063893E-8	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999996095880656	WITHOUT_CLASSIFICATION	3.904119343528072E-7	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999629047532	WITHOUT_CLASSIFICATION	3.709524677216212E-8	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999750445533369	WITHOUT_CLASSIFICATION	2.4955446663133808E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.999995039475335	WITHOUT_CLASSIFICATION	4.960524665116799E-6	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999997596914605	WITHOUT_CLASSIFICATION	2.40308539539932E-7	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999997036167991	WITHOUT_CLASSIFICATION	2.963832009138574E-7	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.999999992765771	WITHOUT_CLASSIFICATION	7.234229022632543E-9	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999970903869944	WITHOUT_CLASSIFICATION	2.909613005678162E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999970903869944	WITHOUT_CLASSIFICATION	2.909613005678162E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999970903869944	WITHOUT_CLASSIFICATION	2.909613005678162E-6	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.999999911636359	WITHOUT_CLASSIFICATION	8.836364097815942E-8	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999703883168	WITHOUT_CLASSIFICATION	2.9611683308671186E-8	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999999760533098	WITHOUT_CLASSIFICATION	2.3946690288468452E-8	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999998993903592	WITHOUT_CLASSIFICATION	1.0060964082733258E-7	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999998977574226	WITHOUT_CLASSIFICATION	1.022425773616956E-7	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999992086218594	WITHOUT_CLASSIFICATION	7.913781405943647E-7	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999995877477	WITHOUT_CLASSIFICATION	4.12252351913446E-10	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999984768404705	WITHOUT_CLASSIFICATION	1.5231595295061176E-6	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999999326577604	WITHOUT_CLASSIFICATION	6.73422394941299E-8	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999994223485709	WITHOUT_CLASSIFICATION	5.776514291044349E-7	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999954873492389	WITHOUT_CLASSIFICATION	4.512650761064955E-6	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999993064759987	WITHOUT_CLASSIFICATION	6.935240014283604E-7	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999933698811	WITHOUT_CLASSIFICATION	6.630118995183311E-9	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999689399582	WITHOUT_CLASSIFICATION	3.106004172580432E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999689399582	WITHOUT_CLASSIFICATION	3.106004172580432E-8	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999998357133809	WITHOUT_CLASSIFICATION	1.642866190912635E-6	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999990970272602	WITHOUT_CLASSIFICATION	9.029727398783125E-7	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999998040980059	WITHOUT_CLASSIFICATION	1.9590199404425684E-7	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999996258680219	WITHOUT_CLASSIFICATION	3.741319780991011E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999153393961	WITHOUT_CLASSIFICATION	8.466060392153374E-8	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999986925416658	WITHOUT_CLASSIFICATION	1.3074583341520818E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999664385635	WITHOUT_CLASSIFICATION	3.356143648948317E-8	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999629047532	WITHOUT_CLASSIFICATION	3.709524677216212E-8	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999996095880656	WITHOUT_CLASSIFICATION	3.904119343528072E-7	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.999995039475335	WITHOUT_CLASSIFICATION	4.960524665116799E-6	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999998081038817	WITHOUT_CLASSIFICATION	1.918961182904884E-7	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999997287727076	WITHOUT_CLASSIFICATION	2.712272923944422E-7	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999997456379992	WITHOUT_CLASSIFICATION	2.543620008682464E-7	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999565453537	WITHOUT_CLASSIFICATION	4.345464641335108E-8	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999996528315969	WITHOUT_CLASSIFICATION	3.4716840317301456E-7	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999989251861024	WITHOUT_CLASSIFICATION	1.0748138975144111E-6	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999990588399641	WITHOUT_CLASSIFICATION	9.411600358169502E-7	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999949292627343	WITHOUT_CLASSIFICATION	5.070737265779031E-6	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999992051370914	WITHOUT_CLASSIFICATION	7.948629084608701E-7	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999401789176	WITHOUT_CLASSIFICATION	5.982108240845339E-8	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999998926741713	WITHOUT_CLASSIFICATION	1.0732582856973733E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999494660924	WITHOUT_CLASSIFICATION	5.05339075842919E-8	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979490436092	WITHOUT_CLASSIFICATION	2.050956390805985E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999991446643431	WITHOUT_CLASSIFICATION	8.553356568800875E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.99999998948431	WITHOUT_CLASSIFICATION	1.0515689974877193E-8	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999995735859711	WITHOUT_CLASSIFICATION	4.2641402891241745E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999953827100886	WITHOUT_CLASSIFICATION	4.617289911462087E-6	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999996756996172	WITHOUT_CLASSIFICATION	3.243003827005528E-7	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999701891623	WITHOUT_CLASSIFICATION	2.9810837633956653E-8	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.999999803161949	WITHOUT_CLASSIFICATION	1.9683805097401415E-7	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999998825727628	WITHOUT_CLASSIFICATION	1.1742723721491347E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999505766295	WITHOUT_CLASSIFICATION	4.942337043487792E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999505766295	WITHOUT_CLASSIFICATION	4.942337043487792E-8	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999997066127555	WITHOUT_CLASSIFICATION	2.933872444788162E-7	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999843273382	WITHOUT_CLASSIFICATION	1.5672661843312287E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999228502906354	WITHOUT_CLASSIFICATION	7.714970936454364E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999228502906354	WITHOUT_CLASSIFICATION	7.714970936454364E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999228502906354	WITHOUT_CLASSIFICATION	7.714970936454364E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999381290743438	WITHOUT_CLASSIFICATION	6.187092565627077E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999381290743438	WITHOUT_CLASSIFICATION	6.187092565627077E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999381290743438	WITHOUT_CLASSIFICATION	6.187092565627077E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999381290743438	WITHOUT_CLASSIFICATION	6.187092565627077E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998212531355628	WITHOUT_CLASSIFICATION	1.7874686443717212E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998212531355628	WITHOUT_CLASSIFICATION	1.7874686443717212E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998212531355628	WITHOUT_CLASSIFICATION	1.7874686443717212E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998753770514566	WITHOUT_CLASSIFICATION	1.246229485434288E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998753770514566	WITHOUT_CLASSIFICATION	1.246229485434288E-4	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9998234709040225	WITHOUT_CLASSIFICATION	1.7652909597758786E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9998983523212631	WITHOUT_CLASSIFICATION	1.0164767873689157E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999843273382	WITHOUT_CLASSIFICATION	1.5672661843312287E-8	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999298974043	WITHOUT_CLASSIFICATION	7.01025956520171E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999228502906354	WITHOUT_CLASSIFICATION	7.714970936454364E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999228502906354	WITHOUT_CLASSIFICATION	7.714970936454364E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999381290743438	WITHOUT_CLASSIFICATION	6.187092565627077E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999381290743438	WITHOUT_CLASSIFICATION	6.187092565627077E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999381290743438	WITHOUT_CLASSIFICATION	6.187092565627077E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998212531355628	WITHOUT_CLASSIFICATION	1.7874686443717212E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998212531355628	WITHOUT_CLASSIFICATION	1.7874686443717212E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9998753770514566	WITHOUT_CLASSIFICATION	1.246229485434288E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9998983523212631	WITHOUT_CLASSIFICATION	1.0164767873689157E-4	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999416412114	WITHOUT_CLASSIFICATION	5.835878870293811E-8	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999416412114	WITHOUT_CLASSIFICATION	5.835878870293811E-8	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999237737177	WITHOUT_CLASSIFICATION	7.622628234861764E-8	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999237737177	WITHOUT_CLASSIFICATION	7.622628234861764E-8	TEST
// invoke	WITHOUT_CLASSIFICATION	0.999998513827953	WITHOUT_CLASSIFICATION	1.486172047031979E-6	TEST
// invoke	WITHOUT_CLASSIFICATION	0.999998513827953	WITHOUT_CLASSIFICATION	1.486172047031979E-6	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999998346697162	WITHOUT_CLASSIFICATION	1.653302837871589E-7	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999538352414	WITHOUT_CLASSIFICATION	4.616475862920947E-8	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999538352414	WITHOUT_CLASSIFICATION	4.616475862920947E-8	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999998757182548	WITHOUT_CLASSIFICATION	1.2428174515936102E-7	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999998757182548	WITHOUT_CLASSIFICATION	1.2428174515936102E-7	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999998898631718	WITHOUT_CLASSIFICATION	1.101368282727293E-7	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999998469432869	WITHOUT_CLASSIFICATION	1.5305671319597016E-7	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999998469432869	WITHOUT_CLASSIFICATION	1.5305671319597016E-7	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999998582088936	WITHOUT_CLASSIFICATION	1.4179110632818698E-7	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.999999854210572	WITHOUT_CLASSIFICATION	1.457894280517401E-7	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999998934105502	WITHOUT_CLASSIFICATION	1.0658944985432564E-7	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999381290743438	WITHOUT_CLASSIFICATION	6.187092565627077E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999381290743438	WITHOUT_CLASSIFICATION	6.187092565627077E-5	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999998582088936	WITHOUT_CLASSIFICATION	1.4179110632818698E-7	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999998141250456	WITHOUT_CLASSIFICATION	1.8587495439957388E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999994842320873	WITHOUT_CLASSIFICATION	5.157679127101678E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999994842320873	WITHOUT_CLASSIFICATION	5.157679127101678E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999994842320873	WITHOUT_CLASSIFICATION	5.157679127101678E-7	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.999999851844759	WITHOUT_CLASSIFICATION	1.481552410032303E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.9999983103588314	WITHOUT_CLASSIFICATION	1.6896411686849931E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999983001922178	WITHOUT_CLASSIFICATION	1.6998077822039756E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999983001922178	WITHOUT_CLASSIFICATION	1.6998077822039756E-6	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999997461046685	WITHOUT_CLASSIFICATION	2.538953315963704E-7	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.999999358481956	WITHOUT_CLASSIFICATION	6.415180439912012E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999994197072744	WITHOUT_CLASSIFICATION	5.802927255703463E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999989932762446	WITHOUT_CLASSIFICATION	1.0067237553863035E-6	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999997999666267	WITHOUT_CLASSIFICATION	2.0003337316358086E-7	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.99999985073169	WITHOUT_CLASSIFICATION	1.4926831007846783E-7	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.99999985073169	WITHOUT_CLASSIFICATION	1.4926831007846783E-7	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999999848302934	WITHOUT_CLASSIFICATION	1.516970665401547E-8	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9998559224895907	WITHOUT_CLASSIFICATION	1.4407751040941455E-4	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9998559224895907	WITHOUT_CLASSIFICATION	1.4407751040941455E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999381290743438	WITHOUT_CLASSIFICATION	6.187092565627077E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999994842320873	WITHOUT_CLASSIFICATION	5.157679127101678E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.9999983103588314	WITHOUT_CLASSIFICATION	1.6896411686849931E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999983001922178	WITHOUT_CLASSIFICATION	1.6998077822039756E-6	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999997461046685	WITHOUT_CLASSIFICATION	2.538953315963704E-7	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.999999358481956	WITHOUT_CLASSIFICATION	6.415180439912012E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999994197072744	WITHOUT_CLASSIFICATION	5.802927255703463E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9999989932762446	WITHOUT_CLASSIFICATION	1.0067237553863035E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9998559224895907	WITHOUT_CLASSIFICATION	1.4407751040941455E-4	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999991548267422	WITHOUT_CLASSIFICATION	8.451732579388323E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999991435270535	WITHOUT_CLASSIFICATION	8.564729463859939E-7	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999997297402433	WITHOUT_CLASSIFICATION	2.702597567122224E-7	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999999044106609	WITHOUT_CLASSIFICATION	9.558933913966448E-8	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.999999712471443	WITHOUT_CLASSIFICATION	2.875285569972689E-7	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999976736559998	WITHOUT_CLASSIFICATION	2.3263440002057E-6	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999996228037988	WITHOUT_CLASSIFICATION	3.7719620124924416E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999996228037988	WITHOUT_CLASSIFICATION	3.7719620124924416E-7	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999995934902206	WITHOUT_CLASSIFICATION	4.065097792990366E-7	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999995781336478	WITHOUT_CLASSIFICATION	4.2186635217117213E-7	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999998250889058	WITHOUT_CLASSIFICATION	1.749110942207656E-7	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999996711285378	WITHOUT_CLASSIFICATION	3.288714622178514E-7	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999996403436425	WITHOUT_CLASSIFICATION	3.5965635736650396E-7	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999996403436425	WITHOUT_CLASSIFICATION	3.5965635736650396E-7	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999994557376469	WITHOUT_CLASSIFICATION	5.442623530712936E-7	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999993009481538	WITHOUT_CLASSIFICATION	6.990518461914311E-7	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999999771749704	WITHOUT_CLASSIFICATION	2.2825029606243415E-7	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999999771749704	WITHOUT_CLASSIFICATION	2.2825029606243415E-7	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999982169181701	WITHOUT_CLASSIFICATION	1.7830818298723592E-6	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999997891036578	WITHOUT_CLASSIFICATION	2.108963422848021E-7	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999997999666267	WITHOUT_CLASSIFICATION	2.0003337316358086E-7	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999996570550327	WITHOUT_CLASSIFICATION	3.429449673586426E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999999897949093	WITHOUT_CLASSIFICATION	1.0205090693824922E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999994917535912	WITHOUT_CLASSIFICATION	5.082464088591373E-7	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999998617183646	WITHOUT_CLASSIFICATION	1.3828163536944334E-7	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999995351662697	WITHOUT_CLASSIFICATION	4.6483373036040303E-7	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999996626210716	WITHOUT_CLASSIFICATION	3.373789283811987E-7	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999849338344	WITHOUT_CLASSIFICATION	1.506616562525408E-8	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999998831257688	WITHOUT_CLASSIFICATION	1.1687423121419786E-7	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999999982959972	WITHOUT_CLASSIFICATION	1.704002803081746E-8	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999999982959972	WITHOUT_CLASSIFICATION	1.704002803081746E-8	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999999718592003	WITHOUT_CLASSIFICATION	2.8140799704741983E-7	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999999718592003	WITHOUT_CLASSIFICATION	2.8140799704741983E-7	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999785286676	WITHOUT_CLASSIFICATION	2.147133235621034E-8	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998987611021	WITHOUT_CLASSIFICATION	1.0123889796059945E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998987611021	WITHOUT_CLASSIFICATION	1.0123889796059945E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998987611021	WITHOUT_CLASSIFICATION	1.0123889796059945E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999987866310687	WITHOUT_CLASSIFICATION	1.2133689312794401E-6	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999998512235981	WITHOUT_CLASSIFICATION	1.487764018637286E-7	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999998512235981	WITHOUT_CLASSIFICATION	1.487764018637286E-7	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999998831700738	WITHOUT_CLASSIFICATION	1.1682992612672758E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.99999991674617	WITHOUT_CLASSIFICATION	8.325383009598228E-8	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999997625828635	WITHOUT_CLASSIFICATION	2.374171363956398E-7	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999997714862118	WITHOUT_CLASSIFICATION	2.285137882149436E-7	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999997120341964	WITHOUT_CLASSIFICATION	2.8796580367822285E-7	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999990086289049	WITHOUT_CLASSIFICATION	9.913710951513142E-7	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999363197519887	WITHOUT_CLASSIFICATION	6.368024801136475E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979490436092	WITHOUT_CLASSIFICATION	2.050956390805985E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979490436092	WITHOUT_CLASSIFICATION	2.050956390805985E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999987866310687	WITHOUT_CLASSIFICATION	1.2133689312794401E-6	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999998831700738	WITHOUT_CLASSIFICATION	1.1682992612672758E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999997566141589	WITHOUT_CLASSIFICATION	2.433858411310572E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.99999991674617	WITHOUT_CLASSIFICATION	8.325383009598228E-8	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999997625828635	WITHOUT_CLASSIFICATION	2.374171363956398E-7	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999336256016	WITHOUT_CLASSIFICATION	6.637439842341849E-8	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999994263843008	WITHOUT_CLASSIFICATION	5.736156991901233E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999978545918041	WITHOUT_CLASSIFICATION	2.145408195778784E-6	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9998885497489338	WITHOUT_CLASSIFICATION	1.1145025106626485E-4	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999986802935268	WITHOUT_CLASSIFICATION	1.3197064731613495E-6	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999563549694	WITHOUT_CLASSIFICATION	4.364503053669947E-8	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999999758503546	WITHOUT_CLASSIFICATION	2.4149645407888974E-8	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999336256016	WITHOUT_CLASSIFICATION	6.637439842341849E-8	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999596258378975	WITHOUT_CLASSIFICATION	4.0374162102555686E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999596258378975	WITHOUT_CLASSIFICATION	4.0374162102555686E-5	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999978378870532	WITHOUT_CLASSIFICATION	2.16211294691089E-6	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999999785345616	WITHOUT_CLASSIFICATION	2.146543837062232E-8	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999940746588115	WITHOUT_CLASSIFICATION	5.925341188557785E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999967982682914	WITHOUT_CLASSIFICATION	3.201731708543467E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.999998424769752	WITHOUT_CLASSIFICATION	1.5752302481259646E-6	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999996441098343	WITHOUT_CLASSIFICATION	3.558901657239074E-7	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999998567993471	WITHOUT_CLASSIFICATION	1.4320065287836792E-7	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999998918432131	WITHOUT_CLASSIFICATION	1.0815678683789173E-7	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999079913129	WITHOUT_CLASSIFICATION	9.200868706640434E-8	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999995314264634	WITHOUT_CLASSIFICATION	4.685735365959967E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999986822481317	WITHOUT_CLASSIFICATION	1.3177518683271423E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999967982682914	WITHOUT_CLASSIFICATION	3.201731708543467E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.999998424769752	WITHOUT_CLASSIFICATION	1.5752302481259646E-6	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999999787586658	WITHOUT_CLASSIFICATION	2.1241334314894698E-8	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999993031444391	WITHOUT_CLASSIFICATION	6.968555608137817E-7	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999990761228565	WITHOUT_CLASSIFICATION	9.238771434875013E-7	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999962626427739	WITHOUT_CLASSIFICATION	3.7373572262162624E-6	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.99999806306843	WITHOUT_CLASSIFICATION	1.9369315699753717E-6	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999930427149122	WITHOUT_CLASSIFICATION	6.957285087754796E-6	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9997992680912375	WITHOUT_CLASSIFICATION	2.0073190876249787E-4	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999989529839169	WITHOUT_CLASSIFICATION	1.04701608302706E-6	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999980919944771	WITHOUT_CLASSIFICATION	1.908005522886508E-6	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999897705045137	WITHOUT_CLASSIFICATION	1.0229495486412579E-5	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999980871126416	WITHOUT_CLASSIFICATION	1.912887358393261E-6	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9999777397585944	WITHOUT_CLASSIFICATION	2.2260241405548648E-5	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.999999916588433	WITHOUT_CLASSIFICATION	8.341156701846487E-8	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999997155809082	WITHOUT_CLASSIFICATION	2.844190918228459E-7	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999967334654076	WITHOUT_CLASSIFICATION	3.266534592357265E-6	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999423368503	WITHOUT_CLASSIFICATION	5.7663149699234264E-8	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999833756245055	WITHOUT_CLASSIFICATION	1.6624375494530582E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999994100441433	WITHOUT_CLASSIFICATION	5.899558566949863E-7	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999544121705	WITHOUT_CLASSIFICATION	4.558782946269516E-8	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999997041588636	WITHOUT_CLASSIFICATION	2.9584113638018224E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999833756245055	WITHOUT_CLASSIFICATION	1.6624375494530582E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999994100441433	WITHOUT_CLASSIFICATION	5.899558566949863E-7	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999544121705	WITHOUT_CLASSIFICATION	4.558782946269516E-8	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999997314543188	WITHOUT_CLASSIFICATION	2.6854568125234986E-7	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999482589407	WITHOUT_CLASSIFICATION	5.1741059348589946E-8	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999999800266867	WITHOUT_CLASSIFICATION	1.9973313350205782E-8	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999981934756893	WITHOUT_CLASSIFICATION	1.8065243106818307E-6	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999982482319458	WITHOUT_CLASSIFICATION	1.7517680541296476E-6	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999998664354555	WITHOUT_CLASSIFICATION	1.3356454452452394E-7	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999999867450066	WITHOUT_CLASSIFICATION	1.3254993455121154E-8	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999999855717754	WITHOUT_CLASSIFICATION	1.442822466300594E-8	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999997070130174	WITHOUT_CLASSIFICATION	2.929869826239395E-7	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999995523296653	WITHOUT_CLASSIFICATION	4.476703347695845E-7	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9972724437379578	WITHOUT_CLASSIFICATION	0.0027275562620422142	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999996700820937	WITHOUT_CLASSIFICATION	3.2991790625183746E-7	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999997436855228	WITHOUT_CLASSIFICATION	2.563144772421322E-7	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999998225196836	WITHOUT_CLASSIFICATION	1.774803165137359E-7	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9993403047527997	WITHOUT_CLASSIFICATION	6.596952472002256E-4	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.999998892879952	WITHOUT_CLASSIFICATION	1.107120047868979E-6	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999999699872021	WITHOUT_CLASSIFICATION	3.001279793800293E-8	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999994776069607	WITHOUT_CLASSIFICATION	5.223930393158874E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999995519483111	WITHOUT_CLASSIFICATION	4.480516888926705E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999993736921348	WITHOUT_CLASSIFICATION	6.263078652146306E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999995009060345	WITHOUT_CLASSIFICATION	4.990939654857187E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999994486153493	WITHOUT_CLASSIFICATION	5.513846507097178E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999994486153493	WITHOUT_CLASSIFICATION	5.513846507097178E-7	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999990412306087	WITHOUT_CLASSIFICATION	9.587693913713755E-7	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999990412306087	WITHOUT_CLASSIFICATION	9.587693913713755E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999993893553043	WITHOUT_CLASSIFICATION	6.106446957990469E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999993893553043	WITHOUT_CLASSIFICATION	6.106446957990469E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999997676444763	WITHOUT_CLASSIFICATION	2.3235552376906725E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999636533907	WITHOUT_CLASSIFICATION	3.634660915636793E-8	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999452184077	WITHOUT_CLASSIFICATION	5.4781592322853116E-8	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999993825561854	WITHOUT_CLASSIFICATION	6.174438145409512E-7	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999996086877581	WITHOUT_CLASSIFICATION	3.913122419717544E-7	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999136561554	WITHOUT_CLASSIFICATION	8.634384459029559E-8	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999998929984513	WITHOUT_CLASSIFICATION	1.0700154864242971E-7	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999997705776646	WITHOUT_CLASSIFICATION	2.2942233542630805E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979490436092	WITHOUT_CLASSIFICATION	2.050956390805985E-6	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999997676444763	WITHOUT_CLASSIFICATION	2.3235552376906725E-7	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999636533907	WITHOUT_CLASSIFICATION	3.634660915636793E-8	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999452184077	WITHOUT_CLASSIFICATION	5.4781592322853116E-8	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999996086877581	WITHOUT_CLASSIFICATION	3.913122419717544E-7	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999136561554	WITHOUT_CLASSIFICATION	8.634384459029559E-8	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999991693715785	WITHOUT_CLASSIFICATION	8.306284215425691E-7	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999999264907216	WITHOUT_CLASSIFICATION	7.350927845248492E-8	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999987938221859	WITHOUT_CLASSIFICATION	1.206177814084777E-6	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999987938221859	WITHOUT_CLASSIFICATION	1.206177814084777E-6	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999992540210373	WITHOUT_CLASSIFICATION	7.459789626676738E-7	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998899340815	WITHOUT_CLASSIFICATION	1.1006591840185754E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999994092234934	WITHOUT_CLASSIFICATION	5.907765065175438E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999997267497714	WITHOUT_CLASSIFICATION	2.7325022852051627E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999997267497714	WITHOUT_CLASSIFICATION	2.7325022852051627E-7	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999992542784452	WITHOUT_CLASSIFICATION	7.457215547156774E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999985448151528	WITHOUT_CLASSIFICATION	1.4551848471763061E-6	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999997702042815	WITHOUT_CLASSIFICATION	2.2979571851266525E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999998628382386	WITHOUT_CLASSIFICATION	1.371617613804835E-7	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999715196953	WITHOUT_CLASSIFICATION	2.8480304753477892E-8	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999991446643431	WITHOUT_CLASSIFICATION	8.553356568800875E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.99999998948431	WITHOUT_CLASSIFICATION	1.0515689974877193E-8	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999995735859711	WITHOUT_CLASSIFICATION	4.2641402891241745E-7	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999953827100886	WITHOUT_CLASSIFICATION	4.617289911462087E-6	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.999999803161949	WITHOUT_CLASSIFICATION	1.9683805097401415E-7	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999998825727628	WITHOUT_CLASSIFICATION	1.1742723721491347E-7	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999992542784452	WITHOUT_CLASSIFICATION	7.457215547156774E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999985448151528	WITHOUT_CLASSIFICATION	1.4551848471763061E-6	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999998628382386	WITHOUT_CLASSIFICATION	1.371617613804835E-7	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999742277104	WITHOUT_CLASSIFICATION	2.577228969634835E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999994092234934	WITHOUT_CLASSIFICATION	5.907765065175438E-7	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999994092234934	WITHOUT_CLASSIFICATION	5.907765065175438E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999986822481317	WITHOUT_CLASSIFICATION	1.3177518683271423E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999986822481317	WITHOUT_CLASSIFICATION	1.3177518683271423E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999996379804601	WITHOUT_CLASSIFICATION	3.6201953994367467E-7	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999996379804601	WITHOUT_CLASSIFICATION	3.6201953994367467E-7	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999997995989877	WITHOUT_CLASSIFICATION	2.0040101231987653E-7	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999999239446317	WITHOUT_CLASSIFICATION	7.60553683510492E-8	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999998667256322	WITHOUT_CLASSIFICATION	1.3327436781449382E-7	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999974015227948	WITHOUT_CLASSIFICATION	2.5984772053131133E-6	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999991785755733	WITHOUT_CLASSIFICATION	8.214244267517398E-7	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999992430852025	WITHOUT_CLASSIFICATION	7.56914797508329E-7	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999992150344457	WITHOUT_CLASSIFICATION	7.84965554380866E-7	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999998962758181	WITHOUT_CLASSIFICATION	1.0372418188672705E-7	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999999262251086	WITHOUT_CLASSIFICATION	7.377489142230168E-8	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999999199024531	WITHOUT_CLASSIFICATION	8.009754683870713E-8	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999996724661179	WITHOUT_CLASSIFICATION	3.2753388211706453E-7	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999998773627597	WITHOUT_CLASSIFICATION	1.226372402386427E-7	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999995032719141	WITHOUT_CLASSIFICATION	4.967280858267492E-7	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999122498945	WITHOUT_CLASSIFICATION	8.77501055014509E-8	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999996838447034	WITHOUT_CLASSIFICATION	3.161552966452691E-7	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999987275369743	WITHOUT_CLASSIFICATION	1.272463025747509E-6	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999993003384606	WITHOUT_CLASSIFICATION	6.996615394374686E-7	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999999444526431	WITHOUT_CLASSIFICATION	5.554735699716017E-8	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999999864662554	WITHOUT_CLASSIFICATION	1.3533744484910998E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.99999998948431	WITHOUT_CLASSIFICATION	1.0515689974877193E-8	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999953827100886	WITHOUT_CLASSIFICATION	4.617289911462087E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999505766295	WITHOUT_CLASSIFICATION	4.942337043487792E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999983001922178	WITHOUT_CLASSIFICATION	1.6998077822039756E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999983001922178	WITHOUT_CLASSIFICATION	1.6998077822039756E-6	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999742277104	WITHOUT_CLASSIFICATION	2.577228969634835E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999994092234934	WITHOUT_CLASSIFICATION	5.907765065175438E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999986822481317	WITHOUT_CLASSIFICATION	1.3177518683271423E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999996379804601	WITHOUT_CLASSIFICATION	3.6201953994367467E-7	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999996932295518	WITHOUT_CLASSIFICATION	3.067704480851448E-7	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999953679511377	WITHOUT_CLASSIFICATION	4.6320488622545E-6	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999996373261174	WITHOUT_CLASSIFICATION	3.6267388267367776E-7	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999997349753191	WITHOUT_CLASSIFICATION	2.6502468086565656E-7	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999080021692	WITHOUT_CLASSIFICATION	9.1997830711896E-8	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999080021692	WITHOUT_CLASSIFICATION	9.1997830711896E-8	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999997114575828	WITHOUT_CLASSIFICATION	2.8854241723984426E-7	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999998520294711	WITHOUT_CLASSIFICATION	1.4797052902370015E-7	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.999999889047252	WITHOUT_CLASSIFICATION	1.1095274787990828E-7	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999998054344154	WITHOUT_CLASSIFICATION	1.9456558457800202E-7	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999998699427399	WITHOUT_CLASSIFICATION	1.300572602003144E-7	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999998699427399	WITHOUT_CLASSIFICATION	1.300572602003144E-7	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.999999503502372	WITHOUT_CLASSIFICATION	4.964976280001813E-7	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999998138359273	WITHOUT_CLASSIFICATION	1.8616407278262419E-7	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999995669994352	WITHOUT_CLASSIFICATION	4.330005649323399E-7	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999971137440621	WITHOUT_CLASSIFICATION	2.8862559378609814E-6	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999985614434005	WITHOUT_CLASSIFICATION	1.4385565995474085E-6	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999472097311	WITHOUT_CLASSIFICATION	5.279026903297032E-8	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999972671101894	WITHOUT_CLASSIFICATION	2.7328898106318817E-6	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.999999945596073	WITHOUT_CLASSIFICATION	5.440392696450291E-8	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999988810169518	WITHOUT_CLASSIFICATION	1.1189830482744509E-6	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9939522111495753	WITHOUT_CLASSIFICATION	0.0060477888504247195	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999998541685751	WITHOUT_CLASSIFICATION	1.4583142498102488E-7	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999924937289821	WITHOUT_CLASSIFICATION	7.506271017861303E-6	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999987878067	WITHOUT_CLASSIFICATION	1.2121933619695197E-9	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999998963477039	WITHOUT_CLASSIFICATION	1.036522960243795E-7	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999452970386209	WITHOUT_CLASSIFICATION	5.470296137911469E-5	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999995713680503	WITHOUT_CLASSIFICATION	4.2863194967957344E-7	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999964564703124	WITHOUT_CLASSIFICATION	3.5435296876706123E-6	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.999999884585828	WITHOUT_CLASSIFICATION	1.1541417207729477E-7	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999939542604106	WITHOUT_CLASSIFICATION	6.045739589402248E-6	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999992857069351	WITHOUT_CLASSIFICATION	7.142930649507502E-7	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999975012612308	WITHOUT_CLASSIFICATION	2.498738769286281E-6	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999998278719604	WITHOUT_CLASSIFICATION	1.7212803962290732E-7	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999998278719604	WITHOUT_CLASSIFICATION	1.7212803962290732E-7	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999999548982712	WITHOUT_CLASSIFICATION	4.510172872837624E-8	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999997973343047	WITHOUT_CLASSIFICATION	2.0266569536654276E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999999863329749	WITHOUT_CLASSIFICATION	1.3667025105782623E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999999863329749	WITHOUT_CLASSIFICATION	1.3667025105782623E-7	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999981716092576	WITHOUT_CLASSIFICATION	1.8283907424089331E-6	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999994191413504	WITHOUT_CLASSIFICATION	5.808586496763654E-7	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999891115971973	WITHOUT_CLASSIFICATION	1.088840280267349E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999765721219	WITHOUT_CLASSIFICATION	2.3427878197314393E-8	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999765721219	WITHOUT_CLASSIFICATION	2.3427878197314393E-8	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999998828361051	WITHOUT_CLASSIFICATION	1.1716389494903259E-7	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999710566063	WITHOUT_CLASSIFICATION	2.8943393628320285E-8	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999918732512	WITHOUT_CLASSIFICATION	8.126748818340998E-9	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999999616918175	WITHOUT_CLASSIFICATION	3.830818250999931E-8	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999999746163853	WITHOUT_CLASSIFICATION	2.5383614587910537E-8	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999998682099654	WITHOUT_CLASSIFICATION	1.317900345617694E-7	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999998605760207	WITHOUT_CLASSIFICATION	1.3942397923808632E-7	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.999994928184707	WITHOUT_CLASSIFICATION	5.0718152929606144E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999995978833177	WITHOUT_CLASSIFICATION	4.02116682382784E-7	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999997777042994	WITHOUT_CLASSIFICATION	2.2229570066503115E-7	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.999997631393747	WITHOUT_CLASSIFICATION	2.3686062531083895E-6	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999992083019749	WITHOUT_CLASSIFICATION	7.916980251089778E-7	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999998306776952	WITHOUT_CLASSIFICATION	1.6932230477312647E-7	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999996235764993	WITHOUT_CLASSIFICATION	3.764235007327281E-7	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.999998943060225	WITHOUT_CLASSIFICATION	1.0569397750095331E-6	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999998960301302	WITHOUT_CLASSIFICATION	1.0396986972702388E-7	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999808058677	WITHOUT_CLASSIFICATION	1.9194132230980262E-8	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999998119499254	WITHOUT_CLASSIFICATION	1.880500745509255E-7	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999995572856086	WITHOUT_CLASSIFICATION	4.427143913523578E-7	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999995359296513	WITHOUT_CLASSIFICATION	4.640703487248669E-7	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999998545331563	WITHOUT_CLASSIFICATION	1.4546684373568565E-7	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999993418760901	WITHOUT_CLASSIFICATION	6.58123909985073E-7	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999989836156559	WITHOUT_CLASSIFICATION	1.0163843441310306E-6	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999996768393139	WITHOUT_CLASSIFICATION	3.231606861406219E-7	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.999994007190062	WITHOUT_CLASSIFICATION	5.992809937958846E-6	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999996473558308	WITHOUT_CLASSIFICATION	3.5264416921066307E-7	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999759676953172	WITHOUT_CLASSIFICATION	2.4032304682800792E-5	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999989862814576	WITHOUT_CLASSIFICATION	1.0137185424961488E-6	TEST
// Build args	WITHOUT_CLASSIFICATION	0.999999491171426	WITHOUT_CLASSIFICATION	5.088285740432563E-7	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999854790463	WITHOUT_CLASSIFICATION	1.4520953549687217E-8	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999999999585365	WITHOUT_CLASSIFICATION	4.1463503173763884E-10	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999996235764993	WITHOUT_CLASSIFICATION	3.764235007327281E-7	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999989862814576	WITHOUT_CLASSIFICATION	1.0137185424961488E-6	TEST
// Build args	WITHOUT_CLASSIFICATION	0.999999491171426	WITHOUT_CLASSIFICATION	5.088285740432563E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999999999585365	WITHOUT_CLASSIFICATION	4.1463503173763884E-10	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999980163893093	WITHOUT_CLASSIFICATION	1.983610690702883E-6	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999985142063104	WITHOUT_CLASSIFICATION	1.4857936895891395E-6	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999994094087595	WITHOUT_CLASSIFICATION	5.905912405168274E-7	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.99999793274862	WITHOUT_CLASSIFICATION	2.067251379990902E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999973329614663	WITHOUT_CLASSIFICATION	2.6670385336238008E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999968227702	WITHOUT_CLASSIFICATION	3.177229849706885E-9	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999992832733986	WITHOUT_CLASSIFICATION	7.16726601453868E-7	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999998404319534	WITHOUT_CLASSIFICATION	1.5956804657305881E-7	TEST
// set attr	WITHOUT_CLASSIFICATION	0.999999667636215	WITHOUT_CLASSIFICATION	3.323637850300509E-7	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.99999953191851	WITHOUT_CLASSIFICATION	4.6808148993566716E-7	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999944514229335	WITHOUT_CLASSIFICATION	5.548577066393798E-6	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999944514229335	WITHOUT_CLASSIFICATION	5.548577066393798E-6	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999993843937137	WITHOUT_CLASSIFICATION	6.156062862913825E-7	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999913895143	WITHOUT_CLASSIFICATION	8.610485691598495E-9	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999779124926	WITHOUT_CLASSIFICATION	2.2087507338210803E-8	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999992113788726	WITHOUT_CLASSIFICATION	7.886211273982529E-7	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999202941717	WITHOUT_CLASSIFICATION	7.970582825480932E-8	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999972715650248	WITHOUT_CLASSIFICATION	2.7284349751897726E-6	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999997998493697	WITHOUT_CLASSIFICATION	2.001506303677263E-7	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999867872201	WITHOUT_CLASSIFICATION	1.3212779730820007E-8	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999996620586437	WITHOUT_CLASSIFICATION	3.3794135632904775E-7	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999986849337	WITHOUT_CLASSIFICATION	1.3150662082563458E-9	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999997089589565	WITHOUT_CLASSIFICATION	2.9104104351021455E-7	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999976909487	WITHOUT_CLASSIFICATION	2.3090512165529457E-9	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999985885027268	WITHOUT_CLASSIFICATION	1.4114972731693874E-6	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999998176495427	WITHOUT_CLASSIFICATION	1.823504573736707E-7	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999997885230663	WITHOUT_CLASSIFICATION	2.114769338676185E-7	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999999952459904	WITHOUT_CLASSIFICATION	4.754009667905889E-9	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999998875492614	WITHOUT_CLASSIFICATION	1.1245073857524347E-7	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999998909308492	WITHOUT_CLASSIFICATION	1.0906915086812498E-7	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999998908077959	WITHOUT_CLASSIFICATION	1.0919220406901961E-7	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999997906032939	WITHOUT_CLASSIFICATION	2.093967060976319E-7	TEST
// Loads	WITHOUT_CLASSIFICATION	0.999998517956239	WITHOUT_CLASSIFICATION	1.4820437609741877E-6	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999991463228053	WITHOUT_CLASSIFICATION	8.536771945992751E-7	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999998619655981	WITHOUT_CLASSIFICATION	1.3803440179136772E-7	TEST
// others	WITHOUT_CLASSIFICATION	0.9999990757033221	WITHOUT_CLASSIFICATION	9.24296677833194E-7	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999992809646088	WITHOUT_CLASSIFICATION	7.190353912119664E-7	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999991294732349	WITHOUT_CLASSIFICATION	8.705267651816805E-7	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999927163288115	WITHOUT_CLASSIFICATION	7.283671188511027E-6	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999775589649	WITHOUT_CLASSIFICATION	2.244103507793589E-8	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999986923007534	WITHOUT_CLASSIFICATION	1.3076992465619623E-6	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999997685932628	WITHOUT_CLASSIFICATION	2.3140673723726439E-7	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999998905100768	WITHOUT_CLASSIFICATION	1.0948992321697973E-7	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999999250401927	WITHOUT_CLASSIFICATION	7.49598072425218E-8	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999968769701504	WITHOUT_CLASSIFICATION	3.1230298496059426E-6	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999954388129134	WITHOUT_CLASSIFICATION	4.561187086566057E-6	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999996465079849	WITHOUT_CLASSIFICATION	3.5349201508716025E-7	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999861355250406	WITHOUT_CLASSIFICATION	1.3864474959336744E-5	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999934090267094	WITHOUT_CLASSIFICATION	6.590973290528411E-6	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999997411861149	WITHOUT_CLASSIFICATION	2.5881388505523696E-7	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999996016827841	WITHOUT_CLASSIFICATION	3.983172158108559E-7	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999972034475049	WITHOUT_CLASSIFICATION	2.796552495199901E-6	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999980805975675	WITHOUT_CLASSIFICATION	1.91940243245951E-6	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999015368353248	WITHOUT_CLASSIFICATION	9.846316467516464E-5	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999992155347225	WITHOUT_CLASSIFICATION	7.844652774783018E-7	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999997402907137	WITHOUT_CLASSIFICATION	2.597092863426145E-7	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999994752047484	WITHOUT_CLASSIFICATION	5.247952516489984E-7	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999999968759238	WITHOUT_CLASSIFICATION	3.1240761362590633E-9	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.999999979140055	WITHOUT_CLASSIFICATION	2.0859944987737E-8	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999968770813	WITHOUT_CLASSIFICATION	3.122918725453135E-9	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999997595532379	WITHOUT_CLASSIFICATION	2.4044676210827365E-7	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999947609888389	WITHOUT_CLASSIFICATION	5.239011161131523E-6	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999998175743918	WITHOUT_CLASSIFICATION	1.824256081117525E-7	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999996607689349	WITHOUT_CLASSIFICATION	3.3923106512058615E-7	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999780836372448	WITHOUT_CLASSIFICATION	2.191636275514844E-5	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999894810435361	WITHOUT_CLASSIFICATION	1.0518956463866215E-5	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9998747412808011	WITHOUT_CLASSIFICATION	1.2525871919885485E-4	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999996056741289	WITHOUT_CLASSIFICATION	3.943258711022888E-7	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999490312703	WITHOUT_CLASSIFICATION	5.096872968050704E-8	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999999219993795	WITHOUT_CLASSIFICATION	7.800062053139226E-8	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999996070256412	WITHOUT_CLASSIFICATION	3.9297435888247025E-7	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999771860176504	WITHOUT_CLASSIFICATION	2.281398234956485E-5	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999771860176504	WITHOUT_CLASSIFICATION	2.281398234956485E-5	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999991667243594	WITHOUT_CLASSIFICATION	8.332756406213553E-7	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999970156206169	WITHOUT_CLASSIFICATION	2.984379383152352E-6	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999977946967563	WITHOUT_CLASSIFICATION	2.2053032436531567E-6	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999984740434591	WITHOUT_CLASSIFICATION	1.5259565410008808E-6	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999999030913413	WITHOUT_CLASSIFICATION	9.69086586166941E-8	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999965472215262	WITHOUT_CLASSIFICATION	3.45277847385752E-6	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999684318452227	WITHOUT_CLASSIFICATION	3.156815477737545E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999980429745476	WITHOUT_CLASSIFICATION	1.957025452359834E-6	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.999999711171376	WITHOUT_CLASSIFICATION	2.8882862394625085E-7	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999999809148017	WITHOUT_CLASSIFICATION	1.90851983130683E-8	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999995013691545	WITHOUT_CLASSIFICATION	4.986308455232924E-7	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999996280954662	WITHOUT_CLASSIFICATION	3.7190453384317854E-7	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999986349394923	WITHOUT_CLASSIFICATION	1.365060507837488E-6	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999998648308425	WITHOUT_CLASSIFICATION	1.3516915752000064E-7	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999988283618104	WITHOUT_CLASSIFICATION	1.171638189528811E-6	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999987721303681	WITHOUT_CLASSIFICATION	1.227869631925772E-6	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999989789034214	WITHOUT_CLASSIFICATION	1.0210965786669424E-6	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999994208204285	WITHOUT_CLASSIFICATION	5.791795714727381E-7	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999998077486172	WITHOUT_CLASSIFICATION	1.9225138274324804E-7	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999984099774755	WITHOUT_CLASSIFICATION	1.5900225246027925E-6	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999985139086025	WITHOUT_CLASSIFICATION	1.4860913975696018E-6	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999989630199431	WITHOUT_CLASSIFICATION	1.0369800568656072E-6	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.999998055498486	WITHOUT_CLASSIFICATION	1.944501514107899E-6	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999974808886972	WITHOUT_CLASSIFICATION	2.5191113027515582E-6	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999957884905596	WITHOUT_CLASSIFICATION	4.211509440351108E-6	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999923107185056	WITHOUT_CLASSIFICATION	7.68928149435984E-6	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999840697323527	WITHOUT_CLASSIFICATION	1.5930267647355852E-5	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999879594444502	WITHOUT_CLASSIFICATION	1.2040555549878893E-5	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999999281280063	WITHOUT_CLASSIFICATION	7.187199369685155E-8	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999998432154932	WITHOUT_CLASSIFICATION	1.5678450683640837E-7	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.999999980866194	WITHOUT_CLASSIFICATION	1.9133806014776336E-8	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999996431470215	WITHOUT_CLASSIFICATION	3.5685297844385207E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999159324843	WITHOUT_CLASSIFICATION	8.406751570856486E-7	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999976109205526	WITHOUT_CLASSIFICATION	2.389079447382995E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999159324843	WITHOUT_CLASSIFICATION	8.406751570856486E-7	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999998852726231	WITHOUT_CLASSIFICATION	1.1472737691437011E-7	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999995998199707	WITHOUT_CLASSIFICATION	4.001800293509027E-7	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999995998199707	WITHOUT_CLASSIFICATION	4.001800293509027E-7	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999995998199707	WITHOUT_CLASSIFICATION	4.001800293509027E-7	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999999177736635	WITHOUT_CLASSIFICATION	8.222633644682008E-8	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999999177736635	WITHOUT_CLASSIFICATION	8.222633644682008E-8	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999982025897816	WITHOUT_CLASSIFICATION	1.7974102183305634E-6	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.999999773586187	WITHOUT_CLASSIFICATION	2.264138129934033E-7	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999994415074299	WITHOUT_CLASSIFICATION	5.584925701160583E-7	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999999981925797	WITHOUT_CLASSIFICATION	1.8074204260076411E-9	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999977392719857	WITHOUT_CLASSIFICATION	2.2607280143569477E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999968704312036	WITHOUT_CLASSIFICATION	3.1295687963980644E-6	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999999082142111	WITHOUT_CLASSIFICATION	9.178578893582804E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999996319757136	WITHOUT_CLASSIFICATION	3.6802428631863343E-7	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999946941737814	WITHOUT_CLASSIFICATION	5.305826218695078E-6	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999999570942166	WITHOUT_CLASSIFICATION	4.290578330928831E-8	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999985963547812	WITHOUT_CLASSIFICATION	1.4036452187742863E-6	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999998670550653	WITHOUT_CLASSIFICATION	1.3294493472252257E-7	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.999999952110748	WITHOUT_CLASSIFICATION	4.78892520454898E-8	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999997131377492	WITHOUT_CLASSIFICATION	2.868622509125539E-7	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999993567725194	WITHOUT_CLASSIFICATION	6.432274806323902E-7	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999995601833868	WITHOUT_CLASSIFICATION	4.3981661323388043E-7	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999995509220511	WITHOUT_CLASSIFICATION	4.490779488984024E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999995397283558	WITHOUT_CLASSIFICATION	4.602716442821615E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999995397283558	WITHOUT_CLASSIFICATION	4.602716442821615E-7	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999989759098258	WITHOUT_CLASSIFICATION	1.0240901741460484E-6	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999997223434287	WITHOUT_CLASSIFICATION	2.776565712322515E-7	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999997223434287	WITHOUT_CLASSIFICATION	2.776565712322515E-7	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999921050339059	WITHOUT_CLASSIFICATION	7.89496609410565E-6	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999991242962055	WITHOUT_CLASSIFICATION	8.757037944488548E-7	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999994890682851	WITHOUT_CLASSIFICATION	5.109317149773606E-7	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999978373171433	WITHOUT_CLASSIFICATION	2.1626828566201697E-6	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999992742953865	WITHOUT_CLASSIFICATION	7.25704613636269E-7	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999999361367827	WITHOUT_CLASSIFICATION	6.386321731024755E-8	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999981833992796	WITHOUT_CLASSIFICATION	1.8166007204166936E-6	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.999999966128188	WITHOUT_CLASSIFICATION	3.387181208868293E-8	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999997288233469	WITHOUT_CLASSIFICATION	2.711766531421319E-7	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999995526651781	WITHOUT_CLASSIFICATION	4.473348219221792E-7	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999990719843008	WITHOUT_CLASSIFICATION	9.280156992554084E-7	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999990792192193	WITHOUT_CLASSIFICATION	9.207807807044741E-7	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999996605128242	WITHOUT_CLASSIFICATION	3.394871758194741E-7	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999998575296293	WITHOUT_CLASSIFICATION	1.4247037063171394E-7	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999996319757136	WITHOUT_CLASSIFICATION	3.6802428631863343E-7	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9998980563580547	WITHOUT_CLASSIFICATION	1.0194364194530356E-4	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998770883006	WITHOUT_CLASSIFICATION	1.2291169932202364E-7	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.999999726642487	WITHOUT_CLASSIFICATION	2.7335751290338254E-7	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.999999726642487	WITHOUT_CLASSIFICATION	2.7335751290338254E-7	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999996511527801	WITHOUT_CLASSIFICATION	3.48847219878891E-7	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999997212836401	WITHOUT_CLASSIFICATION	2.787163598984272E-7	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999999871136862	WITHOUT_CLASSIFICATION	1.288631381931594E-8	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999988593933935	WITHOUT_CLASSIFICATION	1.1406066064195934E-6	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999997167219037	WITHOUT_CLASSIFICATION	2.8327809633145983E-7	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999999100651218	WITHOUT_CLASSIFICATION	8.993487814091416E-8	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999997290869154	WITHOUT_CLASSIFICATION	2.7091308459186237E-7	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9997453738494838	WITHOUT_CLASSIFICATION	2.5462615051627494E-4	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999999052863121	WITHOUT_CLASSIFICATION	9.471368778023515E-8	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999998757798996	WITHOUT_CLASSIFICATION	1.242201003513378E-7	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999996483000485	WITHOUT_CLASSIFICATION	3.516999514483084E-7	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999997438693563	WITHOUT_CLASSIFICATION	2.5613064359671487E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999891869194465	WITHOUT_CLASSIFICATION	1.0813080553480308E-5	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999995353665609	WITHOUT_CLASSIFICATION	4.6463343907612955E-7	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999991161031019	WITHOUT_CLASSIFICATION	8.838968979902842E-7	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999997276569021	WITHOUT_CLASSIFICATION	2.723430978883979E-7	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999994093475766	WITHOUT_CLASSIFICATION	5.906524233971617E-7	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.999999270047281	WITHOUT_CLASSIFICATION	7.299527190272844E-7	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999999257486546	WITHOUT_CLASSIFICATION	7.425134550206933E-8	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999997579737092	WITHOUT_CLASSIFICATION	2.4202629076763874E-7	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999990985563678	WITHOUT_CLASSIFICATION	9.014436321895277E-7	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999999547575601	WITHOUT_CLASSIFICATION	4.524243988025331E-8	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999994923988245	WITHOUT_CLASSIFICATION	5.076011756477303E-7	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999941082492	WITHOUT_CLASSIFICATION	5.8917508438378724E-9	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999993996217972	WITHOUT_CLASSIFICATION	6.003782028387019E-7	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999997738179343	WITHOUT_CLASSIFICATION	2.2618206569376777E-7	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999334427207817	WITHOUT_CLASSIFICATION	6.655727921841131E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999525086649499	WITHOUT_CLASSIFICATION	4.7491335050053867E-5	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999856418241	WITHOUT_CLASSIFICATION	1.4358175870713798E-8	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999997501597704	WITHOUT_CLASSIFICATION	2.4984022963118386E-7	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999995946951812	WITHOUT_CLASSIFICATION	4.0530481873874483E-7	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999997929417856	WITHOUT_CLASSIFICATION	2.0705821434391571E-7	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999966872180683	WITHOUT_CLASSIFICATION	3.3127819316190935E-6	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999928518527497	WITHOUT_CLASSIFICATION	7.148147250310317E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999997310426529	WITHOUT_CLASSIFICATION	2.689573471161972E-6	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999967601958243	WITHOUT_CLASSIFICATION	3.239804175775972E-6	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999525086649499	WITHOUT_CLASSIFICATION	4.7491335050053867E-5	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999922534864814	WITHOUT_CLASSIFICATION	7.746513518695663E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999997310426529	WITHOUT_CLASSIFICATION	2.689573471161972E-6	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999975425260639	WITHOUT_CLASSIFICATION	2.4574739361199306E-6	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999998684336311	WITHOUT_CLASSIFICATION	1.3156636890499847E-7	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999992982880248	WITHOUT_CLASSIFICATION	7.017119752230877E-7	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999998374962152	WITHOUT_CLASSIFICATION	1.625037847489105E-7	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999967791103168	WITHOUT_CLASSIFICATION	3.2208896831882924E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999998774096932	WITHOUT_CLASSIFICATION	1.2259030685533547E-7	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999998774096932	WITHOUT_CLASSIFICATION	1.2259030685533547E-7	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.999997567157483	WITHOUT_CLASSIFICATION	2.4328425170968855E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999969654517	WITHOUT_CLASSIFICATION	3.0345483063833424E-9	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999997535858729	WITHOUT_CLASSIFICATION	2.464141270270753E-7	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999997535858729	WITHOUT_CLASSIFICATION	2.464141270270753E-7	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999974262619	WITHOUT_CLASSIFICATION	2.5737380557938328E-9	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9993987647306001	WITHOUT_CLASSIFICATION	6.012352693999429E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9998599117239942	WITHOUT_CLASSIFICATION	1.4008827600582653E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9998599117239942	WITHOUT_CLASSIFICATION	1.4008827600582653E-4	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999992103250378	WITHOUT_CLASSIFICATION	7.896749621393759E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.999998431114059	WITHOUT_CLASSIFICATION	1.5688859410705962E-6	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999998046759034	WITHOUT_CLASSIFICATION	1.9532409644221363E-7	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999998730036196	WITHOUT_CLASSIFICATION	1.2699638037107318E-7	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999999684758282	WITHOUT_CLASSIFICATION	3.152417184222298E-8	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999997462431525	WITHOUT_CLASSIFICATION	2.5375684753481095E-7	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999989081214912	WITHOUT_CLASSIFICATION	1.0918785088583324E-6	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999988386299571	WITHOUT_CLASSIFICATION	1.16137004295161E-6	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.999999656763047	WITHOUT_CLASSIFICATION	3.4323695296625077E-7	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999991145257023	WITHOUT_CLASSIFICATION	8.85474297717709E-7	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999993534219327	WITHOUT_CLASSIFICATION	6.465780672937131E-7	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999994557712	WITHOUT_CLASSIFICATION	5.442287999655391E-7	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999999387898683	WITHOUT_CLASSIFICATION	6.121013181145665E-8	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999983918904166	WITHOUT_CLASSIFICATION	1.6081095833027684E-6	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999995191343249	WITHOUT_CLASSIFICATION	4.808656751271656E-7	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999999179502269	WITHOUT_CLASSIFICATION	8.204977302162362E-8	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999637775230408	WITHOUT_CLASSIFICATION	3.6222476959190174E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999998458589154	WITHOUT_CLASSIFICATION	1.5414108458397312E-7	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999996644365171	WITHOUT_CLASSIFICATION	3.355634829268657E-7	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999999466099939	WITHOUT_CLASSIFICATION	5.339000600788024E-8	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999974081852955	WITHOUT_CLASSIFICATION	2.59181470447353E-6	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999785275231584	WITHOUT_CLASSIFICATION	2.1472476841605034E-5	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999997798166644	WITHOUT_CLASSIFICATION	2.2018333556570914E-7	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999955912009746	WITHOUT_CLASSIFICATION	4.408799025322946E-6	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999888265667525	WITHOUT_CLASSIFICATION	1.1173433247485142E-5	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.999985184229016	WITHOUT_CLASSIFICATION	1.4815770983831326E-5	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999954850792617	WITHOUT_CLASSIFICATION	4.514920738302417E-6	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999981976752075	WITHOUT_CLASSIFICATION	1.8023247925981353E-6	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999999939959579	WITHOUT_CLASSIFICATION	6.004042095011543E-8	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999999939959579	WITHOUT_CLASSIFICATION	6.004042095011543E-8	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999591609147	WITHOUT_CLASSIFICATION	4.0839085364541345E-8	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.999999835272813	WITHOUT_CLASSIFICATION	1.6472718703092865E-7	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.99999673258846	WITHOUT_CLASSIFICATION	3.267411540014779E-6	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999995188434226	WITHOUT_CLASSIFICATION	4.811565772964362E-7	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999998050355342	WITHOUT_CLASSIFICATION	1.949644657997076E-7	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999995408953881	WITHOUT_CLASSIFICATION	4.5910461193012505E-7	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999993215118788	WITHOUT_CLASSIFICATION	6.784881213659369E-7	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997819248371	WITHOUT_CLASSIFICATION	2.1807516300289943E-7	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999999184998407	WITHOUT_CLASSIFICATION	8.150015926292684E-8	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999067472521	WITHOUT_CLASSIFICATION	9.325274782446773E-8	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999998395246066	WITHOUT_CLASSIFICATION	1.6047539350215237E-7	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999994171909913	WITHOUT_CLASSIFICATION	5.828090086727514E-7	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999968768566847	WITHOUT_CLASSIFICATION	3.123143315306551E-6	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999995287676611	WITHOUT_CLASSIFICATION	4.7123233893066684E-7	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999999668575752	WITHOUT_CLASSIFICATION	3.314242484075269E-8	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999997611826286	WITHOUT_CLASSIFICATION	2.3881737138084566E-7	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999998639755107	WITHOUT_CLASSIFICATION	1.3602448928977564E-7	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999994612489786	WITHOUT_CLASSIFICATION	5.387510212836768E-7	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999973925693819	WITHOUT_CLASSIFICATION	2.6074306180236514E-6	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999997252896906	WITHOUT_CLASSIFICATION	2.747103093744527E-7	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999999309554602	WITHOUT_CLASSIFICATION	6.904453974720101E-8	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999982808040444	WITHOUT_CLASSIFICATION	1.7191959556522122E-6	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999999192763028	WITHOUT_CLASSIFICATION	8.07236972041578E-8	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999139832587	WITHOUT_CLASSIFICATION	8.601674125415107E-8	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999999399767082	WITHOUT_CLASSIFICATION	6.002329180755288E-8	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999996984031835	WITHOUT_CLASSIFICATION	3.0159681647382143E-7	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999919711741991	WITHOUT_CLASSIFICATION	8.02882580083816E-6	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999991589234408	WITHOUT_CLASSIFICATION	8.410765590610091E-7	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999989794703461	WITHOUT_CLASSIFICATION	1.020529653847628E-6	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999999756996413	WITHOUT_CLASSIFICATION	2.430035864613777E-8	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999997358526108	WITHOUT_CLASSIFICATION	2.641473892506042E-7	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999998261171446	WITHOUT_CLASSIFICATION	1.7388285544280143E-7	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.999999864100292	WITHOUT_CLASSIFICATION	1.3589970801626546E-7	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.999999427057903	WITHOUT_CLASSIFICATION	5.729420969301105E-7	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999998852459293	WITHOUT_CLASSIFICATION	1.1475407058015347E-7	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999987783873658	WITHOUT_CLASSIFICATION	1.2216126341201834E-6	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999999894487888	WITHOUT_CLASSIFICATION	1.0551211195868506E-7	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999978353572324	WITHOUT_CLASSIFICATION	2.1646427676331413E-6	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999999755144621	WITHOUT_CLASSIFICATION	2.448553794815057E-8	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999997885922212	WITHOUT_CLASSIFICATION	2.1140777892087415E-7	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999948468201804	WITHOUT_CLASSIFICATION	5.153179819610366E-6	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999999571898666	WITHOUT_CLASSIFICATION	4.2810133410157636E-8	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999997773407426	WITHOUT_CLASSIFICATION	2.2265925732735583E-7	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999997773407426	WITHOUT_CLASSIFICATION	2.2265925732735583E-7	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999956699701452	WITHOUT_CLASSIFICATION	4.3300298546835295E-6	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999915188064	WITHOUT_CLASSIFICATION	8.481193555454061E-9	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999999733418122	WITHOUT_CLASSIFICATION	2.6658187725251506E-8	TEST
// return	WITHOUT_CLASSIFICATION	0.9999997984087523	WITHOUT_CLASSIFICATION	2.015912477232361E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999995519483111	WITHOUT_CLASSIFICATION	4.480516888926705E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999993736921348	WITHOUT_CLASSIFICATION	6.263078652146306E-7	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999992165843876	WITHOUT_CLASSIFICATION	7.834156123627291E-7	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999983579057568	WITHOUT_CLASSIFICATION	1.6420942431906863E-6	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999970594937799	WITHOUT_CLASSIFICATION	2.940506220098834E-6	TEST
// tc	WITHOUT_CLASSIFICATION	0.999996311813378	WITHOUT_CLASSIFICATION	3.6881866219629716E-6	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999968377477497	WITHOUT_CLASSIFICATION	3.162252250308374E-6	TEST
// no args	WITHOUT_CLASSIFICATION	0.999999128453996	WITHOUT_CLASSIFICATION	8.715460041310135E-7	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999986747053758	WITHOUT_CLASSIFICATION	1.3252946241647196E-6	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999998021080455	WITHOUT_CLASSIFICATION	1.9789195448202064E-7	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999998179477837	WITHOUT_CLASSIFICATION	1.8205221635239142E-7	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999990353893472	WITHOUT_CLASSIFICATION	9.646106528577603E-7	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999995907434034	WITHOUT_CLASSIFICATION	4.0925659670160135E-7	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9999985275358164	WITHOUT_CLASSIFICATION	1.4724641835266676E-6	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999997179750959	WITHOUT_CLASSIFICATION	2.820249040938929E-7	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999990010059713	WITHOUT_CLASSIFICATION	9.989940287605469E-7	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999997520515125	WITHOUT_CLASSIFICATION	2.479484874918959E-7	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999994194172019	WITHOUT_CLASSIFICATION	5.805827981372267E-7	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999993441632031	WITHOUT_CLASSIFICATION	6.558367968034069E-7	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999997574629109	WITHOUT_CLASSIFICATION	2.4253708912338726E-7	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999994648932744	WITHOUT_CLASSIFICATION	5.351067255284766E-7	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999993955773887	WITHOUT_CLASSIFICATION	6.044226113956106E-7	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999996409536851	WITHOUT_CLASSIFICATION	3.5904631490347705E-7	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999997295616699	WITHOUT_CLASSIFICATION	2.7043833015632465E-7	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999996621092608	WITHOUT_CLASSIFICATION	3.378907392587256E-7	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999983201866562	WITHOUT_CLASSIFICATION	1.6798133436645035E-6	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999994523891346	WITHOUT_CLASSIFICATION	5.47610865395145E-7	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999980850386777	WITHOUT_CLASSIFICATION	1.914961322305233E-6	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999999744901094	WITHOUT_CLASSIFICATION	2.5509890663747597E-8	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.999999963130052	WITHOUT_CLASSIFICATION	3.6869947984342704E-8	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999978353572324	WITHOUT_CLASSIFICATION	2.1646427676331413E-6	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999947099806771	WITHOUT_CLASSIFICATION	5.290019322971243E-6	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999985022505572	WITHOUT_CLASSIFICATION	1.4977494427389876E-6	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999985022505572	WITHOUT_CLASSIFICATION	1.4977494427389876E-6	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.999998680778297	WITHOUT_CLASSIFICATION	1.3192217029567296E-6	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999997270034525	WITHOUT_CLASSIFICATION	2.7299654747804103E-7	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999997260511538	WITHOUT_CLASSIFICATION	2.739488461397495E-7	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999984744307953	WITHOUT_CLASSIFICATION	1.5255692047532782E-6	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999999277819849	WITHOUT_CLASSIFICATION	7.221801512604019E-8	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.999999939026051	WITHOUT_CLASSIFICATION	6.097394898332336E-8	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999999156692	WITHOUT_CLASSIFICATION	8.43308000166135E-8	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.999999896287674	WITHOUT_CLASSIFICATION	1.0371232602734455E-7	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999999024177224	WITHOUT_CLASSIFICATION	9.758227770026361E-8	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.999999855921029	WITHOUT_CLASSIFICATION	1.4407897096665705E-7	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999998340195296	WITHOUT_CLASSIFICATION	1.6598047048615476E-7	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999998302400249	WITHOUT_CLASSIFICATION	1.6975997510669417E-7	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999999771600282	WITHOUT_CLASSIFICATION	2.2839971780871765E-8	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.999999473783238	WITHOUT_CLASSIFICATION	5.262167620362446E-7	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999241280023098	WITHOUT_CLASSIFICATION	7.587199769019559E-5	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999999939460613	WITHOUT_CLASSIFICATION	6.05393869907801E-9	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999999537918549	WITHOUT_CLASSIFICATION	4.620814509002447E-8	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999999215716028	WITHOUT_CLASSIFICATION	7.842839715343776E-8	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999999518350533	WITHOUT_CLASSIFICATION	4.81649466051544E-8	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999999288850776	WITHOUT_CLASSIFICATION	7.111492240685498E-8	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999999165129743	WITHOUT_CLASSIFICATION	8.34870257805798E-8	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999999393879224	WITHOUT_CLASSIFICATION	6.061207762828357E-8	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.999999982344501	WITHOUT_CLASSIFICATION	1.7655499053739954E-8	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999999402463228	WITHOUT_CLASSIFICATION	5.975367722417201E-8	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.999999969663697	WITHOUT_CLASSIFICATION	3.033630310144708E-8	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999999736165377	WITHOUT_CLASSIFICATION	2.6383462330101015E-8	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999999012992633	WITHOUT_CLASSIFICATION	9.870073662473066E-8	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999995315121987	WITHOUT_CLASSIFICATION	4.684878012474387E-7	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999996594207335	WITHOUT_CLASSIFICATION	3.4057926650705884E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999998347569933	WITHOUT_CLASSIFICATION	1.652430067047454E-7	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999994350600154	WITHOUT_CLASSIFICATION	5.649399845599607E-7	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999998203897521	WITHOUT_CLASSIFICATION	1.796102478887009E-7	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999994597992017	WITHOUT_CLASSIFICATION	5.402007983899457E-7	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999950282707	WITHOUT_CLASSIFICATION	4.971729328714612E-9	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999999934551781	WITHOUT_CLASSIFICATION	6.5448219009936585E-9	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999996263015444	WITHOUT_CLASSIFICATION	3.7369845562194784E-7	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999997419156355	WITHOUT_CLASSIFICATION	2.580843645951294E-7	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999999736165377	WITHOUT_CLASSIFICATION	2.6383462330101015E-8	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999999012992633	WITHOUT_CLASSIFICATION	9.870073662473066E-8	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999995315121987	WITHOUT_CLASSIFICATION	4.684878012474387E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999998347569933	WITHOUT_CLASSIFICATION	1.652430067047454E-7	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999955520184	WITHOUT_CLASSIFICATION	4.447981659241222E-9	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999712797124	WITHOUT_CLASSIFICATION	2.8720287655850405E-8	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999993784728469	WITHOUT_CLASSIFICATION	6.215271530909304E-7	TEST
// load null block	WITHOUT_CLASSIFICATION	0.999999562928023	WITHOUT_CLASSIFICATION	4.3707197702971366E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999987811114086	WITHOUT_CLASSIFICATION	1.2188885912925907E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999485412329	WITHOUT_CLASSIFICATION	5.145876716023541E-8	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999995744466209	WITHOUT_CLASSIFICATION	4.25553379089662E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999996072507581	WITHOUT_CLASSIFICATION	3.927492419068232E-7	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999996663686447	WITHOUT_CLASSIFICATION	3.3363135536283757E-7	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999980577985632	WITHOUT_CLASSIFICATION	1.942201436846051E-6	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999971231793269	WITHOUT_CLASSIFICATION	2.8768206731064454E-6	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999999830038421	WITHOUT_CLASSIFICATION	1.6996157932138575E-8	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999999921681092	WITHOUT_CLASSIFICATION	7.831890795172849E-9	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.999999996954509	WITHOUT_CLASSIFICATION	3.0454909674968617E-9	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999989758226284	WITHOUT_CLASSIFICATION	1.0241773716236327E-6	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999999111477033	WITHOUT_CLASSIFICATION	8.885229669953082E-8	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999999866648203	WITHOUT_CLASSIFICATION	1.3335179595398946E-8	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.999999691526933	WITHOUT_CLASSIFICATION	3.0847306693127743E-7	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999999871449172	WITHOUT_CLASSIFICATION	1.2855082674604782E-8	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999997419156355	WITHOUT_CLASSIFICATION	2.580843645951294E-7	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999712797124	WITHOUT_CLASSIFICATION	2.8720287655850405E-8	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999993784728469	WITHOUT_CLASSIFICATION	6.215271530909304E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999987811114086	WITHOUT_CLASSIFICATION	1.2188885912925907E-6	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999485412329	WITHOUT_CLASSIFICATION	5.145876716023541E-8	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999995744466209	WITHOUT_CLASSIFICATION	4.25553379089662E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999996072507581	WITHOUT_CLASSIFICATION	3.927492419068232E-7	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999994466000889	WITHOUT_CLASSIFICATION	5.533999110961425E-7	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999987241102017	WITHOUT_CLASSIFICATION	1.2758897982295736E-6	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999441710978	WITHOUT_CLASSIFICATION	5.58289022705561E-8	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999751312315	WITHOUT_CLASSIFICATION	2.4868768491855265E-8	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999989834328529	WITHOUT_CLASSIFICATION	1.0165671471508488E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999989834328529	WITHOUT_CLASSIFICATION	1.0165671471508488E-6	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999999148778798	WITHOUT_CLASSIFICATION	8.512212018165709E-8	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999999459110172	WITHOUT_CLASSIFICATION	5.408898271172574E-8	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999988182184415	WITHOUT_CLASSIFICATION	1.181781558497075E-6	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999998125761259	WITHOUT_CLASSIFICATION	1.8742387417685303E-7	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999996923452983	WITHOUT_CLASSIFICATION	3.0765470168656614E-7	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999999475498832	WITHOUT_CLASSIFICATION	5.24501167280198E-8	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999997009202783	WITHOUT_CLASSIFICATION	2.9907972161424145E-7	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999999736403552	WITHOUT_CLASSIFICATION	2.6359644905944358E-8	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999997533038497	WITHOUT_CLASSIFICATION	2.4669615026396873E-7	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999994373506647	WITHOUT_CLASSIFICATION	5.626493354186968E-7	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999999546853141	WITHOUT_CLASSIFICATION	4.5314685852407644E-8	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999999725849786	WITHOUT_CLASSIFICATION	2.7415021422049152E-8	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999996913102387	WITHOUT_CLASSIFICATION	3.0868976131976693E-7	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999987204322185	WITHOUT_CLASSIFICATION	1.2795677815183637E-6	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999999586146452	WITHOUT_CLASSIFICATION	4.138535483511171E-8	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999999304703115	WITHOUT_CLASSIFICATION	6.952968848882615E-8	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999994399524051	WITHOUT_CLASSIFICATION	5.600475948719614E-7	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999999327367814	WITHOUT_CLASSIFICATION	6.726321857669143E-8	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999994387548027	WITHOUT_CLASSIFICATION	5.612451972401197E-7	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999999849756877	WITHOUT_CLASSIFICATION	1.502431236998362E-8	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.999333563012173	WITHOUT_CLASSIFICATION	6.664369878270429E-4	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999998956805987	WITHOUT_CLASSIFICATION	1.0431940128000507E-7	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999666656889	WITHOUT_CLASSIFICATION	3.333431120777156E-8	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9968562625420264	WITHOUT_CLASSIFICATION	0.0031437374579736275	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999999917590901	WITHOUT_CLASSIFICATION	8.240909898748275E-8	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999832123814	WITHOUT_CLASSIFICATION	1.6787618564244723E-8	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999881804675	WITHOUT_CLASSIFICATION	1.181953251102674E-8	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999986250792229	WITHOUT_CLASSIFICATION	1.3749207771825653E-6	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999982080132328	WITHOUT_CLASSIFICATION	1.7919867671262843E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999999917590901	WITHOUT_CLASSIFICATION	8.240909898748275E-8	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999832123814	WITHOUT_CLASSIFICATION	1.6787618564244723E-8	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999987204322185	WITHOUT_CLASSIFICATION	1.2795677815183637E-6	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999979319470871	WITHOUT_CLASSIFICATION	2.068052912932647E-6	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999999646444167	WITHOUT_CLASSIFICATION	3.535558333127308E-8	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999999465286128	WITHOUT_CLASSIFICATION	5.347138719127315E-8	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999997730111095	WITHOUT_CLASSIFICATION	2.2698889045983001E-7	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999999300109892	WITHOUT_CLASSIFICATION	6.998901075870102E-8	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.999999522411122	WITHOUT_CLASSIFICATION	4.775888779816937E-7	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999968748139385	WITHOUT_CLASSIFICATION	3.1251860615701166E-6	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999997458588412	WITHOUT_CLASSIFICATION	2.5414115874963876E-7	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999752450586974	WITHOUT_CLASSIFICATION	2.4754941302627384E-5	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999980916634073	WITHOUT_CLASSIFICATION	1.908336592810995E-6	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999998993424015	WITHOUT_CLASSIFICATION	1.0065759839402326E-7	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999999571658431	WITHOUT_CLASSIFICATION	4.283415680843377E-8	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999996503317591	WITHOUT_CLASSIFICATION	3.496682410071384E-7	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999415786841	WITHOUT_CLASSIFICATION	5.8421315933661146E-8	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999932237469	WITHOUT_CLASSIFICATION	6.7762531984841E-9	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999992319461405	WITHOUT_CLASSIFICATION	7.680538595326459E-7	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999999991450336	WITHOUT_CLASSIFICATION	8.54966386992097E-10	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999999178126435	WITHOUT_CLASSIFICATION	8.218735644255816E-8	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999787106474	WITHOUT_CLASSIFICATION	2.1289352571068206E-8	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999997261991261	WITHOUT_CLASSIFICATION	2.7380087387415226E-7	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999999544709549	WITHOUT_CLASSIFICATION	4.552904507766902E-8	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999998286448787	WITHOUT_CLASSIFICATION	1.7135512134670515E-7	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999996561501001	WITHOUT_CLASSIFICATION	3.4384989997143657E-7	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999959277059	WITHOUT_CLASSIFICATION	4.072294116889395E-9	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999893093684	WITHOUT_CLASSIFICATION	1.0690631681600904E-8	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999996496339131	WITHOUT_CLASSIFICATION	3.5036608690535193E-7	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9991100380791649	WITHOUT_CLASSIFICATION	8.899619208350134E-4	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999803396735328	WITHOUT_CLASSIFICATION	1.966032646716031E-5	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999982739943117	WITHOUT_CLASSIFICATION	1.7260056882109933E-6	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999060263155	WITHOUT_CLASSIFICATION	9.397368442155842E-8	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999999763533075	WITHOUT_CLASSIFICATION	2.3646692521291344E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999562171625	WITHOUT_CLASSIFICATION	4.378283743405029E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999562171625	WITHOUT_CLASSIFICATION	4.378283743405029E-8	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999996913102387	WITHOUT_CLASSIFICATION	3.0868976131976693E-7	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999578443047	WITHOUT_CLASSIFICATION	4.2155695217935154E-8	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999997958748703	WITHOUT_CLASSIFICATION	2.041251296951881E-7	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999983654727456	WITHOUT_CLASSIFICATION	1.6345272544778938E-6	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999998945124197	WITHOUT_CLASSIFICATION	1.0548758037712151E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999998945124197	WITHOUT_CLASSIFICATION	1.0548758037712151E-7	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999998000383478	WITHOUT_CLASSIFICATION	1.9996165230288774E-7	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999989769783907	WITHOUT_CLASSIFICATION	1.0230216093193983E-6	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999998039812199	WITHOUT_CLASSIFICATION	1.960187801882513E-7	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999998423049928	WITHOUT_CLASSIFICATION	1.5769500717485866E-7	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999986090974478	WITHOUT_CLASSIFICATION	1.3909025523087302E-6	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999997966554613	WITHOUT_CLASSIFICATION	2.0334453852560416E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999991276989165	WITHOUT_CLASSIFICATION	8.723010834251688E-7	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999998620679253	WITHOUT_CLASSIFICATION	1.3793207455627944E-7	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.99999980775452	WITHOUT_CLASSIFICATION	1.9224547989254077E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999994265455575	WITHOUT_CLASSIFICATION	5.73454442501116E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999994637350523	WITHOUT_CLASSIFICATION	5.362649477689685E-7	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999995554338891	WITHOUT_CLASSIFICATION	4.4456611093729716E-7	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999985688367788	WITHOUT_CLASSIFICATION	1.4311632212434714E-6	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999999837286675	WITHOUT_CLASSIFICATION	1.6271332411251844E-8	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999961204283827	WITHOUT_CLASSIFICATION	3.879571617301119E-6	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999952581449691	WITHOUT_CLASSIFICATION	4.741855030752403E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999998069436059	WITHOUT_CLASSIFICATION	1.9305639407382917E-7	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999998069436059	WITHOUT_CLASSIFICATION	1.9305639407382917E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999993032010478	WITHOUT_CLASSIFICATION	6.967989521317123E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999993032010478	WITHOUT_CLASSIFICATION	6.967989521317123E-7	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999998117083084	WITHOUT_CLASSIFICATION	1.8829169153765286E-7	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999934457319668	WITHOUT_CLASSIFICATION	6.554268033183543E-6	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999859483483	WITHOUT_CLASSIFICATION	1.4051651748143907E-8	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999998314732036	WITHOUT_CLASSIFICATION	1.6852679644139335E-7	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999999402613617	WITHOUT_CLASSIFICATION	5.97386382637159E-8	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999998123319105	WITHOUT_CLASSIFICATION	1.8766808946641386E-7	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999999668018023	WITHOUT_CLASSIFICATION	3.319819764591854E-8	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999995554338891	WITHOUT_CLASSIFICATION	4.4456611093729716E-7	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999985688367788	WITHOUT_CLASSIFICATION	1.4311632212434714E-6	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999961204283827	WITHOUT_CLASSIFICATION	3.879571617301119E-6	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999956747177585	WITHOUT_CLASSIFICATION	4.325282241572768E-6	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999979732703255	WITHOUT_CLASSIFICATION	2.02672967454941E-6	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999103918544	WITHOUT_CLASSIFICATION	8.960814560614827E-8	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999985019568082	WITHOUT_CLASSIFICATION	1.4980431918125813E-6	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.999999607720256	WITHOUT_CLASSIFICATION	3.922797440850273E-7	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999986808286936	WITHOUT_CLASSIFICATION	1.3191713064782828E-6	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.999999560985988	WITHOUT_CLASSIFICATION	4.3901401211967073E-7	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999996210777033	WITHOUT_CLASSIFICATION	3.7892229668272706E-7	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999993053968562	WITHOUT_CLASSIFICATION	6.946031437279778E-7	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999997346852842	WITHOUT_CLASSIFICATION	2.6531471584654896E-7	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999999864791475	WITHOUT_CLASSIFICATION	1.3520852448000652E-8	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999989779253459	WITHOUT_CLASSIFICATION	1.0220746541381291E-6	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999996375865725	WITHOUT_CLASSIFICATION	3.6241342756433503E-7	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999985352682702	WITHOUT_CLASSIFICATION	1.464731729715266E-6	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999989203560149	WITHOUT_CLASSIFICATION	1.0796439851393265E-6	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999003252888	WITHOUT_CLASSIFICATION	9.967471117576017E-8	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999992924418135	WITHOUT_CLASSIFICATION	7.075581865071554E-7	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999986858865353	WITHOUT_CLASSIFICATION	1.3141134647052201E-6	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999908793174999	WITHOUT_CLASSIFICATION	9.120682500210933E-6	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999470287868	WITHOUT_CLASSIFICATION	5.2971213158892545E-8	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999996014071391	WITHOUT_CLASSIFICATION	3.985928609721852E-7	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999993972560564	WITHOUT_CLASSIFICATION	6.027439436097555E-7	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999851199761474	WITHOUT_CLASSIFICATION	1.4880023852651054E-5	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999990502149803	WITHOUT_CLASSIFICATION	9.497850196512391E-7	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.999999822234694	WITHOUT_CLASSIFICATION	1.7776530613183282E-7	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999994156256348	WITHOUT_CLASSIFICATION	5.843743652241197E-7	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999997932039976	WITHOUT_CLASSIFICATION	2.0679600237708083E-7	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999842326043905	WITHOUT_CLASSIFICATION	1.5767395609512932E-5	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999999778674327	WITHOUT_CLASSIFICATION	2.213256736747592E-8	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999999189467	WITHOUT_CLASSIFICATION	8.105330000505219E-8	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999998990876798	WITHOUT_CLASSIFICATION	1.0091232012626226E-7	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999984587122731	WITHOUT_CLASSIFICATION	1.5412877269109246E-6	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999997292867149	WITHOUT_CLASSIFICATION	2.707132851529914E-7	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999999752655132	WITHOUT_CLASSIFICATION	2.4734486705521903E-8	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999996993249014	WITHOUT_CLASSIFICATION	3.006750986731536E-7	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999998729359333	WITHOUT_CLASSIFICATION	1.2706406667956533E-7	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999998652297247	WITHOUT_CLASSIFICATION	1.3477027523680632E-7	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999998475290585	WITHOUT_CLASSIFICATION	1.5247094151589414E-7	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999816349028924	WITHOUT_CLASSIFICATION	1.8365097107577853E-5	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999997395148139	WITHOUT_CLASSIFICATION	2.60485186110377E-7	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999998686809228	WITHOUT_CLASSIFICATION	1.3131907708472026E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999997958748703	WITHOUT_CLASSIFICATION	2.041251296951881E-7	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999998652297247	WITHOUT_CLASSIFICATION	1.3477027523680632E-7	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999622500965782	WITHOUT_CLASSIFICATION	3.774990342174634E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999888544229	WITHOUT_CLASSIFICATION	1.1145577225358092E-8	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999996030740174	WITHOUT_CLASSIFICATION	3.9692598255969934E-7	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.999998395905394	WITHOUT_CLASSIFICATION	1.6040946060928737E-6	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.999998395905394	WITHOUT_CLASSIFICATION	1.6040946060928737E-6	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999998485524173	WITHOUT_CLASSIFICATION	1.5144758281174594E-7	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999999859217263	WITHOUT_CLASSIFICATION	1.4078273598286892E-8	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999999431051038	WITHOUT_CLASSIFICATION	5.6894896290280905E-8	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999998694498407	WITHOUT_CLASSIFICATION	1.3055015938499628E-7	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999999066214879	WITHOUT_CLASSIFICATION	9.337851217611666E-8	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999994835266929	WITHOUT_CLASSIFICATION	5.164733072346743E-7	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999954689215295	WITHOUT_CLASSIFICATION	4.531078470555264E-6	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999993568102551	WITHOUT_CLASSIFICATION	6.431897448551496E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999998281233928	WITHOUT_CLASSIFICATION	1.7187660712480938E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999998281233928	WITHOUT_CLASSIFICATION	1.7187660712480938E-7	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999994873291559	WITHOUT_CLASSIFICATION	5.126708441590888E-7	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999956522202003	WITHOUT_CLASSIFICATION	4.347779799739071E-6	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999998818340309	WITHOUT_CLASSIFICATION	1.1816596918720088E-7	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999997571747448	WITHOUT_CLASSIFICATION	2.4282525515193903E-7	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999997474669852	WITHOUT_CLASSIFICATION	2.525330147914433E-7	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.999999965866507	WITHOUT_CLASSIFICATION	3.413349300633814E-8	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999998607078	WITHOUT_CLASSIFICATION	1.392923144687119E-10	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999997192872515	WITHOUT_CLASSIFICATION	2.8071274851095795E-7	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999993941762614	WITHOUT_CLASSIFICATION	6.058237387044266E-7	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999137342908875	WITHOUT_CLASSIFICATION	8.626570911249297E-5	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.999978412361464	WITHOUT_CLASSIFICATION	2.1587638535893934E-5	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.999991298545979	WITHOUT_CLASSIFICATION	8.701454020946022E-6	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.999999967745676	WITHOUT_CLASSIFICATION	3.2254323954049385E-8	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999953283059332	WITHOUT_CLASSIFICATION	4.671694066784683E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999953283059332	WITHOUT_CLASSIFICATION	4.671694066784683E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999990463169419	WITHOUT_CLASSIFICATION	9.53683058069734E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999996072507581	WITHOUT_CLASSIFICATION	3.927492419068232E-7	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9998770650531594	WITHOUT_CLASSIFICATION	1.2293494684064959E-4	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999999880825261	WITHOUT_CLASSIFICATION	1.1917473811474327E-8	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999691484164	WITHOUT_CLASSIFICATION	3.0851583547473307E-8	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999998153778679	WITHOUT_CLASSIFICATION	1.8462213204763576E-7	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999956923629516	WITHOUT_CLASSIFICATION	4.307637048454108E-6	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999979075401526	WITHOUT_CLASSIFICATION	2.092459847286041E-6	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999977986367791	WITHOUT_CLASSIFICATION	2.201363220937015E-6	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999956690746892	WITHOUT_CLASSIFICATION	4.330925310897701E-6	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999996760324424	WITHOUT_CLASSIFICATION	3.2396755752611915E-7	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.999998974434463	WITHOUT_CLASSIFICATION	1.0255655370283125E-6	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999721709465709	WITHOUT_CLASSIFICATION	2.7829053429080188E-5	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999259980406	WITHOUT_CLASSIFICATION	7.400195952604944E-8	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999950399238976	WITHOUT_CLASSIFICATION	4.960076102347694E-6	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999061842548	WITHOUT_CLASSIFICATION	9.381574509737354E-8	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.999999820144573	WITHOUT_CLASSIFICATION	1.7985542704235988E-7	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999999379659864	WITHOUT_CLASSIFICATION	6.20340135475257E-8	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999999861443192	WITHOUT_CLASSIFICATION	1.38556808772081E-8	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999999778217473	WITHOUT_CLASSIFICATION	2.21782527578843E-8	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9999979625867713	WITHOUT_CLASSIFICATION	2.0374132286492324E-6	TEST
// start class	WITHOUT_CLASSIFICATION	0.999998882738919	WITHOUT_CLASSIFICATION	1.1172610809389713E-6	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999997969944247	WITHOUT_CLASSIFICATION	2.0300557536790927E-7	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999996529633963	WITHOUT_CLASSIFICATION	3.470366036753165E-7	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9997126597484811	WITHOUT_CLASSIFICATION	2.8734025151887856E-4	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999984464185886	WITHOUT_CLASSIFICATION	1.5535814114697148E-6	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999997098854198	WITHOUT_CLASSIFICATION	2.901145803228444E-7	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999997554196581	WITHOUT_CLASSIFICATION	2.4458034193833913E-7	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999996906038146	WITHOUT_CLASSIFICATION	3.0939618537922516E-7	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999993115070124	WITHOUT_CLASSIFICATION	6.884929876314305E-7	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999994050291874	WITHOUT_CLASSIFICATION	5.949708125352694E-7	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999998931367465	WITHOUT_CLASSIFICATION	1.0686325340300495E-7	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999996341906888	WITHOUT_CLASSIFICATION	3.6580931114233664E-7	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999998171086937	WITHOUT_CLASSIFICATION	1.828913063869389E-7	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999995690863691	WITHOUT_CLASSIFICATION	4.309136308212931E-7	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999475140507	WITHOUT_CLASSIFICATION	5.248594931141398E-8	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999965902536564	WITHOUT_CLASSIFICATION	3.409746343677082E-6	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999972369172858	WITHOUT_CLASSIFICATION	2.7630827141608643E-6	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999958154821673	WITHOUT_CLASSIFICATION	4.184517832756789E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999992204185613	WITHOUT_CLASSIFICATION	7.795814388095894E-7	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.999999829883338	WITHOUT_CLASSIFICATION	1.701166618589431E-7	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999999192466875	WITHOUT_CLASSIFICATION	8.075331252468391E-8	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999919225658759	WITHOUT_CLASSIFICATION	8.077434124150982E-6	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.999999970104105	WITHOUT_CLASSIFICATION	2.989589499933389E-8	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9999787695210842	WITHOUT_CLASSIFICATION	2.1230478915742216E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999976816270043	WITHOUT_CLASSIFICATION	2.318372995722802E-6	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999992969802701	WITHOUT_CLASSIFICATION	7.030197299006338E-7	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999689674982	WITHOUT_CLASSIFICATION	3.103250184311907E-8	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.99997097602663	WITHOUT_CLASSIFICATION	2.9023973369966537E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999999917590901	WITHOUT_CLASSIFICATION	8.240909898748275E-8	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999999917590901	WITHOUT_CLASSIFICATION	8.240909898748275E-8	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999999966115993	WITHOUT_CLASSIFICATION	3.388400662456403E-9	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999984429444582	WITHOUT_CLASSIFICATION	1.5570555419128693E-6	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999969745073755	WITHOUT_CLASSIFICATION	3.025492624514439E-6	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999997466828324	WITHOUT_CLASSIFICATION	2.533171675658614E-7	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999996965937518	WITHOUT_CLASSIFICATION	3.034062482798302E-7	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999996129713091	WITHOUT_CLASSIFICATION	3.870286908853945E-7	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999060494791	WITHOUT_CLASSIFICATION	9.395052094162445E-8	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999998139168993	WITHOUT_CLASSIFICATION	1.860831007243661E-7	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999190797538	WITHOUT_CLASSIFICATION	8.092024616882035E-8	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.99999905801076	WITHOUT_CLASSIFICATION	9.41989240069907E-7	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999999281798515	WITHOUT_CLASSIFICATION	7.182014854129188E-8	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999999281798515	WITHOUT_CLASSIFICATION	7.182014854129188E-8	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999999281798515	WITHOUT_CLASSIFICATION	7.182014854129188E-8	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999914148617	WITHOUT_CLASSIFICATION	8.585138283366202E-9	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.999999976746762	WITHOUT_CLASSIFICATION	2.325323803991533E-8	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999998225422451	WITHOUT_CLASSIFICATION	1.774577549511602E-7	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999998529295663	WITHOUT_CLASSIFICATION	1.470704337126173E-7	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999998529295663	WITHOUT_CLASSIFICATION	1.470704337126173E-7	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999997293387926	WITHOUT_CLASSIFICATION	2.706612074705571E-7	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999979185998105	WITHOUT_CLASSIFICATION	2.081400189497933E-6	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999976617486523	WITHOUT_CLASSIFICATION	2.338251347628603E-6	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999996249011552	WITHOUT_CLASSIFICATION	3.750988447448179E-7	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999992281462314	WITHOUT_CLASSIFICATION	7.718537684640386E-7	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.999998594815355	WITHOUT_CLASSIFICATION	1.405184644893857E-6	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999999093773869	WITHOUT_CLASSIFICATION	9.062261302655393E-8	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999997353548273	WITHOUT_CLASSIFICATION	2.64645172632588E-7	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999996605787549	WITHOUT_CLASSIFICATION	3.3942124504978613E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999998715438629	WITHOUT_CLASSIFICATION	1.2845613707165906E-7	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999998715438629	WITHOUT_CLASSIFICATION	1.2845613707165906E-7	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999946299885395	WITHOUT_CLASSIFICATION	5.370011460422669E-6	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999898778387182	WITHOUT_CLASSIFICATION	1.0122161281887841E-5	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999994703545458	WITHOUT_CLASSIFICATION	5.296454541114581E-7	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999974345497933	WITHOUT_CLASSIFICATION	2.5654502066150656E-6	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999999681878413	WITHOUT_CLASSIFICATION	3.181215864613666E-8	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999989243430464	WITHOUT_CLASSIFICATION	1.0756569535595685E-6	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999970539737258	WITHOUT_CLASSIFICATION	2.9460262742033786E-6	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999975370456484	WITHOUT_CLASSIFICATION	2.4629543516159938E-6	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999953290422373	WITHOUT_CLASSIFICATION	4.670957762736793E-6	TEST
// POP	WITHOUT_CLASSIFICATION	0.9999879653967472	WITHOUT_CLASSIFICATION	1.2034603252755836E-5	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999999425330327	WITHOUT_CLASSIFICATION	5.746696737309232E-8	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999916745866628	WITHOUT_CLASSIFICATION	8.325413337124553E-6	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9999938720071782	WITHOUT_CLASSIFICATION	6.12799282184878E-6	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999997460518718	WITHOUT_CLASSIFICATION	2.5394812811936013E-7	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999931379116345	WITHOUT_CLASSIFICATION	6.862088365529421E-6	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999999804914657	WITHOUT_CLASSIFICATION	1.9508534272102267E-8	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999998952549969	WITHOUT_CLASSIFICATION	1.0474500304156397E-7	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999881714176673	WITHOUT_CLASSIFICATION	1.1828582332799116E-5	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999998228966136	WITHOUT_CLASSIFICATION	1.7710338647013231E-7	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999777210344	WITHOUT_CLASSIFICATION	2.2278965570298118E-8	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999832694439499	WITHOUT_CLASSIFICATION	1.673055605017626E-5	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.999999868253504	WITHOUT_CLASSIFICATION	1.3174649606813932E-7	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999997717836164	WITHOUT_CLASSIFICATION	2.2821638358664932E-7	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999899922441464	WITHOUT_CLASSIFICATION	1.0007755853551407E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999976318859138	WITHOUT_CLASSIFICATION	2.3681140861241148E-6	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999999067679008	WITHOUT_CLASSIFICATION	9.323209910002166E-8	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999992506834985	WITHOUT_CLASSIFICATION	7.493165015465187E-7	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999957563194006	WITHOUT_CLASSIFICATION	4.24368059941461E-6	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999349649892	WITHOUT_CLASSIFICATION	6.503501082359341E-8	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.999996833290637	WITHOUT_CLASSIFICATION	3.1667093628512194E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999596212295566	WITHOUT_CLASSIFICATION	4.0378770443418466E-5	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.99999721845387	WITHOUT_CLASSIFICATION	2.781546129945807E-6	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999961372089773	WITHOUT_CLASSIFICATION	3.862791022761529E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999596212295566	WITHOUT_CLASSIFICATION	4.0378770443418466E-5	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999984018426129	WITHOUT_CLASSIFICATION	1.5981573871729263E-6	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999909707472707	WITHOUT_CLASSIFICATION	9.029252729367623E-6	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999914184540953	WITHOUT_CLASSIFICATION	8.581545904644085E-6	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999995108944817	WITHOUT_CLASSIFICATION	4.891055183262736E-7	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.99999910497865	WITHOUT_CLASSIFICATION	8.950213501310059E-7	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999998230122158	WITHOUT_CLASSIFICATION	1.7698778425188066E-7	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999996613635584	WITHOUT_CLASSIFICATION	3.386364415374553E-7	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999956258208126	WITHOUT_CLASSIFICATION	4.374179187450744E-6	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999928732994582	WITHOUT_CLASSIFICATION	7.126700541731025E-6	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999798898115143	WITHOUT_CLASSIFICATION	2.0110188485755235E-5	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999784185251301	WITHOUT_CLASSIFICATION	2.158147486980375E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999928842451405	WITHOUT_CLASSIFICATION	7.115754859564029E-6	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999903064815399	WITHOUT_CLASSIFICATION	9.693518460183106E-6	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999985546740744	WITHOUT_CLASSIFICATION	1.445325925617056E-6	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999943171827392	WITHOUT_CLASSIFICATION	5.6828172607881485E-6	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999970356398863	WITHOUT_CLASSIFICATION	2.9643601136108547E-6	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999981744269254	WITHOUT_CLASSIFICATION	1.8255730746121074E-6	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999964810829469	WITHOUT_CLASSIFICATION	3.5189170530834355E-6	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999989664188089	WITHOUT_CLASSIFICATION	1.0335811911062732E-6	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999823304196214	WITHOUT_CLASSIFICATION	1.766958037867181E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999963752035627	WITHOUT_CLASSIFICATION	3.624796437459017E-6	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999987955236682	WITHOUT_CLASSIFICATION	1.2044763317645202E-6	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999848854431586	WITHOUT_CLASSIFICATION	1.5114556841470052E-5	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.99998991492868	WITHOUT_CLASSIFICATION	1.0085071320184416E-5	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999889339170559	WITHOUT_CLASSIFICATION	1.1066082944113827E-5	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.99999960938337	WITHOUT_CLASSIFICATION	3.9061663002019797E-7	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999762841530262	WITHOUT_CLASSIFICATION	2.371584697384821E-5	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999991919103945	WITHOUT_CLASSIFICATION	8.080896054466357E-7	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999997840377887	WITHOUT_CLASSIFICATION	2.159622112395554E-7	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999996354206081	WITHOUT_CLASSIFICATION	3.6457939182819045E-7	TEST
// hash	WITHOUT_CLASSIFICATION	0.9999932106432897	WITHOUT_CLASSIFICATION	6.789356710190426E-6	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999829186625586	WITHOUT_CLASSIFICATION	1.7081337441398277E-5	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999987933094501	WITHOUT_CLASSIFICATION	1.2066905499846632E-6	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999993616830128	WITHOUT_CLASSIFICATION	6.383169871343595E-7	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999993293813244	WITHOUT_CLASSIFICATION	6.706186756860358E-7	TEST
// binary	WITHOUT_CLASSIFICATION	0.9999989457933123	WITHOUT_CLASSIFICATION	1.0542066876386806E-6	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999992146771974	WITHOUT_CLASSIFICATION	7.853228026164709E-7	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9999658852699502	WITHOUT_CLASSIFICATION	3.41147300498461E-5	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999997822330916	WITHOUT_CLASSIFICATION	2.1776690837964573E-7	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999985634784451	WITHOUT_CLASSIFICATION	1.4365215549002492E-6	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999978425529361	WITHOUT_CLASSIFICATION	2.1574470637664776E-6	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999994188508308	WITHOUT_CLASSIFICATION	5.811491693636228E-7	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999969142604123	WITHOUT_CLASSIFICATION	3.0857395876753725E-6	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999996712816464	WITHOUT_CLASSIFICATION	3.2871835360835834E-7	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999989674297638	WITHOUT_CLASSIFICATION	1.0325702361073372E-6	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999980751057533	WITHOUT_CLASSIFICATION	1.92489424670892E-6	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999995071969597	WITHOUT_CLASSIFICATION	4.928030401567433E-7	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999989844126312	WITHOUT_CLASSIFICATION	1.0155873687745235E-6	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999999113310807	WITHOUT_CLASSIFICATION	8.866891933191069E-8	TEST
// space	WITHOUT_CLASSIFICATION	0.9999994171732587	WITHOUT_CLASSIFICATION	5.828267413671842E-7	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999505575316591	WITHOUT_CLASSIFICATION	4.9442468341009914E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999997286781594	WITHOUT_CLASSIFICATION	2.713218405169141E-7	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999999359742046	WITHOUT_CLASSIFICATION	6.402579543619389E-8	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999999113310807	WITHOUT_CLASSIFICATION	8.866891933191069E-8	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999960397469358	WITHOUT_CLASSIFICATION	3.960253064225578E-6	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999960397469358	WITHOUT_CLASSIFICATION	3.960253064225578E-6	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.99998547868825	WITHOUT_CLASSIFICATION	1.4521311749918815E-5	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999997083698037	WITHOUT_CLASSIFICATION	2.9163019629052615E-7	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999999558491149	WITHOUT_CLASSIFICATION	4.415088496828535E-8	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999986564199568	WITHOUT_CLASSIFICATION	1.343580043219308E-6	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999996567241225	WITHOUT_CLASSIFICATION	3.4327587747841137E-7	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999998835768038	WITHOUT_CLASSIFICATION	1.1642319614746983E-7	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999992905664824	WITHOUT_CLASSIFICATION	7.094335175515102E-7	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9512629268350468	WITHOUT_CLASSIFICATION	0.048737073164953196	TEST
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999998131840414	WITHOUT_CLASSIFICATION	1.8681595847885557E-7	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999974120003017	WITHOUT_CLASSIFICATION	2.5879996983958973E-6	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999977568311333	WITHOUT_CLASSIFICATION	2.2431688666203757E-6	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999797428204	WITHOUT_CLASSIFICATION	2.0257179623718552E-8	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999958346148332	WITHOUT_CLASSIFICATION	4.165385166703447E-6	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999965661384037	WITHOUT_CLASSIFICATION	3.4338615962187593E-6	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999982370527135	WITHOUT_CLASSIFICATION	1.7629472865273476E-6	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999981729634703	WITHOUT_CLASSIFICATION	1.827036529771987E-6	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.999999098928596	WITHOUT_CLASSIFICATION	9.010714041047472E-7	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999459835150706	WITHOUT_CLASSIFICATION	5.4016484929377225E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999459835150706	WITHOUT_CLASSIFICATION	5.4016484929377225E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999459835150706	WITHOUT_CLASSIFICATION	5.4016484929377225E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999459835150706	WITHOUT_CLASSIFICATION	5.4016484929377225E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999459835150706	WITHOUT_CLASSIFICATION	5.4016484929377225E-5	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999977285665823	WITHOUT_CLASSIFICATION	2.27143341768042E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999933932608713	WITHOUT_CLASSIFICATION	6.60673912860725E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999856478959044	WITHOUT_CLASSIFICATION	1.4352104095505388E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999998912190392	WITHOUT_CLASSIFICATION	1.0878096078220527E-7	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999966823522723	WITHOUT_CLASSIFICATION	3.317647727701918E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999400815982	WITHOUT_CLASSIFICATION	5.991840179857752E-8	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999990918289773	WITHOUT_CLASSIFICATION	9.081710226208599E-7	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999994022446591	WITHOUT_CLASSIFICATION	5.977553408406826E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999997102849908	WITHOUT_CLASSIFICATION	2.897150091597686E-7	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999991199967625	WITHOUT_CLASSIFICATION	8.800032374319267E-7	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999989582549987	WITHOUT_CLASSIFICATION	1.041745001284294E-6	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999979261691206	WITHOUT_CLASSIFICATION	2.0738308793267835E-6	TEST
// line 311	WITHOUT_CLASSIFICATION	0.99999877010358	WITHOUT_CLASSIFICATION	1.2298964199875753E-6	TEST
// line 314	WITHOUT_CLASSIFICATION	0.999998706764663	WITHOUT_CLASSIFICATION	1.2932353370166069E-6	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999987529180815	WITHOUT_CLASSIFICATION	1.2470819185071986E-6	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999982091577051	WITHOUT_CLASSIFICATION	1.790842294797953E-6	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999983813542206	WITHOUT_CLASSIFICATION	1.6186457793615823E-6	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999987423045715	WITHOUT_CLASSIFICATION	1.2576954284257753E-6	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999985195127061	WITHOUT_CLASSIFICATION	1.4804872938467018E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999987416982159	WITHOUT_CLASSIFICATION	1.2583017840041545E-6	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999984109724741	WITHOUT_CLASSIFICATION	1.5890275258839424E-6	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999986129838384	WITHOUT_CLASSIFICATION	1.387016161587286E-6	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999982803155179	WITHOUT_CLASSIFICATION	1.719684482196828E-6	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999984598981787	WITHOUT_CLASSIFICATION	1.540101821375054E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999980708523462	WITHOUT_CLASSIFICATION	1.9291476539160723E-6	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999990312136068	WITHOUT_CLASSIFICATION	9.687863932143457E-7	TEST
// line 411	WITHOUT_CLASSIFICATION	0.999999304131281	WITHOUT_CLASSIFICATION	6.958687190684906E-7	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999992676479739	WITHOUT_CLASSIFICATION	7.323520261001211E-7	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999992944078139	WITHOUT_CLASSIFICATION	7.055921861203961E-7	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999986337258874	WITHOUT_CLASSIFICATION	1.3662741126635856E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999989816151481	WITHOUT_CLASSIFICATION	1.0183848518849473E-6	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999988658526671	WITHOUT_CLASSIFICATION	1.1341473329549564E-6	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999988464229929	WITHOUT_CLASSIFICATION	1.153577007178994E-6	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999991690700535	WITHOUT_CLASSIFICATION	8.309299464646532E-7	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999990223917409	WITHOUT_CLASSIFICATION	9.776082591298033E-7	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999992106662847	WITHOUT_CLASSIFICATION	7.893337153397566E-7	TEST
// line 464	WITHOUT_CLASSIFICATION	0.999999171892354	WITHOUT_CLASSIFICATION	8.281076459262837E-7	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999992138855989	WITHOUT_CLASSIFICATION	7.861144012438818E-7	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999990665701622	WITHOUT_CLASSIFICATION	9.334298378198672E-7	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999990942454903	WITHOUT_CLASSIFICATION	9.057545096604985E-7	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999990790931574	WITHOUT_CLASSIFICATION	9.20906842521085E-7	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999991061022703	WITHOUT_CLASSIFICATION	8.938977297455796E-7	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999988723103876	WITHOUT_CLASSIFICATION	1.1276896123748255E-6	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999989798161913	WITHOUT_CLASSIFICATION	1.0201838086058157E-6	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999991199695556	WITHOUT_CLASSIFICATION	8.800304444175026E-7	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999989421146248	WITHOUT_CLASSIFICATION	1.0578853752097415E-6	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999990141309208	WITHOUT_CLASSIFICATION	9.85869079182511E-7	TEST
// line 510	WITHOUT_CLASSIFICATION	0.999999180495927	WITHOUT_CLASSIFICATION	8.195040730644692E-7	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999991705438592	WITHOUT_CLASSIFICATION	8.294561406709622E-7	TEST
// line 525	WITHOUT_CLASSIFICATION	0.999998948584797	WITHOUT_CLASSIFICATION	1.0514152029894845E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999856478959044	WITHOUT_CLASSIFICATION	1.4352104095505388E-5	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999988815729492	WITHOUT_CLASSIFICATION	1.118427050812373E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999989724141018	WITHOUT_CLASSIFICATION	1.0275858981771383E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999988321745578	WITHOUT_CLASSIFICATION	1.1678254422259626E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999991588403148	WITHOUT_CLASSIFICATION	8.4115968534079E-7	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999991691528388	WITHOUT_CLASSIFICATION	8.308471612320295E-7	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999990473730377	WITHOUT_CLASSIFICATION	9.526269622536566E-7	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999988827682272	WITHOUT_CLASSIFICATION	1.117231772835516E-6	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999991689287276	WITHOUT_CLASSIFICATION	8.310712722489904E-7	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999990814800972	WITHOUT_CLASSIFICATION	9.185199028581184E-7	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999991685739335	WITHOUT_CLASSIFICATION	8.314260664994878E-7	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999991145450335	WITHOUT_CLASSIFICATION	8.854549663509279E-7	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999991040991357	WITHOUT_CLASSIFICATION	8.959008641346269E-7	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999990781525452	WITHOUT_CLASSIFICATION	9.218474547824295E-7	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999989506167956	WITHOUT_CLASSIFICATION	1.04938320447802E-6	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999990232612755	WITHOUT_CLASSIFICATION	9.76738724395667E-7	TEST
// line 610	WITHOUT_CLASSIFICATION	0.999999188574066	WITHOUT_CLASSIFICATION	8.114259339236086E-7	TEST
// line 613	WITHOUT_CLASSIFICATION	0.999998997507658	WITHOUT_CLASSIFICATION	1.002492341936666E-6	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999992560357062	WITHOUT_CLASSIFICATION	7.439642938896235E-7	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999988628135965	WITHOUT_CLASSIFICATION	1.1371864034593375E-6	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999987522861358	WITHOUT_CLASSIFICATION	1.24771386425841E-6	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999988449674087	WITHOUT_CLASSIFICATION	1.155032591453801E-6	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999991408543645	WITHOUT_CLASSIFICATION	8.591456354364109E-7	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999991611028755	WITHOUT_CLASSIFICATION	8.388971245196443E-7	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999989782422032	WITHOUT_CLASSIFICATION	1.0217577968341914E-6	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999991853088305	WITHOUT_CLASSIFICATION	8.146911695572909E-7	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999990706659643	WITHOUT_CLASSIFICATION	9.293340356899387E-7	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999990303037164	WITHOUT_CLASSIFICATION	9.696962835300793E-7	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999990492756317	WITHOUT_CLASSIFICATION	9.50724368201342E-7	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999991882040732	WITHOUT_CLASSIFICATION	8.117959268265417E-7	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999992665832995	WITHOUT_CLASSIFICATION	7.33416700470049E-7	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999986397874833	WITHOUT_CLASSIFICATION	1.3602125166617439E-6	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999989861333042	WITHOUT_CLASSIFICATION	1.0138666958082754E-6	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999987148726678	WITHOUT_CLASSIFICATION	1.2851273321983127E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999986292344976	WITHOUT_CLASSIFICATION	1.37076550246882E-6	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999988735697649	WITHOUT_CLASSIFICATION	1.1264302351388194E-6	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999987610390306	WITHOUT_CLASSIFICATION	1.2389609693100307E-6	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999992895283498	WITHOUT_CLASSIFICATION	7.10471650194611E-7	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999991681936307	WITHOUT_CLASSIFICATION	8.318063694026344E-7	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999991668449659	WITHOUT_CLASSIFICATION	8.331550339570743E-7	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999990168025258	WITHOUT_CLASSIFICATION	9.83197474166507E-7	TEST
// line 763	WITHOUT_CLASSIFICATION	0.999998885988224	WITHOUT_CLASSIFICATION	1.1140117760112136E-6	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999990841320371	WITHOUT_CLASSIFICATION	9.158679628575411E-7	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999989827490571	WITHOUT_CLASSIFICATION	1.0172509430245604E-6	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999991660923028	WITHOUT_CLASSIFICATION	8.339076972814141E-7	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999989140432642	WITHOUT_CLASSIFICATION	1.0859567358030484E-6	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999990969311773	WITHOUT_CLASSIFICATION	9.030688227050617E-7	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999991941927748	WITHOUT_CLASSIFICATION	8.058072251837832E-7	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999990565983743	WITHOUT_CLASSIFICATION	9.434016258440489E-7	TEST
// line 797	WITHOUT_CLASSIFICATION	0.999999056348817	WITHOUT_CLASSIFICATION	9.436511829357202E-7	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999981629864401	WITHOUT_CLASSIFICATION	1.8370135599726345E-6	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999988426983994	WITHOUT_CLASSIFICATION	1.1573016005600374E-6	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999986791653602	WITHOUT_CLASSIFICATION	1.3208346397559916E-6	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999991900558122	WITHOUT_CLASSIFICATION	8.099441878734069E-7	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999991783056124	WITHOUT_CLASSIFICATION	8.216943875458453E-7	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999989980678018	WITHOUT_CLASSIFICATION	1.0019321981951674E-6	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999988216469062	WITHOUT_CLASSIFICATION	1.1783530936798274E-6	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999984829206823	WITHOUT_CLASSIFICATION	1.51707931774901E-6	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999987116188199	WITHOUT_CLASSIFICATION	1.288381180063439E-6	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999987416554696	WITHOUT_CLASSIFICATION	1.2583445304249527E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999985632140744	WITHOUT_CLASSIFICATION	1.4367859255428476E-6	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999988540535006	WITHOUT_CLASSIFICATION	1.1459464992598186E-6	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999990416879939	WITHOUT_CLASSIFICATION	9.583120061415616E-7	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999988968608018	WITHOUT_CLASSIFICATION	1.1031391981861856E-6	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999990702260235	WITHOUT_CLASSIFICATION	9.297739765702777E-7	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999992043392462	WITHOUT_CLASSIFICATION	7.956607537794137E-7	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999990682545195	WITHOUT_CLASSIFICATION	9.317454805688986E-7	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999992224700913	WITHOUT_CLASSIFICATION	7.775299087564048E-7	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999991062952827	WITHOUT_CLASSIFICATION	8.937047174717835E-7	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999989797125989	WITHOUT_CLASSIFICATION	1.020287401183019E-6	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999987188851446	WITHOUT_CLASSIFICATION	1.2811148553426328E-6	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999985807288774	WITHOUT_CLASSIFICATION	1.4192711226219348E-6	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999989792745219	WITHOUT_CLASSIFICATION	1.0207254780871134E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.999998946228686	WITHOUT_CLASSIFICATION	1.0537713140442084E-6	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999980920913324	WITHOUT_CLASSIFICATION	1.9079086674808146E-6	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999988617798019	WITHOUT_CLASSIFICATION	1.1382201980507328E-6	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999991463355363	WITHOUT_CLASSIFICATION	8.536644637351975E-7	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999983895329129	WITHOUT_CLASSIFICATION	1.610467087096038E-6	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999983656741988	WITHOUT_CLASSIFICATION	1.6343258012479982E-6	TEST
// line 926	WITHOUT_CLASSIFICATION	0.99999879970726	WITHOUT_CLASSIFICATION	1.2002927400231815E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999983747704132	WITHOUT_CLASSIFICATION	1.625229586924261E-6	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999986729820549	WITHOUT_CLASSIFICATION	1.327017945051644E-6	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999988022695442	WITHOUT_CLASSIFICATION	1.1977304558158473E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999989894702241	WITHOUT_CLASSIFICATION	1.0105297757886042E-6	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999989134981958	WITHOUT_CLASSIFICATION	1.086501804196939E-6	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999990556371745	WITHOUT_CLASSIFICATION	9.443628255316742E-7	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999988369645871	WITHOUT_CLASSIFICATION	1.1630354127653079E-6	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999990238913877	WITHOUT_CLASSIFICATION	9.761086123729028E-7	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999990726621214	WITHOUT_CLASSIFICATION	9.273378786306765E-7	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999988491516575	WITHOUT_CLASSIFICATION	1.150848342565933E-6	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999989693321412	WITHOUT_CLASSIFICATION	1.0306678588865032E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999987038501033	WITHOUT_CLASSIFICATION	1.2961498967620579E-6	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999989110303409	WITHOUT_CLASSIFICATION	1.0889696591709954E-6	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999989421385042	WITHOUT_CLASSIFICATION	1.0578614958804595E-6	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999990214651397	WITHOUT_CLASSIFICATION	9.785348603241913E-7	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999991636648464	WITHOUT_CLASSIFICATION	8.363351535590434E-7	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999991300798912	WITHOUT_CLASSIFICATION	8.699201088943709E-7	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999989726644983	WITHOUT_CLASSIFICATION	1.0273355016848526E-6	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999992168950229	WITHOUT_CLASSIFICATION	7.831049771772651E-7	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999987663423902	WITHOUT_CLASSIFICATION	1.2336576098908462E-6	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999984854833994	WITHOUT_CLASSIFICATION	1.5145166005781463E-6	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.999998752028217	WITHOUT_CLASSIFICATION	1.2479717830077152E-6	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.999999219052792	WITHOUT_CLASSIFICATION	7.809472080718544E-7	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999991297149248	WITHOUT_CLASSIFICATION	8.702850751692736E-7	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999991467437287	WITHOUT_CLASSIFICATION	8.532562711961157E-7	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999990678947149	WITHOUT_CLASSIFICATION	9.321052851370223E-7	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.999999330886378	WITHOUT_CLASSIFICATION	6.691136219125839E-7	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999989850776436	WITHOUT_CLASSIFICATION	1.0149223564018983E-6	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.999999268396525	WITHOUT_CLASSIFICATION	7.316034750524554E-7	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999991650075288	WITHOUT_CLASSIFICATION	8.349924711060377E-7	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999988553463028	WITHOUT_CLASSIFICATION	1.144653697170973E-6	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.999998947268711	WITHOUT_CLASSIFICATION	1.0527312889804126E-6	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999991323679297	WITHOUT_CLASSIFICATION	8.67632070312993E-7	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.999999199538074	WITHOUT_CLASSIFICATION	8.004619258750677E-7	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999988090978016	WITHOUT_CLASSIFICATION	1.1909021984205407E-6	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999992894339087	WITHOUT_CLASSIFICATION	7.105660912561359E-7	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999993375373344	WITHOUT_CLASSIFICATION	6.62462665584436E-7	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999990908082207	WITHOUT_CLASSIFICATION	9.091917793346829E-7	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999993425718042	WITHOUT_CLASSIFICATION	6.574281958754503E-7	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999992551554857	WITHOUT_CLASSIFICATION	7.448445143356482E-7	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999989311635014	WITHOUT_CLASSIFICATION	1.068836498625827E-6	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999990922749232	WITHOUT_CLASSIFICATION	9.077250768025244E-7	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999991077457998	WITHOUT_CLASSIFICATION	8.922542002190394E-7	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999991271643353	WITHOUT_CLASSIFICATION	8.728356646714662E-7	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999992063281581	WITHOUT_CLASSIFICATION	7.936718418460205E-7	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999993514939668	WITHOUT_CLASSIFICATION	6.485060332174176E-7	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999993433279464	WITHOUT_CLASSIFICATION	6.566720536047659E-7	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999992915658135	WITHOUT_CLASSIFICATION	7.084341865956096E-7	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999993483909863	WITHOUT_CLASSIFICATION	6.516090137640353E-7	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999993699769459	WITHOUT_CLASSIFICATION	6.300230540444683E-7	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999993116999583	WITHOUT_CLASSIFICATION	6.883000418156508E-7	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999993098286779	WITHOUT_CLASSIFICATION	6.90171322112782E-7	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999992098519178	WITHOUT_CLASSIFICATION	7.901480822339242E-7	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999989967088644	WITHOUT_CLASSIFICATION	1.0032911356271615E-6	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999988779894177	WITHOUT_CLASSIFICATION	1.1220105822726818E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999989546141058	WITHOUT_CLASSIFICATION	1.0453858942348761E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999990865405746	WITHOUT_CLASSIFICATION	9.134594254616054E-7	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999991703987052	WITHOUT_CLASSIFICATION	8.296012947494339E-7	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999989847234595	WITHOUT_CLASSIFICATION	1.0152765405208512E-6	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999988016160735	WITHOUT_CLASSIFICATION	1.1983839264612585E-6	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999988651237165	WITHOUT_CLASSIFICATION	1.1348762835123973E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999991958668988	WITHOUT_CLASSIFICATION	8.041331011704946E-7	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.999999195016587	WITHOUT_CLASSIFICATION	8.049834130421718E-7	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999988999213097	WITHOUT_CLASSIFICATION	1.1000786902410373E-6	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999990955869156	WITHOUT_CLASSIFICATION	9.044130845049934E-7	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999989183882034	WITHOUT_CLASSIFICATION	1.081611796582281E-6	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.999998778895923	WITHOUT_CLASSIFICATION	1.221104077015186E-6	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999987812818704	WITHOUT_CLASSIFICATION	1.2187181296398841E-6	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999989967212222	WITHOUT_CLASSIFICATION	1.0032787779432775E-6	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999989642402198	WITHOUT_CLASSIFICATION	1.035759780155977E-6	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999986175343282	WITHOUT_CLASSIFICATION	1.382465671924848E-6	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999987138459313	WITHOUT_CLASSIFICATION	1.286154068709892E-6	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999990565308848	WITHOUT_CLASSIFICATION	9.434691152512053E-7	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999990753354572	WITHOUT_CLASSIFICATION	9.246645427922931E-7	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999984876240091	WITHOUT_CLASSIFICATION	1.512375990796886E-6	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999987476614394	WITHOUT_CLASSIFICATION	1.2523385606419563E-6	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999990736593352	WITHOUT_CLASSIFICATION	9.263406648690847E-7	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999989990193038	WITHOUT_CLASSIFICATION	1.0009806961927338E-6	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999989013202275	WITHOUT_CLASSIFICATION	1.0986797724750456E-6	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999990007708921	WITHOUT_CLASSIFICATION	9.992291078912914E-7	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999990927638931	WITHOUT_CLASSIFICATION	9.072361069931544E-7	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999989947657989	WITHOUT_CLASSIFICATION	1.0052342010859154E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999990214065498	WITHOUT_CLASSIFICATION	9.785934502221808E-7	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999987478445561	WITHOUT_CLASSIFICATION	1.2521554437901724E-6	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999993249953532	WITHOUT_CLASSIFICATION	6.75004646884705E-7	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999990716872089	WITHOUT_CLASSIFICATION	9.283127911189537E-7	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999990749727946	WITHOUT_CLASSIFICATION	9.250272052893566E-7	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999991720760875	WITHOUT_CLASSIFICATION	8.27923912532823E-7	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.99999905912283	WITHOUT_CLASSIFICATION	9.408771700145652E-7	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999990952987896	WITHOUT_CLASSIFICATION	9.047012103696404E-7	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999993629149623	WITHOUT_CLASSIFICATION	6.370850377535108E-7	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999991981714815	WITHOUT_CLASSIFICATION	8.018285184211787E-7	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999993395899526	WITHOUT_CLASSIFICATION	6.604100473836576E-7	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999992394335245	WITHOUT_CLASSIFICATION	7.605664755605588E-7	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999993332685694	WITHOUT_CLASSIFICATION	6.667314306562428E-7	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999991067472769	WITHOUT_CLASSIFICATION	8.932527231617745E-7	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.99999927284871	WITHOUT_CLASSIFICATION	7.271512900293158E-7	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999992558220537	WITHOUT_CLASSIFICATION	7.441779463442529E-7	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999992513420138	WITHOUT_CLASSIFICATION	7.486579860615881E-7	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999989910192695	WITHOUT_CLASSIFICATION	1.0089807305490334E-6	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999992515532022	WITHOUT_CLASSIFICATION	7.484467977095087E-7	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999990753164734	WITHOUT_CLASSIFICATION	9.246835266277656E-7	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999993354939332	WITHOUT_CLASSIFICATION	6.645060669622623E-7	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999990813364561	WITHOUT_CLASSIFICATION	9.18663543863779E-7	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.999999185983831	WITHOUT_CLASSIFICATION	8.140161689771809E-7	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999990786833227	WITHOUT_CLASSIFICATION	9.213166771944834E-7	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999993436045729	WITHOUT_CLASSIFICATION	6.563954271344307E-7	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999993437132925	WITHOUT_CLASSIFICATION	6.562867076486365E-7	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999992938391536	WITHOUT_CLASSIFICATION	7.061608462406141E-7	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999993602452976	WITHOUT_CLASSIFICATION	6.397547023736472E-7	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999993448670094	WITHOUT_CLASSIFICATION	6.551329906951498E-7	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999993439413509	WITHOUT_CLASSIFICATION	6.560586490469158E-7	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999992924014977	WITHOUT_CLASSIFICATION	7.075985024278278E-7	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.999999247665458	WITHOUT_CLASSIFICATION	7.52334542090434E-7	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.999999190797852	WITHOUT_CLASSIFICATION	8.092021480372552E-7	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.99999912200361	WITHOUT_CLASSIFICATION	8.779963901434973E-7	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999990657857889	WITHOUT_CLASSIFICATION	9.342142110451915E-7	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999989047296061	WITHOUT_CLASSIFICATION	1.0952703940105215E-6	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999991692229243	WITHOUT_CLASSIFICATION	8.307770755926498E-7	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999989802873721	WITHOUT_CLASSIFICATION	1.01971262789563E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999989057625465	WITHOUT_CLASSIFICATION	1.0942374535671197E-6	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999990109778386	WITHOUT_CLASSIFICATION	9.89022161440127E-7	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999993326836986	WITHOUT_CLASSIFICATION	6.673163015584451E-7	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999993205046203	WITHOUT_CLASSIFICATION	6.794953796830067E-7	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999992471098592	WITHOUT_CLASSIFICATION	7.52890140693542E-7	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999993352106625	WITHOUT_CLASSIFICATION	6.647893374422634E-7	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999992845695869	WITHOUT_CLASSIFICATION	7.15430413123557E-7	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999993281955436	WITHOUT_CLASSIFICATION	6.718044562941987E-7	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999992315580202	WITHOUT_CLASSIFICATION	7.6844197995931E-7	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999993544038386	WITHOUT_CLASSIFICATION	6.455961614291379E-7	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999992968632304	WITHOUT_CLASSIFICATION	7.03136769497921E-7	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999992478559909	WITHOUT_CLASSIFICATION	7.521440091212208E-7	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999991586456891	WITHOUT_CLASSIFICATION	8.413543108372091E-7	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999990614863132	WITHOUT_CLASSIFICATION	9.385136868013931E-7	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999992012014347	WITHOUT_CLASSIFICATION	7.987985652804211E-7	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999990967978978	WITHOUT_CLASSIFICATION	9.032021022013019E-7	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999991981739816	WITHOUT_CLASSIFICATION	8.018260183517586E-7	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999993510421602	WITHOUT_CLASSIFICATION	6.489578398024873E-7	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999992547520674	WITHOUT_CLASSIFICATION	7.452479327014672E-7	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999993433397858	WITHOUT_CLASSIFICATION	6.566602140923659E-7	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999992781486775	WITHOUT_CLASSIFICATION	7.218513224985742E-7	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999991982816857	WITHOUT_CLASSIFICATION	8.017183143701552E-7	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999993427626036	WITHOUT_CLASSIFICATION	6.572373964068614E-7	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999992822159358	WITHOUT_CLASSIFICATION	7.177840642595584E-7	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999989925522801	WITHOUT_CLASSIFICATION	1.0074477198819047E-6	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999992565122516	WITHOUT_CLASSIFICATION	7.43487748455716E-7	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999992514593328	WITHOUT_CLASSIFICATION	7.485406672515667E-7	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999991044653429	WITHOUT_CLASSIFICATION	8.95534657059985E-7	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999972553347976	WITHOUT_CLASSIFICATION	2.7446652023364986E-6	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9997900886822566	WITHOUT_CLASSIFICATION	2.0991131774337715E-4	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999345997513354	WITHOUT_CLASSIFICATION	6.540024866463256E-5	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999556494947136	WITHOUT_CLASSIFICATION	4.4350505286433395E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999836384597244	WITHOUT_CLASSIFICATION	1.636154027563388E-5	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.99999380000795	WITHOUT_CLASSIFICATION	6.19999205002901E-6	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999954452901398	WITHOUT_CLASSIFICATION	4.554709860161001E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999957127156345	WITHOUT_CLASSIFICATION	4.287284365508693E-6	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999947175593671	WITHOUT_CLASSIFICATION	5.282440632817612E-6	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999898617679842	WITHOUT_CLASSIFICATION	1.0138232015863955E-5	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999996075928465	WITHOUT_CLASSIFICATION	3.924071535553644E-7	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999987065032929	WITHOUT_CLASSIFICATION	1.2934967070422744E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999931984686223	WITHOUT_CLASSIFICATION	6.801531377627833E-6	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999244856253791	WITHOUT_CLASSIFICATION	7.551437462102354E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999936549198177	WITHOUT_CLASSIFICATION	6.345080182311385E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998172367326008	WITHOUT_CLASSIFICATION	1.827632673991445E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999174459049364	WITHOUT_CLASSIFICATION	8.255409506357883E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999651325470131	WITHOUT_CLASSIFICATION	3.48674529868487E-5	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999166954543	WITHOUT_CLASSIFICATION	8.330454572005832E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999587664024	WITHOUT_CLASSIFICATION	4.1233597635030624E-8	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999979866875649	WITHOUT_CLASSIFICATION	2.013312435179117E-6	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999987569601847	WITHOUT_CLASSIFICATION	1.2430398152909077E-6	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.999999836192397	WITHOUT_CLASSIFICATION	1.6380760292903303E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998068202682	WITHOUT_CLASSIFICATION	1.931797318340178E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998068202682	WITHOUT_CLASSIFICATION	1.931797318340178E-7	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999770837811763	WITHOUT_CLASSIFICATION	2.291621882372237E-5	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999811925620092	WITHOUT_CLASSIFICATION	1.8807437990666638E-5	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999961920856093	WITHOUT_CLASSIFICATION	3.8079143907859567E-6	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999995357219388	WITHOUT_CLASSIFICATION	4.642780611667997E-7	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999997294902505	WITHOUT_CLASSIFICATION	2.705097495288097E-7	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999996603157172	WITHOUT_CLASSIFICATION	3.396842827547073E-7	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999999521112731	WITHOUT_CLASSIFICATION	4.7888726928113904E-8	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999989501466707	WITHOUT_CLASSIFICATION	1.049853329313824E-6	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999995694982485	WITHOUT_CLASSIFICATION	4.305017515088734E-7	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999994492137506	WITHOUT_CLASSIFICATION	5.50786249458403E-7	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999941438644334	WITHOUT_CLASSIFICATION	5.856135566610108E-6	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999982294500364	WITHOUT_CLASSIFICATION	1.7705499637427049E-6	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999999953870478	WITHOUT_CLASSIFICATION	4.612952243576415E-9	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999925617669008	WITHOUT_CLASSIFICATION	7.438233099230814E-6	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999928594613449	WITHOUT_CLASSIFICATION	7.140538655182738E-6	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999966579758998	WITHOUT_CLASSIFICATION	3.3420241002771777E-6	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999993406311711	WITHOUT_CLASSIFICATION	6.59368828925805E-7	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999980189280481	WITHOUT_CLASSIFICATION	1.9810719519257854E-6	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999999293427373	WITHOUT_CLASSIFICATION	7.065726264701964E-8	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999983595417483	WITHOUT_CLASSIFICATION	1.6404582517003297E-6	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999942561785	WITHOUT_CLASSIFICATION	5.743821515038838E-9	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999978771847635	WITHOUT_CLASSIFICATION	2.1228152364213384E-6	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9965635887848471	WITHOUT_CLASSIFICATION	0.0034364112151529583	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999994517222225	WITHOUT_CLASSIFICATION	5.482777774779678E-7	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9965635887848471	WITHOUT_CLASSIFICATION	0.0034364112151529583	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999994370883521	WITHOUT_CLASSIFICATION	5.629116478078583E-7	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999995874166488	WITHOUT_CLASSIFICATION	4.125833511052232E-7	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999996148955114	WITHOUT_CLASSIFICATION	3.8510448865818494E-7	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999941552708937	WITHOUT_CLASSIFICATION	5.844729106256291E-6	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.999999843407136	WITHOUT_CLASSIFICATION	1.5659286392382547E-7	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999979862022472	WITHOUT_CLASSIFICATION	2.0137977527289773E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999979862022472	WITHOUT_CLASSIFICATION	2.0137977527289773E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999979862022472	WITHOUT_CLASSIFICATION	2.0137977527289773E-6	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999943508994494	WITHOUT_CLASSIFICATION	5.649100550570269E-6	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999828487588417	WITHOUT_CLASSIFICATION	1.715124115830159E-5	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999997270777398	WITHOUT_CLASSIFICATION	2.729222602191583E-7	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999397851973999	WITHOUT_CLASSIFICATION	6.0214802600163084E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999397851973999	WITHOUT_CLASSIFICATION	6.0214802600163084E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999397851973999	WITHOUT_CLASSIFICATION	6.0214802600163084E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999397851973999	WITHOUT_CLASSIFICATION	6.0214802600163084E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999397851973999	WITHOUT_CLASSIFICATION	6.0214802600163084E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999397851973999	WITHOUT_CLASSIFICATION	6.0214802600163084E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999735124581117	WITHOUT_CLASSIFICATION	2.6487541888262332E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999735124581117	WITHOUT_CLASSIFICATION	2.6487541888262332E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999735124581117	WITHOUT_CLASSIFICATION	2.6487541888262332E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999735124581117	WITHOUT_CLASSIFICATION	2.6487541888262332E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999735124581117	WITHOUT_CLASSIFICATION	2.6487541888262332E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999543962023217	WITHOUT_CLASSIFICATION	4.560379767817883E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999543962023217	WITHOUT_CLASSIFICATION	4.560379767817883E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999543962023217	WITHOUT_CLASSIFICATION	4.560379767817883E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999543962023217	WITHOUT_CLASSIFICATION	4.560379767817883E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999543962023217	WITHOUT_CLASSIFICATION	4.560379767817883E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999681314660314	WITHOUT_CLASSIFICATION	3.186853396866595E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999681314660314	WITHOUT_CLASSIFICATION	3.186853396866595E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999681314660314	WITHOUT_CLASSIFICATION	3.186853396866595E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999681314660314	WITHOUT_CLASSIFICATION	3.186853396866595E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999681314660314	WITHOUT_CLASSIFICATION	3.186853396866595E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999681314660314	WITHOUT_CLASSIFICATION	3.186853396866595E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.99998440514689	WITHOUT_CLASSIFICATION	1.5594853109968197E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.99998440514689	WITHOUT_CLASSIFICATION	1.5594853109968197E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.99998440514689	WITHOUT_CLASSIFICATION	1.5594853109968197E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.99998440514689	WITHOUT_CLASSIFICATION	1.5594853109968197E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.99998440514689	WITHOUT_CLASSIFICATION	1.5594853109968197E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999831699074867	WITHOUT_CLASSIFICATION	1.6830092513274154E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999831699074867	WITHOUT_CLASSIFICATION	1.6830092513274154E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999831699074867	WITHOUT_CLASSIFICATION	1.6830092513274154E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999831699074867	WITHOUT_CLASSIFICATION	1.6830092513274154E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999831699074867	WITHOUT_CLASSIFICATION	1.6830092513274154E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999856478959044	WITHOUT_CLASSIFICATION	1.4352104095505388E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999856478959044	WITHOUT_CLASSIFICATION	1.4352104095505388E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999856478959044	WITHOUT_CLASSIFICATION	1.4352104095505388E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999856478959044	WITHOUT_CLASSIFICATION	1.4352104095505388E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999856478959044	WITHOUT_CLASSIFICATION	1.4352104095505388E-5	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999998912190392	WITHOUT_CLASSIFICATION	1.0878096078220527E-7	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999400815982	WITHOUT_CLASSIFICATION	5.991840179857752E-8	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999990918289773	WITHOUT_CLASSIFICATION	9.081710226208599E-7	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999994022446591	WITHOUT_CLASSIFICATION	5.977553408406826E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999997102849908	WITHOUT_CLASSIFICATION	2.897150091597686E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.999998431114059	WITHOUT_CLASSIFICATION	1.5688859410705962E-6	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999987416982159	WITHOUT_CLASSIFICATION	1.2583017840041545E-6	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999980708523462	WITHOUT_CLASSIFICATION	1.9291476539160723E-6	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999992944078139	WITHOUT_CLASSIFICATION	7.055921861203961E-7	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999986337258874	WITHOUT_CLASSIFICATION	1.3662741126635856E-6	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999986134971218	WITHOUT_CLASSIFICATION	1.3865028782082005E-6	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999989816151481	WITHOUT_CLASSIFICATION	1.0183848518849473E-6	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999986034094541	WITHOUT_CLASSIFICATION	1.396590545928345E-6	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999984232884414	WITHOUT_CLASSIFICATION	1.5767115585600144E-6	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999987045231795	WITHOUT_CLASSIFICATION	1.295476820503804E-6	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999981548637512	WITHOUT_CLASSIFICATION	1.8451362488062404E-6	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999982306808355	WITHOUT_CLASSIFICATION	1.7693191645677628E-6	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999987182950434	WITHOUT_CLASSIFICATION	1.281704956562067E-6	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999985010303759	WITHOUT_CLASSIFICATION	1.4989696240591582E-6	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999985377574017	WITHOUT_CLASSIFICATION	1.4622425983941457E-6	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999982351264561	WITHOUT_CLASSIFICATION	1.7648735439421917E-6	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999985879001186	WITHOUT_CLASSIFICATION	1.4120998814204918E-6	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999984081870064	WITHOUT_CLASSIFICATION	1.5918129935595256E-6	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999985268049185	WITHOUT_CLASSIFICATION	1.4731950815407013E-6	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999984231113718	WITHOUT_CLASSIFICATION	1.5768886281873585E-6	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999985552300651	WITHOUT_CLASSIFICATION	1.444769934959461E-6	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999983964680357	WITHOUT_CLASSIFICATION	1.6035319643180656E-6	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999980092859626	WITHOUT_CLASSIFICATION	1.990714037436972E-6	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999984017514189	WITHOUT_CLASSIFICATION	1.5982485811347809E-6	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999987091456779	WITHOUT_CLASSIFICATION	1.290854322055268E-6	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999986243198667	WITHOUT_CLASSIFICATION	1.3756801332604947E-6	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999988767419972	WITHOUT_CLASSIFICATION	1.12325800279774E-6	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999991736926195	WITHOUT_CLASSIFICATION	8.263073805122653E-7	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999990791656983	WITHOUT_CLASSIFICATION	9.208343017269641E-7	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999991754532741	WITHOUT_CLASSIFICATION	8.245467257831491E-7	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999990942816371	WITHOUT_CLASSIFICATION	9.057183628175162E-7	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999991690354061	WITHOUT_CLASSIFICATION	8.309645938342743E-7	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999990815980007	WITHOUT_CLASSIFICATION	9.184019993258626E-7	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999991277395208	WITHOUT_CLASSIFICATION	8.722604792976763E-7	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999992163929939	WITHOUT_CLASSIFICATION	7.836070060909257E-7	TEST
// line 488	WITHOUT_CLASSIFICATION	0.999999087533915	WITHOUT_CLASSIFICATION	9.124660850260835E-7	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999990529864243	WITHOUT_CLASSIFICATION	9.470135756237309E-7	TEST
// line 497	WITHOUT_CLASSIFICATION	0.999999094632387	WITHOUT_CLASSIFICATION	9.053676130217937E-7	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999983474423363	WITHOUT_CLASSIFICATION	1.6525576637654833E-6	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999989589316688	WITHOUT_CLASSIFICATION	1.0410683311216215E-6	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999988118579085	WITHOUT_CLASSIFICATION	1.1881420915539591E-6	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999991148837225	WITHOUT_CLASSIFICATION	8.851162774647045E-7	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999991016401691	WITHOUT_CLASSIFICATION	8.983598307620268E-7	TEST
// line 526	WITHOUT_CLASSIFICATION	0.999998973881715	WITHOUT_CLASSIFICATION	1.0261182850652035E-6	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999989724141018	WITHOUT_CLASSIFICATION	1.0275858981771383E-6	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999988321745578	WITHOUT_CLASSIFICATION	1.1678254422259626E-6	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999991588403148	WITHOUT_CLASSIFICATION	8.4115968534079E-7	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999991689287276	WITHOUT_CLASSIFICATION	8.310712722489904E-7	TEST
// line 610	WITHOUT_CLASSIFICATION	0.999999188574066	WITHOUT_CLASSIFICATION	8.114259339236086E-7	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999990303037164	WITHOUT_CLASSIFICATION	9.696962835300793E-7	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999991892999713	WITHOUT_CLASSIFICATION	8.107000287985961E-7	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999990492756317	WITHOUT_CLASSIFICATION	9.50724368201342E-7	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999989827490571	WITHOUT_CLASSIFICATION	1.0172509430245604E-6	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999989140432642	WITHOUT_CLASSIFICATION	1.0859567358030484E-6	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999991175932249	WITHOUT_CLASSIFICATION	8.824067751918004E-7	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999990969311773	WITHOUT_CLASSIFICATION	9.030688227050617E-7	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999991941927748	WITHOUT_CLASSIFICATION	8.058072251837832E-7	TEST
// line 534	WITHOUT_CLASSIFICATION	0.999998853870315	WITHOUT_CLASSIFICATION	1.1461296850771248E-6	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999990394058107	WITHOUT_CLASSIFICATION	9.605941892825117E-7	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999989717598528	WITHOUT_CLASSIFICATION	1.0282401471957976E-6	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999990652935133	WITHOUT_CLASSIFICATION	9.34706486729319E-7	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999992922855916	WITHOUT_CLASSIFICATION	7.077144083109299E-7	TEST
// line 571	WITHOUT_CLASSIFICATION	0.999999299310908	WITHOUT_CLASSIFICATION	7.006890920177335E-7	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999991705264799	WITHOUT_CLASSIFICATION	8.294735201781216E-7	TEST
// line 579	WITHOUT_CLASSIFICATION	0.999999080544347	WITHOUT_CLASSIFICATION	9.194556528722377E-7	TEST
// line 586	WITHOUT_CLASSIFICATION	0.999999091859071	WITHOUT_CLASSIFICATION	9.081409290022E-7	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999989743208594	WITHOUT_CLASSIFICATION	1.02567914065785E-6	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999988675531751	WITHOUT_CLASSIFICATION	1.1324468249190229E-6	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999990474504274	WITHOUT_CLASSIFICATION	9.525495726125437E-7	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999989754950678	WITHOUT_CLASSIFICATION	1.0245049321817883E-6	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999986165017181	WITHOUT_CLASSIFICATION	1.3834982818773216E-6	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999989966760988	WITHOUT_CLASSIFICATION	1.0033239011796292E-6	TEST
// line 630	WITHOUT_CLASSIFICATION	0.999998641088007	WITHOUT_CLASSIFICATION	1.3589119930851914E-6	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999988459426116	WITHOUT_CLASSIFICATION	1.1540573884468625E-6	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999987130101989	WITHOUT_CLASSIFICATION	1.2869898010795233E-6	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999990780405246	WITHOUT_CLASSIFICATION	9.219594755256547E-7	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999991981241256	WITHOUT_CLASSIFICATION	8.018758744076944E-7	TEST
// line 661	WITHOUT_CLASSIFICATION	0.999999266652958	WITHOUT_CLASSIFICATION	7.333470420159035E-7	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999991388282485	WITHOUT_CLASSIFICATION	8.611717513845392E-7	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999991399935068	WITHOUT_CLASSIFICATION	8.60006493159836E-7	TEST
// line 682	WITHOUT_CLASSIFICATION	0.999998895486212	WITHOUT_CLASSIFICATION	1.1045137880337801E-6	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999990819070416	WITHOUT_CLASSIFICATION	9.180929584445181E-7	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999990495702732	WITHOUT_CLASSIFICATION	9.504297268230099E-7	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999990115720186	WITHOUT_CLASSIFICATION	9.884279813453748E-7	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999988092790458	WITHOUT_CLASSIFICATION	1.1907209541285223E-6	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999989534269734	WITHOUT_CLASSIFICATION	1.046573026530008E-6	TEST
// line 737	WITHOUT_CLASSIFICATION	0.999998847965506	WITHOUT_CLASSIFICATION	1.1520344940332165E-6	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999988806021117	WITHOUT_CLASSIFICATION	1.1193978882770554E-6	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999990539727696	WITHOUT_CLASSIFICATION	9.460272304562851E-7	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999990217158377	WITHOUT_CLASSIFICATION	9.782841622702856E-7	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999987085293092	WITHOUT_CLASSIFICATION	1.2914706908418083E-6	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999992166624161	WITHOUT_CLASSIFICATION	7.833375839809342E-7	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999992057104755	WITHOUT_CLASSIFICATION	7.942895244600824E-7	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999988540535006	WITHOUT_CLASSIFICATION	1.1459464992598186E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999990725282087	WITHOUT_CLASSIFICATION	9.274717912089359E-7	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999990416879939	WITHOUT_CLASSIFICATION	9.583120061415616E-7	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999985807288774	WITHOUT_CLASSIFICATION	1.4192711226219348E-6	TEST
// line 899	WITHOUT_CLASSIFICATION	0.999998946228686	WITHOUT_CLASSIFICATION	1.0537713140442084E-6	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999983747704132	WITHOUT_CLASSIFICATION	1.625229586924261E-6	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999989894702241	WITHOUT_CLASSIFICATION	1.0105297757886042E-6	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999988369645871	WITHOUT_CLASSIFICATION	1.1630354127653079E-6	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999987038501033	WITHOUT_CLASSIFICATION	1.2961498967620579E-6	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999991300798912	WITHOUT_CLASSIFICATION	8.699201088943709E-7	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999986307331196	WITHOUT_CLASSIFICATION	1.3692668803977987E-6	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999984646489666	WITHOUT_CLASSIFICATION	1.535351033474552E-6	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999988555896012	WITHOUT_CLASSIFICATION	1.1444103987907023E-6	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999985494019702	WITHOUT_CLASSIFICATION	1.450598029751541E-6	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999984588763093	WITHOUT_CLASSIFICATION	1.541123690586113E-6	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999992059198155	WITHOUT_CLASSIFICATION	7.940801844001073E-7	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999991093109384	WITHOUT_CLASSIFICATION	8.906890615542794E-7	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999988914217794	WITHOUT_CLASSIFICATION	1.108578220552957E-6	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999987439256058	WITHOUT_CLASSIFICATION	1.2560743941809199E-6	TEST
// line 866	WITHOUT_CLASSIFICATION	0.99999906565307	WITHOUT_CLASSIFICATION	9.343469300896227E-7	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999989673373744	WITHOUT_CLASSIFICATION	1.0326626256890627E-6	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999991006331558	WITHOUT_CLASSIFICATION	8.993668441906798E-7	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999990466129508	WITHOUT_CLASSIFICATION	9.533870490588412E-7	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999990863308043	WITHOUT_CLASSIFICATION	9.136691958073901E-7	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999987721198684	WITHOUT_CLASSIFICATION	1.2278801315986327E-6	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999985259174585	WITHOUT_CLASSIFICATION	1.4740825414186194E-6	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999987594845057	WITHOUT_CLASSIFICATION	1.240515494368325E-6	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999989673461869	WITHOUT_CLASSIFICATION	1.032653813057431E-6	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999991516008876	WITHOUT_CLASSIFICATION	8.483991123746171E-7	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999987968443015	WITHOUT_CLASSIFICATION	1.2031556985177836E-6	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999986664315758	WITHOUT_CLASSIFICATION	1.333568424327034E-6	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999991415403598	WITHOUT_CLASSIFICATION	8.584596400770366E-7	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999990355086708	WITHOUT_CLASSIFICATION	9.644913293119642E-7	TEST
// line 951	WITHOUT_CLASSIFICATION	0.999999158708817	WITHOUT_CLASSIFICATION	8.41291183129746E-7	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999990127897618	WITHOUT_CLASSIFICATION	9.872102382310267E-7	TEST
// line 965	WITHOUT_CLASSIFICATION	0.999999044861231	WITHOUT_CLASSIFICATION	9.551387688907957E-7	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999990207939419	WITHOUT_CLASSIFICATION	9.79206058043594E-7	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999990331302334	WITHOUT_CLASSIFICATION	9.668697665472314E-7	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999985366959372	WITHOUT_CLASSIFICATION	1.463304062854403E-6	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999989351923424	WITHOUT_CLASSIFICATION	1.0648076576715623E-6	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999986749319386	WITHOUT_CLASSIFICATION	1.3250680614082835E-6	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999987550990947	WITHOUT_CLASSIFICATION	1.2449009052865984E-6	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999992051131729	WITHOUT_CLASSIFICATION	7.948868271609987E-7	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999989097051818	WITHOUT_CLASSIFICATION	1.0902948182561273E-6	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.999999135840737	WITHOUT_CLASSIFICATION	8.641592630823611E-7	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999991720958373	WITHOUT_CLASSIFICATION	8.279041626361657E-7	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999992380386205	WITHOUT_CLASSIFICATION	7.619613795621741E-7	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999991193550688	WITHOUT_CLASSIFICATION	8.806449311515235E-7	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999992637614008	WITHOUT_CLASSIFICATION	7.362385991359446E-7	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999991839613444	WITHOUT_CLASSIFICATION	8.160386556991023E-7	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999993375373344	WITHOUT_CLASSIFICATION	6.62462665584436E-7	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999992071166202	WITHOUT_CLASSIFICATION	7.928833798709201E-7	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999989311635014	WITHOUT_CLASSIFICATION	1.068836498625827E-6	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999992063281581	WITHOUT_CLASSIFICATION	7.936718418460205E-7	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999992915658135	WITHOUT_CLASSIFICATION	7.084341865956096E-7	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999988779894177	WITHOUT_CLASSIFICATION	1.1220105822726818E-6	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999989546141058	WITHOUT_CLASSIFICATION	1.0453858942348761E-6	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999991958668988	WITHOUT_CLASSIFICATION	8.041331011704946E-7	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.999999195016587	WITHOUT_CLASSIFICATION	8.049834130421718E-7	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999991944534454	WITHOUT_CLASSIFICATION	8.055465546877006E-7	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999991960165285	WITHOUT_CLASSIFICATION	8.039834714700527E-7	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999990404939716	WITHOUT_CLASSIFICATION	9.595060283472769E-7	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999990804667398	WITHOUT_CLASSIFICATION	9.195332602653924E-7	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999991388284357	WITHOUT_CLASSIFICATION	8.611715643781012E-7	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999987769297334	WITHOUT_CLASSIFICATION	1.2230702665688408E-6	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999993313523874	WITHOUT_CLASSIFICATION	6.686476127095825E-7	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999993466267827	WITHOUT_CLASSIFICATION	6.533732172886744E-7	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999992806550541	WITHOUT_CLASSIFICATION	7.193449458853551E-7	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.999999185462735	WITHOUT_CLASSIFICATION	8.145372649645363E-7	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.999999208925651	WITHOUT_CLASSIFICATION	7.910743489865457E-7	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999990186093021	WITHOUT_CLASSIFICATION	9.813906979332184E-7	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999993303760676	WITHOUT_CLASSIFICATION	6.696239323676796E-7	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999992580702507	WITHOUT_CLASSIFICATION	7.41929749328592E-7	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.999999341711668	WITHOUT_CLASSIFICATION	6.582883319691625E-7	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999992262343602	WITHOUT_CLASSIFICATION	7.737656398476375E-7	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999991314982547	WITHOUT_CLASSIFICATION	8.685017452995726E-7	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999992852698408	WITHOUT_CLASSIFICATION	7.147301592522866E-7	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999991408606582	WITHOUT_CLASSIFICATION	8.591393417032676E-7	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999991234994653	WITHOUT_CLASSIFICATION	8.765005347300008E-7	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.999999278447429	WITHOUT_CLASSIFICATION	7.215525710669678E-7	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999988720103921	WITHOUT_CLASSIFICATION	1.127989608001881E-6	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999991997272583	WITHOUT_CLASSIFICATION	8.002727417900633E-7	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999989365104016	WITHOUT_CLASSIFICATION	1.0634895983343385E-6	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999989504492022	WITHOUT_CLASSIFICATION	1.0495507978985673E-6	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999991574828886	WITHOUT_CLASSIFICATION	8.425171113043651E-7	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999991847269484	WITHOUT_CLASSIFICATION	8.152730516679209E-7	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999991206246862	WITHOUT_CLASSIFICATION	8.793753138742756E-7	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999991851457849	WITHOUT_CLASSIFICATION	8.148542150743372E-7	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999990783543176	WITHOUT_CLASSIFICATION	9.216456825192552E-7	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999989132706688	WITHOUT_CLASSIFICATION	1.0867293311428552E-6	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999992166346854	WITHOUT_CLASSIFICATION	7.8336531462484E-7	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999991056802567	WITHOUT_CLASSIFICATION	8.943197433124845E-7	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999991162222587	WITHOUT_CLASSIFICATION	8.837777412053981E-7	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999990029770413	WITHOUT_CLASSIFICATION	9.970229587292331E-7	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999989951304884	WITHOUT_CLASSIFICATION	1.004869511581233E-6	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999989894177932	WITHOUT_CLASSIFICATION	1.0105822067312344E-6	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999988848951187	WITHOUT_CLASSIFICATION	1.1151048813052452E-6	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999987737735128	WITHOUT_CLASSIFICATION	1.226226487230333E-6	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999989990193038	WITHOUT_CLASSIFICATION	1.0009806961927338E-6	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999990214065498	WITHOUT_CLASSIFICATION	9.785934502221808E-7	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999987478445561	WITHOUT_CLASSIFICATION	1.2521554437901724E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999992489518	WITHOUT_CLASSIFICATION	7.510481998941101E-7	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999991981714815	WITHOUT_CLASSIFICATION	8.018285184211787E-7	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999992394335245	WITHOUT_CLASSIFICATION	7.605664755605588E-7	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999992513420138	WITHOUT_CLASSIFICATION	7.486579860615881E-7	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999989910192695	WITHOUT_CLASSIFICATION	1.0089807305490334E-6	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.999999247665458	WITHOUT_CLASSIFICATION	7.52334542090434E-7	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.999999190797852	WITHOUT_CLASSIFICATION	8.092021480372552E-7	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999986420689028	WITHOUT_CLASSIFICATION	1.3579310972487168E-6	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999991057035642	WITHOUT_CLASSIFICATION	8.942964358972721E-7	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999990932074425	WITHOUT_CLASSIFICATION	9.067925575668196E-7	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999988661948301	WITHOUT_CLASSIFICATION	1.1338051698349291E-6	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999988727146022	WITHOUT_CLASSIFICATION	1.1272853978593933E-6	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.999998571108768	WITHOUT_CLASSIFICATION	1.4288912319591113E-6	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.999999093374652	WITHOUT_CLASSIFICATION	9.06625348059111E-7	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999988901934653	WITHOUT_CLASSIFICATION	1.1098065346449058E-6	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999991120284646	WITHOUT_CLASSIFICATION	8.879715354954877E-7	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999990736099157	WITHOUT_CLASSIFICATION	9.263900843818622E-7	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999989817133569	WITHOUT_CLASSIFICATION	1.0182866431124695E-6	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999990771779401	WITHOUT_CLASSIFICATION	9.228220597850946E-7	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.999998980074936	WITHOUT_CLASSIFICATION	1.0199250639863592E-6	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.999999097225833	WITHOUT_CLASSIFICATION	9.027741670125285E-7	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999990914820304	WITHOUT_CLASSIFICATION	9.08517969575832E-7	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999989892445406	WITHOUT_CLASSIFICATION	1.0107554594564985E-6	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999989478190753	WITHOUT_CLASSIFICATION	1.0521809247736828E-6	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999991832749514	WITHOUT_CLASSIFICATION	8.167250485650085E-7	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999991629712642	WITHOUT_CLASSIFICATION	8.370287359143195E-7	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999993379118937	WITHOUT_CLASSIFICATION	6.620881062052101E-7	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999991440807221	WITHOUT_CLASSIFICATION	8.559192780376091E-7	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999991798946644	WITHOUT_CLASSIFICATION	8.20105335613651E-7	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999988954807155	WITHOUT_CLASSIFICATION	1.104519284511206E-6	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999990624463791	WITHOUT_CLASSIFICATION	9.375536207899917E-7	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999990838542939	WITHOUT_CLASSIFICATION	9.16145706002323E-7	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999991672941728	WITHOUT_CLASSIFICATION	8.327058270532015E-7	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999993260495849	WITHOUT_CLASSIFICATION	6.739504150883444E-7	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999992748552777	WITHOUT_CLASSIFICATION	7.25144722241024E-7	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999993245647762	WITHOUT_CLASSIFICATION	6.754352237763788E-7	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999991766088759	WITHOUT_CLASSIFICATION	8.233911240084712E-7	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999989590283564	WITHOUT_CLASSIFICATION	1.04097164349427E-6	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.999999220921405	WITHOUT_CLASSIFICATION	7.790785949946618E-7	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999992424640545	WITHOUT_CLASSIFICATION	7.575359455382913E-7	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999989011215968	WITHOUT_CLASSIFICATION	1.0988784031598295E-6	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999990068073696	WITHOUT_CLASSIFICATION	9.931926302820768E-7	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999991840065026	WITHOUT_CLASSIFICATION	8.159934974121866E-7	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999993441043374	WITHOUT_CLASSIFICATION	6.558956625377593E-7	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999991175576853	WITHOUT_CLASSIFICATION	8.824423147071663E-7	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.999999258824165	WITHOUT_CLASSIFICATION	7.411758350308537E-7	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999993356720538	WITHOUT_CLASSIFICATION	6.643279462966454E-7	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999989802873721	WITHOUT_CLASSIFICATION	1.01971262789563E-6	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999989057625465	WITHOUT_CLASSIFICATION	1.0942374535671197E-6	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999991586456891	WITHOUT_CLASSIFICATION	8.413543108372091E-7	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999993522497439	WITHOUT_CLASSIFICATION	6.477502561353164E-7	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999992012014347	WITHOUT_CLASSIFICATION	7.987985652804211E-7	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999991981739816	WITHOUT_CLASSIFICATION	8.018260183517586E-7	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999992547520674	WITHOUT_CLASSIFICATION	7.452479327014672E-7	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999992514593328	WITHOUT_CLASSIFICATION	7.485406672515667E-7	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999991044653429	WITHOUT_CLASSIFICATION	8.95534657059985E-7	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999992254024829	WITHOUT_CLASSIFICATION	7.745975171485544E-7	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999992563689615	WITHOUT_CLASSIFICATION	7.43631038616857E-7	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999991936854772	WITHOUT_CLASSIFICATION	8.063145228189423E-7	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999991964539081	WITHOUT_CLASSIFICATION	8.035460918109358E-7	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999990773316105	WITHOUT_CLASSIFICATION	9.226683893731499E-7	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999989798450737	WITHOUT_CLASSIFICATION	1.0201549262552724E-6	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999993530718323	WITHOUT_CLASSIFICATION	6.469281675723948E-7	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999993450895676	WITHOUT_CLASSIFICATION	6.549104324877541E-7	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999993645483916	WITHOUT_CLASSIFICATION	6.354516085243987E-7	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999991903074827	WITHOUT_CLASSIFICATION	8.096925171707706E-7	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999990825779729	WITHOUT_CLASSIFICATION	9.174220272115222E-7	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999993184824066	WITHOUT_CLASSIFICATION	6.815175932518906E-7	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999990445880428	WITHOUT_CLASSIFICATION	9.554119571277373E-7	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999993723130949	WITHOUT_CLASSIFICATION	6.276869050346164E-7	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999992616309231	WITHOUT_CLASSIFICATION	7.383690768452437E-7	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999991984514726	WITHOUT_CLASSIFICATION	8.015485274413674E-7	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.999999106139155	WITHOUT_CLASSIFICATION	8.938608449834789E-7	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999991100016716	WITHOUT_CLASSIFICATION	8.899983282589339E-7	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999990234993343	WITHOUT_CLASSIFICATION	9.76500665710132E-7	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999993474117304	WITHOUT_CLASSIFICATION	6.525882696165677E-7	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999993714292272	WITHOUT_CLASSIFICATION	6.285707728559119E-7	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999992928552675	WITHOUT_CLASSIFICATION	7.071447325421102E-7	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999993570482226	WITHOUT_CLASSIFICATION	6.429517774206131E-7	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999993540216175	WITHOUT_CLASSIFICATION	6.459783825816763E-7	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999993469003615	WITHOUT_CLASSIFICATION	6.530996384471693E-7	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999991440913254	WITHOUT_CLASSIFICATION	8.559086745593E-7	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999993045214823	WITHOUT_CLASSIFICATION	6.954785176145644E-7	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999992882364613	WITHOUT_CLASSIFICATION	7.117635386824751E-7	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.99999926581209	WITHOUT_CLASSIFICATION	7.341879100002135E-7	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999992562510254	WITHOUT_CLASSIFICATION	7.437489747575761E-7	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.999999031486396	WITHOUT_CLASSIFICATION	9.685136040259388E-7	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999985669861828	WITHOUT_CLASSIFICATION	1.433013817155467E-6	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999990972146463	WITHOUT_CLASSIFICATION	9.027853536012791E-7	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999989696461064	WITHOUT_CLASSIFICATION	1.0303538935823983E-6	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999992689874301	WITHOUT_CLASSIFICATION	7.310125699182679E-7	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999991075037388	WITHOUT_CLASSIFICATION	8.924962611749589E-7	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.999999079630259	WITHOUT_CLASSIFICATION	9.203697409444245E-7	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999990045075954	WITHOUT_CLASSIFICATION	9.954924046361184E-7	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999992833217749	WITHOUT_CLASSIFICATION	7.166782249808973E-7	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999954452901398	WITHOUT_CLASSIFICATION	4.554709860161001E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999957127156345	WITHOUT_CLASSIFICATION	4.287284365508693E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999931984686223	WITHOUT_CLASSIFICATION	6.801531377627833E-6	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999936549198177	WITHOUT_CLASSIFICATION	6.345080182311385E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998172367326008	WITHOUT_CLASSIFICATION	1.827632673991445E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999174459049364	WITHOUT_CLASSIFICATION	8.255409506357883E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999651325470131	WITHOUT_CLASSIFICATION	3.48674529868487E-5	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999749181391958	WITHOUT_CLASSIFICATION	2.5081860804168264E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.999999274147443	WITHOUT_CLASSIFICATION	7.258525568706224E-7	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999991937549912	WITHOUT_CLASSIFICATION	8.062450086950274E-7	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999991434234742	WITHOUT_CLASSIFICATION	8.565765257416672E-7	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999992803587789	WITHOUT_CLASSIFICATION	7.196412210716836E-7	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999992770089804	WITHOUT_CLASSIFICATION	7.22991019559909E-7	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999991787478486	WITHOUT_CLASSIFICATION	8.212521513175625E-7	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999988675711593	WITHOUT_CLASSIFICATION	1.1324288406861066E-6	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999989955493451	WITHOUT_CLASSIFICATION	1.0044506549132824E-6	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999992679530356	WITHOUT_CLASSIFICATION	7.320469643069735E-7	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999991718129407	WITHOUT_CLASSIFICATION	8.281870592579886E-7	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999989755575478	WITHOUT_CLASSIFICATION	1.0244424521348927E-6	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999988732179312	WITHOUT_CLASSIFICATION	1.1267820687649331E-6	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999990759574912	WITHOUT_CLASSIFICATION	9.240425089336381E-7	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999991665834489	WITHOUT_CLASSIFICATION	8.33416551218231E-7	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999991078824545	WITHOUT_CLASSIFICATION	8.921175455855937E-7	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999989891863135	WITHOUT_CLASSIFICATION	1.010813686492111E-6	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.999999191301462	WITHOUT_CLASSIFICATION	8.086985379723017E-7	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999991172399479	WITHOUT_CLASSIFICATION	8.827600520493577E-7	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.999999003404019	WITHOUT_CLASSIFICATION	9.965959810337331E-7	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999992456177911	WITHOUT_CLASSIFICATION	7.543822088736139E-7	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.999997972437891	WITHOUT_CLASSIFICATION	2.0275621090197278E-6	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999979460397364	WITHOUT_CLASSIFICATION	2.053960263656848E-6	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999988138754592	WITHOUT_CLASSIFICATION	1.186124540819544E-6	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999981096094427	WITHOUT_CLASSIFICATION	1.8903905574229008E-6	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999983369509032	WITHOUT_CLASSIFICATION	1.6630490966903761E-6	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999997085428147	WITHOUT_CLASSIFICATION	2.914571852970331E-7	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999891314741995	WITHOUT_CLASSIFICATION	1.086852580049876E-5	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999996820430453	WITHOUT_CLASSIFICATION	3.1795695461093896E-7	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999981150208852	WITHOUT_CLASSIFICATION	1.8849791147440956E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999587664024	WITHOUT_CLASSIFICATION	4.1233597635030624E-8	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999979866875649	WITHOUT_CLASSIFICATION	2.013312435179117E-6	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998068202682	WITHOUT_CLASSIFICATION	1.931797318340178E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999998068202682	WITHOUT_CLASSIFICATION	1.931797318340178E-7	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999957723170462	WITHOUT_CLASSIFICATION	4.227682953760685E-6	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999941146640015	WITHOUT_CLASSIFICATION	5.885335998536042E-6	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.999999771785652	WITHOUT_CLASSIFICATION	2.2821434790226772E-7	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.999998604289614	WITHOUT_CLASSIFICATION	1.3957103860710695E-6	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999986727545422	WITHOUT_CLASSIFICATION	1.327245457685863E-6	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999944363863164	WITHOUT_CLASSIFICATION	5.563613683719745E-6	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999972537920415	WITHOUT_CLASSIFICATION	2.74620795854833E-6	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999999236652816	WITHOUT_CLASSIFICATION	7.633471840332595E-8	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999999777392694	WITHOUT_CLASSIFICATION	2.2260730635943886E-8	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999972009765574	WITHOUT_CLASSIFICATION	2.799023442494508E-6	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999720448949635	WITHOUT_CLASSIFICATION	2.7955105036571325E-5	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999738422692385	WITHOUT_CLASSIFICATION	2.6157730761501164E-5	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.999992061770467	WITHOUT_CLASSIFICATION	7.938229532985274E-6	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999961884298739	WITHOUT_CLASSIFICATION	3.8115701260311987E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999997940268772	WITHOUT_CLASSIFICATION	2.0597312273203772E-7	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999997940268772	WITHOUT_CLASSIFICATION	2.0597312273203772E-7	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999828168107923	WITHOUT_CLASSIFICATION	1.7183189207683214E-5	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.999999984746982	WITHOUT_CLASSIFICATION	1.5253017880466972E-8	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999500545574	WITHOUT_CLASSIFICATION	4.994544249425919E-8	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999990883178866	WITHOUT_CLASSIFICATION	9.116821133622906E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997922469347	WITHOUT_CLASSIFICATION	2.0775306527929847E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999671762442	WITHOUT_CLASSIFICATION	3.2823755805996857E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.999999727563453	WITHOUT_CLASSIFICATION	2.724365469756037E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999671762442	WITHOUT_CLASSIFICATION	3.2823755805996857E-7	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999906686216187	WITHOUT_CLASSIFICATION	9.33137838140857E-6	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999755707675	WITHOUT_CLASSIFICATION	2.4429232464802297E-8	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999996067477358	WITHOUT_CLASSIFICATION	3.932522642083831E-7	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999988648039406	WITHOUT_CLASSIFICATION	1.1351960593962894E-6	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999997086409229	WITHOUT_CLASSIFICATION	2.9135907705509893E-7	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999993634948962	WITHOUT_CLASSIFICATION	6.365051037471455E-7	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999999040671333	WITHOUT_CLASSIFICATION	9.593286655134962E-8	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999976493728797	WITHOUT_CLASSIFICATION	2.3506271202787836E-6	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999973725562357	WITHOUT_CLASSIFICATION	2.627443764290442E-6	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.999986004538733	WITHOUT_CLASSIFICATION	1.3995461267098808E-5	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999969923877521	WITHOUT_CLASSIFICATION	3.0076122479254376E-6	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999826947301542	WITHOUT_CLASSIFICATION	1.7305269845761504E-5	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999786159267363	WITHOUT_CLASSIFICATION	2.138407326364166E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.999997306961948	WITHOUT_CLASSIFICATION	2.69303805189174E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999957415209082	WITHOUT_CLASSIFICATION	4.258479091820108E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999957415209082	WITHOUT_CLASSIFICATION	4.258479091820108E-6	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999999342971093	WITHOUT_CLASSIFICATION	6.570289071010224E-8	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999987992021624	WITHOUT_CLASSIFICATION	1.2007978375577988E-6	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.99999985746092	WITHOUT_CLASSIFICATION	1.4253907998864092E-7	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999993689656819	WITHOUT_CLASSIFICATION	6.310343181844733E-7	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999999223452499	WITHOUT_CLASSIFICATION	7.765475007708375E-8	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999671762442	WITHOUT_CLASSIFICATION	3.2823755805996857E-7	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999999450017553	WITHOUT_CLASSIFICATION	5.4998244806577514E-8	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999968430557	WITHOUT_CLASSIFICATION	3.156944273906349E-9	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999971507991722	WITHOUT_CLASSIFICATION	2.8492008277979172E-6	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999586941853	WITHOUT_CLASSIFICATION	4.130581464022485E-8	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999942618208	WITHOUT_CLASSIFICATION	5.73817923750433E-9	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999573703898	WITHOUT_CLASSIFICATION	4.2629610267096335E-8	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999998519897642	WITHOUT_CLASSIFICATION	1.4801023588569626E-7	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999988701069278	WITHOUT_CLASSIFICATION	1.1298930722841326E-6	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999999359598396	WITHOUT_CLASSIFICATION	6.404016038890378E-8	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999952223280706	WITHOUT_CLASSIFICATION	4.777671929413433E-6	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999999191470516	WITHOUT_CLASSIFICATION	8.085294854769948E-8	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999387942294	WITHOUT_CLASSIFICATION	6.120577048438842E-8	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999997648993938	WITHOUT_CLASSIFICATION	2.3510060626531508E-7	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999966901420452	WITHOUT_CLASSIFICATION	3.309857954737185E-6	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.999999767201015	WITHOUT_CLASSIFICATION	2.3279898494864248E-7	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.999980590652856	WITHOUT_CLASSIFICATION	1.9409347144036956E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999998897042509	WITHOUT_CLASSIFICATION	1.1029574901388687E-7	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.999998798167193	WITHOUT_CLASSIFICATION	1.2018328071128017E-6	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999989067679955	WITHOUT_CLASSIFICATION	1.0932320044145161E-6	TEST
// no block	WITHOUT_CLASSIFICATION	0.999998754761645	WITHOUT_CLASSIFICATION	1.2452383549304443E-6	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999995652723261	WITHOUT_CLASSIFICATION	4.3472767392594487E-7	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999932096175077	WITHOUT_CLASSIFICATION	6.790382492183171E-6	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999996531901371	WITHOUT_CLASSIFICATION	3.468098628447159E-7	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999996819584074	WITHOUT_CLASSIFICATION	3.1804159263789994E-7	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999999366346463	WITHOUT_CLASSIFICATION	6.336535380820593E-8	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999984714939328	WITHOUT_CLASSIFICATION	1.5285060671759846E-6	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999999563112922	WITHOUT_CLASSIFICATION	4.368870783322327E-8	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999999715830359	WITHOUT_CLASSIFICATION	2.8416964095286155E-8	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9998860354782763	WITHOUT_CLASSIFICATION	1.1396452172369495E-4	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.999999564409881	WITHOUT_CLASSIFICATION	4.355901189501535E-7	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999996329473043	WITHOUT_CLASSIFICATION	3.670526956646901E-7	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999994332109509	WITHOUT_CLASSIFICATION	5.667890491655306E-7	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999961675488476	WITHOUT_CLASSIFICATION	3.832451152442242E-6	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999997337561999	WITHOUT_CLASSIFICATION	2.662438000787681E-7	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999998197701779	WITHOUT_CLASSIFICATION	1.8022982210512805E-7	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999999834562002	WITHOUT_CLASSIFICATION	1.6543799762783974E-8	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999999411361642	WITHOUT_CLASSIFICATION	5.886383572700105E-8	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999999613327359	WITHOUT_CLASSIFICATION	3.866726401639626E-8	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999998059694192	WITHOUT_CLASSIFICATION	1.9403058081714445E-7	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999965497335	WITHOUT_CLASSIFICATION	3.4502664645614514E-9	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999749181391958	WITHOUT_CLASSIFICATION	2.5081860804168264E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999716855370404	WITHOUT_CLASSIFICATION	2.8314462959649922E-5	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999996097859203	WITHOUT_CLASSIFICATION	3.902140797335587E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999976816270043	WITHOUT_CLASSIFICATION	2.318372995722802E-6	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999992969802701	WITHOUT_CLASSIFICATION	7.030197299006338E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999755707675	WITHOUT_CLASSIFICATION	2.4429232464802297E-8	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999998349245662	WITHOUT_CLASSIFICATION	1.650754337996029E-7	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999999950057985	WITHOUT_CLASSIFICATION	4.994201484154246E-9	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999993219793789	WITHOUT_CLASSIFICATION	6.780206211345884E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999810404057	WITHOUT_CLASSIFICATION	1.8959594246903267E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999810404057	WITHOUT_CLASSIFICATION	1.8959594246903267E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999361536378	WITHOUT_CLASSIFICATION	6.384636227059005E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999361536378	WITHOUT_CLASSIFICATION	6.384636227059005E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999361536378	WITHOUT_CLASSIFICATION	6.384636227059005E-8	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999972212442518	WITHOUT_CLASSIFICATION	2.7787557481502636E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999972212442518	WITHOUT_CLASSIFICATION	2.7787557481502636E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999952949470104	WITHOUT_CLASSIFICATION	4.705052989513923E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999952949470104	WITHOUT_CLASSIFICATION	4.705052989513923E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999514071418767	WITHOUT_CLASSIFICATION	4.859285812340785E-5	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999993643404718	WITHOUT_CLASSIFICATION	6.356595282971795E-7	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999995968033537	WITHOUT_CLASSIFICATION	4.031966463290518E-7	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999995968033537	WITHOUT_CLASSIFICATION	4.031966463290518E-7	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999998620152107	WITHOUT_CLASSIFICATION	1.37984789266631E-7	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999993633748911	WITHOUT_CLASSIFICATION	6.366251087981417E-7	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999996850730866	WITHOUT_CLASSIFICATION	3.149269133742083E-7	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999997687101534	WITHOUT_CLASSIFICATION	2.3128984655554667E-7	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999996823331574	WITHOUT_CLASSIFICATION	3.176668426205969E-7	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999997856607522	WITHOUT_CLASSIFICATION	2.1433924781749182E-7	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999985347064401	WITHOUT_CLASSIFICATION	1.4652935598994791E-6	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999997056513075	WITHOUT_CLASSIFICATION	2.9434869251265187E-7	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999997597196751	WITHOUT_CLASSIFICATION	2.4028032490982227E-7	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999998068563315	WITHOUT_CLASSIFICATION	1.9314366857613253E-7	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999999482700217	WITHOUT_CLASSIFICATION	5.172997828665918E-8	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999997810757844	WITHOUT_CLASSIFICATION	2.1892421572964384E-7	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999944305635586	WITHOUT_CLASSIFICATION	5.569436441307652E-6	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999997287600599	WITHOUT_CLASSIFICATION	2.7123994006462843E-7	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999998894063167	WITHOUT_CLASSIFICATION	1.1059368340178611E-7	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999928720298402	WITHOUT_CLASSIFICATION	7.127970159820875E-6	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999996005765835	WITHOUT_CLASSIFICATION	3.9942341642962354E-7	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999991096047134	WITHOUT_CLASSIFICATION	8.903952865504805E-7	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999995688804484	WITHOUT_CLASSIFICATION	4.3111955153549134E-7	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999860354943872	WITHOUT_CLASSIFICATION	1.3964505612754303E-5	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999776498587	WITHOUT_CLASSIFICATION	2.235014135906153E-8	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999338221605	WITHOUT_CLASSIFICATION	6.617783955008502E-8	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999998083133876	WITHOUT_CLASSIFICATION	1.916866124000678E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999615185938	WITHOUT_CLASSIFICATION	3.848140611255526E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999784764366	WITHOUT_CLASSIFICATION	2.152356336417007E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999264467784	WITHOUT_CLASSIFICATION	7.35532216107752E-8	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999132729218	WITHOUT_CLASSIFICATION	8.672707826508788E-8	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999441411829	WITHOUT_CLASSIFICATION	5.5858817185892255E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999649674439	WITHOUT_CLASSIFICATION	3.5032556071711355E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999804054602	WITHOUT_CLASSIFICATION	1.959453968669606E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999330388978	WITHOUT_CLASSIFICATION	6.696110222420462E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999725208555	WITHOUT_CLASSIFICATION	2.7479144544392797E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999846302626	WITHOUT_CLASSIFICATION	1.53697373790573E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999605467682	WITHOUT_CLASSIFICATION	3.9453231800413445E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999846302626	WITHOUT_CLASSIFICATION	1.53697373790573E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999846302626	WITHOUT_CLASSIFICATION	1.53697373790573E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999846302626	WITHOUT_CLASSIFICATION	1.53697373790573E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999846302626	WITHOUT_CLASSIFICATION	1.53697373790573E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999846302626	WITHOUT_CLASSIFICATION	1.53697373790573E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999846302626	WITHOUT_CLASSIFICATION	1.53697373790573E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999605467682	WITHOUT_CLASSIFICATION	3.9453231800413445E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999605467682	WITHOUT_CLASSIFICATION	3.9453231800413445E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999605467682	WITHOUT_CLASSIFICATION	3.9453231800413445E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999605467682	WITHOUT_CLASSIFICATION	3.9453231800413445E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999605467682	WITHOUT_CLASSIFICATION	3.9453231800413445E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999605467682	WITHOUT_CLASSIFICATION	3.9453231800413445E-8	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999998547042733	WITHOUT_CLASSIFICATION	1.4529572665010043E-7	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999997376306566	WITHOUT_CLASSIFICATION	2.6236934334679904E-7	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999994886011692	WITHOUT_CLASSIFICATION	5.113988307678945E-7	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998949601169	WITHOUT_CLASSIFICATION	1.0503988318073689E-7	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999933804549	WITHOUT_CLASSIFICATION	6.619545095604193E-9	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998643009682	WITHOUT_CLASSIFICATION	1.3569903182890433E-7	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999999924887687	WITHOUT_CLASSIFICATION	7.511231352916123E-9	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999883139462	WITHOUT_CLASSIFICATION	1.1686053880590204E-8	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.999999982165772	WITHOUT_CLASSIFICATION	1.7834227988635342E-8	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999985048714851	WITHOUT_CLASSIFICATION	1.4951285149236828E-6	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999411259079634	WITHOUT_CLASSIFICATION	5.887409203658737E-5	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999772065654	WITHOUT_CLASSIFICATION	2.2793434479330095E-8	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999986784947829	WITHOUT_CLASSIFICATION	1.32150521720924E-6	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999806266414	WITHOUT_CLASSIFICATION	1.93733586232042E-8	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999995907784024	WITHOUT_CLASSIFICATION	4.0922159755530477E-7	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999352025646994	WITHOUT_CLASSIFICATION	6.479743530065375E-5	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999995942014609	WITHOUT_CLASSIFICATION	4.057985391939084E-7	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999999764011062	WITHOUT_CLASSIFICATION	2.359889392059884E-8	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.999999973544752	WITHOUT_CLASSIFICATION	2.645524798782856E-8	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999729834634	WITHOUT_CLASSIFICATION	2.7016536628030717E-8	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999985025736992	WITHOUT_CLASSIFICATION	1.4974263007972191E-6	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999995150976673	WITHOUT_CLASSIFICATION	4.849023328329758E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.999999727563453	WITHOUT_CLASSIFICATION	2.724365469756037E-7	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999930134057434	WITHOUT_CLASSIFICATION	6.986594256573141E-6	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999959828137011	WITHOUT_CLASSIFICATION	4.017186298877183E-6	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999770496949	WITHOUT_CLASSIFICATION	2.295030516661392E-8	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999570833371	WITHOUT_CLASSIFICATION	4.2916662920473335E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999996237690575	WITHOUT_CLASSIFICATION	3.7623094256804486E-7	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999984060227832	WITHOUT_CLASSIFICATION	1.5939772167211211E-6	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999999460501616	WITHOUT_CLASSIFICATION	5.394983841108307E-8	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999998321296231	WITHOUT_CLASSIFICATION	1.6787037700268573E-7	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999690270331	WITHOUT_CLASSIFICATION	3.0972966836333007E-8	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999827039915	WITHOUT_CLASSIFICATION	1.7296008503372282E-8	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999184797489	WITHOUT_CLASSIFICATION	8.152025111900302E-8	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999999817049331	WITHOUT_CLASSIFICATION	1.8295066976882847E-8	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999998958146517	WITHOUT_CLASSIFICATION	1.041853482682438E-7	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999999629582524	WITHOUT_CLASSIFICATION	3.704174760837759E-8	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.999999490232849	WITHOUT_CLASSIFICATION	5.097671509789274E-7	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999996970715	WITHOUT_CLASSIFICATION	3.0292855469023465E-10	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999857946451	WITHOUT_CLASSIFICATION	1.420535493879108E-8	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999996622467876	WITHOUT_CLASSIFICATION	3.377532123388781E-7	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999996327240386	WITHOUT_CLASSIFICATION	3.672759614021161E-7	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999991411657984	WITHOUT_CLASSIFICATION	8.588342017077475E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999988294956749	WITHOUT_CLASSIFICATION	1.1705043251647612E-6	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999988294956749	WITHOUT_CLASSIFICATION	1.1705043251647612E-6	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999994826124601	WITHOUT_CLASSIFICATION	5.173875398949857E-7	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999994826124601	WITHOUT_CLASSIFICATION	5.173875398949857E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999979061243797	WITHOUT_CLASSIFICATION	2.0938756204088624E-6	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999979061243797	WITHOUT_CLASSIFICATION	2.0938756204088624E-6	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999997330660787	WITHOUT_CLASSIFICATION	2.669339213041207E-7	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999999767451874	WITHOUT_CLASSIFICATION	2.3254812657693262E-8	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999994226453957	WITHOUT_CLASSIFICATION	5.773546043652029E-7	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999996745119247	WITHOUT_CLASSIFICATION	3.254880752859727E-7	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999999800857463	WITHOUT_CLASSIFICATION	1.9914253626726775E-8	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999906569808045	WITHOUT_CLASSIFICATION	9.343019195504676E-6	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999990847857486	WITHOUT_CLASSIFICATION	9.152142513853735E-7	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999871950072	WITHOUT_CLASSIFICATION	1.2804992886730882E-8	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999267221739	WITHOUT_CLASSIFICATION	7.327782614615373E-8	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999987388679982	WITHOUT_CLASSIFICATION	1.2611320017469855E-6	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999908977958691	WITHOUT_CLASSIFICATION	9.102204130846738E-6	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999958063133373	WITHOUT_CLASSIFICATION	4.1936866626750025E-6	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999638448052	WITHOUT_CLASSIFICATION	3.615519489996473E-8	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999999929650862	WITHOUT_CLASSIFICATION	7.034913790334183E-9	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999994374066047	WITHOUT_CLASSIFICATION	5.625933953411248E-7	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999978754187269	WITHOUT_CLASSIFICATION	2.124581273057808E-6	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999914180169	WITHOUT_CLASSIFICATION	8.581983160153926E-9	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999982699627085	WITHOUT_CLASSIFICATION	1.7300372915679672E-6	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999991986787221	WITHOUT_CLASSIFICATION	8.01321277780127E-7	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999963737060372	WITHOUT_CLASSIFICATION	3.6262939628413886E-6	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999978951367362	WITHOUT_CLASSIFICATION	2.1048632638971402E-6	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999996982694623	WITHOUT_CLASSIFICATION	3.017305376293092E-7	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.999998100855556	WITHOUT_CLASSIFICATION	1.8991444439797407E-6	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999438670187	WITHOUT_CLASSIFICATION	5.61329813819719E-8	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999991574020329	WITHOUT_CLASSIFICATION	8.425979669908278E-7	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999402210956	WITHOUT_CLASSIFICATION	5.977890430666175E-8	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999975647614688	WITHOUT_CLASSIFICATION	2.435238531067313E-6	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997865359544	WITHOUT_CLASSIFICATION	2.134640455759739E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997865359544	WITHOUT_CLASSIFICATION	2.134640455759739E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997865359544	WITHOUT_CLASSIFICATION	2.134640455759739E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999999995720292	WITHOUT_CLASSIFICATION	4.2797080464350415E-9	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999999995720292	WITHOUT_CLASSIFICATION	4.2797080464350415E-9	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999966901420452	WITHOUT_CLASSIFICATION	3.309857954737185E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999966901420452	WITHOUT_CLASSIFICATION	3.309857954737185E-6	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.999999758882939	WITHOUT_CLASSIFICATION	2.411170609311101E-7	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999887765335421	WITHOUT_CLASSIFICATION	1.1223466457844283E-5	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999995787976268	WITHOUT_CLASSIFICATION	4.21202373183353E-7	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.999999134494479	WITHOUT_CLASSIFICATION	8.655055211530972E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997865359544	WITHOUT_CLASSIFICATION	2.134640455759739E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997865359544	WITHOUT_CLASSIFICATION	2.134640455759739E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997865359544	WITHOUT_CLASSIFICATION	2.134640455759739E-7	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999999995720292	WITHOUT_CLASSIFICATION	4.2797080464350415E-9	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999999995720292	WITHOUT_CLASSIFICATION	4.2797080464350415E-9	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.999999995720292	WITHOUT_CLASSIFICATION	4.2797080464350415E-9	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999966901420452	WITHOUT_CLASSIFICATION	3.309857954737185E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999966901420452	WITHOUT_CLASSIFICATION	3.309857954737185E-6	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.999999926673341	WITHOUT_CLASSIFICATION	7.332665890219148E-8	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999995035171507	WITHOUT_CLASSIFICATION	4.96482849222957E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999969388421772	WITHOUT_CLASSIFICATION	3.0611578227253614E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999969388421772	WITHOUT_CLASSIFICATION	3.0611578227253614E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999969388421772	WITHOUT_CLASSIFICATION	3.0611578227253614E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999969388421772	WITHOUT_CLASSIFICATION	3.0611578227253614E-6	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999969388421772	WITHOUT_CLASSIFICATION	3.0611578227253614E-6	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999998614902741	WITHOUT_CLASSIFICATION	1.3850972598858665E-7	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999992075634454	WITHOUT_CLASSIFICATION	7.924365545273498E-7	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999987912848447	WITHOUT_CLASSIFICATION	1.2087151553654259E-6	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999983842279846	WITHOUT_CLASSIFICATION	1.6157720153577432E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999990173098005	WITHOUT_CLASSIFICATION	9.826901995102588E-7	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999897749827871	WITHOUT_CLASSIFICATION	1.0225017212989714E-5	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999866151725976	WITHOUT_CLASSIFICATION	1.3384827402430276E-5	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999996735020086	WITHOUT_CLASSIFICATION	3.2649799146226716E-7	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999994315701487	WITHOUT_CLASSIFICATION	5.684298512384844E-7	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999983508132689	WITHOUT_CLASSIFICATION	1.6491867310413651E-6	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999989981589964	WITHOUT_CLASSIFICATION	1.001841003657955E-6	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999946966490635	WITHOUT_CLASSIFICATION	5.3033509365322906E-6	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.999985971977598	WITHOUT_CLASSIFICATION	1.4028022402068343E-5	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999997093514905	WITHOUT_CLASSIFICATION	2.906485095111959E-7	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999979643501038	WITHOUT_CLASSIFICATION	2.0356498960969825E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999993450983618	WITHOUT_CLASSIFICATION	6.54901638192179E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999993450983618	WITHOUT_CLASSIFICATION	6.54901638192179E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999993450983618	WITHOUT_CLASSIFICATION	6.54901638192179E-6	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9995234514950538	WITHOUT_CLASSIFICATION	4.765485049461056E-4	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9995236238064988	WITHOUT_CLASSIFICATION	4.7637619350114765E-4	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999997422018388	WITHOUT_CLASSIFICATION	2.5779816113855097E-7	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999229521341	WITHOUT_CLASSIFICATION	7.704786592899702E-8	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999996350273244	WITHOUT_CLASSIFICATION	3.649726755358903E-7	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999998626015273	WITHOUT_CLASSIFICATION	1.373984726105583E-7	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999996795497383	WITHOUT_CLASSIFICATION	3.204502616634582E-7	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999995776919528	WITHOUT_CLASSIFICATION	4.2230804726245796E-7	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999989337290446	WITHOUT_CLASSIFICATION	1.0662709554589973E-6	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999998978662311	WITHOUT_CLASSIFICATION	1.0213376892635746E-7	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999997391097517	WITHOUT_CLASSIFICATION	2.608902483013638E-7	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999997667006653	WITHOUT_CLASSIFICATION	2.3329933471247546E-7	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999998427507268	WITHOUT_CLASSIFICATION	1.5724927305764201E-7	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999996793053065	WITHOUT_CLASSIFICATION	3.2069469348802526E-7	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999998636656381	WITHOUT_CLASSIFICATION	1.363343618532105E-7	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999998194893539	WITHOUT_CLASSIFICATION	1.8051064607045152E-7	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999996390477588	WITHOUT_CLASSIFICATION	3.6095224117040237E-7	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999997205551138	WITHOUT_CLASSIFICATION	2.7944488626234427E-7	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999995216650166	WITHOUT_CLASSIFICATION	4.783349834648524E-7	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999994302872777	WITHOUT_CLASSIFICATION	5.697127223625249E-7	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999994642766773	WITHOUT_CLASSIFICATION	5.357233226966703E-7	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999990007785712	WITHOUT_CLASSIFICATION	9.992214287613589E-7	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999998577988567	WITHOUT_CLASSIFICATION	1.4220114322570326E-7	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999998146383965	WITHOUT_CLASSIFICATION	1.8536160344177846E-7	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999991934055145	WITHOUT_CLASSIFICATION	8.065944855977798E-7	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999993990691897	WITHOUT_CLASSIFICATION	6.00930810303191E-7	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.99999947982789	WITHOUT_CLASSIFICATION	5.20172110071114E-7	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999994111728605	WITHOUT_CLASSIFICATION	5.888271395349607E-7	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999967163838683	WITHOUT_CLASSIFICATION	3.28361613160293E-6	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9999697301005743	WITHOUT_CLASSIFICATION	3.0269899425605078E-5	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.999954142799052	WITHOUT_CLASSIFICATION	4.5857200947993696E-5	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9999096968584286	WITHOUT_CLASSIFICATION	9.030314157141226E-5	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.999966714634904	WITHOUT_CLASSIFICATION	3.328536509603788E-5	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9999578881319868	WITHOUT_CLASSIFICATION	4.211186801313842E-5	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9999647330860992	WITHOUT_CLASSIFICATION	3.5266913900707285E-5	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.9999646195475363	WITHOUT_CLASSIFICATION	3.538045246373292E-5	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999998627102545	WITHOUT_CLASSIFICATION	1.372897455150495E-7	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999998027356156	WITHOUT_CLASSIFICATION	1.9726438429973156E-7	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.999999345356289	WITHOUT_CLASSIFICATION	6.546437109056139E-7	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.6796456699765149	TEST	0.320354330023485	WITHOUT_CLASSIFICATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999808538664866	WITHOUT_CLASSIFICATION	1.9146133513437518E-5	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999999769360722	WITHOUT_CLASSIFICATION	2.3063927830564665E-8	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999966417051196	WITHOUT_CLASSIFICATION	3.358294880371028E-6	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999999140934495	WITHOUT_CLASSIFICATION	8.590655042735587E-8	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999299827733098	WITHOUT_CLASSIFICATION	7.001722669027128E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999945018157932	WITHOUT_CLASSIFICATION	5.4981842068158975E-6	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999083144477147	WITHOUT_CLASSIFICATION	9.168555228535527E-5	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999083144477147	WITHOUT_CLASSIFICATION	9.168555228535527E-5	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999937772354216	WITHOUT_CLASSIFICATION	6.222764578350012E-6	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999999775683371	WITHOUT_CLASSIFICATION	2.2431662905517575E-8	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999976497388318	WITHOUT_CLASSIFICATION	2.3502611683143017E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9979513984820897	WITHOUT_CLASSIFICATION	0.0020486015179103203	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999781789705535	WITHOUT_CLASSIFICATION	2.1821029446454393E-5	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999982834394967	WITHOUT_CLASSIFICATION	1.716560503298341E-6	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999994182505866	WITHOUT_CLASSIFICATION	5.817494133342604E-7	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.999999939003333	WITHOUT_CLASSIFICATION	6.0996667009742E-8	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999999285651168	WITHOUT_CLASSIFICATION	7.143488327027314E-8	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999999120089162	WITHOUT_CLASSIFICATION	8.799108371448033E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999335204096	WITHOUT_CLASSIFICATION	6.647959041633977E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999335204096	WITHOUT_CLASSIFICATION	6.647959041633977E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999335204096	WITHOUT_CLASSIFICATION	6.647959041633977E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999335204096	WITHOUT_CLASSIFICATION	6.647959041633977E-8	TEST
// try both	WITHOUT_CLASSIFICATION	0.999998621381204	WITHOUT_CLASSIFICATION	1.3786187959574502E-6	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999991724464387	WITHOUT_CLASSIFICATION	8.275535613787077E-7	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999993761261725	WITHOUT_CLASSIFICATION	6.238738274900341E-7	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999980255603649	WITHOUT_CLASSIFICATION	1.9744396350340422E-6	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999955935358527	WITHOUT_CLASSIFICATION	4.406464147383859E-6	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999999219587945	WITHOUT_CLASSIFICATION	7.804120547484304E-8	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999984837279008	WITHOUT_CLASSIFICATION	1.5162720991639438E-6	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999997862893216	WITHOUT_CLASSIFICATION	2.1371067825319498E-7	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999997862893216	WITHOUT_CLASSIFICATION	2.1371067825319498E-7	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999423320678	WITHOUT_CLASSIFICATION	5.766793227429391E-8	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.999999713098678	WITHOUT_CLASSIFICATION	2.8690132199389754E-7	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998794158178327	WITHOUT_CLASSIFICATION	1.2058418216724404E-4	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999818706703	WITHOUT_CLASSIFICATION	1.8129329658650688E-8	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999818706703	WITHOUT_CLASSIFICATION	1.8129329658650688E-8	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999289280596	WITHOUT_CLASSIFICATION	7.107194045190418E-8	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999985408175297	WITHOUT_CLASSIFICATION	1.459182470323538E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999985408175297	WITHOUT_CLASSIFICATION	1.459182470323538E-6	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999630718545273	WITHOUT_CLASSIFICATION	3.69281454726832E-5	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999687663592095	WITHOUT_CLASSIFICATION	3.123364079059457E-5	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999998226265362	WITHOUT_CLASSIFICATION	1.7737346372443183E-7	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999934111819366	WITHOUT_CLASSIFICATION	6.588818063346295E-6	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999987336977617	WITHOUT_CLASSIFICATION	1.2663022382004265E-6	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999814716797	WITHOUT_CLASSIFICATION	1.852832034145093E-8	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999849783423154	WITHOUT_CLASSIFICATION	1.5021657684601362E-5	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9999931652444475	WITHOUT_CLASSIFICATION	6.834755552567194E-6	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999159372649	WITHOUT_CLASSIFICATION	8.406273504056627E-8	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999993680719069	WITHOUT_CLASSIFICATION	6.319280930428737E-7	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.999996400022252	WITHOUT_CLASSIFICATION	3.5999777480606573E-6	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999997500505571	WITHOUT_CLASSIFICATION	2.499494428998112E-7	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9912979211037025	WITHOUT_CLASSIFICATION	0.00870207889629754	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9897506442686713	WITHOUT_CLASSIFICATION	0.01024935573132878	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.999999950953822	WITHOUT_CLASSIFICATION	4.904617811499317E-8	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999998353449638	WITHOUT_CLASSIFICATION	1.646550361679326E-7	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999976644140568	WITHOUT_CLASSIFICATION	2.3355859430851633E-6	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999996897993634	WITHOUT_CLASSIFICATION	3.102006365738037E-7	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999990117330753	WITHOUT_CLASSIFICATION	9.882669248123808E-7	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999999788276704	WITHOUT_CLASSIFICATION	2.117232963234594E-8	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999974893886667	WITHOUT_CLASSIFICATION	2.510611333222491E-6	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.999999553074835	WITHOUT_CLASSIFICATION	4.4692516494864103E-7	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999992896801049	WITHOUT_CLASSIFICATION	7.103198951061105E-7	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999071237877545	WITHOUT_CLASSIFICATION	9.287621224547266E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999680356658847	WITHOUT_CLASSIFICATION	3.1964334115257834E-5	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999529015837281	WITHOUT_CLASSIFICATION	4.709841627179591E-5	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999997696315176	WITHOUT_CLASSIFICATION	2.3036848239320258E-7	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999990224828232	WITHOUT_CLASSIFICATION	9.775171767637188E-7	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999862173219	WITHOUT_CLASSIFICATION	1.3782678151416296E-8	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999984443948309	WITHOUT_CLASSIFICATION	1.555605169179852E-6	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999939126072803	WITHOUT_CLASSIFICATION	6.087392719720445E-6	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999996238714236	WITHOUT_CLASSIFICATION	3.761285764530999E-7	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9996985525515881	WITHOUT_CLASSIFICATION	3.01447448411955E-4	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999985849016116	WITHOUT_CLASSIFICATION	1.4150983883503655E-6	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999997146358437	WITHOUT_CLASSIFICATION	2.85364156267938E-7	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999924323322035	WITHOUT_CLASSIFICATION	7.567667796570567E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999913134213146	WITHOUT_CLASSIFICATION	8.686578685356725E-6	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999982984709086	WITHOUT_CLASSIFICATION	1.7015290913645646E-6	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999861604151165	WITHOUT_CLASSIFICATION	1.3839584883481761E-5	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999924323322035	WITHOUT_CLASSIFICATION	7.567667796570567E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999913134213146	WITHOUT_CLASSIFICATION	8.686578685356725E-6	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999995159105832	WITHOUT_CLASSIFICATION	4.840894166771721E-7	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999967288687753	WITHOUT_CLASSIFICATION	3.271131224620893E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999967288687753	WITHOUT_CLASSIFICATION	3.271131224620893E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999994395362192	WITHOUT_CLASSIFICATION	5.60463780797563E-7	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999975838365249	WITHOUT_CLASSIFICATION	2.41616347508106E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999978955795857	WITHOUT_CLASSIFICATION	2.1044204142325007E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999986011598059	WITHOUT_CLASSIFICATION	1.3988401941406093E-6	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999951760967378	WITHOUT_CLASSIFICATION	4.823903262160054E-6	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999283840228458	WITHOUT_CLASSIFICATION	7.161597715418569E-5	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999978999247829	WITHOUT_CLASSIFICATION	2.100075217096586E-6	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999996195295298	WITHOUT_CLASSIFICATION	3.8047047021626787E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999986831620675	WITHOUT_CLASSIFICATION	1.3168379325330073E-6	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999919700173154	WITHOUT_CLASSIFICATION	8.029982684627854E-6	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999999062725687	WITHOUT_CLASSIFICATION	9.372743122367086E-8	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999997598693119	WITHOUT_CLASSIFICATION	2.401306880570481E-7	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999977821458779	WITHOUT_CLASSIFICATION	2.2178541221286027E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998350747265	WITHOUT_CLASSIFICATION	1.649252735606914E-7	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998350747265	WITHOUT_CLASSIFICATION	1.649252735606914E-7	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999825710206318	WITHOUT_CLASSIFICATION	1.74289793682245E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999825710206318	WITHOUT_CLASSIFICATION	1.74289793682245E-5	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.999999843277476	WITHOUT_CLASSIFICATION	1.567225238554698E-7	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999998220861451	WITHOUT_CLASSIFICATION	1.779138548545586E-7	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999996236583668	WITHOUT_CLASSIFICATION	3.763416331501293E-7	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999988299521709	WITHOUT_CLASSIFICATION	1.1700478291401138E-6	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999953670815472	WITHOUT_CLASSIFICATION	4.6329184527038765E-6	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999970674628463	WITHOUT_CLASSIFICATION	2.932537153732974E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999978955795857	WITHOUT_CLASSIFICATION	2.1044204142325007E-6	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999986011598059	WITHOUT_CLASSIFICATION	1.3988401941406093E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999986831620675	WITHOUT_CLASSIFICATION	1.3168379325330073E-6	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999919700173154	WITHOUT_CLASSIFICATION	8.029982684627854E-6	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999999398306245	WITHOUT_CLASSIFICATION	6.016937543467347E-8	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.999999709834206	WITHOUT_CLASSIFICATION	2.901657940178048E-7	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999916727024402	WITHOUT_CLASSIFICATION	8.327297559801374E-6	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.999999335069062	WITHOUT_CLASSIFICATION	6.649309380621832E-7	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999998279834069	WITHOUT_CLASSIFICATION	1.7201659311506909E-7	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999991809938225	WITHOUT_CLASSIFICATION	8.190061776232316E-7	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999982804247047	WITHOUT_CLASSIFICATION	1.719575295164794E-6	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.999986074344726	WITHOUT_CLASSIFICATION	1.3925655274107329E-5	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999989462927574	WITHOUT_CLASSIFICATION	1.0537072425966286E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999988095552103	WITHOUT_CLASSIFICATION	1.1904447896511812E-6	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999837248219	WITHOUT_CLASSIFICATION	1.6275178073643555E-8	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999732479774887	WITHOUT_CLASSIFICATION	2.6752022511374323E-5	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999994634700341	WITHOUT_CLASSIFICATION	5.365299658159596E-7	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999967787921992	WITHOUT_CLASSIFICATION	3.2212078007611642E-6	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999992696287867	WITHOUT_CLASSIFICATION	7.303712132538226E-7	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999943442376609	WITHOUT_CLASSIFICATION	5.6557623391791E-6	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999983370972462	WITHOUT_CLASSIFICATION	1.6629027538246098E-6	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999930175361397	WITHOUT_CLASSIFICATION	6.98246386023076E-6	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999991602601834	WITHOUT_CLASSIFICATION	8.397398165146426E-7	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999968201517102	WITHOUT_CLASSIFICATION	3.179848289863382E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999977192121778	WITHOUT_CLASSIFICATION	2.2807878221006016E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999977192121778	WITHOUT_CLASSIFICATION	2.2807878221006016E-6	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999986564473003	WITHOUT_CLASSIFICATION	1.3435526996437533E-6	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999626625288601	WITHOUT_CLASSIFICATION	3.733747113990109E-5	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999993338497745	WITHOUT_CLASSIFICATION	6.661502255644482E-7	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999981779502658	WITHOUT_CLASSIFICATION	1.8220497341846113E-6	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999981779502658	WITHOUT_CLASSIFICATION	1.8220497341846113E-6	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999916727024402	WITHOUT_CLASSIFICATION	8.327297559801374E-6	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999934120129051	WITHOUT_CLASSIFICATION	6.587987094897444E-6	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999971451333138	WITHOUT_CLASSIFICATION	2.8548666861427285E-6	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999981214715241	WITHOUT_CLASSIFICATION	1.8785284759376396E-6	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999984326561842	WITHOUT_CLASSIFICATION	1.5673438158390584E-6	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999998842182807	WITHOUT_CLASSIFICATION	1.1578171930507186E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999584835138284	WITHOUT_CLASSIFICATION	4.1516486171553306E-5	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999956687753606	WITHOUT_CLASSIFICATION	4.331224639323082E-6	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999987961841761	WITHOUT_CLASSIFICATION	1.2038158238216638E-6	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999988864175682	WITHOUT_CLASSIFICATION	1.1135824317730583E-6	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999875781075132	WITHOUT_CLASSIFICATION	1.2421892486956438E-5	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999992004944204	WITHOUT_CLASSIFICATION	7.995055796990642E-7	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999991235430775	WITHOUT_CLASSIFICATION	8.76456922486069E-7	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999999319768795	WITHOUT_CLASSIFICATION	6.802312048938804E-8	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999996271917333	WITHOUT_CLASSIFICATION	3.7280826664197715E-7	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999994891677135	WITHOUT_CLASSIFICATION	5.108322865020531E-7	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999999704885564	WITHOUT_CLASSIFICATION	2.9511443569177495E-8	TEST
// states	WITHOUT_CLASSIFICATION	0.999989810083795	WITHOUT_CLASSIFICATION	1.0189916205025691E-5	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999994592606832	WITHOUT_CLASSIFICATION	5.407393167654665E-7	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999997720257529	WITHOUT_CLASSIFICATION	2.279742471035308E-7	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999852382595	WITHOUT_CLASSIFICATION	1.4761740401220634E-8	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999987361349963	WITHOUT_CLASSIFICATION	1.2638650037462922E-6	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999996600235573	WITHOUT_CLASSIFICATION	3.3997644256195746E-7	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999966403748975	WITHOUT_CLASSIFICATION	3.359625102495897E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999860977704	WITHOUT_CLASSIFICATION	1.3902229604156471E-8	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999989913516424	WITHOUT_CLASSIFICATION	1.0086483575734313E-6	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999879836987	WITHOUT_CLASSIFICATION	1.2016301255641143E-8	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999992646252505	WITHOUT_CLASSIFICATION	7.353747494833787E-7	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999962879398	WITHOUT_CLASSIFICATION	3.7120601168089095E-9	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999996047440747	WITHOUT_CLASSIFICATION	3.9525592523896276E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999851346756	WITHOUT_CLASSIFICATION	1.4865324400688337E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999851346756	WITHOUT_CLASSIFICATION	1.4865324400688337E-7	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999997076654616	WITHOUT_CLASSIFICATION	2.9233453839266226E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999996609458778	WITHOUT_CLASSIFICATION	3.390541222019884E-7	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999996609458778	WITHOUT_CLASSIFICATION	3.390541222019884E-7	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999759412435	WITHOUT_CLASSIFICATION	2.4058756467800675E-8	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999759412435	WITHOUT_CLASSIFICATION	2.4058756467800675E-8	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.999998766487009	WITHOUT_CLASSIFICATION	1.2335129910587808E-6	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999272836314	WITHOUT_CLASSIFICATION	7.271636855004839E-8	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999914563218	WITHOUT_CLASSIFICATION	8.543678280516732E-9	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999967717791923	WITHOUT_CLASSIFICATION	3.2282208076922547E-6	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999811508893	WITHOUT_CLASSIFICATION	1.8849110690342312E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999983001922178	WITHOUT_CLASSIFICATION	1.6998077822039756E-6	TEST
// block	WITHOUT_CLASSIFICATION	0.9999983001922178	WITHOUT_CLASSIFICATION	1.6998077822039756E-6	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999860977704	WITHOUT_CLASSIFICATION	1.3902229604156471E-8	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999860977704	WITHOUT_CLASSIFICATION	1.3902229604156471E-8	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999860977704	WITHOUT_CLASSIFICATION	1.3902229604156471E-8	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999989913516424	WITHOUT_CLASSIFICATION	1.0086483575734313E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999851346756	WITHOUT_CLASSIFICATION	1.4865324400688337E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999851346756	WITHOUT_CLASSIFICATION	1.4865324400688337E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999851346756	WITHOUT_CLASSIFICATION	1.4865324400688337E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.999998766487009	WITHOUT_CLASSIFICATION	1.2335129910587808E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.999998766487009	WITHOUT_CLASSIFICATION	1.2335129910587808E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.999998766487009	WITHOUT_CLASSIFICATION	1.2335129910587808E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999967717791923	WITHOUT_CLASSIFICATION	3.2282208076922547E-6	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999967717791923	WITHOUT_CLASSIFICATION	3.2282208076922547E-6	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999999770075837	WITHOUT_CLASSIFICATION	2.2992416286217752E-8	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999994411341073	WITHOUT_CLASSIFICATION	5.588658926799002E-7	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999993391650573	WITHOUT_CLASSIFICATION	6.608349425741761E-7	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9997267101333592	WITHOUT_CLASSIFICATION	2.732898666408417E-4	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999999110801271	WITHOUT_CLASSIFICATION	8.891987290954026E-8	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999998149247581	WITHOUT_CLASSIFICATION	1.8507524183830065E-7	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999998149247581	WITHOUT_CLASSIFICATION	1.8507524183830065E-7	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999997544437084	WITHOUT_CLASSIFICATION	2.4555629154843613E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999584835138284	WITHOUT_CLASSIFICATION	4.1516486171553306E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999584835138284	WITHOUT_CLASSIFICATION	4.1516486171553306E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999584835138284	WITHOUT_CLASSIFICATION	4.1516486171553306E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999584835138284	WITHOUT_CLASSIFICATION	4.1516486171553306E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999584835138284	WITHOUT_CLASSIFICATION	4.1516486171553306E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999997931857258	WITHOUT_CLASSIFICATION	2.0681427412774432E-7	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999997931857258	WITHOUT_CLASSIFICATION	2.0681427412774432E-7	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999997931857258	WITHOUT_CLASSIFICATION	2.0681427412774432E-7	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999444063057	WITHOUT_CLASSIFICATION	5.5593694288805965E-8	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999996804992678	WITHOUT_CLASSIFICATION	3.195007321056374E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999989913516424	WITHOUT_CLASSIFICATION	1.0086483575734313E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.999998766487009	WITHOUT_CLASSIFICATION	1.2335129910587808E-6	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.999998766487009	WITHOUT_CLASSIFICATION	1.2335129910587808E-6	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999584835138284	WITHOUT_CLASSIFICATION	4.1516486171553306E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999584835138284	WITHOUT_CLASSIFICATION	4.1516486171553306E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999997931857258	WITHOUT_CLASSIFICATION	2.0681427412774432E-7	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999997544437084	WITHOUT_CLASSIFICATION	2.4555629154843613E-7	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999965612064496	WITHOUT_CLASSIFICATION	3.4387935503144547E-6	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999982549698496	WITHOUT_CLASSIFICATION	1.7450301504799241E-6	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999998885822818	WITHOUT_CLASSIFICATION	1.1141771811875708E-7	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999997744111351	WITHOUT_CLASSIFICATION	2.2558886505474213E-7	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999991530051374	WITHOUT_CLASSIFICATION	8.469948625995355E-7	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999994680660007	WITHOUT_CLASSIFICATION	5.319339993616552E-7	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999828132998969	WITHOUT_CLASSIFICATION	1.7186700103020988E-5	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999993070140121	WITHOUT_CLASSIFICATION	6.929859880431635E-7	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999999661369183	WITHOUT_CLASSIFICATION	3.3863081762847805E-8	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.999999739120947	WITHOUT_CLASSIFICATION	2.608790530379406E-7	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999997048278112	WITHOUT_CLASSIFICATION	2.9517218881399534E-7	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999994206519177	WITHOUT_CLASSIFICATION	5.793480823182062E-7	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999996675285282	WITHOUT_CLASSIFICATION	3.324714717160157E-7	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999922887250525	WITHOUT_CLASSIFICATION	7.711274947487586E-6	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999963938059387	WITHOUT_CLASSIFICATION	3.6061940612404267E-6	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999999537542518	WITHOUT_CLASSIFICATION	4.62457483454066E-8	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999999932062127	WITHOUT_CLASSIFICATION	6.793787347588693E-9	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999866703441257	WITHOUT_CLASSIFICATION	1.3329655874219036E-5	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999755934245629	WITHOUT_CLASSIFICATION	2.4406575437082688E-5	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999917527465	WITHOUT_CLASSIFICATION	8.24725361403649E-9	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999972743052079	WITHOUT_CLASSIFICATION	2.725694792137928E-6	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999991901611641	WITHOUT_CLASSIFICATION	8.09838835913988E-7	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999993838092922	WITHOUT_CLASSIFICATION	6.161907078812812E-7	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999999936482705	WITHOUT_CLASSIFICATION	6.351729379906915E-9	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999986102564127	WITHOUT_CLASSIFICATION	1.389743587295002E-6	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999920424725595	WITHOUT_CLASSIFICATION	7.957527440547218E-6	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999995737058275	WITHOUT_CLASSIFICATION	4.2629417254483375E-7	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999165225071	WITHOUT_CLASSIFICATION	8.347749293404581E-8	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999999436293938	WITHOUT_CLASSIFICATION	5.637060622394111E-8	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.999999867572923	WITHOUT_CLASSIFICATION	1.3242707693817402E-7	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999991570743667	WITHOUT_CLASSIFICATION	8.429256333208943E-7	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999372187587	WITHOUT_CLASSIFICATION	6.278124137158475E-8	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999286314667	WITHOUT_CLASSIFICATION	7.13685333608817E-8	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999838653826	WITHOUT_CLASSIFICATION	1.613461736533776E-8	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999965612064496	WITHOUT_CLASSIFICATION	3.4387935503144547E-6	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999556701641	WITHOUT_CLASSIFICATION	4.432983592311274E-8	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999999020197531	WITHOUT_CLASSIFICATION	9.798024681633003E-8	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999953782420841	WITHOUT_CLASSIFICATION	4.621757915913791E-6	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999996771757522	WITHOUT_CLASSIFICATION	3.2282424775079833E-7	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999996771757522	WITHOUT_CLASSIFICATION	3.2282424775079833E-7	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999990869540497	WITHOUT_CLASSIFICATION	9.130459503716195E-7	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999990869540497	WITHOUT_CLASSIFICATION	9.130459503716195E-7	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999993363503543	WITHOUT_CLASSIFICATION	6.636496458136767E-7	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999973487234693	WITHOUT_CLASSIFICATION	2.651276530744789E-6	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999998240579069	WITHOUT_CLASSIFICATION	1.759420930952633E-7	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999993787557677	WITHOUT_CLASSIFICATION	6.212442322733614E-7	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999998084309726	WITHOUT_CLASSIFICATION	1.915690274536472E-7	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999996786644482	WITHOUT_CLASSIFICATION	3.213355518762835E-7	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999137291466	WITHOUT_CLASSIFICATION	8.627085340313279E-8	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.999999915303071	WITHOUT_CLASSIFICATION	8.469692902313088E-8	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999974180883	WITHOUT_CLASSIFICATION	2.5819116211136333E-9	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999985285284536	WITHOUT_CLASSIFICATION	1.471471546394613E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999811742772	WITHOUT_CLASSIFICATION	1.8825722757879924E-8	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999977712998168	WITHOUT_CLASSIFICATION	2.2287001831088724E-6	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999977712998168	WITHOUT_CLASSIFICATION	2.2287001831088724E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999989089262384	WITHOUT_CLASSIFICATION	1.0910737615298628E-6	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.999997206794147	WITHOUT_CLASSIFICATION	2.793205852962942E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999995250427683	WITHOUT_CLASSIFICATION	4.749572316806749E-7	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999995250427683	WITHOUT_CLASSIFICATION	4.749572316806749E-7	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999982607807797	WITHOUT_CLASSIFICATION	1.7392192202521328E-6	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.999999996696224	WITHOUT_CLASSIFICATION	3.3037760052313718E-9	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.999998012621669	WITHOUT_CLASSIFICATION	1.987378330974166E-6	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999996838219949	WITHOUT_CLASSIFICATION	3.1617800507930783E-7	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999998624022052	WITHOUT_CLASSIFICATION	1.3759779484300804E-7	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.999997102200725	WITHOUT_CLASSIFICATION	2.897799275034397E-6	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999993740557668	WITHOUT_CLASSIFICATION	6.259442331999764E-7	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999999103757284	WITHOUT_CLASSIFICATION	8.962427158365135E-8	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999861679215204	WITHOUT_CLASSIFICATION	1.3832078479652248E-5	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999997425035418	WITHOUT_CLASSIFICATION	2.574964580815505E-7	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999992543757629	WITHOUT_CLASSIFICATION	7.456242372212344E-7	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9998922668001297	WITHOUT_CLASSIFICATION	1.0773319987032548E-4	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999999077307464	WITHOUT_CLASSIFICATION	9.226925365293444E-8	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999987992331096	WITHOUT_CLASSIFICATION	1.2007668903765559E-6	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.999999729518018	WITHOUT_CLASSIFICATION	2.7048198209204475E-7	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999841210108349	WITHOUT_CLASSIFICATION	1.5878989165032672E-5	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999999240838037	WITHOUT_CLASSIFICATION	7.591619631841189E-8	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999999550239417	WITHOUT_CLASSIFICATION	4.4976058244869625E-8	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999827064955641	WITHOUT_CLASSIFICATION	1.7293504435967042E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999941709248	WITHOUT_CLASSIFICATION	5.8290752242663735E-9	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9986870024086029	WITHOUT_CLASSIFICATION	0.001312997591397175	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999998942536779	WITHOUT_CLASSIFICATION	1.0574632221662647E-7	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999999124687102	WITHOUT_CLASSIFICATION	8.753128971637438E-8	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999999416709326	WITHOUT_CLASSIFICATION	5.8329067255776306E-8	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999999492228422	WITHOUT_CLASSIFICATION	5.077715784888524E-8	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.999999998244494	WITHOUT_CLASSIFICATION	1.755506054416648E-9	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999997972898966	WITHOUT_CLASSIFICATION	2.027101034273118E-7	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999993225026927	WITHOUT_CLASSIFICATION	6.774973072791263E-7	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999984180780256	WITHOUT_CLASSIFICATION	1.5819219745062338E-6	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999997195768008	WITHOUT_CLASSIFICATION	2.8042319923985435E-7	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999844730466	WITHOUT_CLASSIFICATION	1.552695334954619E-8	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999506831755	WITHOUT_CLASSIFICATION	4.9316824422738706E-8	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999714032891	WITHOUT_CLASSIFICATION	2.859671091424094E-8	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999738555213	WITHOUT_CLASSIFICATION	2.614447872365109E-8	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999738555213	WITHOUT_CLASSIFICATION	2.614447872365109E-8	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999303345125	WITHOUT_CLASSIFICATION	6.966548745779648E-8	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.999999996613988	WITHOUT_CLASSIFICATION	3.386012040705155E-9	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999986450401472	WITHOUT_CLASSIFICATION	1.3549598527843082E-5	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999993055713289	WITHOUT_CLASSIFICATION	6.944286710939659E-7	TEST
// Block	WITHOUT_CLASSIFICATION	0.9999978051152026	WITHOUT_CLASSIFICATION	2.194884797345419E-6	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.999999595438961	WITHOUT_CLASSIFICATION	4.045610389684951E-7	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999029119062053	WITHOUT_CLASSIFICATION	9.708809379467772E-5	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9998803118295805	WITHOUT_CLASSIFICATION	1.1968817041956382E-4	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.999890320281938	WITHOUT_CLASSIFICATION	1.0967971806200395E-4	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999960836491077	WITHOUT_CLASSIFICATION	3.916350892298088E-6	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999249111562	WITHOUT_CLASSIFICATION	7.508884381695807E-8	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999867594322451	WITHOUT_CLASSIFICATION	1.324056775485825E-5	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999343108549414	WITHOUT_CLASSIFICATION	6.568914505853466E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.999994869677572	WITHOUT_CLASSIFICATION	5.130322428041083E-6	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999999628876428	WITHOUT_CLASSIFICATION	3.711235719217835E-8	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999997751872479	WITHOUT_CLASSIFICATION	2.2481275219840068E-7	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999996694564207	WITHOUT_CLASSIFICATION	3.3054357920745675E-7	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999998859497778	WITHOUT_CLASSIFICATION	1.1405022209414659E-7	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999990474655949	WITHOUT_CLASSIFICATION	9.525344051935699E-7	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999991144846706	WITHOUT_CLASSIFICATION	8.855153294723881E-7	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999979721077175	WITHOUT_CLASSIFICATION	2.027892282504302E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999971553847055	WITHOUT_CLASSIFICATION	2.844615294472941E-6	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999998132671643	WITHOUT_CLASSIFICATION	1.8673283582204912E-7	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999992357479873	WITHOUT_CLASSIFICATION	7.642520125980174E-7	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999949266961029	WITHOUT_CLASSIFICATION	5.07330389709541E-6	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999997039492157	WITHOUT_CLASSIFICATION	2.960507843594161E-7	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999801504194	WITHOUT_CLASSIFICATION	1.9849580706774063E-8	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999965678401527	WITHOUT_CLASSIFICATION	3.4321598473435236E-6	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.999997115761822	WITHOUT_CLASSIFICATION	2.88423817806946E-6	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999980464090121	WITHOUT_CLASSIFICATION	1.9535909879403165E-6	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9998972439167477	WITHOUT_CLASSIFICATION	1.0275608325235087E-4	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9948637687793029	WITHOUT_CLASSIFICATION	0.005136231220697049	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999993947971099	WITHOUT_CLASSIFICATION	6.052028901587501E-7	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999989262039352	WITHOUT_CLASSIFICATION	1.0737960648492985E-6	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.999998692163072	WITHOUT_CLASSIFICATION	1.3078369280718791E-6	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9998154694546206	WITHOUT_CLASSIFICATION	1.84530545379366E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999900053206215	WITHOUT_CLASSIFICATION	9.994679378424755E-6	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999995929205793	WITHOUT_CLASSIFICATION	4.070794207452092E-7	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999998149698051	WITHOUT_CLASSIFICATION	1.8503019501370632E-7	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999997772855761	WITHOUT_CLASSIFICATION	2.2271442384763804E-7	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999998411450859	WITHOUT_CLASSIFICATION	1.5885491413351053E-7	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999998642217908	WITHOUT_CLASSIFICATION	1.3577820927696956E-7	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999998642217908	WITHOUT_CLASSIFICATION	1.3577820927696956E-7	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999994507762751	WITHOUT_CLASSIFICATION	5.492237248748845E-7	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999997090238517	WITHOUT_CLASSIFICATION	2.9097614827571873E-7	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999988588639754	WITHOUT_CLASSIFICATION	1.1411360245554925E-6	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999994139148465	WITHOUT_CLASSIFICATION	5.860851535110025E-7	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999985286118522	WITHOUT_CLASSIFICATION	1.4713881477047313E-6	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999580068194	WITHOUT_CLASSIFICATION	4.199318068218091E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999505766295	WITHOUT_CLASSIFICATION	4.942337043487792E-8	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999999669624812	WITHOUT_CLASSIFICATION	3.3037518810069514E-8	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999995170451104	WITHOUT_CLASSIFICATION	4.829548895436203E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999717642533	WITHOUT_CLASSIFICATION	2.823574662073755E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999928383505128	WITHOUT_CLASSIFICATION	7.1616494871443046E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999298974043	WITHOUT_CLASSIFICATION	7.01025956520171E-8	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999993354146103	WITHOUT_CLASSIFICATION	6.645853898138865E-7	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999998577586235	WITHOUT_CLASSIFICATION	1.42241376557731E-7	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.999999988491644	WITHOUT_CLASSIFICATION	1.1508356007457214E-8	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999916602776882	WITHOUT_CLASSIFICATION	8.339722311877219E-6	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999888544229	WITHOUT_CLASSIFICATION	1.1145577225358092E-8	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.999989392568463	WITHOUT_CLASSIFICATION	1.0607431536917688E-5	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999964968499	WITHOUT_CLASSIFICATION	3.5031500776905624E-9	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999992223374017	WITHOUT_CLASSIFICATION	7.776625982590657E-7	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999992953321254	WITHOUT_CLASSIFICATION	7.046678745577933E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999976245393003	WITHOUT_CLASSIFICATION	2.3754606996687404E-6	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999988410763	WITHOUT_CLASSIFICATION	1.158923711236747E-9	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999998187101115	WITHOUT_CLASSIFICATION	1.8128988861225748E-7	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.99999980775452	WITHOUT_CLASSIFICATION	1.9224547989254077E-7	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999808912189928	WITHOUT_CLASSIFICATION	1.910878100719204E-5	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999992075794054	WITHOUT_CLASSIFICATION	7.924205945071534E-7	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999988825992557	WITHOUT_CLASSIFICATION	1.1174007442043266E-6	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999997073833523	WITHOUT_CLASSIFICATION	2.926166476542077E-7	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999996449727359	WITHOUT_CLASSIFICATION	3.5502726420840875E-7	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999996747686751	WITHOUT_CLASSIFICATION	3.2523132483231357E-7	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999948273579	WITHOUT_CLASSIFICATION	5.172642052536398E-9	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999996449727359	WITHOUT_CLASSIFICATION	3.5502726420840875E-7	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999764069185044	WITHOUT_CLASSIFICATION	2.3593081495583207E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999680356658847	WITHOUT_CLASSIFICATION	3.1964334115257834E-5	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999999773396535	WITHOUT_CLASSIFICATION	2.2660346551361952E-8	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9989532567367431	WITHOUT_CLASSIFICATION	0.0010467432632569375	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999994930625192	WITHOUT_CLASSIFICATION	5.069374807753887E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999969388421772	WITHOUT_CLASSIFICATION	3.0611578227253614E-6	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999995672615061	WITHOUT_CLASSIFICATION	4.327384939729426E-7	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999953913770699	WITHOUT_CLASSIFICATION	4.608622930059221E-6	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999975838365249	WITHOUT_CLASSIFICATION	2.41616347508106E-6	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999941709248	WITHOUT_CLASSIFICATION	5.8290752242663735E-9	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999993391650573	WITHOUT_CLASSIFICATION	6.608349425741761E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999986557303827	WITHOUT_CLASSIFICATION	1.3442696173496145E-6	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999979999473553	WITHOUT_CLASSIFICATION	2.0000526447969037E-6	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.999999834570243	WITHOUT_CLASSIFICATION	1.6542975691865541E-7	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999830703104428	WITHOUT_CLASSIFICATION	1.6929689557217326E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999985195563124	WITHOUT_CLASSIFICATION	1.4804436875618484E-6	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999861913252769	WITHOUT_CLASSIFICATION	1.3808674723087249E-5	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999995783387786	WITHOUT_CLASSIFICATION	4.216612214690715E-7	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999995802058629	WITHOUT_CLASSIFICATION	4.197941371272515E-7	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999987037950703	WITHOUT_CLASSIFICATION	1.2962049296565153E-6	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999960638381381	WITHOUT_CLASSIFICATION	3.936161861907063E-6	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999955029241773	WITHOUT_CLASSIFICATION	4.497075822729759E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999995670390915	WITHOUT_CLASSIFICATION	4.3296090842922843E-7	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999997957288873	WITHOUT_CLASSIFICATION	2.042711126551198E-7	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999997351850037	WITHOUT_CLASSIFICATION	2.648149961792489E-7	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999986134971218	WITHOUT_CLASSIFICATION	1.3865028782082005E-6	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999991061022703	WITHOUT_CLASSIFICATION	8.938977297455796E-7	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999176407276	WITHOUT_CLASSIFICATION	8.23592723642411E-8	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999997138345964	WITHOUT_CLASSIFICATION	2.861654036042665E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999987420123333	WITHOUT_CLASSIFICATION	1.2579876666546533E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999987420123333	WITHOUT_CLASSIFICATION	1.2579876666546533E-6	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999996495030036	WITHOUT_CLASSIFICATION	3.504969963947707E-7	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999862943515	WITHOUT_CLASSIFICATION	1.3705648549675443E-8	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999969654517	WITHOUT_CLASSIFICATION	3.0345483063833424E-9	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9968562625420264	WITHOUT_CLASSIFICATION	0.0031437374579736275	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9968562625420264	WITHOUT_CLASSIFICATION	0.0031437374579736275	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9968562625420264	WITHOUT_CLASSIFICATION	0.0031437374579736275	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9968562625420264	WITHOUT_CLASSIFICATION	0.0031437374579736275	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.999999858920525	WITHOUT_CLASSIFICATION	1.4107947506703497E-7	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999997036167991	WITHOUT_CLASSIFICATION	2.963832009138574E-7	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999987124951422	WITHOUT_CLASSIFICATION	1.2875048577941253E-6	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.999999876850301	WITHOUT_CLASSIFICATION	1.2314969891899674E-7	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.999999917590901	WITHOUT_CLASSIFICATION	8.240909898748275E-8	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.999972557608999	WITHOUT_CLASSIFICATION	2.744239100116137E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999861962551526	WITHOUT_CLASSIFICATION	1.3803744847388904E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999861962551526	WITHOUT_CLASSIFICATION	1.3803744847388904E-5	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999998714794667	WITHOUT_CLASSIFICATION	1.2852053340444978E-7	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9999522401842836	WITHOUT_CLASSIFICATION	4.7759815716370706E-5	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999994926253705	WITHOUT_CLASSIFICATION	5.073746294485763E-7	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9997980019479825	WITHOUT_CLASSIFICATION	2.0199805201742032E-4	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999997596914605	WITHOUT_CLASSIFICATION	2.40308539539932E-7	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999998678695025	WITHOUT_CLASSIFICATION	1.3213049751701936E-7	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999995065773323	WITHOUT_CLASSIFICATION	4.934226677342174E-7	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999966641023371	WITHOUT_CLASSIFICATION	3.335897662939802E-6	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999459835150706	WITHOUT_CLASSIFICATION	5.4016484929377225E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999459835150706	WITHOUT_CLASSIFICATION	5.4016484929377225E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999948273579	WITHOUT_CLASSIFICATION	5.172642052536398E-9	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999990510880474	WITHOUT_CLASSIFICATION	9.489119525631582E-7	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999990754415906	WITHOUT_CLASSIFICATION	9.245584094230081E-7	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999995850732603	WITHOUT_CLASSIFICATION	4.149267397721562E-7	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999987860090815	WITHOUT_CLASSIFICATION	1.213990918423727E-6	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.99995936287683	WITHOUT_CLASSIFICATION	4.063712317001335E-5	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999974791954637	WITHOUT_CLASSIFICATION	2.520804536392295E-6	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999994914929793	WITHOUT_CLASSIFICATION	5.085070206531227E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999995009060345	WITHOUT_CLASSIFICATION	4.990939654857187E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999995009060345	WITHOUT_CLASSIFICATION	4.990939654857187E-7	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999999340846898	WITHOUT_CLASSIFICATION	6.591531018562796E-8	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999998052699	WITHOUT_CLASSIFICATION	1.9473022403803866E-10	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9998325838429528	WITHOUT_CLASSIFICATION	1.6741615704710718E-4	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999994486153493	WITHOUT_CLASSIFICATION	5.513846507097178E-7	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999999156523066	WITHOUT_CLASSIFICATION	8.434769343570842E-8	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9999562655797232	WITHOUT_CLASSIFICATION	4.373442027677754E-5	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999996338566856	WITHOUT_CLASSIFICATION	3.6614331437475197E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999494660924	WITHOUT_CLASSIFICATION	5.05339075842919E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999494660924	WITHOUT_CLASSIFICATION	5.05339075842919E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999494660924	WITHOUT_CLASSIFICATION	5.05339075842919E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999494660924	WITHOUT_CLASSIFICATION	5.05339075842919E-8	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999765721219	WITHOUT_CLASSIFICATION	2.3427878197314393E-8	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999979682885947	WITHOUT_CLASSIFICATION	2.0317114053546024E-6	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999637775230408	WITHOUT_CLASSIFICATION	3.6222476959190174E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999992003468856	WITHOUT_CLASSIFICATION	7.996531144455201E-7	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.999998810984628	WITHOUT_CLASSIFICATION	1.1890153719503296E-6	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.9999342681323485	WITHOUT_CLASSIFICATION	6.573186765151777E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999996879717988	WITHOUT_CLASSIFICATION	3.1202820121076266E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979490436092	WITHOUT_CLASSIFICATION	2.050956390805985E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979490436092	WITHOUT_CLASSIFICATION	2.050956390805985E-6	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979490436092	WITHOUT_CLASSIFICATION	2.050956390805985E-6	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998899340815	WITHOUT_CLASSIFICATION	1.1006591840185754E-7	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999998736462749	WITHOUT_CLASSIFICATION	1.263537250323972E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999159324843	WITHOUT_CLASSIFICATION	8.406751570856486E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999159324843	WITHOUT_CLASSIFICATION	8.406751570856486E-7	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999955912009746	WITHOUT_CLASSIFICATION	4.408799025322946E-6	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999999978358	WITHOUT_CLASSIFICATION	2.1640985842915357E-12	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999995704346116	WITHOUT_CLASSIFICATION	4.295653884638713E-7	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9999938483933203	WITHOUT_CLASSIFICATION	6.1516066796342946E-6	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999257356879	WITHOUT_CLASSIFICATION	7.426431207411255E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.999999915385209	WITHOUT_CLASSIFICATION	8.461479091090235E-8	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999991446643431	WITHOUT_CLASSIFICATION	8.553356568800875E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999991446643431	WITHOUT_CLASSIFICATION	8.553356568800875E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999997267497714	WITHOUT_CLASSIFICATION	2.7325022852051627E-7	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999373385134	WITHOUT_CLASSIFICATION	6.266148651453424E-8	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999998993872581	WITHOUT_CLASSIFICATION	1.006127419717362E-7	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999981560037753	WITHOUT_CLASSIFICATION	1.8439962247409178E-6	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999998787943926	WITHOUT_CLASSIFICATION	1.2120560751186514E-7	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999824167795	WITHOUT_CLASSIFICATION	1.7583220624429863E-8	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999999254565876	WITHOUT_CLASSIFICATION	7.454341245566563E-8	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999637574502626	WITHOUT_CLASSIFICATION	3.624254973748099E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999966823522723	WITHOUT_CLASSIFICATION	3.317647727701918E-6	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999997938317898	WITHOUT_CLASSIFICATION	2.0616821017788842E-7	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999998376518664	WITHOUT_CLASSIFICATION	1.6234813367011908E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.99999998948431	WITHOUT_CLASSIFICATION	1.0515689974877193E-8	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999996379804601	WITHOUT_CLASSIFICATION	3.6201953994367467E-7	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999974479729193	WITHOUT_CLASSIFICATION	2.552027080545717E-6	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999067472521	WITHOUT_CLASSIFICATION	9.325274782446773E-8	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999999947452732	WITHOUT_CLASSIFICATION	5.254726718901239E-9	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999999325608133	WITHOUT_CLASSIFICATION	6.743918668480679E-8	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999997935192059	WITHOUT_CLASSIFICATION	2.0648079417668004E-7	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999701891623	WITHOUT_CLASSIFICATION	2.9810837633956653E-8	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999999766936107	WITHOUT_CLASSIFICATION	2.330638930922776E-8	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999854790463	WITHOUT_CLASSIFICATION	1.4520953549687217E-8	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999955520184	WITHOUT_CLASSIFICATION	4.447981659241222E-9	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999562171625	WITHOUT_CLASSIFICATION	4.378283743405029E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999562171625	WITHOUT_CLASSIFICATION	4.378283743405029E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999562171625	WITHOUT_CLASSIFICATION	4.378283743405029E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999562171625	WITHOUT_CLASSIFICATION	4.378283743405029E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999562171625	WITHOUT_CLASSIFICATION	4.378283743405029E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999562171625	WITHOUT_CLASSIFICATION	4.378283743405029E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999562171625	WITHOUT_CLASSIFICATION	4.378283743405029E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999562171625	WITHOUT_CLASSIFICATION	4.378283743405029E-8	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999859483483	WITHOUT_CLASSIFICATION	1.4051651748143907E-8	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.999991238755685	WITHOUT_CLASSIFICATION	8.76124431507533E-6	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999820329392145	WITHOUT_CLASSIFICATION	1.7967060785481553E-5	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999998984448513	WITHOUT_CLASSIFICATION	1.0155514870043745E-6	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999505766295	WITHOUT_CLASSIFICATION	4.942337043487792E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999505766295	WITHOUT_CLASSIFICATION	4.942337043487792E-8	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999986708978218	WITHOUT_CLASSIFICATION	1.3291021782699682E-6	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999997848062475	WITHOUT_CLASSIFICATION	2.151937524700215E-7	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999060857977	WITHOUT_CLASSIFICATION	9.391420233714257E-8	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999938192609653	WITHOUT_CLASSIFICATION	6.180739034644676E-6	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999996263015444	WITHOUT_CLASSIFICATION	3.7369845562194784E-7	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999994276298966	WITHOUT_CLASSIFICATION	5.723701033449664E-7	TEST
// read	WITHOUT_CLASSIFICATION	0.999998603157303	WITHOUT_CLASSIFICATION	1.3968426969905442E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999985943522922	WITHOUT_CLASSIFICATION	1.4056477078506139E-6	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999989008769922	WITHOUT_CLASSIFICATION	1.0991230077979697E-6	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999018326674	WITHOUT_CLASSIFICATION	9.816733267096491E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999018326674	WITHOUT_CLASSIFICATION	9.816733267096491E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999018326674	WITHOUT_CLASSIFICATION	9.816733267096491E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999228502906354	WITHOUT_CLASSIFICATION	7.714970936454364E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999228502906354	WITHOUT_CLASSIFICATION	7.714970936454364E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999228502906354	WITHOUT_CLASSIFICATION	7.714970936454364E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999228502906354	WITHOUT_CLASSIFICATION	7.714970936454364E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999228502906354	WITHOUT_CLASSIFICATION	7.714970936454364E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999228502906354	WITHOUT_CLASSIFICATION	7.714970936454364E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999228502906354	WITHOUT_CLASSIFICATION	7.714970936454364E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999228502906354	WITHOUT_CLASSIFICATION	7.714970936454364E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999228502906354	WITHOUT_CLASSIFICATION	7.714970936454364E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999080021692	WITHOUT_CLASSIFICATION	9.1997830711896E-8	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999990792192193	WITHOUT_CLASSIFICATION	9.207807807044741E-7	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999969231365377	WITHOUT_CLASSIFICATION	3.0768634623590797E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999992318708509	WITHOUT_CLASSIFICATION	7.681291490018994E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999228502906354	WITHOUT_CLASSIFICATION	7.714970936454364E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999228502906354	WITHOUT_CLASSIFICATION	7.714970936454364E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999228502906354	WITHOUT_CLASSIFICATION	7.714970936454364E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.999999889047252	WITHOUT_CLASSIFICATION	1.1095274787990828E-7	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999973329614663	WITHOUT_CLASSIFICATION	2.6670385336238008E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999999977672216	WITHOUT_CLASSIFICATION	2.2327784787228506E-9	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999996984031835	WITHOUT_CLASSIFICATION	3.0159681647382143E-7	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999996984031835	WITHOUT_CLASSIFICATION	3.0159681647382143E-7	TEST
// load null block	WITHOUT_CLASSIFICATION	0.999999562928023	WITHOUT_CLASSIFICATION	4.3707197702971366E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999997958748703	WITHOUT_CLASSIFICATION	2.041251296951881E-7	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999998966027172	WITHOUT_CLASSIFICATION	1.0339728280187975E-7	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999995189220205	WITHOUT_CLASSIFICATION	4.810779794577205E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.99999945130055	WITHOUT_CLASSIFICATION	5.48699449965208E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.99999945130055	WITHOUT_CLASSIFICATION	5.48699449965208E-7	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999990917539284	WITHOUT_CLASSIFICATION	9.082460715662088E-7	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999997112688774	WITHOUT_CLASSIFICATION	2.8873112256943803E-7	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999983815293207	WITHOUT_CLASSIFICATION	1.6184706792258468E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999381290743438	WITHOUT_CLASSIFICATION	6.187092565627077E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999381290743438	WITHOUT_CLASSIFICATION	6.187092565627077E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999381290743438	WITHOUT_CLASSIFICATION	6.187092565627077E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.9999998699427399	WITHOUT_CLASSIFICATION	1.300572602003144E-7	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998770883006	WITHOUT_CLASSIFICATION	1.2291169932202364E-7	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999998770883006	WITHOUT_CLASSIFICATION	1.2291169932202364E-7	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999998602688756	WITHOUT_CLASSIFICATION	1.3973112443039083E-7	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999998602688756	WITHOUT_CLASSIFICATION	1.3973112443039083E-7	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999994466000889	WITHOUT_CLASSIFICATION	5.533999110961425E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999998945124197	WITHOUT_CLASSIFICATION	1.0548758037712151E-7	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999997714583059	WITHOUT_CLASSIFICATION	2.2854169411276638E-7	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999934678003425	WITHOUT_CLASSIFICATION	6.532199657532081E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999976048564091	WITHOUT_CLASSIFICATION	2.3951435908675024E-6	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999996408091735	WITHOUT_CLASSIFICATION	3.591908265640793E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999986674005	WITHOUT_CLASSIFICATION	1.3325995063115037E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999983001922178	WITHOUT_CLASSIFICATION	1.6998077822039756E-6	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999988579290321	WITHOUT_CLASSIFICATION	1.1420709679007756E-6	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999614136926	WITHOUT_CLASSIFICATION	3.858630739588652E-8	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999891869194465	WITHOUT_CLASSIFICATION	1.0813080553480308E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999991589234408	WITHOUT_CLASSIFICATION	8.410765590610091E-7	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999997395460405	WITHOUT_CLASSIFICATION	2.604539595303624E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999991276989165	WITHOUT_CLASSIFICATION	8.723010834251688E-7	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999812466955	WITHOUT_CLASSIFICATION	1.8753304494332276E-8	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999984010520281	WITHOUT_CLASSIFICATION	1.5989479719333104E-6	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999888004521814	WITHOUT_CLASSIFICATION	1.1199547818532681E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999943032902	WITHOUT_CLASSIFICATION	5.696709784632108E-9	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999920692973743	WITHOUT_CLASSIFICATION	7.930702625706054E-5	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999988012218307	WITHOUT_CLASSIFICATION	1.1987781693263772E-6	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999986557303827	WITHOUT_CLASSIFICATION	1.3442696173496145E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9998559224895907	WITHOUT_CLASSIFICATION	1.4407751040941455E-4	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.999999490801898	WITHOUT_CLASSIFICATION	5.091981019357552E-7	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999999961213523	WITHOUT_CLASSIFICATION	3.878647758505282E-9	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999997242184583	WITHOUT_CLASSIFICATION	2.757815416825979E-7	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999927656797499	WITHOUT_CLASSIFICATION	7.234320250079451E-6	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999816349028924	WITHOUT_CLASSIFICATION	1.8365097107577853E-5	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999994226432491	WITHOUT_CLASSIFICATION	5.773567508352431E-7	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.999999533654768	WITHOUT_CLASSIFICATION	4.663452319078096E-7	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999958918944	WITHOUT_CLASSIFICATION	4.108105639381195E-9	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999992750567295	WITHOUT_CLASSIFICATION	7.249432704571042E-7	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999279687434	WITHOUT_CLASSIFICATION	7.203125670059651E-8	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999991435270535	WITHOUT_CLASSIFICATION	8.564729463859939E-7	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999067603678	WITHOUT_CLASSIFICATION	9.323963223656764E-8	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999999810648514	WITHOUT_CLASSIFICATION	1.8935148608186288E-7	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9997246158101888	WITHOUT_CLASSIFICATION	2.7538418981120093E-4	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999996189480372	WITHOUT_CLASSIFICATION	3.8105196272838937E-7	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999999020323244	WITHOUT_CLASSIFICATION	9.796767569101021E-8	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999976736559998	WITHOUT_CLASSIFICATION	2.3263440002057E-6	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999867872201	WITHOUT_CLASSIFICATION	1.3212779730820007E-8	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999994749558859	WITHOUT_CLASSIFICATION	5.250441141335301E-7	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999997358526108	WITHOUT_CLASSIFICATION	2.641473892506042E-7	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999810550605508	WITHOUT_CLASSIFICATION	1.894493944927774E-5	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999339841007	WITHOUT_CLASSIFICATION	6.601589929034561E-8	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999996763902473	WITHOUT_CLASSIFICATION	3.2360975266747723E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.99997097602663	WITHOUT_CLASSIFICATION	2.9023973369966537E-5	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999999194659084	WITHOUT_CLASSIFICATION	8.053409167955836E-8	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999989262864	WITHOUT_CLASSIFICATION	1.0737135478774447E-9	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999997085062984	WITHOUT_CLASSIFICATION	2.9149370157709557E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999691122964217	WITHOUT_CLASSIFICATION	3.088770357818427E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999999106417775	WITHOUT_CLASSIFICATION	8.935822241887506E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999999927655476	WITHOUT_CLASSIFICATION	7.234452396611725E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999999927655476	WITHOUT_CLASSIFICATION	7.234452396611725E-8	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999999897949093	WITHOUT_CLASSIFICATION	1.0205090693824922E-7	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999999897949093	WITHOUT_CLASSIFICATION	1.0205090693824922E-7	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999015368353248	WITHOUT_CLASSIFICATION	9.846316467516464E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999015368353248	WITHOUT_CLASSIFICATION	9.846316467516464E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999991864298763	WITHOUT_CLASSIFICATION	8.135701236952535E-7	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999991864298763	WITHOUT_CLASSIFICATION	8.135701236952535E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997685283717	WITHOUT_CLASSIFICATION	2.314716282683295E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997685283717	WITHOUT_CLASSIFICATION	2.314716282683295E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997685283717	WITHOUT_CLASSIFICATION	2.314716282683295E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997685283717	WITHOUT_CLASSIFICATION	2.314716282683295E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997685283717	WITHOUT_CLASSIFICATION	2.314716282683295E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997685283717	WITHOUT_CLASSIFICATION	2.314716282683295E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997685283717	WITHOUT_CLASSIFICATION	2.314716282683295E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997685283717	WITHOUT_CLASSIFICATION	2.314716282683295E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997685283717	WITHOUT_CLASSIFICATION	2.314716282683295E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999994917535912	WITHOUT_CLASSIFICATION	5.082464088591373E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999994917535912	WITHOUT_CLASSIFICATION	5.082464088591373E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999994917535912	WITHOUT_CLASSIFICATION	5.082464088591373E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999994265455575	WITHOUT_CLASSIFICATION	5.73454442501116E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996319392539	WITHOUT_CLASSIFICATION	3.6806074609537446E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996319392539	WITHOUT_CLASSIFICATION	3.6806074609537446E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996319392539	WITHOUT_CLASSIFICATION	3.6806074609537446E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999995970878667	WITHOUT_CLASSIFICATION	4.0291213337223425E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999995970878667	WITHOUT_CLASSIFICATION	4.0291213337223425E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999995970878667	WITHOUT_CLASSIFICATION	4.0291213337223425E-7	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999769767927585	WITHOUT_CLASSIFICATION	2.3023207241401076E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.99999961083615	WITHOUT_CLASSIFICATION	3.8916385011002705E-7	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999832684342717	WITHOUT_CLASSIFICATION	1.673156572836495E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999836823492411	WITHOUT_CLASSIFICATION	1.6317650758967807E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999836823492411	WITHOUT_CLASSIFICATION	1.6317650758967807E-5	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999836823492411	WITHOUT_CLASSIFICATION	1.6317650758967807E-5	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999975246182852	WITHOUT_CLASSIFICATION	2.4753817149166163E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999989631727679	WITHOUT_CLASSIFICATION	1.0368272320725938E-6	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999989631727679	WITHOUT_CLASSIFICATION	1.0368272320725938E-6	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999991145923476	WITHOUT_CLASSIFICATION	8.854076523430535E-7	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999994788029637	WITHOUT_CLASSIFICATION	5.211970362594562E-7	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999994788029637	WITHOUT_CLASSIFICATION	5.211970362594562E-7	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9991534454024226	WITHOUT_CLASSIFICATION	8.465545975774599E-4	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999716855370404	WITHOUT_CLASSIFICATION	2.8314462959649922E-5	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999991718137294	WITHOUT_CLASSIFICATION	8.281862705537612E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999987866310687	WITHOUT_CLASSIFICATION	1.2133689312794401E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999987866310687	WITHOUT_CLASSIFICATION	1.2133689312794401E-6	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999988291169177	WITHOUT_CLASSIFICATION	1.170883082255519E-6	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.999999386168513	WITHOUT_CLASSIFICATION	6.138314869400492E-7	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999965789974368	WITHOUT_CLASSIFICATION	3.4210025632116266E-6	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999999089902609	WITHOUT_CLASSIFICATION	9.100973916972239E-8	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999987508282184	WITHOUT_CLASSIFICATION	1.2491717814742756E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999987866310687	WITHOUT_CLASSIFICATION	1.2133689312794401E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999987866310687	WITHOUT_CLASSIFICATION	1.2133689312794401E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999987866310687	WITHOUT_CLASSIFICATION	1.2133689312794401E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999987866310687	WITHOUT_CLASSIFICATION	1.2133689312794401E-6	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999987866310687	WITHOUT_CLASSIFICATION	1.2133689312794401E-6	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999999257486546	WITHOUT_CLASSIFICATION	7.425134550206933E-8	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.999999894487888	WITHOUT_CLASSIFICATION	1.0551211195868506E-7	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999759404286	WITHOUT_CLASSIFICATION	2.4059571469680587E-8	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999994637350523	WITHOUT_CLASSIFICATION	5.362649477689685E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999997726246915	WITHOUT_CLASSIFICATION	2.2737530844631168E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999994456860335	WITHOUT_CLASSIFICATION	5.543139664601003E-7	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999788387317584	WITHOUT_CLASSIFICATION	2.1161268241572264E-5	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999994021855302	WITHOUT_CLASSIFICATION	5.97814469769192E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999997566141589	WITHOUT_CLASSIFICATION	2.433858411310572E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999992857069351	WITHOUT_CLASSIFICATION	7.142930649507502E-7	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999997579737092	WITHOUT_CLASSIFICATION	2.4202629076763874E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999976245393003	WITHOUT_CLASSIFICATION	2.3754606996687404E-6	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999997864169016	WITHOUT_CLASSIFICATION	2.1358309837443875E-7	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999998985377112	WITHOUT_CLASSIFICATION	1.0146228881000918E-6	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999999965617955	WITHOUT_CLASSIFICATION	3.4382044703148008E-9	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999993555951379	WITHOUT_CLASSIFICATION	6.44404862141081E-7	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999995123662431	WITHOUT_CLASSIFICATION	4.876337569486044E-7	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999965570676	WITHOUT_CLASSIFICATION	3.44293236405052E-9	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999999185217897	WITHOUT_CLASSIFICATION	8.147821023096323E-8	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999998205885741	WITHOUT_CLASSIFICATION	1.7941142590900303E-6	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999751415151418	WITHOUT_CLASSIFICATION	2.4858484858149335E-5	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999994888292923	WITHOUT_CLASSIFICATION	5.111707075935141E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999717642533	WITHOUT_CLASSIFICATION	2.823574662073755E-8	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999978545918041	WITHOUT_CLASSIFICATION	2.145408195778784E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999978545918041	WITHOUT_CLASSIFICATION	2.145408195778784E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999978545918041	WITHOUT_CLASSIFICATION	2.145408195778784E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999978545918041	WITHOUT_CLASSIFICATION	2.145408195778784E-6	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999996537831128	WITHOUT_CLASSIFICATION	3.462168872147385E-7	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999986499021649	WITHOUT_CLASSIFICATION	1.3500978350482435E-6	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999355783423	WITHOUT_CLASSIFICATION	6.442165766887604E-8	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999355783423	WITHOUT_CLASSIFICATION	6.442165766887604E-8	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999423368503	WITHOUT_CLASSIFICATION	5.7663149699234264E-8	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999999444654851	WITHOUT_CLASSIFICATION	5.553451490514496E-7	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999922534864814	WITHOUT_CLASSIFICATION	7.746513518695663E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999997619650534	WITHOUT_CLASSIFICATION	2.380349466788486E-7	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999934457319668	WITHOUT_CLASSIFICATION	6.554268033183543E-6	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999988027711812	WITHOUT_CLASSIFICATION	1.1972288187357797E-6	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999992252531159	WITHOUT_CLASSIFICATION	7.747468840400702E-7	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999955066070799	WITHOUT_CLASSIFICATION	4.493392920049624E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999955066070799	WITHOUT_CLASSIFICATION	4.493392920049624E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999955066070799	WITHOUT_CLASSIFICATION	4.493392920049624E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999955066070799	WITHOUT_CLASSIFICATION	4.493392920049624E-6	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999819905332	WITHOUT_CLASSIFICATION	1.8009466777573945E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998473611229	WITHOUT_CLASSIFICATION	1.5263887706039496E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998473611229	WITHOUT_CLASSIFICATION	1.5263887706039496E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998473611229	WITHOUT_CLASSIFICATION	1.5263887706039496E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999998659826902	WITHOUT_CLASSIFICATION	1.3401730969783885E-7	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999997804203529	WITHOUT_CLASSIFICATION	2.1957964707795176E-7	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999997474268217	WITHOUT_CLASSIFICATION	2.525731782192099E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9968562625420264	WITHOUT_CLASSIFICATION	0.0031437374579736275	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9968562625420264	WITHOUT_CLASSIFICATION	0.0031437374579736275	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.999999998208614	WITHOUT_CLASSIFICATION	1.7913859805371842E-9	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999997008779121	WITHOUT_CLASSIFICATION	2.9912208789838564E-7	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999969053199335	WITHOUT_CLASSIFICATION	3.0946800666545025E-6	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.9999969053199335	WITHOUT_CLASSIFICATION	3.0946800666545025E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999957174637704	WITHOUT_CLASSIFICATION	4.2825362296966085E-6	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999957174637704	WITHOUT_CLASSIFICATION	4.2825362296966085E-6	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999998063399709	WITHOUT_CLASSIFICATION	1.936600291508455E-7	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999996435619126	WITHOUT_CLASSIFICATION	3.564380873186238E-7	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999995844573405	WITHOUT_CLASSIFICATION	4.155426595098826E-7	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999875709059669	WITHOUT_CLASSIFICATION	1.2429094033077595E-5	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999787635572198	WITHOUT_CLASSIFICATION	2.1236442780101393E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999996044891437	WITHOUT_CLASSIFICATION	3.9551085629018037E-7	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999998958317564	WITHOUT_CLASSIFICATION	1.0416824352383677E-7	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.99997778822069	WITHOUT_CLASSIFICATION	2.2211779310097914E-5	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999868733825658	WITHOUT_CLASSIFICATION	1.3126617434336256E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999824268785	WITHOUT_CLASSIFICATION	1.7573121526920168E-8	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999824268785	WITHOUT_CLASSIFICATION	1.7573121526920168E-8	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999997189646256	WITHOUT_CLASSIFICATION	2.8103537442971663E-7	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999997189646256	WITHOUT_CLASSIFICATION	2.8103537442971663E-7	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999999812828448	WITHOUT_CLASSIFICATION	1.8717155139747808E-8	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999080496131	WITHOUT_CLASSIFICATION	9.195038691731569E-8	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999742805018026	WITHOUT_CLASSIFICATION	2.571949819738683E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999933932608713	WITHOUT_CLASSIFICATION	6.60673912860725E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999933932608713	WITHOUT_CLASSIFICATION	6.60673912860725E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999933932608713	WITHOUT_CLASSIFICATION	6.60673912860725E-6	TEST
// line 286	WITHOUT_CLASSIFICATION	0.999998860153168	WITHOUT_CLASSIFICATION	1.1398468320160465E-6	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999992066185805	WITHOUT_CLASSIFICATION	7.933814195039393E-7	TEST
// line 513	WITHOUT_CLASSIFICATION	0.999998987527362	WITHOUT_CLASSIFICATION	1.0124726380111814E-6	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999986365168527	WITHOUT_CLASSIFICATION	1.3634831472087529E-6	TEST
// line 533	WITHOUT_CLASSIFICATION	0.99999883686665	WITHOUT_CLASSIFICATION	1.1631333499788282E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999988815729492	WITHOUT_CLASSIFICATION	1.118427050812373E-6	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999992598349239	WITHOUT_CLASSIFICATION	7.401650760863414E-7	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999992846468504	WITHOUT_CLASSIFICATION	7.153531496077458E-7	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999999614746078	WITHOUT_CLASSIFICATION	3.852539229399559E-8	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999482589407	WITHOUT_CLASSIFICATION	5.1741059348589946E-8	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.999999131271826	WITHOUT_CLASSIFICATION	8.687281738824229E-7	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999995972431612	WITHOUT_CLASSIFICATION	4.027568386793156E-7	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999991997617375	WITHOUT_CLASSIFICATION	8.002382625792214E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9968562625420264	WITHOUT_CLASSIFICATION	0.0031437374579736275	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999999760619889	WITHOUT_CLASSIFICATION	2.3938011081755527E-8	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999941028189274	WITHOUT_CLASSIFICATION	5.897181072578545E-6	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999987420123333	WITHOUT_CLASSIFICATION	1.2579876666546533E-6	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999178815648662	WITHOUT_CLASSIFICATION	8.211843513383209E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999178815648662	WITHOUT_CLASSIFICATION	8.211843513383209E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999178815648662	WITHOUT_CLASSIFICATION	8.211843513383209E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999178815648662	WITHOUT_CLASSIFICATION	8.211843513383209E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999178815648662	WITHOUT_CLASSIFICATION	8.211843513383209E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999397851973999	WITHOUT_CLASSIFICATION	6.0214802600163084E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999178815648662	WITHOUT_CLASSIFICATION	8.211843513383209E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999178815648662	WITHOUT_CLASSIFICATION	8.211843513383209E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999178815648662	WITHOUT_CLASSIFICATION	8.211843513383209E-5	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999997579347147	WITHOUT_CLASSIFICATION	2.4206528525062767E-7	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999993803246199	WITHOUT_CLASSIFICATION	6.196753800871392E-7	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.999090054908197	WITHOUT_CLASSIFICATION	9.099450918028953E-4	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999959641468249	WITHOUT_CLASSIFICATION	4.0358531750754205E-6	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999729363383199	WITHOUT_CLASSIFICATION	2.7063661680219156E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999997286781594	WITHOUT_CLASSIFICATION	2.713218405169141E-7	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999998008541022	WITHOUT_CLASSIFICATION	1.9914589769867907E-7	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999990112970062	WITHOUT_CLASSIFICATION	9.88702993801784E-7	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999991272557481	WITHOUT_CLASSIFICATION	8.727442519133054E-7	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999991272557481	WITHOUT_CLASSIFICATION	8.727442519133054E-7	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999989849951858	WITHOUT_CLASSIFICATION	1.0150048142028092E-6	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999990499285653	WITHOUT_CLASSIFICATION	9.500714346049012E-7	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999991892999713	WITHOUT_CLASSIFICATION	8.107000287985961E-7	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999986196484644	WITHOUT_CLASSIFICATION	1.380351535621869E-6	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999986292344976	WITHOUT_CLASSIFICATION	1.37076550246882E-6	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999991766175557	WITHOUT_CLASSIFICATION	8.233824443346407E-7	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999991713281874	WITHOUT_CLASSIFICATION	8.286718127103063E-7	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999991175932249	WITHOUT_CLASSIFICATION	8.824067751918004E-7	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999990565983743	WITHOUT_CLASSIFICATION	9.434016258440489E-7	TEST
// line 800	WITHOUT_CLASSIFICATION	0.999998757963747	WITHOUT_CLASSIFICATION	1.242036252918591E-6	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999990237321444	WITHOUT_CLASSIFICATION	9.76267855588063E-7	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999988700657442	WITHOUT_CLASSIFICATION	1.1299342558046868E-6	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999985632140744	WITHOUT_CLASSIFICATION	1.4367859255428476E-6	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999990725282087	WITHOUT_CLASSIFICATION	9.274717912089359E-7	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999990695960526	WITHOUT_CLASSIFICATION	9.304039474832912E-7	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999990738479834	WITHOUT_CLASSIFICATION	9.261520166980296E-7	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999989792745219	WITHOUT_CLASSIFICATION	1.0207254780871134E-6	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999991743718395	WITHOUT_CLASSIFICATION	8.256281605488805E-7	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999986258349373	WITHOUT_CLASSIFICATION	1.3741650626800836E-6	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999988312751251	WITHOUT_CLASSIFICATION	1.1687248748652585E-6	TEST
// line 970	WITHOUT_CLASSIFICATION	0.999998897064354	WITHOUT_CLASSIFICATION	1.1029356460893016E-6	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999988491516575	WITHOUT_CLASSIFICATION	1.150848342565933E-6	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999991380359967	WITHOUT_CLASSIFICATION	8.619640034073265E-7	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999992764780951	WITHOUT_CLASSIFICATION	7.235219048855704E-7	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999990267389699	WITHOUT_CLASSIFICATION	9.73261030073054E-7	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999986307331196	WITHOUT_CLASSIFICATION	1.3692668803977987E-6	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.999999246204103	WITHOUT_CLASSIFICATION	7.53795897116671E-7	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999990703111584	WITHOUT_CLASSIFICATION	9.296888416410138E-7	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999991323679297	WITHOUT_CLASSIFICATION	8.67632070312993E-7	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999991839613444	WITHOUT_CLASSIFICATION	8.160386556991023E-7	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999992071166202	WITHOUT_CLASSIFICATION	7.928833798709201E-7	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999990922749232	WITHOUT_CLASSIFICATION	9.077250768025244E-7	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999993539316165	WITHOUT_CLASSIFICATION	6.460683835213421E-7	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999992767740318	WITHOUT_CLASSIFICATION	7.232259681560815E-7	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.999998921293687	WITHOUT_CLASSIFICATION	1.078706313039045E-6	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999990865405746	WITHOUT_CLASSIFICATION	9.134594254616054E-7	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999989630708865	WITHOUT_CLASSIFICATION	1.0369291134390962E-6	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999991944534454	WITHOUT_CLASSIFICATION	8.055465546877006E-7	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999991291294796	WITHOUT_CLASSIFICATION	8.708705204592093E-7	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.99999860498769	WITHOUT_CLASSIFICATION	1.3950123101098383E-6	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999989325566709	WITHOUT_CLASSIFICATION	1.0674433291055628E-6	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999984876240091	WITHOUT_CLASSIFICATION	1.512375990796886E-6	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999988740160383	WITHOUT_CLASSIFICATION	1.1259839618023925E-6	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999990835112245	WITHOUT_CLASSIFICATION	9.164887754972519E-7	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999988672160222	WITHOUT_CLASSIFICATION	1.1327839777470072E-6	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999992489518	WITHOUT_CLASSIFICATION	7.510481998941101E-7	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999993629149623	WITHOUT_CLASSIFICATION	6.370850377535108E-7	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999991032020908	WITHOUT_CLASSIFICATION	8.967979092177878E-7	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.999999080209908	WITHOUT_CLASSIFICATION	9.197900921254391E-7	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999990753164734	WITHOUT_CLASSIFICATION	9.246835266277656E-7	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999988965793138	WITHOUT_CLASSIFICATION	1.1034206861563396E-6	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999992232470171	WITHOUT_CLASSIFICATION	7.767529830310451E-7	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999991191669526	WITHOUT_CLASSIFICATION	8.808330475269805E-7	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999987006624305	WITHOUT_CLASSIFICATION	1.2993375695239032E-6	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999987006624305	WITHOUT_CLASSIFICATION	1.2993375695239032E-6	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999993356720538	WITHOUT_CLASSIFICATION	6.643279462966454E-7	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999989207093596	WITHOUT_CLASSIFICATION	1.0792906404052256E-6	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999991008074766	WITHOUT_CLASSIFICATION	8.991925235533316E-7	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999992129782986	WITHOUT_CLASSIFICATION	7.870217013409226E-7	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999992777213725	WITHOUT_CLASSIFICATION	7.222786274323132E-7	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999990614863132	WITHOUT_CLASSIFICATION	9.385136868013931E-7	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999993522497439	WITHOUT_CLASSIFICATION	6.477502561353164E-7	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999993429098494	WITHOUT_CLASSIFICATION	6.570901506608937E-7	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999991982816857	WITHOUT_CLASSIFICATION	8.017183143701552E-7	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999992201151311	WITHOUT_CLASSIFICATION	7.798848689726076E-7	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999916650227687	WITHOUT_CLASSIFICATION	8.334977231391772E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999916650227687	WITHOUT_CLASSIFICATION	8.334977231391772E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999972553347976	WITHOUT_CLASSIFICATION	2.7446652023364986E-6	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999836384597244	WITHOUT_CLASSIFICATION	1.636154027563388E-5	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.99999380000795	WITHOUT_CLASSIFICATION	6.19999205002901E-6	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999972591900886	WITHOUT_CLASSIFICATION	2.740809911383811E-6	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999587664024	WITHOUT_CLASSIFICATION	4.1233597635030624E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999587664024	WITHOUT_CLASSIFICATION	4.1233597635030624E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999587664024	WITHOUT_CLASSIFICATION	4.1233597635030624E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999587664024	WITHOUT_CLASSIFICATION	4.1233597635030624E-8	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9965635887848471	WITHOUT_CLASSIFICATION	0.0034364112151529583	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999988533171892	WITHOUT_CLASSIFICATION	1.1466828107809691E-6	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999987007870244	WITHOUT_CLASSIFICATION	1.2992129755650497E-6	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999983304019896	WITHOUT_CLASSIFICATION	1.6695980103683707E-6	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999987514725881	WITHOUT_CLASSIFICATION	1.2485274119352624E-6	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999990049676842	WITHOUT_CLASSIFICATION	9.95032315763898E-7	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999992962816291	WITHOUT_CLASSIFICATION	7.037183708596872E-7	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999990260300282	WITHOUT_CLASSIFICATION	9.739699717734073E-7	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999988822871729	WITHOUT_CLASSIFICATION	1.1177128269798721E-6	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999992489745752	WITHOUT_CLASSIFICATION	7.510254247847564E-7	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999991312188007	WITHOUT_CLASSIFICATION	8.687811993353655E-7	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999988847643835	WITHOUT_CLASSIFICATION	1.1152356164556867E-6	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999991793707294	WITHOUT_CLASSIFICATION	8.206292706788374E-7	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999988359955859	WITHOUT_CLASSIFICATION	1.1640044140546805E-6	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999990482123288	WITHOUT_CLASSIFICATION	9.517876713268892E-7	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999984310018495	WITHOUT_CLASSIFICATION	1.5689981505798728E-6	TEST
// line 776	WITHOUT_CLASSIFICATION	0.99999917134232	WITHOUT_CLASSIFICATION	8.28657680126009E-7	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999991762336181	WITHOUT_CLASSIFICATION	8.237663818461689E-7	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999984419168878	WITHOUT_CLASSIFICATION	1.5580831122484827E-6	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999990703064005	WITHOUT_CLASSIFICATION	9.296935994393385E-7	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999989028712833	WITHOUT_CLASSIFICATION	1.0971287166228786E-6	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999986925066033	WITHOUT_CLASSIFICATION	1.3074933965795848E-6	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999988009752605	WITHOUT_CLASSIFICATION	1.1990247395288411E-6	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999989375879373	WITHOUT_CLASSIFICATION	1.062412062666342E-6	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999987974122546	WITHOUT_CLASSIFICATION	1.2025877453333164E-6	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999992274557545	WITHOUT_CLASSIFICATION	7.725442453425385E-7	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999991018697837	WITHOUT_CLASSIFICATION	8.981302163738506E-7	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999990588068935	WITHOUT_CLASSIFICATION	9.41193106375697E-7	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999990960936811	WITHOUT_CLASSIFICATION	9.039063189594085E-7	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999991134371621	WITHOUT_CLASSIFICATION	8.865628379724818E-7	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999992962045147	WITHOUT_CLASSIFICATION	7.03795485328775E-7	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999991138621219	WITHOUT_CLASSIFICATION	8.861378780438878E-7	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999991726092267	WITHOUT_CLASSIFICATION	8.273907732897898E-7	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999992258595369	WITHOUT_CLASSIFICATION	7.741404629912139E-7	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999991172313865	WITHOUT_CLASSIFICATION	8.827686136064143E-7	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999988984799176	WITHOUT_CLASSIFICATION	1.10152008240759E-6	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999990596478258	WITHOUT_CLASSIFICATION	9.403521742674052E-7	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999990555648647	WITHOUT_CLASSIFICATION	9.444351353152559E-7	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999989082580047	WITHOUT_CLASSIFICATION	1.091741995203106E-6	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999989733958187	WITHOUT_CLASSIFICATION	1.026604181427682E-6	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999988856433831	WITHOUT_CLASSIFICATION	1.114356616854686E-6	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999989539388553	WITHOUT_CLASSIFICATION	1.0460611447655335E-6	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999993535461692	WITHOUT_CLASSIFICATION	6.464538307094715E-7	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999990737534307	WITHOUT_CLASSIFICATION	9.262465692803192E-7	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999992678347733	WITHOUT_CLASSIFICATION	7.321652266640651E-7	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.999999273105484	WITHOUT_CLASSIFICATION	7.268945160345504E-7	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999990846870502	WITHOUT_CLASSIFICATION	9.153129497455872E-7	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999992457553576	WITHOUT_CLASSIFICATION	7.542446425218375E-7	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999991115625834	WITHOUT_CLASSIFICATION	8.884374166520982E-7	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999991177343093	WITHOUT_CLASSIFICATION	8.822656907584173E-7	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999992543965109	WITHOUT_CLASSIFICATION	7.456034890565701E-7	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999992564477165	WITHOUT_CLASSIFICATION	7.435522835738813E-7	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999991188725145	WITHOUT_CLASSIFICATION	8.81127485442483E-7	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999990355630304	WITHOUT_CLASSIFICATION	9.64436969629639E-7	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999991972796136	WITHOUT_CLASSIFICATION	8.027203864573004E-7	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999990800303938	WITHOUT_CLASSIFICATION	9.199696061613538E-7	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999991016618733	WITHOUT_CLASSIFICATION	8.98338126648497E-7	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999990798753179	WITHOUT_CLASSIFICATION	9.201246820577208E-7	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999986628527556	WITHOUT_CLASSIFICATION	1.33714724441898E-6	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999991938745856	WITHOUT_CLASSIFICATION	8.061254143282547E-7	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.999999984746982	WITHOUT_CLASSIFICATION	1.5253017880466972E-8	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997922469347	WITHOUT_CLASSIFICATION	2.0775306527929847E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997922469347	WITHOUT_CLASSIFICATION	2.0775306527929847E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997922469347	WITHOUT_CLASSIFICATION	2.0775306527929847E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997922469347	WITHOUT_CLASSIFICATION	2.0775306527929847E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997922469347	WITHOUT_CLASSIFICATION	2.0775306527929847E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997922469347	WITHOUT_CLASSIFICATION	2.0775306527929847E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997922469347	WITHOUT_CLASSIFICATION	2.0775306527929847E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999755707675	WITHOUT_CLASSIFICATION	2.4429232464802297E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999755707675	WITHOUT_CLASSIFICATION	2.4429232464802297E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999755707675	WITHOUT_CLASSIFICATION	2.4429232464802297E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999755707675	WITHOUT_CLASSIFICATION	2.4429232464802297E-8	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.999997306961948	WITHOUT_CLASSIFICATION	2.69303805189174E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.999997306961948	WITHOUT_CLASSIFICATION	2.69303805189174E-6	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999922969634214	WITHOUT_CLASSIFICATION	7.703036578585739E-6	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999810404057	WITHOUT_CLASSIFICATION	1.8959594246903267E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999810404057	WITHOUT_CLASSIFICATION	1.8959594246903267E-8	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999996737283093	WITHOUT_CLASSIFICATION	3.26271690765191E-7	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999998917335482	WITHOUT_CLASSIFICATION	1.0826645189309173E-7	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999725208555	WITHOUT_CLASSIFICATION	2.7479144544392797E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999725208555	WITHOUT_CLASSIFICATION	2.7479144544392797E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999725208555	WITHOUT_CLASSIFICATION	2.7479144544392797E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999725208555	WITHOUT_CLASSIFICATION	2.7479144544392797E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999725208555	WITHOUT_CLASSIFICATION	2.7479144544392797E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999725208555	WITHOUT_CLASSIFICATION	2.7479144544392797E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999725208555	WITHOUT_CLASSIFICATION	2.7479144544392797E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999846302626	WITHOUT_CLASSIFICATION	1.53697373790573E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999605467682	WITHOUT_CLASSIFICATION	3.9453231800413445E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999996237690575	WITHOUT_CLASSIFICATION	3.7623094256804486E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999996237690575	WITHOUT_CLASSIFICATION	3.7623094256804486E-7	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999836026402	WITHOUT_CLASSIFICATION	1.63973598078358E-8	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999996622467876	WITHOUT_CLASSIFICATION	3.377532123388781E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999996622467876	WITHOUT_CLASSIFICATION	3.377532123388781E-7	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999216044265	WITHOUT_CLASSIFICATION	7.839557348612744E-8	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9984343075408898	WITHOUT_CLASSIFICATION	0.00156569245911023	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999999726977842	WITHOUT_CLASSIFICATION	2.7302215864992442E-8	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999999882755116	WITHOUT_CLASSIFICATION	1.1724488454327107E-8	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999994109504239	WITHOUT_CLASSIFICATION	5.890495761099788E-7	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999994013402463	WITHOUT_CLASSIFICATION	5.98659753673484E-7	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999995665313645	WITHOUT_CLASSIFICATION	4.33468635448255E-7	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999999272572764	WITHOUT_CLASSIFICATION	7.274272351581251E-8	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9998794158178327	WITHOUT_CLASSIFICATION	1.2058418216724404E-4	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999964845649777	WITHOUT_CLASSIFICATION	3.5154350223845945E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9979513984820897	WITHOUT_CLASSIFICATION	0.0020486015179103203	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999900518377	WITHOUT_CLASSIFICATION	9.948162338260294E-9	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.999999939003333	WITHOUT_CLASSIFICATION	6.0996667009742E-8	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999894048235709	WITHOUT_CLASSIFICATION	1.059517642902859E-5	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999994395362192	WITHOUT_CLASSIFICATION	5.60463780797563E-7	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999999819669212	WITHOUT_CLASSIFICATION	1.803307886811127E-8	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999115376098	WITHOUT_CLASSIFICATION	8.846239025872868E-8	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999951760967378	WITHOUT_CLASSIFICATION	4.823903262160054E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999986831620675	WITHOUT_CLASSIFICATION	1.3168379325330073E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999986831620675	WITHOUT_CLASSIFICATION	1.3168379325330073E-6	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999994814367755	WITHOUT_CLASSIFICATION	5.185632245164384E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999851346756	WITHOUT_CLASSIFICATION	1.4865324400688337E-7	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999797122713	WITHOUT_CLASSIFICATION	2.0287728754941234E-8	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999584835138284	WITHOUT_CLASSIFICATION	4.1516486171553306E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999828132998969	WITHOUT_CLASSIFICATION	1.7186700103020988E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999828132998969	WITHOUT_CLASSIFICATION	1.7186700103020988E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999828132998969	WITHOUT_CLASSIFICATION	1.7186700103020988E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999997048278112	WITHOUT_CLASSIFICATION	2.9517218881399534E-7	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999972743052079	WITHOUT_CLASSIFICATION	2.725694792137928E-6	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999999795637634	WITHOUT_CLASSIFICATION	2.0436236672151217E-8	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999999517599115	WITHOUT_CLASSIFICATION	4.824008848232851E-8	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999986930644925	WITHOUT_CLASSIFICATION	1.306935507437302E-6	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999844305218	WITHOUT_CLASSIFICATION	1.5569478056615344E-8	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999069656839	WITHOUT_CLASSIFICATION	9.3034316086209E-8	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999985285284536	WITHOUT_CLASSIFICATION	1.471471546394613E-6	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999974180883	WITHOUT_CLASSIFICATION	2.5819116211136333E-9	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999995445343258	WITHOUT_CLASSIFICATION	4.5546567408255206E-7	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999997349385864	WITHOUT_CLASSIFICATION	2.6506141355139723E-7	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.999999821063239	WITHOUT_CLASSIFICATION	1.7893676092689745E-7	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9986870024086029	WITHOUT_CLASSIFICATION	0.001312997591397175	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.99999613321266	WITHOUT_CLASSIFICATION	3.866787340006278E-6	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999991280773618	WITHOUT_CLASSIFICATION	8.719226381476138E-7	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999908488841954	WITHOUT_CLASSIFICATION	9.151115804540608E-6	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.999999728118813	WITHOUT_CLASSIFICATION	2.7188118708006673E-7	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9998972439167477	WITHOUT_CLASSIFICATION	1.0275608325235087E-4	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999999878952357	WITHOUT_CLASSIFICATION	1.2104764213605865E-8	TEST
