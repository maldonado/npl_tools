?R | boolean | True if file is readable by the real uid/gid of the caller FIXME: Need to implement an readable_real_p in FileTest	TEST	0.999999960520419	WITHOUT_CLASSIFICATION	3.9479581038834617E-8	TEST
TODO make an assert here	TEST	0.9944416148742743	WITHOUT_CLASSIFICATION	0.005558385125725682	TEST
TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.8865260759411983	WITHOUT_CLASSIFICATION	0.11347392405880177	TEST
TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.999893917323711	WITHOUT_CLASSIFICATION	1.0608267628902849E-4	TEST
if the method is extending something, then we have to test if the handler is initialized...	TEST	0.9999529385068183	WITHOUT_CLASSIFICATION	4.7061493181726E-5	TEST
?W | boolean | True if file1 exists and is writable by the real uid/gid FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999998228370299	WITHOUT_CLASSIFICATION	1.771629701016748E-7	TEST
set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999998032592301	WITHOUT_CLASSIFICATION	1.967407698434897E-7	TEST
line 335	WITHOUT_CLASSIFICATION	0.9999862448351098	WITHOUT_CLASSIFICATION	1.375516489017578E-5	TEST
yyLen 542	WITHOUT_CLASSIFICATION	0.9999820541467946	WITHOUT_CLASSIFICATION	1.7945853205369062E-5	TEST
yyLen 542	WITHOUT_CLASSIFICATION	0.9999820541467946	WITHOUT_CLASSIFICATION	1.7945853205369062E-5	TEST
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999109955906478	WITHOUT_CLASSIFICATION	8.90044093522347E-5	TEST
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999109955906478	WITHOUT_CLASSIFICATION	8.90044093522347E-5	TEST
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999417542830998	WITHOUT_CLASSIFICATION	5.8245716900071813E-5	TEST
Figure end-char. '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999990477041488	WITHOUT_CLASSIFICATION	9.522958513291452E-7	TEST
line 362	WITHOUT_CLASSIFICATION	0.999984078087102	WITHOUT_CLASSIFICATION	1.5921912897983284E-5	TEST
line 372	WITHOUT_CLASSIFICATION	0.9999844930674705	WITHOUT_CLASSIFICATION	1.550693252949971E-5	TEST
yySindex 945	WITHOUT_CLASSIFICATION	0.9999730171596403	WITHOUT_CLASSIFICATION	2.698284035971648E-5	TEST
yySindex 945	WITHOUT_CLASSIFICATION	0.9999730171596403	WITHOUT_CLASSIFICATION	2.698284035971648E-5	TEST
line 391	WITHOUT_CLASSIFICATION	0.9999881803752381	WITHOUT_CLASSIFICATION	1.1819624761884938E-5	TEST
yyRindex 945	WITHOUT_CLASSIFICATION	0.999972323678049	WITHOUT_CLASSIFICATION	2.767632195102188E-5	TEST
yyRindex 945	WITHOUT_CLASSIFICATION	0.999972323678049	WITHOUT_CLASSIFICATION	2.767632195102188E-5	TEST
^D	WITHOUT_CLASSIFICATION	0.9990352376826569	WITHOUT_CLASSIFICATION	9.64762317343077E-4	TEST
^Z	WITHOUT_CLASSIFICATION	0.9992320246145826	WITHOUT_CLASSIFICATION	7.679753854175298E-4	TEST
yyLen 496	WITHOUT_CLASSIFICATION	0.9999834508638241	WITHOUT_CLASSIFICATION	1.654913617585192E-5	TEST
yyLen 496	WITHOUT_CLASSIFICATION	0.9999834508638241	WITHOUT_CLASSIFICATION	1.654913617585192E-5	TEST
yyLen 496	WITHOUT_CLASSIFICATION	0.9999834508638241	WITHOUT_CLASSIFICATION	1.654913617585192E-5	TEST
yyLen 496	WITHOUT_CLASSIFICATION	0.9999834508638241	WITHOUT_CLASSIFICATION	1.654913617585192E-5	TEST
yyLen 496	WITHOUT_CLASSIFICATION	0.9999834508638241	WITHOUT_CLASSIFICATION	1.654913617585192E-5	TEST
yyLen 496	WITHOUT_CLASSIFICATION	0.9999834508638241	WITHOUT_CLASSIFICATION	1.654913617585192E-5	TEST
yyLen 496	WITHOUT_CLASSIFICATION	0.9999834508638241	WITHOUT_CLASSIFICATION	1.654913617585192E-5	TEST
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998980613460732	WITHOUT_CLASSIFICATION	1.0193865392682893E-4	TEST
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998980613460732	WITHOUT_CLASSIFICATION	1.0193865392682893E-4	TEST
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998980613460732	WITHOUT_CLASSIFICATION	1.0193865392682893E-4	TEST
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998980613460732	WITHOUT_CLASSIFICATION	1.0193865392682893E-4	TEST
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998980613460732	WITHOUT_CLASSIFICATION	1.0193865392682893E-4	TEST
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998980613460732	WITHOUT_CLASSIFICATION	1.0193865392682893E-4	TEST
yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998980613460732	WITHOUT_CLASSIFICATION	1.0193865392682893E-4	TEST
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999360375221956	WITHOUT_CLASSIFICATION	6.396247780434296E-5	TEST
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999360375221956	WITHOUT_CLASSIFICATION	6.396247780434296E-5	TEST
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999360375221956	WITHOUT_CLASSIFICATION	6.396247780434296E-5	TEST
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999360375221956	WITHOUT_CLASSIFICATION	6.396247780434296E-5	TEST
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999360375221956	WITHOUT_CLASSIFICATION	6.396247780434296E-5	TEST
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999360375221956	WITHOUT_CLASSIFICATION	6.396247780434296E-5	TEST
yySindex 889	WITHOUT_CLASSIFICATION	0.9999690956971782	WITHOUT_CLASSIFICATION	3.0904302821797546E-5	TEST
yySindex 889	WITHOUT_CLASSIFICATION	0.9999690956971782	WITHOUT_CLASSIFICATION	3.0904302821797546E-5	TEST
yySindex 889	WITHOUT_CLASSIFICATION	0.9999690956971782	WITHOUT_CLASSIFICATION	3.0904302821797546E-5	TEST
yySindex 889	WITHOUT_CLASSIFICATION	0.9999690956971782	WITHOUT_CLASSIFICATION	3.0904302821797546E-5	TEST
yySindex 889	WITHOUT_CLASSIFICATION	0.9999690956971782	WITHOUT_CLASSIFICATION	3.0904302821797546E-5	TEST
yySindex 889	WITHOUT_CLASSIFICATION	0.9999690956971782	WITHOUT_CLASSIFICATION	3.0904302821797546E-5	TEST
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999683014339128	WITHOUT_CLASSIFICATION	3.169856608718992E-5	TEST
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999683014339128	WITHOUT_CLASSIFICATION	3.169856608718992E-5	TEST
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999683014339128	WITHOUT_CLASSIFICATION	3.169856608718992E-5	TEST
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999683014339128	WITHOUT_CLASSIFICATION	3.169856608718992E-5	TEST
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999683014339128	WITHOUT_CLASSIFICATION	3.169856608718992E-5	TEST
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999683014339128	WITHOUT_CLASSIFICATION	3.169856608718992E-5	TEST
yyRindex 889	WITHOUT_CLASSIFICATION	0.9999683014339128	WITHOUT_CLASSIFICATION	3.169856608718992E-5	TEST
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999745804041711	WITHOUT_CLASSIFICATION	2.5419595828922644E-5	TEST
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999745804041711	WITHOUT_CLASSIFICATION	2.5419595828922644E-5	TEST
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999745804041711	WITHOUT_CLASSIFICATION	2.5419595828922644E-5	TEST
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999745804041711	WITHOUT_CLASSIFICATION	2.5419595828922644E-5	TEST
Do nothing	WITHOUT_CLASSIFICATION	0.9999816237239761	WITHOUT_CLASSIFICATION	1.8376276023842053E-5	TEST
Do nothing	WITHOUT_CLASSIFICATION	0.9999816237239761	WITHOUT_CLASSIFICATION	1.8376276023842053E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
return result	WITHOUT_CLASSIFICATION	0.9999989609691706	WITHOUT_CLASSIFICATION	1.0390308294149988E-6	TEST
name	WITHOUT_CLASSIFICATION	0.9998254209735103	WITHOUT_CLASSIFICATION	1.7457902648967017E-4	TEST
Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.999996798582261	WITHOUT_CLASSIFICATION	3.201417738890567E-6	TEST
Accessor methods.	WITHOUT_CLASSIFICATION	0.9999948356842893	WITHOUT_CLASSIFICATION	5.1643157107281225E-6	TEST
MRI behavior	WITHOUT_CLASSIFICATION	0.999994932357278	WITHOUT_CLASSIFICATION	5.067642722107754E-6	TEST
MRI behavior	WITHOUT_CLASSIFICATION	0.999994932357278	WITHOUT_CLASSIFICATION	5.067642722107754E-6	TEST
MRI behavior	WITHOUT_CLASSIFICATION	0.999994932357278	WITHOUT_CLASSIFICATION	5.067642722107754E-6	TEST
MRI behavior	WITHOUT_CLASSIFICATION	0.999994932357278	WITHOUT_CLASSIFICATION	5.067642722107754E-6	TEST
call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999998050493462	WITHOUT_CLASSIFICATION	1.9495065391368284E-7	TEST
fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999998082281543	WITHOUT_CLASSIFICATION	1.917718457303709E-7	TEST
try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999992692897904	WITHOUT_CLASSIFICATION	7.307102095907787E-7	TEST
define ARGV and $ for this runtime	WITHOUT_CLASSIFICATION	0.9999969039283122	WITHOUT_CLASSIFICATION	3.0960716878495522E-6	TEST
Version information:	WITHOUT_CLASSIFICATION	0.9999950709407119	WITHOUT_CLASSIFICATION	4.9290592881576825E-6	TEST
after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999500234882	WITHOUT_CLASSIFICATION	4.9976511741150974E-8	TEST
ARGF, $< object	WITHOUT_CLASSIFICATION	0.99998996389704	WITHOUT_CLASSIFICATION	1.0036102960060332E-5	TEST
if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999996480161478	WITHOUT_CLASSIFICATION	3.5198385227199414E-7	TEST
On platforms without a c-library accessable through JNA, getpid will return hashCode as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999146317076	WITHOUT_CLASSIFICATION	8.536829236649078E-8	TEST
$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999988635740016	WITHOUT_CLASSIFICATION	1.1364259984582022E-6	TEST
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999999954870052	WITHOUT_CLASSIFICATION	4.5129947938489544E-8	TEST
MRI behavior: just plain '' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.999999706653152	WITHOUT_CLASSIFICATION	2.9334684800209775E-7	TEST
this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999958045564495	WITHOUT_CLASSIFICATION	4.195443550445984E-6	TEST
What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999998962517916	WITHOUT_CLASSIFICATION	1.0374820837935858E-7	TEST
----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999993506610055	WITHOUT_CLASSIFICATION	6.493389944987502E-7	TEST
CONSTANT TABLE METHODS - pass to delegate	WITHOUT_CLASSIFICATION	0.9999990014043387	WITHOUT_CLASSIFICATION	9.985956612075973E-7	TEST
We get canonical path to try and flatten the path out. a dir '/subdir/..' should return as '/' cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999999711878488	WITHOUT_CLASSIFICATION	2.8812151157810277E-8	TEST
MRI behavior	WITHOUT_CLASSIFICATION	0.999994932357278	WITHOUT_CLASSIFICATION	5.067642722107754E-6	TEST
----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998688844824	WITHOUT_CLASSIFICATION	1.311155175254806E-7	TEST
Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999998016042755	WITHOUT_CLASSIFICATION	1.9839572441624533E-7	TEST
----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999985350007764	WITHOUT_CLASSIFICATION	1.4649992235726618E-6	TEST
try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999931711952944	WITHOUT_CLASSIFICATION	6.828804705576312E-6	TEST
otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999999347144928	WITHOUT_CLASSIFICATION	6.528550716953308E-8	TEST
Proc class	WITHOUT_CLASSIFICATION	0.9999945122259576	WITHOUT_CLASSIFICATION	5.487774042442431E-6	TEST
No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999998364594449	WITHOUT_CLASSIFICATION	1.6354055503237672E-7	TEST
modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999965749713741	WITHOUT_CLASSIFICATION	3.4250286258606822E-6	TEST
for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999971233363082	WITHOUT_CLASSIFICATION	2.876663691768198E-6	TEST
case RUBY_HYBRID: backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); break;	WITHOUT_CLASSIFICATION	0.9999997611514524	WITHOUT_CLASSIFICATION	2.388485475826492E-7	TEST
This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999637638052336	WITHOUT_CLASSIFICATION	3.6236194766504584E-5	TEST
rb_exc_new3	WITHOUT_CLASSIFICATION	0.9996975128906596	WITHOUT_CLASSIFICATION	3.0248710934037914E-4	TEST
NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999996910114084	WITHOUT_CLASSIFICATION	3.089885916271969E-7	TEST
registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999995154780643	WITHOUT_CLASSIFICATION	4.845219357267434E-7	TEST
IOT is also 6	WITHOUT_CLASSIFICATION	0.999974512515996	WITHOUT_CLASSIFICATION	2.5487484004007126E-5	TEST
CLD is also 20	WITHOUT_CLASSIFICATION	0.999919881667643	WITHOUT_CLASSIFICATION	8.011833235697668E-5	TEST
RubySignal	WITHOUT_CLASSIFICATION	0.9999906478188757	WITHOUT_CLASSIFICATION	9.352181124261087E-6	TEST
ZStream actually isn't allocatable	WITHOUT_CLASSIFICATION	0.999999489386004	WITHOUT_CLASSIFICATION	5.106139958898772E-7	TEST
MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9986443831420092	WITHOUT_CLASSIFICATION	0.001355616857990863	TEST
it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999981682916733	WITHOUT_CLASSIFICATION	1.8317083266587465E-6	TEST
MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999994416478996	WITHOUT_CLASSIFICATION	5.583521003325777E-7	TEST
SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9998248058199345	WITHOUT_CLASSIFICATION	1.7519418006542792E-4	TEST
By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.999999454998968	WITHOUT_CLASSIFICATION	5.450010319580321E-7	TEST
io.finish();	WITHOUT_CLASSIFICATION	0.999879262648917	WITHOUT_CLASSIFICATION	1.2073735108295442E-4	TEST
should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.999995184100328	WITHOUT_CLASSIFICATION	4.815899671963057E-6	TEST
hmm...	WITHOUT_CLASSIFICATION	0.999252033961739	WITHOUT_CLASSIFICATION	7.479660382609419E-4	TEST
Called before any write to make sure the header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999996633536462	WITHOUT_CLASSIFICATION	3.3664635388142396E-7	TEST
For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999999418271055	WITHOUT_CLASSIFICATION	5.817289436660078E-8	TEST
We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999992720879506	WITHOUT_CLASSIFICATION	7.279120493563931E-7	TEST
float number of seconds	WITHOUT_CLASSIFICATION	0.9999989175219229	WITHOUT_CLASSIFICATION	1.08247807698184E-6	TEST
modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999983420989783	WITHOUT_CLASSIFICATION	1.6579010217433864E-6	TEST
dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999976345364872	WITHOUT_CLASSIFICATION	2.3654635128761834E-6	TEST
Time class methods	WITHOUT_CLASSIFICATION	0.9999990018831355	WITHOUT_CLASSIFICATION	9.981168644510264E-7	TEST
marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999997238975356	WITHOUT_CLASSIFICATION	2.761024644995507E-7	TEST
MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999999879661592	WITHOUT_CLASSIFICATION	1.2033840705902719E-8	TEST
set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999992068019489	WITHOUT_CLASSIFICATION	7.931980511639482E-7	TEST
the instant at which we will ask dtz what the difference between DST and standard time is	WITHOUT_CLASSIFICATION	0.9999998957674949	WITHOUT_CLASSIFICATION	1.0423250512373286E-7	TEST
if we might be moving this time from !DST -> DST, the offset is assumed to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999991630926935	WITHOUT_CLASSIFICATION	8.369073064723041E-7	TEST
Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999987516064011	WITHOUT_CLASSIFICATION	1.2483935989694612E-6	TEST
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9999970194448335	WITHOUT_CLASSIFICATION	2.980555166410057E-6	TEST
If the value will fit in a Fixnum, return one of those.	WITHOUT_CLASSIFICATION	0.9999999130986036	WITHOUT_CLASSIFICATION	8.690139633409895E-8	TEST
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999991522820569	WITHOUT_CLASSIFICATION	8.477179430034336E-7	TEST
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.999999493523302	WITHOUT_CLASSIFICATION	5.064766980001172E-7	TEST
num2int is also implemented	WITHOUT_CLASSIFICATION	0.999999482912077	WITHOUT_CLASSIFICATION	5.17087923041918E-7	TEST
num2int is also implemented	WITHOUT_CLASSIFICATION	0.999999482912077	WITHOUT_CLASSIFICATION	5.17087923041918E-7	TEST
no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999340866898296	WITHOUT_CLASSIFICATION	6.591331017031339E-5	TEST
wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999998670268788	WITHOUT_CLASSIFICATION	1.3297312116082045E-7	TEST
Pad with a 0	WITHOUT_CLASSIFICATION	0.9998079254930113	WITHOUT_CLASSIFICATION	1.9207450698863044E-4	TEST
BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999997131938015	WITHOUT_CLASSIFICATION	2.868061984943584E-7	TEST
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999982107099988	WITHOUT_CLASSIFICATION	1.7892900011922631E-6	TEST
We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999606598679894	WITHOUT_CLASSIFICATION	3.934013201051416E-5	TEST
???	WITHOUT_CLASSIFICATION	0.999409309224766	WITHOUT_CLASSIFICATION	5.906907752340387E-4	TEST
PID	WITHOUT_CLASSIFICATION	0.9994161971648172	WITHOUT_CLASSIFICATION	5.838028351827571E-4	TEST
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999991522820569	WITHOUT_CLASSIFICATION	8.477179430034336E-7	TEST
elements and trailing nils	WITHOUT_CLASSIFICATION	0.999999199185662	WITHOUT_CLASSIFICATION	8.008143380047522E-7	TEST
Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9998359066399674	WITHOUT_CLASSIFICATION	1.640933600326874E-4	TEST
volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999856773577	WITHOUT_CLASSIFICATION	1.4322642420393796E-8	TEST
Ruby arrays default to holding 16 elements, so we create an ArrayList of the same size if we're not told otherwise	WITHOUT_CLASSIFICATION	0.999999977574672	WITHOUT_CLASSIFICATION	2.2425328005398845E-8	TEST
rb_ary_new2 just allocates the internal array	WITHOUT_CLASSIFICATION	0.9999998466892994	WITHOUT_CLASSIFICATION	1.533107006135093E-7	TEST
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9999982673374336	WITHOUT_CLASSIFICATION	1.7326625664524936E-6	TEST
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9999982673374336	WITHOUT_CLASSIFICATION	1.7326625664524936E-6	TEST
plain internal array assignment	WITHOUT_CLASSIFICATION	0.9999982673374336	WITHOUT_CLASSIFICATION	1.7326625664524936E-6	TEST
Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour	WITHOUT_CLASSIFICATION	0.9999999784890042	WITHOUT_CLASSIFICATION	2.1510995759318955E-8	TEST
NEWOBJ and OBJSETUP equivalent fastest one, for shared arrays, optional objectspace	WITHOUT_CLASSIFICATION	0.9999992486100623	WITHOUT_CLASSIFICATION	7.513899377582643E-7	TEST
Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999971484525532	WITHOUT_CLASSIFICATION	2.851547446750629E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
Windows does not support these functions, so we won't even try This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999961679245719	WITHOUT_CLASSIFICATION	3.832075428084492E-6	TEST
There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and newer one (US/Pacific, America/Los_Angeles). This pattern is to detect the legacy TZ format in order to convert it to the newer format understood by Java API.	WITHOUT_CLASSIFICATION	0.99999988998823	WITHOUT_CLASSIFICATION	1.1001176996401864E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999993130735261	WITHOUT_CLASSIFICATION	6.869264739539547E-7	TEST
possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999991963707638	WITHOUT_CLASSIFICATION	8.036292361759117E-7	TEST
only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999996115641916	WITHOUT_CLASSIFICATION	3.884358084770597E-7	TEST
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9998740185353865	WITHOUT_CLASSIFICATION	1.2598146461353655E-4	TEST
rb_ary_new4	WITHOUT_CLASSIFICATION	0.9998740185353865	WITHOUT_CLASSIFICATION	1.2598146461353655E-4	TEST
from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999613335428431	WITHOUT_CLASSIFICATION	3.866645715693217E-5	TEST
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999996720141815	WITHOUT_CLASSIFICATION	3.2798581851629573E-6	TEST
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999933924855744	WITHOUT_CLASSIFICATION	6.607514425607246E-6	TEST
See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999933924855744	WITHOUT_CLASSIFICATION	6.607514425607246E-6	TEST
Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999987030379951	WITHOUT_CLASSIFICATION	1.2969620049532245E-6	TEST
pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.999999871985489	WITHOUT_CLASSIFICATION	1.2801451100738083E-7	TEST
root fiber	WITHOUT_CLASSIFICATION	0.9999984397089668	WITHOUT_CLASSIFICATION	1.5602910331009169E-6	TEST
GMT+00:00 --> Etc/GMT, see "MRI behavior" comment below.	WITHOUT_CLASSIFICATION	0.9999997780059005	WITHOUT_CLASSIFICATION	2.219940996084004E-7	TEST
See http:www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.999997586880259	WITHOUT_CLASSIFICATION	2.413119740930225E-6	TEST
extras flag	WITHOUT_CLASSIFICATION	0.9999946924821858	WITHOUT_CLASSIFICATION	5.307517814265244E-6	TEST
Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9998527595568337	WITHOUT_CLASSIFICATION	1.4724044316623394E-4	TEST
...nothing	WITHOUT_CLASSIFICATION	0.9999258696726038	WITHOUT_CLASSIFICATION	7.413032739623551E-5	TEST
utility method	WITHOUT_CLASSIFICATION	0.9999963179491119	WITHOUT_CLASSIFICATION	3.6820508880360823E-6	TEST
Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.999999070214415	WITHOUT_CLASSIFICATION	9.297855850322619E-7	TEST
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999991522820569	WITHOUT_CLASSIFICATION	8.477179430034336E-7	TEST
flags 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999825639150607	WITHOUT_CLASSIFICATION	1.7436084939311593E-5	TEST
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999991907425497	WITHOUT_CLASSIFICATION	8.092574503369321E-7	TEST
1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999956038625808	WITHOUT_CLASSIFICATION	4.3961374191018824E-6	TEST
any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999985439608973	WITHOUT_CLASSIFICATION	1.4560391027903977E-6	TEST
beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.999996252137669	WITHOUT_CLASSIFICATION	3.747862331037683E-6	TEST
MRI does it!	WITHOUT_CLASSIFICATION	0.9999424546294684	WITHOUT_CLASSIFICATION	5.754537053155188E-5	TEST
won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999975544884313	WITHOUT_CLASSIFICATION	2.4455115686939006E-6	TEST
it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999899118329411	WITHOUT_CLASSIFICATION	1.008816705890374E-5	TEST
RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.999989117309929	WITHOUT_CLASSIFICATION	1.0882690070880385E-5	TEST
not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999981599232484	WITHOUT_CLASSIFICATION	1.8400767515851355E-6	TEST
second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.999999919079769	WITHOUT_CLASSIFICATION	8.092023101125751E-8	TEST
we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999993560196414	WITHOUT_CLASSIFICATION	6.43980358597531E-7	TEST
terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999998198041092	WITHOUT_CLASSIFICATION	1.801958908518869E-7	TEST
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.99999920276726	WITHOUT_CLASSIFICATION	7.972327399540411E-7	TEST
do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.999151960437408	WITHOUT_CLASSIFICATION	8.480395625921623E-4	TEST
recheck condition	WITHOUT_CLASSIFICATION	0.9999993726963718	WITHOUT_CLASSIFICATION	6.273036281738818E-7	TEST
Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999998482858994	WITHOUT_CLASSIFICATION	1.5171410065398058E-7	TEST
Construct key services	WITHOUT_CLASSIFICATION	0.9999990218194491	WITHOUT_CLASSIFICATION	9.781805509135968E-7	TEST
initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999999357913298	WITHOUT_CLASSIFICATION	6.420867010908638E-8	TEST
Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999999553702053	WITHOUT_CLASSIFICATION	4.462979478165424E-8	TEST
Initialize all the core classes	WITHOUT_CLASSIFICATION	0.999999861678717	WITHOUT_CLASSIFICATION	1.3832128289687544E-7	TEST
Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999884674446	WITHOUT_CLASSIFICATION	1.1532555357085165E-8	TEST
Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999942956851	WITHOUT_CLASSIFICATION	5.704314966890127E-9	TEST
Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999948944688063	WITHOUT_CLASSIFICATION	5.105531193649817E-6	TEST
Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.999999947644131	WITHOUT_CLASSIFICATION	5.23558688757809E-8	TEST
Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999983699598527	WITHOUT_CLASSIFICATION	1.6300401473380279E-6	TEST
depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999860106139451	WITHOUT_CLASSIFICATION	1.3989386055028771E-5	TEST
initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999998504181467	WITHOUT_CLASSIFICATION	1.4958185334122727E-7	TEST
Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999997980606004	WITHOUT_CLASSIFICATION	2.0193939952306107E-7	TEST
Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999987498912261	WITHOUT_CLASSIFICATION	1.2501087739379576E-6	TEST
we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.999999978220283	WITHOUT_CLASSIFICATION	2.1779716987562145E-8	TEST
determine spacing	WITHOUT_CLASSIFICATION	0.9999993773814068	WITHOUT_CLASSIFICATION	6.226185932606047E-7	TEST
should alter global state	WITHOUT_CLASSIFICATION	0.999988764446714	WITHOUT_CLASSIFICATION	1.123555328594224E-5	TEST
For JSR 223 support: see http:scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999973584508461	WITHOUT_CLASSIFICATION	2.641549153935594E-6	TEST
use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999985184303145	WITHOUT_CLASSIFICATION	1.4815696855378104E-6	TEST
this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999920531070878	WITHOUT_CLASSIFICATION	7.946892912203706E-6	TEST
new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999990656898421	WITHOUT_CLASSIFICATION	9.343101580057575E-7	TEST
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9998825616759466	WITHOUT_CLASSIFICATION	1.1743832405340936E-4	TEST
Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999998492453466	WITHOUT_CLASSIFICATION	1.5075465335960248E-7	TEST
default: don't retain	WITHOUT_CLASSIFICATION	0.9999990199833115	WITHOUT_CLASSIFICATION	9.800166885332787E-7	TEST
ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999994656027756	WITHOUT_CLASSIFICATION	5.343972243136036E-7	TEST
Default objects	WITHOUT_CLASSIFICATION	0.9999988996003586	WITHOUT_CLASSIFICATION	1.100399641400352E-6	TEST
record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999918950885798	WITHOUT_CLASSIFICATION	8.104911420142348E-6	TEST
former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999990988328722	WITHOUT_CLASSIFICATION	9.011671278286902E-7	TEST
Java support	WITHOUT_CLASSIFICATION	0.9999916316758598	WITHOUT_CLASSIFICATION	8.368324140175623E-6	TEST
Parser stats	WITHOUT_CLASSIFICATION	0.9999915987380774	WITHOUT_CLASSIFICATION	8.401261922584937E-6	TEST
Compilation	WITHOUT_CLASSIFICATION	0.9999422666242751	WITHOUT_CLASSIFICATION	5.773337572494181E-5	TEST
can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999990381415937	WITHOUT_CLASSIFICATION	9.618584062846545E-7	TEST
can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999992899078329	WITHOUT_CLASSIFICATION	7.100921670427095E-7	TEST
mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999995041056499	WITHOUT_CLASSIFICATION	4.958943501740183E-7	TEST
mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999993329653696	WITHOUT_CLASSIFICATION	6.67034630483181E-7	TEST
A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999995658063583	WITHOUT_CLASSIFICATION	4.3419364168238607E-7	TEST
A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999994052634471	WITHOUT_CLASSIFICATION	5.947365528714914E-7	TEST
initial spaces spaces before "at"	WITHOUT_CLASSIFICATION	0.9999996491588024	WITHOUT_CLASSIFICATION	3.50841197644592E-7	TEST
event name filename line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999992235103792	WITHOUT_CLASSIFICATION	7.764896208225068E-7	TEST
The method is intentionally not public, since it typically should not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999997313482363	WITHOUT_CLASSIFICATION	2.686517636506264E-7	TEST
Note: this field and the following static initializer must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999999207432311	WITHOUT_CLASSIFICATION	7.925676899790733E-8	TEST
Contains a list of all blocks (as Procs) that should be called when the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999992633789843	WITHOUT_CLASSIFICATION	7.366210157064701E-7	TEST
quoted-printable	WITHOUT_CLASSIFICATION	0.9999984065157266	WITHOUT_CLASSIFICATION	1.5934842735051741E-6	TEST
default options	WITHOUT_CLASSIFICATION	0.9999997005063529	WITHOUT_CLASSIFICATION	2.994936470715066E-7	TEST
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9996517072372599	WITHOUT_CLASSIFICATION	3.4829276274013905E-4	TEST
iso-2022-jp	WITHOUT_CLASSIFICATION	0.9996517072372599	WITHOUT_CLASSIFICATION	3.4829276274013905E-4	TEST
Shift_JIS	WITHOUT_CLASSIFICATION	0.9999403658894082	WITHOUT_CLASSIFICATION	5.963411059175061E-5	TEST
Shift_JIS	WITHOUT_CLASSIFICATION	0.9999403658894082	WITHOUT_CLASSIFICATION	5.963411059175061E-5	TEST
EUC-JP	WITHOUT_CLASSIFICATION	0.9997818173081213	WITHOUT_CLASSIFICATION	2.1818269187872546E-4	TEST
EUC-JP	WITHOUT_CLASSIFICATION	0.9997818173081213	WITHOUT_CLASSIFICATION	2.1818269187872546E-4	TEST
UTF-8	WITHOUT_CLASSIFICATION	0.9997672330565341	WITHOUT_CLASSIFICATION	2.3276694346579608E-4	TEST
UTF-8	WITHOUT_CLASSIFICATION	0.9997672330565341	WITHOUT_CLASSIFICATION	2.3276694346579608E-4	TEST
long name option	WITHOUT_CLASSIFICATION	0.9999698926245355	WITHOUT_CLASSIFICATION	3.0107375464515363E-5	TEST
conversion	WITHOUT_CLASSIFICATION	0.9999847660912976	WITHOUT_CLASSIFICATION	1.5233908702439231E-5	TEST
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9999979460460962	WITHOUT_CLASSIFICATION	2.0539539038101103E-6	TEST
string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999663676714445	WITHOUT_CLASSIFICATION	3.3632328555508686E-5	TEST
string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999988214941298	WITHOUT_CLASSIFICATION	1.178505870248273E-6	TEST
string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.999986889249188	WITHOUT_CLASSIFICATION	1.3110750812031831E-5	TEST
ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9994496709284539	WITHOUT_CLASSIFICATION	5.503290715460795E-4	TEST
rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999954033108874	WITHOUT_CLASSIFICATION	4.596689112665232E-6	TEST
rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999886409505938	WITHOUT_CLASSIFICATION	1.1359049406255055E-5	TEST
rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.999885030377159	WITHOUT_CLASSIFICATION	1.1496962284102297E-4	TEST
Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999933537001413	WITHOUT_CLASSIFICATION	6.646299858661301E-6	TEST
String construction routines by NOT byte[] buffer and NOT making the target String shared	WITHOUT_CLASSIFICATION	0.9999999029628233	WITHOUT_CLASSIFICATION	9.703717679924774E-8	TEST
rb_str_subseq	WITHOUT_CLASSIFICATION	0.9999385635823154	WITHOUT_CLASSIFICATION	6.143641768468422E-5	TEST
no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999970373380815	WITHOUT_CLASSIFICATION	2.962661918391126E-6	TEST
if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999993130229442	WITHOUT_CLASSIFICATION	6.869770556870225E-7	TEST
rb_str_cmp_m	WITHOUT_CLASSIFICATION	0.9997850613793534	WITHOUT_CLASSIFICATION	2.1493862064659623E-4	TEST
we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999898620694	WITHOUT_CLASSIFICATION	1.0137930519872371E-8	TEST
rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999953721009058	WITHOUT_CLASSIFICATION	4.62789909412969E-6	TEST
encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999239045396369	WITHOUT_CLASSIFICATION	7.609546036311328E-5	TEST
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999946547813716	WITHOUT_CLASSIFICATION	5.345218628426317E-6	TEST
must not reallocate	WITHOUT_CLASSIFICATION	0.9999987262909377	WITHOUT_CLASSIFICATION	1.2737090622983363E-6	TEST
Illegal combination	WITHOUT_CLASSIFICATION	0.9999896684421412	WITHOUT_CLASSIFICATION	1.0331557858805337E-5	TEST
use 1.8 impl	WITHOUT_CLASSIFICATION	0.999994454938909	WITHOUT_CLASSIFICATION	5.545061090930806E-6	TEST
RubyString aka rb_string_value	WITHOUT_CLASSIFICATION	0.9999985217810254	WITHOUT_CLASSIFICATION	1.4782189744901704E-6	TEST
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.999996437179581	WITHOUT_CLASSIFICATION	3.5628204191089196E-6	TEST
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999922514890291	WITHOUT_CLASSIFICATION	7.748510970901856E-6	TEST
len + margin	WITHOUT_CLASSIFICATION	0.9999918409323936	WITHOUT_CLASSIFICATION	8.159067606437612E-6	TEST
block given	WITHOUT_CLASSIFICATION	0.9999905659102796	WITHOUT_CLASSIFICATION	9.43408972047066E-6	TEST
block given	WITHOUT_CLASSIFICATION	0.9999905659102796	WITHOUT_CLASSIFICATION	9.43408972047066E-6	TEST
copy pre-match substr	WITHOUT_CLASSIFICATION	0.9999984332052532	WITHOUT_CLASSIFICATION	1.5667947467316622E-6	TEST
string given	WITHOUT_CLASSIFICATION	0.9999635776507676	WITHOUT_CLASSIFICATION	3.642234923229222E-5	TEST
hash given	WITHOUT_CLASSIFICATION	0.9999900906593013	WITHOUT_CLASSIFICATION	9.909340698685882E-6	TEST
This represents left most digit in a set of incremented values? Therefore leftmost numeric must be '1' and not '0' 999 -> 1000, not 999 -> 0000. whereas chars should be zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999992244646722	WITHOUT_CLASSIFICATION	7.755353279278151E-7	TEST
substring longer than string	WITHOUT_CLASSIFICATION	0.9999928397052944	WITHOUT_CLASSIFICATION	7.160294705664671E-6	TEST
rb_str_substr	WITHOUT_CLASSIFICATION	0.9998374821272513	WITHOUT_CLASSIFICATION	1.6251787274860918E-4	TEST
nothing	WITHOUT_CLASSIFICATION	0.9999249535664169	WITHOUT_CLASSIFICATION	7.504643358312323E-5	TEST
nothing	WITHOUT_CLASSIFICATION	0.9999249535664169	WITHOUT_CLASSIFICATION	7.504643358312323E-5	TEST
rb_str_splice	WITHOUT_CLASSIFICATION	0.999982187469345	WITHOUT_CLASSIFICATION	1.7812530655065217E-5	TEST
TODO: keep cr TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9984809120108924	WITHOUT_CLASSIFICATION	0.0015190879891075746	TEST
keep cr ?	WITHOUT_CLASSIFICATION	0.9999902000389954	WITHOUT_CLASSIFICATION	9.79996100466408E-6	TEST
keep cr ?	WITHOUT_CLASSIFICATION	0.9999902000389954	WITHOUT_CLASSIFICATION	9.79996100466408E-6	TEST
wrapped to \0...\0. search next valid char.	WITHOUT_CLASSIFICATION	0.9999989771767107	WITHOUT_CLASSIFICATION	1.0228232891911602E-6	TEST
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9999306057877944	WITHOUT_CLASSIFICATION	6.939421220560696E-5	TEST
only this case affects backrefs	WITHOUT_CLASSIFICATION	0.9999306057877944	WITHOUT_CLASSIFICATION	6.939421220560696E-5	TEST
modified	WITHOUT_CLASSIFICATION	0.9999761261182882	WITHOUT_CLASSIFICATION	2.3873881711815508E-5	TEST
modified	WITHOUT_CLASSIFICATION	0.9999761261182882	WITHOUT_CLASSIFICATION	2.3873881711815508E-5	TEST
1.8	WITHOUT_CLASSIFICATION	0.9992356863098869	WITHOUT_CLASSIFICATION	7.643136901131655E-4	TEST
1.8	WITHOUT_CLASSIFICATION	0.9992356863098869	WITHOUT_CLASSIFICATION	7.643136901131655E-4	TEST
QTRUE	WITHOUT_CLASSIFICATION	0.9996849519960818	WITHOUT_CLASSIFICATION	3.1504800391820567E-4	TEST
retrieve last replacer	WITHOUT_CLASSIFICATION	0.9999973632505307	WITHOUT_CLASSIFICATION	2.6367494692645376E-6	TEST
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.999998028942961	WITHOUT_CLASSIFICATION	1.971057039063598E-6	TEST
long size bits in byte	WITHOUT_CLASSIFICATION	0.9999951973939332	WITHOUT_CLASSIFICATION	4.802606066802661E-6	TEST
from encoding, special-casing ASCII to ASCII	WITHOUT_CLASSIFICATION	0.9999999773043453	WITHOUT_CLASSIFICATION	2.269565476209414E-8	TEST
to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999999141575173	WITHOUT_CLASSIFICATION	8.584248266787375E-8	TEST
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999953141668034	WITHOUT_CLASSIFICATION	4.685833196487413E-6	TEST
decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999994233235041	WITHOUT_CLASSIFICATION	5.766764959752899E-7	TEST
create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999953141668034	WITHOUT_CLASSIFICATION	4.685833196487413E-6	TEST
Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999393159798524	WITHOUT_CLASSIFICATION	6.068402014752905E-5	TEST
no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999979605857209	WITHOUT_CLASSIFICATION	2.0394142790687652E-6	TEST
interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999989837663728	WITHOUT_CLASSIFICATION	1.016233627210216E-6	TEST
File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999968605960674	WITHOUT_CLASSIFICATION	3.1394039326351348E-6	TEST
rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999986805719605	WITHOUT_CLASSIFICATION	1.3194280395987701E-6	TEST
We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999995698459527	WITHOUT_CLASSIFICATION	4.301540472295072E-7	TEST
exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999423011341858	WITHOUT_CLASSIFICATION	5.769886581415924E-5	TEST
Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999752621911121	WITHOUT_CLASSIFICATION	2.4737808887958924E-5	TEST
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999616987439	WITHOUT_CLASSIFICATION	3.83012560257007E-8	TEST
Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999999788842364	WITHOUT_CLASSIFICATION	2.1115763643429797E-8	TEST
Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999995310061225	WITHOUT_CLASSIFICATION	4.68993877515391E-7	TEST
adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999529801310004	WITHOUT_CLASSIFICATION	4.7019868999587904E-5	TEST
file not given	WITHOUT_CLASSIFICATION	0.9999933550294986	WITHOUT_CLASSIFICATION	6.6449705014277935E-6	TEST
string to eval	WITHOUT_CLASSIFICATION	0.9999979494995979	WITHOUT_CLASSIFICATION	2.0505004020228E-6	TEST
binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999942240064947	WITHOUT_CLASSIFICATION	5.775993505184465E-6	TEST
?g | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999382346826	WITHOUT_CLASSIFICATION	6.176531745994758E-8	TEST
bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999825818740826	WITHOUT_CLASSIFICATION	1.741812591739487E-5	TEST
Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999982748463477	WITHOUT_CLASSIFICATION	1.725153652260398E-6	TEST
Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999993110931211	WITHOUT_CLASSIFICATION	6.889068788403706E-7	TEST
No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999588969946811	WITHOUT_CLASSIFICATION	4.1103005318970256E-5	TEST
without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999962525981292	WITHOUT_CLASSIFICATION	3.7474018707799053E-6	TEST
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999981234795979	WITHOUT_CLASSIFICATION	1.876520402110708E-6	TEST
MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999994536172084	WITHOUT_CLASSIFICATION	5.463827914986337E-7	TEST
MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999989133903464	WITHOUT_CLASSIFICATION	1.0866096536659185E-6	TEST
?A | Time | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999989952945088	WITHOUT_CLASSIFICATION	1.0047054912751307E-6	TEST
?b | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999997213619856	WITHOUT_CLASSIFICATION	2.786380144651295E-7	TEST
?c | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.999999646418348	WITHOUT_CLASSIFICATION	3.5358165191780115E-7	TEST
?C | Time | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999988321060369	WITHOUT_CLASSIFICATION	1.1678939630283088E-6	TEST
?d | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999092782181	WITHOUT_CLASSIFICATION	9.072178188507006E-8	TEST
?e | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999995916989441	WITHOUT_CLASSIFICATION	4.083010558538091E-7	TEST
?f | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999996750097504	WITHOUT_CLASSIFICATION	3.2499024957937435E-7	TEST
?G | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999875976682	WITHOUT_CLASSIFICATION	1.2402331748859402E-8	TEST
?k | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999887753718	WITHOUT_CLASSIFICATION	1.1224628262759245E-8	TEST
?M | Time | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999981938921375	WITHOUT_CLASSIFICATION	1.8061078624690999E-6	TEST
?o | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999333929558	WITHOUT_CLASSIFICATION	6.660704415958937E-8	TEST
?O | boolean | True if file1 exists and is owned by the caller's real uid	WITHOUT_CLASSIFICATION	0.9999998785378009	WITHOUT_CLASSIFICATION	1.2146219899378777E-7	TEST
?p | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999997932732516	WITHOUT_CLASSIFICATION	2.0672674832207889E-7	TEST
?r | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.999999934626889	WITHOUT_CLASSIFICATION	6.537311109885415E-8	TEST
?s | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999999942681407	WITHOUT_CLASSIFICATION	5.731859351641387E-9	TEST
?S | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999998574009453	WITHOUT_CLASSIFICATION	1.4259905458818418E-7	TEST
?u | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999594386988	WITHOUT_CLASSIFICATION	4.0561301239905296E-8	TEST
?x | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999998506576646	WITHOUT_CLASSIFICATION	1.493423353474617E-7	TEST
?X | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999998697779571	WITHOUT_CLASSIFICATION	1.3022204287827823E-7	TEST
?z | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999997888591875	WITHOUT_CLASSIFICATION	2.111408125089173E-7	TEST
?= | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999997965199073	WITHOUT_CLASSIFICATION	2.0348009266787466E-7	TEST
?< | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999998067725641	WITHOUT_CLASSIFICATION	1.9322743590950489E-7	TEST
?> | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999989570885861	WITHOUT_CLASSIFICATION	1.0429114138172633E-6	TEST
?- | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999778060796	WITHOUT_CLASSIFICATION	2.2193920321791722E-8	TEST
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999996582496912	WITHOUT_CLASSIFICATION	3.417503088065355E-7	TEST
Error info is per-thread	WITHOUT_CLASSIFICATION	0.999999344648743	WITHOUT_CLASSIFICATION	6.553512570185383E-7	TEST
init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999994934670035	WITHOUT_CLASSIFICATION	5.065329966280807E-7	TEST
if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.999999473779081	WITHOUT_CLASSIFICATION	5.262209188619957E-7	TEST
If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999340085731667	WITHOUT_CLASSIFICATION	6.599142683322312E-5	TEST
new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.999999672507635	WITHOUT_CLASSIFICATION	3.274923650473438E-7	TEST
set to default thread group	WITHOUT_CLASSIFICATION	0.9999996514459754	WITHOUT_CLASSIFICATION	3.485540245419711E-7	TEST
set to default thread group	WITHOUT_CLASSIFICATION	0.9999996514459754	WITHOUT_CLASSIFICATION	3.485540245419711E-7	TEST
JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999978090659232	WITHOUT_CLASSIFICATION	2.1909340767544366E-6	TEST
JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999788795556286	WITHOUT_CLASSIFICATION	2.1120444371445495E-5	TEST
for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999998968949512	WITHOUT_CLASSIFICATION	1.0310504878760886E-7	TEST
JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999999329353906	WITHOUT_CLASSIFICATION	6.706460941246063E-8	TEST
MRI behavior: value given in seconds; converted to Float; less than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999999409526351	WITHOUT_CLASSIFICATION	5.9047364904404556E-8	TEST
If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999981978849144	WITHOUT_CLASSIFICATION	1.802115085586202E-6	TEST
We need this loop in order to be able to "unblock" the join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999938920423472	WITHOUT_CLASSIFICATION	6.107957652782609E-6	TEST
attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999999628039902	WITHOUT_CLASSIFICATION	3.719600984174255E-8	TEST
not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999973918702088	WITHOUT_CLASSIFICATION	2.608129791314695E-6	TEST
If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999995223215695	WITHOUT_CLASSIFICATION	4.776784304816122E-7	TEST
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999515062606	WITHOUT_CLASSIFICATION	4.8493739364590936E-8	TEST
check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999515062606	WITHOUT_CLASSIFICATION	4.8493739364590936E-8	TEST
ignore; I don't like doing it, but it seems like we really just need to make all channels non-blocking by default and use select when implementing blocking ops, so if this remains set non-blocking, perhaps it's not such a big deal...	WITHOUT_CLASSIFICATION	0.9999995221148715	WITHOUT_CLASSIFICATION	4.778851284745055E-7	TEST
can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999998948269474	WITHOUT_CLASSIFICATION	1.0517305259715839E-7	TEST
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999947214091448	WITHOUT_CLASSIFICATION	5.278590855132989E-6	TEST
Create Constants class	WITHOUT_CLASSIFICATION	0.9999957776514806	WITHOUT_CLASSIFICATION	4.22234851931834E-6	TEST
Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999877790629784	WITHOUT_CLASSIFICATION	1.222093702157202E-5	TEST
Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999546963392	WITHOUT_CLASSIFICATION	4.530366079784966E-8	TEST
Create constants for flock	WITHOUT_CLASSIFICATION	0.999993927100204	WITHOUT_CLASSIFICATION	6.07289979603041E-6	TEST
File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999993586372463	WITHOUT_CLASSIFICATION	6.413627536881595E-7	TEST
Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.999999983111714	WITHOUT_CLASSIFICATION	1.6888286048880657E-8	TEST
null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999989348354151	WITHOUT_CLASSIFICATION	1.0651645848445357E-6	TEST
Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999994898237555	WITHOUT_CLASSIFICATION	5.10176244526096E-7	TEST
Special case for handling ACCMODE, since constantine will generate an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999984162637544	WITHOUT_CLASSIFICATION	1.5837362456440083E-6	TEST
Return false here	WITHOUT_CLASSIFICATION	0.9999997628963954	WITHOUT_CLASSIFICATION	2.371036045664793E-7	TEST
Return false here	WITHOUT_CLASSIFICATION	0.9999997628963954	WITHOUT_CLASSIFICATION	2.371036045664793E-7	TEST
We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999998738458118	WITHOUT_CLASSIFICATION	1.2615418821683363E-7	TEST
Should we do anything?	WITHOUT_CLASSIFICATION	0.999995734109327	WITHOUT_CLASSIFICATION	4.265890673056147E-6	TEST
File class methods	WITHOUT_CLASSIFICATION	0.9999991415723747	WITHOUT_CLASSIFICATION	8.58427625356503E-7	TEST
MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999995066289451	WITHOUT_CLASSIFICATION	4.933710549952026E-7	TEST
strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999992477574308	WITHOUT_CLASSIFICATION	7.522425691732789E-7	TEST
C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999994295271669	WITHOUT_CLASSIFICATION	5.704728331564175E-7	TEST
-1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999938125854094	WITHOUT_CLASSIFICATION	6.1874145905497464E-6	TEST
trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999896041645597	WITHOUT_CLASSIFICATION	1.0395835440231666E-5	TEST
Dot is not at beginning and not at end of filename.	WITHOUT_CLASSIFICATION	0.9999895369959505	WITHOUT_CLASSIFICATION	1.0463004049505637E-5	TEST
Handle ~user paths	WITHOUT_CLASSIFICATION	0.9999998059398294	WITHOUT_CLASSIFICATION	1.9406017058949161E-7	TEST
compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999947214091448	WITHOUT_CLASSIFICATION	5.278590855132989E-6	TEST
Include additional path separator (so that dirname of "C:\file.txt" is "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999958821142205	WITHOUT_CLASSIFICATION	4.117885779452105E-6	TEST
FNFException can be thrown in both cases, when the file is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999991183548961	WITHOUT_CLASSIFICATION	8.8164510381934E-7	TEST
No directory delimeter. Rest of string is username	WITHOUT_CLASSIFICATION	0.9999501543721918	WITHOUT_CLASSIFICATION	4.984562780818223E-5	TEST
If there's a second argument, it's the path to which the first argument is relative.	WITHOUT_CLASSIFICATION	0.9999999703046715	WITHOUT_CLASSIFICATION	2.9695328630999236E-8	TEST
Handle ~user paths.	WITHOUT_CLASSIFICATION	0.999999736521879	WITHOUT_CLASSIFICATION	2.6347812101847637E-7	TEST
If there's no second argument, simply use the working directory of the runtime.	WITHOUT_CLASSIFICATION	0.9999999715676102	WITHOUT_CLASSIFICATION	2.8432389754267084E-8	TEST
Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999956657294878	WITHOUT_CLASSIFICATION	4.334270512156353E-6	TEST
Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999995567515121	WITHOUT_CLASSIFICATION	4.4324848794870254E-7	TEST
Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999994004277363	WITHOUT_CLASSIFICATION	5.995722636906166E-7	TEST
'~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999998561848978	WITHOUT_CLASSIFICATION	1.4381510206652146E-7	TEST
'~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999991785896962	WITHOUT_CLASSIFICATION	8.214103038109996E-7	TEST
Prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999918791277294	WITHOUT_CLASSIFICATION	8.12087227059547E-6	TEST
If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999931756097363	WITHOUT_CLASSIFICATION	6.824390263602397E-6	TEST
no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999990632090336	WITHOUT_CLASSIFICATION	9.367909663564016E-7	TEST
we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999603714825223	WITHOUT_CLASSIFICATION	3.962851747772759E-5	TEST
we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999998513875066	WITHOUT_CLASSIFICATION	1.4861249339764975E-7	TEST
do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999946229881713	WITHOUT_CLASSIFICATION	5.3770118287110076E-6	TEST
rb: check_modifiable	WITHOUT_CLASSIFICATION	0.9999980630724201	WITHOUT_CLASSIFICATION	1.936927579949491E-6	TEST
rb: readable	WITHOUT_CLASSIFICATION	0.9999573738540338	WITHOUT_CLASSIFICATION	4.262614596625327E-5	TEST
rename is successful	WITHOUT_CLASSIFICATION	0.9999953939171726	WITHOUT_CLASSIFICATION	4.606082827331743E-6	TEST
rename via Java API call wasn't successful, let's try some tricks, similar to MRI	WITHOUT_CLASSIFICATION	0.9999999895341651	WITHOUT_CLASSIFICATION	1.0465834948204838E-8	TEST
try to rename one more time	WITHOUT_CLASSIFICATION	0.9999797106337109	WITHOUT_CLASSIFICATION	2.0289366289134476E-5	TEST
Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999997454223342	WITHOUT_CLASSIFICATION	2.545776658418842E-7	TEST
Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999864872980548	WITHOUT_CLASSIFICATION	1.3512701945209295E-5	TEST
RubyContinuation	WITHOUT_CLASSIFICATION	0.9999706266365777	WITHOUT_CLASSIFICATION	2.937336342234177E-5	TEST
Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq) it doesn't initialize ifNone field	WITHOUT_CLASSIFICATION	0.9999999244719927	WITHOUT_CLASSIFICATION	7.55280072363357E-8	TEST
16 ?	WITHOUT_CLASSIFICATION	0.9999175695239122	WITHOUT_CLASSIFICATION	8.243047608781405E-5	TEST
generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999986388915928	WITHOUT_CLASSIFICATION	1.3611084071693315E-6	TEST
size + 1;	WITHOUT_CLASSIFICATION	0.9999937080766015	WITHOUT_CLASSIFICATION	6.291923398480127E-6	TEST
suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999999353627514	WITHOUT_CLASSIFICATION	6.46372485561351E-8	TEST
------------------------------	WITHOUT_CLASSIFICATION	0.9987363113275517	WITHOUT_CLASSIFICATION	0.001263688672448385	TEST
------------------------------	WITHOUT_CLASSIFICATION	0.9987363113275517	WITHOUT_CLASSIFICATION	0.001263688672448385	TEST
put implementation	WITHOUT_CLASSIFICATION	0.9999995744843793	WITHOUT_CLASSIFICATION	4.2551562072145863E-7	TEST
get implementation	WITHOUT_CLASSIFICATION	0.999999509579916	WITHOUT_CLASSIFICATION	4.904200839743274E-7	TEST
specialized for value	WITHOUT_CLASSIFICATION	0.9999997392127451	WITHOUT_CLASSIFICATION	2.607872549082346E-7	TEST
delete implementation	WITHOUT_CLASSIFICATION	0.999999691861514	WITHOUT_CLASSIFICATION	3.0813848590474047E-7	TEST
n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999897033542315	WITHOUT_CLASSIFICATION	1.0296645768332786E-5	TEST
============================ End of hash internals ============================	WITHOUT_CLASSIFICATION	0.9999991154320614	WITHOUT_CLASSIFICATION	8.845679386321258E-7	TEST
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999991522820569	WITHOUT_CLASSIFICATION	8.477179430034336E-7	TEST
update the hash value	WITHOUT_CLASSIFICATION	0.9999925231097094	WITHOUT_CLASSIFICATION	7.476890290522087E-6	TEST
other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999763554386979	WITHOUT_CLASSIFICATION	2.3644561302092312E-5	TEST
rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999992534596862	WITHOUT_CLASSIFICATION	7.46540313832044E-7	TEST
Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999993343332253	WITHOUT_CLASSIFICATION	6.656667747869074E-7	TEST
remain where we are	WITHOUT_CLASSIFICATION	0.9999762010806568	WITHOUT_CLASSIFICATION	2.3798919343157247E-5	TEST
We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999798469568479	WITHOUT_CLASSIFICATION	2.0153043152107177E-5	TEST
default: don't retain	WITHOUT_CLASSIFICATION	0.9999990199833115	WITHOUT_CLASSIFICATION	9.800166885332787E-7	TEST
once hasNext has been called, we commit to next() returning the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999196659937	WITHOUT_CLASSIFICATION	8.033400639930972E-8	TEST
Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999881154372458	WITHOUT_CLASSIFICATION	1.1884562754226873E-5	TEST
We do both writable and writable_real through the same method because in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999860733021	WITHOUT_CLASSIFICATION	1.3926697817450855E-8	TEST
first try as directory	WITHOUT_CLASSIFICATION	0.9999996632030339	WITHOUT_CLASSIFICATION	3.3679696606343684E-7	TEST
next as regular file	WITHOUT_CLASSIFICATION	0.9999998784400421	WITHOUT_CLASSIFICATION	1.215599577630932E-7	TEST
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9999961211312614	WITHOUT_CLASSIFICATION	3.878868738629993E-6	TEST
NIO-based	WITHOUT_CLASSIFICATION	0.9999903938261326	WITHOUT_CLASSIFICATION	9.606173867344756E-6	TEST
NIO-based	WITHOUT_CLASSIFICATION	0.9999903938261326	WITHOUT_CLASSIFICATION	9.606173867344756E-6	TEST
Stream-based	WITHOUT_CLASSIFICATION	0.9999877475392255	WITHOUT_CLASSIFICATION	1.225246077451017E-5	TEST
special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999989671711356	WITHOUT_CLASSIFICATION	1.032828864450598E-6	TEST
We use FILE versus IO to match T_FILE in MRI.	WITHOUT_CLASSIFICATION	0.999999832508525	WITHOUT_CLASSIFICATION	1.6749147501203414E-7	TEST
Constants for seek	WITHOUT_CLASSIFICATION	0.9999941136991809	WITHOUT_CLASSIFICATION	5.886300819034105E-6	TEST
confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999909464758817	WITHOUT_CLASSIFICATION	9.053524118255811E-6	TEST
check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999999907758368	WITHOUT_CLASSIFICATION	9.224163307980256E-9	TEST
dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999710834254	WITHOUT_CLASSIFICATION	2.8916574560195318E-8	TEST
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999989985211275	WITHOUT_CLASSIFICATION	1.0014788724629053E-6	TEST
re-register the descriptor	WITHOUT_CLASSIFICATION	0.999998687044307	WITHOUT_CLASSIFICATION	1.3129556929018982E-6	TEST
since we're not actually duping the incoming channel into our handler, we need to copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999997568718966	WITHOUT_CLASSIFICATION	2.4312810345696505E-7	TEST
re-register	WITHOUT_CLASSIFICATION	0.9999467074859434	WITHOUT_CLASSIFICATION	5.3292514056486395E-5	TEST
A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999989770487081	WITHOUT_CLASSIFICATION	1.022951291863859E-6	TEST
Ensure that separator is valid otherwise give it the default paragraph separator.	WITHOUT_CLASSIFICATION	0.9999956391155331	WITHOUT_CLASSIFICATION	4.360884466825534E-6	TEST
loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999991862088539	WITHOUT_CLASSIFICATION	8.137911460177747E-7	TEST
if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999961372861066	WITHOUT_CLASSIFICATION	3.862713893408394E-6	TEST
this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999943815424143	WITHOUT_CLASSIFICATION	5.618457585769293E-6	TEST
IO class methods.	WITHOUT_CLASSIFICATION	0.9999959801015255	WITHOUT_CLASSIFICATION	4.019898474579898E-6	TEST
use original modes	WITHOUT_CLASSIFICATION	0.9999978487998104	WITHOUT_CLASSIFICATION	2.151200189723675E-6	TEST
See if we already have this descriptor open. If so then we can mostly share the handler (keep open file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999197632714	WITHOUT_CLASSIFICATION	8.023672857002391E-8	TEST
redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999939706847621	WITHOUT_CLASSIFICATION	6.029315237839195E-6	TEST
MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999997626466376	WITHOUT_CLASSIFICATION	2.3735336244433872E-7	TEST
-1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999981639404675	WITHOUT_CLASSIFICATION	1.836059532459866E-6	TEST
isRetained=true	WITHOUT_CLASSIFICATION	0.9999963344305148	WITHOUT_CLASSIFICATION	3.6655694852590763E-6	TEST
This appears to be some windows-only mode. On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999960743093654	WITHOUT_CLASSIFICATION	3.92569063457814E-6	TEST
if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999952987069589	WITHOUT_CLASSIFICATION	4.701293041142321E-6	TEST
Throw bad file descriptor is we can not read on supplied descriptor.	WITHOUT_CLASSIFICATION	0.9999998827203633	WITHOUT_CLASSIFICATION	1.1727963664716301E-7	TEST
Everything written	WITHOUT_CLASSIFICATION	0.9999515500476291	WITHOUT_CLASSIFICATION	4.844995237090604E-5	TEST
return len - n;	WITHOUT_CLASSIFICATION	0.9999983827278507	WITHOUT_CLASSIFICATION	1.6172721493716042E-6	TEST
Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999789395489652	WITHOUT_CLASSIFICATION	2.1060451034793808E-5	TEST
Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999959980770076	WITHOUT_CLASSIFICATION	4.001922992372829E-6	TEST
Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999999762665855	WITHOUT_CLASSIFICATION	2.3733414424523114E-8	TEST
Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999954086501459	WITHOUT_CLASSIFICATION	4.5913498540409365E-6	TEST
cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999970336485916	WITHOUT_CLASSIFICATION	2.9663514083121507E-6	TEST
hmmmm	WITHOUT_CLASSIFICATION	0.9991935203339308	WITHOUT_CLASSIFICATION	8.064796660690554E-4	TEST
I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999477723252861	WITHOUT_CLASSIFICATION	5.222767471388543E-5	TEST
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec. And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999998171613377	WITHOUT_CLASSIFICATION	1.828386624219388E-7	TEST
Do nothing. FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999992762186599	WITHOUT_CLASSIFICATION	7.237813400745758E-7	TEST
Length to read	WITHOUT_CLASSIFICATION	0.9999973446979159	WITHOUT_CLASSIFICATION	2.6553020841519714E-6	TEST
String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.999999038976631	WITHOUT_CLASSIFICATION	9.610233689213157E-7	TEST
cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999998399385225	WITHOUT_CLASSIFICATION	1.6006147758454512E-7	TEST
select until read is ready	WITHOUT_CLASSIFICATION	0.9999990965794707	WITHOUT_CLASSIFICATION	9.034205292146405E-7	TEST
ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999992174795943	WITHOUT_CLASSIFICATION	7.82520405680011E-7	TEST
buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999976695012015	WITHOUT_CLASSIFICATION	2.330498798460052E-6	TEST
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999984492198123	WITHOUT_CLASSIFICATION	1.5507801877019757E-5	TEST
rb: writable	WITHOUT_CLASSIFICATION	0.9999766687269601	WITHOUT_CLASSIFICATION	2.3331273039846318E-5	TEST
READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999984492198123	WITHOUT_CLASSIFICATION	1.5507801877019757E-5	TEST
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999986403884921	WITHOUT_CLASSIFICATION	1.3596115079320829E-6	TEST
TODO: read into buffer using all the fread logic int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9999990206965206	WITHOUT_CLASSIFICATION	9.79303479340182E-7	TEST
truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999991076113717	WITHOUT_CLASSIFICATION	8.923886283484911E-7	TEST
TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9982430585345724	WITHOUT_CLASSIFICATION	0.0017569414654276681	TEST
class methods for IO	WITHOUT_CLASSIFICATION	0.9999990947909215	WITHOUT_CLASSIFICATION	9.052090785498166E-7	TEST
save blocking state	WITHOUT_CLASSIFICATION	0.9999982440584929	WITHOUT_CLASSIFICATION	1.7559415070498086E-6	TEST
write	WITHOUT_CLASSIFICATION	0.9999569756176887	WITHOUT_CLASSIFICATION	4.302438231127382E-5	TEST
Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.998750865652607	WITHOUT_CLASSIFICATION	0.001249134347393001	TEST
make all sockets blocking as configured again close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999993535461469	WITHOUT_CLASSIFICATION	6.464538530027081E-7	TEST
FIXME: process options	WITHOUT_CLASSIFICATION	0.9999861715196191	WITHOUT_CLASSIFICATION	1.3828480380844563E-5	TEST
Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999789477265285	WITHOUT_CLASSIFICATION	2.1052273471500962E-5	TEST
NIO based pipe	WITHOUT_CLASSIFICATION	0.999991017277625	WITHOUT_CLASSIFICATION	8.98272237512279E-6	TEST
not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999979864973408	WITHOUT_CLASSIFICATION	2.013502659171277E-6	TEST
raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999996293487439	WITHOUT_CLASSIFICATION	3.706512560561609E-7	TEST
may need to handle ENC_CODERANGE_BROKEN	WITHOUT_CLASSIFICATION	0.9999924343841186	WITHOUT_CLASSIFICATION	7.565615881418682E-6	TEST
TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.999875187611007	WITHOUT_CLASSIFICATION	1.248123889930719E-4	TEST
If we know what method was being called, strip everything before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999353307292	WITHOUT_CLASSIFICATION	6.466927074406837E-8	TEST
The class of this object	WITHOUT_CLASSIFICATION	0.9999909489401928	WITHOUT_CLASSIFICATION	9.051059807153816E-6	TEST
zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999424541847568	WITHOUT_CLASSIFICATION	5.754581524330264E-5	TEST
objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999980608049239	WITHOUT_CLASSIFICATION	1.9391950761219117E-6	TEST
JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999996289324565	WITHOUT_CLASSIFICATION	3.7106754338135073E-7	TEST
rb_class_boot	WITHOUT_CLASSIFICATION	0.9999819703567645	WITHOUT_CLASSIFICATION	1.802964323539504E-5	TEST
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9999983146247459	WITHOUT_CLASSIFICATION	1.685375254211806E-6	TEST
1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999989935283632	WITHOUT_CLASSIFICATION	1.0064716368786364E-6	TEST
for interface impls	WITHOUT_CLASSIFICATION	0.999999865785487	WITHOUT_CLASSIFICATION	1.342145130292595E-7	TEST
We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999981347345027	WITHOUT_CLASSIFICATION	1.865265497274907E-6	TEST
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9999993762365074	WITHOUT_CLASSIFICATION	6.237634926471363E-7	TEST
can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999996488047472	WITHOUT_CLASSIFICATION	3.5119525278721707E-7	TEST
include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999999954870052	WITHOUT_CLASSIFICATION	4.5129947938489544E-8	TEST
Equivalent of Data_Get_Struct This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999999447283613	WITHOUT_CLASSIFICATION	5.527163859533542E-8	TEST
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998685040884608	WITHOUT_CLASSIFICATION	1.314959115391612E-4	TEST
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998692871224227	WITHOUT_CLASSIFICATION	1.3071287757720725E-4	TEST
INSTANCE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9998899145600625	WITHOUT_CLASSIFICATION	1.1008543993752029E-4	TEST
Struct methods	WITHOUT_CLASSIFICATION	0.9999984307047519	WITHOUT_CLASSIFICATION	1.5692952481766535E-6	TEST
runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999933741059	WITHOUT_CLASSIFICATION	6.625894066241469E-9	TEST
define access methods.	WITHOUT_CLASSIFICATION	0.9999989358064248	WITHOUT_CLASSIFICATION	1.064193575160465E-6	TEST
if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.999994009218004	WITHOUT_CLASSIFICATION	5.9907819960132465E-6	TEST
Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.999999854136437	WITHOUT_CLASSIFICATION	1.4586356302601875E-7	TEST
For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999928904495289	WITHOUT_CLASSIFICATION	7.109550471122269E-6	TEST
OBJ_INFECT	WITHOUT_CLASSIFICATION	0.9998109752818973	WITHOUT_CLASSIFICATION	1.8902471810264255E-4	TEST
These call assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999813942965	WITHOUT_CLASSIFICATION	1.8605703492659197E-8	TEST
Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.99999731486039	WITHOUT_CLASSIFICATION	2.685139609919776E-6	TEST
@param nv number of times to cycle or -1 to cycle indefinitely	WITHOUT_CLASSIFICATION	0.9999999337283255	WITHOUT_CLASSIFICATION	6.627167441097073E-8	TEST
Atomic ?	WITHOUT_CLASSIFICATION	0.9999947261103773	WITHOUT_CLASSIFICATION	5.273889622710367E-6	TEST
Atomic ?	WITHOUT_CLASSIFICATION	0.9999947261103773	WITHOUT_CLASSIFICATION	5.273889622710367E-6	TEST
MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999990207045584	WITHOUT_CLASSIFICATION	9.792954415535536E-7	TEST
superClass may be null.	WITHOUT_CLASSIFICATION	0.9999965138660082	WITHOUT_CLASSIFICATION	3.486133991828896E-6	TEST
Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999993550557337	WITHOUT_CLASSIFICATION	6.449442663882548E-7	TEST
ClassId is the name of the class/module sans where it is located. If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999936667768073	WITHOUT_CLASSIFICATION	6.333223192561706E-6	TEST
ClassProviders return Java class/module (in #defineOrGetClassUnder and #defineOrGetModuleUnder) when class/module is opened using colon syntax.	WITHOUT_CLASSIFICATION	0.9999999223159122	WITHOUT_CLASSIFICATION	7.768408780881282E-8	TEST
update superclass reference	WITHOUT_CLASSIFICATION	0.9999998683434932	WITHOUT_CLASSIFICATION	1.3165650684857066E-7	TEST
Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999989478711279	WITHOUT_CLASSIFICATION	1.0521288721670817E-6	TEST
MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999997768481262	WITHOUT_CLASSIFICATION	2.2315187380596043E-7	TEST
we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999989844995678	WITHOUT_CLASSIFICATION	1.0155004321781064E-6	TEST
module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999998339228748	WITHOUT_CLASSIFICATION	1.6607712516524632E-7	TEST
See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999966752646157	WITHOUT_CLASSIFICATION	3.3247353843515807E-6	TEST
We can safely reference methods here instead of doing getMethods() since if we are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999307981524	WITHOUT_CLASSIFICATION	6.920184758312321E-8	TEST
we grab serial number first; the worst that will happen is we cache a later update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999989845330098	WITHOUT_CLASSIFICATION	1.0154669901435553E-6	TEST
update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999942966975286	WITHOUT_CLASSIFICATION	5.703302471326821E-6	TEST
This method is intended only for defining new classes in Ruby code, so it uses the allocator of the specified superclass or default to the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999148245485	WITHOUT_CLASSIFICATION	8.517545152875465E-8	TEST
need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999997855464685	WITHOUT_CLASSIFICATION	2.144535314338748E-7	TEST
superClazz = null;	WITHOUT_CLASSIFICATION	0.9999989614545062	WITHOUT_CLASSIFICATION	1.038545493789063E-6	TEST
reopen a java class	WITHOUT_CLASSIFICATION	0.999998579803775	WITHOUT_CLASSIFICATION	1.4201962248945528E-6	TEST
This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999920740818232	WITHOUT_CLASSIFICATION	7.925918176796014E-6	TEST
reopen a java module	WITHOUT_CLASSIFICATION	0.9999968807705837	WITHOUT_CLASSIFICATION	3.119229416324134E-6	TEST
FIXME warning	WITHOUT_CLASSIFICATION	0.9999752175449194	WITHOUT_CLASSIFICATION	2.478245508053872E-5	TEST
FIXME warning	WITHOUT_CLASSIFICATION	0.9999752175449194	WITHOUT_CLASSIFICATION	2.478245508053872E-5	TEST
a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999999032197314	WITHOUT_CLASSIFICATION	9.678026859332453E-8	TEST
for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999999719555305	WITHOUT_CLASSIFICATION	2.804446953358141E-8	TEST
just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999337090421437	WITHOUT_CLASSIFICATION	6.629095785625059E-5	TEST
class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999803032891	WITHOUT_CLASSIFICATION	1.9696710928016567E-8	TEST
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999999772613605	WITHOUT_CLASSIFICATION	2.273863950150537E-7	TEST
MRI error message says Class, even though Module is ok	WITHOUT_CLASSIFICATION	0.9999973854179128	WITHOUT_CLASSIFICATION	2.6145820871861463E-6	TEST
scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999987983472829	WITHOUT_CLASSIFICATION	1.2016527170622662E-6	TEST
Module class methods	WITHOUT_CLASSIFICATION	0.9999989780077132	WITHOUT_CLASSIFICATION	1.0219922868392666E-6	TEST
Note: we change current frames visibility here because the methods which call this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999996550591642	WITHOUT_CLASSIFICATION	3.4494083573120286E-7	TEST
next in hierarchy is an included version of the module we're attempting, so we skip including it	WITHOUT_CLASSIFICATION	0.9999991618614086	WITHOUT_CLASSIFICATION	8.381385914270401E-7	TEST
if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.999999878518804	WITHOUT_CLASSIFICATION	1.2148119602198897E-7	TEST
build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999997176588523	WITHOUT_CLASSIFICATION	2.823411476206448E-7	TEST
if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999997148252018	WITHOUT_CLASSIFICATION	2.851747982690925E-7	TEST
if there's a non-null superclass, we're including into a normal class hierarchy; update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999850303012	WITHOUT_CLASSIFICATION	1.496969872714031E-8	TEST
CLASS VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9998657658226627	WITHOUT_CLASSIFICATION	1.3423417733730302E-4	TEST
CONSTANT RUBY METHODS	WITHOUT_CLASSIFICATION	0.9998493777236235	WITHOUT_CLASSIFICATION	1.5062227637653816E-4	TEST
Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999995368956699	WITHOUT_CLASSIFICATION	4.631043300039625E-7	TEST
CLASS VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9998272638658013	WITHOUT_CLASSIFICATION	1.7273613419863123E-4	TEST
Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999639649769122	WITHOUT_CLASSIFICATION	3.603502308782338E-5	TEST
not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999996895872232	WITHOUT_CLASSIFICATION	3.104127768217236E-7	TEST
Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999935918870043	WITHOUT_CLASSIFICATION	6.408112995566386E-6	TEST
if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999994063525636	WITHOUT_CLASSIFICATION	5.936474364916409E-7	TEST
Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999963863329243	WITHOUT_CLASSIFICATION	3.6136670757291686E-6	TEST
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999992554666635	WITHOUT_CLASSIFICATION	7.445333364935785E-7	TEST
removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999996211147721	WITHOUT_CLASSIFICATION	3.788852278701889E-7	TEST
we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999997412379537	WITHOUT_CLASSIFICATION	2.5876204629443514E-7	TEST
reopen	WITHOUT_CLASSIFICATION	0.9999456597248587	WITHOUT_CLASSIFICATION	5.434027514121153E-5	TEST
ARGF methods	WITHOUT_CLASSIFICATION	0.9999904281904335	WITHOUT_CLASSIFICATION	9.57180956654442E-6	TEST
data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999664229879	WITHOUT_CLASSIFICATION	3.3577012037092864E-8	TEST
one optional, one required args	WITHOUT_CLASSIFICATION	0.9999978825804539	WITHOUT_CLASSIFICATION	2.1174195461115053E-6	TEST
one optional and no required args	WITHOUT_CLASSIFICATION	0.9999996997225498	WITHOUT_CLASSIFICATION	3.0027745027785757E-7	TEST
try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999554795856	WITHOUT_CLASSIFICATION	4.452041427962782E-8	TEST
we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999995124058532	WITHOUT_CLASSIFICATION	4.875941467303823E-7	TEST
Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999999121552712	WITHOUT_CLASSIFICATION	8.784472886351838E-8	TEST
print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999998321071707	WITHOUT_CLASSIFICATION	1.6789282925967952E-7	TEST
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999960610656505	WITHOUT_CLASSIFICATION	3.938934349477561E-6	TEST
set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999999519949715	WITHOUT_CLASSIFICATION	4.800502843625845E-8	TEST
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999995782551647	WITHOUT_CLASSIFICATION	4.217448352847196E-7	TEST
no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999999101179428	WITHOUT_CLASSIFICATION	8.988205728366365E-8	TEST
Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.999997956548262	WITHOUT_CLASSIFICATION	2.0434517380023912E-6	TEST
Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999989518103505	WITHOUT_CLASSIFICATION	1.048189649458492E-6	TEST
Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999997186743351	WITHOUT_CLASSIFICATION	2.8132566491067195E-7	TEST
ignore error	WITHOUT_CLASSIFICATION	0.9999964924173803	WITHOUT_CLASSIFICATION	3.5075826198035398E-6	TEST
COMMON CONSTANT / CVAR METHODS	WITHOUT_CLASSIFICATION	0.9997863571677343	WITHOUT_CLASSIFICATION	2.136428322655919E-4	TEST
INTERNAL MODULE VARIABLE API METHODS	WITHOUT_CLASSIFICATION	0.9998484028027036	WITHOUT_CLASSIFICATION	1.515971972964559E-4	TEST
LOW-LEVEL CONSTANT INTERFACE fetch/store/list constants for this module	WITHOUT_CLASSIFICATION	0.9999991969772724	WITHOUT_CLASSIFICATION	8.030227276123551E-7	TEST
odd	WITHOUT_CLASSIFICATION	0.9997525708039856	WITHOUT_CLASSIFICATION	2.4742919601439766E-4	TEST
JRubyClient	WITHOUT_CLASSIFICATION	0.99998630881848	WITHOUT_CLASSIFICATION	1.3691181520000972E-5	TEST
x = mantissa 2 exponent Where mantissa is in the range of [.5, 1)	WITHOUT_CLASSIFICATION	0.9999996473312255	WITHOUT_CLASSIFICATION	3.526687745678209E-7	TEST
Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999987977312891	WITHOUT_CLASSIFICATION	1.2022687109767077E-6	TEST
Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999996932909077	WITHOUT_CLASSIFICATION	3.0670909241566386E-7	TEST
r = x 2 y	WITHOUT_CLASSIFICATION	0.999946418905584	WITHOUT_CLASSIFICATION	5.3581094416016815E-5	TEST
0!	WITHOUT_CLASSIFICATION	0.9986885849128783	WITHOUT_CLASSIFICATION	0.0013114150871217387	TEST
1!	WITHOUT_CLASSIFICATION	0.9991992227984696	WITHOUT_CLASSIFICATION	8.007772015304249E-4	TEST
2!	WITHOUT_CLASSIFICATION	0.9987327155211407	WITHOUT_CLASSIFICATION	0.0012672844788593175	TEST
3!	WITHOUT_CLASSIFICATION	0.9986091014648394	WITHOUT_CLASSIFICATION	0.0013908985351606556	TEST
4!	WITHOUT_CLASSIFICATION	0.9989778875140239	WITHOUT_CLASSIFICATION	0.0010221124859761135	TEST
5!	WITHOUT_CLASSIFICATION	0.9989617449347925	WITHOUT_CLASSIFICATION	0.0010382550652074305	TEST
6!	WITHOUT_CLASSIFICATION	0.9989696484675614	WITHOUT_CLASSIFICATION	0.0010303515324385797	TEST
7!	WITHOUT_CLASSIFICATION	0.9989881070904248	WITHOUT_CLASSIFICATION	0.0010118929095750979	TEST
8!	WITHOUT_CLASSIFICATION	0.9988387422103197	WITHOUT_CLASSIFICATION	0.001161257789680287	TEST
9!	WITHOUT_CLASSIFICATION	0.9987940903477316	WITHOUT_CLASSIFICATION	0.0012059096522684483	TEST
11!	WITHOUT_CLASSIFICATION	0.9992397543233681	WITHOUT_CLASSIFICATION	7.602456766319754E-4	TEST
12!	WITHOUT_CLASSIFICATION	0.999068597215725	WITHOUT_CLASSIFICATION	9.314027842749371E-4	TEST
13!	WITHOUT_CLASSIFICATION	0.9989723279306807	WITHOUT_CLASSIFICATION	0.0010276720693192182	TEST
15!	WITHOUT_CLASSIFICATION	0.9992354337358023	WITHOUT_CLASSIFICATION	7.645662641977884E-4	TEST
16!	WITHOUT_CLASSIFICATION	0.9992421008686326	WITHOUT_CLASSIFICATION	7.57899131367399E-4	TEST
17!	WITHOUT_CLASSIFICATION	0.9992513758899979	WITHOUT_CLASSIFICATION	7.486241100019785E-4	TEST
19!	WITHOUT_CLASSIFICATION	0.9991179275128358	WITHOUT_CLASSIFICATION	8.820724871642111E-4	TEST
20!	WITHOUT_CLASSIFICATION	0.9983002397101932	WITHOUT_CLASSIFICATION	0.0016997602898067175	TEST
21!	WITHOUT_CLASSIFICATION	0.9990721435646306	WITHOUT_CLASSIFICATION	9.278564353694089E-4	TEST
Static constants	WITHOUT_CLASSIFICATION	0.9999969973752695	WITHOUT_CLASSIFICATION	3.002624730646777E-6	TEST
Clean-up string representation so that it could be understood by Java's BigDecimal. Not terribly efficient for now. 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.999991523859878	WITHOUT_CLASSIFICATION	8.476140122114092E-6	TEST
2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999957323054726	WITHOUT_CLASSIFICATION	4.267694527450903E-6	TEST
3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999993999405978	WITHOUT_CLASSIFICATION	6.00059402210188E-7	TEST
MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999973019828811	WITHOUT_CLASSIFICATION	2.6980171188960083E-6	TEST
Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999997598691112	WITHOUT_CLASSIFICATION	2.4013088875320844E-7	TEST
Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999997255350156	WITHOUT_CLASSIFICATION	2.744649843528821E-7	TEST
Note: MRI has a very non-trivial way of calculating the precision, so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999994125141766	WITHOUT_CLASSIFICATION	5.874858233627934E-7	TEST
Iteration variables, for the square root x and the reciprocal v initial x: x0 ~ sqrt() initial v: v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.999999478684379	WITHOUT_CLASSIFICATION	5.21315621101959E-7	TEST
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999954748106068	WITHOUT_CLASSIFICATION	4.525189393117345E-6	TEST
TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9768059168286011	WITHOUT_CLASSIFICATION	0.02319408317139893	TEST
integer division	WITHOUT_CLASSIFICATION	0.9999970174924323	WITHOUT_CLASSIFICATION	2.9825075675881634E-6	TEST
MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999965790718857	WITHOUT_CLASSIFICATION	3.4209281142454797E-6	TEST
rounding neccessary	WITHOUT_CLASSIFICATION	0.999998651841786	WITHOUT_CLASSIFICATION	1.3481582140092215E-6	TEST
rounding neccessary	WITHOUT_CLASSIFICATION	0.999998651841786	WITHOUT_CLASSIFICATION	1.3481582140092215E-6	TEST
Java and MRI definitions of divmod are different.	WITHOUT_CLASSIFICATION	0.9999995065911083	WITHOUT_CLASSIFICATION	4.934088918517902E-7	TEST
JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999984492709582	WITHOUT_CLASSIFICATION	1.5507290418818136E-6	TEST
shift the decimal point just to the right of the digit to be rounded to (divide by 10(abs(scale))) -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999941859433	WITHOUT_CLASSIFICATION	5.814056598099202E-9	TEST
...round to that digit	WITHOUT_CLASSIFICATION	0.9999976431967842	WITHOUT_CLASSIFICATION	2.356803215835929E-6	TEST
...and shift the result back to the left (multiply by 10(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999999974245058	WITHOUT_CLASSIFICATION	2.575494128881318E-9	TEST
this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999982174899004	WITHOUT_CLASSIFICATION	1.7825100996008045E-6	TEST
sign	WITHOUT_CLASSIFICATION	0.9999204260952422	WITHOUT_CLASSIFICATION	7.957390475782783E-5	TEST
significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999995268304861	WITHOUT_CLASSIFICATION	4.7316951394966346E-7	TEST
normalize the value	WITHOUT_CLASSIFICATION	0.9999997792931108	WITHOUT_CLASSIFICATION	2.2070688926280022E-7	TEST
base	WITHOUT_CLASSIFICATION	0.9999350368567277	WITHOUT_CLASSIFICATION	6.496314327241991E-5	TEST
NOTE: MRI's sqrt precision is limited by 100, but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.999974858002861	WITHOUT_CLASSIFICATION	2.5141997139006908E-5	TEST
just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999991466595913	WITHOUT_CLASSIFICATION	8.53340408561503E-7	TEST
eh?!	WITHOUT_CLASSIFICATION	0.9995967552047197	WITHOUT_CLASSIFICATION	4.032447952803061E-4	TEST
Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999993141706166	WITHOUT_CLASSIFICATION	6.858293833955191E-7	TEST
General number and precision checking	WITHOUT_CLASSIFICATION	0.9999989999836794	WITHOUT_CLASSIFICATION	1.0000163205756595E-6	TEST
the requested precision	WITHOUT_CLASSIFICATION	0.999979363504435	WITHOUT_CLASSIFICATION	2.063649556499207E-5	TEST
Proc class	WITHOUT_CLASSIFICATION	0.9999945122259576	WITHOUT_CLASSIFICATION	5.487774042442431E-6	TEST
.append(" -x[directory] strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999823010097	WITHOUT_CLASSIFICATION	1.7698990233389693E-8	TEST
even shift.. ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999959214217702	WITHOUT_CLASSIFICATION	4.078578229785442E-6	TEST
5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999379569006709	WITHOUT_CLASSIFICATION	6.204309932911575E-5	TEST
..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999982021490403	WITHOUT_CLASSIFICATION	1.7978509597303294E-6	TEST
Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999999965453809	WITHOUT_CLASSIFICATION	3.454619288016578E-9	TEST
x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999241202073681	WITHOUT_CLASSIFICATION	7.587979263183754E-5	TEST
for prec 15 root x0 must surely be OK return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999996136806045	WITHOUT_CLASSIFICATION	3.863193954627352E-7	TEST
Initial v - the reciprocal v0 = 1/(2x)	WITHOUT_CLASSIFICATION	0.9999997811348621	WITHOUT_CLASSIFICATION	2.1886513779285449E-7	TEST
Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999956948281166	WITHOUT_CLASSIFICATION	4.3051718835247315E-6	TEST
assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999997075104107	WITHOUT_CLASSIFICATION	2.9248958934410675E-7	TEST
The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999997971926415	WITHOUT_CLASSIFICATION	2.0280735850266718E-7	TEST
Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999888906931924	WITHOUT_CLASSIFICATION	1.1109306807611758E-5	TEST
Next x e = d - x^2	WITHOUT_CLASSIFICATION	0.9999854690712101	WITHOUT_CLASSIFICATION	1.4530928789953826E-5	TEST
x += ev ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999762647401386	WITHOUT_CLASSIFICATION	2.3735259861471702E-5	TEST
root x is ready!	WITHOUT_CLASSIFICATION	0.9999946988876811	WITHOUT_CLASSIFICATION	5.301112318780039E-6	TEST
Next v g = 1 - 2xv	WITHOUT_CLASSIFICATION	0.999974748035111	WITHOUT_CLASSIFICATION	2.525196488893002E-5	TEST
v += gv ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999481938477701	WITHOUT_CLASSIFICATION	5.1806152229750695E-5	TEST
RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999830919150495	WITHOUT_CLASSIFICATION	1.690808495049552E-5	TEST
c: bind_eval	WITHOUT_CLASSIFICATION	0.9999866362636192	WITHOUT_CLASSIFICATION	1.3363736380835829E-5	TEST
================ Module Methods ================	WITHOUT_CLASSIFICATION	0.9999942311996238	WITHOUT_CLASSIFICATION	5.768800376208157E-6	TEST
from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999993729317217	WITHOUT_CLASSIFICATION	6.270682783023535E-7	TEST
This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999999511830098	WITHOUT_CLASSIFICATION	4.881699035272627E-8	TEST
default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999525043486	WITHOUT_CLASSIFICATION	4.7495651402198714E-8	TEST
Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.999996477428855	WITHOUT_CLASSIFICATION	3.522571145026766E-6	TEST
Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999991923284518	WITHOUT_CLASSIFICATION	8.076715481151893E-7	TEST
try the normal property first	WITHOUT_CLASSIFICATION	0.9999998263092087	WITHOUT_CLASSIFICATION	1.7369079127994314E-7	TEST
verify it if it's there	WITHOUT_CLASSIFICATION	0.9999281464454258	WITHOUT_CLASSIFICATION	7.185355457414407E-5	TEST
verify it if it's there	WITHOUT_CLASSIFICATION	0.9999281464454258	WITHOUT_CLASSIFICATION	7.185355457414407E-5	TEST
try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999996923384709	WITHOUT_CLASSIFICATION	3.0766152913784437E-7	TEST
otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999997544274518	WITHOUT_CLASSIFICATION	2.4557254812828767E-7	TEST
We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999969572249727	WITHOUT_CLASSIFICATION	3.042775027273062E-6	TEST
consume the file name	WITHOUT_CLASSIFICATION	0.9999996887069744	WITHOUT_CLASSIFICATION	3.112930255866508E-7	TEST
Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9997652552812832	WITHOUT_CLASSIFICATION	2.3474471871678699E-4	TEST
try cwd first	WITHOUT_CLASSIFICATION	0.9999974208322514	WITHOUT_CLASSIFICATION	2.5791677486418775E-6	TEST
ruby interpreter compatibilty Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.999999955541999	WITHOUT_CLASSIFICATION	4.445800087001038E-8	TEST
KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999957832309248	WITHOUT_CLASSIFICATION	4.216769075194715E-6	TEST
@JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999990764390653	WITHOUT_CLASSIFICATION	9.235609345740137E-7	TEST
@JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999981580710015	WITHOUT_CLASSIFICATION	1.8419289985329597E-6	TEST
@JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999981223584324	WITHOUT_CLASSIFICATION	1.8776415675621342E-6	TEST
symbol string must be interned	WITHOUT_CLASSIFICATION	0.9999979555096509	WITHOUT_CLASSIFICATION	2.0444903491446005E-6	TEST
assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999596187697248	WITHOUT_CLASSIFICATION	4.038123027516477E-5	TEST
Symbol class methods.	WITHOUT_CLASSIFICATION	0.9999947201218335	WITHOUT_CLASSIFICATION	5.2798781664667124E-6	TEST
TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9991517505419052	WITHOUT_CLASSIFICATION	8.482494580947918E-4	TEST
This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.999998878089478	WITHOUT_CLASSIFICATION	1.1219105219953075E-6	TEST
we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.999890376602291	WITHOUT_CLASSIFICATION	1.0962339770891825E-4	TEST
must be power of 2!	WITHOUT_CLASSIFICATION	0.9999953734327023	WITHOUT_CLASSIFICATION	4.626567297728665E-6	TEST
note all fields are final -- rehash creates new entries when necessary. as documented in java.util.concurrent.ConcurrentHashMap.java, that will statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999975519071834	WITHOUT_CLASSIFICATION	2.448092816627511E-6	TEST
assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9998825616759466	WITHOUT_CLASSIFICATION	1.1743832405340936E-4	TEST
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999998418563963	WITHOUT_CLASSIFICATION	1.5814360354174468E-7	TEST
try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999998418563963	WITHOUT_CLASSIFICATION	1.5814360354174468E-7	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999958366663957	WITHOUT_CLASSIFICATION	4.163333604207437E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999958366663957	WITHOUT_CLASSIFICATION	4.163333604207437E-6	TEST
backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999998622850318	WITHOUT_CLASSIFICATION	1.3771496829152556E-7	TEST
Single node on list	WITHOUT_CLASSIFICATION	0.9999977489830097	WITHOUT_CLASSIFICATION	2.2510169901709975E-6	TEST
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999853371426936	WITHOUT_CLASSIFICATION	1.4662857306331341E-5	TEST
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999952186509731	WITHOUT_CLASSIFICATION	4.7813490269668695E-6	TEST
Check the length every iteration, since the block can modify this string.	WITHOUT_CLASSIFICATION	0.999998028942961	WITHOUT_CLASSIFICATION	1.971057039063598E-6	TEST
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999491117652	WITHOUT_CLASSIFICATION	5.088823490411099E-8	TEST
not so backwards-compatible here, but no one should have been calling this anyway.	WITHOUT_CLASSIFICATION	0.9999904226434982	WITHOUT_CLASSIFICATION	9.577356501719221E-6	TEST
Profile	WITHOUT_CLASSIFICATION	0.999982383009287	WITHOUT_CLASSIFICATION	1.7616990712986704E-5	TEST
static private final String TRANSLIT = "translit";	WITHOUT_CLASSIFICATION	0.999999709471091	WITHOUT_CLASSIFICATION	2.905289090168817E-7	TEST
treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999963518455695	WITHOUT_CLASSIFICATION	3.648154430536953E-6	TEST
invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999950244562474	WITHOUT_CLASSIFICATION	4.97554375258028E-6	TEST
Methods of the Nil Class (nil_):	WITHOUT_CLASSIFICATION	0.9999996498990747	WITHOUT_CLASSIFICATION	3.501009252579702E-7	TEST
Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999983241384398	WITHOUT_CLASSIFICATION	1.6758615602805018E-6	TEST
Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.999223757925542	WITHOUT_CLASSIFICATION	7.762420744581227E-4	TEST
must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999995331130991	WITHOUT_CLASSIFICATION	4.668869009131425E-7	TEST
reset the state	WITHOUT_CLASSIFICATION	0.9999943359101566	WITHOUT_CLASSIFICATION	5.664089843341518E-6	TEST
Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999852845421424	WITHOUT_CLASSIFICATION	1.4715457857549424E-5	TEST
rb_match_busy	WITHOUT_CLASSIFICATION	0.999975549556981	WITHOUT_CLASSIFICATION	2.4450443018995673E-5	TEST
str is frozen	WITHOUT_CLASSIFICATION	0.9999943525384489	WITHOUT_CLASSIFICATION	5.647461551076957E-6	TEST
MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999952881903296	WITHOUT_CLASSIFICATION	4.711809670433396E-6	TEST
JRubyServer	WITHOUT_CLASSIFICATION	0.9998671025244561	WITHOUT_CLASSIFICATION	1.3289747554392597E-4	TEST
Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999996199021814	WITHOUT_CLASSIFICATION	3.800978185487124E-7	TEST
boot the Object class	WITHOUT_CLASSIFICATION	0.9999959112159468	WITHOUT_CLASSIFICATION	4.088784053263941E-6	TEST
Methods of the Object class (rb_obj_):	WITHOUT_CLASSIFICATION	0.9999993762365074	WITHOUT_CLASSIFICATION	6.237634926471363E-7	TEST
update superclass reference	WITHOUT_CLASSIFICATION	0.9999998683434932	WITHOUT_CLASSIFICATION	1.3165650684857066E-7	TEST
undo check	WITHOUT_CLASSIFICATION	0.9999989981554863	WITHOUT_CLASSIFICATION	1.001844513673853E-6	TEST
This is a non-standard method; have we decided to start extending Ruby? classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999923782509	WITHOUT_CLASSIFICATION	7.621749120682266E-9	TEST
boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999991395879725	WITHOUT_CLASSIFICATION	8.60412027426781E-7	TEST
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.999998270866489	WITHOUT_CLASSIFICATION	1.729133511020394E-6	TEST
use parent's marshal	WITHOUT_CLASSIFICATION	0.9999997234557763	WITHOUT_CLASSIFICATION	2.7654422371353365E-7	TEST
use parent's marshal	WITHOUT_CLASSIFICATION	0.9999997234557763	WITHOUT_CLASSIFICATION	2.7654422371353365E-7	TEST
could be pulled down to RubyClass in future rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999804607296	WITHOUT_CLASSIFICATION	1.953927046493403E-8	TEST
remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999971980808164	WITHOUT_CLASSIFICATION	2.8019191834853393E-6	TEST
add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999993390490386	WITHOUT_CLASSIFICATION	6.609509614454951E-7	TEST
update all subclasses	WITHOUT_CLASSIFICATION	0.999999097321321	WITHOUT_CLASSIFICATION	9.026786790746416E-7	TEST
fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999999889968564	WITHOUT_CLASSIFICATION	1.1003143584546262E-8	TEST
static initializing method	WITHOUT_CLASSIFICATION	0.9999992911890704	WITHOUT_CLASSIFICATION	7.088109297464979E-7	TEST
standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999996396866201	WITHOUT_CLASSIFICATION	3.603133798746278E-7	TEST
no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999999923211697	WITHOUT_CLASSIFICATION	7.678830277931012E-9	TEST
non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.999999652878965	WITHOUT_CLASSIFICATION	3.4712103501868724E-7	TEST
indices for temp values	WITHOUT_CLASSIFICATION	0.9999988899858111	WITHOUT_CLASSIFICATION	1.1100141889747708E-6	TEST
self method name	WITHOUT_CLASSIFICATION	0.9999960937687591	WITHOUT_CLASSIFICATION	3.906231240895509E-6	TEST
the default allocator	WITHOUT_CLASSIFICATION	0.9999999410833191	WITHOUT_CLASSIFICATION	5.8916680780960905E-8	TEST
Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999992541615591	WITHOUT_CLASSIFICATION	7.458384408770028E-7	TEST
do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999974806878331	WITHOUT_CLASSIFICATION	2.5193121668534565E-6	TEST
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999998145555267	WITHOUT_CLASSIFICATION	1.8544447336779285E-7	TEST
================ Singleton Methods ================	WITHOUT_CLASSIFICATION	0.9999979460460962	WITHOUT_CLASSIFICATION	2.0539539038101103E-6	TEST
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999868502186465	WITHOUT_CLASSIFICATION	1.3149781353605885E-5	TEST
Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999998580091549	WITHOUT_CLASSIFICATION	1.4199084511615192E-7	TEST
MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999999720112466	WITHOUT_CLASSIFICATION	2.798875341957817E-8	TEST
NOTE: Serialization is primarily supported for testing purposes, and there is no general guarantee that serialization will work correctly. Specifically, instance variables pointing at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9995792034386322	WITHOUT_CLASSIFICATION	4.20796561367913E-4	TEST
write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999992959294071	WITHOUT_CLASSIFICATION	7.040705929265997E-7	TEST
rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999978240644882	WITHOUT_CLASSIFICATION	2.1759355117643976E-6	TEST
0x3fff_ffff -0x4000_0000	WITHOUT_CLASSIFICATION	0.9991570406313982	WITHOUT_CLASSIFICATION	8.429593686016473E-4	TEST
a gotcha	WITHOUT_CLASSIFICATION	0.9999919400004454	WITHOUT_CLASSIFICATION	8.05999955453375E-6	TEST
Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999993536914454	WITHOUT_CLASSIFICATION	6.463085546410135E-7	TEST
A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999994480135095	WITHOUT_CLASSIFICATION	5.519864904751403E-7	TEST
Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999952955360008	WITHOUT_CLASSIFICATION	4.704463999163613E-6	TEST
Java Doubles are 64 bit long:	WITHOUT_CLASSIFICATION	0.9999989620485261	WITHOUT_CLASSIFICATION	1.0379514738903533E-6	TEST
Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999998145555267	WITHOUT_CLASSIFICATION	1.8544447336779285E-7	TEST
don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999954293148582	WITHOUT_CLASSIFICATION	4.57068514174086E-6	TEST
Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999999638947078	WITHOUT_CLASSIFICATION	3.61052922641559E-8	TEST
MRI behavior:	WITHOUT_CLASSIFICATION	0.9999947314006732	WITHOUT_CLASSIFICATION	5.2685993268296604E-6	TEST
Numeric.equal	WITHOUT_CLASSIFICATION	0.9999199746986905	WITHOUT_CLASSIFICATION	8.002530130943313E-5	TEST
provider is not available	WITHOUT_CLASSIFICATION	0.999983976435734	WITHOUT_CLASSIFICATION	1.6023564265972345E-5	TEST
bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999758203039854	WITHOUT_CLASSIFICATION	2.4179696014636815E-5	TEST
fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999999243132631	WITHOUT_CLASSIFICATION	7.56867368240001E-8	TEST
RubyDigest	WITHOUT_CLASSIFICATION	0.99995119283966	WITHOUT_CLASSIFICATION	4.8807160339921464E-5	TEST
ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999643945778133	WITHOUT_CLASSIFICATION	3.560542218670977E-5	TEST
synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999999255694132	WITHOUT_CLASSIFICATION	7.44305868118734E-8	TEST
we only add live threads	WITHOUT_CLASSIFICATION	0.9999958698218374	WITHOUT_CLASSIFICATION	4.130178162642696E-6	TEST
use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999054896883	WITHOUT_CLASSIFICATION	9.451031172670058E-8	TEST
handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999999742711289	WITHOUT_CLASSIFICATION	2.57288710999577E-8	TEST
JRubyService	WITHOUT_CLASSIFICATION	0.9999567641427206	WITHOUT_CLASSIFICATION	4.323585727933698E-5	TEST
while	WITHOUT_CLASSIFICATION	0.9999354381132537	WITHOUT_CLASSIFICATION	6.456188674629595E-5	TEST
\OOO	WITHOUT_CLASSIFICATION	0.9994215102726675	WITHOUT_CLASSIFICATION	5.784897273324219E-4	TEST
CRuby uses sprintf(buf, "%.g", FLOAT_DIG, d); This pattern adjusts the output of String.pattern("%g") to mimic the C version.	WITHOUT_CLASSIFICATION	0.999999926288761	WITHOUT_CLASSIFICATION	7.371123900893578E-8	TEST
mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999961269141958	WITHOUT_CLASSIFICATION	3.873085804097911E-6	TEST
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999999967153492	WITHOUT_CLASSIFICATION	3.284650790465684E-8	TEST
internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999998514079175	WITHOUT_CLASSIFICATION	1.4859208247584457E-7	TEST
silent ?	WITHOUT_CLASSIFICATION	0.9999994734391657	WITHOUT_CLASSIFICATION	5.265608341798592E-7	TEST
\xHH	WITHOUT_CLASSIFICATION	0.9992916759657031	WITHOUT_CLASSIFICATION	7.083240342968299E-4	TEST
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9997075280172104	WITHOUT_CLASSIFICATION	2.924719827895882E-4	TEST
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.999747281529431	WITHOUT_CLASSIFICATION	2.5271847056886656E-4	TEST
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9998125452636997	WITHOUT_CLASSIFICATION	1.8745473630045231E-4	TEST
\O, \OO, \OOO or backref	WITHOUT_CLASSIFICATION	0.9999856168940248	WITHOUT_CLASSIFICATION	1.4383105975329018E-5	TEST
MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9992235177697233	WITHOUT_CLASSIFICATION	7.764822302768111E-4	TEST
MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9993931330605089	WITHOUT_CLASSIFICATION	6.068669394911402E-4	TEST
Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999984066338892	WITHOUT_CLASSIFICATION	1.59336611073892E-6	TEST
Surrogates	WITHOUT_CLASSIFICATION	0.9999921806593344	WITHOUT_CLASSIFICATION	7.819340665725227E-6	TEST
do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999992037756789	WITHOUT_CLASSIFICATION	7.962243211913413E-7	TEST
\0, \0O, \0OO	WITHOUT_CLASSIFICATION	0.9995090087184869	WITHOUT_CLASSIFICATION	4.909912815131148E-4	TEST
\xHH	WITHOUT_CLASSIFICATION	0.9992916759657031	WITHOUT_CLASSIFICATION	7.083240342968299E-4	TEST
\C-X, \C-\M-X	WITHOUT_CLASSIFICATION	0.999747281529431	WITHOUT_CLASSIFICATION	2.5271847056886656E-4	TEST
\M-X, \M-\C-X, \M-\cX	WITHOUT_CLASSIFICATION	0.9997075280172104	WITHOUT_CLASSIFICATION	2.924719827895882E-4	TEST
\\u{H HH HHH HHHH HHHHH HHHHHH ...}	WITHOUT_CLASSIFICATION	0.9993092821434093	WITHOUT_CLASSIFICATION	6.907178565906789E-4	TEST
\\uHHHH	WITHOUT_CLASSIFICATION	0.999657288734499	WITHOUT_CLASSIFICATION	3.4271126550109045E-4	TEST
\p{Hiragana}	WITHOUT_CLASSIFICATION	0.9997473626838099	WITHOUT_CLASSIFICATION	2.526373161900629E-4	TEST
inner switch	WITHOUT_CLASSIFICATION	0.9999975037908323	WITHOUT_CLASSIFICATION	2.4962091676671916E-6	TEST
newInstance here	WITHOUT_CLASSIFICATION	0.9999984710793856	WITHOUT_CLASSIFICATION	1.5289206144276827E-6	TEST
rb_reg_raise	WITHOUT_CLASSIFICATION	0.9998662668727226	WITHOUT_CLASSIFICATION	1.3373312727742943E-4	TEST
rb_reg_desc	WITHOUT_CLASSIFICATION	0.9997955559301385	WITHOUT_CLASSIFICATION	2.0444406986163066E-4	TEST
rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999577467247318	WITHOUT_CLASSIFICATION	4.2253275268122556E-5	TEST
rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999448252031917	WITHOUT_CLASSIFICATION	5.517479680814697E-5	TEST
rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999965192008098	WITHOUT_CLASSIFICATION	3.480799190127331E-6	TEST
rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999966727795007	WITHOUT_CLASSIFICATION	3.327220499406989E-6	TEST
JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999999933788357	WITHOUT_CLASSIFICATION	6.621164305702573E-9	TEST
rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999067480875478	WITHOUT_CLASSIFICATION	9.325191245224255E-5	TEST
option_to_str	WITHOUT_CLASSIFICATION	0.9999495399179318	WITHOUT_CLASSIFICATION	5.046008206829368E-5	TEST
Don't initialize with class Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999998767732723	WITHOUT_CLASSIFICATION	1.2322672766127037E-7	TEST
args should be before block	WITHOUT_CLASSIFICATION	0.9999853061607746	WITHOUT_CLASSIFICATION	1.469383922541699E-5	TEST
args should be at end	WITHOUT_CLASSIFICATION	0.999993547731565	WITHOUT_CLASSIFICATION	6.4522684349294015E-6	TEST
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999956060141457	WITHOUT_CLASSIFICATION	4.393985854250086E-6	TEST
minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999956060141457	WITHOUT_CLASSIFICATION	4.393985854250086E-6	TEST
skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999992490637241	WITHOUT_CLASSIFICATION	7.509362760275411E-7	TEST
start a new populator	WITHOUT_CLASSIFICATION	0.9999982877939186	WITHOUT_CLASSIFICATION	1.7122060813314233E-6	TEST
check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999967105931712	WITHOUT_CLASSIFICATION	3.289406828772475E-6	TEST
add all names for this annotation	WITHOUT_CLASSIFICATION	0.9998779183757251	WITHOUT_CLASSIFICATION	1.220816242748709E-4	TEST
no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999985647241969	WITHOUT_CLASSIFICATION	1.4352758030407982E-6	TEST
write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999995591432823	WITHOUT_CLASSIFICATION	4.408567176665748E-7	TEST
single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999998044334951	WITHOUT_CLASSIFICATION	1.9556650483675158E-7	TEST
multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999965684667331	WITHOUT_CLASSIFICATION	3.431533266893476E-6	TEST
declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.999999264129548	WITHOUT_CLASSIFICATION	7.358704521163947E-7	TEST
inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999605993016	WITHOUT_CLASSIFICATION	3.940069842305875E-8	TEST
RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999995664997944	WITHOUT_CLASSIFICATION	4.3350020559856585E-7	TEST
}	WITHOUT_CLASSIFICATION	0.9992390263251093	WITHOUT_CLASSIFICATION	7.609736748906508E-4	TEST
fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.999999470650065	WITHOUT_CLASSIFICATION	5.293499349414096E-7	TEST
refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999989246983828	WITHOUT_CLASSIFICATION	1.0753016171924886E-6	TEST
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999997205291021	WITHOUT_CLASSIFICATION	2.794708979144553E-7	TEST
attribute set.	WITHOUT_CLASSIFICATION	0.9999981130156255	WITHOUT_CLASSIFICATION	1.886984374638161E-6	TEST
element set	WITHOUT_CLASSIFICATION	0.9999985939554693	WITHOUT_CLASSIFICATION	1.4060445306597547E-6	TEST
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996992850653	WITHOUT_CLASSIFICATION	3.0071493471987515E-7	TEST
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996992850653	WITHOUT_CLASSIFICATION	3.0071493471987515E-7	TEST
colon3	WITHOUT_CLASSIFICATION	0.9998622973412368	WITHOUT_CLASSIFICATION	1.3770265876316296E-4	TEST
Colon3	WITHOUT_CLASSIFICATION	0.9998099421243553	WITHOUT_CLASSIFICATION	1.9005787564486333E-4	TEST
array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999434210787088	WITHOUT_CLASSIFICATION	5.657892129120396E-5	TEST
For b.foo	WITHOUT_CLASSIFICATION	0.9999759881816611	WITHOUT_CLASSIFICATION	2.4011818338901665E-5	TEST
instance config for the script run	WITHOUT_CLASSIFICATION	0.9999995950067626	WITHOUT_CLASSIFICATION	4.0499323735693684E-7	TEST
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996992850653	WITHOUT_CLASSIFICATION	3.0071493471987515E-7	TEST
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996992850653	WITHOUT_CLASSIFICATION	3.0071493471987515E-7	TEST
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999802017557	WITHOUT_CLASSIFICATION	1.979824426623363E-8	TEST
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999802017557	WITHOUT_CLASSIFICATION	1.979824426623363E-8	TEST
RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999983173709007	WITHOUT_CLASSIFICATION	1.6826290993924138E-6	TEST
For 'b.foo'	WITHOUT_CLASSIFICATION	0.999902264456314	WITHOUT_CLASSIFICATION	9.773554368598414E-5	TEST
We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999998237760402	WITHOUT_CLASSIFICATION	1.7622395979085562E-7	TEST
something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999998279898149	WITHOUT_CLASSIFICATION	1.7201018510254747E-7	TEST
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999084867953	WITHOUT_CLASSIFICATION	9.151320463217274E-8	TEST
Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999084867953	WITHOUT_CLASSIFICATION	9.151320463217274E-8	TEST
do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999995924196147	WITHOUT_CLASSIFICATION	4.0758038529503997E-7	TEST
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999955803431483	WITHOUT_CLASSIFICATION	4.419656851669176E-6	TEST
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999989911382057	WITHOUT_CLASSIFICATION	1.008861794313085E-5	TEST
never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999977902100656	WITHOUT_CLASSIFICATION	2.2097899343904107E-6	TEST
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999979434978	WITHOUT_CLASSIFICATION	2.056502210398303E-8	TEST
The name of the variable	WITHOUT_CLASSIFICATION	0.9999908083820209	WITHOUT_CLASSIFICATION	9.191617978971163E-6	TEST
If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.999998852101626	WITHOUT_CLASSIFICATION	1.1478983740573726E-6	TEST
Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999996804648846	WITHOUT_CLASSIFICATION	3.1953511538040353E-7	TEST
Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999990301488098	WITHOUT_CLASSIFICATION	9.698511902979695E-7	TEST
no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999998753364095	WITHOUT_CLASSIFICATION	1.2466359051803956E-7	TEST
optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999414190147287	WITHOUT_CLASSIFICATION	5.858098527128449E-5	TEST
arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999997073375879	WITHOUT_CLASSIFICATION	2.9266241218388306E-7	TEST
no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999983207744908	WITHOUT_CLASSIFICATION	1.6792255092879053E-6	TEST
set argv from main's args	WITHOUT_CLASSIFICATION	0.9999992601147112	WITHOUT_CLASSIFICATION	7.398852888576456E-7	TEST
attribute set.	WITHOUT_CLASSIFICATION	0.9999981130156255	WITHOUT_CLASSIFICATION	1.886984374638161E-6	TEST
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996992850653	WITHOUT_CLASSIFICATION	3.0071493471987515E-7	TEST
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999802017557	WITHOUT_CLASSIFICATION	1.979824426623363E-8	TEST
The name of the variable	WITHOUT_CLASSIFICATION	0.9999908083820209	WITHOUT_CLASSIFICATION	9.191617978971163E-6	TEST
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999971943798148	WITHOUT_CLASSIFICATION	2.805620185230024E-6	TEST
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999971943798148	WITHOUT_CLASSIFICATION	2.805620185230024E-6	TEST
block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999996682172777	WITHOUT_CLASSIFICATION	3.3178272232114423E-7	TEST
assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999983882135187	WITHOUT_CLASSIFICATION	1.611786481246703E-6	TEST
in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999069224281	WITHOUT_CLASSIFICATION	9.307757189273458E-8	TEST
assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999756192364	WITHOUT_CLASSIFICATION	2.438076365921431E-8	TEST
Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999954453470273	WITHOUT_CLASSIFICATION	4.554652972691531E-6	TEST
Experimental class reification support, to create real Java classes for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999987772227604	WITHOUT_CLASSIFICATION	1.2227772395462004E-6	TEST
This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999945671230631	WITHOUT_CLASSIFICATION	5.432876936862545E-6	TEST
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999793919079362	WITHOUT_CLASSIFICATION	2.0608092063869108E-5	TEST
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999167115456	WITHOUT_CLASSIFICATION	8.328845428467765E-8	TEST
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999995915230206	WITHOUT_CLASSIFICATION	4.0847697934195913E-7	TEST
never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999958109727372	WITHOUT_CLASSIFICATION	4.189027262832102E-6	TEST
If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999852937027	WITHOUT_CLASSIFICATION	1.4706297216157769E-8	TEST
JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999997551635653	WITHOUT_CLASSIFICATION	2.448364347050788E-7	TEST
element set	WITHOUT_CLASSIFICATION	0.9999985939554693	WITHOUT_CLASSIFICATION	1.4060445306597547E-6	TEST
For 'b.foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999802017557	WITHOUT_CLASSIFICATION	1.979824426623363E-8	TEST
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999955803431483	WITHOUT_CLASSIFICATION	4.419656851669176E-6	TEST
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999989911382057	WITHOUT_CLASSIFICATION	1.008861794313085E-5	TEST
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999989911382057	WITHOUT_CLASSIFICATION	1.008861794313085E-5	TEST
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999979434978	WITHOUT_CLASSIFICATION	2.056502210398303E-8	TEST
The name of the variable	WITHOUT_CLASSIFICATION	0.9999908083820209	WITHOUT_CLASSIFICATION	9.191617978971163E-6	TEST
The name of the variable	WITHOUT_CLASSIFICATION	0.9999908083820209	WITHOUT_CLASSIFICATION	9.191617978971163E-6	TEST
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999971943798148	WITHOUT_CLASSIFICATION	2.805620185230024E-6	TEST
Empirical Observations: null -> Some arity argsNode == this.argsNode then check for arity changes newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999992413474208	WITHOUT_CLASSIFICATION	7.586525791623296E-7	TEST
assert !(value instanceof RubyArray) : "Not an array";	WITHOUT_CLASSIFICATION	0.9999991642141839	WITHOUT_CLASSIFICATION	8.35785816135418E-7	TEST
Serialization killed our dynamic scope. We can just create an empty one since serialization cannot serialize an eval (which is the only thing which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999995189093289	WITHOUT_CLASSIFICATION	4.810906710042679E-7	TEST
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999588856862001	WITHOUT_CLASSIFICATION	4.1114313799996526E-5	TEST
We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999913298388446	WITHOUT_CLASSIFICATION	8.670161155429276E-6	TEST
assert thenBody != null : "thenBody is not null"; assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999292624458895	WITHOUT_CLASSIFICATION	7.073755411044524E-5	TEST
add in reverse order	WITHOUT_CLASSIFICATION	0.9999977675006505	WITHOUT_CLASSIFICATION	2.2324993495585626E-6	TEST
in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999178955162	WITHOUT_CLASSIFICATION	8.210448380684416E-8	TEST
ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999989731217321	WITHOUT_CLASSIFICATION	1.0268782678790812E-6	TEST
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999955803431483	WITHOUT_CLASSIFICATION	4.419656851669176E-6	TEST
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999989911382057	WITHOUT_CLASSIFICATION	1.008861794313085E-5	TEST
Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999989911382057	WITHOUT_CLASSIFICATION	1.008861794313085E-5	TEST
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999979434978	WITHOUT_CLASSIFICATION	2.056502210398303E-8	TEST
Make a nil node if no body. Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999793919079362	WITHOUT_CLASSIFICATION	2.0608092063869108E-5	TEST
now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999995915230206	WITHOUT_CLASSIFICATION	4.0847697934195913E-7	TEST
No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9990501919462628	WITHOUT_CLASSIFICATION	9.498080537373628E-4	TEST
save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999991220018831	WITHOUT_CLASSIFICATION	8.779981169509964E-7	TEST
For 'foo'	WITHOUT_CLASSIFICATION	0.999976732546778	WITHOUT_CLASSIFICATION	2.326745322202454E-5	TEST
For 'foo'	WITHOUT_CLASSIFICATION	0.999976732546778	WITHOUT_CLASSIFICATION	2.326745322202454E-5	TEST
admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999972845935924	WITHOUT_CLASSIFICATION	2.7154064075978434E-6	TEST
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999944348457719	WITHOUT_CLASSIFICATION	5.565154228167366E-6	TEST
What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999766001591907	WITHOUT_CLASSIFICATION	2.3399840809375396E-5	TEST
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999996366740312	WITHOUT_CLASSIFICATION	3.6332596870229465E-7	TEST
just rethrow	WITHOUT_CLASSIFICATION	0.9999946621065845	WITHOUT_CLASSIFICATION	5.33789341543767E-6	TEST
just rethrow	WITHOUT_CLASSIFICATION	0.9999946621065845	WITHOUT_CLASSIFICATION	5.33789341543767E-6	TEST
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999980576232749	WITHOUT_CLASSIFICATION	1.94237672520963E-6	TEST
clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999980576232749	WITHOUT_CLASSIFICATION	1.94237672520963E-6	TEST
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999998647572177	WITHOUT_CLASSIFICATION	1.3524278219504894E-7	TEST
no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999998647572177	WITHOUT_CLASSIFICATION	1.3524278219504894E-7	TEST
Execute rescue block	WITHOUT_CLASSIFICATION	0.9999982884441501	WITHOUT_CLASSIFICATION	1.7115558499426391E-6	TEST
If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999981560641714	WITHOUT_CLASSIFICATION	1.8439358286258146E-6	TEST
index of variable for this arg	WITHOUT_CLASSIFICATION	0.9998875060884559	WITHOUT_CLASSIFICATION	1.1249391154402579E-4	TEST
only a marker interface	WITHOUT_CLASSIFICATION	0.9999991545454483	WITHOUT_CLASSIFICATION	8.454545517654862E-7	TEST
don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999999158375316	WITHOUT_CLASSIFICATION	8.416246844978504E-8	TEST
pragmas	WITHOUT_CLASSIFICATION	0.9998517930239906	WITHOUT_CLASSIFICATION	1.4820697600943152E-4	TEST
The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999934315190063	WITHOUT_CLASSIFICATION	6.568480993613687E-6	TEST
We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999900233394987	WITHOUT_CLASSIFICATION	9.976660501312819E-6	TEST
The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.999866517840346	WITHOUT_CLASSIFICATION	1.334821596540394E-4	TEST
The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9998572211832268	WITHOUT_CLASSIFICATION	1.4277881677313232E-4	TEST
Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.999999930418619	WITHOUT_CLASSIFICATION	6.958138101616059E-8	TEST
check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999997944871595	WITHOUT_CLASSIFICATION	2.0551284066745084E-7	TEST
long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.999985110378455	WITHOUT_CLASSIFICATION	1.4889621544908009E-5	TEST
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999917641927342	WITHOUT_CLASSIFICATION	8.235807265887112E-6	TEST
ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999917641927342	WITHOUT_CLASSIFICATION	8.235807265887112E-6	TEST
long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999864752989762	WITHOUT_CLASSIFICATION	1.3524701023794266E-5	TEST
we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999491117652	WITHOUT_CLASSIFICATION	5.088823490411099E-8	TEST
Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999981019425301	WITHOUT_CLASSIFICATION	1.89805746987723E-6	TEST
encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999028201714	WITHOUT_CLASSIFICATION	9.717982863129987E-8	TEST
only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999989212031339	WITHOUT_CLASSIFICATION	1.0787968661227819E-6	TEST
otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999989690130426	WITHOUT_CLASSIFICATION	1.0309869573251602E-6	TEST
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999991664089494	WITHOUT_CLASSIFICATION	8.335910505195821E-7	TEST
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999995813896809	WITHOUT_CLASSIFICATION	4.186103190854868E-7	TEST
compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999783980025	WITHOUT_CLASSIFICATION	2.160199755763029E-8	TEST
last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999030800596	WITHOUT_CLASSIFICATION	9.691994040218054E-8	TEST
compile first node only	WITHOUT_CLASSIFICATION	0.9999997049968694	WITHOUT_CLASSIFICATION	2.9500313058044066E-7	TEST
splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999966494242084	WITHOUT_CLASSIFICATION	3.3505757914912483E-6	TEST
if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999988819742222	WITHOUT_CLASSIFICATION	1.1180257778848667E-6	TEST
NOTE: Currently this optimization is limited to the following situations: All expressions must be int-ranged literal fixnums It also still emits the code for the "safe" when logic, which is rather wasteful (since it essentially doubles each code body). As such it is normally disabled, but it serves as an example of how this optimization could be done. Ideally, it should be combined with the when processing to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9998105346666719	WITHOUT_CLASSIFICATION	1.8946533332801898E-4	TEST
aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999682492326066	WITHOUT_CLASSIFICATION	3.175076739333738E-5	TEST
one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999885722809909	WITHOUT_CLASSIFICATION	1.142771900896939E-5	TEST
can't do it	WITHOUT_CLASSIFICATION	0.9999907458833686	WITHOUT_CLASSIFICATION	9.2541166314156E-6	TEST
otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999998108553101	WITHOUT_CLASSIFICATION	1.8914468986564033E-7	TEST
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999988717220046	WITHOUT_CLASSIFICATION	1.1282779954014697E-6	TEST
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999988717220046	WITHOUT_CLASSIFICATION	1.1282779954014697E-6	TEST
these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999998005690779	WITHOUT_CLASSIFICATION	1.9943092202802564E-7	TEST
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9999970151577235	WITHOUT_CLASSIFICATION	2.9848422765330724E-6	TEST
[]	WITHOUT_CLASSIFICATION	0.9992482504433166	WITHOUT_CLASSIFICATION	7.517495566835057E-4	TEST
[]	WITHOUT_CLASSIFICATION	0.9992482504433166	WITHOUT_CLASSIFICATION	7.517495566835057E-4	TEST
context.swapValues(); context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999966560739518	WITHOUT_CLASSIFICATION	3.343926048110593E-6	TEST
[RubyClass] [RubyClass, RubyClass] [RubyClass] [] [self] [RubyClass] [RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999907165949774	WITHOUT_CLASSIFICATION	9.283405022603213E-6	TEST
[RubyClass]	WITHOUT_CLASSIFICATION	0.9999142767843479	WITHOUT_CLASSIFICATION	8.57232156521056E-5	TEST
[RubyClass] [RubyClass, RubyClass] [RubyClass] []	WITHOUT_CLASSIFICATION	0.9999510425879002	WITHOUT_CLASSIFICATION	4.8957412099829E-5	TEST
if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.99999766984847	WITHOUT_CLASSIFICATION	2.330151530000557E-6	TEST
inspect body and args	WITHOUT_CLASSIFICATION	0.999999778563917	WITHOUT_CLASSIFICATION	2.2143608312283201E-7	TEST
inspect body and args	WITHOUT_CLASSIFICATION	0.999999778563917	WITHOUT_CLASSIFICATION	2.2143608312283201E-7	TEST
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999689191419	WITHOUT_CLASSIFICATION	3.108085817536019E-8	TEST
if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999975009464918	WITHOUT_CLASSIFICATION	2.4990535082204745E-6	TEST
invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999997982359206	WITHOUT_CLASSIFICATION	2.0176407938871168E-7	TEST
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999974686023259	WITHOUT_CLASSIFICATION	2.531397674169524E-6	TEST
[IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass] [IRubyObject]	WITHOUT_CLASSIFICATION	0.9999970151577235	WITHOUT_CLASSIFICATION	2.9848422765330724E-6	TEST
[RubyClass] []	WITHOUT_CLASSIFICATION	0.9999835934489895	WITHOUT_CLASSIFICATION	1.6406551010553216E-5	TEST
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999977662392469	WITHOUT_CLASSIFICATION	2.2337607532065447E-6	TEST
[String] [String, String] [String] [String, RubyClass] [String, RubyClass, RubyClass] [String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999977662392469	WITHOUT_CLASSIFICATION	2.2337607532065447E-6	TEST
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999864137166988	WITHOUT_CLASSIFICATION	1.358628330114243E-5	TEST
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999917163251	WITHOUT_CLASSIFICATION	8.283674902007944E-8	TEST
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999917163251	WITHOUT_CLASSIFICATION	8.283674902007944E-8	TEST
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999994421915485	WITHOUT_CLASSIFICATION	5.578084514876968E-7	TEST
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999994421915485	WITHOUT_CLASSIFICATION	5.578084514876968E-7	TEST
not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999994421915485	WITHOUT_CLASSIFICATION	5.578084514876968E-7	TEST
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999917163251	WITHOUT_CLASSIFICATION	8.283674902007944E-8	TEST
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999917163251	WITHOUT_CLASSIFICATION	8.283674902007944E-8	TEST
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999864137166988	WITHOUT_CLASSIFICATION	1.358628330114243E-5	TEST
force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999999215000728	WITHOUT_CLASSIFICATION	7.849992728218778E-8	TEST
always false or nil	WITHOUT_CLASSIFICATION	0.9999989962149801	WITHOUT_CLASSIFICATION	1.003785019895117E-6	TEST
optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999991552114649	WITHOUT_CLASSIFICATION	8.447885350506327E-7	TEST
normal	WITHOUT_CLASSIFICATION	0.9999765909869125	WITHOUT_CLASSIFICATION	2.3409013087414123E-5	TEST
compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999367206791	WITHOUT_CLASSIFICATION	6.32793208166097E-8	TEST
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999976015220521	WITHOUT_CLASSIFICATION	2.398477947991898E-6	TEST
just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999950036556647	WITHOUT_CLASSIFICATION	4.996344335255494E-6	TEST
"assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999052732303	WITHOUT_CLASSIFICATION	9.47267696012843E-8	TEST
compile first node only	WITHOUT_CLASSIFICATION	0.9999997049968694	WITHOUT_CLASSIFICATION	2.9500313058044066E-7	TEST
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999917163251	WITHOUT_CLASSIFICATION	8.283674902007944E-8	TEST
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999917163251	WITHOUT_CLASSIFICATION	8.283674902007944E-8	TEST
eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.999999827482753	WITHOUT_CLASSIFICATION	1.7251724711856394E-7	TEST
try optz version	WITHOUT_CLASSIFICATION	0.9999981980270793	WITHOUT_CLASSIFICATION	1.801972920787841E-6	TEST
sizes must match	WITHOUT_CLASSIFICATION	0.9999930941040577	WITHOUT_CLASSIFICATION	6.9058959422578115E-6	TEST
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999980343245553	WITHOUT_CLASSIFICATION	1.9656754447793664E-6	TEST
normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999992909679295	WITHOUT_CLASSIFICATION	7.090320705776052E-7	TEST
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9999995785404896	WITHOUT_CLASSIFICATION	4.2145951036446423E-7	TEST
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999396430204	WITHOUT_CLASSIFICATION	6.035697954706096E-8	TEST
only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999998450556652	WITHOUT_CLASSIFICATION	1.5494433490294256E-7	TEST
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999987075277924	WITHOUT_CLASSIFICATION	1.2924722076735466E-6	TEST
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999379599657	WITHOUT_CLASSIFICATION	6.204003435425662E-8	TEST
RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999575595656945	WITHOUT_CLASSIFICATION	4.244043430540865E-5	TEST
done processing args	WITHOUT_CLASSIFICATION	0.9999779809663243	WITHOUT_CLASSIFICATION	2.201903367570734E-5	TEST
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999987012210502	WITHOUT_CLASSIFICATION	1.298778949878035E-6	TEST
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999998526392304	WITHOUT_CLASSIFICATION	1.4736076959448227E-6	TEST
if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.99999998293729	WITHOUT_CLASSIFICATION	1.7062710019417746E-8	TEST
[recv]	WITHOUT_CLASSIFICATION	0.9998882220139693	WITHOUT_CLASSIFICATION	1.1177798603072796E-4	TEST
[recv]	WITHOUT_CLASSIFICATION	0.9998882220139693	WITHOUT_CLASSIFICATION	1.1177798603072796E-4	TEST
[recv]	WITHOUT_CLASSIFICATION	0.9998882220139693	WITHOUT_CLASSIFICATION	1.1177798603072796E-4	TEST
compile into array	WITHOUT_CLASSIFICATION	0.9999997800245318	WITHOUT_CLASSIFICATION	2.1997546816330352E-7	TEST
compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999518546459	WITHOUT_CLASSIFICATION	4.8145354112215056E-8	TEST
check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999999040580672	WITHOUT_CLASSIFICATION	9.594193292099621E-8	TEST
condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999997481841877	WITHOUT_CLASSIFICATION	2.518158123276214E-7	TEST
force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999994279179533	WITHOUT_CLASSIFICATION	5.720820466164723E-7	TEST
create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999960971022548	WITHOUT_CLASSIFICATION	3.902897745261166E-6	TEST
it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999995166019	WITHOUT_CLASSIFICATION	4.833981494252218E-10	TEST
send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999979218483419	WITHOUT_CLASSIFICATION	2.0781516580454484E-6	TEST
single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999998365553618	WITHOUT_CLASSIFICATION	1.6344463817451717E-7	TEST
leave as a normal array	WITHOUT_CLASSIFICATION	0.9999964498551874	WITHOUT_CLASSIFICATION	3.5501448124922486E-6	TEST
This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999683832844927	WITHOUT_CLASSIFICATION	3.1616715507444265E-5	TEST
The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999966781181313	WITHOUT_CLASSIFICATION	3.3218818686049054E-6	TEST
check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999689191419	WITHOUT_CLASSIFICATION	3.108085817536019E-8	TEST
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999917163251	WITHOUT_CLASSIFICATION	8.283674902007944E-8	TEST
create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999999917163251	WITHOUT_CLASSIFICATION	8.283674902007944E-8	TEST
no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999864137166988	WITHOUT_CLASSIFICATION	1.358628330114243E-5	TEST
need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999976015220521	WITHOUT_CLASSIFICATION	2.398477947991898E-6	TEST
try optz version	WITHOUT_CLASSIFICATION	0.9999981980270793	WITHOUT_CLASSIFICATION	1.801972920787841E-6	TEST
expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999980343245553	WITHOUT_CLASSIFICATION	1.9656754447793664E-6	TEST
head must not be null and there must be no "args" (like arg)	WITHOUT_CLASSIFICATION	0.9999995785404896	WITHOUT_CLASSIFICATION	4.2145951036446423E-7	TEST
sizes must match	WITHOUT_CLASSIFICATION	0.9999930941040577	WITHOUT_CLASSIFICATION	6.9058959422578115E-6	TEST
"head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999396430204	WITHOUT_CLASSIFICATION	6.035697954706096E-8	TEST
if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999379599657	WITHOUT_CLASSIFICATION	6.204003435425662E-8	TEST
perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999987075277924	WITHOUT_CLASSIFICATION	1.2924722076735466E-6	TEST
done processing args	WITHOUT_CLASSIFICATION	0.9999779809663243	WITHOUT_CLASSIFICATION	2.201903367570734E-5	TEST
Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999996439601878	WITHOUT_CLASSIFICATION	3.5603981226979536E-7	TEST
class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999993561679086	WITHOUT_CLASSIFICATION	6.438320914972938E-7	TEST
successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999995285490128	WITHOUT_CLASSIFICATION	4.714509872585547E-7	TEST
finally, grab the script	WITHOUT_CLASSIFICATION	0.9999996858040896	WITHOUT_CLASSIFICATION	3.141959103962094E-7	TEST
logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999979721745575	WITHOUT_CLASSIFICATION	2.0278254425278316E-6	TEST
Time the compilation	WITHOUT_CLASSIFICATION	0.999997630684833	WITHOUT_CLASSIFICATION	2.3693151670107874E-6	TEST
we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999971241751724	WITHOUT_CLASSIFICATION	2.875824827558148E-6	TEST
If we don't have a body, check for required or opt args if opt args, they could have side effects if required args, need to raise errors if too few args passed otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.999986708507918	WITHOUT_CLASSIFICATION	1.3291492081976604E-5	TEST
if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999986842661547	WITHOUT_CLASSIFICATION	1.3157338453862246E-6	TEST
only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999999813334155	WITHOUT_CLASSIFICATION	1.866658449457708E-7	TEST
normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999998151790849	WITHOUT_CLASSIFICATION	1.8482091507313848E-7	TEST
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999996942483869	WITHOUT_CLASSIFICATION	3.057516132233972E-7	TEST
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999806366759246	WITHOUT_CLASSIFICATION	1.9363324075436558E-5	TEST
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999946444795185	WITHOUT_CLASSIFICATION	5.35552048151468E-6	TEST
return last value from execution	WITHOUT_CLASSIFICATION	0.9999999480326965	WITHOUT_CLASSIFICATION	5.196730342199452E-8	TEST
end of variable scope	WITHOUT_CLASSIFICATION	0.9999931827030855	WITHOUT_CLASSIFICATION	6.817296914548661E-6	TEST
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999701247033865	WITHOUT_CLASSIFICATION	2.9875296613389152E-5	TEST
Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999976173169534	WITHOUT_CLASSIFICATION	2.3826830467172414E-6	TEST
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999998619247991	WITHOUT_CLASSIFICATION	1.3807520089358983E-7	TEST
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999986994711247	WITHOUT_CLASSIFICATION	1.300528875200751E-6	TEST
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999997822136877	WITHOUT_CLASSIFICATION	2.1778631227869013E-7	TEST
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999997824711115	WITHOUT_CLASSIFICATION	2.1752888835895515E-7	TEST
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999997824711115	WITHOUT_CLASSIFICATION	2.1752888835895515E-7	TEST
value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999991329128574	WITHOUT_CLASSIFICATION	8.670871425536263E-7	TEST
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999395758168	WITHOUT_CLASSIFICATION	6.042418315757355E-8	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999475330542864	WITHOUT_CLASSIFICATION	5.246694571352352E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999475330542864	WITHOUT_CLASSIFICATION	5.246694571352352E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999475330542864	WITHOUT_CLASSIFICATION	5.246694571352352E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999475330542864	WITHOUT_CLASSIFICATION	5.246694571352352E-5	TEST
arg0	WITHOUT_CLASSIFICATION	0.9997594997753979	WITHOUT_CLASSIFICATION	2.4050022460217732E-4	TEST
arg0	WITHOUT_CLASSIFICATION	0.9997594997753979	WITHOUT_CLASSIFICATION	2.4050022460217732E-4	TEST
arg0	WITHOUT_CLASSIFICATION	0.9997594997753979	WITHOUT_CLASSIFICATION	2.4050022460217732E-4	TEST
arg1	WITHOUT_CLASSIFICATION	0.9998532753834851	WITHOUT_CLASSIFICATION	1.467246165148836E-4	TEST
arg1	WITHOUT_CLASSIFICATION	0.9998532753834851	WITHOUT_CLASSIFICATION	1.467246165148836E-4	TEST
arg2	WITHOUT_CLASSIFICATION	0.9997676635987772	WITHOUT_CLASSIFICATION	2.3233640122289958E-4	TEST
args	WITHOUT_CLASSIFICATION	0.9999048324403069	WITHOUT_CLASSIFICATION	9.516755969307791E-5	TEST
receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999395758168	WITHOUT_CLASSIFICATION	6.042418315757355E-8	TEST
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9999996092452864	WITHOUT_CLASSIFICATION	3.9075471361099755E-7	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999475330542864	WITHOUT_CLASSIFICATION	5.246694571352352E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999475330542864	WITHOUT_CLASSIFICATION	5.246694571352352E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999475330542864	WITHOUT_CLASSIFICATION	5.246694571352352E-5	TEST
arg0	WITHOUT_CLASSIFICATION	0.9997594997753979	WITHOUT_CLASSIFICATION	2.4050022460217732E-4	TEST
arg0	WITHOUT_CLASSIFICATION	0.9997594997753979	WITHOUT_CLASSIFICATION	2.4050022460217732E-4	TEST
arg1	WITHOUT_CLASSIFICATION	0.9998532753834851	WITHOUT_CLASSIFICATION	1.467246165148836E-4	TEST
args	WITHOUT_CLASSIFICATION	0.9999048324403069	WITHOUT_CLASSIFICATION	9.516755969307791E-5	TEST
get call site and thread context	WITHOUT_CLASSIFICATION	0.9999998590390817	WITHOUT_CLASSIFICATION	1.409609181808416E-7	TEST
get call site and thread context	WITHOUT_CLASSIFICATION	0.9999998590390817	WITHOUT_CLASSIFICATION	1.409609181808416E-7	TEST
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999996494154937	WITHOUT_CLASSIFICATION	3.5058450631175613E-7	TEST
evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999996494154937	WITHOUT_CLASSIFICATION	3.5058450631175613E-7	TEST
invoke	WITHOUT_CLASSIFICATION	0.9999591741312117	WITHOUT_CLASSIFICATION	4.08258687882881E-5	TEST
invoke	WITHOUT_CLASSIFICATION	0.9999591741312117	WITHOUT_CLASSIFICATION	4.08258687882881E-5	TEST
check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999991548464916	WITHOUT_CLASSIFICATION	8.451535083729408E-7	TEST
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999997623710744	WITHOUT_CLASSIFICATION	2.3762892561898755E-7	TEST
not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999997623710744	WITHOUT_CLASSIFICATION	2.3762892561898755E-7	TEST
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999995972396698	WITHOUT_CLASSIFICATION	4.0276033014919714E-7	TEST
thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999995972396698	WITHOUT_CLASSIFICATION	4.0276033014919714E-7	TEST
eval value for assignment	WITHOUT_CLASSIFICATION	0.9999992255153669	WITHOUT_CLASSIFICATION	7.744846331638657E-7	TEST
call site	WITHOUT_CLASSIFICATION	0.9999995566766946	WITHOUT_CLASSIFICATION	4.4332330533925417E-7	TEST
call site	WITHOUT_CLASSIFICATION	0.9999995566766946	WITHOUT_CLASSIFICATION	4.4332330533925417E-7	TEST
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999990361088043	WITHOUT_CLASSIFICATION	9.638911957576614E-7	TEST
check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999991925365481	WITHOUT_CLASSIFICATION	8.074634518402875E-7	TEST
eval value and save it	WITHOUT_CLASSIFICATION	0.9999989347665097	WITHOUT_CLASSIFICATION	1.0652334903666023E-6	TEST
self	WITHOUT_CLASSIFICATION	0.9999475330542864	WITHOUT_CLASSIFICATION	5.246694571352352E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999475330542864	WITHOUT_CLASSIFICATION	5.246694571352352E-5	TEST
depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999990361088043	WITHOUT_CLASSIFICATION	9.638911957576614E-7	TEST
receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999985130905311	WITHOUT_CLASSIFICATION	1.486909468798441E-6	TEST
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999953239215478	WITHOUT_CLASSIFICATION	4.67607845220982E-6	TEST
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999953239215478	WITHOUT_CLASSIFICATION	4.67607845220982E-6	TEST
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999953239215478	WITHOUT_CLASSIFICATION	4.67607845220982E-6	TEST
super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999993652190672	WITHOUT_CLASSIFICATION	6.347809327256442E-7	TEST
args	WITHOUT_CLASSIFICATION	0.9999048324403069	WITHOUT_CLASSIFICATION	9.516755969307791E-5	TEST
block	WITHOUT_CLASSIFICATION	0.9998828455984701	WITHOUT_CLASSIFICATION	1.1715440152987617E-4	TEST
block	WITHOUT_CLASSIFICATION	0.9998828455984701	WITHOUT_CLASSIFICATION	1.1715440152987617E-4	TEST
no args, no block	WITHOUT_CLASSIFICATION	0.9999970518389585	WITHOUT_CLASSIFICATION	2.9481610414001282E-6	TEST
no args, with block	WITHOUT_CLASSIFICATION	0.9999977218454161	WITHOUT_CLASSIFICATION	2.27815458393836E-6	TEST
with args, no block	WITHOUT_CLASSIFICATION	0.9999980880083279	WITHOUT_CLASSIFICATION	1.911991672110548E-6	TEST
with args, with block	WITHOUT_CLASSIFICATION	0.999988593118218	WITHOUT_CLASSIFICATION	1.140688178208263E-5	TEST
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999984401482495	WITHOUT_CLASSIFICATION	1.5598517505767149E-6	TEST
pop extra attr value	WITHOUT_CLASSIFICATION	0.9999991753388225	WITHOUT_CLASSIFICATION	8.246611775037777E-7	TEST
pop extra attr value	WITHOUT_CLASSIFICATION	0.9999991753388225	WITHOUT_CLASSIFICATION	8.246611775037777E-7	TEST
arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999999679384842	WITHOUT_CLASSIFICATION	3.206151573674988E-8	TEST
arg	WITHOUT_CLASSIFICATION	0.999801621286217	WITHOUT_CLASSIFICATION	1.983787137829969E-4	TEST
arg	WITHOUT_CLASSIFICATION	0.999801621286217	WITHOUT_CLASSIFICATION	1.983787137829969E-4	TEST
self	WITHOUT_CLASSIFICATION	0.9999475330542864	WITHOUT_CLASSIFICATION	5.246694571352352E-5	TEST
[adapter, tc]	WITHOUT_CLASSIFICATION	0.9999953239215478	WITHOUT_CLASSIFICATION	4.67607845220982E-6	TEST
args	WITHOUT_CLASSIFICATION	0.9999048324403069	WITHOUT_CLASSIFICATION	9.516755969307791E-5	TEST
block	WITHOUT_CLASSIFICATION	0.9998828455984701	WITHOUT_CLASSIFICATION	1.1715440152987617E-4	TEST
no args, no block	WITHOUT_CLASSIFICATION	0.9999970518389585	WITHOUT_CLASSIFICATION	2.9481610414001282E-6	TEST
no args, with block	WITHOUT_CLASSIFICATION	0.9999977218454161	WITHOUT_CLASSIFICATION	2.27815458393836E-6	TEST
with args, no block	WITHOUT_CLASSIFICATION	0.9999980880083279	WITHOUT_CLASSIFICATION	1.911991672110548E-6	TEST
with args, with block	WITHOUT_CLASSIFICATION	0.999988593118218	WITHOUT_CLASSIFICATION	1.140688178208263E-5	TEST
arg	WITHOUT_CLASSIFICATION	0.999801621286217	WITHOUT_CLASSIFICATION	1.983787137829969E-4	TEST
retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999940674960086	WITHOUT_CLASSIFICATION	5.932503991458998E-6	TEST
use numbered access method	WITHOUT_CLASSIFICATION	0.9999979935129938	WITHOUT_CLASSIFICATION	2.006487006177103E-6	TEST
retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999980108935614	WITHOUT_CLASSIFICATION	1.989106438535801E-6	TEST
add name to call site list	WITHOUT_CLASSIFICATION	0.9999993334891322	WITHOUT_CLASSIFICATION	6.665108678839217E-7	TEST
module is on top of stack	WITHOUT_CLASSIFICATION	0.999999322998323	WITHOUT_CLASSIFICATION	6.7700167701344E-7	TEST
build scope names string	WITHOUT_CLASSIFICATION	0.9999950368220952	WITHOUT_CLASSIFICATION	4.9631779048476094E-6	TEST
build descriptor string	WITHOUT_CLASSIFICATION	0.9999988603513492	WITHOUT_CLASSIFICATION	1.1396486507520439E-6	TEST
build descriptor string	WITHOUT_CLASSIFICATION	0.9999988603513492	WITHOUT_CLASSIFICATION	1.1396486507520439E-6	TEST
generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999984266613443	WITHOUT_CLASSIFICATION	1.5733386556632782E-6	TEST
generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999984971179385	WITHOUT_CLASSIFICATION	1.5028820613815761E-6	TEST
generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999994809044995	WITHOUT_CLASSIFICATION	5.190955005151561E-7	TEST
generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999986328681073	WITHOUT_CLASSIFICATION	1.3671318927683644E-6	TEST
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999988114897049	WITHOUT_CLASSIFICATION	1.1885102951177798E-6	TEST
generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999988114897049	WITHOUT_CLASSIFICATION	1.1885102951177798E-6	TEST
generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999950353254884	WITHOUT_CLASSIFICATION	4.96467451162658E-6	TEST
generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999933410002991	WITHOUT_CLASSIFICATION	6.658999700835424E-6	TEST
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999992496914082	WITHOUT_CLASSIFICATION	7.503085918714257E-7	TEST
generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999992496914082	WITHOUT_CLASSIFICATION	7.503085918714257E-7	TEST
generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999945866665667	WITHOUT_CLASSIFICATION	5.413333433225611E-6	TEST
generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999989065905753	WITHOUT_CLASSIFICATION	1.0934094247407312E-6	TEST
adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999984401482495	WITHOUT_CLASSIFICATION	1.5598517505767149E-6	TEST
use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999982381869834	WITHOUT_CLASSIFICATION	1.7618130165941155E-6	TEST
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999997116683511	WITHOUT_CLASSIFICATION	2.883316487924147E-7	TEST
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999976126678154	WITHOUT_CLASSIFICATION	2.3873321846572042E-6	TEST
No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999996025250778	WITHOUT_CLASSIFICATION	3.9747492215431917E-7	TEST
load Object under value	WITHOUT_CLASSIFICATION	0.9999972606403622	WITHOUT_CLASSIFICATION	2.739359637773816E-6	TEST
put under object array already present	WITHOUT_CLASSIFICATION	0.9999991798470574	WITHOUT_CLASSIFICATION	8.201529425624412E-7	TEST
if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999699479876	WITHOUT_CLASSIFICATION	3.005201244803238E-8	TEST
This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999994969063991	WITHOUT_CLASSIFICATION	5.030936009569297E-7	TEST
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999815313367	WITHOUT_CLASSIFICATION	1.8468663235073E-8	TEST
if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999815313367	WITHOUT_CLASSIFICATION	1.8468663235073E-8	TEST
brute force construction inline	WITHOUT_CLASSIFICATION	0.9999979183709832	WITHOUT_CLASSIFICATION	2.081629016818778E-6	TEST
brute force construction inline	WITHOUT_CLASSIFICATION	0.9999979183709832	WITHOUT_CLASSIFICATION	2.081629016818778E-6	TEST
use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999370052933	WITHOUT_CLASSIFICATION	6.299470675486389E-8	TEST
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997978966833	WITHOUT_CLASSIFICATION	2.0210331664891194E-7	TEST
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997978966833	WITHOUT_CLASSIFICATION	2.0210331664891194E-7	TEST
call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997978966833	WITHOUT_CLASSIFICATION	2.0210331664891194E-7	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999865539182857	WITHOUT_CLASSIFICATION	1.3446081714331575E-5	TEST
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999995959250388	WITHOUT_CLASSIFICATION	4.0407496108682817E-7	TEST
dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999995959250388	WITHOUT_CLASSIFICATION	4.0407496108682817E-7	TEST
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999997267743767	WITHOUT_CLASSIFICATION	2.7322562329132896E-7	TEST
check the condition	WITHOUT_CLASSIFICATION	0.9999994865696109	WITHOUT_CLASSIFICATION	5.134303891329652E-7	TEST
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999973216797327	WITHOUT_CLASSIFICATION	2.6783202673054907E-6	TEST
skip catch block	WITHOUT_CLASSIFICATION	0.9999986418934608	WITHOUT_CLASSIFICATION	1.3581065391849715E-6	TEST
catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999985209110289	WITHOUT_CLASSIFICATION	1.4790889710394483E-6	TEST
next jump	WITHOUT_CLASSIFICATION	0.9999971274655457	WITHOUT_CLASSIFICATION	2.8725344542586918E-6	TEST
exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9996557506956818	WITHOUT_CLASSIFICATION	3.4424930431819275E-4	TEST
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999806366759246	WITHOUT_CLASSIFICATION	1.9363324075436558E-5	TEST
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999806366759246	WITHOUT_CLASSIFICATION	1.9363324075436558E-5	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999865539182857	WITHOUT_CLASSIFICATION	1.3446081714331575E-5	TEST
clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999997267743767	WITHOUT_CLASSIFICATION	2.7322562329132896E-7	TEST
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999996862918009	WITHOUT_CLASSIFICATION	3.1370819911812404E-7	TEST
check the condition	WITHOUT_CLASSIFICATION	0.9999994865696109	WITHOUT_CLASSIFICATION	5.134303891329652E-7	TEST
NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999973216797327	WITHOUT_CLASSIFICATION	2.6783202673054907E-6	TEST
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999998255546607	WITHOUT_CLASSIFICATION	1.744453392467895E-7	TEST
break jump	WITHOUT_CLASSIFICATION	0.9999967011303403	WITHOUT_CLASSIFICATION	3.29886965972842E-6	TEST
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999947138811932	WITHOUT_CLASSIFICATION	5.286118806800353E-6	TEST
[reg]	WITHOUT_CLASSIFICATION	0.9998236490413669	WITHOUT_CLASSIFICATION	1.7635095863315938E-4	TEST
for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999964402952285	WITHOUT_CLASSIFICATION	3.559704771520075E-6	TEST
inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999998367978723	WITHOUT_CLASSIFICATION	1.6320212776935478E-7	TEST
inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999998499157846	WITHOUT_CLASSIFICATION	1.5008421542090853E-7	TEST
synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999998255546607	WITHOUT_CLASSIFICATION	1.744453392467895E-7	TEST
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999839357524795	WITHOUT_CLASSIFICATION	1.6064247520485746E-4	TEST
store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999839357524795	WITHOUT_CLASSIFICATION	1.6064247520485746E-4	TEST
if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999893775950454	WITHOUT_CLASSIFICATION	1.0622404954718712E-5	TEST
retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.999999950689538	WITHOUT_CLASSIFICATION	4.93104620585734E-8	TEST
any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999757460056778	WITHOUT_CLASSIFICATION	2.4253994322067702E-5	TEST
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999984666665569	WITHOUT_CLASSIFICATION	1.5333334431029457E-5	TEST
restore the original exception	WITHOUT_CLASSIFICATION	0.9999935041752532	WITHOUT_CLASSIFICATION	6.4958247466757615E-6	TEST
Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999977388424145	WITHOUT_CLASSIFICATION	2.2611575855547183E-6	TEST
rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999992255236623	WITHOUT_CLASSIFICATION	7.744763376964092E-7	TEST
Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999993597960904	WITHOUT_CLASSIFICATION	6.402039094975404E-7	TEST
inside a loop, break out of it go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999996287023977	WITHOUT_CLASSIFICATION	3.7129760232173814E-7	TEST
false zero	WITHOUT_CLASSIFICATION	0.9999988380415381	WITHOUT_CLASSIFICATION	1.161958461923807E-6	TEST
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999927838720489	WITHOUT_CLASSIFICATION	7.216127951061094E-6	TEST
and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999984666665569	WITHOUT_CLASSIFICATION	1.5333334431029457E-5	TEST
restore the original exception	WITHOUT_CLASSIFICATION	0.9999935041752532	WITHOUT_CLASSIFICATION	6.4958247466757615E-6	TEST
retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999999517293966	WITHOUT_CLASSIFICATION	4.827060339559115E-8	TEST
push false	WITHOUT_CLASSIFICATION	0.999997763597811	WITHOUT_CLASSIFICATION	2.2364021890152137E-6	TEST
method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999998240845477	WITHOUT_CLASSIFICATION	1.7591545227255463E-7	TEST
method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999975520628792	WITHOUT_CLASSIFICATION	2.447937120832597E-6	TEST
EQ == 0 (i.e. false) [C]	WITHOUT_CLASSIFICATION	0.9999811955524893	WITHOUT_CLASSIFICATION	1.8804447510636412E-5	TEST
[C, C] [C, C, String] [C, null|C]	WITHOUT_CLASSIFICATION	0.9999842853633423	WITHOUT_CLASSIFICATION	1.5714636657786494E-5	TEST
[C]	WITHOUT_CLASSIFICATION	0.9993244145971776	WITHOUT_CLASSIFICATION	6.755854028223832E-4	TEST
push true	WITHOUT_CLASSIFICATION	0.9999978090815852	WITHOUT_CLASSIFICATION	2.1909184147522023E-6	TEST
EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999812696616186	WITHOUT_CLASSIFICATION	1.8730338381400057E-5	TEST
[?, ?] [?, boolean]	WITHOUT_CLASSIFICATION	0.9999923764623078	WITHOUT_CLASSIFICATION	7.623537692216241E-6	TEST
[RubyModule] [RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999988457772875	WITHOUT_CLASSIFICATION	1.1542227124270451E-6	TEST
[boolean]	WITHOUT_CLASSIFICATION	0.9999824499819768	WITHOUT_CLASSIFICATION	1.7550018023190294E-5	TEST
no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999994954754045	WITHOUT_CLASSIFICATION	5.045245955793394E-7	TEST
but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999988218523203	WITHOUT_CLASSIFICATION	1.1781476797031928E-6	TEST
we re-set self to the class, but store the old self in a temporary local variable this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999930584189662	WITHOUT_CLASSIFICATION	6.941581033772367E-6	TEST
set self to the class	WITHOUT_CLASSIFICATION	0.9999996350190491	WITHOUT_CLASSIFICATION	3.6498095094013487E-7	TEST
CLASS BODY	WITHOUT_CLASSIFICATION	0.9999118578236639	WITHOUT_CLASSIFICATION	8.814217633605207E-5	TEST
static scope	WITHOUT_CLASSIFICATION	0.9999967916189098	WITHOUT_CLASSIFICATION	3.2083810902023687E-6	TEST
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.999999629521884	WITHOUT_CLASSIFICATION	3.704781159203143E-7	TEST
new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999989012559374	WITHOUT_CLASSIFICATION	1.0987440626489584E-6	TEST
CLASS BODY	WITHOUT_CLASSIFICATION	0.9999118578236639	WITHOUT_CLASSIFICATION	8.814217633605207E-5	TEST
static scope	WITHOUT_CLASSIFICATION	0.9999967916189098	WITHOUT_CLASSIFICATION	3.2083810902023687E-6	TEST
Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.999999629521884	WITHOUT_CLASSIFICATION	3.704781159203143E-7	TEST
finally with exception	WITHOUT_CLASSIFICATION	0.999995403356301	WITHOUT_CLASSIFICATION	4.596643699020786E-6	TEST
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999997590222274	WITHOUT_CLASSIFICATION	2.409777725454741E-7	TEST
otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999999531696949	WITHOUT_CLASSIFICATION	4.6830305120776394E-8	TEST
original exception is on stack	WITHOUT_CLASSIFICATION	0.9999947220619877	WITHOUT_CLASSIFICATION	5.277938012329156E-6	TEST
RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999892762973652	WITHOUT_CLASSIFICATION	1.0723702634751075E-5	TEST
updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999993382290593	WITHOUT_CLASSIFICATION	6.617709407549298E-7	TEST
callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999999546621285	WITHOUT_CLASSIFICATION	4.5337871462614304E-8	TEST
prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999999083769208	WITHOUT_CLASSIFICATION	9.162307917730329E-8	TEST
script object	WITHOUT_CLASSIFICATION	0.9999980082482023	WITHOUT_CLASSIFICATION	1.991751797661355E-6	TEST
arities	WITHOUT_CLASSIFICATION	0.9999927630717403	WITHOUT_CLASSIFICATION	7.236928259619926E-6	TEST
TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9976770458980609	WITHOUT_CLASSIFICATION	0.0023229541019390565	TEST
we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999988334220528	WITHOUT_CLASSIFICATION	1.1665779472677813E-6	TEST
we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999990309590998	WITHOUT_CLASSIFICATION	9.690409002230368E-7	TEST
checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.999999512302993	WITHOUT_CLASSIFICATION	4.87697007009556E-7	TEST
expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9979286644647449	WITHOUT_CLASSIFICATION	0.0020713355352550878	TEST
normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999930794203428	WITHOUT_CLASSIFICATION	6.9205796573010885E-6	TEST
last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999998229881267	WITHOUT_CLASSIFICATION	1.770118733086544E-7	TEST
do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999986961139378	WITHOUT_CLASSIFICATION	1.3038860622409419E-6	TEST
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999982657388242	WITHOUT_CLASSIFICATION	1.7342611758138584E-6	TEST
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999986584411533	WITHOUT_CLASSIFICATION	1.3415588467426874E-6	TEST
extract item from array	WITHOUT_CLASSIFICATION	0.9999956321563748	WITHOUT_CLASSIFICATION	4.367843625194763E-6	TEST
index for the item	WITHOUT_CLASSIFICATION	0.9999982279935221	WITHOUT_CLASSIFICATION	1.7720064779471355E-6	TEST
index for the item	WITHOUT_CLASSIFICATION	0.9999982279935221	WITHOUT_CLASSIFICATION	1.7720064779471355E-6	TEST
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999958170967068	WITHOUT_CLASSIFICATION	4.182903293179634E-6	TEST
prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999958170967068	WITHOUT_CLASSIFICATION	4.182903293179634E-6	TEST
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999964457175218	WITHOUT_CLASSIFICATION	3.5542824782017897E-6	TEST
next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999964457175218	WITHOUT_CLASSIFICATION	3.5542824782017897E-6	TEST
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999984604426246	WITHOUT_CLASSIFICATION	1.5395573754005967E-6	TEST
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999999911448625	WITHOUT_CLASSIFICATION	8.855137503358345E-8	TEST
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.999999871959471	WITHOUT_CLASSIFICATION	1.280405288316972E-7	TEST
if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999987963078736	WITHOUT_CLASSIFICATION	1.203692126500413E-6	TEST
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999982096392008	WITHOUT_CLASSIFICATION	1.7903607990886264E-6	TEST
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999996123657282	WITHOUT_CLASSIFICATION	3.876342718743917E-7	TEST
first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999985554407744	WITHOUT_CLASSIFICATION	1.444559225524007E-6	TEST
then optional args	WITHOUT_CLASSIFICATION	0.999999520734879	WITHOUT_CLASSIFICATION	4.792651210744783E-7	TEST
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999806366759246	WITHOUT_CLASSIFICATION	1.9363324075436558E-5	TEST
now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999984604426246	WITHOUT_CLASSIFICATION	1.5395573754005967E-6	TEST
otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999999911448625	WITHOUT_CLASSIFICATION	8.855137503358345E-8	TEST
pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.999999871959471	WITHOUT_CLASSIFICATION	1.280405288316972E-7	TEST
assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999982096392008	WITHOUT_CLASSIFICATION	1.7903607990886264E-6	TEST
block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999996123657282	WITHOUT_CLASSIFICATION	3.876342718743917E-7	TEST
if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999970168673854	WITHOUT_CLASSIFICATION	2.983132614512911E-6	TEST
finally, post args	WITHOUT_CLASSIFICATION	0.9999993867272021	WITHOUT_CLASSIFICATION	6.132727978337574E-7	TEST
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999936999674219	WITHOUT_CLASSIFICATION	6.30003257808152E-6	TEST
not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999936999674219	WITHOUT_CLASSIFICATION	6.30003257808152E-6	TEST
unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999985529364056	WITHOUT_CLASSIFICATION	1.4470635944071983E-6	TEST
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999995653002675	WITHOUT_CLASSIFICATION	4.346997325142219E-7	TEST
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999973470832171	WITHOUT_CLASSIFICATION	2.652916782971102E-6	TEST
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999990213497344	WITHOUT_CLASSIFICATION	9.786502656585562E-7	TEST
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999990213497344	WITHOUT_CLASSIFICATION	9.786502656585562E-7	TEST
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999970365810309	WITHOUT_CLASSIFICATION	2.9634189690807167E-6	TEST
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999957446445779	WITHOUT_CLASSIFICATION	4.2553554221819E-6	TEST
store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999977880317019	WITHOUT_CLASSIFICATION	2.2119682981170525E-6	TEST
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999998580241901	WITHOUT_CLASSIFICATION	1.4197580980918336E-7	TEST
return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999039823935	WITHOUT_CLASSIFICATION	9.601760654998451E-8	TEST
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999946444795185	WITHOUT_CLASSIFICATION	5.35552048151468E-6	TEST
return last value from execution	WITHOUT_CLASSIFICATION	0.9999999480326965	WITHOUT_CLASSIFICATION	5.196730342199452E-8	TEST
end of variable scope	WITHOUT_CLASSIFICATION	0.9999931827030855	WITHOUT_CLASSIFICATION	6.817296914548661E-6	TEST
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999701247033865	WITHOUT_CLASSIFICATION	2.9875296613389152E-5	TEST
load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999986994711247	WITHOUT_CLASSIFICATION	1.300528875200751E-6	TEST
normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999997822136877	WITHOUT_CLASSIFICATION	2.1778631227869013E-7	TEST
declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999970365810309	WITHOUT_CLASSIFICATION	2.9634189690807167E-6	TEST
class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999957446445779	WITHOUT_CLASSIFICATION	4.2553554221819E-6	TEST
load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999998580241901	WITHOUT_CLASSIFICATION	1.4197580980918336E-7	TEST
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999735241005	WITHOUT_CLASSIFICATION	2.6475899463703283E-8	TEST
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999973470832171	WITHOUT_CLASSIFICATION	2.652916782971102E-6	TEST
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999973470832171	WITHOUT_CLASSIFICATION	2.652916782971102E-6	TEST
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999927838720489	WITHOUT_CLASSIFICATION	7.216127951061094E-6	TEST
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999927838720489	WITHOUT_CLASSIFICATION	7.216127951061094E-6	TEST
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999991744463503	WITHOUT_CLASSIFICATION	8.255536495662636E-7	TEST
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999991744463503	WITHOUT_CLASSIFICATION	8.255536495662636E-7	TEST
store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999983822756107	WITHOUT_CLASSIFICATION	1.6177243893889603E-6	TEST
if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999998256758307	WITHOUT_CLASSIFICATION	1.7432416934450203E-7	TEST
fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999990616443883	WITHOUT_CLASSIFICATION	9.383556117775793E-7	TEST
default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999878891835081	WITHOUT_CLASSIFICATION	1.2110816491830404E-5	TEST
store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999900410813471	WITHOUT_CLASSIFICATION	9.958918652923977E-6	TEST
store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999931882614146	WITHOUT_CLASSIFICATION	6.8117385853318294E-6	TEST
in 1.8 mode, this will be a RubyArray containing the arguments in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999992549318876	WITHOUT_CLASSIFICATION	7.450681123501737E-7	TEST
no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999995035396457	WITHOUT_CLASSIFICATION	4.964603542360732E-7	TEST
for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.999999674320435	WITHOUT_CLASSIFICATION	3.2567956504708137E-7	TEST
set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999994859254379	WITHOUT_CLASSIFICATION	5.140745621223063E-7	TEST
if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999990359923486	WITHOUT_CLASSIFICATION	9.640076514026446E-7	TEST
verify the class	WITHOUT_CLASSIFICATION	0.9999991206091056	WITHOUT_CLASSIFICATION	8.79390894473542E-7	TEST
create dir if necessary	WITHOUT_CLASSIFICATION	0.9999981802385433	WITHOUT_CLASSIFICATION	1.8197614568225584E-6	TEST
Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.999999768318817	WITHOUT_CLASSIFICATION	2.316811829635271E-7	TEST
add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999996415865147	WITHOUT_CLASSIFICATION	3.5841348538880806E-7	TEST
thread context	WITHOUT_CLASSIFICATION	0.9999965915308967	WITHOUT_CLASSIFICATION	3.408469103344899E-6	TEST
line number	WITHOUT_CLASSIFICATION	0.9999831288048182	WITHOUT_CLASSIFICATION	1.687119518185323E-5	TEST
invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999998843790628	WITHOUT_CLASSIFICATION	1.1562093713341694E-7	TEST
load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999999833571976	WITHOUT_CLASSIFICATION	1.6642802443869916E-8	TEST
return last value from execution	WITHOUT_CLASSIFICATION	0.9999999480326965	WITHOUT_CLASSIFICATION	5.196730342199452E-8	TEST
method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999701247033865	WITHOUT_CLASSIFICATION	2.9875296613389152E-5	TEST
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999997824711115	WITHOUT_CLASSIFICATION	2.1752888835895515E-7	TEST
block	WITHOUT_CLASSIFICATION	0.9998828455984701	WITHOUT_CLASSIFICATION	1.1715440152987617E-4	TEST
block	WITHOUT_CLASSIFICATION	0.9998828455984701	WITHOUT_CLASSIFICATION	1.1715440152987617E-4	TEST
we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999735241005	WITHOUT_CLASSIFICATION	2.6475899463703283E-8	TEST
chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999973470832171	WITHOUT_CLASSIFICATION	2.652916782971102E-6	TEST
load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999927838720489	WITHOUT_CLASSIFICATION	7.216127951061094E-6	TEST
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999991744463503	WITHOUT_CLASSIFICATION	8.255536495662636E-7	TEST
add Script#run impl, used for running this script with a specified threadcontext and self root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999991785670878	WITHOUT_CLASSIFICATION	8.214329123205021E-7	TEST
add main impl, used for detached or command-line execution of this script with a new runtime root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999859142324246	WITHOUT_CLASSIFICATION	1.4085767575515331E-5	TEST
construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999986607338204	WITHOUT_CLASSIFICATION	1.3392661796610896E-6	TEST
JRUBY-3014: make __FILE__ dynamically determined at load time, but we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999997769842829	WITHOUT_CLASSIFICATION	2.2301571718689422E-7	TEST
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999997749484655	WITHOUT_CLASSIFICATION	2.2505153457331862E-7	TEST
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999997749484655	WITHOUT_CLASSIFICATION	2.2505153457331862E-7	TEST
lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999986553559232	WITHOUT_CLASSIFICATION	1.3446440767486511E-6	TEST
boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999990297160518	WITHOUT_CLASSIFICATION	9.70283948204305E-7	TEST
invoke static __file__	WITHOUT_CLASSIFICATION	0.9999996083513425	WITHOUT_CLASSIFICATION	3.916486575305592E-7	TEST
exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999980038257942	WITHOUT_CLASSIFICATION	1.996174205844912E-6	TEST
declare the field	WITHOUT_CLASSIFICATION	0.9999993327481025	WITHOUT_CLASSIFICATION	6.672518974985251E-7	TEST
declare the field	WITHOUT_CLASSIFICATION	0.9999993327481025	WITHOUT_CLASSIFICATION	6.672518974985251E-7	TEST
not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999983116025811	WITHOUT_CLASSIFICATION	1.6883974189033907E-6	TEST
normal closure	WITHOUT_CLASSIFICATION	0.9999992859267566	WITHOUT_CLASSIFICATION	7.140732434396315E-7	TEST
end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999958211700922	WITHOUT_CLASSIFICATION	4.178829907770896E-6	TEST
we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999887605827603	WITHOUT_CLASSIFICATION	1.1239417239645573E-5	TEST
handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999965194660265	WITHOUT_CLASSIFICATION	3.48053397340796E-6	TEST
jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999998408444541	WITHOUT_CLASSIFICATION	1.5915554581821119E-7	TEST
Ruby name	WITHOUT_CLASSIFICATION	0.999988314098977	WITHOUT_CLASSIFICATION	1.1685901022960074E-5	TEST
Accumulate call arguments	WITHOUT_CLASSIFICATION	0.999999705986732	WITHOUT_CLASSIFICATION	2.9401326798173365E-7	TEST
Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999968978462426	WITHOUT_CLASSIFICATION	3.102153757472273E-6	TEST
We need to ensure that the variable names generated here cannot conflict with ruby variable names! Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.98627114736719	WITHOUT_CLASSIFICATION	0.013728852632810035	TEST
Does this method define code? Default is yes -- which basically leads to pessimistic but safe optimizations But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999996089132771	WITHOUT_CLASSIFICATION	3.910867228735235E-7	TEST
Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999593874551943	WITHOUT_CLASSIFICATION	4.0612544805659574E-5	TEST
NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner with outer loops encountered before inner loops, and inner loops finished before outer ones. So, we can keep track of loops in a loop stack which keeps track of loops as they are encountered. This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999996333999	WITHOUT_CLASSIFICATION	3.66600074931564E-10	TEST
Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999995914359102	WITHOUT_CLASSIFICATION	4.085640898122154E-7	TEST
Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9997893077005344	WITHOUT_CLASSIFICATION	2.106922994655993E-4	TEST
_lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999996314900823	WITHOUT_CLASSIFICATION	3.685099176652049E-7	TEST
List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999825526566891	WITHOUT_CLASSIFICATION	1.744734331082036E-5	TEST
Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999996927257263	WITHOUT_CLASSIFICATION	3.072742736707157E-7	TEST
Insert nesting level to ensure variable names don't conflict across nested scopes! i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999467881094575	WITHOUT_CLASSIFICATION	5.321189054251118E-5	TEST
get "self"	WITHOUT_CLASSIFICATION	0.9999975225036253	WITHOUT_CLASSIFICATION	2.477496374648972E-6	TEST
variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999073744421527	WITHOUT_CLASSIFICATION	9.262555784717312E-5	TEST
inline script	WITHOUT_CLASSIFICATION	0.9999984480413148	WITHOUT_CLASSIFICATION	1.5519586852222003E-6	TEST
inline script	WITHOUT_CLASSIFICATION	0.9999984480413148	WITHOUT_CLASSIFICATION	1.5519586852222003E-6	TEST
This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999999503071716	WITHOUT_CLASSIFICATION	4.9692828479292374E-8	TEST
Build the class body!	WITHOUT_CLASSIFICATION	0.999999537857487	WITHOUT_CLASSIFICATION	4.6214251304614756E-7	TEST
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999995813896809	WITHOUT_CLASSIFICATION	4.186103190854868E-7	TEST
unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999995813896809	WITHOUT_CLASSIFICATION	4.186103190854868E-7	TEST
SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999838431672319	WITHOUT_CLASSIFICATION	1.6156832768173965E-5	TEST
Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999990347802195	WITHOUT_CLASSIFICATION	9.652197806219372E-7	TEST
done done done done	WITHOUT_CLASSIFICATION	0.9999170350285302	WITHOUT_CLASSIFICATION	8.296497146979144E-5	TEST
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999998390481423	WITHOUT_CLASSIFICATION	1.60951857779591E-7	TEST
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999998390481423	WITHOUT_CLASSIFICATION	1.60951857779591E-7	TEST
This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999997555243458	WITHOUT_CLASSIFICATION	2.4447565411852097E-7	TEST
build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999513402654	WITHOUT_CLASSIFICATION	4.8659734479010646E-8	TEST
build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999678281206	WITHOUT_CLASSIFICATION	3.2171879354961594E-8	TEST
Value of the last expression in the block	WITHOUT_CLASSIFICATION	0.9999999314493029	WITHOUT_CLASSIFICATION	6.855069710275248E-8	TEST
If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999999231814946	WITHOUT_CLASSIFICATION	7.68185054542519E-8	TEST
get the incoming case value	WITHOUT_CLASSIFICATION	0.9999995708576	WITHOUT_CLASSIFICATION	4.2914239999336007E-7	TEST
the CASE instruction	WITHOUT_CLASSIFICATION	0.9999998553543545	WITHOUT_CLASSIFICATION	1.446456454958066E-7	TEST
lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999755077713768	WITHOUT_CLASSIFICATION	2.44922286232941E-5	TEST
build each "when"	WITHOUT_CLASSIFICATION	0.9999975500394307	WITHOUT_CLASSIFICATION	2.449960569213132E-6	TEST
multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999993399202839	WITHOUT_CLASSIFICATION	6.600797161515508E-7	TEST
build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999829814222311	WITHOUT_CLASSIFICATION	1.7018577768974745E-5	TEST
now emit bodies	WITHOUT_CLASSIFICATION	0.9999972277062228	WITHOUT_CLASSIFICATION	2.772293777179003E-6	TEST
close it out	WITHOUT_CLASSIFICATION	0.9999985023139167	WITHOUT_CLASSIFICATION	1.497686083266181E-6	TEST
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999998907383546	WITHOUT_CLASSIFICATION	1.0926164540074008E-6	TEST
Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999958715411168	WITHOUT_CLASSIFICATION	4.12845888319501E-6	TEST
Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999998360213757	WITHOUT_CLASSIFICATION	1.6397862437967026E-7	TEST
1. Load the module first (lhs of node) 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999349621624	WITHOUT_CLASSIFICATION	6.503783754696914E-8	TEST
Build IR for args	WITHOUT_CLASSIFICATION	0.9999982253792142	WITHOUT_CLASSIFICATION	1.7746207857338706E-6	TEST
Build IR for body	WITHOUT_CLASSIFICATION	0.9999935616644344	WITHOUT_CLASSIFICATION	6.438335565585101E-6	TEST
if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999975622711165	WITHOUT_CLASSIFICATION	2.437728883495191E-6	TEST
Instance method	WITHOUT_CLASSIFICATION	0.9999992371294859	WITHOUT_CLASSIFICATION	7.628705141076166E-7	TEST
Class method	WITHOUT_CLASSIFICATION	0.9999958580469445	WITHOUT_CLASSIFICATION	4.141953055485563E-6	TEST
Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999970750575403	WITHOUT_CLASSIFICATION	2.92494245957783E-6	TEST
Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999964195504585	WITHOUT_CLASSIFICATION	3.580449541632053E-6	TEST
Now for the rest	WITHOUT_CLASSIFICATION	0.9999710314261535	WITHOUT_CLASSIFICATION	2.8968573846499308E-5	TEST
Jump to 'l' if this arg is not null. If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999992509376943	WITHOUT_CLASSIFICATION	7.490623057971418E-7	TEST
This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999702927098164	WITHOUT_CLASSIFICATION	2.970729018359899E-5	TEST
Create a new closure context	WITHOUT_CLASSIFICATION	0.9999981023329422	WITHOUT_CLASSIFICATION	1.89766705790156E-6	TEST
Build args	WITHOUT_CLASSIFICATION	0.9999977627832125	WITHOUT_CLASSIFICATION	2.2372167875594144E-6	TEST
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999670230038	WITHOUT_CLASSIFICATION	3.2976996159608466E-8	TEST
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999981572577	WITHOUT_CLASSIFICATION	1.842742306936288E-9	TEST
By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999998907383546	WITHOUT_CLASSIFICATION	1.0926164540074008E-6	TEST
Create a new closure context	WITHOUT_CLASSIFICATION	0.9999981023329422	WITHOUT_CLASSIFICATION	1.89766705790156E-6	TEST
Build args	WITHOUT_CLASSIFICATION	0.9999977627832125	WITHOUT_CLASSIFICATION	2.2372167875594144E-6	TEST
Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999981572577	WITHOUT_CLASSIFICATION	1.842742306936288E-9	TEST
Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999920944177624	WITHOUT_CLASSIFICATION	7.905582237574681E-6	TEST
Build the new module	WITHOUT_CLASSIFICATION	0.9999950912150525	WITHOUT_CLASSIFICATION	4.90878494753374E-6	TEST
Build the module body	WITHOUT_CLASSIFICATION	0.9999963540225374	WITHOUT_CLASSIFICATION	3.645977462584031E-6	TEST
First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999959356025441	WITHOUT_CLASSIFICATION	4.064397455952343E-6	TEST
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999898787609592	WITHOUT_CLASSIFICATION	1.0121239040708878E-5	TEST
If a closure, the next is simply a return from the closure! If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.999999994483653	WITHOUT_CLASSIFICATION	5.516347124344255E-9	TEST
get attr	WITHOUT_CLASSIFICATION	0.9999975410445584	WITHOUT_CLASSIFICATION	2.458955441561059E-6	TEST
call operator	WITHOUT_CLASSIFICATION	0.9999982721075074	WITHOUT_CLASSIFICATION	1.727892492606925E-6	TEST
set attr	WITHOUT_CLASSIFICATION	0.9999990710768345	WITHOUT_CLASSIFICATION	9.289231654393794E-7	TEST
Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, false, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9999992657500549	WITHOUT_CLASSIFICATION	7.342499450439913E-7	TEST
This does the assignment!	WITHOUT_CLASSIFICATION	0.9999881172389748	WITHOUT_CLASSIFICATION	1.1882761025070604E-5	TEST
This does the assignment!	WITHOUT_CLASSIFICATION	0.9999881172389748	WITHOUT_CLASSIFICATION	1.1882761025070604E-5	TEST
if v1 is defined and true, we are done!	WITHOUT_CLASSIFICATION	0.9999982319201041	WITHOUT_CLASSIFICATION	1.7680798959814807E-6	TEST
build first node only and return true	WITHOUT_CLASSIFICATION	0.999999973955597	WITHOUT_CLASSIFICATION	2.6044402949649613E-8	TEST
build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999787832576	WITHOUT_CLASSIFICATION	2.1216742363722804E-8	TEST
Top-level script!	WITHOUT_CLASSIFICATION	0.999998442197822	WITHOUT_CLASSIFICATION	1.5578021780332308E-6	TEST
we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.999999886338943	WITHOUT_CLASSIFICATION	1.1366105709493672E-7	TEST
----------- Private Interface ------------	WITHOUT_CLASSIFICATION	0.9999982051592302	WITHOUT_CLASSIFICATION	1.7948407697866695E-6	TEST
What handles warnings	WITHOUT_CLASSIFICATION	0.9999995025407772	WITHOUT_CLASSIFICATION	4.974592227737153E-7	TEST
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999878764309	WITHOUT_CLASSIFICATION	1.2123569104825704E-8	TEST
For closures, a redo is a jump to the beginning of the closure For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999998155651949	WITHOUT_CLASSIFICATION	1.8443480513553091E-7	TEST
The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999991610928	WITHOUT_CLASSIFICATION	8.389071968216325E-10	TEST
Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999993158345857	WITHOUT_CLASSIFICATION	6.841654142273209E-7	TEST
Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999990856983	WITHOUT_CLASSIFICATION	9.14301729029154E-10	TEST
------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999963008900941	WITHOUT_CLASSIFICATION	3.6991099060234137E-6	TEST
value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999984405874739	WITHOUT_CLASSIFICATION	1.5594125260090033E-6	TEST
alu operations	WITHOUT_CLASSIFICATION	0.9999989237100981	WITHOUT_CLASSIFICATION	1.0762899018491953E-6	TEST
method handle, arg receive, return value, and call instructions	WITHOUT_CLASSIFICATION	0.9999999828226085	WITHOUT_CLASSIFICATION	1.7177391498866375E-8	TEST
closure instructions	WITHOUT_CLASSIFICATION	0.9999997586904622	WITHOUT_CLASSIFICATION	2.413095377850523E-7	TEST
eval instructions	WITHOUT_CLASSIFICATION	0.9999996957875804	WITHOUT_CLASSIFICATION	3.04212419607889E-7	TEST
def instructions	WITHOUT_CLASSIFICATION	0.9999996241322502	WITHOUT_CLASSIFICATION	3.7586774977508775E-7	TEST
exception instructions	WITHOUT_CLASSIFICATION	0.999998357849388	WITHOUT_CLASSIFICATION	1.6421506120829806E-6	TEST
Loads	WITHOUT_CLASSIFICATION	0.9999608504766042	WITHOUT_CLASSIFICATION	3.914952339571983E-5	TEST
Stores	WITHOUT_CLASSIFICATION	0.9999879016003849	WITHOUT_CLASSIFICATION	1.2098399615109383E-5	TEST
jump and branch operations	WITHOUT_CLASSIFICATION	0.9999994717243736	WITHOUT_CLASSIFICATION	5.282756264144904E-7	TEST
others	WITHOUT_CLASSIFICATION	0.9999896947603871	WITHOUT_CLASSIFICATION	1.0305239612929386E-5	TEST
a case/when branch	WITHOUT_CLASSIFICATION	0.9999964055520241	WITHOUT_CLASSIFICATION	3.594447976036509E-6	TEST
optimization guards	WITHOUT_CLASSIFICATION	0.9999965902383933	WITHOUT_CLASSIFICATION	3.409761606633989E-6	TEST
By default, call instructions cannot be deleted even if their results aren't used by anyone unless we know more about what the call is, what it does, etc. Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999920617892946	WITHOUT_CLASSIFICATION	7.938210705385617E-6	TEST
Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999761062238	WITHOUT_CLASSIFICATION	2.389377621098898E-8	TEST
scripts	WITHOUT_CLASSIFICATION	0.9999717636883695	WITHOUT_CLASSIFICATION	2.823631163057656E-5	TEST
scripts and modules	WITHOUT_CLASSIFICATION	0.9999996801362374	WITHOUT_CLASSIFICATION	3.1986376258954536E-7	TEST
scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999997313623075	WITHOUT_CLASSIFICATION	2.686376926246137E-7	TEST
methods and closures	WITHOUT_CLASSIFICATION	0.9999998699692509	WITHOUT_CLASSIFICATION	1.300307491497137E-7	TEST
create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999533512642055	WITHOUT_CLASSIFICATION	4.6648735794508057E-5	TEST
create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999465566601037	WITHOUT_CLASSIFICATION	5.344333989621456E-5	TEST
Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999957752158077	WITHOUT_CLASSIFICATION	4.224784192283364E-6	TEST
Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999745036878468	WITHOUT_CLASSIFICATION	2.549631215318483E-5	TEST
Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999892945324914	WITHOUT_CLASSIFICATION	1.0705467508574432E-5	TEST
While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999989764670604	WITHOUT_CLASSIFICATION	1.0235329396111334E-6	TEST
Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999993677860122	WITHOUT_CLASSIFICATION	6.322139877860626E-7	TEST
Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999821790062439	WITHOUT_CLASSIFICATION	1.7820993756164427E-5	TEST
Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999971476955662	WITHOUT_CLASSIFICATION	2.852304433811294E-6	TEST
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999900808588322	WITHOUT_CLASSIFICATION	9.919141167805579E-5	TEST
Readline	WITHOUT_CLASSIFICATION	0.9999846411646334	WITHOUT_CLASSIFICATION	1.53588353666956E-5	TEST
If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999983652978457	WITHOUT_CLASSIFICATION	1.6347021542460675E-6	TEST
Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.999998907782709	WITHOUT_CLASSIFICATION	1.0922172911016658E-6	TEST
If 'r' is not a constant, it could actually be a compound value! Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.999999995659392	WITHOUT_CLASSIFICATION	4.340607982329204E-9	TEST
Check if we can optimize this call based on the receiving method and receiver type Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.99999992267184	WITHOUT_CLASSIFICATION	7.732816007289963E-8	TEST
If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999900625492	WITHOUT_CLASSIFICATION	9.937450634918667E-9	TEST
If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999990366239161	WITHOUT_CLASSIFICATION	9.63376083945819E-7	TEST
----------- Public abstract methods ----------	WITHOUT_CLASSIFICATION	0.9999975231411832	WITHOUT_CLASSIFICATION	2.4768588168514007E-6	TEST
----------- Public methods with a default implementation ----------	WITHOUT_CLASSIFICATION	0.9999999423321946	WITHOUT_CLASSIFICATION	5.766780541846245E-8	TEST
Compute meet over all "sources" and compute "destination" basic blocks that should then be processed. sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999990384183837	WITHOUT_CLASSIFICATION	9.615816163183038E-7	TEST
If the solution has changed, add "dsts" to the work list. No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999706565690221	WITHOUT_CLASSIFICATION	2.934343097787856E-5	TEST
--------- Protected fields/methods below ---------	WITHOUT_CLASSIFICATION	0.9999956594457189	WITHOUT_CLASSIFICATION	4.3405542811032136E-6	TEST
Dataflow problem with which this node is associated CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.999526906576383	WITHOUT_CLASSIFICATION	4.730934236170321E-4	TEST
-------------- Public fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9999998445831184	WITHOUT_CLASSIFICATION	1.5541688151589266E-7	TEST
------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999999321149605	WITHOUT_CLASSIFICATION	6.788503947410672E-8	TEST
------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999998674642326	WITHOUT_CLASSIFICATION	1.3253576737674135E-7	TEST
Compute Meet Over All Paths solution for this dataflow problem on the input CFG. This implements a standard worklist algorithm.	WITHOUT_CLASSIFICATION	0.9999999193917553	WITHOUT_CLASSIFICATION	8.06082447783089E-8	TEST
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.999956737769633	WITHOUT_CLASSIFICATION	4.326223036690642E-5	TEST
Individual analyses should override this	WITHOUT_CLASSIFICATION	0.999956737769633	WITHOUT_CLASSIFICATION	4.326223036690642E-5	TEST
-------------- Packaged/protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9999998550631192	WITHOUT_CLASSIFICATION	1.4493688074178856E-7	TEST
We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999901656479225	WITHOUT_CLASSIFICATION	9.834352077414612E-6	TEST
-------------- Protected fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.99999944666011	WITHOUT_CLASSIFICATION	5.53339889907477E-7	TEST
-------------- Private fields and methods below ----------------	WITHOUT_CLASSIFICATION	0.9999995395275199	WITHOUT_CLASSIFICATION	4.6047248017051005E-7	TEST
Initialize all flow graph nodes	WITHOUT_CLASSIFICATION	0.9999996288133944	WITHOUT_CLASSIFICATION	3.711866055795984E-7	TEST
Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses	WITHOUT_CLASSIFICATION	0.9999999270553398	WITHOUT_CLASSIFICATION	7.294466026689632E-8	TEST
PUBLIC INTERFACE	WITHOUT_CLASSIFICATION	0.9999614314220505	WITHOUT_CLASSIFICATION	3.8568577949509405E-5	TEST
Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999779477356765	WITHOUT_CLASSIFICATION	2.2052264323458048E-5	TEST
start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999995393971292	WITHOUT_CLASSIFICATION	4.606028708625351E-7	TEST
switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999999683024626	WITHOUT_CLASSIFICATION	3.169753742562148E-8	TEST
----------- Public Interface ------------	WITHOUT_CLASSIFICATION	0.9999997014663305	WITHOUT_CLASSIFICATION	2.9853366944463627E-7	TEST
class or module	WITHOUT_CLASSIFICATION	0.9999973275938732	WITHOUT_CLASSIFICATION	2.672406126859029E-6	TEST
OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999873293978154	WITHOUT_CLASSIFICATION	1.2670602184610235E-5	TEST
Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999998381848527	WITHOUT_CLASSIFICATION	1.6181514726430252E-7	TEST
v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999904088753321	WITHOUT_CLASSIFICATION	9.591124667948904E-6	TEST
IN is the same!	WITHOUT_CLASSIFICATION	0.9999924308845692	WITHOUT_CLASSIFICATION	7.569115430826687E-6	TEST
IN changed!	WITHOUT_CLASSIFICATION	0.9999865927788303	WITHOUT_CLASSIFICATION	1.3407221169785654E-5	TEST
---------- Protected / package fields, methods ---------	WITHOUT_CLASSIFICATION	0.9999997396748995	WITHOUT_CLASSIFICATION	2.6032510049290426E-7	TEST
If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999994698435353	WITHOUT_CLASSIFICATION	5.301564647745249E-7	TEST
Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999962560623139	WITHOUT_CLASSIFICATION	3.743937686060862E-6	TEST
---------- Private fields, methods ---------	WITHOUT_CLASSIFICATION	0.9999993631736995	WITHOUT_CLASSIFICATION	6.368263003614647E-7	TEST
Variables live at entry of this node Variables live at exit of node Temporary set of live variables Size of the "_in" and "_out" bit sets	WITHOUT_CLASSIFICATION	0.9999986747715536	WITHOUT_CLASSIFICATION	1.3252284464866514E-6	TEST
Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999952587457922	WITHOUT_CLASSIFICATION	4.741254207706139E-6	TEST
Does this instruction have side effects as a result of its operation This information is used in optimization phases to impact dead code elimination and other optimization passes	WITHOUT_CLASSIFICATION	0.9999966419696251	WITHOUT_CLASSIFICATION	3.3580303748573114E-6	TEST
--------- "Abstract"/"please-override" methods ---------	WITHOUT_CLASSIFICATION	0.9999985135428714	WITHOUT_CLASSIFICATION	1.4864571286100083E-6	TEST
Array of all operands for this instruction	WITHOUT_CLASSIFICATION	0.9999940464106173	WITHOUT_CLASSIFICATION	5.953589382752827E-6	TEST
List of all variables used by all operands of this instruction	WITHOUT_CLASSIFICATION	0.9999932444735232	WITHOUT_CLASSIFICATION	6.7555264767159206E-6	TEST
This method takes as input a map of operands to their values, and outputs If the value map provides a value for any of the instruction's operands this method is expected to replace the original operands with the simplified values. It is not required that it do so -- code correctness is not compromised by failure to simplify	WITHOUT_CLASSIFICATION	0.9999983814562743	WITHOUT_CLASSIFICATION	1.6185437256702347E-6	TEST
By default, no simplifications!	WITHOUT_CLASSIFICATION	0.999999661084707	WITHOUT_CLASSIFICATION	3.3891529297727145E-7	TEST
Can this call lead to ruby code getting modified? If we don't know what method we are calling, we assume it can (pessimistic, but safe!) If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999998252292808	WITHOUT_CLASSIFICATION	1.747707191759181E-7	TEST
By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999999740739662	WITHOUT_CLASSIFICATION	2.5926033730005612E-8	TEST
If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999989082805336	WITHOUT_CLASSIFICATION	1.0917194664272825E-6	TEST
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.99999902259796	WITHOUT_CLASSIFICATION	9.774020399277144E-7	TEST
Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999836596086914	WITHOUT_CLASSIFICATION	1.6340391308522724E-5	TEST
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.99999902259796	WITHOUT_CLASSIFICATION	9.774020399277144E-7	TEST
You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999997668182374	WITHOUT_CLASSIFICATION	2.331817626513058E-7	TEST
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999955498631881	WITHOUT_CLASSIFICATION	4.450136811935349E-6	TEST
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999955498631881	WITHOUT_CLASSIFICATION	4.450136811935349E-6	TEST
If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999955498631881	WITHOUT_CLASSIFICATION	4.450136811935349E-6	TEST
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999997760913802	WITHOUT_CLASSIFICATION	2.2390861967557216E-7	TEST
For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999997760913802	WITHOUT_CLASSIFICATION	2.2390861967557216E-7	TEST
The operand that this attribute targets DEFERRED AttributeValue _val; Attribute value	WITHOUT_CLASSIFICATION	0.9999979020767825	WITHOUT_CLASSIFICATION	2.097923217474129E-6	TEST
Arrays, Ranges, etc. are compound values Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999988126169976	WITHOUT_CLASSIFICATION	1.1873830023711821E-6	TEST
Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999978994759265	WITHOUT_CLASSIFICATION	2.1005240735428935E-6	TEST
The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999999992805777	WITHOUT_CLASSIFICATION	7.194223473591845E-10	TEST
Nothing to do by default	WITHOUT_CLASSIFICATION	0.9999984848174567	WITHOUT_CLASSIFICATION	1.5151825432655251E-6	TEST
Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999862478097045	WITHOUT_CLASSIFICATION	1.375219029552261E-5	TEST
Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999996511582321	WITHOUT_CLASSIFICATION	3.4884176787147667E-7	TEST
ignore	WITHOUT_CLASSIFICATION	0.999991508933961	WITHOUT_CLASSIFICATION	8.49106603905018E-6	TEST
Scope (method/closure) to which this cfg belongs Entry BB -- dummy Exit BB -- dummy The actual graph Next available basic block id	WITHOUT_CLASSIFICATION	0.9999988218275216	WITHOUT_CLASSIFICATION	1.178172478418661E-6	TEST
Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999999183255448	WITHOUT_CLASSIFICATION	8.16744552103653E-8	TEST
Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999821230452016	WITHOUT_CLASSIFICATION	1.7876954798383118E-5	TEST
currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999993393468014	WITHOUT_CLASSIFICATION	6.606531986442479E-7	TEST
Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999997469092979	WITHOUT_CLASSIFICATION	2.530907020324299E-7	TEST
root-level logic	WITHOUT_CLASSIFICATION	0.9999972119305477	WITHOUT_CLASSIFICATION	2.788069452245511E-6	TEST
root-level methods	WITHOUT_CLASSIFICATION	0.9999964964879956	WITHOUT_CLASSIFICATION	3.5035120044111997E-6	TEST
root-level classes	WITHOUT_CLASSIFICATION	0.9999982965164914	WITHOUT_CLASSIFICATION	1.7034835086227498E-6	TEST
case 4: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); break; case 5: signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); break;	WITHOUT_CLASSIFICATION	0.9999991274088332	WITHOUT_CLASSIFICATION	8.72591166896781E-7	TEST
load receiver	WITHOUT_CLASSIFICATION	0.9999937269179677	WITHOUT_CLASSIFICATION	6.273082032213055E-6	TEST
load receiver	WITHOUT_CLASSIFICATION	0.9999937269179677	WITHOUT_CLASSIFICATION	6.273082032213055E-6	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
load arguments	WITHOUT_CLASSIFICATION	0.9999986972564225	WITHOUT_CLASSIFICATION	1.3027435773964521E-6	TEST
load arguments	WITHOUT_CLASSIFICATION	0.9999986972564225	WITHOUT_CLASSIFICATION	1.3027435773964521E-6	TEST
case 4: case 5:	WITHOUT_CLASSIFICATION	0.9999433044610494	WITHOUT_CLASSIFICATION	5.6695538950491744E-5	TEST
Object[] args	WITHOUT_CLASSIFICATION	0.9999955082509533	WITHOUT_CLASSIFICATION	4.491749046681325E-6	TEST
load handle	WITHOUT_CLASSIFICATION	0.9999917186982624	WITHOUT_CLASSIFICATION	8.281301737499354E-6	TEST
args array	WITHOUT_CLASSIFICATION	0.9999783017467995	WITHOUT_CLASSIFICATION	2.1698253200473867E-5	TEST
i'th argument	WITHOUT_CLASSIFICATION	0.999995146524987	WITHOUT_CLASSIFICATION	4.85347501296754E-6	TEST
invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999997193674651	WITHOUT_CLASSIFICATION	2.806325348617018E-7	TEST
Object arg0	WITHOUT_CLASSIFICATION	0.9999858050544257	WITHOUT_CLASSIFICATION	1.4194945574322508E-5	TEST
useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999998169714294	WITHOUT_CLASSIFICATION	1.8302857064818206E-7	TEST
No editing before startPos	WITHOUT_CLASSIFICATION	0.9999990572088789	WITHOUT_CLASSIFICATION	9.427911210619844E-7	TEST
no silly ticks!	WITHOUT_CLASSIFICATION	0.999996502373562	WITHOUT_CLASSIFICATION	3.4976264379302944E-6	TEST
no candidates? Fail.	WITHOUT_CLASSIFICATION	0.999998156544692	WITHOUT_CLASSIFICATION	1.8434553079984032E-6	TEST
at end	WITHOUT_CLASSIFICATION	0.9999973212296948	WITHOUT_CLASSIFICATION	2.6787703051616955E-6	TEST
undo check	WITHOUT_CLASSIFICATION	0.9999989981554863	WITHOUT_CLASSIFICATION	1.001844513673853E-6	TEST
Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999994198474363	WITHOUT_CLASSIFICATION	5.801525636939467E-7	TEST
ignore	WITHOUT_CLASSIFICATION	0.999991508933961	WITHOUT_CLASSIFICATION	8.49106603905018E-6	TEST
\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9995276079760346	WITHOUT_CLASSIFICATION	4.723920239653384E-4	TEST
Assign the values.	WITHOUT_CLASSIFICATION	0.9999995672136431	WITHOUT_CLASSIFICATION	4.327863568063315E-7	TEST
no check for ''	WITHOUT_CLASSIFICATION	0.9999964886696749	WITHOUT_CLASSIFICATION	3.5113303250273866E-6	TEST
no check for ''	WITHOUT_CLASSIFICATION	0.9999964886696749	WITHOUT_CLASSIFICATION	3.5113303250273866E-6	TEST
Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999970739767229	WITHOUT_CLASSIFICATION	2.9260232770609437E-6	TEST
this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999997136364359	WITHOUT_CLASSIFICATION	2.863635641023119E-7	TEST
no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999999756474754	WITHOUT_CLASSIFICATION	2.4352524628958502E-8	TEST
restore position	WITHOUT_CLASSIFICATION	0.9999911946930643	WITHOUT_CLASSIFICATION	8.805306935707717E-6	TEST
Something like cvar_cbase() from eval.c, factored out for the benefit of all the classvar-related node evaluations	WITHOUT_CLASSIFICATION	0.9999997568546746	WITHOUT_CLASSIFICATION	2.431453253691095E-7	TEST
Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999997166164595	WITHOUT_CLASSIFICATION	2.8338354054000734E-7	TEST
JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.99999962616378	WITHOUT_CLASSIFICATION	3.7383622006193104E-7	TEST
MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9994450209410255	WITHOUT_CLASSIFICATION	5.549790589744787E-4	TEST
We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999995135675406	WITHOUT_CLASSIFICATION	4.864324595095771E-7	TEST
JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999999292534115	WITHOUT_CLASSIFICATION	7.07465884657246E-8	TEST
not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999985228049147	WITHOUT_CLASSIFICATION	1.4771950852167651E-6	TEST
Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8()	WITHOUT_CLASSIFICATION	0.9999998311168816	WITHOUT_CLASSIFICATION	1.6888311839298342E-7	TEST
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9997216121448385	WITHOUT_CLASSIFICATION	2.7838785516159914E-4	TEST
Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999990578157718	WITHOUT_CLASSIFICATION	9.421842283018816E-7	TEST
clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999961267366017	WITHOUT_CLASSIFICATION	3.873263398370658E-6	TEST
These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.999999686862503	WITHOUT_CLASSIFICATION	3.131374969699585E-7	TEST
Timeout module methods	WITHOUT_CLASSIFICATION	0.9999973273574235	WITHOUT_CLASSIFICATION	2.6726425765457843E-6	TEST
Toplevel defines	WITHOUT_CLASSIFICATION	0.9999964499097789	WITHOUT_CLASSIFICATION	3.5500902211621603E-6	TEST
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999996145385749	WITHOUT_CLASSIFICATION	3.854614251445694E-7	TEST
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999990054789476	WITHOUT_CLASSIFICATION	9.94521052486602E-7	TEST
if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999968953881566	WITHOUT_CLASSIFICATION	3.1046118434770525E-6	TEST
and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999996259459358	WITHOUT_CLASSIFICATION	3.740540642147281E-7	TEST
otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999975149571865	WITHOUT_CLASSIFICATION	2.485042813474979E-6	TEST
Remove the Executor task now, to avoid cancelled tasks accumulating until an Executor thread can schedule and remove them	WITHOUT_CLASSIFICATION	0.999999995192648	WITHOUT_CLASSIFICATION	4.807352039316801E-9	TEST
If the task was scheduled, wait for it to finish before polling for the exception it would have thrown.	WITHOUT_CLASSIFICATION	0.999998665117795	WITHOUT_CLASSIFICATION	1.3348822049442683E-6	TEST
NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999926615618401	WITHOUT_CLASSIFICATION	7.338438159923146E-6	TEST
When a length is given, read_string acts like get_bytes	WITHOUT_CLASSIFICATION	0.999956970382011	WITHOUT_CLASSIFICATION	4.3029617989038995E-5	TEST
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9998518632520031	WITHOUT_CLASSIFICATION	1.4813674799688946E-4	TEST
ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999696286643	WITHOUT_CLASSIFICATION	3.0371335588728614E-8	TEST
If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.999998813067357	WITHOUT_CLASSIFICATION	1.1869326429430518E-6	TEST
This variant of newStruct is called from StructLayoutBuilder	WITHOUT_CLASSIFICATION	0.9999994822796964	WITHOUT_CLASSIFICATION	5.177203035647193E-7	TEST
This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.999999737094808	WITHOUT_CLASSIFICATION	2.629051918764822E-7	TEST
Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999742432887158	WITHOUT_CLASSIFICATION	2.575671128426103E-5	TEST
Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999924950125461	WITHOUT_CLASSIFICATION	7.504987453924227E-6	TEST
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999943860693055	WITHOUT_CLASSIFICATION	5.613930694445214E-6	TEST
$blah	WITHOUT_CLASSIFICATION	0.9998371748180734	WITHOUT_CLASSIFICATION	1.6282518192653808E-4	TEST
Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9998518632520031	WITHOUT_CLASSIFICATION	1.4813674799688946E-4	TEST
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9999940788297554	WITHOUT_CLASSIFICATION	5.921170244568475E-6	TEST
Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999943860693055	WITHOUT_CLASSIFICATION	5.613930694445214E-6	TEST
Keep a reference to the temporary memory in the cache so it does not get freed by the GC until the struct is freed	WITHOUT_CLASSIFICATION	0.9999967896363395	WITHOUT_CLASSIFICATION	3.2103636604844915E-6	TEST
Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999997160775188	WITHOUT_CLASSIFICATION	2.8392248126011044E-7	TEST
Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999971407220521	WITHOUT_CLASSIFICATION	2.8592779477402035E-6	TEST
Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999984213330368	WITHOUT_CLASSIFICATION	1.5786669631244845E-6	TEST
case FLOAT:	WITHOUT_CLASSIFICATION	0.999988787626754	WITHOUT_CLASSIFICATION	1.1212373245977425E-5	TEST
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999995446619232	WITHOUT_CLASSIFICATION	4.553380767555283E-7	TEST
keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999995446619232	WITHOUT_CLASSIFICATION	4.553380767555283E-7	TEST
No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999866067925012	WITHOUT_CLASSIFICATION	1.3393207498804408E-5	TEST
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999961503371	WITHOUT_CLASSIFICATION	3.8496628706871665E-9	TEST
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999985429251963	WITHOUT_CLASSIFICATION	1.457074803680109E-6	TEST
Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999985429251963	WITHOUT_CLASSIFICATION	1.457074803680109E-6	TEST
If there is exactly _one_ callback argument to the function, then a block can be given and automatically subsituted for the callback parameter.	WITHOUT_CLASSIFICATION	0.9999999980564493	WITHOUT_CLASSIFICATION	1.9435507035550566E-9	TEST
------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9975852411910343	WITHOUT_CLASSIFICATION	0.0024147588089656895	TEST
AF_INET	WITHOUT_CLASSIFICATION	0.9998005367331214	WITHOUT_CLASSIFICATION	1.9946326687862986E-4	TEST
AF_INET	WITHOUT_CLASSIFICATION	0.9998005367331214	WITHOUT_CLASSIFICATION	1.9946326687862986E-4	TEST
RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999350124559114	WITHOUT_CLASSIFICATION	6.498754408845636E-5	TEST
line 321	WITHOUT_CLASSIFICATION	0.9999877770754337	WITHOUT_CLASSIFICATION	1.2222924566348211E-5	TEST
Set up for potentially fast-int operations	WITHOUT_CLASSIFICATION	0.9999996052451761	WITHOUT_CLASSIFICATION	3.9475482391832727E-7	TEST
Hook up the MemoryPointer class if its not already there	WITHOUT_CLASSIFICATION	0.9999998919903385	WITHOUT_CLASSIFICATION	1.0800966150070509E-7	TEST
This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999999906264893	WITHOUT_CLASSIFICATION	9.373510682391692E-9	TEST
no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999992308656164	WITHOUT_CLASSIFICATION	7.69134383644092E-7	TEST
Sockaddr_un has different structure on different platforms. See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.999999321806337	WITHOUT_CLASSIFICATION	6.781936630602355E-7	TEST
There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999966590777025	WITHOUT_CLASSIFICATION	3.3409222974636798E-6	TEST
RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999872517140026	WITHOUT_CLASSIFICATION	1.2748285997429671E-5	TEST
host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.999999262025666	WITHOUT_CLASSIFICATION	7.379743339362066E-7	TEST
host and port given	WITHOUT_CLASSIFICATION	0.9999985029252751	WITHOUT_CLASSIFICATION	1.4970747248746933E-6	TEST
RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999840945314459	WITHOUT_CLASSIFICATION	1.5905468554068094E-5	TEST
By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999998670674839	WITHOUT_CLASSIFICATION	1.3293251610362308E-7	TEST
make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999960750638556	WITHOUT_CLASSIFICATION	3.924936144393623E-6	TEST
continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999968519077413	WITHOUT_CLASSIFICATION	3.1480922585852837E-6	TEST
recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.999999724964419	WITHOUT_CLASSIFICATION	2.7503558094619887E-7	TEST
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998346868879759	WITHOUT_CLASSIFICATION	1.653131120240607E-4	TEST
RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999971804645943	WITHOUT_CLASSIFICATION	2.8195354057241677E-6	TEST
we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999986441625389	WITHOUT_CLASSIFICATION	1.3558374611937982E-6	TEST
mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999999250749847	WITHOUT_CLASSIFICATION	7.492501534286906E-8	TEST
constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999880863765143	WITHOUT_CLASSIFICATION	1.1913623485770746E-5	TEST
More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999711144103587	WITHOUT_CLASSIFICATION	2.888558964129965E-5	TEST
normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.999999591453758	WITHOUT_CLASSIFICATION	4.0854624186796357E-7	TEST
AF_INET	WITHOUT_CLASSIFICATION	0.9998005367331214	WITHOUT_CLASSIFICATION	1.9946326687862986E-4	TEST
255.255.255.255	WITHOUT_CLASSIFICATION	0.9960827363837926	WITHOUT_CLASSIFICATION	0.003917263616207327	TEST
0.0.0.0	WITHOUT_CLASSIFICATION	0.9985548660271889	WITHOUT_CLASSIFICATION	0.001445133972811047	TEST
def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999987643506003	WITHOUT_CLASSIFICATION	1.2356493996632027E-6	TEST
line 323	WITHOUT_CLASSIFICATION	0.9999838161383882	WITHOUT_CLASSIFICATION	1.618386161187957E-5	TEST
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999995782551647	WITHOUT_CLASSIFICATION	4.217448352847196E-7	TEST
can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999995782551647	WITHOUT_CLASSIFICATION	4.217448352847196E-7	TEST
ok, it's a socket...set values accordingly just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.999999985236405	WITHOUT_CLASSIFICATION	1.4763594920606641E-8	TEST
datagram, set accordingly again, AF_INET	WITHOUT_CLASSIFICATION	0.9999998625739882	WITHOUT_CLASSIFICATION	1.3742601178126604E-7	TEST
IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999995229961113	WITHOUT_CLASSIFICATION	4.770038887744752E-7	TEST
When Socket::AI_PASSIVE and host is nil, return 'any' address.	WITHOUT_CLASSIFICATION	0.9999996543605479	WITHOUT_CLASSIFICATION	3.45639452037201E-7	TEST
The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999994173993125	WITHOUT_CLASSIFICATION	5.826006874606502E-7	TEST
RubySocket	WITHOUT_CLASSIFICATION	0.9999943555075546	WITHOUT_CLASSIFICATION	5.6444924454361884E-6	TEST
numeric host, use it for port	WITHOUT_CLASSIFICATION	0.99999766974172	WITHOUT_CLASSIFICATION	2.330258279999928E-6	TEST
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999955976687358	WITHOUT_CLASSIFICATION	4.402331264227673E-6	TEST
we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.999999845066737	WITHOUT_CLASSIFICATION	1.5493326305001034E-7	TEST
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999997826942589	WITHOUT_CLASSIFICATION	2.173057410474426E-7	TEST
no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999996117800589	WITHOUT_CLASSIFICATION	3.8821994101218093E-7	TEST
do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999978366246025	WITHOUT_CLASSIFICATION	2.163375397471663E-6	TEST
nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999981321026266	WITHOUT_CLASSIFICATION	1.8678973734321008E-6	TEST
set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999995208081878	WITHOUT_CLASSIFICATION	4.79191812257905E-7	TEST
uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999999300593038	WITHOUT_CLASSIFICATION	6.99406961686895E-8	TEST
Call the thread's code	WITHOUT_CLASSIFICATION	0.9999988314176923	WITHOUT_CLASSIFICATION	1.1685823077026771E-6	TEST
Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999997480943446	WITHOUT_CLASSIFICATION	2.5190565537199564E-7	TEST
restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999984447090524	WITHOUT_CLASSIFICATION	1.5552909476406327E-6	TEST
be dead	WITHOUT_CLASSIFICATION	0.9999827354300793	WITHOUT_CLASSIFICATION	1.7264569920724298E-5	TEST
loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.999999645309612	WITHOUT_CLASSIFICATION	3.5469038799278867E-7	TEST
all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999998153029408	WITHOUT_CLASSIFICATION	1.8469705922796005E-7	TEST
thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999965350331464	WITHOUT_CLASSIFICATION	3.464966853476685E-6	TEST
future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999995980144676	WITHOUT_CLASSIFICATION	4.0198553252704233E-7	TEST
first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999992336432865	WITHOUT_CLASSIFICATION	7.663567135610606E-7	TEST
then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999996331101968	WITHOUT_CLASSIFICATION	3.668898032328074E-7	TEST
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999955550316808	WITHOUT_CLASSIFICATION	4.4449683192022035E-6	TEST
Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999719967804045	WITHOUT_CLASSIFICATION	2.8003219595545452E-5	TEST
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999971705632466	WITHOUT_CLASSIFICATION	2.8294367534954056E-6	TEST
main body	WITHOUT_CLASSIFICATION	0.9999951150289798	WITHOUT_CLASSIFICATION	4.884971020278814E-6	TEST
return jump handling	WITHOUT_CLASSIFICATION	0.9999998709373924	WITHOUT_CLASSIFICATION	1.2906260767364641E-7	TEST
finally	WITHOUT_CLASSIFICATION	0.9999822225135814	WITHOUT_CLASSIFICATION	1.7777486418659128E-5	TEST
return result if we're still good	WITHOUT_CLASSIFICATION	0.9999994198305794	WITHOUT_CLASSIFICATION	5.801694206602923E-7	TEST
redo jump handling	WITHOUT_CLASSIFICATION	0.9999991478825565	WITHOUT_CLASSIFICATION	8.521174434183747E-7	TEST
clear the redo	WITHOUT_CLASSIFICATION	0.9999969640045316	WITHOUT_CLASSIFICATION	3.03599546844466E-6	TEST
get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999995137506319	WITHOUT_CLASSIFICATION	4.862493681485267E-7	TEST
throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999969725708442	WITHOUT_CLASSIFICATION	3.0274291557397897E-6	TEST
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.99999871137531	WITHOUT_CLASSIFICATION	1.28862468987153E-6	TEST
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.999999158980782	WITHOUT_CLASSIFICATION	8.410192181439234E-7	TEST
No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.999999923869652	WITHOUT_CLASSIFICATION	7.613034802261432E-8	TEST
actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999995222394756	WITHOUT_CLASSIFICATION	4.777605243692704E-7	TEST
actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999861392977247	WITHOUT_CLASSIFICATION	1.3860702275322039E-5	TEST
simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999998646010775	WITHOUT_CLASSIFICATION	1.353989225437851E-7	TEST
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999996839187443	WITHOUT_CLASSIFICATION	3.160812557277497E-7	TEST
in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999996839187443	WITHOUT_CLASSIFICATION	3.160812557277497E-7	TEST
normal all-rest method	WITHOUT_CLASSIFICATION	0.999994617503806	WITHOUT_CLASSIFICATION	5.382496193999619E-6	TEST
for zero, one, two, three arities, JavaMethod.JavaMethod.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.999999986978165	WITHOUT_CLASSIFICATION	1.3021835088476356E-8	TEST
promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999999004230895	WITHOUT_CLASSIFICATION	9.957691053861204E-8	TEST
return	WITHOUT_CLASSIFICATION	0.9999943664056242	WITHOUT_CLASSIFICATION	5.633594375816321E-6	TEST
just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999982657388242	WITHOUT_CLASSIFICATION	1.7342611758138584E-6	TEST
just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999986584411533	WITHOUT_CLASSIFICATION	1.3415588467426874E-6	TEST
confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999982919751754	WITHOUT_CLASSIFICATION	1.708024824613692E-6	TEST
confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999925804982722	WITHOUT_CLASSIFICATION	7.419501727870996E-6	TEST
Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999942909919055	WITHOUT_CLASSIFICATION	5.709008094481461E-6	TEST
tc	WITHOUT_CLASSIFICATION	0.9998058749647517	WITHOUT_CLASSIFICATION	1.9412503524821503E-4	TEST
self name	WITHOUT_CLASSIFICATION	0.9999913984682048	WITHOUT_CLASSIFICATION	8.60153179508457E-6	TEST
no args	WITHOUT_CLASSIFICATION	0.9999963875180231	WITHOUT_CLASSIFICATION	3.612481976991427E-6	TEST
variable args with block	WITHOUT_CLASSIFICATION	0.9999877258413373	WITHOUT_CLASSIFICATION	1.2274158662692112E-5	TEST
variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999976182882033	WITHOUT_CLASSIFICATION	2.381711796670702E-6	TEST
zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999991644630875	WITHOUT_CLASSIFICATION	8.355369125731555E-7	TEST
one arg with block	WITHOUT_CLASSIFICATION	0.9999968145152728	WITHOUT_CLASSIFICATION	3.1854847271265412E-6	TEST
one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999978911385121	WITHOUT_CLASSIFICATION	2.108861487860921E-6	TEST
two args with block	WITHOUT_CLASSIFICATION	0.9999933996083072	WITHOUT_CLASSIFICATION	6.60039169278178E-6	TEST
two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999999023510388	WITHOUT_CLASSIFICATION	9.764896119679962E-7	TEST
three args with block	WITHOUT_CLASSIFICATION	0.9999974349850346	WITHOUT_CLASSIFICATION	2.5650149654518535E-6	TEST
three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999997490311141	WITHOUT_CLASSIFICATION	2.509688858611192E-7	TEST
load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999970478395048	WITHOUT_CLASSIFICATION	2.952160495185608E-6	TEST
all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999973837540775	WITHOUT_CLASSIFICATION	2.6162459224323133E-6	TEST
all other arg cases without block	WITHOUT_CLASSIFICATION	0.999998542229013	WITHOUT_CLASSIFICATION	1.4577709870593545E-6	TEST
one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999984768638069	WITHOUT_CLASSIFICATION	1.523136193136506E-6	TEST
two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999981533826429	WITHOUT_CLASSIFICATION	1.8466173570490726E-6	TEST
three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999992466635066	WITHOUT_CLASSIFICATION	7.533364935223124E-7	TEST
load target for invocations	WITHOUT_CLASSIFICATION	0.9999988329330747	WITHOUT_CLASSIFICATION	1.1670669252848013E-6	TEST
load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999982520410692	WITHOUT_CLASSIFICATION	1.7479589308552908E-6	TEST
static invocation	WITHOUT_CLASSIFICATION	0.9999854651053354	WITHOUT_CLASSIFICATION	1.4534894664509841E-5	TEST
virtual invocation	WITHOUT_CLASSIFICATION	0.9999958850671298	WITHOUT_CLASSIFICATION	4.114932870254724E-6	TEST
void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999884565071913	WITHOUT_CLASSIFICATION	1.1543492808716245E-5	TEST
normal finally and exit	WITHOUT_CLASSIFICATION	0.9999999027783575	WITHOUT_CLASSIFICATION	9.72216424504673E-8	TEST
promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999998644786458	WITHOUT_CLASSIFICATION	1.3552135432791176E-7	TEST
call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.999999158980782	WITHOUT_CLASSIFICATION	8.410192181439234E-7	TEST
these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999945829513277	WITHOUT_CLASSIFICATION	5.4170486723242005E-6	TEST
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9999968593349267	WITHOUT_CLASSIFICATION	3.140665073268689E-6	TEST
method itself ThreadContext invoked name	WITHOUT_CLASSIFICATION	0.9999968593349267	WITHOUT_CLASSIFICATION	3.140665073268689E-6	TEST
singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999933472960383	WITHOUT_CLASSIFICATION	6.652703961723285E-6	TEST
For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999992885163814	WITHOUT_CLASSIFICATION	7.114836184963167E-7	TEST
SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999947584293392	WITHOUT_CLASSIFICATION	5.241570660747436E-6	TEST
never reached	WITHOUT_CLASSIFICATION	0.9999921067942552	WITHOUT_CLASSIFICATION	7.893205744804236E-6	TEST
promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999996494417703	WITHOUT_CLASSIFICATION	3.505582296678834E-7	TEST
promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999996950379072	WITHOUT_CLASSIFICATION	3.049620928385491E-7	TEST
promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999995849552618	WITHOUT_CLASSIFICATION	4.1504473830887657E-7	TEST
promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999995231052273	WITHOUT_CLASSIFICATION	4.768947726900924E-7	TEST
promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999994677742851	WITHOUT_CLASSIFICATION	5.322257149558224E-7	TEST
promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999992472107931	WITHOUT_CLASSIFICATION	7.527892068379962E-7	TEST
promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999991677141692	WITHOUT_CLASSIFICATION	8.322858309057756E-7	TEST
promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999991012037002	WITHOUT_CLASSIFICATION	8.987962998889323E-7	TEST
promise to implement N	WITHOUT_CLASSIFICATION	0.9999998855349325	WITHOUT_CLASSIFICATION	1.1446506751458127E-7	TEST
DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999941494473252	WITHOUT_CLASSIFICATION	5.850552674714909E-6	TEST
We promote our box to being its own box since we're changing visibilities, and need it to be reflected on this method object independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.999614511342639	WITHOUT_CLASSIFICATION	3.85488657360986E-4	TEST
Normally we could leave these to fall back on the superclass, but since it dispatches through the [] version below, which may dispatch through the []+block version, we can save it a couple hops by overriding these here.	WITHOUT_CLASSIFICATION	0.9999999690777779	WITHOUT_CLASSIFICATION	3.092222217554319E-8	TEST
promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999998543372555	WITHOUT_CLASSIFICATION	1.4566274448719776E-7	TEST
promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999995973579454	WITHOUT_CLASSIFICATION	4.0264205464090303E-7	TEST
promise to implement zero to three	WITHOUT_CLASSIFICATION	0.999999647558582	WITHOUT_CLASSIFICATION	3.524414181050008E-7	TEST
promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999995015007581	WITHOUT_CLASSIFICATION	4.984992417767167E-7	TEST
promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999994844429502	WITHOUT_CLASSIFICATION	5.1555704978613E-7	TEST
promise to implement three	WITHOUT_CLASSIFICATION	0.9999996890706833	WITHOUT_CLASSIFICATION	3.109293167183897E-7	TEST
all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999999504965333	WITHOUT_CLASSIFICATION	4.9503466656362224E-8	TEST
load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999994223788484	WITHOUT_CLASSIFICATION	5.77621151635256E-7	TEST
open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999448978052	WITHOUT_CLASSIFICATION	5.510219479857553E-8	TEST
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999999420986181	WITHOUT_CLASSIFICATION	5.79013818241616E-8	TEST
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999994577822764	WITHOUT_CLASSIFICATION	5.422177235794449E-7	TEST
create constructor	WITHOUT_CLASSIFICATION	0.9999991117387748	WITHOUT_CLASSIFICATION	8.882612253167542E-7	TEST
wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999980194167098	WITHOUT_CLASSIFICATION	1.9805832900475807E-6	TEST
end constructor	WITHOUT_CLASSIFICATION	0.9999993107526515	WITHOUT_CLASSIFICATION	6.892473485014519E-7	TEST
start setup method	WITHOUT_CLASSIFICATION	0.9999985321579808	WITHOUT_CLASSIFICATION	1.4678420192549813E-6	TEST
set RubyClass	WITHOUT_CLASSIFICATION	0.9999987935033235	WITHOUT_CLASSIFICATION	1.2064966764988482E-6	TEST
set Ruby	WITHOUT_CLASSIFICATION	0.999998340026043	WITHOUT_CLASSIFICATION	1.6599739568949803E-6	TEST
all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999845769094	WITHOUT_CLASSIFICATION	1.5423090544672087E-8	TEST
try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999999637536128	WITHOUT_CLASSIFICATION	3.624638733509739E-8	TEST
get current context	WITHOUT_CLASSIFICATION	0.9999988213612045	WITHOUT_CLASSIFICATION	1.1786387954685054E-6	TEST
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999951282920073	WITHOUT_CLASSIFICATION	4.871707992570102E-6	TEST
construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999999420986181	WITHOUT_CLASSIFICATION	5.79013818241616E-8	TEST
fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999994577822764	WITHOUT_CLASSIFICATION	5.422177235794449E-7	TEST
create constructor	WITHOUT_CLASSIFICATION	0.9999991117387748	WITHOUT_CLASSIFICATION	8.882612253167542E-7	TEST
end constructor	WITHOUT_CLASSIFICATION	0.9999993107526515	WITHOUT_CLASSIFICATION	6.892473485014519E-7	TEST
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999520001049	WITHOUT_CLASSIFICATION	4.7999895097265464E-8	TEST
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999534186357	WITHOUT_CLASSIFICATION	4.6581364307598204E-8	TEST
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999977673941618	WITHOUT_CLASSIFICATION	2.232605838236603E-6	TEST
load null block	WITHOUT_CLASSIFICATION	0.9999940296816511	WITHOUT_CLASSIFICATION	5.9703183490225775E-6	TEST
invoke method	WITHOUT_CLASSIFICATION	0.9999922165531185	WITHOUT_CLASSIFICATION	7.783446881362867E-6	TEST
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999999672491231	WITHOUT_CLASSIFICATION	3.275087689993833E-7	TEST
end setup method	WITHOUT_CLASSIFICATION	0.9999976864051702	WITHOUT_CLASSIFICATION	2.3135948299416067E-6	TEST
end class	WITHOUT_CLASSIFICATION	0.9999985935909549	WITHOUT_CLASSIFICATION	1.4064090450647894E-6	TEST
create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999981495230666	WITHOUT_CLASSIFICATION	1.8504769333464098E-6	TEST
store the wrapper	WITHOUT_CLASSIFICATION	0.9999900190193124	WITHOUT_CLASSIFICATION	9.980980687621967E-6	TEST
prepare temp locals	WITHOUT_CLASSIFICATION	0.99999159144821	WITHOUT_CLASSIFICATION	8.408551789955223E-6	TEST
Try to look up field for simple name get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999999811676019	WITHOUT_CLASSIFICATION	1.8832398151073313E-8	TEST
field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999999704312333	WITHOUT_CLASSIFICATION	2.9568766565439755E-8	TEST
try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999999915070906	WITHOUT_CLASSIFICATION	8.492909490269252E-9	TEST
store it	WITHOUT_CLASSIFICATION	0.9999978927085371	WITHOUT_CLASSIFICATION	2.1072914628286183E-6	TEST
end of try block	WITHOUT_CLASSIFICATION	0.9999994130912011	WITHOUT_CLASSIFICATION	5.869087987813554E-7	TEST
finally block to release monitor	WITHOUT_CLASSIFICATION	0.999999896491326	WITHOUT_CLASSIFICATION	1.0350867393573627E-7	TEST
exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999969906144993	WITHOUT_CLASSIFICATION	3.0093855006732945E-6	TEST
re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999999766082164	WITHOUT_CLASSIFICATION	2.339178359703084E-8	TEST
load self, class, and name	WITHOUT_CLASSIFICATION	0.9999951282920073	WITHOUT_CLASSIFICATION	4.871707992570102E-6	TEST
load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999534186357	WITHOUT_CLASSIFICATION	4.6581364307598204E-8	TEST
convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999977673941618	WITHOUT_CLASSIFICATION	2.232605838236603E-6	TEST
invoke method	WITHOUT_CLASSIFICATION	0.9999922165531185	WITHOUT_CLASSIFICATION	7.783446881362867E-6	TEST
if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999999672491231	WITHOUT_CLASSIFICATION	3.275087689993833E-7	TEST
end setup method	WITHOUT_CLASSIFICATION	0.9999976864051702	WITHOUT_CLASSIFICATION	2.3135948299416067E-6	TEST
end class	WITHOUT_CLASSIFICATION	0.9999985935909549	WITHOUT_CLASSIFICATION	1.4064090450647894E-6	TEST
create the class	WITHOUT_CLASSIFICATION	0.9999965408570748	WITHOUT_CLASSIFICATION	3.4591429252470615E-6	TEST
method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999833959329728	WITHOUT_CLASSIFICATION	1.6604067027177342E-5	TEST
perform the dispatch	WITHOUT_CLASSIFICATION	0.999999917412384	WITHOUT_CLASSIFICATION	8.258761597653393E-8	TEST
try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.999999808283017	WITHOUT_CLASSIFICATION	1.9171698300187958E-7	TEST
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.999993745102557	WITHOUT_CLASSIFICATION	6.254897443038687E-6	TEST
up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.999993745102557	WITHOUT_CLASSIFICATION	6.254897443038687E-6	TEST
setup the class	WITHOUT_CLASSIFICATION	0.999999587154741	WITHOUT_CLASSIFICATION	4.1284525901161404E-7	TEST
now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999999103567118	WITHOUT_CLASSIFICATION	8.964328828922877E-8	TEST
do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999974889448309	WITHOUT_CLASSIFICATION	2.5110551691649075E-6	TEST
probably a primitive	WITHOUT_CLASSIFICATION	0.9999987156361237	WITHOUT_CLASSIFICATION	1.2843638761868002E-6	TEST
interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999991648897838	WITHOUT_CLASSIFICATION	8.351102163007135E-7	TEST
construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999999467504194	WITHOUT_CLASSIFICATION	5.324958063481149E-8	TEST
set the full name	WITHOUT_CLASSIFICATION	0.999998438735441	WITHOUT_CLASSIFICATION	1.5612645590279265E-6	TEST
include all interfaces	WITHOUT_CLASSIFICATION	0.9999999128656932	WITHOUT_CLASSIFICATION	8.713430669798653E-8	TEST
if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999983970127692	WITHOUT_CLASSIFICATION	1.602987230831445E-6	TEST
add array construction methods	WITHOUT_CLASSIFICATION	0.9999983113494849	WITHOUT_CLASSIFICATION	1.688650515208236E-6	TEST
add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999998460717844	WITHOUT_CLASSIFICATION	1.5392821573472007E-7	TEST
add all instance and static methods	WITHOUT_CLASSIFICATION	0.999999812511711	WITHOUT_CLASSIFICATION	1.8748828892335697E-7	TEST
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999985687638154	WITHOUT_CLASSIFICATION	1.4312361845337675E-6	TEST
too much array creation!	WITHOUT_CLASSIFICATION	0.9999904881320647	WITHOUT_CLASSIFICATION	9.51186793526896E-6	TEST
only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999999016004253	WITHOUT_CLASSIFICATION	9.839957462741366E-8	TEST
add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.999999628950471	WITHOUT_CLASSIFICATION	3.7104952905317643E-7	TEST
add all static variables	WITHOUT_CLASSIFICATION	0.9999922378481552	WITHOUT_CLASSIFICATION	7.762151844798043E-6	TEST
only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.999999736285695	WITHOUT_CLASSIFICATION	2.6371430489064405E-7	TEST
looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999967661432487	WITHOUT_CLASSIFICATION	3.2338567511812362E-6	TEST
NOTE: The five match methods are arity-split to avoid the cost of boxing arguments when there's already a cached match. Do not condense them into a single method.	WITHOUT_CLASSIFICATION	0.9999999884067887	WITHOUT_CLASSIFICATION	1.1593211210204187E-8	TEST
TODO: This is where we would want to do precision checks to see if it's non-destructive to coerce a given type into the target integral primitive	WITHOUT_CLASSIFICATION	0.9999049025887496	WITHOUT_CLASSIFICATION	9.509741125033275E-5	TEST
long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999997754539525	WITHOUT_CLASSIFICATION	2.2454604758584032E-7	TEST
double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999395459832	WITHOUT_CLASSIFICATION	6.045401679422264E-8	TEST
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9874879812014096	WITHOUT_CLASSIFICATION	0.012512018798590352	TEST
read-volatile	WITHOUT_CLASSIFICATION	0.9999981369198154	WITHOUT_CLASSIFICATION	1.8630801845439981E-6	TEST
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999296371982	WITHOUT_CLASSIFICATION	7.036280179804507E-8	TEST
we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999513453582	WITHOUT_CLASSIFICATION	4.865464190083583E-8	TEST
If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999943824519817	WITHOUT_CLASSIFICATION	5.617548018286517E-6	TEST
line 326	WITHOUT_CLASSIFICATION	0.9999841560238294	WITHOUT_CLASSIFICATION	1.584397617062024E-5	TEST
read-volatile	WITHOUT_CLASSIFICATION	0.9999981369198154	WITHOUT_CLASSIFICATION	1.8630801845439981E-6	TEST
initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999296371982	WITHOUT_CLASSIFICATION	7.036280179804507E-8	TEST
too much array creation!	WITHOUT_CLASSIFICATION	0.9999904881320647	WITHOUT_CLASSIFICATION	9.51186793526896E-6	TEST
construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999921211293195	WITHOUT_CLASSIFICATION	7.878870680534957E-6	TEST
Get map of all fields we want to define.	WITHOUT_CLASSIFICATION	0.9999997685321109	WITHOUT_CLASSIFICATION	2.3146788900752333E-7	TEST
Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999999061632232	WITHOUT_CLASSIFICATION	9.383677687139028E-8	TEST
Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999993456110101	WITHOUT_CLASSIFICATION	6.543889897629019E-7	TEST
We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999998822062103	WITHOUT_CLASSIFICATION	1.1779378963780619E-7	TEST
dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999989533356415	WITHOUT_CLASSIFICATION	1.0466643585619396E-6	TEST
initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999340229101212	WITHOUT_CLASSIFICATION	6.597708987886269E-5	TEST
initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999964990357934	WITHOUT_CLASSIFICATION	3.5009642066550635E-6	TEST
not allowed for original (non-generated) Java classes note: not allowing for any previously created class right now; this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999355603637553	WITHOUT_CLASSIFICATION	6.443963624467467E-5	TEST
setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999942241015286	WITHOUT_CLASSIFICATION	5.775898471358663E-6	TEST
First we make modifications to the class, to adapt it to being both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999998698428438	WITHOUT_CLASSIFICATION	1.3015715613024881E-7	TEST
list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999997981534919	WITHOUT_CLASSIFICATION	2.01846508085123E-7	TEST
We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999989534637092	WITHOUT_CLASSIFICATION	1.0465362907840605E-6	TEST
The replacement "new" allocates and inits the Ruby object as before, but also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999853499322	WITHOUT_CLASSIFICATION	1.465006788165656E-8	TEST
Next, we define a few private methods that we'll use to manipulate the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999925412606	WITHOUT_CLASSIFICATION	7.45873930095951E-9	TEST
jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999990151341921	WITHOUT_CLASSIFICATION	9.848658078612644E-7	TEST
Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999999965576544	WITHOUT_CLASSIFICATION	3.442345497828301E-9	TEST
implement all forces implementation of all interfaces we intend for this class to implement	WITHOUT_CLASSIFICATION	0.9999998293896329	WITHOUT_CLASSIFICATION	1.7061036707235715E-7	TEST
we've already done the above priming logic, just add another interface to the list of intentions unless we're past the point of no return or already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999486014551	WITHOUT_CLASSIFICATION	5.139854492064222E-8	TEST
walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999989416872288	WITHOUT_CLASSIFICATION	1.0583127711553824E-6	TEST
construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999999295610907	WITHOUT_CLASSIFICATION	7.043890923120512E-8	TEST
assuming the user wants a collection of interfaces that can be included together. make it so.	WITHOUT_CLASSIFICATION	0.9999996494118493	WITHOUT_CLASSIFICATION	3.5058815074256957E-7	TEST
not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999993421271709	WITHOUT_CLASSIFICATION	6.578728291783003E-7	TEST
To turn a module into an "interface collection" we add a class instance variable to hold the list of interfaces, and modify append_features for this module to call append_features on each of those interfaces as well	WITHOUT_CLASSIFICATION	0.9999999897166528	WITHOUT_CLASSIFICATION	1.02833473120767E-8	TEST
already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999768743749	WITHOUT_CLASSIFICATION	2.3125625135112665E-8	TEST
array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999979819598689	WITHOUT_CLASSIFICATION	2.018040131196312E-6	TEST
keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9951315903931813	WITHOUT_CLASSIFICATION	0.004868409606818644	TEST
array creation should use this variant	WITHOUT_CLASSIFICATION	0.9996230561763406	WITHOUT_CLASSIFICATION	3.769438236593874E-4	TEST
parent.setConstant(name, proxyClass); where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999946085917835	WITHOUT_CLASSIFICATION	5.391408216518542E-6	TEST
including interface module so old-style interface "subclasses" will respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999089771285	WITHOUT_CLASSIFICATION	9.102287137886164E-8	TEST
add reference to interface module	WITHOUT_CLASSIFICATION	0.9999997718805455	WITHOUT_CLASSIFICATION	2.2811945454065122E-7	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999997918527974	WITHOUT_CLASSIFICATION	2.0814720251684175E-7	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999997918527974	WITHOUT_CLASSIFICATION	2.0814720251684175E-7	TEST
proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999985687638154	WITHOUT_CLASSIFICATION	1.4312361845337675E-6	TEST
same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999613642535	WITHOUT_CLASSIFICATION	3.863574645999837E-8	TEST
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999992746834694	WITHOUT_CLASSIFICATION	7.253165306222801E-7	TEST
weakly reserved names	WITHOUT_CLASSIFICATION	0.9999845377419211	WITHOUT_CLASSIFICATION	1.5462258078920358E-5	TEST
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999996966479694	WITHOUT_CLASSIFICATION	3.0335203052786916E-7	TEST
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999996966479694	WITHOUT_CLASSIFICATION	3.0335203052786916E-7	TEST
modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999996225940284	WITHOUT_CLASSIFICATION	3.7740597162721565E-7	TEST
if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999971817926251	WITHOUT_CLASSIFICATION	2.8182073749641715E-6	TEST
caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999996272688806	WITHOUT_CLASSIFICATION	3.727311194372636E-7	TEST
proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999996312629132	WITHOUT_CLASSIFICATION	3.687370867417619E-7	TEST
proxy class for concrete classes. also used for "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999973143326927	WITHOUT_CLASSIFICATION	2.6856673071928034E-6	TEST
readable only by thread building proxy, so don't need to be volatile. used to handle recursive calls to getProxyClass/Module while proxy is being constructed (usually when a constant defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999993427441091	WITHOUT_CLASSIFICATION	6.57255890837805E-7	TEST
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999974911454813	WITHOUT_CLASSIFICATION	2.5088545186884915E-6	TEST
Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999994460195718	WITHOUT_CLASSIFICATION	5.539804281524903E-7	TEST
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999997410630168	WITHOUT_CLASSIFICATION	2.589369831548537E-7	TEST
Add property name aliases	WITHOUT_CLASSIFICATION	0.9999980654425825	WITHOUT_CLASSIFICATION	1.9345574175021327E-6	TEST
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.999992277640464	WITHOUT_CLASSIFICATION	7.722359535971558E-6	TEST
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999927505007425	WITHOUT_CLASSIFICATION	7.2494992574180344E-6	TEST
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9998714411078924	WITHOUT_CLASSIFICATION	1.2855889210764294E-4	TEST
Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999999401928751	WITHOUT_CLASSIFICATION	5.980712492763924E-8	TEST
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999987006484292	WITHOUT_CLASSIFICATION	1.2993515708069767E-5	TEST
something?	WITHOUT_CLASSIFICATION	0.9999703517252365	WITHOUT_CLASSIFICATION	2.9648274763405958E-5	TEST
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999992836599689	WITHOUT_CLASSIFICATION	7.163400310255272E-7	TEST
setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999992836599689	WITHOUT_CLASSIFICATION	7.163400310255272E-7	TEST
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999989250480543	WITHOUT_CLASSIFICATION	1.074951945658454E-6	TEST
Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999989250480543	WITHOUT_CLASSIFICATION	1.074951945658454E-6	TEST
create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999993764415318	WITHOUT_CLASSIFICATION	6.235584680715349E-7	TEST
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999887666740308	WITHOUT_CLASSIFICATION	1.1233325969174896E-5	TEST
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999998573013671	WITHOUT_CLASSIFICATION	1.4269863293135096E-7	TEST
now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999996084196654	WITHOUT_CLASSIFICATION	3.9158033458228863E-7	TEST
old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999998686731594	WITHOUT_CLASSIFICATION	1.3132684063999318E-7	TEST
1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999983747638752	WITHOUT_CLASSIFICATION	1.625236124763465E-6	TEST
double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999999857783604	WITHOUT_CLASSIFICATION	1.4221639799161705E-8	TEST
setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999927505007425	WITHOUT_CLASSIFICATION	7.2494992574180344E-6	TEST
isFoo() => foo, isFoo() => foo()	WITHOUT_CLASSIFICATION	0.9998714411078924	WITHOUT_CLASSIFICATION	1.2855889210764294E-4	TEST
is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999987006484292	WITHOUT_CLASSIFICATION	1.2993515708069767E-5	TEST
one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999870456845038	WITHOUT_CLASSIFICATION	1.2954315496172871E-5	TEST
Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999962967735909	WITHOUT_CLASSIFICATION	3.7032264090589602E-6	TEST
note: intentionally returning the actual array returned from Java, rather than wrapping it in a RubyArray. wave of the future, when java_class will return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999998417519735	WITHOUT_CLASSIFICATION	1.5824802632420969E-7	TEST
see note above re: return type	WITHOUT_CLASSIFICATION	0.9999931732030094	WITHOUT_CLASSIFICATION	6.826796990547976E-6	TEST
restrictive security policy; no matter, we only want public classes anyway	WITHOUT_CLASSIFICATION	0.9999993144491897	WITHOUT_CLASSIFICATION	6.855508104309965E-7	TEST
very restrictive policy (disallows Member.PUBLIC) we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999984481296602	WITHOUT_CLASSIFICATION	1.5518703398222492E-6	TEST
one-dimensional array	WITHOUT_CLASSIFICATION	0.999997874486682	WITHOUT_CLASSIFICATION	2.125513317970377E-6	TEST
n-dimensional array	WITHOUT_CLASSIFICATION	0.9999991840348649	WITHOUT_CLASSIFICATION	8.159651351226615E-7	TEST
if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.999995633724211	WITHOUT_CLASSIFICATION	4.366275789025073E-6	TEST
we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999998277982858	WITHOUT_CLASSIFICATION	1.7220171420667357E-7	TEST
Proc implementing an interface, pull in the catch-all code that lets the proc get invoked no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999999925673918	WITHOUT_CLASSIFICATION	7.432608230852893E-9	TEST
can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999900657621933	WITHOUT_CLASSIFICATION	9.934237806750147E-6	TEST
getFooBar() => fooBar?, foo_bar?()	WITHOUT_CLASSIFICATION	0.9999925098624556	WITHOUT_CLASSIFICATION	7.49013754446377E-6	TEST
If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.999992388496541	WITHOUT_CLASSIFICATION	7.611503458873189E-6	TEST
many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999952698107022	WITHOUT_CLASSIFICATION	4.7301892977514805E-6	TEST
for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999996352248195	WITHOUT_CLASSIFICATION	3.647751804636223E-7	TEST
rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999986774667357	WITHOUT_CLASSIFICATION	1.3225332643527795E-6	TEST
the converters handle not only primitive types but also their boxed versions, so we should check if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.999995621640486	WITHOUT_CLASSIFICATION	4.378359513887304E-6	TEST
it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999727499831947	WITHOUT_CLASSIFICATION	2.7250016805296587E-5	TEST
we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999997661157963	WITHOUT_CLASSIFICATION	2.3388420364534604E-7	TEST
set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999991359280167	WITHOUT_CLASSIFICATION	8.640719832855471E-7	TEST
the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999943577536325	WITHOUT_CLASSIFICATION	5.642246367448516E-6	TEST
InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999764430333405	WITHOUT_CLASSIFICATION	2.3556966659513522E-5	TEST
also create the JavaProxy classes	WITHOUT_CLASSIFICATION	0.9999857691315283	WITHOUT_CLASSIFICATION	1.4230868471727338E-5	TEST
The template for interface modules	WITHOUT_CLASSIFICATION	0.9999997729208954	WITHOUT_CLASSIFICATION	2.2707910475461286E-7	TEST
Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.999999043814411	WITHOUT_CLASSIFICATION	9.561855890388343E-7	TEST
add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.999999425210036	WITHOUT_CLASSIFICATION	5.747899639088494E-7	TEST
add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9998954308239649	WITHOUT_CLASSIFICATION	1.0456917603502978E-4	TEST
finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999998826925504	WITHOUT_CLASSIFICATION	1.1730744966370371E-7	TEST
shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.99999975279129	WITHOUT_CLASSIFICATION	2.472087100217528E-7	TEST
include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999997364264792	WITHOUT_CLASSIFICATION	2.6357352079448205E-7	TEST
java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.999993394067079	WITHOUT_CLASSIFICATION	6.6059329209692595E-6	TEST
other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999987089280482	WITHOUT_CLASSIFICATION	1.2910719517855712E-6	TEST
include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999999475662684	WITHOUT_CLASSIFICATION	5.2433731537596474E-8	TEST
JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999996406013706	WITHOUT_CLASSIFICATION	3.593986293913156E-7	TEST
add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999989824197794	WITHOUT_CLASSIFICATION	1.0175802206992452E-6	TEST
add alias to meta	WITHOUT_CLASSIFICATION	0.9999988290111833	WITHOUT_CLASSIFICATION	1.1709888167144837E-6	TEST
we'll only map conventional class names to modules	WITHOUT_CLASSIFICATION	0.9999995512063876	WITHOUT_CLASSIFICATION	4.487936124158568E-7	TEST
expected	WITHOUT_CLASSIFICATION	0.9999663098693364	WITHOUT_CLASSIFICATION	3.369013066355262E-5	TEST
Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999978058439236	WITHOUT_CLASSIFICATION	2.1941560763784747E-6	TEST
upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999987108922341	WITHOUT_CLASSIFICATION	1.289107765881424E-6	TEST
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999992746834694	WITHOUT_CLASSIFICATION	7.253165306222801E-7	TEST
add alias to meta	WITHOUT_CLASSIFICATION	0.9999988290111833	WITHOUT_CLASSIFICATION	1.1709888167144837E-6	TEST
this is where we'll get connected when classes are opened using package module syntax.	WITHOUT_CLASSIFICATION	0.9999743873798569	WITHOUT_CLASSIFICATION	2.5612620143103696E-5	TEST
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999754760022	WITHOUT_CLASSIFICATION	2.452399793045875E-8	TEST
this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999996165857968	WITHOUT_CLASSIFICATION	3.8341420314878395E-7	TEST
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9999991375073137	WITHOUT_CLASSIFICATION	8.624926863592009E-7	TEST
not primitive or lc class	WITHOUT_CLASSIFICATION	0.9999991375073137	WITHOUT_CLASSIFICATION	8.624926863592009E-7	TEST
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999995606579478	WITHOUT_CLASSIFICATION	4.393420521737702E-7	TEST
Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.999999960042081	WITHOUT_CLASSIFICATION	3.995791894705315E-8	TEST
hashcode is a combination of the interfaces and the Ruby class we're using to implement them	WITHOUT_CLASSIFICATION	0.999999942030904	WITHOUT_CLASSIFICATION	5.796909591711867E-8	TEST
if it's a singleton class and the real class is proc, we're doing closure conversion so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.999999780800283	WITHOUT_CLASSIFICATION	2.1919971702278715E-7	TEST
normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999996528696172	WITHOUT_CLASSIFICATION	3.471303827807163E-7	TEST
Initialize some components.	WITHOUT_CLASSIFICATION	0.9999983094263735	WITHOUT_CLASSIFICATION	1.6905736265989709E-6	TEST
not synchronizing these methods, no harm if these values get set more than once. (also note that there's no chance of getting a partially initialized class/module, as happens-before is guaranteed by volatile write/read of constants table.)	WITHOUT_CLASSIFICATION	0.9999848601057608	WITHOUT_CLASSIFICATION	1.5139894239150614E-5	TEST
Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999978837763773	WITHOUT_CLASSIFICATION	2.1162236226014693E-6	TEST
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999989278150637	WITHOUT_CLASSIFICATION	1.0721849362332297E-6	TEST
for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999989278150637	WITHOUT_CLASSIFICATION	1.0721849362332297E-6	TEST
no matching ctor found	WITHOUT_CLASSIFICATION	0.9999975916250967	WITHOUT_CLASSIFICATION	2.408374903399793E-6	TEST
Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999833256721454	WITHOUT_CLASSIFICATION	1.6674327854543224E-5	TEST
prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999996035593351	WITHOUT_CLASSIFICATION	3.9644066487629084E-7	TEST
must be a public method	WITHOUT_CLASSIFICATION	0.9999990056650193	WITHOUT_CLASSIFICATION	9.943349806079676E-7	TEST
must be a public class	WITHOUT_CLASSIFICATION	0.9999979612950984	WITHOUT_CLASSIFICATION	2.038704901485977E-6	TEST
must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999999246684372	WITHOUT_CLASSIFICATION	7.533156275904977E-8	TEST
Special classes like Collections.EMPTY_LIST are inner classes that are private but implement public interfaces. Their methods are all public methods for the public interface. Let these public methods execute via setAccessible(true).	WITHOUT_CLASSIFICATION	0.9999999997538486	WITHOUT_CLASSIFICATION	2.4615148673338553E-10	TEST
search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999993137288125	WITHOUT_CLASSIFICATION	6.862711876461868E-7	TEST
no matching method found	WITHOUT_CLASSIFICATION	0.9999975518334918	WITHOUT_CLASSIFICATION	2.4481665081440085E-6	TEST
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9996931625704405	WITHOUT_CLASSIFICATION	3.0683742955949644E-4	TEST
First we need to register the JRuby engine.	WITHOUT_CLASSIFICATION	0.9999806727272814	WITHOUT_CLASSIFICATION	1.9327272718523298E-5	TEST
Now we create a new BSFManager.	WITHOUT_CLASSIFICATION	0.9999721986757374	WITHOUT_CLASSIFICATION	2.780132426262196E-5	TEST
Initialize a simple Frame.	WITHOUT_CLASSIFICATION	0.9999998629575902	WITHOUT_CLASSIFICATION	1.3704240982124735E-7	TEST
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999955976687358	WITHOUT_CLASSIFICATION	4.402331264227673E-6	TEST
e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999955976687358	WITHOUT_CLASSIFICATION	4.402331264227673E-6	TEST
JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999944348457719	WITHOUT_CLASSIFICATION	5.565154228167366E-6	TEST
end class	WITHOUT_CLASSIFICATION	0.9999985935909549	WITHOUT_CLASSIFICATION	1.4064090450647894E-6	TEST
this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9996931625704405	WITHOUT_CLASSIFICATION	3.0683742955949644E-4	TEST
for our purposes, Accessibles are also Members, and vice-versa, so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999999911235922	WITHOUT_CLASSIFICATION	8.876407882374999E-9	TEST
Declare those components as beans in BSF. Then it will be possible to access those components in Ruby as global variables ($frame, $menubar, ...)	WITHOUT_CLASSIFICATION	0.9999999206268753	WITHOUT_CLASSIFICATION	7.937312476975979E-8	TEST
Execute a Ruby script (add the menubar to the frame).	WITHOUT_CLASSIFICATION	0.9999999278247894	WITHOUT_CLASSIFICATION	7.217521048377942E-8	TEST
Execute Ruby statements.	WITHOUT_CLASSIFICATION	0.9999961313479546	WITHOUT_CLASSIFICATION	3.868652045376196E-6	TEST
Evaluates a Ruby expression and display the result.	WITHOUT_CLASSIFICATION	0.9999993219631406	WITHOUT_CLASSIFICATION	6.780368594198512E-7	TEST
Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.999995941919408	WITHOUT_CLASSIFICATION	4.058080591948764E-6	TEST
package scope	WITHOUT_CLASSIFICATION	0.9999913933246554	WITHOUT_CLASSIFICATION	8.606675344617567E-6	TEST
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999992746834694	WITHOUT_CLASSIFICATION	7.253165306222801E-7	TEST
Ruby-level methods	WITHOUT_CLASSIFICATION	0.9999978000522567	WITHOUT_CLASSIFICATION	2.19994774320393E-6	TEST
need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9998884078933467	WITHOUT_CLASSIFICATION	1.1159210665331885E-4	TEST
we only collect methods and interfaces for user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999998597100072	WITHOUT_CLASSIFICATION	1.4028999282396143E-7	TEST
get JavaClass if this is the new proxy class; verify it matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999905833841203	WITHOUT_CLASSIFICATION	9.416615879729483E-6	TEST
get any included interfaces	WITHOUT_CLASSIFICATION	0.9999997242766049	WITHOUT_CLASSIFICATION	2.7572339517312196E-7	TEST
lock in the overridden methods for the new class, and any as-yet uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999998321883107	WITHOUT_CLASSIFICATION	1.6781168932691788E-7	TEST
statically initialized below	WITHOUT_CLASSIFICATION	0.9999997949096613	WITHOUT_CLASSIFICATION	2.0509033880771783E-7	TEST
finish class initializer	WITHOUT_CLASSIFICATION	0.9999998328496955	WITHOUT_CLASSIFICATION	1.6715030455478657E-7	TEST
trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.999999867538968	WITHOUT_CLASSIFICATION	1.3246103206019833E-7	TEST
should not happen!	WITHOUT_CLASSIFICATION	0.9999945402814491	WITHOUT_CLASSIFICATION	5.459718550875834E-6	TEST
start class	WITHOUT_CLASSIFICATION	0.9999857526010912	WITHOUT_CLASSIFICATION	1.4247398908862847E-5	TEST
make getter for handler	WITHOUT_CLASSIFICATION	0.9999987541733389	WITHOUT_CLASSIFICATION	1.2458266610727534E-6	TEST
make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999982606626964	WITHOUT_CLASSIFICATION	1.7393373036101019E-6	TEST
add (potentially) overridden names to the key. TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9996346316659345	WITHOUT_CLASSIFICATION	3.653683340654868E-4	TEST
We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999980353965436	WITHOUT_CLASSIFICATION	1.9646034564397283E-6	TEST
create static private method field	WITHOUT_CLASSIFICATION	0.9999987166471755	WITHOUT_CLASSIFICATION	1.283352824421103E-6	TEST
load static empty array	WITHOUT_CLASSIFICATION	0.9999989648875954	WITHOUT_CLASSIFICATION	1.0351124045980956E-6	TEST
box arguments	WITHOUT_CLASSIFICATION	0.999998163827578	WITHOUT_CLASSIFICATION	1.8361724220122763E-6	TEST
this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999981324622004	WITHOUT_CLASSIFICATION	1.8675377996330895E-6	TEST
construct the super-proxy method	WITHOUT_CLASSIFICATION	0.999999084272247	WITHOUT_CLASSIFICATION	9.157277530488652E-7	TEST
do a void return	WITHOUT_CLASSIFICATION	0.9999995655219863	WITHOUT_CLASSIFICATION	4.344780137232922E-7	TEST
utility methods	WITHOUT_CLASSIFICATION	0.9999984350126868	WITHOUT_CLASSIFICATION	1.5649873132095376E-6	TEST
Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999995606579478	WITHOUT_CLASSIFICATION	4.393420521737702E-7	TEST
store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999981725822601	WITHOUT_CLASSIFICATION	1.8274177399440605E-6	TEST
use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.999999885501464	WITHOUT_CLASSIFICATION	1.144985360000638E-7	TEST
no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999924347176838	WITHOUT_CLASSIFICATION	7.565282316096072E-6	TEST
only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999949062779322	WITHOUT_CLASSIFICATION	5.093722067813504E-6	TEST
opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999876470425123	WITHOUT_CLASSIFICATION	1.235295748770451E-5	TEST
opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999984156728078	WITHOUT_CLASSIFICATION	1.5843271922208265E-6	TEST
No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999971488950307	WITHOUT_CLASSIFICATION	2.851104969452713E-6	TEST
If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999994108980979	WITHOUT_CLASSIFICATION	5.891019020767004E-7	TEST
The current block is already associated with proc. No need to create a new one	WITHOUT_CLASSIFICATION	0.9999807797034971	WITHOUT_CLASSIFICATION	1.9220296502989437E-5	TEST
Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999998828073057	WITHOUT_CLASSIFICATION	1.1719269437475987E-7	TEST
NUL	WITHOUT_CLASSIFICATION	0.9996713924296725	WITHOUT_CLASSIFICATION	3.286075703274931E-4	TEST
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999853371426936	WITHOUT_CLASSIFICATION	1.4662857306331341E-5	TEST
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999952186509731	WITHOUT_CLASSIFICATION	4.7813490269668695E-6	TEST
'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999167115456	WITHOUT_CLASSIFICATION	8.328845428467765E-8	TEST
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999588856862001	WITHOUT_CLASSIFICATION	4.1114313799996526E-5	TEST
read-volatile	WITHOUT_CLASSIFICATION	0.9999981369198154	WITHOUT_CLASSIFICATION	1.8630801845439981E-6	TEST
read-volatile	WITHOUT_CLASSIFICATION	0.9999981369198154	WITHOUT_CLASSIFICATION	1.8630801845439981E-6	TEST
classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999999918019924	WITHOUT_CLASSIFICATION	8.198007566289795E-9	TEST
must be power of 2 must be power of 2	WITHOUT_CLASSIFICATION	0.9999872838462135	WITHOUT_CLASSIFICATION	1.2716153786584585E-5	TEST
Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999961105864038	WITHOUT_CLASSIFICATION	3.889413596200215E-6	TEST
note segmentShift differs from ConcurrentHashMap's calculation due to issues with System.identityHashCode (upper n bits always 0, at least under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999998957681219	WITHOUT_CLASSIFICATION	1.0423187805378492E-7	TEST
System.err.println("ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999997076061719	WITHOUT_CLASSIFICATION	2.9239382819339636E-7	TEST
protected void finalize() throws Throwable { System.err.println("ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); }	WITHOUT_CLASSIFICATION	0.9999997094715205	WITHOUT_CLASSIFICATION	2.905284794741849E-7	TEST
EntryRefs include hash with key to facilitate lookup by Segment#expunge after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999666091037	WITHOUT_CLASSIFICATION	3.33908962094304E-8	TEST
Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather makes it a final field. The theory is that doing so should force a happens-before relationship WRT the WeakReference constructor, guaranteeing that the key will be visibile to other threads (unless it's been GC'ed). See JLS 17.5 (final fields) and 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999994872822179	WITHOUT_CLASSIFICATION	5.12717782123491E-7	TEST
references to the Java object and its proxy will either both be weak or both be soft, since the proxy contains a strong reference to the object, so it wouldn't make sense for the reference types to differ.	WITHOUT_CLASSIFICATION	0.9999992137768718	WITHOUT_CLASSIFICATION	7.862231280847493E-7	TEST
ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999985075661447	WITHOUT_CLASSIFICATION	1.4924338552605657E-6	TEST
must be called under lock	WITHOUT_CLASSIFICATION	0.9999997354929165	WITHOUT_CLASSIFICATION	2.6450708336058715E-7	TEST
must be called under lock	WITHOUT_CLASSIFICATION	0.9999997354929165	WITHOUT_CLASSIFICATION	2.6450708336058715E-7	TEST
must be called under lock	WITHOUT_CLASSIFICATION	0.9999997354929165	WITHOUT_CLASSIFICATION	2.6450708336058715E-7	TEST
note that we'll potentially see the refs for both the java object and proxy -- whichever we see first will cause the entry to be removed; the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999977602816	WITHOUT_CLASSIFICATION	2.239718444203749E-9	TEST
temp method to verify tableSize value must be called under lock	WITHOUT_CLASSIFICATION	0.999999963796087	WITHOUT_CLASSIFICATION	3.6203912985089864E-8	TEST
Single node in list	WITHOUT_CLASSIFICATION	0.9999991620223958	WITHOUT_CLASSIFICATION	8.379776041834708E-7	TEST
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999996053656985	WITHOUT_CLASSIFICATION	3.946343014675131E-7	TEST
indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999996053656985	WITHOUT_CLASSIFICATION	3.946343014675131E-7	TEST
entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999981320838526	WITHOUT_CLASSIFICATION	1.8679161473912902E-6	TEST
Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999852251960437	WITHOUT_CLASSIFICATION	1.4774803956229598E-5	TEST
Start of string ([, (, {, <, ', ", \n)	WITHOUT_CLASSIFICATION	0.9999464862285287	WITHOUT_CLASSIFICATION	5.351377147136907E-5	TEST
Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.999998553166858	WITHOUT_CLASSIFICATION	1.446833141954151E-6	TEST
How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999989829260986	WITHOUT_CLASSIFICATION	1.017073901421622E-6	TEST
For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999966099362816	WITHOUT_CLASSIFICATION	3.390063718415476E-6	TEST
Last full line read.	WITHOUT_CLASSIFICATION	0.9999996784059877	WITHOUT_CLASSIFICATION	3.215940123251338E-7	TEST
Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999994339867674	WITHOUT_CLASSIFICATION	5.660132326958611E-7	TEST
Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999987356353282	WITHOUT_CLASSIFICATION	1.2643646718809524E-6	TEST
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999988077380928	WITHOUT_CLASSIFICATION	1.1922619071320431E-6	TEST
Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999988077380928	WITHOUT_CLASSIFICATION	1.1922619071320431E-6	TEST
End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999234074653504	WITHOUT_CLASSIFICATION	7.659253464962825E-5	TEST
How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999810400659732	WITHOUT_CLASSIFICATION	1.8959934026790294E-5	TEST
Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999992296784851	WITHOUT_CLASSIFICATION	7.703215148315064E-7	TEST
Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999811281969114	WITHOUT_CLASSIFICATION	1.88718030886145E-5	TEST
Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999998836726482	WITHOUT_CLASSIFICATION	1.1632735165093977E-7	TEST
just ignore	WITHOUT_CLASSIFICATION	0.9999991394980154	WITHOUT_CLASSIFICATION	8.605019845856613E-7	TEST
octal constant	WITHOUT_CLASSIFICATION	0.9999947809752013	WITHOUT_CLASSIFICATION	5.219024798771126E-6	TEST
hex constant	WITHOUT_CLASSIFICATION	0.9999977279741293	WITHOUT_CLASSIFICATION	2.2720258706819056E-6	TEST
PUSH(1)	WITHOUT_CLASSIFICATION	0.999766434864833	WITHOUT_CLASSIFICATION	2.3356513516703393E-4	TEST
POP	WITHOUT_CLASSIFICATION	0.9995179011061552	WITHOUT_CLASSIFICATION	4.8209889384473237E-4	TEST
PUSH(0). If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999998736241185	WITHOUT_CLASSIFICATION	1.263758815522153E-7	TEST
LEXPOP	WITHOUT_CLASSIFICATION	0.9996876243581172	WITHOUT_CLASSIFICATION	3.123756418828731E-4	TEST
SET_P	WITHOUT_CLASSIFICATION	0.9996365483905454	WITHOUT_CLASSIFICATION	3.634516094546783E-4	TEST
Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999990305725298	WITHOUT_CLASSIFICATION	9.694274702368432E-7	TEST
Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999752497968593	WITHOUT_CLASSIFICATION	2.4750203140705922E-5	TEST
Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999999707445093	WITHOUT_CLASSIFICATION	2.9255490744289115E-8	TEST
Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999997791771852	WITHOUT_CLASSIFICATION	2.2082281478807E-7	TEST
Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999476866616904	WITHOUT_CLASSIFICATION	5.2313338309641415E-5	TEST
Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.999999376416889	WITHOUT_CLASSIFICATION	6.235831110115795E-7	TEST
Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999277738314	WITHOUT_CLASSIFICATION	7.22261686174077E-8	TEST
Give a name to a value. Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9996535516462798	WITHOUT_CLASSIFICATION	3.464483537201986E-4	TEST
When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999999099998346	WITHOUT_CLASSIFICATION	9.000016532955085E-8	TEST
Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999994765673174	WITHOUT_CLASSIFICATION	5.23432682607854E-7	TEST
Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999775570371966	WITHOUT_CLASSIFICATION	2.2442962803439303E-5	TEST
1.9 only	WITHOUT_CLASSIFICATION	0.9999715249988951	WITHOUT_CLASSIFICATION	2.8475001104896415E-5	TEST
Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.999999376464651	WITHOUT_CLASSIFICATION	6.235353490233954E-7	TEST
Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999926628407697	WITHOUT_CLASSIFICATION	7.3371592302942876E-6	TEST
no mb || ismbchar(term)	WITHOUT_CLASSIFICATION	0.9999983261986362	WITHOUT_CLASSIFICATION	1.67380136386756E-6	TEST
Not normally used, but is left in here since it can be useful in debugging grammar and lexing problems.	WITHOUT_CLASSIFICATION	0.9999999616238511	WITHOUT_CLASSIFICATION	3.8376148978152456E-8	TEST
DEBUGGING HELP	WITHOUT_CLASSIFICATION	0.9999036542620987	WITHOUT_CLASSIFICATION	9.634573790136585E-5	TEST
'\v'	WITHOUT_CLASSIFICATION	0.9991176179858471	WITHOUT_CLASSIFICATION	8.823820141528296E-4	TEST
end of script.	WITHOUT_CLASSIFICATION	0.9999986209223365	WITHOUT_CLASSIFICATION	1.3790776634417463E-6	TEST
white spaces	WITHOUT_CLASSIFICATION	0.9999973785583874	WITHOUT_CLASSIFICATION	2.621441612651113E-6	TEST
'\v'	WITHOUT_CLASSIFICATION	0.9991176179858471	WITHOUT_CLASSIFICATION	8.823820141528296E-4	TEST
it's a comment	WITHOUT_CLASSIFICATION	0.9999986931644054	WITHOUT_CLASSIFICATION	1.3068355945649528E-6	TEST
Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999516634988102	WITHOUT_CLASSIFICATION	4.8336501189803234E-5	TEST
$\: output record separator	WITHOUT_CLASSIFICATION	0.9999914753777739	WITHOUT_CLASSIFICATION	8.524622226145574E-6	TEST
EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999964729197538	WITHOUT_CLASSIFICATION	3.5270802460538452E-6	TEST
documentation nodes	WITHOUT_CLASSIFICATION	0.9999984632033693	WITHOUT_CLASSIFICATION	1.5367966307362422E-6	TEST
In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999974902523814	WITHOUT_CLASSIFICATION	2.5097476186140375E-6	TEST
Just a plain bang	WITHOUT_CLASSIFICATION	0.9999969903829496	WITHOUT_CLASSIFICATION	3.0096170503615198E-6	TEST
$_: last read line string	WITHOUT_CLASSIFICATION	0.9999960826033061	WITHOUT_CLASSIFICATION	3.917396694010168E-6	TEST
$~: match-data	WITHOUT_CLASSIFICATION	0.9999808530496234	WITHOUT_CLASSIFICATION	1.9146950376579432E-5	TEST
$: argv	WITHOUT_CLASSIFICATION	0.9999273328504965	WITHOUT_CLASSIFICATION	7.266714950351832E-5	TEST
$$: pid	WITHOUT_CLASSIFICATION	0.9999466363203094	WITHOUT_CLASSIFICATION	5.3363679690544045E-5	TEST
$?: last status	WITHOUT_CLASSIFICATION	0.9999854994817142	WITHOUT_CLASSIFICATION	1.4500518285876752E-5	TEST
$!: error string	WITHOUT_CLASSIFICATION	0.9999933409804441	WITHOUT_CLASSIFICATION	6.659019555926065E-6	TEST
$@: error position	WITHOUT_CLASSIFICATION	0.9999984880661126	WITHOUT_CLASSIFICATION	1.5119338875387505E-6	TEST
$/: input record separator	WITHOUT_CLASSIFICATION	0.9999968713354995	WITHOUT_CLASSIFICATION	3.1286645005198772E-6	TEST
$;: field separator	WITHOUT_CLASSIFICATION	0.9999968501985492	WITHOUT_CLASSIFICATION	3.14980145081791E-6	TEST
$,: output field separator	WITHOUT_CLASSIFICATION	0.9999982326137832	WITHOUT_CLASSIFICATION	1.7673862168555045E-6	TEST
$.: last read line number	WITHOUT_CLASSIFICATION	0.9999964926422438	WITHOUT_CLASSIFICATION	3.5073577563256297E-6	TEST
$=: ignorecase	WITHOUT_CLASSIFICATION	0.9999986048839489	WITHOUT_CLASSIFICATION	1.395116051067043E-6	TEST
$:: load path	WITHOUT_CLASSIFICATION	0.9999546731011477	WITHOUT_CLASSIFICATION	4.5326898852318395E-5	TEST
$<: reading filename	WITHOUT_CLASSIFICATION	0.9999898054208362	WITHOUT_CLASSIFICATION	1.0194579163788974E-5	TEST
$": already loaded files	WITHOUT_CLASSIFICATION	0.9999981145912363	WITHOUT_CLASSIFICATION	1.885408763627734E-6	TEST
$&: last match	WITHOUT_CLASSIFICATION	0.9999638001206649	WITHOUT_CLASSIFICATION	3.619987933510395E-5	TEST
$`: string before last match	WITHOUT_CLASSIFICATION	0.9999963594300748	WITHOUT_CLASSIFICATION	3.6405699252235625E-6	TEST
$': string after last match	WITHOUT_CLASSIFICATION	0.99999312665357	WITHOUT_CLASSIFICATION	6.873346430008192E-6	TEST
methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999989296167411	WITHOUT_CLASSIFICATION	1.0703832588894886E-6	TEST
See if it is a reserved word.	WITHOUT_CLASSIFICATION	0.999985278654675	WITHOUT_CLASSIFICATION	1.4721345325010142E-5	TEST
enum lex_state	WITHOUT_CLASSIFICATION	0.9999966467510506	WITHOUT_CLASSIFICATION	3.3532489493966307E-6	TEST
block (primary)	WITHOUT_CLASSIFICATION	0.999996045941082	WITHOUT_CLASSIFICATION	3.954058917987541E-6	TEST
block (expr)	WITHOUT_CLASSIFICATION	0.9999934883143533	WITHOUT_CLASSIFICATION	6.511685646747473E-6	TEST
hash	WITHOUT_CLASSIFICATION	0.9997680642333809	WITHOUT_CLASSIFICATION	2.3193576661899502E-4	TEST
ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999646790760962	WITHOUT_CLASSIFICATION	3.5320923903792244E-5	TEST
FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999872091440632	WITHOUT_CLASSIFICATION	1.2790855936680106E-5	TEST
We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999985019024348	WITHOUT_CLASSIFICATION	1.4980975652894964E-6	TEST
hexadecimal	WITHOUT_CLASSIFICATION	0.9999630303056648	WITHOUT_CLASSIFICATION	3.696969433510598E-5	TEST
binary	WITHOUT_CLASSIFICATION	0.9999537538466102	WITHOUT_CLASSIFICATION	4.6246153389840344E-5	TEST
decimal	WITHOUT_CLASSIFICATION	0.9999837775168664	WITHOUT_CLASSIFICATION	1.6222483133616553E-5	TEST
Octal	WITHOUT_CLASSIFICATION	0.9999639655496012	WITHOUT_CLASSIFICATION	3.603445039880993E-5	TEST
'_' in number just ignored	WITHOUT_CLASSIFICATION	0.99999951388043	WITHOUT_CLASSIFICATION	4.861195700282448E-7	TEST
backslash	WITHOUT_CLASSIFICATION	0.9999533908234008	WITHOUT_CLASSIFICATION	4.660917659909205E-5	TEST
newline	WITHOUT_CLASSIFICATION	0.9999382926367186	WITHOUT_CLASSIFICATION	6.170736328138566E-5	TEST
horizontal tab	WITHOUT_CLASSIFICATION	0.9999958416411532	WITHOUT_CLASSIFICATION	4.158358846823664E-6	TEST
form feed	WITHOUT_CLASSIFICATION	0.9999901387933012	WITHOUT_CLASSIFICATION	9.861206698678368E-6	TEST
vertical tab	WITHOUT_CLASSIFICATION	0.9999953984419062	WITHOUT_CLASSIFICATION	4.601558093772174E-6	TEST
alarm(bell)	WITHOUT_CLASSIFICATION	0.999875898101037	WITHOUT_CLASSIFICATION	1.2410189896300844E-4	TEST
escape	WITHOUT_CLASSIFICATION	0.9999522044696196	WITHOUT_CLASSIFICATION	4.7795530380393385E-5	TEST
hex constant	WITHOUT_CLASSIFICATION	0.9999977279741293	WITHOUT_CLASSIFICATION	2.2720258706819056E-6	TEST
char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999994872104991	WITHOUT_CLASSIFICATION	5.127895009170056E-7	TEST
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999997395373017	WITHOUT_CLASSIFICATION	2.6046269828719217E-7	TEST
space	WITHOUT_CLASSIFICATION	0.9999805856805665	WITHOUT_CLASSIFICATION	1.941431943352409E-5	TEST
Where we started this marker match	WITHOUT_CLASSIFICATION	0.9998071469887061	WITHOUT_CLASSIFICATION	1.9285301129404127E-4	TEST
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999990291127256	WITHOUT_CLASSIFICATION	9.708872744019145E-7	TEST
We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.999999925848258	WITHOUT_CLASSIFICATION	7.415174205820595E-8	TEST
If \r\n then just pass along \n (windows). If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999997395373017	WITHOUT_CLASSIFICATION	2.6046269828719217E-7	TEST
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999940369329685	WITHOUT_CLASSIFICATION	5.963067031508652E-6	TEST
FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999940369329685	WITHOUT_CLASSIFICATION	5.963067031508652E-6	TEST
Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999809501908595	WITHOUT_CLASSIFICATION	1.9049809140438045E-5	TEST
Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.999998895797604	WITHOUT_CLASSIFICATION	1.1042023960095348E-6	TEST
index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999998647996265	WITHOUT_CLASSIFICATION	1.3520037356874646E-7	TEST
Character read before previous read	WITHOUT_CLASSIFICATION	0.9999959710143498	WITHOUT_CLASSIFICATION	4.028985650180686E-6	TEST
keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999987271803736	WITHOUT_CLASSIFICATION	1.272819626292637E-6	TEST
NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999988153994114	WITHOUT_CLASSIFICATION	1.1846005886355717E-6	TEST
BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999698534620161	WITHOUT_CLASSIFICATION	3.0146537983947937E-5	TEST
TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. We did it here for now	WITHOUT_CLASSIFICATION	0.9819969349110043	WITHOUT_CLASSIFICATION	0.01800306508899577	TEST
Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.999999351140844	WITHOUT_CLASSIFICATION	6.488591559455383E-7	TEST
that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999980573709895	WITHOUT_CLASSIFICATION	1.9426290106252435E-6	TEST
Rubygems is too specific on host cpu so until we have real need lets default to universal setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999986137343759	WITHOUT_CLASSIFICATION	1.3862656240259872E-6	TEST
Our shell scripts pass in non-canonicalized paths, but even if we didn't anyone who did would become unhappy because Ruby apps expect no relative operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999959103213	WITHOUT_CLASSIFICATION	4.089678664232243E-9	TEST
this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999924011179278	WITHOUT_CLASSIFICATION	7.598882072285199E-6	TEST
DigestLibrary	WITHOUT_CLASSIFICATION	0.9999063517634658	WITHOUT_CLASSIFICATION	9.364823653424012E-5	TEST
all errors, just info; do not prevent loading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999909036877586	WITHOUT_CLASSIFICATION	9.096312241417862E-6	TEST
all errors, just info; do not prevent unloading IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999910487256146	WITHOUT_CLASSIFICATION	8.951274385334662E-6	TEST
do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999961288486141	WITHOUT_CLASSIFICATION	3.871151385898663E-6	TEST
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999545027491934	WITHOUT_CLASSIFICATION	4.5497250806623796E-5	TEST
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999545027491934	WITHOUT_CLASSIFICATION	4.5497250806623796E-5	TEST
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999545027491934	WITHOUT_CLASSIFICATION	4.5497250806623796E-5	TEST
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999545027491934	WITHOUT_CLASSIFICATION	4.5497250806623796E-5	TEST
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999545027491934	WITHOUT_CLASSIFICATION	4.5497250806623796E-5	TEST
line 329	WITHOUT_CLASSIFICATION	0.9999789905655707	WITHOUT_CLASSIFICATION	2.1009434429245265E-5	TEST
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999923534228587	WITHOUT_CLASSIFICATION	7.646577141139061E-6	TEST
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999767946341125	WITHOUT_CLASSIFICATION	2.3205365887553693E-5	TEST
dynamically increase	WITHOUT_CLASSIFICATION	0.9999993565172123	WITHOUT_CLASSIFICATION	6.434827876908583E-7	TEST
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999864814664403	WITHOUT_CLASSIFICATION	1.3518533559562016E-5	TEST
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999996246912182	WITHOUT_CLASSIFICATION	3.7530878179881027E-7	TEST
shift to yyN	WITHOUT_CLASSIFICATION	0.9999934041787006	WITHOUT_CLASSIFICATION	6.595821299260754E-6	TEST
reduce (yyN)	WITHOUT_CLASSIFICATION	0.999989518065108	WITHOUT_CLASSIFICATION	1.048193489197488E-5	TEST
leave stack alone	WITHOUT_CLASSIFICATION	0.99999827850608	WITHOUT_CLASSIFICATION	1.7214939199477856E-6	TEST
line 271	WITHOUT_CLASSIFICATION	0.9999931488284963	WITHOUT_CLASSIFICATION	6.851171503760396E-6	TEST
line 274	WITHOUT_CLASSIFICATION	0.999991099274271	WITHOUT_CLASSIFICATION	8.900725729012268E-6	TEST
line 303	WITHOUT_CLASSIFICATION	0.9999796489344367	WITHOUT_CLASSIFICATION	2.0351065563330107E-5	TEST
line 311	WITHOUT_CLASSIFICATION	0.9999900414479791	WITHOUT_CLASSIFICATION	9.958552021019724E-6	TEST
line 314	WITHOUT_CLASSIFICATION	0.9999901928706219	WITHOUT_CLASSIFICATION	9.807129378142192E-6	TEST
line 317	WITHOUT_CLASSIFICATION	0.999990193792872	WITHOUT_CLASSIFICATION	9.806207128041095E-6	TEST
line 332	WITHOUT_CLASSIFICATION	0.999983360922775	WITHOUT_CLASSIFICATION	1.6639077225133414E-5	TEST
line 338	WITHOUT_CLASSIFICATION	0.9999849472808837	WITHOUT_CLASSIFICATION	1.5052719116267248E-5	TEST
line 341	WITHOUT_CLASSIFICATION	0.9999902168855052	WITHOUT_CLASSIFICATION	9.783114494765283E-6	TEST
line 344	WITHOUT_CLASSIFICATION	0.999986719001446	WITHOUT_CLASSIFICATION	1.3280998554063502E-5	TEST
line 351	WITHOUT_CLASSIFICATION	0.9999897583149098	WITHOUT_CLASSIFICATION	1.0241685090236417E-5	TEST
line 358	WITHOUT_CLASSIFICATION	0.9999851182719379	WITHOUT_CLASSIFICATION	1.4881728061987604E-5	TEST
line 367	WITHOUT_CLASSIFICATION	0.9999872603399974	WITHOUT_CLASSIFICATION	1.2739660002577494E-5	TEST
line 372	WITHOUT_CLASSIFICATION	0.9999844930674705	WITHOUT_CLASSIFICATION	1.550693252949971E-5	TEST
line 378	WITHOUT_CLASSIFICATION	0.9999858714741054	WITHOUT_CLASSIFICATION	1.4128525894685822E-5	TEST
line 382	WITHOUT_CLASSIFICATION	0.9999827372234116	WITHOUT_CLASSIFICATION	1.726277658837771E-5	TEST
line 407	WITHOUT_CLASSIFICATION	0.999991530349776	WITHOUT_CLASSIFICATION	8.469650224099862E-6	TEST
line 411	WITHOUT_CLASSIFICATION	0.9999944749562327	WITHOUT_CLASSIFICATION	5.5250437673386375E-6	TEST
line 414	WITHOUT_CLASSIFICATION	0.9999942377463698	WITHOUT_CLASSIFICATION	5.7622536302658815E-6	TEST
line 417	WITHOUT_CLASSIFICATION	0.9999945594781464	WITHOUT_CLASSIFICATION	5.440521853475315E-6	TEST
line 420	WITHOUT_CLASSIFICATION	0.9999875822603483	WITHOUT_CLASSIFICATION	1.2417739651719059E-5	TEST
line 426	WITHOUT_CLASSIFICATION	0.9999912200471737	WITHOUT_CLASSIFICATION	8.779952826309569E-6	TEST
line 434	WITHOUT_CLASSIFICATION	0.9999901570310961	WITHOUT_CLASSIFICATION	9.842968904009413E-6	TEST
line 443	WITHOUT_CLASSIFICATION	0.9999898627088133	WITHOUT_CLASSIFICATION	1.01372911866825E-5	TEST
line 446	WITHOUT_CLASSIFICATION	0.999992478789566	WITHOUT_CLASSIFICATION	7.5212104340186996E-6	TEST
line 452	WITHOUT_CLASSIFICATION	0.9999913453744027	WITHOUT_CLASSIFICATION	8.654625597268546E-6	TEST
line 457	WITHOUT_CLASSIFICATION	0.9999930743253007	WITHOUT_CLASSIFICATION	6.9256746992975765E-6	TEST
line 464	WITHOUT_CLASSIFICATION	0.9999925164355279	WITHOUT_CLASSIFICATION	7.483564472091729E-6	TEST
line 467	WITHOUT_CLASSIFICATION	0.9999930030363073	WITHOUT_CLASSIFICATION	6.996963692581224E-6	TEST
line 470	WITHOUT_CLASSIFICATION	0.9999916082378039	WITHOUT_CLASSIFICATION	8.391762196206548E-6	TEST
line 479	WITHOUT_CLASSIFICATION	0.9999918819693153	WITHOUT_CLASSIFICATION	8.118030684702864E-6	TEST
line 484	WITHOUT_CLASSIFICATION	0.9999916388081623	WITHOUT_CLASSIFICATION	8.361191837683136E-6	TEST
line 486	WITHOUT_CLASSIFICATION	0.9999920251865326	WITHOUT_CLASSIFICATION	7.97481346745132E-6	TEST
line 492	WITHOUT_CLASSIFICATION	0.9999897362707119	WITHOUT_CLASSIFICATION	1.0263729288094858E-5	TEST
line 498	WITHOUT_CLASSIFICATION	0.9999905763463809	WITHOUT_CLASSIFICATION	9.423653619046414E-6	TEST
line 501	WITHOUT_CLASSIFICATION	0.999992875454584	WITHOUT_CLASSIFICATION	7.124545415911704E-6	TEST
line 504	WITHOUT_CLASSIFICATION	0.9999906623383094	WITHOUT_CLASSIFICATION	9.337661690544617E-6	TEST
line 507	WITHOUT_CLASSIFICATION	0.9999910045914875	WITHOUT_CLASSIFICATION	8.995408512465183E-6	TEST
line 510	WITHOUT_CLASSIFICATION	0.9999931801842029	WITHOUT_CLASSIFICATION	6.8198157970360945E-6	TEST
line 519	WITHOUT_CLASSIFICATION	0.9999933071248058	WITHOUT_CLASSIFICATION	6.6928751941615854E-6	TEST
line 525	WITHOUT_CLASSIFICATION	0.9999905127086142	WITHOUT_CLASSIFICATION	9.487291385829945E-6	TEST
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999767946341125	WITHOUT_CLASSIFICATION	2.3205365887553693E-5	TEST
line 537	WITHOUT_CLASSIFICATION	0.9999903100123377	WITHOUT_CLASSIFICATION	9.689987662233785E-6	TEST
line 540	WITHOUT_CLASSIFICATION	0.9999906712553691	WITHOUT_CLASSIFICATION	9.328744630935374E-6	TEST
line 543	WITHOUT_CLASSIFICATION	0.9999900171010531	WITHOUT_CLASSIFICATION	9.982898947030994E-6	TEST
line 546	WITHOUT_CLASSIFICATION	0.999992593650199	WITHOUT_CLASSIFICATION	7.4063498009891074E-6	TEST
line 556	WITHOUT_CLASSIFICATION	0.9999923281904072	WITHOUT_CLASSIFICATION	7.671809592812582E-6	TEST
line 559	WITHOUT_CLASSIFICATION	0.9999908935046233	WITHOUT_CLASSIFICATION	9.10649537672283E-6	TEST
line 563	WITHOUT_CLASSIFICATION	0.9999901371163673	WITHOUT_CLASSIFICATION	9.86288363270079E-6	TEST
line 566	WITHOUT_CLASSIFICATION	0.9999923089841073	WITHOUT_CLASSIFICATION	7.691015892718017E-6	TEST
line 569	WITHOUT_CLASSIFICATION	0.9999914527485942	WITHOUT_CLASSIFICATION	8.547251405766608E-6	TEST
line 575	WITHOUT_CLASSIFICATION	0.9999922836385216	WITHOUT_CLASSIFICATION	7.716361478574079E-6	TEST
line 578	WITHOUT_CLASSIFICATION	0.9999917728387836	WITHOUT_CLASSIFICATION	8.227161216421764E-6	TEST
line 587	WITHOUT_CLASSIFICATION	0.9999917192671163	WITHOUT_CLASSIFICATION	8.280732883762413E-6	TEST
line 596	WITHOUT_CLASSIFICATION	0.9999913427454663	WITHOUT_CLASSIFICATION	8.657254533665136E-6	TEST
line 604	WITHOUT_CLASSIFICATION	0.9999908365377914	WITHOUT_CLASSIFICATION	9.163462208506798E-6	TEST
line 607	WITHOUT_CLASSIFICATION	0.9999912230809582	WITHOUT_CLASSIFICATION	8.776919041814302E-6	TEST
line 610	WITHOUT_CLASSIFICATION	0.9999933439543998	WITHOUT_CLASSIFICATION	6.656045600192917E-6	TEST
line 613	WITHOUT_CLASSIFICATION	0.9999923885136811	WITHOUT_CLASSIFICATION	7.611486318914789E-6	TEST
line 616	WITHOUT_CLASSIFICATION	0.9999941052326036	WITHOUT_CLASSIFICATION	5.8947673963758766E-6	TEST
line 634	WITHOUT_CLASSIFICATION	0.9999904711120416	WITHOUT_CLASSIFICATION	9.528887958423444E-6	TEST
line 638	WITHOUT_CLASSIFICATION	0.9999891328943784	WITHOUT_CLASSIFICATION	1.086710562150345E-5	TEST
line 643	WITHOUT_CLASSIFICATION	0.9999902045882682	WITHOUT_CLASSIFICATION	9.795411731776806E-6	TEST
line 646	WITHOUT_CLASSIFICATION	0.9999923663850485	WITHOUT_CLASSIFICATION	7.633614951379897E-6	TEST
line 655	WITHOUT_CLASSIFICATION	0.9999922263006368	WITHOUT_CLASSIFICATION	7.773699363235795E-6	TEST
line 660	WITHOUT_CLASSIFICATION	0.9999902064151212	WITHOUT_CLASSIFICATION	9.793584878822822E-6	TEST
line 667	WITHOUT_CLASSIFICATION	0.9999924421538425	WITHOUT_CLASSIFICATION	7.557846157457955E-6	TEST
line 670	WITHOUT_CLASSIFICATION	0.9999913076582623	WITHOUT_CLASSIFICATION	8.692341737824732E-6	TEST
line 672	WITHOUT_CLASSIFICATION	0.9999911559880601	WITHOUT_CLASSIFICATION	8.844011939918147E-6	TEST
line 696	WITHOUT_CLASSIFICATION	0.9999910225844199	WITHOUT_CLASSIFICATION	8.977415580222882E-6	TEST
line 701	WITHOUT_CLASSIFICATION	0.999993543080474	WITHOUT_CLASSIFICATION	6.456919525967646E-6	TEST
line 717	WITHOUT_CLASSIFICATION	0.9999941221594705	WITHOUT_CLASSIFICATION	5.8778405294514015E-6	TEST
line 720	WITHOUT_CLASSIFICATION	0.9999873122743914	WITHOUT_CLASSIFICATION	1.2687725608610387E-5	TEST
line 726	WITHOUT_CLASSIFICATION	0.9999910291531106	WITHOUT_CLASSIFICATION	8.970846889367381E-6	TEST
line 729	WITHOUT_CLASSIFICATION	0.9999881044480375	WITHOUT_CLASSIFICATION	1.1895551962473161E-5	TEST
line 732	WITHOUT_CLASSIFICATION	0.9999880325288473	WITHOUT_CLASSIFICATION	1.1967471152764805E-5	TEST
line 735	WITHOUT_CLASSIFICATION	0.9999900882358259	WITHOUT_CLASSIFICATION	9.91176417411699E-6	TEST
line 738	WITHOUT_CLASSIFICATION	0.9999891735040879	WITHOUT_CLASSIFICATION	1.082649591214869E-5	TEST
line 751	WITHOUT_CLASSIFICATION	0.9999942707371655	WITHOUT_CLASSIFICATION	5.729262834448299E-6	TEST
line 754	WITHOUT_CLASSIFICATION	0.999992687336534	WITHOUT_CLASSIFICATION	7.312663466022086E-6	TEST
line 757	WITHOUT_CLASSIFICATION	0.9999922421409799	WITHOUT_CLASSIFICATION	7.757859020179268E-6	TEST
line 760	WITHOUT_CLASSIFICATION	0.9999907196956934	WITHOUT_CLASSIFICATION	9.280304306529617E-6	TEST
line 763	WITHOUT_CLASSIFICATION	0.9999901268105159	WITHOUT_CLASSIFICATION	9.873189484200229E-6	TEST
line 769	WITHOUT_CLASSIFICATION	0.9999914438560521	WITHOUT_CLASSIFICATION	8.5561439480223E-6	TEST
line 772	WITHOUT_CLASSIFICATION	0.9999905369962665	WITHOUT_CLASSIFICATION	9.463003733555444E-6	TEST
line 775	WITHOUT_CLASSIFICATION	0.9999922422977859	WITHOUT_CLASSIFICATION	7.757702213968096E-6	TEST
line 782	WITHOUT_CLASSIFICATION	0.9999899309538208	WITHOUT_CLASSIFICATION	1.0069046179309332E-5	TEST
line 788	WITHOUT_CLASSIFICATION	0.9999915129571464	WITHOUT_CLASSIFICATION	8.487042853543683E-6	TEST
line 791	WITHOUT_CLASSIFICATION	0.9999933728286357	WITHOUT_CLASSIFICATION	6.62717136426305E-6	TEST
line 794	WITHOUT_CLASSIFICATION	0.9999915029145533	WITHOUT_CLASSIFICATION	8.49708544673764E-6	TEST
line 797	WITHOUT_CLASSIFICATION	0.9999910389755594	WITHOUT_CLASSIFICATION	8.961024440507184E-6	TEST
line 803	WITHOUT_CLASSIFICATION	0.9999830826087914	WITHOUT_CLASSIFICATION	1.6917391208622897E-5	TEST
line 806	WITHOUT_CLASSIFICATION	0.9999894003434026	WITHOUT_CLASSIFICATION	1.0599656597400351E-5	TEST
line 809	WITHOUT_CLASSIFICATION	0.9999876222006936	WITHOUT_CLASSIFICATION	1.2377799306389275E-5	TEST
line 815	WITHOUT_CLASSIFICATION	0.9999935008088633	WITHOUT_CLASSIFICATION	6.49919113677821E-6	TEST
line 818	WITHOUT_CLASSIFICATION	0.999993315450006	WITHOUT_CLASSIFICATION	6.68454999402109E-6	TEST
line 821	WITHOUT_CLASSIFICATION	0.9999920962689692	WITHOUT_CLASSIFICATION	7.903731030757216E-6	TEST
line 824	WITHOUT_CLASSIFICATION	0.9999899003270379	WITHOUT_CLASSIFICATION	1.0099672962005917E-5	TEST
line 830	WITHOUT_CLASSIFICATION	0.9999860934511178	WITHOUT_CLASSIFICATION	1.3906548882209244E-5	TEST
line 833	WITHOUT_CLASSIFICATION	0.9999884676456505	WITHOUT_CLASSIFICATION	1.1532354349579316E-5	TEST
line 836	WITHOUT_CLASSIFICATION	0.999989012237242	WITHOUT_CLASSIFICATION	1.0987762758083906E-5	TEST
line 839	WITHOUT_CLASSIFICATION	0.9999871412690258	WITHOUT_CLASSIFICATION	1.285873097432198E-5	TEST
line 842	WITHOUT_CLASSIFICATION	0.9999898245231774	WITHOUT_CLASSIFICATION	1.0175476822503048E-5	TEST
line 848	WITHOUT_CLASSIFICATION	0.9999913939270926	WITHOUT_CLASSIFICATION	8.606072907405274E-6	TEST
line 852	WITHOUT_CLASSIFICATION	0.9999898092867519	WITHOUT_CLASSIFICATION	1.0190713248061784E-5	TEST
line 858	WITHOUT_CLASSIFICATION	0.9999912775727702	WITHOUT_CLASSIFICATION	8.722427229752517E-6	TEST
line 861	WITHOUT_CLASSIFICATION	0.999993526271294	WITHOUT_CLASSIFICATION	6.473728706073502E-6	TEST
line 868	WITHOUT_CLASSIFICATION	0.9999912089405207	WITHOUT_CLASSIFICATION	8.791059479266375E-6	TEST
line 871	WITHOUT_CLASSIFICATION	0.9999937241659836	WITHOUT_CLASSIFICATION	6.275834016342422E-6	TEST
line 876	WITHOUT_CLASSIFICATION	0.9999917809355867	WITHOUT_CLASSIFICATION	8.219064413302355E-6	TEST
line 879	WITHOUT_CLASSIFICATION	0.9999903945531069	WITHOUT_CLASSIFICATION	9.605446893095487E-6	TEST
line 883	WITHOUT_CLASSIFICATION	0.9999886016886966	WITHOUT_CLASSIFICATION	1.139831130344612E-5	TEST
line 893	WITHOUT_CLASSIFICATION	0.9999868909227637	WITHOUT_CLASSIFICATION	1.3109077236351694E-5	TEST
line 896	WITHOUT_CLASSIFICATION	0.9999903483116123	WITHOUT_CLASSIFICATION	9.651688387764953E-6	TEST
line 899	WITHOUT_CLASSIFICATION	0.999989828974803	WITHOUT_CLASSIFICATION	1.0171025197031671E-5	TEST
line 903	WITHOUT_CLASSIFICATION	0.9999820774777206	WITHOUT_CLASSIFICATION	1.7922522279355847E-5	TEST
line 907	WITHOUT_CLASSIFICATION	0.9999893451463543	WITHOUT_CLASSIFICATION	1.0654853645616783E-5	TEST
line 915	WITHOUT_CLASSIFICATION	0.9999930484096862	WITHOUT_CLASSIFICATION	6.951590313848413E-6	TEST
line 920	WITHOUT_CLASSIFICATION	0.9999845385274408	WITHOUT_CLASSIFICATION	1.5461472559152335E-5	TEST
line 923	WITHOUT_CLASSIFICATION	0.9999856438091597	WITHOUT_CLASSIFICATION	1.4356190840259185E-5	TEST
line 926	WITHOUT_CLASSIFICATION	0.9999890694826807	WITHOUT_CLASSIFICATION	1.0930517319264939E-5	TEST
line 932	WITHOUT_CLASSIFICATION	0.9999853116154992	WITHOUT_CLASSIFICATION	1.4688384500879965E-5	TEST
line 936	WITHOUT_CLASSIFICATION	0.9999879410600077	WITHOUT_CLASSIFICATION	1.205893999243439E-5	TEST
line 940	WITHOUT_CLASSIFICATION	0.9999888061504509	WITHOUT_CLASSIFICATION	1.1193849549031415E-5	TEST
line 944	WITHOUT_CLASSIFICATION	0.9999906655324938	WITHOUT_CLASSIFICATION	9.334467506215875E-6	TEST
line 948	WITHOUT_CLASSIFICATION	0.9999900768842106	WITHOUT_CLASSIFICATION	9.923115789507185E-6	TEST
line 956	WITHOUT_CLASSIFICATION	0.9999911473032707	WITHOUT_CLASSIFICATION	8.852696729251594E-6	TEST
line 960	WITHOUT_CLASSIFICATION	0.9999887213253723	WITHOUT_CLASSIFICATION	1.127867462770392E-5	TEST
line 964	WITHOUT_CLASSIFICATION	0.9999912084969826	WITHOUT_CLASSIFICATION	8.7915030173724E-6	TEST
line 967	WITHOUT_CLASSIFICATION	0.9999912960864024	WITHOUT_CLASSIFICATION	8.70391359758203E-6	TEST
line 972	WITHOUT_CLASSIFICATION	0.9999892289756839	WITHOUT_CLASSIFICATION	1.0771024316214282E-5	TEST
line 978	WITHOUT_CLASSIFICATION	0.999990186412973	WITHOUT_CLASSIFICATION	9.813587026980662E-6	TEST
line 980	WITHOUT_CLASSIFICATION	0.9999872257380296	WITHOUT_CLASSIFICATION	1.2774261970331394E-5	TEST
line 984	WITHOUT_CLASSIFICATION	0.999990033918475	WITHOUT_CLASSIFICATION	9.966081525030683E-6	TEST
line 986	WITHOUT_CLASSIFICATION	0.9999899346919874	WITHOUT_CLASSIFICATION	1.0065308012521465E-5	TEST
line 996	WITHOUT_CLASSIFICATION	0.9999906795801954	WITHOUT_CLASSIFICATION	9.32041980459279E-6	TEST
line 1001	WITHOUT_CLASSIFICATION	0.999993284734602	WITHOUT_CLASSIFICATION	6.715265397922936E-6	TEST
line 1004	WITHOUT_CLASSIFICATION	0.9999934823906407	WITHOUT_CLASSIFICATION	6.517609359351632E-6	TEST
line 1008	WITHOUT_CLASSIFICATION	0.9999918213047908	WITHOUT_CLASSIFICATION	8.178695209135884E-6	TEST
line 1014	WITHOUT_CLASSIFICATION	0.9999942592040523	WITHOUT_CLASSIFICATION	5.740795947677936E-6	TEST
line 1029	WITHOUT_CLASSIFICATION	0.9999907662728876	WITHOUT_CLASSIFICATION	9.233727112371975E-6	TEST
line 1032	WITHOUT_CLASSIFICATION	0.9999888808332942	WITHOUT_CLASSIFICATION	1.1119166705890103E-5	TEST
line 1034	WITHOUT_CLASSIFICATION	0.9999911658118711	WITHOUT_CLASSIFICATION	8.83418812898968E-6	TEST
line 1045	WITHOUT_CLASSIFICATION	0.9999944165329931	WITHOUT_CLASSIFICATION	5.58346700681495E-6	TEST
line 1048	WITHOUT_CLASSIFICATION	0.9999936782774328	WITHOUT_CLASSIFICATION	6.3217225671713E-6	TEST
line 1051	WITHOUT_CLASSIFICATION	0.9999933098958349	WITHOUT_CLASSIFICATION	6.690104165003984E-6	TEST
line 1058	WITHOUT_CLASSIFICATION	0.9999928091054752	WITHOUT_CLASSIFICATION	7.1908945247874206E-6	TEST
line 1070	WITHOUT_CLASSIFICATION	0.9999947227724568	WITHOUT_CLASSIFICATION	5.277227543135223E-6	TEST
line 1073	WITHOUT_CLASSIFICATION	0.9999926580092878	WITHOUT_CLASSIFICATION	7.341990712202305E-6	TEST
line 1076	WITHOUT_CLASSIFICATION	0.9999945409078804	WITHOUT_CLASSIFICATION	5.4590921194768294E-6	TEST
line 1079	WITHOUT_CLASSIFICATION	0.9999936304913057	WITHOUT_CLASSIFICATION	6.369508694244194E-6	TEST
line 1082	WITHOUT_CLASSIFICATION	0.9999912243604301	WITHOUT_CLASSIFICATION	8.775639569986906E-6	TEST
line 1089	WITHOUT_CLASSIFICATION	0.9999917137810904	WITHOUT_CLASSIFICATION	8.286218909606759E-6	TEST
line 1097	WITHOUT_CLASSIFICATION	0.9999934316402699	WITHOUT_CLASSIFICATION	6.568359730129541E-6	TEST
line 1100	WITHOUT_CLASSIFICATION	0.9999935292952219	WITHOUT_CLASSIFICATION	6.470704778104037E-6	TEST
line 1103	WITHOUT_CLASSIFICATION	0.999991041304283	WITHOUT_CLASSIFICATION	8.958695717065107E-6	TEST
line 1107	WITHOUT_CLASSIFICATION	0.9999946713347118	WITHOUT_CLASSIFICATION	5.328665288290165E-6	TEST
line 1111	WITHOUT_CLASSIFICATION	0.99999460244117	WITHOUT_CLASSIFICATION	5.397558830010981E-6	TEST
line 1113	WITHOUT_CLASSIFICATION	0.9999930715162593	WITHOUT_CLASSIFICATION	6.92848374069705E-6	TEST
line 1115	WITHOUT_CLASSIFICATION	0.9999948467028766	WITHOUT_CLASSIFICATION	5.1532971233743616E-6	TEST
line 1119	WITHOUT_CLASSIFICATION	0.9999940539978999	WITHOUT_CLASSIFICATION	5.94600210018507E-6	TEST
line 1130	WITHOUT_CLASSIFICATION	0.9999916237407954	WITHOUT_CLASSIFICATION	8.37625920452184E-6	TEST
line 1133	WITHOUT_CLASSIFICATION	0.9999930537735089	WITHOUT_CLASSIFICATION	6.94622649116386E-6	TEST
line 1135	WITHOUT_CLASSIFICATION	0.9999933234234146	WITHOUT_CLASSIFICATION	6.676576585363482E-6	TEST
line 1137	WITHOUT_CLASSIFICATION	0.9999936200492816	WITHOUT_CLASSIFICATION	6.379950718308807E-6	TEST
line 1140	WITHOUT_CLASSIFICATION	0.9999939079369845	WITHOUT_CLASSIFICATION	6.092063015514096E-6	TEST
line 1151	WITHOUT_CLASSIFICATION	0.9999948207242347	WITHOUT_CLASSIFICATION	5.179275765247497E-6	TEST
line 1154	WITHOUT_CLASSIFICATION	0.9999951191327203	WITHOUT_CLASSIFICATION	4.880867279626682E-6	TEST
line 1158	WITHOUT_CLASSIFICATION	0.9999944330268952	WITHOUT_CLASSIFICATION	5.56697310477623E-6	TEST
line 1164	WITHOUT_CLASSIFICATION	0.9999951682615619	WITHOUT_CLASSIFICATION	4.831738438121334E-6	TEST
line 1175	WITHOUT_CLASSIFICATION	0.999995127334469	WITHOUT_CLASSIFICATION	4.872665530892551E-6	TEST
line 1178	WITHOUT_CLASSIFICATION	0.999994584455268	WITHOUT_CLASSIFICATION	5.415544731935535E-6	TEST
line 1187	WITHOUT_CLASSIFICATION	0.999994646804799	WITHOUT_CLASSIFICATION	5.353195201028249E-6	TEST
line 1189	WITHOUT_CLASSIFICATION	0.9999936773157952	WITHOUT_CLASSIFICATION	6.32268420479049E-6	TEST
line 1193	WITHOUT_CLASSIFICATION	0.999992304775137	WITHOUT_CLASSIFICATION	7.695224862958747E-6	TEST
line 1204	WITHOUT_CLASSIFICATION	0.9999917392295572	WITHOUT_CLASSIFICATION	8.26077044275209E-6	TEST
line 1207	WITHOUT_CLASSIFICATION	0.9999920504545633	WITHOUT_CLASSIFICATION	7.949545436642502E-6	TEST
line 1210	WITHOUT_CLASSIFICATION	0.9999927091307566	WITHOUT_CLASSIFICATION	7.290869243458793E-6	TEST
line 1214	WITHOUT_CLASSIFICATION	0.9999939378659398	WITHOUT_CLASSIFICATION	6.0621340602052E-6	TEST
line 1234	WITHOUT_CLASSIFICATION	0.9999931513074068	WITHOUT_CLASSIFICATION	6.8486925931733935E-6	TEST
line 1239	WITHOUT_CLASSIFICATION	0.9999912253828277	WITHOUT_CLASSIFICATION	8.774617172348535E-6	TEST
line 1243	WITHOUT_CLASSIFICATION	0.9999920949820108	WITHOUT_CLASSIFICATION	7.905017989198315E-6	TEST
line 1247	WITHOUT_CLASSIFICATION	0.9999942968874378	WITHOUT_CLASSIFICATION	5.703112562138355E-6	TEST
line 1251	WITHOUT_CLASSIFICATION	0.9999937931991277	WITHOUT_CLASSIFICATION	6.206800872159614E-6	TEST
line 1263	WITHOUT_CLASSIFICATION	0.9999919857404402	WITHOUT_CLASSIFICATION	8.014259559731105E-6	TEST
line 1269	WITHOUT_CLASSIFICATION	0.9999930548135904	WITHOUT_CLASSIFICATION	6.945186409677449E-6	TEST
line 1280	WITHOUT_CLASSIFICATION	0.999991481795403	WITHOUT_CLASSIFICATION	8.518204596986719E-6	TEST
line 1283	WITHOUT_CLASSIFICATION	0.9999911589666326	WITHOUT_CLASSIFICATION	8.841033367341814E-6	TEST
line 1290	WITHOUT_CLASSIFICATION	0.9999900501774048	WITHOUT_CLASSIFICATION	9.949822595228591E-6	TEST
line 1296	WITHOUT_CLASSIFICATION	0.999992156203048	WITHOUT_CLASSIFICATION	7.84379695194103E-6	TEST
line 1299	WITHOUT_CLASSIFICATION	0.9999917341442248	WITHOUT_CLASSIFICATION	8.265855775104602E-6	TEST
line 1302	WITHOUT_CLASSIFICATION	0.999989748022226	WITHOUT_CLASSIFICATION	1.0251977774024799E-5	TEST
line 1309	WITHOUT_CLASSIFICATION	0.9999902166687504	WITHOUT_CLASSIFICATION	9.783331249534246E-6	TEST
line 1313	WITHOUT_CLASSIFICATION	0.9999927829705886	WITHOUT_CLASSIFICATION	7.217029411296155E-6	TEST
line 1315	WITHOUT_CLASSIFICATION	0.9999931095702449	WITHOUT_CLASSIFICATION	6.890429755033252E-6	TEST
line 1320	WITHOUT_CLASSIFICATION	0.9999885939749027	WITHOUT_CLASSIFICATION	1.1406025097394082E-5	TEST
line 1328	WITHOUT_CLASSIFICATION	0.9999909020354759	WITHOUT_CLASSIFICATION	9.097964524111929E-6	TEST
line 1335	WITHOUT_CLASSIFICATION	0.9999930017983272	WITHOUT_CLASSIFICATION	6.99820167278244E-6	TEST
line 1348	WITHOUT_CLASSIFICATION	0.9999928325282076	WITHOUT_CLASSIFICATION	7.1674717924478345E-6	TEST
line 1352	WITHOUT_CLASSIFICATION	0.9999917901121965	WITHOUT_CLASSIFICATION	8.209887803524519E-6	TEST
line 1358	WITHOUT_CLASSIFICATION	0.9999924452177121	WITHOUT_CLASSIFICATION	7.554782287830251E-6	TEST
line 1374	WITHOUT_CLASSIFICATION	0.9999936467580812	WITHOUT_CLASSIFICATION	6.3532419186841166E-6	TEST
line 1381	WITHOUT_CLASSIFICATION	0.9999923365869497	WITHOUT_CLASSIFICATION	7.663413050263832E-6	TEST
line 1387	WITHOUT_CLASSIFICATION	0.9999928104710191	WITHOUT_CLASSIFICATION	7.1895289809900376E-6	TEST
line 1392	WITHOUT_CLASSIFICATION	0.9999904800815226	WITHOUT_CLASSIFICATION	9.519918477503404E-6	TEST
line 1415	WITHOUT_CLASSIFICATION	0.999994918322579	WITHOUT_CLASSIFICATION	5.0816774210224075E-6	TEST
line 1431	WITHOUT_CLASSIFICATION	0.9999932383503846	WITHOUT_CLASSIFICATION	6.761649615506335E-6	TEST
line 1434	WITHOUT_CLASSIFICATION	0.999993310525875	WITHOUT_CLASSIFICATION	6.6894741249635345E-6	TEST
line 1440	WITHOUT_CLASSIFICATION	0.999993561675063	WITHOUT_CLASSIFICATION	6.438324936964171E-6	TEST
line 1443	WITHOUT_CLASSIFICATION	0.9999931104922418	WITHOUT_CLASSIFICATION	6.889507758168562E-6	TEST
line 1453	WITHOUT_CLASSIFICATION	0.999993529341493	WITHOUT_CLASSIFICATION	6.4706585070039125E-6	TEST
line 1456	WITHOUT_CLASSIFICATION	0.9999953412479257	WITHOUT_CLASSIFICATION	4.658752074309393E-6	TEST
line 1462	WITHOUT_CLASSIFICATION	0.9999940567704314	WITHOUT_CLASSIFICATION	5.9432295685551E-6	TEST
line 1465	WITHOUT_CLASSIFICATION	0.9999950965810817	WITHOUT_CLASSIFICATION	4.9034189184356466E-6	TEST
line 1470	WITHOUT_CLASSIFICATION	0.9999943002702765	WITHOUT_CLASSIFICATION	5.6997297235225196E-6	TEST
line 1477	WITHOUT_CLASSIFICATION	0.9999950442703694	WITHOUT_CLASSIFICATION	4.955729630555065E-6	TEST
line 1480	WITHOUT_CLASSIFICATION	0.9999931158538078	WITHOUT_CLASSIFICATION	6.8841461922508816E-6	TEST
line 1485	WITHOUT_CLASSIFICATION	0.999994618083962	WITHOUT_CLASSIFICATION	5.381916038012207E-6	TEST
line 1488	WITHOUT_CLASSIFICATION	0.9999943915874846	WITHOUT_CLASSIFICATION	5.608412515401705E-6	TEST
line 1496	WITHOUT_CLASSIFICATION	0.999994335702979	WITHOUT_CLASSIFICATION	5.664297021000519E-6	TEST
line 1502	WITHOUT_CLASSIFICATION	0.9999923565051189	WITHOUT_CLASSIFICATION	7.643494881072327E-6	TEST
line 1510	WITHOUT_CLASSIFICATION	0.9999938934623992	WITHOUT_CLASSIFICATION	6.106537600897101E-6	TEST
line 1513	WITHOUT_CLASSIFICATION	0.9999930169001442	WITHOUT_CLASSIFICATION	6.983099855885533E-6	TEST
line 1516	WITHOUT_CLASSIFICATION	0.9999948514060785	WITHOUT_CLASSIFICATION	5.148593921440725E-6	TEST
line 1533	WITHOUT_CLASSIFICATION	0.9999930349398128	WITHOUT_CLASSIFICATION	6.965060187128751E-6	TEST
line 1550	WITHOUT_CLASSIFICATION	0.9999934286962789	WITHOUT_CLASSIFICATION	6.571303721004642E-6	TEST
line 1553	WITHOUT_CLASSIFICATION	0.9999930237608092	WITHOUT_CLASSIFICATION	6.976239190753993E-6	TEST
line 1556	WITHOUT_CLASSIFICATION	0.9999949224876147	WITHOUT_CLASSIFICATION	5.077512385271503E-6	TEST
line 1565	WITHOUT_CLASSIFICATION	0.999994910559267	WITHOUT_CLASSIFICATION	5.089440733003684E-6	TEST
line 1568	WITHOUT_CLASSIFICATION	0.9999945376955711	WITHOUT_CLASSIFICATION	5.462304428799021E-6	TEST
line 1571	WITHOUT_CLASSIFICATION	0.9999949936570747	WITHOUT_CLASSIFICATION	5.0063429254178104E-6	TEST
line 1574	WITHOUT_CLASSIFICATION	0.9999951888550229	WITHOUT_CLASSIFICATION	4.811144977170151E-6	TEST
line 1577	WITHOUT_CLASSIFICATION	0.9999949056351902	WITHOUT_CLASSIFICATION	5.094364809800891E-6	TEST
line 1587	WITHOUT_CLASSIFICATION	0.9999945331318222	WITHOUT_CLASSIFICATION	5.46686817784836E-6	TEST
line 1595	WITHOUT_CLASSIFICATION	0.9999939629522739	WITHOUT_CLASSIFICATION	6.037047726154817E-6	TEST
line 1598	WITHOUT_CLASSIFICATION	0.9999935362703264	WITHOUT_CLASSIFICATION	6.463729673640925E-6	TEST
line 1600	WITHOUT_CLASSIFICATION	0.9999928190140666	WITHOUT_CLASSIFICATION	7.1809859333544105E-6	TEST
line 1609	WITHOUT_CLASSIFICATION	0.9999927850796678	WITHOUT_CLASSIFICATION	7.214920332220249E-6	TEST
line 1623	WITHOUT_CLASSIFICATION	0.9999922073306979	WITHOUT_CLASSIFICATION	7.792669302126365E-6	TEST
line 1626	WITHOUT_CLASSIFICATION	0.9999937668478482	WITHOUT_CLASSIFICATION	6.233152151722706E-6	TEST
line 1629	WITHOUT_CLASSIFICATION	0.9999921313676763	WITHOUT_CLASSIFICATION	7.86863232370262E-6	TEST
line 1632	WITHOUT_CLASSIFICATION	0.9999920038341928	WITHOUT_CLASSIFICATION	7.996165807237097E-6	TEST
line 1638	WITHOUT_CLASSIFICATION	0.9999927661890686	WITHOUT_CLASSIFICATION	7.23381093147326E-6	TEST
line 1641	WITHOUT_CLASSIFICATION	0.9999949528295274	WITHOUT_CLASSIFICATION	5.047170472629077E-6	TEST
line 1644	WITHOUT_CLASSIFICATION	0.9999949319661908	WITHOUT_CLASSIFICATION	5.068033809201595E-6	TEST
line 1649	WITHOUT_CLASSIFICATION	0.9999943512593399	WITHOUT_CLASSIFICATION	5.64874066015629E-6	TEST
line 1655	WITHOUT_CLASSIFICATION	0.9999948382379812	WITHOUT_CLASSIFICATION	5.161762018807759E-6	TEST
line 1658	WITHOUT_CLASSIFICATION	0.9999944470491691	WITHOUT_CLASSIFICATION	5.552950830950505E-6	TEST
line 1661	WITHOUT_CLASSIFICATION	0.9999946292974523	WITHOUT_CLASSIFICATION	5.370702547589898E-6	TEST
line 1672	WITHOUT_CLASSIFICATION	0.9999941275447879	WITHOUT_CLASSIFICATION	5.872455212038306E-6	TEST
line 1677	WITHOUT_CLASSIFICATION	0.9999949816550622	WITHOUT_CLASSIFICATION	5.018344937856105E-6	TEST
line 1687	WITHOUT_CLASSIFICATION	0.9999945873737834	WITHOUT_CLASSIFICATION	5.412626216653464E-6	TEST
line 1694	WITHOUT_CLASSIFICATION	0.9999943380325972	WITHOUT_CLASSIFICATION	5.6619674028409964E-6	TEST
line 1705	WITHOUT_CLASSIFICATION	0.9999934913434048	WITHOUT_CLASSIFICATION	6.508656595218023E-6	TEST
line 1708	WITHOUT_CLASSIFICATION	0.9999927125910456	WITHOUT_CLASSIFICATION	7.28740895447107E-6	TEST
line 1725	WITHOUT_CLASSIFICATION	0.9999940703700547	WITHOUT_CLASSIFICATION	5.929629945333702E-6	TEST
line 1733	WITHOUT_CLASSIFICATION	0.9999931541269732	WITHOUT_CLASSIFICATION	6.845873026709936E-6	TEST
line 1742	WITHOUT_CLASSIFICATION	0.9999940617657452	WITHOUT_CLASSIFICATION	5.938234254872283E-6	TEST
line 1745	WITHOUT_CLASSIFICATION	0.9999952399057481	WITHOUT_CLASSIFICATION	4.7600942518030516E-6	TEST
line 1749	WITHOUT_CLASSIFICATION	0.9999943498200428	WITHOUT_CLASSIFICATION	5.650179957197052E-6	TEST
line 1757	WITHOUT_CLASSIFICATION	0.9999948497970725	WITHOUT_CLASSIFICATION	5.150202927464996E-6	TEST
line 1769	WITHOUT_CLASSIFICATION	0.9999943198388476	WITHOUT_CLASSIFICATION	5.6801611525175405E-6	TEST
line 1772	WITHOUT_CLASSIFICATION	0.999993718054533	WITHOUT_CLASSIFICATION	6.281945467069239E-6	TEST
line 1775	WITHOUT_CLASSIFICATION	0.9999948500052687	WITHOUT_CLASSIFICATION	5.149994731427939E-6	TEST
line 1784	WITHOUT_CLASSIFICATION	0.9999946044322547	WITHOUT_CLASSIFICATION	5.3955677453097615E-6	TEST
line 1808	WITHOUT_CLASSIFICATION	0.9999920345984823	WITHOUT_CLASSIFICATION	7.965401517630944E-6	TEST
line 1814	WITHOUT_CLASSIFICATION	0.9999943866217061	WITHOUT_CLASSIFICATION	5.613378293827275E-6	TEST
line 1818	WITHOUT_CLASSIFICATION	0.999993996655753	WITHOUT_CLASSIFICATION	6.003344247170482E-6	TEST
line 1822	WITHOUT_CLASSIFICATION	0.9999929647974253	WITHOUT_CLASSIFICATION	7.035202574763041E-6	TEST
force for args	WITHOUT_CLASSIFICATION	0.9999945471041801	WITHOUT_CLASSIFICATION	5.452895819857995E-6	TEST
XXX 0;	WITHOUT_CLASSIFICATION	0.9996168443922235	WITHOUT_CLASSIFICATION	3.83155607776417E-4	TEST
$$ = $3;	WITHOUT_CLASSIFICATION	0.9998717086654559	WITHOUT_CLASSIFICATION	1.2829133454406887E-4	TEST
}	WITHOUT_CLASSIFICATION	0.9992390263251093	WITHOUT_CLASSIFICATION	7.609736748906508E-4	TEST
last expression should not be void	WITHOUT_CLASSIFICATION	0.9999899612258717	WITHOUT_CLASSIFICATION	1.0038774128363312E-5	TEST
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9999980149845178	WITHOUT_CLASSIFICATION	1.9850154822786824E-6	TEST
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9999973236549854	WITHOUT_CLASSIFICATION	2.67634501466571E-6	TEST
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9999975915971211	WITHOUT_CLASSIFICATION	2.4084028789474366E-6	TEST
NOEX_PRIVATE for toplevel	WITHOUT_CLASSIFICATION	0.9999985336501827	WITHOUT_CLASSIFICATION	1.466349817378495E-6	TEST
mirko: check	WITHOUT_CLASSIFICATION	0.9999892043976012	WITHOUT_CLASSIFICATION	1.079560239883516E-5	TEST
Include pipes on multiple arg type	WITHOUT_CLASSIFICATION	0.9999997822595713	WITHOUT_CLASSIFICATION	2.177404286864654E-7	TEST
line 529	WITHOUT_CLASSIFICATION	0.9999878978156655	WITHOUT_CLASSIFICATION	1.2102184334420844E-5	TEST
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9999719571362354	WITHOUT_CLASSIFICATION	2.8042863764549435E-5	TEST
XXX	WITHOUT_CLASSIFICATION	0.9989984824260814	WITHOUT_CLASSIFICATION	0.0010015175739186463	TEST
zero length array	WITHOUT_CLASSIFICATION	0.9999953317093057	WITHOUT_CLASSIFICATION	4.668290694279998E-6	TEST
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.999905414053508	WITHOUT_CLASSIFICATION	9.458594649201638E-5	TEST
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.999873494645014	WITHOUT_CLASSIFICATION	1.2650535498606123E-4	TEST
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9999854345068571	WITHOUT_CLASSIFICATION	1.4565493143021297E-5	TEST
line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999995697485559	WITHOUT_CLASSIFICATION	4.302514441906051E-7	TEST
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998601996273	WITHOUT_CLASSIFICATION	1.3980037281411669E-7	TEST
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999983978636469	WITHOUT_CLASSIFICATION	1.6021363532411502E-6	TEST
line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999806950923436	WITHOUT_CLASSIFICATION	1.93049076564586E-5	TEST
local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999996431877862	WITHOUT_CLASSIFICATION	3.568122137335598E-7	TEST
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999992097534716	WITHOUT_CLASSIFICATION	7.902465283935099E-7	TEST
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999992097534716	WITHOUT_CLASSIFICATION	7.902465283935099E-7	TEST
We know this is a block scope because a local scope cannot be within a local scope If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999851595291771	WITHOUT_CLASSIFICATION	1.4840470822956084E-5	TEST
ENEBO: 1.9 has CURR nodes for local/block variables. We don't. I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999608311239311	WITHOUT_CLASSIFICATION	3.9168876068965393E-5	TEST
odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999625024818011	WITHOUT_CLASSIFICATION	3.7497518198930974E-5	TEST
What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999989474981237	WITHOUT_CLASSIFICATION	1.0525018762583416E-6	TEST
Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999988229348309	WITHOUT_CLASSIFICATION	1.1770651690694504E-6	TEST
We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999975940373171	WITHOUT_CLASSIFICATION	2.4059626828924067E-6	TEST
Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999999494036858	WITHOUT_CLASSIFICATION	5.059631436529167E-8	TEST
Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999977947652681	WITHOUT_CLASSIFICATION	2.2052347319238796E-6	TEST
Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999991475997069	WITHOUT_CLASSIFICATION	8.524002931623431E-7	TEST
__END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999990978745511	WITHOUT_CLASSIFICATION	9.02125449003562E-7	TEST
Parser states:	WITHOUT_CLASSIFICATION	0.9999804052012177	WITHOUT_CLASSIFICATION	1.9594798782328285E-5	TEST
Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999968075340844	WITHOUT_CLASSIFICATION	3.192465915664464E-6	TEST
Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999999676061828	WITHOUT_CLASSIFICATION	3.239381721584963E-8	TEST
LOCALVAR	WITHOUT_CLASSIFICATION	0.9997380923829133	WITHOUT_CLASSIFICATION	2.6190761708672864E-4	TEST
CONSTANT	WITHOUT_CLASSIFICATION	0.9998260191938012	WITHOUT_CLASSIFICATION	1.7398080619881144E-4	TEST
INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999292241498466	WITHOUT_CLASSIFICATION	7.07758501534358E-5	TEST
Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999992298547637	WITHOUT_CLASSIFICATION	7.7014523614177E-7	TEST
MRI: block_append	WITHOUT_CLASSIFICATION	0.9999971138681014	WITHOUT_CLASSIFICATION	2.8861318985221345E-6	TEST
Reduces overhead in interp by not set position every single line we encounter.	WITHOUT_CLASSIFICATION	0.9999999204279252	WITHOUT_CLASSIFICATION	7.957207485068494E-8	TEST
Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999836437383165	WITHOUT_CLASSIFICATION	1.635626168354119E-5	TEST
return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.999999987739233	WITHOUT_CLASSIFICATION	1.2260767060177535E-8	TEST
Node	WITHOUT_CLASSIFICATION	0.9998993602686068	WITHOUT_CLASSIFICATION	1.0063973139323284E-4	TEST
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9944056887383236	WITHOUT_CLASSIFICATION	0.005594311261676411	TEST
case CONSTNODE: handleUselessWarn(node, "a constant"); return;	WITHOUT_CLASSIFICATION	0.999999972580702	WITHOUT_CLASSIFICATION	2.7419298040070367E-8	TEST
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9944056887383236	WITHOUT_CLASSIFICATION	0.005594311261676411	TEST
case CLASSNODE: case COLON2NODE: handleUselessWarn(node, "::"); return;	WITHOUT_CLASSIFICATION	0.9999999674392054	WITHOUT_CLASSIFICATION	3.256079460079871E-8	TEST
case SELFNODE: handleUselessWarn(node, "self"); return;	WITHOUT_CLASSIFICATION	0.9999999714132723	WITHOUT_CLASSIFICATION	2.858672762619897E-8	TEST
FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.999999197999092	WITHOUT_CLASSIFICATION	8.020009081075828E-7	TEST
MRI: range_op	WITHOUT_CLASSIFICATION	0.9999775804410624	WITHOUT_CLASSIFICATION	2.241955893761711E-5	TEST
Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999996327964644	WITHOUT_CLASSIFICATION	3.672035355607809E-7	TEST
foo()	WITHOUT_CLASSIFICATION	0.9998153544704977	WITHOUT_CLASSIFICATION	1.8464552950224044E-4	TEST
foo()	WITHOUT_CLASSIFICATION	0.9998153544704977	WITHOUT_CLASSIFICATION	1.8464552950224044E-4	TEST
foo()	WITHOUT_CLASSIFICATION	0.9998153544704977	WITHOUT_CLASSIFICATION	1.8464552950224044E-4	TEST
tail must be EvStrNode at this point	WITHOUT_CLASSIFICATION	0.9999859182424714	WITHOUT_CLASSIFICATION	1.4081757528611287E-5	TEST
Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999883208265758	WITHOUT_CLASSIFICATION	1.1679173424060886E-5	TEST
Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999992628975459	WITHOUT_CLASSIFICATION	7.371024541449444E-7	TEST
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999507120823928	WITHOUT_CLASSIFICATION	4.9287917607128455E-5	TEST
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999507120823928	WITHOUT_CLASSIFICATION	4.9287917607128455E-5	TEST
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999507120823928	WITHOUT_CLASSIFICATION	4.9287917607128455E-5	TEST
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999507120823928	WITHOUT_CLASSIFICATION	4.9287917607128455E-5	TEST
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999507120823928	WITHOUT_CLASSIFICATION	4.9287917607128455E-5	TEST
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999507120823928	WITHOUT_CLASSIFICATION	4.9287917607128455E-5	TEST
yyLen 542	WITHOUT_CLASSIFICATION	0.9999820541467946	WITHOUT_CLASSIFICATION	1.7945853205369062E-5	TEST
yyLen 542	WITHOUT_CLASSIFICATION	0.9999820541467946	WITHOUT_CLASSIFICATION	1.7945853205369062E-5	TEST
yyLen 542	WITHOUT_CLASSIFICATION	0.9999820541467946	WITHOUT_CLASSIFICATION	1.7945853205369062E-5	TEST
yyLen 542	WITHOUT_CLASSIFICATION	0.9999820541467946	WITHOUT_CLASSIFICATION	1.7945853205369062E-5	TEST
yyLen 542	WITHOUT_CLASSIFICATION	0.9999820541467946	WITHOUT_CLASSIFICATION	1.7945853205369062E-5	TEST
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999109955906478	WITHOUT_CLASSIFICATION	8.90044093522347E-5	TEST
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999109955906478	WITHOUT_CLASSIFICATION	8.90044093522347E-5	TEST
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999109955906478	WITHOUT_CLASSIFICATION	8.90044093522347E-5	TEST
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999109955906478	WITHOUT_CLASSIFICATION	8.90044093522347E-5	TEST
yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999109955906478	WITHOUT_CLASSIFICATION	8.90044093522347E-5	TEST
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999417542830998	WITHOUT_CLASSIFICATION	5.8245716900071813E-5	TEST
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999417542830998	WITHOUT_CLASSIFICATION	5.8245716900071813E-5	TEST
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999417542830998	WITHOUT_CLASSIFICATION	5.8245716900071813E-5	TEST
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999417542830998	WITHOUT_CLASSIFICATION	5.8245716900071813E-5	TEST
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999417542830998	WITHOUT_CLASSIFICATION	5.8245716900071813E-5	TEST
yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999417542830998	WITHOUT_CLASSIFICATION	5.8245716900071813E-5	TEST
yySindex 945	WITHOUT_CLASSIFICATION	0.9999730171596403	WITHOUT_CLASSIFICATION	2.698284035971648E-5	TEST
yySindex 945	WITHOUT_CLASSIFICATION	0.9999730171596403	WITHOUT_CLASSIFICATION	2.698284035971648E-5	TEST
yySindex 945	WITHOUT_CLASSIFICATION	0.9999730171596403	WITHOUT_CLASSIFICATION	2.698284035971648E-5	TEST
yySindex 945	WITHOUT_CLASSIFICATION	0.9999730171596403	WITHOUT_CLASSIFICATION	2.698284035971648E-5	TEST
yySindex 945	WITHOUT_CLASSIFICATION	0.9999730171596403	WITHOUT_CLASSIFICATION	2.698284035971648E-5	TEST
yyRindex 945	WITHOUT_CLASSIFICATION	0.999972323678049	WITHOUT_CLASSIFICATION	2.767632195102188E-5	TEST
yyRindex 945	WITHOUT_CLASSIFICATION	0.999972323678049	WITHOUT_CLASSIFICATION	2.767632195102188E-5	TEST
yyRindex 945	WITHOUT_CLASSIFICATION	0.999972323678049	WITHOUT_CLASSIFICATION	2.767632195102188E-5	TEST
yyRindex 945	WITHOUT_CLASSIFICATION	0.999972323678049	WITHOUT_CLASSIFICATION	2.767632195102188E-5	TEST
yyRindex 945	WITHOUT_CLASSIFICATION	0.999972323678049	WITHOUT_CLASSIFICATION	2.767632195102188E-5	TEST
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999767946341125	WITHOUT_CLASSIFICATION	2.3205365887553693E-5	TEST
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999767946341125	WITHOUT_CLASSIFICATION	2.3205365887553693E-5	TEST
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999767946341125	WITHOUT_CLASSIFICATION	2.3205365887553693E-5	TEST
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999767946341125	WITHOUT_CLASSIFICATION	2.3205365887553693E-5	TEST
yyGindex 152	WITHOUT_CLASSIFICATION	0.9999767946341125	WITHOUT_CLASSIFICATION	2.3205365887553693E-5	TEST
dynamically increase	WITHOUT_CLASSIFICATION	0.9999993565172123	WITHOUT_CLASSIFICATION	6.434827876908583E-7	TEST
else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999996246912182	WITHOUT_CLASSIFICATION	3.7530878179881027E-7	TEST
shift to yyN	WITHOUT_CLASSIFICATION	0.9999934041787006	WITHOUT_CLASSIFICATION	6.595821299260754E-6	TEST
reduce (yyN)	WITHOUT_CLASSIFICATION	0.999989518065108	WITHOUT_CLASSIFICATION	1.048193489197488E-5	TEST
leave stack alone	WITHOUT_CLASSIFICATION	0.99999827850608	WITHOUT_CLASSIFICATION	1.7214939199477856E-6	TEST
line 321	WITHOUT_CLASSIFICATION	0.9999877770754337	WITHOUT_CLASSIFICATION	1.2222924566348211E-5	TEST
line 351	WITHOUT_CLASSIFICATION	0.9999897583149098	WITHOUT_CLASSIFICATION	1.0241685090236417E-5	TEST
line 382	WITHOUT_CLASSIFICATION	0.9999827372234116	WITHOUT_CLASSIFICATION	1.726277658837771E-5	TEST
line 417	WITHOUT_CLASSIFICATION	0.9999945594781464	WITHOUT_CLASSIFICATION	5.440521853475315E-6	TEST
line 420	WITHOUT_CLASSIFICATION	0.9999875822603483	WITHOUT_CLASSIFICATION	1.2417739651719059E-5	TEST
line 423	WITHOUT_CLASSIFICATION	0.9999884699716994	WITHOUT_CLASSIFICATION	1.1530028300437726E-5	TEST
line 426	WITHOUT_CLASSIFICATION	0.9999912200471737	WITHOUT_CLASSIFICATION	8.779952826309569E-6	TEST
line 280	WITHOUT_CLASSIFICATION	0.9999869601980622	WITHOUT_CLASSIFICATION	1.3039801937678757E-5	TEST
line 283	WITHOUT_CLASSIFICATION	0.9999864657816874	WITHOUT_CLASSIFICATION	1.3534218312627788E-5	TEST
line 296	WITHOUT_CLASSIFICATION	0.9999879928142463	WITHOUT_CLASSIFICATION	1.2007185753753262E-5	TEST
line 324	WITHOUT_CLASSIFICATION	0.9999843811242897	WITHOUT_CLASSIFICATION	1.5618875710407934E-5	TEST
line 327	WITHOUT_CLASSIFICATION	0.9999843912691704	WITHOUT_CLASSIFICATION	1.5608730829647393E-5	TEST
line 331	WITHOUT_CLASSIFICATION	0.9999895498573889	WITHOUT_CLASSIFICATION	1.0450142611060829E-5	TEST
line 333	WITHOUT_CLASSIFICATION	0.9999856562755557	WITHOUT_CLASSIFICATION	1.434372444426498E-5	TEST
line 336	WITHOUT_CLASSIFICATION	0.9999863395662167	WITHOUT_CLASSIFICATION	1.3660433783170218E-5	TEST
line 342	WITHOUT_CLASSIFICATION	0.9999844437301065	WITHOUT_CLASSIFICATION	1.5556269893552783E-5	TEST
line 345	WITHOUT_CLASSIFICATION	0.999987778597423	WITHOUT_CLASSIFICATION	1.2221402576875207E-5	TEST
line 348	WITHOUT_CLASSIFICATION	0.9999858812071467	WITHOUT_CLASSIFICATION	1.4118792853323233E-5	TEST
line 354	WITHOUT_CLASSIFICATION	0.999986927829085	WITHOUT_CLASSIFICATION	1.3072170915030714E-5	TEST
line 368	WITHOUT_CLASSIFICATION	0.9999853034637289	WITHOUT_CLASSIFICATION	1.4696536271146413E-5	TEST
line 377	WITHOUT_CLASSIFICATION	0.9999867484310058	WITHOUT_CLASSIFICATION	1.32515689941954E-5	TEST
line 388	WITHOUT_CLASSIFICATION	0.9999854703341878	WITHOUT_CLASSIFICATION	1.4529665812304542E-5	TEST
line 392	WITHOUT_CLASSIFICATION	0.999981293986313	WITHOUT_CLASSIFICATION	1.870601368698858E-5	TEST
line 397	WITHOUT_CLASSIFICATION	0.9999850578282152	WITHOUT_CLASSIFICATION	1.4942171784876697E-5	TEST
line 429	WITHOUT_CLASSIFICATION	0.9999883575772877	WITHOUT_CLASSIFICATION	1.164242271232425E-5	TEST
line 432	WITHOUT_CLASSIFICATION	0.9999882817700265	WITHOUT_CLASSIFICATION	1.1718229973392535E-5	TEST
line 436	WITHOUT_CLASSIFICATION	0.9999903795167587	WITHOUT_CLASSIFICATION	9.620483241198052E-6	TEST
line 445	WITHOUT_CLASSIFICATION	0.9999925825900642	WITHOUT_CLASSIFICATION	7.417409935720825E-6	TEST
line 448	WITHOUT_CLASSIFICATION	0.9999916018494686	WITHOUT_CLASSIFICATION	8.398150531363145E-6	TEST
line 454	WITHOUT_CLASSIFICATION	0.9999926062463163	WITHOUT_CLASSIFICATION	7.393753683800954E-6	TEST
line 459	WITHOUT_CLASSIFICATION	0.9999917860160691	WITHOUT_CLASSIFICATION	8.213983930866081E-6	TEST
line 466	WITHOUT_CLASSIFICATION	0.9999924781197187	WITHOUT_CLASSIFICATION	7.52188028137012E-6	TEST
line 469	WITHOUT_CLASSIFICATION	0.9999916407137996	WITHOUT_CLASSIFICATION	8.359286200464299E-6	TEST
line 478	WITHOUT_CLASSIFICATION	0.9999922207740775	WITHOUT_CLASSIFICATION	7.779225922574053E-6	TEST
line 481	WITHOUT_CLASSIFICATION	0.9999938248044037	WITHOUT_CLASSIFICATION	6.175195596250747E-6	TEST
line 488	WITHOUT_CLASSIFICATION	0.9999917544495616	WITHOUT_CLASSIFICATION	8.245550438445485E-6	TEST
line 494	WITHOUT_CLASSIFICATION	0.99999119556482	WITHOUT_CLASSIFICATION	8.804435180054674E-6	TEST
line 497	WITHOUT_CLASSIFICATION	0.9999918014522909	WITHOUT_CLASSIFICATION	8.198547709053436E-6	TEST
line 503	WITHOUT_CLASSIFICATION	0.9999848685182942	WITHOUT_CLASSIFICATION	1.5131481705869855E-5	TEST
line 506	WITHOUT_CLASSIFICATION	0.9999905235316494	WITHOUT_CLASSIFICATION	9.476468350568372E-6	TEST
line 509	WITHOUT_CLASSIFICATION	0.9999889340698536	WITHOUT_CLASSIFICATION	1.1065930146423991E-5	TEST
line 512	WITHOUT_CLASSIFICATION	0.9999929670485417	WITHOUT_CLASSIFICATION	7.0329514583957585E-6	TEST
line 521	WITHOUT_CLASSIFICATION	0.9999929422805542	WITHOUT_CLASSIFICATION	7.057719445780306E-6	TEST
line 526	WITHOUT_CLASSIFICATION	0.9999908513750485	WITHOUT_CLASSIFICATION	9.148624951423286E-6	TEST
line 540	WITHOUT_CLASSIFICATION	0.9999906712553691	WITHOUT_CLASSIFICATION	9.328744630935374E-6	TEST
line 543	WITHOUT_CLASSIFICATION	0.9999900171010531	WITHOUT_CLASSIFICATION	9.982898947030994E-6	TEST
line 546	WITHOUT_CLASSIFICATION	0.999992593650199	WITHOUT_CLASSIFICATION	7.4063498009891074E-6	TEST
line 566	WITHOUT_CLASSIFICATION	0.9999923089841073	WITHOUT_CLASSIFICATION	7.691015892718017E-6	TEST
line 610	WITHOUT_CLASSIFICATION	0.9999933439543998	WITHOUT_CLASSIFICATION	6.656045600192917E-6	TEST
line 672	WITHOUT_CLASSIFICATION	0.9999911559880601	WITHOUT_CLASSIFICATION	8.844011939918147E-6	TEST
line 691	WITHOUT_CLASSIFICATION	0.9999933494856333	WITHOUT_CLASSIFICATION	6.650514366620833E-6	TEST
line 696	WITHOUT_CLASSIFICATION	0.9999910225844199	WITHOUT_CLASSIFICATION	8.977415580222882E-6	TEST
line 772	WITHOUT_CLASSIFICATION	0.9999905369962665	WITHOUT_CLASSIFICATION	9.463003733555444E-6	TEST
line 782	WITHOUT_CLASSIFICATION	0.9999899309538208	WITHOUT_CLASSIFICATION	1.0069046179309332E-5	TEST
line 785	WITHOUT_CLASSIFICATION	0.999991855706542	WITHOUT_CLASSIFICATION	8.144293457989004E-6	TEST
line 788	WITHOUT_CLASSIFICATION	0.9999915129571464	WITHOUT_CLASSIFICATION	8.487042853543683E-6	TEST
line 791	WITHOUT_CLASSIFICATION	0.9999933728286357	WITHOUT_CLASSIFICATION	6.62717136426305E-6	TEST
line 534	WITHOUT_CLASSIFICATION	0.999990287635825	WITHOUT_CLASSIFICATION	9.71236417500212E-6	TEST
line 549	WITHOUT_CLASSIFICATION	0.9999913300761568	WITHOUT_CLASSIFICATION	8.669923843297492E-6	TEST
line 552	WITHOUT_CLASSIFICATION	0.9999904049843683	WITHOUT_CLASSIFICATION	9.595015631707733E-6	TEST
line 558	WITHOUT_CLASSIFICATION	0.9999911871149458	WITHOUT_CLASSIFICATION	8.812885054127142E-6	TEST
line 561	WITHOUT_CLASSIFICATION	0.9999943363305983	WITHOUT_CLASSIFICATION	5.663669401644405E-6	TEST
line 571	WITHOUT_CLASSIFICATION	0.9999943905791627	WITHOUT_CLASSIFICATION	5.609420837272226E-6	TEST
line 574	WITHOUT_CLASSIFICATION	0.9999927124967036	WITHOUT_CLASSIFICATION	7.287503296457106E-6	TEST
line 579	WITHOUT_CLASSIFICATION	0.9999914145254856	WITHOUT_CLASSIFICATION	8.585474514390449E-6	TEST
line 586	WITHOUT_CLASSIFICATION	0.9999915680581432	WITHOUT_CLASSIFICATION	8.431941856915706E-6	TEST
line 589	WITHOUT_CLASSIFICATION	0.9999902195923588	WITHOUT_CLASSIFICATION	9.78040764124258E-6	TEST
line 592	WITHOUT_CLASSIFICATION	0.999989339896555	WITHOUT_CLASSIFICATION	1.0660103445023861E-5	TEST
line 595	WITHOUT_CLASSIFICATION	0.9999908600892271	WITHOUT_CLASSIFICATION	9.13991077281239E-6	TEST
line 598	WITHOUT_CLASSIFICATION	0.9999902171863041	WITHOUT_CLASSIFICATION	9.782813695835944E-6	TEST
line 623	WITHOUT_CLASSIFICATION	0.9999882313907497	WITHOUT_CLASSIFICATION	1.1768609250259793E-5	TEST
line 627	WITHOUT_CLASSIFICATION	0.9999911714304295	WITHOUT_CLASSIFICATION	8.828569570553432E-6	TEST
line 630	WITHOUT_CLASSIFICATION	0.9999875183076025	WITHOUT_CLASSIFICATION	1.2481692397419703E-5	TEST
line 633	WITHOUT_CLASSIFICATION	0.9999896492461349	WITHOUT_CLASSIFICATION	1.0350753865161259E-5	TEST
line 639	WITHOUT_CLASSIFICATION	0.9999884587679682	WITHOUT_CLASSIFICATION	1.1541232031823656E-5	TEST
line 648	WITHOUT_CLASSIFICATION	0.9999918854181135	WITHOUT_CLASSIFICATION	8.114581886499163E-6	TEST
line 657	WITHOUT_CLASSIFICATION	0.9999927139030371	WITHOUT_CLASSIFICATION	7.2860969628115586E-6	TEST
line 661	WITHOUT_CLASSIFICATION	0.9999940168614267	WITHOUT_CLASSIFICATION	5.9831385732193735E-6	TEST
line 666	WITHOUT_CLASSIFICATION	0.9999918751598427	WITHOUT_CLASSIFICATION	8.124840157393479E-6	TEST
line 678	WITHOUT_CLASSIFICATION	0.9999919828306283	WITHOUT_CLASSIFICATION	8.017169371668872E-6	TEST
line 682	WITHOUT_CLASSIFICATION	0.999989803586822	WITHOUT_CLASSIFICATION	1.0196413178018872E-5	TEST
line 688	WITHOUT_CLASSIFICATION	0.9999914178581661	WITHOUT_CLASSIFICATION	8.582141833883836E-6	TEST
line 699	WITHOUT_CLASSIFICATION	0.9999909935676436	WITHOUT_CLASSIFICATION	9.00643235635427E-6	TEST
line 706	WITHOUT_CLASSIFICATION	0.9999911635583393	WITHOUT_CLASSIFICATION	8.836441660734723E-6	TEST
line 708	WITHOUT_CLASSIFICATION	0.9999890234160143	WITHOUT_CLASSIFICATION	1.0976583985777433E-5	TEST
line 727	WITHOUT_CLASSIFICATION	0.9999905473054062	WITHOUT_CLASSIFICATION	9.452694593858423E-6	TEST
line 737	WITHOUT_CLASSIFICATION	0.9999898694433729	WITHOUT_CLASSIFICATION	1.0130556627208193E-5	TEST
line 753	WITHOUT_CLASSIFICATION	0.9999900429166738	WITHOUT_CLASSIFICATION	9.95708332625235E-6	TEST
line 779	WITHOUT_CLASSIFICATION	0.9999910024804435	WITHOUT_CLASSIFICATION	8.997519556544699E-6	TEST
line 801	WITHOUT_CLASSIFICATION	0.999992031023259	WITHOUT_CLASSIFICATION	7.968976741022078E-6	TEST
line 808	WITHOUT_CLASSIFICATION	0.9999877342788773	WITHOUT_CLASSIFICATION	1.2265721122732197E-5	TEST
line 811	WITHOUT_CLASSIFICATION	0.9999935376198343	WITHOUT_CLASSIFICATION	6.46238016564708E-6	TEST
line 817	WITHOUT_CLASSIFICATION	0.999993636425717	WITHOUT_CLASSIFICATION	6.3635742829369345E-6	TEST
line 842	WITHOUT_CLASSIFICATION	0.9999898245231774	WITHOUT_CLASSIFICATION	1.0175476822503048E-5	TEST
line 845	WITHOUT_CLASSIFICATION	0.9999918433212008	WITHOUT_CLASSIFICATION	8.15667879914346E-6	TEST
line 848	WITHOUT_CLASSIFICATION	0.9999913939270926	WITHOUT_CLASSIFICATION	8.606072907405274E-6	TEST
line 893	WITHOUT_CLASSIFICATION	0.9999868909227637	WITHOUT_CLASSIFICATION	1.3109077236351694E-5	TEST
line 899	WITHOUT_CLASSIFICATION	0.999989828974803	WITHOUT_CLASSIFICATION	1.0171025197031671E-5	TEST
line 932	WITHOUT_CLASSIFICATION	0.9999853116154992	WITHOUT_CLASSIFICATION	1.4688384500879965E-5	TEST
line 944	WITHOUT_CLASSIFICATION	0.9999906655324938	WITHOUT_CLASSIFICATION	9.334467506215875E-6	TEST
line 960	WITHOUT_CLASSIFICATION	0.9999887213253723	WITHOUT_CLASSIFICATION	1.127867462770392E-5	TEST
line 980	WITHOUT_CLASSIFICATION	0.9999872257380296	WITHOUT_CLASSIFICATION	1.2774261970331394E-5	TEST
line 1004	WITHOUT_CLASSIFICATION	0.9999934823906407	WITHOUT_CLASSIFICATION	6.517609359351632E-6	TEST
line 1038	WITHOUT_CLASSIFICATION	0.9999899251554576	WITHOUT_CLASSIFICATION	1.0074844542522181E-5	TEST
line 820	WITHOUT_CLASSIFICATION	0.999985509884029	WITHOUT_CLASSIFICATION	1.4490115970887607E-5	TEST
line 826	WITHOUT_CLASSIFICATION	0.9999897547689451	WITHOUT_CLASSIFICATION	1.024523105482336E-5	TEST
line 829	WITHOUT_CLASSIFICATION	0.9999864145905902	WITHOUT_CLASSIFICATION	1.3585409409749329E-5	TEST
line 832	WITHOUT_CLASSIFICATION	0.99998661635915	WITHOUT_CLASSIFICATION	1.3383640850130561E-5	TEST
line 851	WITHOUT_CLASSIFICATION	0.9999935583914804	WITHOUT_CLASSIFICATION	6.441608519584085E-6	TEST
line 857	WITHOUT_CLASSIFICATION	0.999991845102278	WITHOUT_CLASSIFICATION	8.154897722011413E-6	TEST
line 860	WITHOUT_CLASSIFICATION	0.999989403389044	WITHOUT_CLASSIFICATION	1.0596610956013873E-5	TEST
line 863	WITHOUT_CLASSIFICATION	0.9999887264107292	WITHOUT_CLASSIFICATION	1.1273589270910356E-5	TEST
line 866	WITHOUT_CLASSIFICATION	0.9999912089614709	WITHOUT_CLASSIFICATION	8.791038529147145E-6	TEST
line 869	WITHOUT_CLASSIFICATION	0.9999902302623903	WITHOUT_CLASSIFICATION	9.76973760976991E-6	TEST
line 875	WITHOUT_CLASSIFICATION	0.9999917181393825	WITHOUT_CLASSIFICATION	8.281860617548556E-6	TEST
line 884	WITHOUT_CLASSIFICATION	0.9999914320349688	WITHOUT_CLASSIFICATION	8.56796503121321E-6	TEST
line 887	WITHOUT_CLASSIFICATION	0.9999915019066099	WITHOUT_CLASSIFICATION	8.498093390065391E-6	TEST
line 890	WITHOUT_CLASSIFICATION	0.9999878187143953	WITHOUT_CLASSIFICATION	1.2181285604705712E-5	TEST
line 902	WITHOUT_CLASSIFICATION	0.9999862871669271	WITHOUT_CLASSIFICATION	1.3712833072918533E-5	TEST
line 909	WITHOUT_CLASSIFICATION	0.9999882382665802	WITHOUT_CLASSIFICATION	1.176173341976863E-5	TEST
line 912	WITHOUT_CLASSIFICATION	0.9999915300971637	WITHOUT_CLASSIFICATION	8.469902836288326E-6	TEST
line 916	WITHOUT_CLASSIFICATION	0.9999931090741592	WITHOUT_CLASSIFICATION	6.8909258408176605E-6	TEST
line 922	WITHOUT_CLASSIFICATION	0.9999884928752707	WITHOUT_CLASSIFICATION	1.1507124729342394E-5	TEST
line 928	WITHOUT_CLASSIFICATION	0.9999876677556782	WITHOUT_CLASSIFICATION	1.2332244321805656E-5	TEST
line 941	WITHOUT_CLASSIFICATION	0.999993124005769	WITHOUT_CLASSIFICATION	6.8759942310254515E-6	TEST
line 947	WITHOUT_CLASSIFICATION	0.9999913578370158	WITHOUT_CLASSIFICATION	8.642162984262911E-6	TEST
line 951	WITHOUT_CLASSIFICATION	0.9999930013670643	WITHOUT_CLASSIFICATION	6.99863293576938E-6	TEST
line 955	WITHOUT_CLASSIFICATION	0.9999905469905624	WITHOUT_CLASSIFICATION	9.453009437458006E-6	TEST
line 965	WITHOUT_CLASSIFICATION	0.9999910251902981	WITHOUT_CLASSIFICATION	8.974809701909155E-6	TEST
line 969	WITHOUT_CLASSIFICATION	0.9999906948023347	WITHOUT_CLASSIFICATION	9.30519766524375E-6	TEST
line 977	WITHOUT_CLASSIFICATION	0.9999907955442976	WITHOUT_CLASSIFICATION	9.204455702430691E-6	TEST
line 983	WITHOUT_CLASSIFICATION	0.999986741723756	WITHOUT_CLASSIFICATION	1.3258276243950748E-5	TEST
line 1013	WITHOUT_CLASSIFICATION	0.9999921190034168	WITHOUT_CLASSIFICATION	7.880996583220814E-6	TEST
line 1023	WITHOUT_CLASSIFICATION	0.9999908554142828	WITHOUT_CLASSIFICATION	9.144585717179022E-6	TEST
line 1035	WITHOUT_CLASSIFICATION	0.9999907763806808	WITHOUT_CLASSIFICATION	9.223619319198194E-6	TEST
line 1041	WITHOUT_CLASSIFICATION	0.9999940782961053	WITHOUT_CLASSIFICATION	5.921703894697329E-6	TEST
line 1043	WITHOUT_CLASSIFICATION	0.9999923688121874	WITHOUT_CLASSIFICATION	7.631187812552759E-6	TEST
line 1054	WITHOUT_CLASSIFICATION	0.9999936834946882	WITHOUT_CLASSIFICATION	6.316505311769198E-6	TEST
line 1057	WITHOUT_CLASSIFICATION	0.9999937349535633	WITHOUT_CLASSIFICATION	6.265046436650441E-6	TEST
line 1060	WITHOUT_CLASSIFICATION	0.9999939923137063	WITHOUT_CLASSIFICATION	6.007686293655982E-6	TEST
line 1069	WITHOUT_CLASSIFICATION	0.9999932866456025	WITHOUT_CLASSIFICATION	6.7133543975588525E-6	TEST
line 1075	WITHOUT_CLASSIFICATION	0.9999944991986056	WITHOUT_CLASSIFICATION	5.500801394386784E-6	TEST
line 1105	WITHOUT_CLASSIFICATION	0.9999937662325367	WITHOUT_CLASSIFICATION	6.233767463332513E-6	TEST
line 1111	WITHOUT_CLASSIFICATION	0.99999460244117	WITHOUT_CLASSIFICATION	5.397558830010981E-6	TEST
line 1122	WITHOUT_CLASSIFICATION	0.9999937019361894	WITHOUT_CLASSIFICATION	6.298063810543954E-6	TEST
line 1130	WITHOUT_CLASSIFICATION	0.9999916237407954	WITHOUT_CLASSIFICATION	8.37625920452184E-6	TEST
line 1140	WITHOUT_CLASSIFICATION	0.9999939079369845	WITHOUT_CLASSIFICATION	6.092063015514096E-6	TEST
line 1158	WITHOUT_CLASSIFICATION	0.9999944330268952	WITHOUT_CLASSIFICATION	5.56697310477623E-6	TEST
line 1204	WITHOUT_CLASSIFICATION	0.9999917392295572	WITHOUT_CLASSIFICATION	8.26077044275209E-6	TEST
line 1207	WITHOUT_CLASSIFICATION	0.9999920504545633	WITHOUT_CLASSIFICATION	7.949545436642502E-6	TEST
line 1247	WITHOUT_CLASSIFICATION	0.9999942968874378	WITHOUT_CLASSIFICATION	5.703112562138355E-6	TEST
line 1251	WITHOUT_CLASSIFICATION	0.9999937931991277	WITHOUT_CLASSIFICATION	6.206800872159614E-6	TEST
line 1261	WITHOUT_CLASSIFICATION	0.9999937786481108	WITHOUT_CLASSIFICATION	6.221351889258479E-6	TEST
line 1078	WITHOUT_CLASSIFICATION	0.9999938950562051	WITHOUT_CLASSIFICATION	6.1049437949595435E-6	TEST
line 1084	WITHOUT_CLASSIFICATION	0.9999929266497355	WITHOUT_CLASSIFICATION	7.0733502645166595E-6	TEST
line 1087	WITHOUT_CLASSIFICATION	0.9999929843328985	WITHOUT_CLASSIFICATION	7.015667101448722E-6	TEST
line 1090	WITHOUT_CLASSIFICATION	0.9999930121080913	WITHOUT_CLASSIFICATION	6.987891908656181E-6	TEST
line 1093	WITHOUT_CLASSIFICATION	0.9999909311608577	WITHOUT_CLASSIFICATION	9.068839142407875E-6	TEST
line 1114	WITHOUT_CLASSIFICATION	0.9999949530566404	WITHOUT_CLASSIFICATION	5.046943359619017E-6	TEST
line 1116	WITHOUT_CLASSIFICATION	0.9999948916742569	WITHOUT_CLASSIFICATION	5.108325743081486E-6	TEST
line 1118	WITHOUT_CLASSIFICATION	0.9999943122848051	WITHOUT_CLASSIFICATION	5.687715194894662E-6	TEST
line 1124	WITHOUT_CLASSIFICATION	0.9999941016919981	WITHOUT_CLASSIFICATION	5.898308002006266E-6	TEST
line 1126	WITHOUT_CLASSIFICATION	0.9999940166842828	WITHOUT_CLASSIFICATION	5.983315717200759E-6	TEST
line 1138	WITHOUT_CLASSIFICATION	0.9999927072568091	WITHOUT_CLASSIFICATION	7.292743190882416E-6	TEST
line 1144	WITHOUT_CLASSIFICATION	0.9999949198784722	WITHOUT_CLASSIFICATION	5.080121527774082E-6	TEST
line 1149	WITHOUT_CLASSIFICATION	0.9999943381759916	WITHOUT_CLASSIFICATION	5.661824008407153E-6	TEST
line 1155	WITHOUT_CLASSIFICATION	0.9999948252035297	WITHOUT_CLASSIFICATION	5.17479647040659E-6	TEST
line 1162	WITHOUT_CLASSIFICATION	0.9999940298086557	WITHOUT_CLASSIFICATION	5.970191344319748E-6	TEST
line 1173	WITHOUT_CLASSIFICATION	0.9999934963889754	WITHOUT_CLASSIFICATION	6.503611024671052E-6	TEST
line 1179	WITHOUT_CLASSIFICATION	0.9999943485941568	WITHOUT_CLASSIFICATION	5.651405843155801E-6	TEST
line 1182	WITHOUT_CLASSIFICATION	0.999993303882504	WITHOUT_CLASSIFICATION	6.69611749603203E-6	TEST
line 1190	WITHOUT_CLASSIFICATION	0.9999928131080924	WITHOUT_CLASSIFICATION	7.186891907679016E-6	TEST
line 1196	WITHOUT_CLASSIFICATION	0.9999943343749339	WITHOUT_CLASSIFICATION	5.665625066131246E-6	TEST
line 1213	WITHOUT_CLASSIFICATION	0.9999916741689376	WITHOUT_CLASSIFICATION	8.32583106241994E-6	TEST
line 1217	WITHOUT_CLASSIFICATION	0.9999939281449369	WITHOUT_CLASSIFICATION	6.071855063070244E-6	TEST
line 1231	WITHOUT_CLASSIFICATION	0.9999922459426371	WITHOUT_CLASSIFICATION	7.754057362936696E-6	TEST
line 1236	WITHOUT_CLASSIFICATION	0.9999925021096808	WITHOUT_CLASSIFICATION	7.49789031914084E-6	TEST
line 1244	WITHOUT_CLASSIFICATION	0.9999938400222808	WITHOUT_CLASSIFICATION	6.159977719285947E-6	TEST
line 1254	WITHOUT_CLASSIFICATION	0.9999941397972728	WITHOUT_CLASSIFICATION	5.860202727264251E-6	TEST
line 1258	WITHOUT_CLASSIFICATION	0.9999933285732715	WITHOUT_CLASSIFICATION	6.671426728468753E-6	TEST
line 1264	WITHOUT_CLASSIFICATION	0.9999941281790609	WITHOUT_CLASSIFICATION	5.8718209392115135E-6	TEST
line 1270	WITHOUT_CLASSIFICATION	0.9999929191849226	WITHOUT_CLASSIFICATION	7.0808150773421755E-6	TEST
line 1273	WITHOUT_CLASSIFICATION	0.9999921172321284	WITHOUT_CLASSIFICATION	7.882767871538395E-6	TEST
line 1276	WITHOUT_CLASSIFICATION	0.9999941388155308	WITHOUT_CLASSIFICATION	5.861184469183491E-6	TEST
line 1279	WITHOUT_CLASSIFICATION	0.9999931501548461	WITHOUT_CLASSIFICATION	6.849845153915872E-6	TEST
line 1282	WITHOUT_CLASSIFICATION	0.9999929601633062	WITHOUT_CLASSIFICATION	7.03983669381528E-6	TEST
line 1289	WITHOUT_CLASSIFICATION	0.9999922147592689	WITHOUT_CLASSIFICATION	7.785240731032077E-6	TEST
line 1292	WITHOUT_CLASSIFICATION	0.9999917521969889	WITHOUT_CLASSIFICATION	8.247803011149607E-6	TEST
line 1295	WITHOUT_CLASSIFICATION	0.9999920558001333	WITHOUT_CLASSIFICATION	7.944199866660508E-6	TEST
line 1298	WITHOUT_CLASSIFICATION	0.9999911308235967	WITHOUT_CLASSIFICATION	8.869176403288413E-6	TEST
line 1305	WITHOUT_CLASSIFICATION	0.999990671183727	WITHOUT_CLASSIFICATION	9.328816272912403E-6	TEST
line 1348	WITHOUT_CLASSIFICATION	0.9999928325282076	WITHOUT_CLASSIFICATION	7.1674717924478345E-6	TEST
line 1387	WITHOUT_CLASSIFICATION	0.9999928104710191	WITHOUT_CLASSIFICATION	7.1895289809900376E-6	TEST
line 1392	WITHOUT_CLASSIFICATION	0.9999904800815226	WITHOUT_CLASSIFICATION	9.519918477503404E-6	TEST
line 1448	WITHOUT_CLASSIFICATION	0.999994292450524	WITHOUT_CLASSIFICATION	5.7075494760896045E-6	TEST
line 1462	WITHOUT_CLASSIFICATION	0.9999940567704314	WITHOUT_CLASSIFICATION	5.9432295685551E-6	TEST
line 1470	WITHOUT_CLASSIFICATION	0.9999943002702765	WITHOUT_CLASSIFICATION	5.6997297235225196E-6	TEST
line 1496	WITHOUT_CLASSIFICATION	0.999994335702979	WITHOUT_CLASSIFICATION	5.664297021000519E-6	TEST
line 1502	WITHOUT_CLASSIFICATION	0.9999923565051189	WITHOUT_CLASSIFICATION	7.643494881072327E-6	TEST
line 1595	WITHOUT_CLASSIFICATION	0.9999939629522739	WITHOUT_CLASSIFICATION	6.037047726154817E-6	TEST
line 1598	WITHOUT_CLASSIFICATION	0.9999935362703264	WITHOUT_CLASSIFICATION	6.463729673640925E-6	TEST
line 1308	WITHOUT_CLASSIFICATION	0.999989575993533	WITHOUT_CLASSIFICATION	1.0424006466890095E-5	TEST
line 1311	WITHOUT_CLASSIFICATION	0.9999931485376343	WITHOUT_CLASSIFICATION	6.851462365731108E-6	TEST
line 1317	WITHOUT_CLASSIFICATION	0.9999932533509136	WITHOUT_CLASSIFICATION	6.746649086430634E-6	TEST
line 1323	WITHOUT_CLASSIFICATION	0.9999917622387816	WITHOUT_CLASSIFICATION	8.237761218339674E-6	TEST
line 1326	WITHOUT_CLASSIFICATION	0.9999919353815253	WITHOUT_CLASSIFICATION	8.064618474712034E-6	TEST
line 1329	WITHOUT_CLASSIFICATION	0.9999893061248675	WITHOUT_CLASSIFICATION	1.0693875132458927E-5	TEST
line 1337	WITHOUT_CLASSIFICATION	0.9999933001927115	WITHOUT_CLASSIFICATION	6.699807288452457E-6	TEST
line 1342	WITHOUT_CLASSIFICATION	0.999992102780618	WITHOUT_CLASSIFICATION	7.89721938193242E-6	TEST
line 1345	WITHOUT_CLASSIFICATION	0.9999937957531276	WITHOUT_CLASSIFICATION	6.2042468724248866E-6	TEST
line 1354	WITHOUT_CLASSIFICATION	0.9999933638541912	WITHOUT_CLASSIFICATION	6.636145808751284E-6	TEST
line 1359	WITHOUT_CLASSIFICATION	0.9999921946114125	WITHOUT_CLASSIFICATION	7.805388587425955E-6	TEST
line 1366	WITHOUT_CLASSIFICATION	0.9999930214128544	WITHOUT_CLASSIFICATION	6.9785871456023216E-6	TEST
line 1369	WITHOUT_CLASSIFICATION	0.9999922444909289	WITHOUT_CLASSIFICATION	7.755509071036937E-6	TEST
line 1373	WITHOUT_CLASSIFICATION	0.9999933000252624	WITHOUT_CLASSIFICATION	6.699974737531333E-6	TEST
line 1377	WITHOUT_CLASSIFICATION	0.999993272759546	WITHOUT_CLASSIFICATION	6.727240454013617E-6	TEST
line 1383	WITHOUT_CLASSIFICATION	0.9999926606749845	WITHOUT_CLASSIFICATION	7.339325015445513E-6	TEST
line 1399	WITHOUT_CLASSIFICATION	0.9999918538602663	WITHOUT_CLASSIFICATION	8.14613973362018E-6	TEST
line 1401	WITHOUT_CLASSIFICATION	0.999993790126831	WITHOUT_CLASSIFICATION	6.2098731689221645E-6	TEST
line 1406	WITHOUT_CLASSIFICATION	0.9999938823067261	WITHOUT_CLASSIFICATION	6.117693273813933E-6	TEST
line 1417	WITHOUT_CLASSIFICATION	0.99999502297175	WITHOUT_CLASSIFICATION	4.9770282500188276E-6	TEST
line 1424	WITHOUT_CLASSIFICATION	0.9999937713469285	WITHOUT_CLASSIFICATION	6.228653071560539E-6	TEST
line 1427	WITHOUT_CLASSIFICATION	0.999994121566457	WITHOUT_CLASSIFICATION	5.878433543071395E-6	TEST
line 1430	WITHOUT_CLASSIFICATION	0.9999917248985307	WITHOUT_CLASSIFICATION	8.275101469363439E-6	TEST
line 1433	WITHOUT_CLASSIFICATION	0.9999931504954268	WITHOUT_CLASSIFICATION	6.849504573188022E-6	TEST
line 1436	WITHOUT_CLASSIFICATION	0.9999934617319477	WITHOUT_CLASSIFICATION	6.538268052242126E-6	TEST
line 1442	WITHOUT_CLASSIFICATION	0.9999937113138778	WITHOUT_CLASSIFICATION	6.288686122227718E-6	TEST
line 1445	WITHOUT_CLASSIFICATION	0.9999949589828461	WITHOUT_CLASSIFICATION	5.04101715398023E-6	TEST
line 1458	WITHOUT_CLASSIFICATION	0.9999945898855924	WITHOUT_CLASSIFICATION	5.4101144075261366E-6	TEST
line 1464	WITHOUT_CLASSIFICATION	0.9999949139200158	WITHOUT_CLASSIFICATION	5.086079984132578E-6	TEST
line 1489	WITHOUT_CLASSIFICATION	0.9999937082659739	WITHOUT_CLASSIFICATION	6.291734026074063E-6	TEST
line 1493	WITHOUT_CLASSIFICATION	0.9999923066601417	WITHOUT_CLASSIFICATION	7.693339858222452E-6	TEST
line 1507	WITHOUT_CLASSIFICATION	0.9999940611376942	WITHOUT_CLASSIFICATION	5.938862305824531E-6	TEST
line 1519	WITHOUT_CLASSIFICATION	0.9999940071264819	WITHOUT_CLASSIFICATION	5.992873518138025E-6	TEST
line 1532	WITHOUT_CLASSIFICATION	0.9999919168341896	WITHOUT_CLASSIFICATION	8.083165810320517E-6	TEST
line 1538	WITHOUT_CLASSIFICATION	0.9999926876313945	WITHOUT_CLASSIFICATION	7.3123686055023846E-6	TEST
line 1542	WITHOUT_CLASSIFICATION	0.9999940069453177	WITHOUT_CLASSIFICATION	5.993054682272542E-6	TEST
line 1557	WITHOUT_CLASSIFICATION	0.9999949182563991	WITHOUT_CLASSIFICATION	5.081743600868465E-6	TEST
line 1573	WITHOUT_CLASSIFICATION	0.9999934772274353	WITHOUT_CLASSIFICATION	6.522772564691088E-6	TEST
line 1591	WITHOUT_CLASSIFICATION	0.9999939846703884	WITHOUT_CLASSIFICATION	6.015329611635384E-6	TEST
line 1615	WITHOUT_CLASSIFICATION	0.9999948723193685	WITHOUT_CLASSIFICATION	5.127680631590035E-6	TEST
line 1629	WITHOUT_CLASSIFICATION	0.9999921313676763	WITHOUT_CLASSIFICATION	7.86863232370262E-6	TEST
line 1632	WITHOUT_CLASSIFICATION	0.9999920038341928	WITHOUT_CLASSIFICATION	7.996165807237097E-6	TEST
line 1705	WITHOUT_CLASSIFICATION	0.9999934913434048	WITHOUT_CLASSIFICATION	6.508656595218023E-6	TEST
line 1716	WITHOUT_CLASSIFICATION	0.999995006766816	WITHOUT_CLASSIFICATION	4.993233184008676E-6	TEST
line 1725	WITHOUT_CLASSIFICATION	0.9999940703700547	WITHOUT_CLASSIFICATION	5.929629945333702E-6	TEST
line 1742	WITHOUT_CLASSIFICATION	0.9999940617657452	WITHOUT_CLASSIFICATION	5.938234254872283E-6	TEST
line 1749	WITHOUT_CLASSIFICATION	0.9999943498200428	WITHOUT_CLASSIFICATION	5.650179957197052E-6	TEST
line 1818	WITHOUT_CLASSIFICATION	0.999993996655753	WITHOUT_CLASSIFICATION	6.003344247170482E-6	TEST
line 1822	WITHOUT_CLASSIFICATION	0.9999929647974253	WITHOUT_CLASSIFICATION	7.035202574763041E-6	TEST
line 1607	WITHOUT_CLASSIFICATION	0.9999941530063788	WITHOUT_CLASSIFICATION	5.846993621159134E-6	TEST
line 1610	WITHOUT_CLASSIFICATION	0.9999939713403101	WITHOUT_CLASSIFICATION	6.028659689866875E-6	TEST
line 1622	WITHOUT_CLASSIFICATION	0.9999937538375027	WITHOUT_CLASSIFICATION	6.246162497247308E-6	TEST
line 1625	WITHOUT_CLASSIFICATION	0.9999940966826864	WITHOUT_CLASSIFICATION	5.903317313669293E-6	TEST
line 1636	WITHOUT_CLASSIFICATION	0.9999931043308211	WITHOUT_CLASSIFICATION	6.895669178861353E-6	TEST
line 1639	WITHOUT_CLASSIFICATION	0.9999923174475193	WITHOUT_CLASSIFICATION	7.6825524807961E-6	TEST
line 1647	WITHOUT_CLASSIFICATION	0.9999953220602602	WITHOUT_CLASSIFICATION	4.677939739838816E-6	TEST
line 1651	WITHOUT_CLASSIFICATION	0.9999948337699689	WITHOUT_CLASSIFICATION	5.166230031108277E-6	TEST
line 1657	WITHOUT_CLASSIFICATION	0.999995162008376	WITHOUT_CLASSIFICATION	4.837991623937174E-6	TEST
line 1660	WITHOUT_CLASSIFICATION	0.9999934970384202	WITHOUT_CLASSIFICATION	6.502961579822337E-6	TEST
line 1663	WITHOUT_CLASSIFICATION	0.9999930815864267	WITHOUT_CLASSIFICATION	6.918413573266613E-6	TEST
line 1678	WITHOUT_CLASSIFICATION	0.999994676572657	WITHOUT_CLASSIFICATION	5.323427342982391E-6	TEST
line 1702	WITHOUT_CLASSIFICATION	0.999992833799366	WITHOUT_CLASSIFICATION	7.1662006340498204E-6	TEST
line 1711	WITHOUT_CLASSIFICATION	0.9999950027017757	WITHOUT_CLASSIFICATION	4.997298224238004E-6	TEST
line 1719	WITHOUT_CLASSIFICATION	0.9999942128863726	WITHOUT_CLASSIFICATION	5.787113627414081E-6	TEST
line 1722	WITHOUT_CLASSIFICATION	0.9999937260122002	WITHOUT_CLASSIFICATION	6.273987799963362E-6	TEST
line 1731	WITHOUT_CLASSIFICATION	0.9999932545647158	WITHOUT_CLASSIFICATION	6.745435284278104E-6	TEST
line 1734	WITHOUT_CLASSIFICATION	0.9999936977016607	WITHOUT_CLASSIFICATION	6.302298339298069E-6	TEST
line 1738	WITHOUT_CLASSIFICATION	0.9999928126164308	WITHOUT_CLASSIFICATION	7.187383569284721E-6	TEST
line 1746	WITHOUT_CLASSIFICATION	0.9999951732919988	WITHOUT_CLASSIFICATION	4.8267080012018255E-6	TEST
line 1756	WITHOUT_CLASSIFICATION	0.9999951889081694	WITHOUT_CLASSIFICATION	4.811091830530072E-6	TEST
line 1758	WITHOUT_CLASSIFICATION	0.9999944733225172	WITHOUT_CLASSIFICATION	5.526677482699441E-6	TEST
line 1761	WITHOUT_CLASSIFICATION	0.9999949117928527	WITHOUT_CLASSIFICATION	5.088207147280053E-6	TEST
line 1767	WITHOUT_CLASSIFICATION	0.9999949146618983	WITHOUT_CLASSIFICATION	5.085338101611881E-6	TEST
line 1776	WITHOUT_CLASSIFICATION	0.9999948890546007	WITHOUT_CLASSIFICATION	5.110945399263295E-6	TEST
line 1782	WITHOUT_CLASSIFICATION	0.9999933154661279	WITHOUT_CLASSIFICATION	6.6845338721812584E-6	TEST
line 1785	WITHOUT_CLASSIFICATION	0.9999945932544857	WITHOUT_CLASSIFICATION	5.406745514286903E-6	TEST
line 1788	WITHOUT_CLASSIFICATION	0.9999943657130724	WITHOUT_CLASSIFICATION	5.634286927566465E-6	TEST
line 1791	WITHOUT_CLASSIFICATION	0.9999940523757078	WITHOUT_CLASSIFICATION	5.9476242922050074E-6	TEST
line 1797	WITHOUT_CLASSIFICATION	0.9999940510503155	WITHOUT_CLASSIFICATION	5.94894968459304E-6	TEST
line 1800	WITHOUT_CLASSIFICATION	0.9999920082794742	WITHOUT_CLASSIFICATION	7.99172052578031E-6	TEST
line 1803	WITHOUT_CLASSIFICATION	0.9999890137699997	WITHOUT_CLASSIFICATION	1.0986230000401192E-5	TEST
line 1806	WITHOUT_CLASSIFICATION	0.9999931165505408	WITHOUT_CLASSIFICATION	6.883449459240388E-6	TEST
line 1809	WITHOUT_CLASSIFICATION	0.9999919618142082	WITHOUT_CLASSIFICATION	8.038185791746617E-6	TEST
line 1815	WITHOUT_CLASSIFICATION	0.9999942683315806	WITHOUT_CLASSIFICATION	5.731668419374562E-6	TEST
line 1825	WITHOUT_CLASSIFICATION	0.9999933506422897	WITHOUT_CLASSIFICATION	6.649357710355722E-6	TEST
line 1828	WITHOUT_CLASSIFICATION	0.9999929732904074	WITHOUT_CLASSIFICATION	7.026709592612963E-6	TEST
line 1831	WITHOUT_CLASSIFICATION	0.9999925870926127	WITHOUT_CLASSIFICATION	7.412907387382515E-6	TEST
line 1847	WITHOUT_CLASSIFICATION	0.9999947433156485	WITHOUT_CLASSIFICATION	5.2566843514778194E-6	TEST
$8 == null ? NilImplicitNode.NIL : $8;	WITHOUT_CLASSIFICATION	0.9999973236549854	WITHOUT_CLASSIFICATION	2.67634501466571E-6	TEST
$5 == null ? NilImplicitNode.NIL : $5;	WITHOUT_CLASSIFICATION	0.9999975915971211	WITHOUT_CLASSIFICATION	2.4084028789474366E-6	TEST
.setPosFrom($2);	WITHOUT_CLASSIFICATION	0.9999719571362354	WITHOUT_CLASSIFICATION	2.8042863764549435E-5	TEST
zero length array	WITHOUT_CLASSIFICATION	0.9999953317093057	WITHOUT_CLASSIFICATION	4.668290694279998E-6	TEST
DStrNode: :"some text #{some expression}"	WITHOUT_CLASSIFICATION	0.999905414053508	WITHOUT_CLASSIFICATION	9.458594649201638E-5	TEST
StrNode: :"some text"	WITHOUT_CLASSIFICATION	0.999873494645014	WITHOUT_CLASSIFICATION	1.2650535498606123E-4	TEST
EvStrNode :"#{some expression}"	WITHOUT_CLASSIFICATION	0.9999854345068571	WITHOUT_CLASSIFICATION	1.4565493143021297E-5	TEST
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998587298408586	WITHOUT_CLASSIFICATION	1.4127015914145417E-4	TEST
line 1854	WITHOUT_CLASSIFICATION	0.9999946363548878	WITHOUT_CLASSIFICATION	5.363645112169564E-6	TEST
line 1869	WITHOUT_CLASSIFICATION	0.9999936265866568	WITHOUT_CLASSIFICATION	6.373413343075031E-6	TEST
line 1872	WITHOUT_CLASSIFICATION	0.999993409448051	WITHOUT_CLASSIFICATION	6.590551948933306E-6	TEST
line 1877	WITHOUT_CLASSIFICATION	0.9999943680002195	WITHOUT_CLASSIFICATION	5.631999780453586E-6	TEST
line 1886	WITHOUT_CLASSIFICATION	0.999994416246376	WITHOUT_CLASSIFICATION	5.5837536239305705E-6	TEST
line 1898	WITHOUT_CLASSIFICATION	0.9999933654890749	WITHOUT_CLASSIFICATION	6.6345109251411465E-6	TEST
line 1902	WITHOUT_CLASSIFICATION	0.9999911933135422	WITHOUT_CLASSIFICATION	8.80668645772376E-6	TEST
line 1905	WITHOUT_CLASSIFICATION	0.9999919862860879	WITHOUT_CLASSIFICATION	8.013713912054306E-6	TEST
line 1911	WITHOUT_CLASSIFICATION	0.9999940522985452	WITHOUT_CLASSIFICATION	5.947701454834478E-6	TEST
line 1918	WITHOUT_CLASSIFICATION	0.9999933982003689	WITHOUT_CLASSIFICATION	6.601799631065763E-6	TEST
line 1935	WITHOUT_CLASSIFICATION	0.9999922234862187	WITHOUT_CLASSIFICATION	7.77651378120782E-6	TEST
line 1938	WITHOUT_CLASSIFICATION	0.9999915058164303	WITHOUT_CLASSIFICATION	8.494183569771505E-6	TEST
line 1942	WITHOUT_CLASSIFICATION	0.9999930107836011	WITHOUT_CLASSIFICATION	6.989216398974485E-6	TEST
line 1948	WITHOUT_CLASSIFICATION	0.9999936567789383	WITHOUT_CLASSIFICATION	6.3432210617305385E-6	TEST
line 1960	WITHOUT_CLASSIFICATION	0.9999927903192425	WITHOUT_CLASSIFICATION	7.209680757469144E-6	TEST
line 1963	WITHOUT_CLASSIFICATION	0.9999923297177221	WITHOUT_CLASSIFICATION	7.670282277861207E-6	TEST
line 1968	WITHOUT_CLASSIFICATION	0.9999935815558542	WITHOUT_CLASSIFICATION	6.418444145793371E-6	TEST
line 1972	WITHOUT_CLASSIFICATION	0.9999931147962535	WITHOUT_CLASSIFICATION	6.8852037465532756E-6	TEST
line 1982	WITHOUT_CLASSIFICATION	0.9999920906263944	WITHOUT_CLASSIFICATION	7.90937360558653E-6	TEST
line 1995	WITHOUT_CLASSIFICATION	0.9999939800548688	WITHOUT_CLASSIFICATION	6.019945131110912E-6	TEST
line 2000	WITHOUT_CLASSIFICATION	0.9999786474227716	WITHOUT_CLASSIFICATION	2.1352577228416644E-5	TEST
line 2006	WITHOUT_CLASSIFICATION	0.9999795066485339	WITHOUT_CLASSIFICATION	2.0493351466197412E-5	TEST
line 2010	WITHOUT_CLASSIFICATION	0.9999899243935089	WITHOUT_CLASSIFICATION	1.0075606491141431E-5	TEST
We may need to subtract addition offset off of first	WITHOUT_CLASSIFICATION	0.9999981460310408	WITHOUT_CLASSIFICATION	1.8539689591365732E-6	TEST
string fragment (we optimistically take one off in	WITHOUT_CLASSIFICATION	0.9999993138111894	WITHOUT_CLASSIFICATION	6.861888104678975E-7	TEST
ParserSupport.literal_concat). Check token length	WITHOUT_CLASSIFICATION	0.9999998981504676	WITHOUT_CLASSIFICATION	1.0184953231716513E-7	TEST
and subtract as neeeded.	WITHOUT_CLASSIFICATION	0.9999893289546783	WITHOUT_CLASSIFICATION	1.0671045321699444E-5	TEST
$$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);	WITHOUT_CLASSIFICATION	0.9999996729499999	WITHOUT_CLASSIFICATION	3.27049999991475E-7	TEST
ENEBO: arg surrounded by in_defined set/unset	WITHOUT_CLASSIFICATION	0.9999988618491357	WITHOUT_CLASSIFICATION	1.1381508643011592E-6	TEST
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998601996273	WITHOUT_CLASSIFICATION	1.3980037281411669E-7	TEST
yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999983978636469	WITHOUT_CLASSIFICATION	1.6021363532411502E-6	TEST
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999992097534716	WITHOUT_CLASSIFICATION	7.902465283935099E-7	TEST
mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999992097534716	WITHOUT_CLASSIFICATION	7.902465283935099E-7	TEST
ENEBO: Removed !compile_for_eval which probably is to reduce warnings	WITHOUT_CLASSIFICATION	0.9999992269769725	WITHOUT_CLASSIFICATION	7.730230274329185E-7	TEST
was $$ = null;	WITHOUT_CLASSIFICATION	0.9999914201053901	WITHOUT_CLASSIFICATION	8.579894609894225E-6	TEST
line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999980555737381	WITHOUT_CLASSIFICATION	1.9444262618168483E-6	TEST
line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999790828941959	WITHOUT_CLASSIFICATION	2.091710580411475E-5	TEST
we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.999993485081352	WITHOUT_CLASSIFICATION	6.514918647982441E-6	TEST
No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999720740259925	WITHOUT_CLASSIFICATION	2.7925974007427292E-5	TEST
Next immediate scope. Variable and constant scoping rules make use of this variable in different ways.	WITHOUT_CLASSIFICATION	0.9999839929816552	WITHOUT_CLASSIFICATION	1.6007018344856258E-5	TEST
Live reference to module	WITHOUT_CLASSIFICATION	0.9999994623337005	WITHOUT_CLASSIFICATION	5.376662994089237E-7	TEST
Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999999740109228	WITHOUT_CLASSIFICATION	2.598907723420971E-8	TEST
Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999942860509867	WITHOUT_CLASSIFICATION	5.713949013283891E-6	TEST
number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9998789302844067	WITHOUT_CLASSIFICATION	1.2106971559324468E-4	TEST
number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9998382320496041	WITHOUT_CLASSIFICATION	1.617679503959252E-4	TEST
index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999142656362083	WITHOUT_CLASSIFICATION	8.573436379168645E-5	TEST
Note that this object equality check is intentional, to ensure the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999972864915085	WITHOUT_CLASSIFICATION	2.7135084915045707E-6	TEST
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999977034953421	WITHOUT_CLASSIFICATION	2.2965046578202716E-6	TEST
Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999977034953421	WITHOUT_CLASSIFICATION	2.2965046578202716E-6	TEST
Note: Only used by compiler until it can use getConstant again or use some other refactoring	WITHOUT_CLASSIFICATION	0.999997398616414	WITHOUT_CLASSIFICATION	2.60138358604769E-6	TEST
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.999999931780356	WITHOUT_CLASSIFICATION	6.821964405216817E-8	TEST
Try and unload the autoload specified from internedName	WITHOUT_CLASSIFICATION	0.9999999909924489	WITHOUT_CLASSIFICATION	9.007551167834704E-9	TEST
We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.999997796407605	WITHOUT_CLASSIFICATION	2.2035923949922124E-6	TEST
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999995662862715	WITHOUT_CLASSIFICATION	4.3371372848360045E-7	TEST
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999994171414461	WITHOUT_CLASSIFICATION	5.828585539689108E-7	TEST
source extensions	WITHOUT_CLASSIFICATION	0.999999049714819	WITHOUT_CLASSIFICATION	9.50285181073717E-7	TEST
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999994171414461	WITHOUT_CLASSIFICATION	5.828585539689108E-7	TEST
. Array given to rest should pass itself . Array with rest + other args should extract array . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999907424096418	WITHOUT_CLASSIFICATION	9.257590358121055E-6	TEST
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999860576536	WITHOUT_CLASSIFICATION	1.3942346401763192E-7	TEST
Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999981084222254	WITHOUT_CLASSIFICATION	1.891577774674281E-6	TEST
Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.999985102712775	WITHOUT_CLASSIFICATION	1.4897287225100076E-5	TEST
private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999999462399316	WITHOUT_CLASSIFICATION	5.3760068306882176E-8	TEST
private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999998812262137	WITHOUT_CLASSIFICATION	1.1877378615531119E-7	TEST
List of active dynamic scopes. Each of these may have captured other dynamic scopes to implement closures.	WITHOUT_CLASSIFICATION	0.9999999265029602	WITHOUT_CLASSIFICATION	7.349703980375689E-8	TEST
File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999973683722505	WITHOUT_CLASSIFICATION	2.631627749447596E-6	TEST
Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999997173609913	WITHOUT_CLASSIFICATION	2.8263900869704494E-6	TEST
In certain places, like grep, we don't use real frames for the call blocks. This has the effect of not setting the backref in the correct frame - this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.	WITHOUT_CLASSIFICATION	0.9999154749968912	WITHOUT_CLASSIFICATION	8.452500310889728E-5	TEST
TOPLEVEL self and a few others want a top-level scope. We create this one right away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999997402603655	WITHOUT_CLASSIFICATION	2.5973963447825504E-7	TEST
CATCH MANAGEMENT	WITHOUT_CLASSIFICATION	0.9998283992843787	WITHOUT_CLASSIFICATION	1.7160071562121192E-4	TEST
FRAME MANAGEMENT	WITHOUT_CLASSIFICATION	0.9998525960336151	WITHOUT_CLASSIFICATION	1.474039663848444E-4	TEST
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.99998237433863	WITHOUT_CLASSIFICATION	1.7625661370013044E-5	TEST
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999665559541254	WITHOUT_CLASSIFICATION	3.34440458745266E-5	TEST
assert level == 0;	WITHOUT_CLASSIFICATION	0.9999665559541254	WITHOUT_CLASSIFICATION	3.34440458745266E-5	TEST
look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999996994025669	WITHOUT_CLASSIFICATION	3.00597433074427E-7	TEST
if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999972231105236	WITHOUT_CLASSIFICATION	2.7768894763112465E-6	TEST
look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999992094675368	WITHOUT_CLASSIFICATION	7.90532463164597E-7	TEST
All entries following removed node can stay in list, but all preceding ones need to be cloned.	WITHOUT_CLASSIFICATION	0.9999987487835625	WITHOUT_CLASSIFICATION	1.2512164374859068E-6	TEST
required and optional only	WITHOUT_CLASSIFICATION	0.9999994512956061	WITHOUT_CLASSIFICATION	5.487043940009656E-7	TEST
do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999994171414461	WITHOUT_CLASSIFICATION	5.828585539689108E-7	TEST
look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999996942060841	WITHOUT_CLASSIFICATION	3.0579391587387595E-7	TEST
set the binding's frame's "previous" file and line to current, so trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999971713424	WITHOUT_CLASSIFICATION	2.82865768796579E-9	TEST
framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.999995369720483	WITHOUT_CLASSIFICATION	4.630279516965323E-6	TEST
look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999997812531998	WITHOUT_CLASSIFICATION	2.1874680015553768E-7	TEST
unframed invokers have no Ruby frames, so pull from class name but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999961768361	WITHOUT_CLASSIFICATION	3.823163897390119E-9	TEST
try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999998302028098	WITHOUT_CLASSIFICATION	1.697971903247281E-7	TEST
Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999997406377298	WITHOUT_CLASSIFICATION	2.5936227027800706E-7	TEST
Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999983850914953	WITHOUT_CLASSIFICATION	1.614908504666903E-6	TEST
Determine what sort of assigner should be used for the provided 'iter' (e.g. block). Assigner provides just the right logic for assigning values to local parameters of the block. This method also has a second optimization which is to set 'noargblock' in the case that the block is a block which accepts no arguments. The primary reason for this second optimization is that in the case of a yield with a RubyArray we will bypass some logic processing the RubyArray into a proper form (only to then not do anythign with it). A secondary benefit is that a simple boolean seems to optimize by hotspot much faster than the zero arg assigner.	WITHOUT_CLASSIFICATION	0.999998884299341	WITHOUT_CLASSIFICATION	1.115700658934945E-6	TEST
new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999909810026038	WITHOUT_CLASSIFICATION	9.018997396237257E-6	TEST
No argument blocks	WITHOUT_CLASSIFICATION	0.9999998069706769	WITHOUT_CLASSIFICATION	1.930293230308035E-7	TEST
just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999998118483417	WITHOUT_CLASSIFICATION	1.8815165822246021E-7	TEST
Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999995404867074	WITHOUT_CLASSIFICATION	4.5951329255650075E-7	TEST
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999881514804383	WITHOUT_CLASSIFICATION	1.1848519561760494E-5	TEST
This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999992316119348	WITHOUT_CLASSIFICATION	7.68388065176584E-7	TEST
Highest reserved id	WITHOUT_CLASSIFICATION	0.9999242839429884	WITHOUT_CLASSIFICATION	7.571605701167892E-5	TEST
binary typed calls	WITHOUT_CLASSIFICATION	0.9999995728712111	WITHOUT_CLASSIFICATION	4.2712878893394894E-7	TEST
id must always be even	WITHOUT_CLASSIFICATION	0.9999946292156909	WITHOUT_CLASSIFICATION	5.370784309136225E-6	TEST
with block pass	WITHOUT_CLASSIFICATION	0.999993507110216	WITHOUT_CLASSIFICATION	6.492889784066519E-6	TEST
no block	WITHOUT_CLASSIFICATION	0.9999923226233162	WITHOUT_CLASSIFICATION	7.677376683865082E-6	TEST
with block literal (iter)	WITHOUT_CLASSIFICATION	0.999997473581625	WITHOUT_CLASSIFICATION	2.526418375010038E-6	TEST
assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999383924693489	WITHOUT_CLASSIFICATION	6.16075306510991E-5	TEST
if we have multiple asgn with just args, need a special type for that	WITHOUT_CLASSIFICATION	0.999998301042167	WITHOUT_CLASSIFICATION	1.6989578329162045E-6	TEST
&& args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999970973370778	WITHOUT_CLASSIFICATION	2.902662922226234E-6	TEST
return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.999999574642126	WITHOUT_CLASSIFICATION	4.253578740800946E-7	TEST
ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999962196660307	WITHOUT_CLASSIFICATION	3.7803339692421116E-6	TEST
predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999998134949687	WITHOUT_CLASSIFICATION	1.8650503139566105E-7	TEST
fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999998502061562	WITHOUT_CLASSIFICATION	1.4979384383503074E-7	TEST
Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.999295343158852	WITHOUT_CLASSIFICATION	7.04656841147834E-4	TEST
Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999990976436439	WITHOUT_CLASSIFICATION	9.023563560738771E-7	TEST
Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.999996253328208	WITHOUT_CLASSIFICATION	3.7466717920596906E-6	TEST
Lastline	WITHOUT_CLASSIFICATION	0.9999944942294812	WITHOUT_CLASSIFICATION	5.505770518840545E-6	TEST
No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999753895135592	WITHOUT_CLASSIFICATION	2.4610486440708094E-5	TEST
bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999990327606028	WITHOUT_CLASSIFICATION	9.672393973055414E-7	TEST
Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999994927820176	WITHOUT_CLASSIFICATION	5.072179822815091E-7	TEST
try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999999553747347	WITHOUT_CLASSIFICATION	4.462526523910315E-8	TEST
Some helper functions:	WITHOUT_CLASSIFICATION	0.999999831250246	WITHOUT_CLASSIFICATION	1.6874975400116132E-7	TEST
silently ignore	WITHOUT_CLASSIFICATION	0.9999997553000977	WITHOUT_CLASSIFICATION	2.446999024045433E-7	TEST
used by compiler	WITHOUT_CLASSIFICATION	0.9999987070619472	WITHOUT_CLASSIFICATION	1.2929380527389506E-6	TEST
initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999879996586	WITHOUT_CLASSIFICATION	1.2000341329020409E-8	TEST
INSTANCE VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998587298408586	WITHOUT_CLASSIFICATION	1.4127015914145417E-4	TEST
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999215053593117	WITHOUT_CLASSIFICATION	7.849464068833467E-5	TEST
Single node on list	WITHOUT_CLASSIFICATION	0.9999977489830097	WITHOUT_CLASSIFICATION	2.2510169901709975E-6	TEST
Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999853371426936	WITHOUT_CLASSIFICATION	1.4662857306331341E-5	TEST
Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999952186509731	WITHOUT_CLASSIFICATION	4.7813490269668695E-6	TEST
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999860576536	WITHOUT_CLASSIFICATION	1.3942346401763192E-7	TEST
Note: In Ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.	WITHOUT_CLASSIFICATION	0.9999993226725828	WITHOUT_CLASSIFICATION	6.773274171310046E-7	TEST
We only define one special dynamic scope per 'logical' binding. So all bindings for the same scope should share the same dynamic scope. This allows multiple evals with different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.999999980985403	WITHOUT_CLASSIFICATION	1.9014597111887605E-8	TEST
If the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.	WITHOUT_CLASSIFICATION	0.9999955546925899	WITHOUT_CLASSIFICATION	4.445307410049072E-6	TEST
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999712414884	WITHOUT_CLASSIFICATION	2.875851153095526E-8	TEST
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999712414884	WITHOUT_CLASSIFICATION	2.875851153095526E-8	TEST
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999011518316	WITHOUT_CLASSIFICATION	9.884816841641378E-8	TEST
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999011518316	WITHOUT_CLASSIFICATION	9.884816841641378E-8	TEST
nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999011518316	WITHOUT_CLASSIFICATION	9.884816841641378E-8	TEST
no extra args for rest	WITHOUT_CLASSIFICATION	0.9999877643699258	WITHOUT_CLASSIFICATION	1.2235630074156089E-5	TEST
no extra args for rest	WITHOUT_CLASSIFICATION	0.9999877643699258	WITHOUT_CLASSIFICATION	1.2235630074156089E-5	TEST
extra args for rest	WITHOUT_CLASSIFICATION	0.9999723203725658	WITHOUT_CLASSIFICATION	2.7679627434130605E-5	TEST
extra args for rest	WITHOUT_CLASSIFICATION	0.9999723203725658	WITHOUT_CLASSIFICATION	2.7679627434130605E-5	TEST
This is the proper behavior for all non-expanded assigners which have a pre > 0. The rest override this.	WITHOUT_CLASSIFICATION	0.9999525184770137	WITHOUT_CLASSIFICATION	4.748152298628523E-5	TEST
This is the proper behavior for all non-expanded assigners.	WITHOUT_CLASSIFICATION	0.9999996309398069	WITHOUT_CLASSIFICATION	3.6906019316696603E-7	TEST
prefill ?	WITHOUT_CLASSIFICATION	0.999997826881319	WITHOUT_CLASSIFICATION	2.1731186808847805E-6	TEST
prefill ?	WITHOUT_CLASSIFICATION	0.999997826881319	WITHOUT_CLASSIFICATION	2.1731186808847805E-6	TEST
MUST be called from synchronized/locked block! should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999997624220707	WITHOUT_CLASSIFICATION	2.375779293927259E-7	TEST
retrieve method module name	WITHOUT_CLASSIFICATION	0.9999947666062878	WITHOUT_CLASSIFICATION	5.233393712143287E-6	TEST
call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999981860349656	WITHOUT_CLASSIFICATION	1.8139650344622645E-6	TEST
if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999986483852461	WITHOUT_CLASSIFICATION	1.3516147539441473E-6	TEST
if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999992219877989	WITHOUT_CLASSIFICATION	7.780122010013099E-7	TEST
method object already present, push various args tc self klazz name	WITHOUT_CLASSIFICATION	0.9999995930972877	WITHOUT_CLASSIFICATION	4.0690271225869404E-7	TEST
if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999858391581261	WITHOUT_CLASSIFICATION	1.4160841873837568E-5	TEST
invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999981774085785	WITHOUT_CLASSIFICATION	1.822591421450865E-6	TEST
caller	WITHOUT_CLASSIFICATION	0.9999909108952232	WITHOUT_CLASSIFICATION	9.08910477677858E-6	TEST
calltype block	WITHOUT_CLASSIFICATION	0.9999988433524863	WITHOUT_CLASSIFICATION	1.1566475136437147E-6	TEST
if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.999999909925826	WITHOUT_CLASSIFICATION	9.007417401721083E-8	TEST
load arity for check	WITHOUT_CLASSIFICATION	0.9999991316106993	WITHOUT_CLASSIFICATION	8.683893007272848E-7	TEST
throw	WITHOUT_CLASSIFICATION	0.999877932574608	WITHOUT_CLASSIFICATION	1.2206742539203503E-4	TEST
load arity for error	WITHOUT_CLASSIFICATION	0.9999982889487824	WITHOUT_CLASSIFICATION	1.7110512176899977E-6	TEST
arity ok, continue	WITHOUT_CLASSIFICATION	0.9999994057968574	WITHOUT_CLASSIFICATION	5.942031425173579E-7	TEST
InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999911223074309	WITHOUT_CLASSIFICATION	8.87769256909153E-6	TEST
ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999989852253188	WITHOUT_CLASSIFICATION	1.0147746812031714E-6	TEST
FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999812240646553	WITHOUT_CLASSIFICATION	1.8775935344723592E-5	TEST
InvocationCallback	WITHOUT_CLASSIFICATION	0.999984536982709	WITHOUT_CLASSIFICATION	1.5463017291135125E-5	TEST
DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999876538987447	WITHOUT_CLASSIFICATION	1.2346101255353384E-5	TEST
for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999133652123	WITHOUT_CLASSIFICATION	8.663478774482811E-8	TEST
for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999997226164891	WITHOUT_CLASSIFICATION	2.7738351101578244E-7	TEST
load the encoding	WITHOUT_CLASSIFICATION	0.9999991442266231	WITHOUT_CLASSIFICATION	8.557733769160837E-7	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999617424821	WITHOUT_CLASSIFICATION	3.825751795469652E-8	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999761566634	WITHOUT_CLASSIFICATION	2.3843336743920237E-8	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999998854634249	WITHOUT_CLASSIFICATION	1.1453657503433867E-7	TEST
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998482293768	WITHOUT_CLASSIFICATION	1.5177062304369978E-7	TEST
IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999310579978	WITHOUT_CLASSIFICATION	6.894200215552498E-8	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999616374559	WITHOUT_CLASSIFICATION	3.836254416691651E-8	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999760912075	WITHOUT_CLASSIFICATION	2.3908792516143963E-8	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998851489941	WITHOUT_CLASSIFICATION	1.1485100582753992E-7	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999679840905	WITHOUT_CLASSIFICATION	3.2015909565357456E-8	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999800466379	WITHOUT_CLASSIFICATION	1.9953362161092325E-8	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999508323337	WITHOUT_CLASSIFICATION	4.916766629223933E-8	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999800466379	WITHOUT_CLASSIFICATION	1.9953362161092325E-8	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999800466379	WITHOUT_CLASSIFICATION	1.9953362161092325E-8	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999800466379	WITHOUT_CLASSIFICATION	1.9953362161092325E-8	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999800466379	WITHOUT_CLASSIFICATION	1.9953362161092325E-8	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999800466379	WITHOUT_CLASSIFICATION	1.9953362161092325E-8	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999800466379	WITHOUT_CLASSIFICATION	1.9953362161092325E-8	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999508323337	WITHOUT_CLASSIFICATION	4.916766629223933E-8	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999508323337	WITHOUT_CLASSIFICATION	4.916766629223933E-8	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999508323337	WITHOUT_CLASSIFICATION	4.916766629223933E-8	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999508323337	WITHOUT_CLASSIFICATION	4.916766629223933E-8	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999508323337	WITHOUT_CLASSIFICATION	4.916766629223933E-8	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999508323337	WITHOUT_CLASSIFICATION	4.916766629223933E-8	TEST
If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999997253484214	WITHOUT_CLASSIFICATION	2.74651578567118E-7	TEST
BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999990707761336	WITHOUT_CLASSIFICATION	9.292238664433098E-7	TEST
ThreadContext	WITHOUT_CLASSIFICATION	0.9999938965616787	WITHOUT_CLASSIFICATION	6.103438321326057E-6	TEST
BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998425879111	WITHOUT_CLASSIFICATION	1.5741208895961332E-7	TEST
Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999912443981	WITHOUT_CLASSIFICATION	8.755601884372913E-9	TEST
RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998014262018	WITHOUT_CLASSIFICATION	1.9857379812166516E-7	TEST
add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999999612871678	WITHOUT_CLASSIFICATION	3.871283220067594E-8	TEST
if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999800317062	WITHOUT_CLASSIFICATION	1.9968293860451128E-8	TEST
wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999999617495808	WITHOUT_CLASSIFICATION	3.8250419119975004E-8	TEST
add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999913382635744	WITHOUT_CLASSIFICATION	8.66173642557967E-6	TEST
Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9998625582447423	WITHOUT_CLASSIFICATION	1.3744175525767362E-4	TEST
"." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999598869537	WITHOUT_CLASSIFICATION	4.011304641695147E-8	TEST
Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999612621513396	WITHOUT_CLASSIFICATION	3.8737848660402266E-5	TEST
Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999738122983	WITHOUT_CLASSIFICATION	2.618770163745505E-8	TEST
Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999984459509703	WITHOUT_CLASSIFICATION	1.554049029624585E-6	TEST
We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9997152366510861	WITHOUT_CLASSIFICATION	2.8476334891390195E-4	TEST
If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999988019026427	WITHOUT_CLASSIFICATION	1.1980973573864508E-6	TEST
quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999999489616015	WITHOUT_CLASSIFICATION	5.10383985245107E-8	TEST
If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999999166583629	WITHOUT_CLASSIFICATION	8.334163708659905E-8	TEST
no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999143975651	WITHOUT_CLASSIFICATION	8.560243491687534E-8	TEST
if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999956730131786	WITHOUT_CLASSIFICATION	4.326986821423134E-6	TEST
signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999981740772793	WITHOUT_CLASSIFICATION	1.8259227206681237E-6	TEST
source extensions	WITHOUT_CLASSIFICATION	0.999999049714819	WITHOUT_CLASSIFICATION	9.50285181073717E-7	TEST
We don't support .so, but some stdlib require .so directly replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999902061890928	WITHOUT_CLASSIFICATION	9.79381090717343E-6	TEST
This code exploits the fact that all .jar files will be found for the JarredScript feature. This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999948088979341	WITHOUT_CLASSIFICATION	5.191102065880627E-6	TEST
Make the class name look nice, by splitting on _ and capitalize each segment, then joining the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999543341387	WITHOUT_CLASSIFICATION	4.56658612252455E-8	TEST
It's _really_ expensive to check that the class actually exists in the Jar, so we don't do that now.	WITHOUT_CLASSIFICATION	0.999999973801404	WITHOUT_CLASSIFICATION	2.6198595955559442E-8	TEST
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999978311638644	WITHOUT_CLASSIFICATION	2.1688361356397722E-6	TEST
extension extensions	WITHOUT_CLASSIFICATION	0.9999903200230279	WITHOUT_CLASSIFICATION	9.67997697210081E-6	TEST
unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999998309771814	WITHOUT_CLASSIFICATION	1.6902281867694568E-7	TEST
try all extensions	WITHOUT_CLASSIFICATION	0.9999995975039608	WITHOUT_CLASSIFICATION	4.0249603908613117E-7	TEST
if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999145890208	WITHOUT_CLASSIFICATION	8.541097926282179E-8	TEST
unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999587271131	WITHOUT_CLASSIFICATION	4.127288680336275E-8	TEST
try only literal search	WITHOUT_CLASSIFICATION	0.9999996986829199	WITHOUT_CLASSIFICATION	3.0131708003111766E-7	TEST
attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999999336694136	WITHOUT_CLASSIFICATION	6.63305863094198E-8	TEST
otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999997542904071	WITHOUT_CLASSIFICATION	2.457095928496522E-7	TEST
allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999998780195605	WITHOUT_CLASSIFICATION	1.2198043941838696E-7	TEST
Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999981716405629	WITHOUT_CLASSIFICATION	1.8283594370530237E-6	TEST
check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999995772834	WITHOUT_CLASSIFICATION	4.2271655384718213E-10	TEST
if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999561296854	WITHOUT_CLASSIFICATION	4.3870314545935647E-8	TEST
end suffix iteration	WITHOUT_CLASSIFICATION	0.9999988614569698	WITHOUT_CLASSIFICATION	1.1385430302617122E-6	TEST
if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999986403943355	WITHOUT_CLASSIFICATION	1.3596056645325045E-6	TEST
if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.999998502158935	WITHOUT_CLASSIFICATION	1.4978410649844297E-6	TEST
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999998012550625	WITHOUT_CLASSIFICATION	1.9874493749185873E-6	TEST
we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999998012550625	WITHOUT_CLASSIFICATION	1.9874493749185873E-6	TEST
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999985300309564	WITHOUT_CLASSIFICATION	1.4699690435017634E-6	TEST
it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999985300309564	WITHOUT_CLASSIFICATION	1.4699690435017634E-6	TEST
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999901495809038	WITHOUT_CLASSIFICATION	9.850419096244176E-6	TEST
prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999901495809038	WITHOUT_CLASSIFICATION	9.850419096244176E-6	TEST
actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999997131381522	WITHOUT_CLASSIFICATION	2.868618478697551E-7	TEST
handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999999542595175	WITHOUT_CLASSIFICATION	4.5740482497392245E-8	TEST
if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999957818774883	WITHOUT_CLASSIFICATION	4.2181225117554445E-6	TEST
if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.999999121253673	WITHOUT_CLASSIFICATION	8.787463271459271E-7	TEST
otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999999631025104	WITHOUT_CLASSIFICATION	3.689748959430961E-8	TEST
Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.99995870903263	WITHOUT_CLASSIFICATION	4.129096737010582E-5	TEST
signed short, native	WITHOUT_CLASSIFICATION	0.999996612398488	WITHOUT_CLASSIFICATION	3.387601511891057E-6	TEST
If we fail to find as a normal Ruby script, we try to find as an extension, checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999933704722	WITHOUT_CLASSIFICATION	6.629527750754736E-9	TEST
write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.999999845183431	WITHOUT_CLASSIFICATION	1.5481656897443848E-7	TEST
if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.99999676232945	WITHOUT_CLASSIFICATION	3.2376705499773004E-6	TEST
Look in classpath next (we do not use File as a test since UNC names will match) Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999928754290137	WITHOUT_CLASSIFICATION	7.1245709862497595E-6	TEST
Directories and unavailable resources are not able to open a stream.	WITHOUT_CLASSIFICATION	0.9999977213745386	WITHOUT_CLASSIFICATION	2.2786254613165807E-6	TEST
Try to load from classpath without prefix. "A/b.rb" will not load as "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999549453339	WITHOUT_CLASSIFICATION	4.505466611490674E-8	TEST
object has instance vars and isn't a class, get a snapshot to be marshalled and output the ivar header here	WITHOUT_CLASSIFICATION	0.999999984324536	WITHOUT_CLASSIFICATION	1.5675463977011273E-8	TEST
flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999971576557306	WITHOUT_CLASSIFICATION	2.8423442693684367E-6	TEST
write('S');	WITHOUT_CLASSIFICATION	0.9998998495996133	WITHOUT_CLASSIFICATION	1.0015040038673116E-4	TEST
switch on the object's native type. This allows use-defined classes that have extended core native types to piggyback on their marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999816813699	WITHOUT_CLASSIFICATION	1.8318630042053764E-8	TEST
object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999985880667369	WITHOUT_CLASSIFICATION	1.4119332630416713E-6	TEST
We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999983429955418	WITHOUT_CLASSIFICATION	1.6570044582213988E-6	TEST
w_symbol	WITHOUT_CLASSIFICATION	0.9998704107030436	WITHOUT_CLASSIFICATION	1.2958929695636948E-4	TEST
w_unique	WITHOUT_CLASSIFICATION	0.9999397060844611	WITHOUT_CLASSIFICATION	6.0293915538980566E-5	TEST
call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999986221972462	WITHOUT_CLASSIFICATION	1.3778027537445143E-6	TEST
Major Minor	WITHOUT_CLASSIFICATION	0.9999797647359675	WITHOUT_CLASSIFICATION	2.0235264032424358E-5	TEST
any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999998201563379	WITHOUT_CLASSIFICATION	1.7984366199184066E-7	TEST
"hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.999993505758973	WITHOUT_CLASSIFICATION	6.4942410271089745E-6	TEST
All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999375797498	WITHOUT_CLASSIFICATION	6.24202501772259E-8	TEST
sic	WITHOUT_CLASSIFICATION	0.9998464068255529	WITHOUT_CLASSIFICATION	1.5359317444702772E-4	TEST
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996377013937	WITHOUT_CLASSIFICATION	3.6229860633593807E-7	TEST
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996377013937	WITHOUT_CLASSIFICATION	3.6229860633593807E-7	TEST
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996377013937	WITHOUT_CLASSIFICATION	3.6229860633593807E-7	TEST
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999856386111	WITHOUT_CLASSIFICATION	1.4361388858337555E-8	TEST
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999856386111	WITHOUT_CLASSIFICATION	1.4361388858337555E-8	TEST
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999881514804383	WITHOUT_CLASSIFICATION	1.1848519561760494E-5	TEST
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999881514804383	WITHOUT_CLASSIFICATION	1.1848519561760494E-5	TEST
If we are setting post arguments we can assume there are no pre or others	WITHOUT_CLASSIFICATION	0.9999992703456467	WITHOUT_CLASSIFICATION	7.296543532241364E-7	TEST
XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9993945230952996	WITHOUT_CLASSIFICATION	6.05476904700329E-4	TEST
unsigned short, native	WITHOUT_CLASSIFICATION	0.9999979615286627	WITHOUT_CLASSIFICATION	2.0384713371869247E-6	TEST
int, native long, native	WITHOUT_CLASSIFICATION	0.9999937406150019	WITHOUT_CLASSIFICATION	6.259384998081921E-6	TEST
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996377013937	WITHOUT_CLASSIFICATION	3.6229860633593807E-7	TEST
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996377013937	WITHOUT_CLASSIFICATION	3.6229860633593807E-7	TEST
if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996377013937	WITHOUT_CLASSIFICATION	3.6229860633593807E-7	TEST
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999856386111	WITHOUT_CLASSIFICATION	1.4361388858337555E-8	TEST
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999856386111	WITHOUT_CLASSIFICATION	1.4361388858337555E-8	TEST
copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999856386111	WITHOUT_CLASSIFICATION	1.4361388858337555E-8	TEST
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999881514804383	WITHOUT_CLASSIFICATION	1.1848519561760494E-5	TEST
rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999881514804383	WITHOUT_CLASSIFICATION	1.1848519561760494E-5	TEST
Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999997867273601	WITHOUT_CLASSIFICATION	2.1327263977739969E-7	TEST
Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999991005283837	WITHOUT_CLASSIFICATION	8.994716163894706E-7	TEST
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999772714762954	WITHOUT_CLASSIFICATION	2.272852370457263E-5	TEST
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999772714762954	WITHOUT_CLASSIFICATION	2.272852370457263E-5	TEST
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999772714762954	WITHOUT_CLASSIFICATION	2.272852370457263E-5	TEST
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999772714762954	WITHOUT_CLASSIFICATION	2.272852370457263E-5	TEST
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999772714762954	WITHOUT_CLASSIFICATION	2.272852370457263E-5	TEST
SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999915620783197	WITHOUT_CLASSIFICATION	8.437921680227688E-6	TEST
All braces pushed..	WITHOUT_CLASSIFICATION	0.9999958719291238	WITHOUT_CLASSIFICATION	4.128070876259698E-6	TEST
failed : try next recursion	WITHOUT_CLASSIFICATION	0.9999996147529718	WITHOUT_CLASSIFICATION	3.852470282866674E-7	TEST
leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999963455217502	WITHOUT_CLASSIFICATION	3.654478249699027E-6	TEST
are we at ''	WITHOUT_CLASSIFICATION	0.9999807006219624	WITHOUT_CLASSIFICATION	1.9299378037591448E-5	TEST
No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999690626952998	WITHOUT_CLASSIFICATION	3.0937304700149415E-5	TEST
not enough bytes	WITHOUT_CLASSIFICATION	0.99996137286437	WITHOUT_CLASSIFICATION	3.8627135629841046E-5	TEST
Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999987065271411	WITHOUT_CLASSIFICATION	1.2934728589600278E-6	TEST
skip inner braces	WITHOUT_CLASSIFICATION	0.9999964215147251	WITHOUT_CLASSIFICATION	3.5784852748739494E-6	TEST
Process {}'s (example: Dir.glob("{jruby,jython}/README")	WITHOUT_CLASSIFICATION	0.9999986380761164	WITHOUT_CLASSIFICATION	1.361923883520637E-6	TEST
complete, according to Posix.2	WITHOUT_CLASSIFICATION	0.9999996767872666	WITHOUT_CLASSIFICATION	3.232127333722391E-7	TEST
Only accept an open brace if there is a close	WITHOUT_CLASSIFICATION	0.9999958854937315	WITHOUT_CLASSIFICATION	4.114506268530779E-6	TEST
brace to match it. Bracket expressions must be	WITHOUT_CLASSIFICATION	0.9999922685804513	WITHOUT_CLASSIFICATION	7.731419548676793E-6	TEST
index of left-most brace index of right-most brace	WITHOUT_CLASSIFICATION	0.999999673504338	WITHOUT_CLASSIFICATION	3.2649566198620655E-7	TEST
Length check is a hack. We should not be reeiving "" as a filename ever.	WITHOUT_CLASSIFICATION	0.9999951667025585	WITHOUT_CLASSIFICATION	4.833297441475479E-6	TEST
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999040517782174	WITHOUT_CLASSIFICATION	9.59482217825911E-5	TEST
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999040517782174	WITHOUT_CLASSIFICATION	9.59482217825911E-5	TEST
NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999040517782174	WITHOUT_CLASSIFICATION	9.59482217825911E-5	TEST
Pickaxe says @ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9985487277002522	WITHOUT_CLASSIFICATION	0.0014512722997477919	TEST
Pickaxe says @@ must be followed by a name character, but MRI does not require this.	WITHOUT_CLASSIFICATION	0.9985492014462951	WITHOUT_CLASSIFICATION	0.001450798553704803	TEST
SimpleSampler	WITHOUT_CLASSIFICATION	0.9999723426723726	WITHOUT_CLASSIFICATION	2.7657327627368347E-5	TEST
convert into longs, returning unsigned 64-bit values as signed longs ( num2long raises a RangeError on values > Long.MAX_VALUE )	WITHOUT_CLASSIFICATION	0.9999999744468621	WITHOUT_CLASSIFICATION	2.55531380049813E-8	TEST
b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999975628771546	WITHOUT_CLASSIFICATION	2.4371228453660437E-6	TEST
single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999992562795508	WITHOUT_CLASSIFICATION	7.437204492366678E-7	TEST
single precision, big-endian	WITHOUT_CLASSIFICATION	0.999998780312281	WITHOUT_CLASSIFICATION	1.2196877190473023E-6	TEST
single precision, native	WITHOUT_CLASSIFICATION	0.9999972750521402	WITHOUT_CLASSIFICATION	2.724947859854342E-6	TEST
single precision, native single precision, native	WITHOUT_CLASSIFICATION	0.9999952431981853	WITHOUT_CLASSIFICATION	4.756801814742627E-6	TEST
double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999996879650772	WITHOUT_CLASSIFICATION	3.120349227911585E-7	TEST
double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999994516364098	WITHOUT_CLASSIFICATION	5.483635903254402E-7	TEST
double precision, native	WITHOUT_CLASSIFICATION	0.999999290326322	WITHOUT_CLASSIFICATION	7.096736780027184E-7	TEST
signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999993432695045	WITHOUT_CLASSIFICATION	6.567304955537857E-7	TEST
signed char	WITHOUT_CLASSIFICATION	0.9999973963928876	WITHOUT_CLASSIFICATION	2.6036071123842306E-6	TEST
unsigned char	WITHOUT_CLASSIFICATION	0.9999991008247535	WITHOUT_CLASSIFICATION	8.991752465670833E-7	TEST
long, little-endian	WITHOUT_CLASSIFICATION	0.9999993096809195	WITHOUT_CLASSIFICATION	6.90319080386944E-7	TEST
long, big-endian	WITHOUT_CLASSIFICATION	0.9999970514832471	WITHOUT_CLASSIFICATION	2.948516752816192E-6	TEST
unsigned int, native	WITHOUT_CLASSIFICATION	0.9999985198177945	WITHOUT_CLASSIFICATION	1.48018220550163E-6	TEST
int, native	WITHOUT_CLASSIFICATION	0.9999920896976667	WITHOUT_CLASSIFICATION	7.910302333379318E-6	TEST
64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999980179266869	WITHOUT_CLASSIFICATION	1.9820733132186807E-6	TEST
How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999970484880909	WITHOUT_CLASSIFICATION	2.9515119091349903E-6	TEST
See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999959355624739	WITHOUT_CLASSIFICATION	4.064437526113842E-6	TEST
Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999995342858944	WITHOUT_CLASSIFICATION	4.6571410570541176E-7	TEST
Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999994022687985	WITHOUT_CLASSIFICATION	5.97731201493002E-7	TEST
obtain a	WITHOUT_CLASSIFICATION	0.9999968663157455	WITHOUT_CLASSIFICATION	3.1336842545238213E-6	TEST
obtain b	WITHOUT_CLASSIFICATION	0.9999980142232837	WITHOUT_CLASSIFICATION	1.9857767162248347E-6	TEST
obtain c	WITHOUT_CLASSIFICATION	0.9999981988081497	WITHOUT_CLASSIFICATION	1.8011918504335215E-6	TEST
obtain d	WITHOUT_CLASSIFICATION	0.9999985789861221	WITHOUT_CLASSIFICATION	1.4210138778658192E-6	TEST
encode.limit() -	WITHOUT_CLASSIFICATION	0.9999987535540561	WITHOUT_CLASSIFICATION	1.2464459438406873E-6	TEST
1	WITHOUT_CLASSIFICATION	0.9994108985080503	WITHOUT_CLASSIFICATION	5.891014919497315E-4	TEST
2	WITHOUT_CLASSIFICATION	0.9991170689080144	WITHOUT_CLASSIFICATION	8.829310919855089E-4	TEST
3	WITHOUT_CLASSIFICATION	0.9988165529383647	WITHOUT_CLASSIFICATION	0.0011834470616353396	TEST
4	WITHOUT_CLASSIFICATION	0.9992412040067543	WITHOUT_CLASSIFICATION	7.587959932456754E-4	TEST
5	WITHOUT_CLASSIFICATION	0.99922160025412	WITHOUT_CLASSIFICATION	7.78399745879994E-4	TEST
6	WITHOUT_CLASSIFICATION	0.9992305735108974	WITHOUT_CLASSIFICATION	7.69426489102723E-4	TEST
7	WITHOUT_CLASSIFICATION	0.9992419444109583	WITHOUT_CLASSIFICATION	7.580555890417759E-4	TEST
Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999997472348499	WITHOUT_CLASSIFICATION	2.527651501088843E-7	TEST
Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999994056462894	WITHOUT_CLASSIFICATION	5.943537105636442E-7	TEST
In case when the number of occurences is explicitly specified, we have to read up the remaining garbage after the '\0' to satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999995762714431	WITHOUT_CLASSIFICATION	4.2372855688009397E-7	TEST
normal exit, this should be faster than a test at each iterations for string with more than about 40 char	WITHOUT_CLASSIFICATION	0.6433922055371358	TEST	0.3566077944628641	WITHOUT_CLASSIFICATION
We encountered '\0' when were reading the buffer above, increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999707257469533	WITHOUT_CLASSIFICATION	2.9274253046689256E-5	TEST
MRI behavior: Contrary to what seems to be logical, when '' is given, MRI calculates the distance to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999999535108983	WITHOUT_CLASSIFICATION	4.6489101663116726E-8	TEST
Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999737268688338	WITHOUT_CLASSIFICATION	2.627313116620332E-5	TEST
'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999993184271599	WITHOUT_CLASSIFICATION	6.815728401178113E-7	TEST
if the low bit is set set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999667518102214	WITHOUT_CLASSIFICATION	3.3248189778603826E-5	TEST
if the index is not a multiple of 8, we are not on a byte boundary shift the byte	WITHOUT_CLASSIFICATION	0.9999991681722661	WITHOUT_CLASSIFICATION	8.318277338268514E-7	TEST
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999891308867876	WITHOUT_CLASSIFICATION	1.0869113212397521E-5	TEST
if the length is not a multiple of 8 we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999891308867876	WITHOUT_CLASSIFICATION	1.0869113212397521E-5	TEST
do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999979307753837	WITHOUT_CLASSIFICATION	2.069224616342018E-6	TEST
we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.999999928008273	WITHOUT_CLASSIFICATION	7.199172692967597E-8	TEST
if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.999999570413327	WITHOUT_CLASSIFICATION	4.2958667302125605E-7	TEST
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9995456177333991	WITHOUT_CLASSIFICATION	4.543822666009519E-4	TEST
we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999343283043093	WITHOUT_CLASSIFICATION	6.567169569068076E-5	TEST
populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999974990503365	WITHOUT_CLASSIFICATION	2.5009496633494675E-6	TEST
are we recursing?	WITHOUT_CLASSIFICATION	0.9999969119216919	WITHOUT_CLASSIFICATION	3.088078308014626E-6	TEST
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997251609142	WITHOUT_CLASSIFICATION	2.7483908582541466E-7	TEST
default PidGetter	WITHOUT_CLASSIFICATION	0.9999995235305075	WITHOUT_CLASSIFICATION	4.7646949248094016E-7	TEST
ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999997413887677	WITHOUT_CLASSIFICATION	2.5861123234663027E-7	TEST
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999999713803552	WITHOUT_CLASSIFICATION	2.861964479477798E-7	TEST
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999999713803552	WITHOUT_CLASSIFICATION	2.861964479477798E-7	TEST
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999999713803552	WITHOUT_CLASSIFICATION	2.861964479477798E-7	TEST
ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999999713803552	WITHOUT_CLASSIFICATION	2.861964479477798E-7	TEST
try both	WITHOUT_CLASSIFICATION	0.9999940837616155	WITHOUT_CLASSIFICATION	5.91623838453523E-6	TEST
just unix	WITHOUT_CLASSIFICATION	0.9999948324829699	WITHOUT_CLASSIFICATION	5.167517030083516E-6	TEST
just windows	WITHOUT_CLASSIFICATION	0.9999926170640644	WITHOUT_CLASSIFICATION	7.382935935622013E-6	TEST
neither	WITHOUT_CLASSIFICATION	0.9999728882307929	WITHOUT_CLASSIFICATION	2.7111769207034082E-5	TEST
CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999751665356525	WITHOUT_CLASSIFICATION	2.483346434742025E-5	TEST
single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999996292455431	WITHOUT_CLASSIFICATION	3.7075445683954494E-7	TEST
direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999893977245726	WITHOUT_CLASSIFICATION	1.0602275427304827E-5	TEST
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999994262922773	WITHOUT_CLASSIFICATION	5.737077227655761E-7	TEST
break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999994262922773	WITHOUT_CLASSIFICATION	5.737077227655761E-7	TEST
close process output See JRUBY-3405; hooking up to parent process stdin caused problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999780068147	WITHOUT_CLASSIFICATION	2.199318529194829E-8	TEST
ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999991967341072	WITHOUT_CLASSIFICATION	8.03265892792691E-7	TEST
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9997097694628463	WITHOUT_CLASSIFICATION	2.9023053715368567E-4	TEST
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999998766799727	WITHOUT_CLASSIFICATION	1.2332002739488458E-7	TEST
popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999998766799727	WITHOUT_CLASSIFICATION	1.2332002739488458E-7	TEST
popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999992612669197	WITHOUT_CLASSIFICATION	7.387330802975488E-7	TEST
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999973360276939	WITHOUT_CLASSIFICATION	2.6639723060117762E-6	TEST
no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999973360276939	WITHOUT_CLASSIFICATION	2.6639723060117762E-6	TEST
execute command with sh -c this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.999947074622635	WITHOUT_CLASSIFICATION	5.2925377364990404E-5	TEST
We need to close the out, since some processes would just wait for the stream to be closed before they process its content, and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999344855468557	WITHOUT_CLASSIFICATION	6.55144531443396E-5	TEST
we only close out if it's the slave stream, to avoid closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999998476462207	WITHOUT_CLASSIFICATION	1.5235377921855145E-7	TEST
The assumption here is that the 'in' stream provides proper available() support. If available() always returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999877398713395	WITHOUT_CLASSIFICATION	1.226012866041908E-5	TEST
Force t3 to quit, just in case if it's stuck. Note: On some platforms, even interrupt might not have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999989982497115	WITHOUT_CLASSIFICATION	1.0017502884577815E-6	TEST
Check for special shell characters [<>|] at the beginning and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999839315028	WITHOUT_CLASSIFICATION	1.606849713425582E-8	TEST
Note: this method produces meaningful results only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999521338557376	WITHOUT_CLASSIFICATION	4.786614426245457E-5	TEST
sequential	WITHOUT_CLASSIFICATION	0.9999975802858598	WITHOUT_CLASSIFICATION	2.4197141402225638E-6	TEST
reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999996655669581	WITHOUT_CLASSIFICATION	3.344330419055726E-7	TEST
do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.99999595451657	WITHOUT_CLASSIFICATION	4.045483430015292E-6	TEST
if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999784005881948	WITHOUT_CLASSIFICATION	2.1599411805278037E-5	TEST
SignalFacade	WITHOUT_CLASSIFICATION	0.9999798917371465	WITHOUT_CLASSIFICATION	2.0108262853515265E-5	TEST
this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.977464239635416	WITHOUT_CLASSIFICATION	0.022535760364584052	TEST
this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9746386701788352	WITHOUT_CLASSIFICATION	0.025361329821164826	TEST
basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999998639227405	WITHOUT_CLASSIFICATION	1.3607725949652086E-7	TEST
not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999996527697094	WITHOUT_CLASSIFICATION	3.4723029066603557E-7	TEST
Args	WITHOUT_CLASSIFICATION	0.9998408537781894	WITHOUT_CLASSIFICATION	1.5914622181049232E-4	TEST
static methods only	WITHOUT_CLASSIFICATION	0.9999992884910295	WITHOUT_CLASSIFICATION	7.115089705005668E-7	TEST
System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999997564566967	WITHOUT_CLASSIFICATION	2.435433033611075E-7	TEST
MRI 1.8.6 behavior: null byte after '%' leads to "%" string. Null byte in other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999999921665885	WITHOUT_CLASSIFICATION	7.833411545878519E-9	TEST
last index (+1) accessed by next() last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999950316208538	WITHOUT_CLASSIFICATION	4.968379146270472E-6	TEST
Special form of sprintf that returns a RubyString and handles tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999994716660602	WITHOUT_CLASSIFICATION	5.283339397564356E-7	TEST
Special form of sprintf that returns a RubyString and handles tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999988456044572	WITHOUT_CLASSIFICATION	1.154395542789523E-6	TEST
MRI doesn't flag it as an error if width is given multiple times as a number (but it does for )	WITHOUT_CLASSIFICATION	0.9998310419295192	WITHOUT_CLASSIFICATION	1.689580704808877E-4	TEST
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9999712130598923	WITHOUT_CLASSIFICATION	2.878694010766427E-5	TEST
MRI 1.8.5-p12 doesn't support 1-char strings, but YARV 0.4.1 does. I don't think it hurts to include this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999707427694355	WITHOUT_CLASSIFICATION	2.9257230564395E-5	TEST
'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999989829456287	WITHOUT_CLASSIFICATION	1.0170543711953073E-6	TEST
'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999974161482342	WITHOUT_CLASSIFICATION	2.583851765800289E-6	TEST
We depart here from strict adherence to MRI code, as MRI uses C-sprintf, in part, to format numeric output, while we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.999999991087781	WITHOUT_CLASSIFICATION	8.912219031343234E-9	TEST
skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999977414795111	WITHOUT_CLASSIFICATION	2.2585204887163805E-6	TEST
..	WITHOUT_CLASSIFICATION	0.9991310624797645	WITHOUT_CLASSIFICATION	8.689375202355231E-4	TEST
the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.999998620445519	WITHOUT_CLASSIFICATION	1.3795544809858648E-6	TEST
FIXME: what is correct 'recv' argument? (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9996850624553558	WITHOUT_CLASSIFICATION	3.1493754464418E-4	TEST
gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999947715508545	WITHOUT_CLASSIFICATION	5.228449145488726E-6	TEST
OK, we now have the significand in digits[0...nDigits] and the exponent in exponent. We're ready to format.	WITHOUT_CLASSIFICATION	0.9999999476349406	WITHOUT_CLASSIFICATION	5.2365059413144524E-8	TEST
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999698954502985	WITHOUT_CLASSIFICATION	3.010454970158701E-5	TEST
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9999824188744647	WITHOUT_CLASSIFICATION	1.7581125535313508E-5	TEST
System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.999999746194156	WITHOUT_CLASSIFICATION	2.5380584397563894E-7	TEST
System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999964283524901	WITHOUT_CLASSIFICATION	3.5716475099172504E-6	TEST
intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999698954502985	WITHOUT_CLASSIFICATION	3.010454970158701E-5	TEST
intDigits = 1;	WITHOUT_CLASSIFICATION	0.9999824188744647	WITHOUT_CLASSIFICATION	1.7581125535313508E-5	TEST
precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.999998387164561	WITHOUT_CLASSIFICATION	1.6128354390703884E-6	TEST
deal with length/width	WITHOUT_CLASSIFICATION	0.9999760386300679	WITHOUT_CLASSIFICATION	2.3961369932051534E-5	TEST
deal with length/width	WITHOUT_CLASSIFICATION	0.9999760386300679	WITHOUT_CLASSIFICATION	2.3961369932051534E-5	TEST
first digit is always printed	WITHOUT_CLASSIFICATION	0.999998912439114	WITHOUT_CLASSIFICATION	1.087560886097125E-6	TEST
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999997369070717	WITHOUT_CLASSIFICATION	2.6309292829789344E-6	TEST
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999729060400285	WITHOUT_CLASSIFICATION	2.7093959971395358E-5	TEST
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999743765292229	WITHOUT_CLASSIFICATION	2.562347077707035E-5	TEST
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.99998465046725	WITHOUT_CLASSIFICATION	1.53495327499839E-5	TEST
MRI behavior: In this mode trailing zeroes are removed: 1.500E+05 -> 1.5E+05	WITHOUT_CLASSIFICATION	0.9998838861984136	WITHOUT_CLASSIFICATION	1.1611380158635176E-4	TEST
'.' is printed	WITHOUT_CLASSIFICATION	0.9999915342861907	WITHOUT_CLASSIFICATION	8.465713809214217E-6	TEST
all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999995657007257	WITHOUT_CLASSIFICATION	4.342992743583457E-7	TEST
now some data...	WITHOUT_CLASSIFICATION	0.9999953601753861	WITHOUT_CLASSIFICATION	4.63982461385395E-6	TEST
'.'	WITHOUT_CLASSIFICATION	0.999070985796846	WITHOUT_CLASSIFICATION	9.290142031539341E-4	TEST
decimal form, like (but not just like!) 'f'	WITHOUT_CLASSIFICATION	0.9999996241226977	WITHOUT_CLASSIFICATION	3.758773023216024E-7	TEST
digits array shifted, update all	WITHOUT_CLASSIFICATION	0.999998804378964	WITHOUT_CLASSIFICATION	1.195621035908351E-6	TEST
will have a trailing '.' g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999943981863744	WITHOUT_CLASSIFICATION	5.601813625549061E-6	TEST
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999995288324518	WITHOUT_CLASSIFICATION	4.711675481226201E-7	TEST
s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999995288324518	WITHOUT_CLASSIFICATION	4.711675481226201E-7	TEST
always need at least a 0	WITHOUT_CLASSIFICATION	0.9998113539114665	WITHOUT_CLASSIFICATION	1.8864608853348262E-4	TEST
always need at least a 0	WITHOUT_CLASSIFICATION	0.9998113539114665	WITHOUT_CLASSIFICATION	1.8864608853348262E-4	TEST
digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999995831362932	WITHOUT_CLASSIFICATION	4.1686370674752207E-7	TEST
(1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999926566862842	WITHOUT_CLASSIFICATION	7.343313715730195E-6	TEST
(1|intlen)	WITHOUT_CLASSIFICATION	0.99999327936328	WITHOUT_CLASSIFICATION	6.720636720056509E-6	TEST
will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999930923213175	WITHOUT_CLASSIFICATION	6.907678682497652E-6	TEST
fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999741576998065	WITHOUT_CLASSIFICATION	2.5842300193524103E-5	TEST
System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999979364890615	WITHOUT_CLASSIFICATION	2.0635109385199545E-6	TEST
5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999729060400285	WITHOUT_CLASSIFICATION	2.7093959971395358E-5	TEST
4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999743765292229	WITHOUT_CLASSIFICATION	2.562347077707035E-5	TEST
now some data...	WITHOUT_CLASSIFICATION	0.9999953601753861	WITHOUT_CLASSIFICATION	4.63982461385395E-6	TEST
'.'	WITHOUT_CLASSIFICATION	0.999070985796846	WITHOUT_CLASSIFICATION	9.290142031539341E-4	TEST
equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999998430684321	WITHOUT_CLASSIFICATION	1.5693156792565334E-7	TEST
'.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999992723300092	WITHOUT_CLASSIFICATION	7.276699907306093E-7	TEST
\v	WITHOUT_CLASSIFICATION	0.9990980835398958	WITHOUT_CLASSIFICATION	9.019164601042283E-4	TEST
dangling '%' char	WITHOUT_CLASSIFICATION	0.9999858192354192	WITHOUT_CLASSIFICATION	1.4180764580810085E-5	TEST
main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999991560608673	WITHOUT_CLASSIFICATION	8.4393913265787E-7	TEST
debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999848405378334	WITHOUT_CLASSIFICATION	1.5159462166465109E-5	TEST
MRI rounds up on nnn5nnn, but not nnn5 -- except for when they do	WITHOUT_CLASSIFICATION	0.9999966350722391	WITHOUT_CLASSIFICATION	3.3649277609107168E-6	TEST
"%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9988486299405983	WITHOUT_CLASSIFICATION	0.0011513700594016978	TEST
limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999964186611753	WITHOUT_CLASSIFICATION	3.5813388247124684E-6	TEST
negative values	WITHOUT_CLASSIFICATION	0.9999968337217089	WITHOUT_CLASSIFICATION	3.166278291206362E-6	TEST
calculation for negatives when %u specified for values >= Integer.MIN_VALUE 2, MRI uses (the equivalent of) long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val for smaller values, BigInteger math is required to conform to MRI's result.	WITHOUT_CLASSIFICATION	0.999999980580071	WITHOUT_CLASSIFICATION	1.9419928891019317E-8	TEST
relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999675257144591	WITHOUT_CLASSIFICATION	3.247428554092716E-5	TEST
no such luck...	WITHOUT_CLASSIFICATION	0.9999942854076221	WITHOUT_CLASSIFICATION	5.714592377871159E-6	TEST
ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999798666671604	WITHOUT_CLASSIFICATION	2.0133332839656134E-5	TEST
go through negated powers of 32 until we find one small enough	WITHOUT_CLASSIFICATION	0.9999988821933922	WITHOUT_CLASSIFICATION	1.1178066078367443E-6	TEST
add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999874482443584	WITHOUT_CLASSIFICATION	1.2551755641685282E-5	TEST
constant vector a	WITHOUT_CLASSIFICATION	0.99999898953847	WITHOUT_CLASSIFICATION	1.0104615299563002E-6	TEST
most significant w-r bits	WITHOUT_CLASSIFICATION	0.9999980149175813	WITHOUT_CLASSIFICATION	1.9850824185998596E-6	TEST
least significant r bits	WITHOUT_CLASSIFICATION	0.9999991827198224	WITHOUT_CLASSIFICATION	8.172801776916668E-7	TEST
state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999733441624037	WITHOUT_CLASSIFICATION	2.665583759633869E-5	TEST
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999846209828722	WITHOUT_CLASSIFICATION	1.5379017127699883E-5	TEST
state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999846209828722	WITHOUT_CLASSIFICATION	1.5379017127699883E-5	TEST
MSB is 1; assuring non-zero initial array	WITHOUT_CLASSIFICATION	0.9999993815841579	WITHOUT_CLASSIFICATION	6.184158422045211E-7	TEST
Tempering	WITHOUT_CLASSIFICATION	0.9999450613058004	WITHOUT_CLASSIFICATION	5.4938694199643274E-5	TEST
MRI behavior: Week values are monotonous. So, weeks that effectively belong to previous year, will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999997030624864	WITHOUT_CLASSIFICATION	2.969375135824739E-7	TEST
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999994817909557	WITHOUT_CLASSIFICATION	5.182090444375183E-7	TEST
System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999994817909557	WITHOUT_CLASSIFICATION	5.182090444375183E-7	TEST
\v	WITHOUT_CLASSIFICATION	0.9990980835398958	WITHOUT_CLASSIFICATION	9.019164601042283E-4	TEST
System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999876253565324	WITHOUT_CLASSIFICATION	1.2374643467660783E-5	TEST
System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.999996912489723	WITHOUT_CLASSIFICATION	3.0875102771204176E-6	TEST
System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999995424693198	WITHOUT_CLASSIFICATION	4.5753068034473195E-7	TEST
System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.999999636180932	WITHOUT_CLASSIFICATION	3.638190679680101E-7	TEST
System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999997561094751	WITHOUT_CLASSIFICATION	2.4389052485142533E-7	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999986711229256	WITHOUT_CLASSIFICATION	1.3288770743073298E-6	TEST
no number	WITHOUT_CLASSIFICATION	0.999995160673304	WITHOUT_CLASSIFICATION	4.839326696063367E-6	TEST
trailing garbage	WITHOUT_CLASSIFICATION	0.9999852985705184	WITHOUT_CLASSIFICATION	1.4701429481550257E-5	TEST
System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999965051872337	WITHOUT_CLASSIFICATION	3.494812766233961E-6	TEST
it was not found at all!	WITHOUT_CLASSIFICATION	0.9999952645612841	WITHOUT_CLASSIFICATION	4.735438715968549E-6	TEST
can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999989308263845	WITHOUT_CLASSIFICATION	1.0691736155063378E-6	TEST
we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999998626587822	WITHOUT_CLASSIFICATION	1.3734121781346374E-7	TEST
goto next bucket	WITHOUT_CLASSIFICATION	0.9999978619453833	WITHOUT_CLASSIFICATION	2.1380546166704313E-6	TEST
we reached the end	WITHOUT_CLASSIFICATION	0.9999987784952511	WITHOUT_CLASSIFICATION	1.2215047488933002E-6	TEST
entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999998904589025	WITHOUT_CLASSIFICATION	1.0954109740927005E-7	TEST
states	WITHOUT_CLASSIFICATION	0.9998929601777049	WITHOUT_CLASSIFICATION	1.0703982229507489E-4	TEST
remove leading whitespace (includes _ for lax) get sign, if any	WITHOUT_CLASSIFICATION	0.9999991932860093	WITHOUT_CLASSIFICATION	8.067139907378766E-7	TEST
optimistic pass - calculate value as digits are processed digits - lax rules decimal digits - lax rules exponent sign/digits - lax rules digits - strict rules decimal digits - strict rules exponent sign/digits - strict rules complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999995824108038	WITHOUT_CLASSIFICATION	4.175891961248034E-7	TEST
fields used for direct (optimistic) calculation number of significant digits, updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start (-1 -> no decimal) significand, updated as parsed exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999903143301	WITHOUT_CLASSIFICATION	9.685669919080055E-9	TEST
drop through for sign	WITHOUT_CLASSIFICATION	0.9999884137043019	WITHOUT_CLASSIFICATION	1.1586295698140392E-5	TEST
switch will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999992267003645	WITHOUT_CLASSIFICATION	7.732996356572719E-7	TEST
drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999847036172289	WITHOUT_CLASSIFICATION	1.5296382771111354E-5	TEST
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999400714746	WITHOUT_CLASSIFICATION	5.992852533765018E-8	TEST
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999984229620091	WITHOUT_CLASSIFICATION	1.5770379909647782E-6	TEST
no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999694182623	WITHOUT_CLASSIFICATION	3.058173781062611E-8	TEST
ignore leading zeroes	WITHOUT_CLASSIFICATION	0.999994510014584	WITHOUT_CLASSIFICATION	5.489985416128943E-6	TEST
just save a count of zeroes for now; if no digit ends up following them, they'll be applied to the exponent rather than the significand (and our max length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999933836683	WITHOUT_CLASSIFICATION	6.616331618786726E-9	TEST
ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999992317335533	WITHOUT_CLASSIFICATION	7.682664466686626E-7	TEST
else catch oversize below	WITHOUT_CLASSIFICATION	0.999998543903819	WITHOUT_CLASSIFICATION	1.4560961809518478E-6	TEST
else catch oversize below	WITHOUT_CLASSIFICATION	0.999998543903819	WITHOUT_CLASSIFICATION	1.4560961809518478E-6	TEST
oh, well, it was worth a try. go let Double/FloatingDecimal handle it	WITHOUT_CLASSIFICATION	0.9999997031343569	WITHOUT_CLASSIFICATION	2.968656429721934E-7	TEST
ignore switch	WITHOUT_CLASSIFICATION	0.9999993521306136	WITHOUT_CLASSIFICATION	6.478693863170714E-7	TEST
ignore switch	WITHOUT_CLASSIFICATION	0.9999993521306136	WITHOUT_CLASSIFICATION	6.478693863170714E-7	TEST
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998563609508	WITHOUT_CLASSIFICATION	1.4363904923018374E-7	TEST
end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998563609508	WITHOUT_CLASSIFICATION	1.4363904923018374E-7	TEST
switch for	WITHOUT_CLASSIFICATION	0.999997750217872	WITHOUT_CLASSIFICATION	2.2497821279564346E-6	TEST
first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999995579869172	WITHOUT_CLASSIFICATION	4.420130826877276E-7	TEST
no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999614985717	WITHOUT_CLASSIFICATION	3.850142826569006E-8	TEST
switch if	WITHOUT_CLASSIFICATION	0.9999904781432132	WITHOUT_CLASSIFICATION	9.521856786767377E-6	TEST
difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999230769389	WITHOUT_CLASSIFICATION	7.692306118940094E-8	TEST
block	WITHOUT_CLASSIFICATION	0.9998828455984701	WITHOUT_CLASSIFICATION	1.1715440152987617E-4	TEST
block	WITHOUT_CLASSIFICATION	0.9998828455984701	WITHOUT_CLASSIFICATION	1.1715440152987617E-4	TEST
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999400714746	WITHOUT_CLASSIFICATION	5.992852533765018E-8	TEST
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999400714746	WITHOUT_CLASSIFICATION	5.992852533765018E-8	TEST
first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999400714746	WITHOUT_CLASSIFICATION	5.992852533765018E-8	TEST
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999984229620091	WITHOUT_CLASSIFICATION	1.5770379909647782E-6	TEST
else catch oversize below	WITHOUT_CLASSIFICATION	0.999998543903819	WITHOUT_CLASSIFICATION	1.4560961809518478E-6	TEST
else catch oversize below	WITHOUT_CLASSIFICATION	0.999998543903819	WITHOUT_CLASSIFICATION	1.4560961809518478E-6	TEST
else catch oversize below	WITHOUT_CLASSIFICATION	0.999998543903819	WITHOUT_CLASSIFICATION	1.4560961809518478E-6	TEST
switch for	WITHOUT_CLASSIFICATION	0.999997750217872	WITHOUT_CLASSIFICATION	2.2497821279564346E-6	TEST
switch for	WITHOUT_CLASSIFICATION	0.999997750217872	WITHOUT_CLASSIFICATION	2.2497821279564346E-6	TEST
switch for	WITHOUT_CLASSIFICATION	0.999997750217872	WITHOUT_CLASSIFICATION	2.2497821279564346E-6	TEST
switch if	WITHOUT_CLASSIFICATION	0.9999904781432132	WITHOUT_CLASSIFICATION	9.521856786767377E-6	TEST
switch if	WITHOUT_CLASSIFICATION	0.9999904781432132	WITHOUT_CLASSIFICATION	9.521856786767377E-6	TEST
lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999999436675969	WITHOUT_CLASSIFICATION	5.6332403160841204E-8	TEST
switch for no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999989286106159	WITHOUT_CLASSIFICATION	1.0713893840676411E-6	TEST
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999996445105197	WITHOUT_CLASSIFICATION	3.554894802994069E-7	TEST
TODO: it's not clear to me why, in FloatingDecimal, the "slop" calculation performed above for positive exponents isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999573525587935	WITHOUT_CLASSIFICATION	4.26474412064588E-5	TEST
no digits, error	WITHOUT_CLASSIFICATION	0.9999995326676904	WITHOUT_CLASSIFICATION	4.6733230969572364E-7	TEST
too big for us	WITHOUT_CLASSIFICATION	0.999997463636957	WITHOUT_CLASSIFICATION	2.536363043086106E-6	TEST
too big for us	WITHOUT_CLASSIFICATION	0.999997463636957	WITHOUT_CLASSIFICATION	2.536363043086106E-6	TEST
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999991301563215	WITHOUT_CLASSIFICATION	8.698436785327422E-7	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999995174970484	WITHOUT_CLASSIFICATION	4.825029515278687E-7	TEST
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999995174970484	WITHOUT_CLASSIFICATION	4.825029515278687E-7	TEST
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999995174970484	WITHOUT_CLASSIFICATION	4.825029515278687E-7	TEST
first char must be digit	WITHOUT_CLASSIFICATION	0.9999995185130626	WITHOUT_CLASSIFICATION	4.814869374205946E-7	TEST
no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999988840031053	WITHOUT_CLASSIFICATION	1.1159968947641353E-6	TEST
ignore leading zeroes switch	WITHOUT_CLASSIFICATION	0.9999984229620091	WITHOUT_CLASSIFICATION	1.5770379909647782E-6	TEST
switch for	WITHOUT_CLASSIFICATION	0.999997750217872	WITHOUT_CLASSIFICATION	2.2497821279564346E-6	TEST
switch for	WITHOUT_CLASSIFICATION	0.999997750217872	WITHOUT_CLASSIFICATION	2.2497821279564346E-6	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999995174970484	WITHOUT_CLASSIFICATION	4.825029515278687E-7	TEST
must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999991301563215	WITHOUT_CLASSIFICATION	8.698436785327422E-7	TEST
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9999955474366505	WITHOUT_CLASSIFICATION	4.452563349481607E-6	TEST
switch while	WITHOUT_CLASSIFICATION	0.9999881937092704	WITHOUT_CLASSIFICATION	1.1806290729530038E-5	TEST
All the positive powers of 10 that can be represented exactly in double/float. (From sun.misc.FloatingDecimal.java)	WITHOUT_CLASSIFICATION	0.999999907103563	WITHOUT_CLASSIFICATION	9.289643692430745E-8	TEST
Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.999999149366575	WITHOUT_CLASSIFICATION	8.50633425024824E-7	TEST
rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.999884783595183	WITHOUT_CLASSIFICATION	1.1521640481715368E-4	TEST
rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999573143137717	WITHOUT_CLASSIFICATION	4.268568622840112E-5	TEST
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999929706222459	WITHOUT_CLASSIFICATION	7.029377754092067E-6	TEST
arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999948587277881	WITHOUT_CLASSIFICATION	5.141272211811967E-6	TEST
NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999990720339822	WITHOUT_CLASSIFICATION	9.279660177243479E-7	TEST
Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999987488390062	WITHOUT_CLASSIFICATION	1.2511609938508546E-6	TEST
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.999998943939324	WITHOUT_CLASSIFICATION	1.0560606759166816E-6	TEST
strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.999995480340038	WITHOUT_CLASSIFICATION	4.519659961994066E-6	TEST
Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999992103361958	WITHOUT_CLASSIFICATION	7.896638041581777E-7	TEST
Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999854418355544	WITHOUT_CLASSIFICATION	1.4558164445654619E-5	TEST
Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999883314345263	WITHOUT_CLASSIFICATION	1.1668565473807159E-5	TEST
next entry to return current slot current entry	WITHOUT_CLASSIFICATION	0.9999998670611483	WITHOUT_CLASSIFICATION	1.3293885169383802E-7	TEST
advance to first entry	WITHOUT_CLASSIFICATION	0.9999999756313904	WITHOUT_CLASSIFICATION	2.4368609630123975E-8	TEST
The reason why we need the stream is to be able to invoke available() on it. STDIN in Java is non-interruptible, non-selectable, and attempt to read on such stream might lead to thread being blocked without any way to unblock it. That's where available() comes it, so at least we could check whether anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999887513352862	WITHOUT_CLASSIFICATION	1.124866471388501E-5	TEST
package-protected	WITHOUT_CLASSIFICATION	0.999994027658143	WITHOUT_CLASSIFICATION	5.972341856962509E-6	TEST
raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999712634257	WITHOUT_CLASSIFICATION	2.873657438174178E-8	TEST
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.999985574116131	WITHOUT_CLASSIFICATION	1.4425883868974304E-5	TEST
if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999974468475864	WITHOUT_CLASSIFICATION	2.5531524135172975E-6	TEST
if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999976971882915	WITHOUT_CLASSIFICATION	2.3028117086477684E-6	TEST
otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999999882124595	WITHOUT_CLASSIFICATION	1.1787540608897918E-8	TEST
r/w buffer are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999929450936348	WITHOUT_CLASSIFICATION	7.054906365216457E-6	TEST
this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999946471912953	WITHOUT_CLASSIFICATION	5.352808704755781E-6	TEST
unread back	WITHOUT_CLASSIFICATION	0.9999962531042311	WITHOUT_CLASSIFICATION	3.746895768766425E-6	TEST
iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.999999699291875	WITHOUT_CLASSIFICATION	3.0070812497550754E-7	TEST
terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999998555848567	WITHOUT_CLASSIFICATION	1.4441514329050512E-7	TEST
no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.999999385636943	WITHOUT_CLASSIFICATION	6.143630570468143E-7	TEST
found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.999997892152051	WITHOUT_CLASSIFICATION	2.107847948999302E-6	TEST
Check file size - special files in /proc have zero size and need to be handled by the generic read path.	WITHOUT_CLASSIFICATION	0.999999965422521	WITHOUT_CLASSIFICATION	3.4577478929468847E-8	TEST
Copy any buffered data (including ungetc byte)	WITHOUT_CLASSIFICATION	0.9999998562874077	WITHOUT_CLASSIFICATION	1.4371259223369055E-7	TEST
Now read unbuffered directly from the file	WITHOUT_CLASSIFICATION	0.9999999563029841	WITHOUT_CLASSIFICATION	4.369701580741542E-8	TEST
Copy out any buffered bytes	WITHOUT_CLASSIFICATION	0.9999955474366505	WITHOUT_CLASSIFICATION	4.452563349481607E-6	TEST
Need to clamp source (buffer) size to avoid overrun	WITHOUT_CLASSIFICATION	0.9999998235320343	WITHOUT_CLASSIFICATION	1.7646796572523304E-7	TEST
not closing from finalize	WITHOUT_CLASSIFICATION	0.9999994127109112	WITHOUT_CLASSIFICATION	5.872890888687676E-7	TEST
clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999942485216078	WITHOUT_CLASSIFICATION	5.751478392220734E-6	TEST
silence	WITHOUT_CLASSIFICATION	0.9999910417503806	WITHOUT_CLASSIFICATION	8.958249619574647E-6	TEST
silence	WITHOUT_CLASSIFICATION	0.9999910417503806	WITHOUT_CLASSIFICATION	8.958249619574647E-6	TEST
Don't bother	WITHOUT_CLASSIFICATION	0.9999942563394811	WITHOUT_CLASSIFICATION	5.743660518949119E-6	TEST
Don't bother	WITHOUT_CLASSIFICATION	0.9999942563394811	WITHOUT_CLASSIFICATION	5.743660518949119E-6	TEST
For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999986842638949	WITHOUT_CLASSIFICATION	1.315736105005027E-6	TEST
Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999931837408	WITHOUT_CLASSIFICATION	6.816259199897034E-6	TEST
Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999991602818863	WITHOUT_CLASSIFICATION	8.397181137097088E-7	TEST
for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999972993219555	WITHOUT_CLASSIFICATION	2.700678044448722E-6	TEST
libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999994650798103	WITHOUT_CLASSIFICATION	5.349201896564046E-7	TEST
we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999986371767882	WITHOUT_CLASSIFICATION	1.3628232118156471E-6	TEST
128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999997636308068	WITHOUT_CLASSIFICATION	2.3636919313311443E-7	TEST
limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations	WITHOUT_CLASSIFICATION	0.9999999443608826	WITHOUT_CLASSIFICATION	5.563911742999166E-8	TEST
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999936500463	WITHOUT_CLASSIFICATION	6.349953706163616E-9	TEST
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9999986624710305	WITHOUT_CLASSIFICATION	1.3375289694309929E-6	TEST
Avoid double-copying for reads that are larger than the buffer size	WITHOUT_CLASSIFICATION	0.9999999798026282	WITHOUT_CLASSIFICATION	2.0197371762247323E-8	TEST
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999981770527723	WITHOUT_CLASSIFICATION	1.8229472276746629E-6	TEST
Complete the request by filling the read buffer first	WITHOUT_CLASSIFICATION	0.9999981770527723	WITHOUT_CLASSIFICATION	1.8229472276746629E-6	TEST
Avoid double-copying for reads that are larger than the buffer size, or the destination is a direct buffer.	WITHOUT_CLASSIFICATION	0.9999993250690477	WITHOUT_CLASSIFICATION	6.749309522862335E-7	TEST
We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating a huge temporary native buffer, when doing reads into a heap buffer If the dst buffer is direct, then no need to limit.	WITHOUT_CLASSIFICATION	0.9999997101232484	WITHOUT_CLASSIFICATION	2.8987675160982165E-7	TEST
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999992019458326	WITHOUT_CLASSIFICATION	7.980541674202783E-7	TEST
Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999992019458326	WITHOUT_CLASSIFICATION	7.980541674202783E-7	TEST
Doesn't fit in buffer. Write immediately. ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999987655779174	WITHOUT_CLASSIFICATION	1.2344220825786968E-6	TEST
truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999960001393	WITHOUT_CLASSIFICATION	3.999860709548149E-9	TEST
how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999806314523587	WITHOUT_CLASSIFICATION	1.9368547641251034E-5	TEST
if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999985189167075	WITHOUT_CLASSIFICATION	1.4810832924311237E-6	TEST
close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999993829864667	WITHOUT_CLASSIFICATION	6.170135332909091E-7	TEST
putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999972966986932	WITHOUT_CLASSIFICATION	2.703301306867923E-6	TEST
save the ungot	WITHOUT_CLASSIFICATION	0.999997018881633	WITHOUT_CLASSIFICATION	2.981118366994168E-6	TEST
otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999998603906827	WITHOUT_CLASSIFICATION	1.3960931728840395E-7	TEST
ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999113900371989	WITHOUT_CLASSIFICATION	8.860996280117417E-5	TEST
flush first	WITHOUT_CLASSIFICATION	0.9999959231622884	WITHOUT_CLASSIFICATION	4.076837711668076E-6	TEST
Wake up any channels that became unblocked	WITHOUT_CLASSIFICATION	0.99999861549784	WITHOUT_CLASSIFICATION	1.3845021599901156E-6	TEST
Register any new blocking I/O requests	WITHOUT_CLASSIFICATION	0.9999076279567737	WITHOUT_CLASSIFICATION	9.237204322631963E-5	TEST
Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999997397279453	WITHOUT_CLASSIFICATION	2.602720546441792E-7	TEST
Wait for I/O on any channel	WITHOUT_CLASSIFICATION	0.9999977993905607	WITHOUT_CLASSIFICATION	2.200609439338019E-6	TEST
Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999995837046795	WITHOUT_CLASSIFICATION	4.162953206108953E-7	TEST
Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999519245268541	WITHOUT_CLASSIFICATION	4.8075473145832E-5	TEST
seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999997143757404	WITHOUT_CLASSIFICATION	2.8562425955138963E-7	TEST
seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999998906018535	WITHOUT_CLASSIFICATION	1.0939814662503282E-7	TEST
result = eval("arr = Array::['c', 200]; p arr"); assertEquals("[\"c\", 200]", result); result = eval("arr = Array.['d', 200]; p arr"); assertEquals("[\"d\", 200]", result);	WITHOUT_CLASSIFICATION	0.999929936602724	WITHOUT_CLASSIFICATION	7.006339727592247E-5	TEST
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999951180671	WITHOUT_CLASSIFICATION	4.881932932637303E-9	TEST
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.999428738905567	WITHOUT_CLASSIFICATION	5.712610944329993E-4	TEST
make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999997165161765	WITHOUT_CLASSIFICATION	2.8348382353068826E-7	TEST
make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999996952883226	WITHOUT_CLASSIFICATION	3.047116773707542E-7	TEST
first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999998764467707	WITHOUT_CLASSIFICATION	1.2355322931072184E-7	TEST
then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999997631165553	WITHOUT_CLASSIFICATION	2.368834447900301E-7	TEST
if we get here, the class and field exist; construct our Unsafe impl that calls it directly	WITHOUT_CLASSIFICATION	0.9999999988262549	WITHOUT_CLASSIFICATION	1.1737451101192455E-9	TEST
else leave it null	WITHOUT_CLASSIFICATION	0.9999989165625044	WITHOUT_CLASSIFICATION	1.0834374956490297E-6	TEST
TypeMatcher	WITHOUT_CLASSIFICATION	0.9999845828453725	WITHOUT_CLASSIFICATION	1.5417154627523068E-5	TEST
This is now needed, since module Java isn't in by default	WITHOUT_CLASSIFICATION	0.999998310387497	WITHOUT_CLASSIFICATION	1.6896125030336452E-6	TEST
Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999990356423959	WITHOUT_CLASSIFICATION	9.643576041175377E-7	TEST
Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999998925181791	WITHOUT_CLASSIFICATION	1.0748182080364495E-7	TEST
Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999998224172355	WITHOUT_CLASSIFICATION	1.7758276454565624E-7	TEST
Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999516945454	WITHOUT_CLASSIFICATION	4.8305454775071596E-8	TEST
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999098330205	WITHOUT_CLASSIFICATION	9.016697958370374E-8	TEST
Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999098330205	WITHOUT_CLASSIFICATION	9.016697958370374E-8	TEST
Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.999999807494727	WITHOUT_CLASSIFICATION	1.9250527307734358E-7	TEST
If we're running from within an IDE we may not have the .rb files in our classpath. Try to find them in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999999976341605	WITHOUT_CLASSIFICATION	2.365839599862965E-9	TEST
assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999907233146048	WITHOUT_CLASSIFICATION	9.276685395192733E-6	TEST
Init	WITHOUT_CLASSIFICATION	0.9999582784828905	WITHOUT_CLASSIFICATION	4.1721517109576204E-5	TEST
Block	WITHOUT_CLASSIFICATION	0.999871545773275	WITHOUT_CLASSIFICATION	1.2845422672499415E-4	TEST
Copy constructor	WITHOUT_CLASSIFICATION	0.999997250591946	WITHOUT_CLASSIFICATION	2.749408054006488E-6	TEST
presumably this require should fail	WITHOUT_CLASSIFICATION	0.9989818867113153	WITHOUT_CLASSIFICATION	0.001018113288684706	TEST
JRUBY-646 presumably this require should fail	WITHOUT_CLASSIFICATION	0.9997610098759235	WITHOUT_CLASSIFICATION	2.389901240765956E-4	TEST
Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999648788993166	WITHOUT_CLASSIFICATION	3.512110068332328E-5	TEST
ok	WITHOUT_CLASSIFICATION	0.9997249896737453	WITHOUT_CLASSIFICATION	2.7501032625462576E-4	TEST
Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.999999780583083	WITHOUT_CLASSIFICATION	2.194169170413078E-7	TEST
load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999919137484646	WITHOUT_CLASSIFICATION	8.086251535411659E-6	TEST
reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999772552416125	WITHOUT_CLASSIFICATION	2.274475838754705E-5	TEST
call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999982715569464	WITHOUT_CLASSIFICATION	1.7284430535219E-6	TEST
Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999999562242686	WITHOUT_CLASSIFICATION	4.3775731318465546E-8	TEST
wait for the go signal	WITHOUT_CLASSIFICATION	0.9999993348283438	WITHOUT_CLASSIFICATION	6.651716561132857E-7	TEST
run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.999999239868616	WITHOUT_CLASSIFICATION	7.601313840363125E-7	TEST
wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999994961204941	WITHOUT_CLASSIFICATION	5.038795059681067E-7	TEST
notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999981682082307	WITHOUT_CLASSIFICATION	1.8317917692076273E-6	TEST
wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999984617871333	WITHOUT_CLASSIFICATION	1.5382128667593515E-6	TEST
we do preand post load outside the "body" versions to pre-prepare and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999970676544361	WITHOUT_CLASSIFICATION	2.9323455638986313E-6	TEST
out of byte range there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999922514890291	WITHOUT_CLASSIFICATION	7.748510970901856E-6	TEST
MRI behavior: raise ArgumentError for 'unknown command' before checking number of args.	WITHOUT_CLASSIFICATION	0.9999995380398831	WITHOUT_CLASSIFICATION	4.6196011695311433E-7	TEST
if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999965485036195	WITHOUT_CLASSIFICATION	3.451496380560414E-6	TEST
there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999868387967293	WITHOUT_CLASSIFICATION	1.316120327067101E-5	TEST
construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.999999114730952	WITHOUT_CLASSIFICATION	8.852690479548834E-7	TEST
Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999936219628	WITHOUT_CLASSIFICATION	6.378037134945796E-9	TEST
assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999861258232362	WITHOUT_CLASSIFICATION	1.3874176763731818E-5	TEST
void methods should work	WITHOUT_CLASSIFICATION	0.9999734129968149	WITHOUT_CLASSIFICATION	2.658700318509864E-5	TEST
methods with required = 4 or higher should bind and be callable using reflection JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999952974868083	WITHOUT_CLASSIFICATION	4.702513191764686E-6	TEST
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999651731564533	WITHOUT_CLASSIFICATION	3.482684354683081E-5	TEST
Ensure we have a new interpreter for each test. Previous we were using the same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.998529669414187	WITHOUT_CLASSIFICATION	0.0014703305858130952	TEST
Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.999997534122051	WITHOUT_CLASSIFICATION	2.4658779489814944E-6	TEST
assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999933531447998	WITHOUT_CLASSIFICATION	6.6468552003167005E-6	TEST
int n = 10;	WITHOUT_CLASSIFICATION	0.9999803764300466	WITHOUT_CLASSIFICATION	1.9623569953537398E-5	TEST
there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9993464712736596	WITHOUT_CLASSIFICATION	6.535287263404313E-4	TEST
No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999950407432082	WITHOUT_CLASSIFICATION	4.959256791809465E-6	TEST
value equality	WITHOUT_CLASSIFICATION	0.9999947716081355	WITHOUT_CLASSIFICATION	5.228391864455575E-6	TEST
identity equality	WITHOUT_CLASSIFICATION	0.9999989736146221	WITHOUT_CLASSIFICATION	1.0263853778756602E-6	TEST
bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999994271141649	WITHOUT_CLASSIFICATION	5.728858352020644E-7	TEST
bench Integer fib	WITHOUT_CLASSIFICATION	0.9999987148454729	WITHOUT_CLASSIFICATION	1.2851545272006703E-6	TEST
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999992523777298	WITHOUT_CLASSIFICATION	7.476222701248746E-7	TEST
bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999992523777298	WITHOUT_CLASSIFICATION	7.476222701248746E-7	TEST
bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999970387499887	WITHOUT_CLASSIFICATION	2.96125001134018E-6	TEST
bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999996436365789	WITHOUT_CLASSIFICATION	3.56363421060774E-7	TEST
bench Long fib	WITHOUT_CLASSIFICATION	0.9999887280006822	WITHOUT_CLASSIFICATION	1.1271999317844894E-5	TEST
skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999972098648622	WITHOUT_CLASSIFICATION	2.7901351377704617E-6	TEST
start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999943236768895	WITHOUT_CLASSIFICATION	5.676323110578337E-6	TEST
public class Hello { public static String getMessage() { return "....."; } }	WITHOUT_CLASSIFICATION	0.9999999048907451	WITHOUT_CLASSIFICATION	9.510925480852074E-8	TEST
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999997824711115	WITHOUT_CLASSIFICATION	2.1752888835895515E-7	TEST
Note: We can't use file.exists() to check whether the symlink exists or not, because that method returns false for existing but broken symlink. So, we try without the existence check, but in the try-catch block. MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999999717839989	WITHOUT_CLASSIFICATION	2.821600100989935E-8	TEST
We are creating a new IO object that shares the same IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.999999510023649	WITHOUT_CLASSIFICATION	4.899763510975169E-7	TEST
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999339922713	WITHOUT_CLASSIFICATION	6.600772878126297E-8	TEST
[IRubyObject] [IRubyObject, IRubyObject] [IRubyObject, RubyClass] [IRubyObject, RubyClass, RubyClass] [IRubyObject, RubyClass, Visibility] [IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999974686023259	WITHOUT_CLASSIFICATION	2.531397674169524E-6	TEST
select appropriate call site dup receiver load self	WITHOUT_CLASSIFICATION	0.9999996092452864	WITHOUT_CLASSIFICATION	3.9075471361099755E-7	TEST
Translate "x || y" --> "x = (is_true(x) ? x : y)" --> x = -- build(x) should return a variable! -- f = is_true(x) beq(f, true, L) x = -- build(y) -- L:	WITHOUT_CLASSIFICATION	0.9999990151004969	WITHOUT_CLASSIFICATION	9.848995030586245E-7	TEST
Force the client socket to be blocking	WITHOUT_CLASSIFICATION	0.9999996905891724	WITHOUT_CLASSIFICATION	3.0941082758834003E-7	TEST
Additional context surrounding tokens that both the lexer and grammar use.	WITHOUT_CLASSIFICATION	0.9999999863002289	WITHOUT_CLASSIFICATION	1.3699771184333676E-8	TEST
Enebo: c can never be antrhign but '.' Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999920188201454	WITHOUT_CLASSIFICATION	7.981179854597948E-6	TEST
save package module as ivar in parent, and add method to parent so we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999754760022	WITHOUT_CLASSIFICATION	2.452399793045875E-8	TEST
[C,C] [C, boolean]	WITHOUT_CLASSIFICATION	0.9999912216913313	WITHOUT_CLASSIFICATION	8.778308668732877E-6	TEST
Label for the start of the closure (used to implement redo) Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999963223141	WITHOUT_CLASSIFICATION	3.677685828513266E-9	TEST
ignore; job was cancelled FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999959410100979	WITHOUT_CLASSIFICATION	4.058989902078401E-6	TEST
check arity checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999987204255508	WITHOUT_CLASSIFICATION	1.27957444920149E-6	TEST
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9999829637569234	WITHOUT_CLASSIFICATION	1.7036243076605496E-5	TEST
we take the first method found as our "n" method, since for any non-specific arity they'll all error the same. If an actual "n" method is created, we use that.	WITHOUT_CLASSIFICATION	0.9999999984656298	WITHOUT_CLASSIFICATION	1.534370250399619E-9	TEST
Used by our duck-typification of Proc into interface types, to allow coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999997290551028	WITHOUT_CLASSIFICATION	2.709448971513295E-7	TEST
proxy is under construction, building thread can safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999997410630168	WITHOUT_CLASSIFICATION	2.589369831548537E-7	TEST
it's either as converted as we can make it via above logic or it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999672082540554	WITHOUT_CLASSIFICATION	3.279174594454156E-5	TEST
package scheme 2: separate module for each full package name, constructed from the camel-cased package segments: Java::JavaLang::Object,	WITHOUT_CLASSIFICATION	0.9999992981531308	WITHOUT_CLASSIFICATION	7.01846869243131E-7	TEST
construct the proxy method	WITHOUT_CLASSIFICATION	0.999998648304881	WITHOUT_CLASSIFICATION	1.3516951189374507E-6	TEST
line 159 "-" %token constants	WITHOUT_CLASSIFICATION	0.9999996350192923	WITHOUT_CLASSIFICATION	3.6498070766166063E-7	TEST
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9999984800364438	WITHOUT_CLASSIFICATION	1.5199635562403047E-6	TEST
line 152 "-" %token constants	WITHOUT_CLASSIFICATION	0.9999996279071386	WITHOUT_CLASSIFICATION	3.720928614520136E-7	TEST
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999929838859	WITHOUT_CLASSIFICATION	7.016114141390822E-9	TEST
+++ Helper Methods	WITHOUT_CLASSIFICATION	0.9999984800364438	WITHOUT_CLASSIFICATION	1.5199635562403047E-6	TEST
We only need to pass in current scope if we are evaluating as a block (which is only done for evals). We need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999891577650294	WITHOUT_CLASSIFICATION	1.0842234970661649E-5	TEST
let the width (if any), get processed in the next loop, so any leading 0 gets treated correctly	WITHOUT_CLASSIFICATION	0.9999712130598923	WITHOUT_CLASSIFICATION	2.878694010766427E-5	TEST
A place to store that special hiding space that bindings need to implement things like: eval("a = 1", binding); eval("p a"). All binding instances must get access to this hidden shared scope. We store it here. This will be null if no binding has yet been called.	WITHOUT_CLASSIFICATION	0.9999998988945249	WITHOUT_CLASSIFICATION	1.0110547514890579E-7	TEST
TODO: make it 16 now ? MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9995363248909953	WITHOUT_CLASSIFICATION	4.63675109004705E-4	TEST
check visibility dup method	WITHOUT_CLASSIFICATION	0.9999992356737758	WITHOUT_CLASSIFICATION	7.643262241211669E-7	TEST
&foo are not getting set from somewhere...I want the following assert to be true though assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999772714762954	WITHOUT_CLASSIFICATION	2.272852370457263E-5	TEST
unsigned int, native unsigned long, native	WITHOUT_CLASSIFICATION	0.9999974636250337	WITHOUT_CLASSIFICATION	2.5363749663328255E-6	TEST
need padding I'm fairly sure there is a library call to create a string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999963315765129	WITHOUT_CLASSIFICATION	3.668423487049463E-6	TEST
MRI behavior: Be default, 2 digits in the exponent. Use 3 digits only when necessary. See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999997369070717	WITHOUT_CLASSIFICATION	2.6309292829789344E-6	TEST
MRI ignores seek errors, presumably for unseekable files like serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999951180671	WITHOUT_CLASSIFICATION	4.881932932637303E-9	TEST
switch for no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999996445105197	WITHOUT_CLASSIFICATION	3.554894802994069E-7	TEST
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999971943798148	WITHOUT_CLASSIFICATION	2.805620185230024E-6	TEST
Estimate the square root with the foremost 62 bits of squarD bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999989563195071	WITHOUT_CLASSIFICATION	1.0436804928961488E-6	TEST
captures begin and end are used when not groups defined source string	WITHOUT_CLASSIFICATION	0.9999992189564193	WITHOUT_CLASSIFICATION	7.810435807692608E-7	TEST
INSTANCE VARIABLE RUBY METHODS	WITHOUT_CLASSIFICATION	0.9999144532083808	WITHOUT_CLASSIFICATION	8.554679161923571E-5	TEST
switch while	WITHOUT_CLASSIFICATION	0.9999881937092704	WITHOUT_CLASSIFICATION	1.1806290729530038E-5	TEST
For nodes do not have their own scope so we pass null to indicate this. 'For's are implemented as blocks in evaluation, but they have no scope so we just deal with this lack of scope throughout its lifespan. We should probably change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999821472158545	WITHOUT_CLASSIFICATION	1.785278414545245E-5	TEST
This field is used during argument processing to avoid putting RubyArray instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999997984780854	WITHOUT_CLASSIFICATION	2.015219147049238E-7	TEST
Parent container for this context (can be dynamic!!) If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999114708196	WITHOUT_CLASSIFICATION	8.852918041190163E-8	TEST
Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = false beq(v1, false, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9999999198052681	WITHOUT_CLASSIFICATION	8.019473187109182E-8	TEST
expected	WITHOUT_CLASSIFICATION	0.9999663098693364	WITHOUT_CLASSIFICATION	3.369013066355262E-5	TEST
Do nothing	WITHOUT_CLASSIFICATION	0.9999816237239761	WITHOUT_CLASSIFICATION	1.8376276023842053E-5	TEST
constructor	WITHOUT_CLASSIFICATION	0.9999863258204829	WITHOUT_CLASSIFICATION	1.367417951721929E-5	TEST
If a line is followed by a blank line put it back.	WITHOUT_CLASSIFICATION	0.999998884289277	WITHOUT_CLASSIFICATION	1.115710722986586E-6	TEST
$>: default output handle	WITHOUT_CLASSIFICATION	0.99999966299518	WITHOUT_CLASSIFICATION	3.3700482007739994E-7	TEST
line 423	WITHOUT_CLASSIFICATION	0.9999884699716994	WITHOUT_CLASSIFICATION	1.1530028300437726E-5	TEST
line 486	WITHOUT_CLASSIFICATION	0.9999920251865326	WITHOUT_CLASSIFICATION	7.97481346745132E-6	TEST
Signal uses sun.misc. classes, this is not allowed in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999996874034474	WITHOUT_CLASSIFICATION	3.125965526097039E-7	TEST
re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999989985211275	WITHOUT_CLASSIFICATION	1.0014788724629053E-6	TEST
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999960610656505	WITHOUT_CLASSIFICATION	3.938934349477561E-6	TEST
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999960610656505	WITHOUT_CLASSIFICATION	3.938934349477561E-6	TEST
colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999988717220046	WITHOUT_CLASSIFICATION	1.1282779954014697E-6	TEST
if there's no receiver, evaluate and pass in the superclass, or pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999862490644	WITHOUT_CLASSIFICATION	1.3750935608739432E-8	TEST
Wire up Function#call(args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999961503371	WITHOUT_CLASSIFICATION	3.8496628706871665E-9	TEST
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9874879812014096	WITHOUT_CLASSIFICATION	0.012512018798590352	TEST
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9874879812014096	WITHOUT_CLASSIFICATION	0.012512018798590352	TEST
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9874879812014096	WITHOUT_CLASSIFICATION	0.012512018798590352	TEST
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9874879812014096	WITHOUT_CLASSIFICATION	0.012512018798590352	TEST
Decrease value to hit upper range.	WITHOUT_CLASSIFICATION	0.9999993172587747	WITHOUT_CLASSIFICATION	6.827412252588071E-7	TEST
assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999998526392304	WITHOUT_CLASSIFICATION	1.4736076959448227E-6	TEST
"else" body	WITHOUT_CLASSIFICATION	0.9999798053787375	WITHOUT_CLASSIFICATION	2.0194621262403664E-5	TEST
done done done Nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case DEFINEDNODE: return buildDefined(node, m); Incomplete done done done done done done done done case ENSURENODE: return buildEnsureNode(node, m); DEFERRED done done done done case FLIPNODE: return buildFlip(node, m); SSS FIXME: What code generates this AST? done done done done done done done done done done done done done done done done done done? done done done done done done -- partially case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); DEFERRED SSS FIXME: What code generates this AST? done case POSTEXENODE: return buildPostExe(node, m); DEFERRED case PREEXENODE: return buildPreExe(node, m); DEFERRED done?? done	WITHOUT_CLASSIFICATION	0.9999999962893539	WITHOUT_CLASSIFICATION	3.710646098024143E-9	TEST
read-volatile	WITHOUT_CLASSIFICATION	0.9999981369198154	WITHOUT_CLASSIFICATION	1.8630801845439981E-6	TEST
$+: string matches last paren.	WITHOUT_CLASSIFICATION	0.9999883302332094	WITHOUT_CLASSIFICATION	1.166976679058411E-5	TEST
should alter global state	WITHOUT_CLASSIFICATION	0.999988764446714	WITHOUT_CLASSIFICATION	1.123555328594224E-5	TEST
should alter global state	WITHOUT_CLASSIFICATION	0.999988764446714	WITHOUT_CLASSIFICATION	1.123555328594224E-5	TEST
Ruby code frequently uses a platform check to choose "NUL:" on windows but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999998845439235	WITHOUT_CLASSIFICATION	1.154560763576845E-7	TEST
10!	WITHOUT_CLASSIFICATION	0.9991012125831478	WITHOUT_CLASSIFICATION	8.987874168521828E-4	TEST
case RESCUENODE: return buildRescue(node, m); DEFERRED case RETRYNODE: return buildRetry(node, m); DEFERRED done	WITHOUT_CLASSIFICATION	0.9999998871676344	WITHOUT_CLASSIFICATION	1.1283236549848215E-7	TEST
Is this instruction live or dead? During optimization passes, if this instruction causes no side-effects and the result of the instruction is not needed by anyone else, we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9998601495202737	WITHOUT_CLASSIFICATION	1.398504797263675E-4	TEST
all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999987012210502	WITHOUT_CLASSIFICATION	1.298778949878035E-6	TEST
first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999987486894185	WITHOUT_CLASSIFICATION	1.2513105814683139E-6	TEST
Determine if the parameter might be passed as a 32bit int parameter. This just applies to buffer/pointer types.	WITHOUT_CLASSIFICATION	0.9999996675318211	WITHOUT_CLASSIFICATION	3.324681788656264E-7	TEST
Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999985784975761	WITHOUT_CLASSIFICATION	1.4215024238451477E-6	TEST
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999545027491934	WITHOUT_CLASSIFICATION	4.5497250806623796E-5	TEST
yyLhs 496	WITHOUT_CLASSIFICATION	0.9999545027491934	WITHOUT_CLASSIFICATION	4.5497250806623796E-5	TEST
initial size state stack value stack current input #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999929838859	WITHOUT_CLASSIFICATION	7.016114141390822E-9	TEST
line 449	WITHOUT_CLASSIFICATION	0.999991195619685	WITHOUT_CLASSIFICATION	8.804380315093365E-6	TEST
line 495	WITHOUT_CLASSIFICATION	0.9999915591494917	WITHOUT_CLASSIFICATION	8.440850508429935E-6	TEST
Management/monitoring	WITHOUT_CLASSIFICATION	0.9999894417540572	WITHOUT_CLASSIFICATION	1.0558245942654432E-5	TEST
if we've found the last char of the separator, and we've found at least as many characters as separator length, and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999994091985597	WITHOUT_CLASSIFICATION	5.908014402888968E-7	TEST
14!	WITHOUT_CLASSIFICATION	0.9992512011211812	WITHOUT_CLASSIFICATION	7.487988788189442E-4	TEST
Process any set of annotations No supported options	WITHOUT_CLASSIFICATION	0.9999918535953651	WITHOUT_CLASSIFICATION	8.146404634856872E-6	TEST
add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999982324056815	WITHOUT_CLASSIFICATION	1.7675943184276849E-6	TEST
extract item from array	WITHOUT_CLASSIFICATION	0.9999956321563748	WITHOUT_CLASSIFICATION	4.367843625194763E-6	TEST
extract item from array	WITHOUT_CLASSIFICATION	0.9999956321563748	WITHOUT_CLASSIFICATION	4.367843625194763E-6	TEST
case SCLASSNODE: return buildSClass(node, m); DEFERRED done done done done done done done done case UNDEFNODE: return buildUndef(node, m); DEFERRED done case VALIASNODE: return buildVAlias(node, m); DEFERRED done done	WITHOUT_CLASSIFICATION	0.9999999736526735	WITHOUT_CLASSIFICATION	2.6347326608911616E-8	TEST
Adding a post-invoke for the cb result serves to both keep it alive until after the function returns, and allows us to clean up the native trampoline early, instead of letting them accumulate until a GC run	WITHOUT_CLASSIFICATION	0.9999999998379089	WITHOUT_CLASSIFICATION	1.6209114463507698E-10	TEST
The Java method doesn't care what class it is, but we need to know what to convert it to, so we use the object's own class. If that doesn't help, we use String to force a call to the object's "to_s" method.	WITHOUT_CLASSIFICATION	0.999957671612214	WITHOUT_CLASSIFICATION	4.232838778588802E-5	TEST
index for the item	WITHOUT_CLASSIFICATION	0.9999982279935221	WITHOUT_CLASSIFICATION	1.7720064779471355E-6	TEST
Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999997515944976	WITHOUT_CLASSIFICATION	2.484055024297122E-7	TEST
18!	WITHOUT_CLASSIFICATION	0.9991562115271031	WITHOUT_CLASSIFICATION	8.437884728970104E-4	TEST
If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999997205291021	WITHOUT_CLASSIFICATION	2.794708979144553E-7	TEST
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999996942483869	WITHOUT_CLASSIFICATION	3.057516132233972E-7	TEST
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999996942483869	WITHOUT_CLASSIFICATION	3.057516132233972E-7	TEST
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999996942483869	WITHOUT_CLASSIFICATION	3.057516132233972E-7	TEST
set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999996942483869	WITHOUT_CLASSIFICATION	3.057516132233972E-7	TEST
NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999998390481423	WITHOUT_CLASSIFICATION	1.60951857779591E-7	TEST
This method takes as input a map of operands to their values, and outputs the result of this instruction. If the value map provides a value for any of the instruction's operands the expectation is that the operand will be replaced with the simplified value. It is not required that it do so -- code correctness is not compromised by failure to simplify. @param valueMap Mapping from operands to their simplified values @returns simplified result / output of this instruction	WITHOUT_CLASSIFICATION	0.9999982450425439	WITHOUT_CLASSIFICATION	1.7549574560681414E-6	TEST
Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998346868879759	WITHOUT_CLASSIFICATION	1.653131120240607E-4	TEST
An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999969856338957	WITHOUT_CLASSIFICATION	3.014366104203438E-6	TEST
MRI behavior: always check whether the file is writable or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999982219262784	WITHOUT_CLASSIFICATION	1.7780737216151999E-6	TEST
22!	WITHOUT_CLASSIFICATION	0.9987344179166707	WITHOUT_CLASSIFICATION	0.0012655820833292592	TEST
attribute set.	WITHOUT_CLASSIFICATION	0.9999981130156255	WITHOUT_CLASSIFICATION	1.886984374638161E-6	TEST
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999806366759246	WITHOUT_CLASSIFICATION	1.9363324075436558E-5	TEST
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999806366759246	WITHOUT_CLASSIFICATION	1.9363324075436558E-5	TEST
grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999806366759246	WITHOUT_CLASSIFICATION	1.9363324075436558E-5	TEST
fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999995653002675	WITHOUT_CLASSIFICATION	4.346997325142219E-7	TEST
Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999997279077336	WITHOUT_CLASSIFICATION	2.720922663574602E-7	TEST
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.99999902259796	WITHOUT_CLASSIFICATION	9.774020399277144E-7	TEST
---------- These methods below are used during compile-time optimizations -------	WITHOUT_CLASSIFICATION	0.99999902259796	WITHOUT_CLASSIFICATION	9.774020399277144E-7	TEST
AF_INET	WITHOUT_CLASSIFICATION	0.9998005367331214	WITHOUT_CLASSIFICATION	1.9946326687862986E-4	TEST
Now we provide default impls of a number of signatures. For each arity, we first generate a non-block version of the method, which just adds NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can potentially take a block, to only generate the block-receiving signature and still avoid arg boxing. We then provide default implementations of each block-accepting method that in turn call the IRubyObject[]+Block version of call. This then finally falls back on the minimum implementation requirement for dynamic method handles.	WITHOUT_CLASSIFICATION	0.9999999999997412	WITHOUT_CLASSIFICATION	2.588806670952256E-13	TEST
Because we implement Java interfaces now, we need a new === that's aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999995184263036	WITHOUT_CLASSIFICATION	4.815736963216324E-7	TEST
BASE64	WITHOUT_CLASSIFICATION	0.9995439761155416	WITHOUT_CLASSIFICATION	4.560238844583624E-4	TEST
note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY when value is an integer less than 1. We treat 0 as a special case to avoid Domain error.	WITHOUT_CLASSIFICATION	0.9999999979320365	WITHOUT_CLASSIFICATION	2.067963577135131E-9	TEST
element set	WITHOUT_CLASSIFICATION	0.9999985939554693	WITHOUT_CLASSIFICATION	1.4060445306597547E-6	TEST
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999946444795185	WITHOUT_CLASSIFICATION	5.35552048151468E-6	TEST
visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999946444795185	WITHOUT_CLASSIFICATION	5.35552048151468E-6	TEST
temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999990213497344	WITHOUT_CLASSIFICATION	9.786502656585562E-7	TEST
SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode We won't get here for argument receives! So, buildDasgn is called for assignments to block variables within a block. As far as the IR is concerned, this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999662472864	WITHOUT_CLASSIFICATION	3.37527135503517E-8	TEST
getSimplifiedOperand returns the value of this operand, fully simplified getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away The value is used during optimizations and propagated through the IR. But, it is thrown away after that. But, the operand form is used for constructing the compound objects represented by the operand. Example: a = [1], b = [3,4], c = [a,b], d = [2,c] -- getValue(c) = [1,[3,4]]; getSimplifiedOperand(c) = [1, b] -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. So, if contents of a or b is modified, the "simplified value"s of c and d also change! This difference is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999998682249175	WITHOUT_CLASSIFICATION	1.3177508246481002E-7	TEST
IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999995065143108	WITHOUT_CLASSIFICATION	4.93485689204975E-7	TEST
promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.999999465824061	WITHOUT_CLASSIFICATION	5.341759389541459E-7	TEST
Ruby's OMG capture all source in a Hash feature Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999887182961	WITHOUT_CLASSIFICATION	1.1281703963488509E-8	TEST
carriage return	WITHOUT_CLASSIFICATION	0.9999993020647183	WITHOUT_CLASSIFICATION	6.979352815955495E-7	TEST
yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999360375221956	WITHOUT_CLASSIFICATION	6.396247780434296E-5	TEST
discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999864814664403	WITHOUT_CLASSIFICATION	1.3518533559562016E-5	TEST
String construction routines by NOT byte[] buffer and making the target String shared	WITHOUT_CLASSIFICATION	0.9999998905100383	WITHOUT_CLASSIFICATION	1.0948996163065318E-7	TEST
insert all nodes in sequence, hash them in the final instruction KEY	WITHOUT_CLASSIFICATION	0.9999998292218917	WITHOUT_CLASSIFICATION	1.7077810830673958E-7	TEST
return last value from execution	WITHOUT_CLASSIFICATION	0.9999999480326965	WITHOUT_CLASSIFICATION	5.196730342199452E-8	TEST
we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999991744463503	WITHOUT_CLASSIFICATION	8.255536495662636E-7	TEST
Basic Block id CFG that this basic block belongs to All basic blocks have a starting label List of non-label instructions	WITHOUT_CLASSIFICATION	0.99999794688671	WITHOUT_CLASSIFICATION	2.0531132899543818E-6	TEST
otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999997826942589	WITHOUT_CLASSIFICATION	2.173057410474426E-7	TEST
For all uninitialized specific arities, we defer to the "n" method which should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999999921197004	WITHOUT_CLASSIFICATION	7.880299557353676E-9	TEST
implement is called to force this class to create stubs for all methods in the given interface, so they'll show up in the list of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999996982830605	WITHOUT_CLASSIFICATION	3.0171693944443776E-7	TEST
CASE IR instructions are dummy instructions -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.99999997142747	WITHOUT_CLASSIFICATION	2.85725299391299E-8	TEST
check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999998619247991	WITHOUT_CLASSIFICATION	1.3807520089358983E-7	TEST
leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999999250636117	WITHOUT_CLASSIFICATION	7.493638832276185E-8	TEST
Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999670230038	WITHOUT_CLASSIFICATION	3.2976996159608466E-8	TEST
for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999520001049	WITHOUT_CLASSIFICATION	4.7999895097265464E-8	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999997918527974	WITHOUT_CLASSIFICATION	2.0814720251684175E-7	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999997918527974	WITHOUT_CLASSIFICATION	2.0814720251684175E-7	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999997918527974	WITHOUT_CLASSIFICATION	2.0814720251684175E-7	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999997918527974	WITHOUT_CLASSIFICATION	2.0814720251684175E-7	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999997918527974	WITHOUT_CLASSIFICATION	2.0814720251684175E-7	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999997918527974	WITHOUT_CLASSIFICATION	2.0814720251684175E-7	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999997918527974	WITHOUT_CLASSIFICATION	2.0814720251684175E-7	TEST
Need to initialize	WITHOUT_CLASSIFICATION	0.9999997918527974	WITHOUT_CLASSIFICATION	2.0814720251684175E-7	TEST
Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999998573013671	WITHOUT_CLASSIFICATION	1.4269863293135096E-7	TEST
fall through	WITHOUT_CLASSIFICATION	0.9999850457082011	WITHOUT_CLASSIFICATION	1.495429179897254E-5	TEST
deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9998707725759214	WITHOUT_CLASSIFICATION	1.2922742407858016E-4	TEST
All errors to sysread should be SystemCallErrors, but on a closed stream Ruby returns an IOError. Java throws same exception for all errors so we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999986403884921	WITHOUT_CLASSIFICATION	1.3596115079320829E-6	TEST
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999997824711115	WITHOUT_CLASSIFICATION	2.1752888835895515E-7	TEST
in method body with no containing loop, issue jump error load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999997824711115	WITHOUT_CLASSIFICATION	2.1752888835895515E-7	TEST
store argument count information into scope	WITHOUT_CLASSIFICATION	0.999995651892376	WITHOUT_CLASSIFICATION	4.348107623996153E-6	TEST
the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999995508245801	WITHOUT_CLASSIFICATION	4.4917541985025825E-7	TEST
First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999996504379168	WITHOUT_CLASSIFICATION	3.495620830914872E-7	TEST
public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999899232275958	WITHOUT_CLASSIFICATION	1.0076772404197995E-5	TEST
get current context	WITHOUT_CLASSIFICATION	0.9999988213612045	WITHOUT_CLASSIFICATION	1.1786387954685054E-6	TEST
octal constant	WITHOUT_CLASSIFICATION	0.9999947809752013	WITHOUT_CLASSIFICATION	5.219024798771126E-6	TEST
read	WITHOUT_CLASSIFICATION	0.9999538563184547	WITHOUT_CLASSIFICATION	4.614368154520667E-5	TEST
this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999946547813716	WITHOUT_CLASSIFICATION	5.345218628426317E-6	TEST
it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999954748106068	WITHOUT_CLASSIFICATION	4.525189393117345E-6	TEST
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996992850653	WITHOUT_CLASSIFICATION	3.0071493471987515E-7	TEST
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996992850653	WITHOUT_CLASSIFICATION	3.0071493471987515E-7	TEST
If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996992850653	WITHOUT_CLASSIFICATION	3.0071493471987515E-7	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999997749484655	WITHOUT_CLASSIFICATION	2.2505153457331862E-7	TEST
at end	WITHOUT_CLASSIFICATION	0.9999973212296948	WITHOUT_CLASSIFICATION	2.6787703051616955E-6	TEST
bang: true, no match, no substitution	WITHOUT_CLASSIFICATION	0.999996437179581	WITHOUT_CLASSIFICATION	3.5628204191089196E-6	TEST
save blocking state	WITHOUT_CLASSIFICATION	0.9999982440584929	WITHOUT_CLASSIFICATION	1.7559415070498086E-6	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
receiver	WITHOUT_CLASSIFICATION	0.9999468447803249	WITHOUT_CLASSIFICATION	5.315521967514799E-5	TEST
invoke static __file__	WITHOUT_CLASSIFICATION	0.9999996083513425	WITHOUT_CLASSIFICATION	3.916486575305592E-7	TEST
rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999898787609592	WITHOUT_CLASSIFICATION	1.0121239040708878E-5	TEST
fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999999970969964	WITHOUT_CLASSIFICATION	2.9030036029E-9	TEST
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999955550316808	WITHOUT_CLASSIFICATION	4.4449683192022035E-6	TEST
UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999955550316808	WITHOUT_CLASSIFICATION	4.4449683192022035E-6	TEST
load null block	WITHOUT_CLASSIFICATION	0.9999940296816511	WITHOUT_CLASSIFICATION	5.9703183490225775E-6	TEST
This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999992746834694	WITHOUT_CLASSIFICATION	7.253165306222801E-7	TEST
nothing else to here - the module version will be included in the class.	WITHOUT_CLASSIFICATION	0.9999999142361922	WITHOUT_CLASSIFICATION	8.576380781528053E-8	TEST
JRUBY-1000, fail early when attempting to subclass a final Java class; solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.999999753349925	WITHOUT_CLASSIFICATION	2.4665007499412917E-7	TEST
block given	WITHOUT_CLASSIFICATION	0.9999905659102796	WITHOUT_CLASSIFICATION	9.43408972047066E-6	TEST
block given	WITHOUT_CLASSIFICATION	0.9999905659102796	WITHOUT_CLASSIFICATION	9.43408972047066E-6	TEST
Translate ret = (a || b) to ret = (a ? true : b) as follows v1 = -- build(a) -- OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. while this info can be inferred by using attributes, why bother if we can do this? ret = true beq(v1, true, L) v2 = -- build(b) -- ret = v2 L:	WITHOUT_CLASSIFICATION	0.9999999496629238	WITHOUT_CLASSIFICATION	5.033707623173666E-8	TEST
Initial precision is that of double numbers 2^63/2 ~ 4E18 63-1 an even number of number bits precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999997748025826	WITHOUT_CLASSIFICATION	2.2519741731091393E-7	TEST
We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999955803431483	WITHOUT_CLASSIFICATION	4.419656851669176E-6	TEST
self	WITHOUT_CLASSIFICATION	0.9999475330542864	WITHOUT_CLASSIFICATION	5.246694571352352E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999475330542864	WITHOUT_CLASSIFICATION	5.246694571352352E-5	TEST
self	WITHOUT_CLASSIFICATION	0.9999475330542864	WITHOUT_CLASSIFICATION	5.246694571352352E-5	TEST
declare the field	WITHOUT_CLASSIFICATION	0.9999993327481025	WITHOUT_CLASSIFICATION	6.672518974985251E-7	TEST
Assign the values.	WITHOUT_CLASSIFICATION	0.9999995672136431	WITHOUT_CLASSIFICATION	4.327863568063315E-7	TEST
Assign the values.	WITHOUT_CLASSIFICATION	0.9999995672136431	WITHOUT_CLASSIFICATION	4.327863568063315E-7	TEST
check arity	WITHOUT_CLASSIFICATION	0.9999987844652003	WITHOUT_CLASSIFICATION	1.21553479971284E-6	TEST
check arity	WITHOUT_CLASSIFICATION	0.9999987844652003	WITHOUT_CLASSIFICATION	1.21553479971284E-6	TEST
create the class	WITHOUT_CLASSIFICATION	0.9999965408570748	WITHOUT_CLASSIFICATION	3.4591429252470615E-6	TEST
called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999996966479694	WITHOUT_CLASSIFICATION	3.0335203052786916E-7	TEST
No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999984189579172	WITHOUT_CLASSIFICATION	1.5810420828071637E-6	TEST
1.8	WITHOUT_CLASSIFICATION	0.9992356863098869	WITHOUT_CLASSIFICATION	7.643136901131655E-4	TEST
6:tags 16:addr 1:eos	WITHOUT_CLASSIFICATION	0.9999983146247459	WITHOUT_CLASSIFICATION	1.685375254211806E-6	TEST
Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.999998826033691	WITHOUT_CLASSIFICATION	1.1739663090745543E-6	TEST
For 'foo()'. Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999979434978	WITHOUT_CLASSIFICATION	2.056502210398303E-8	TEST
block	WITHOUT_CLASSIFICATION	0.9998828455984701	WITHOUT_CLASSIFICATION	1.1715440152987617E-4	TEST
Label for the start of the method Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999963361323544	WITHOUT_CLASSIFICATION	3.663867645646158E-6	TEST
comparisons & checks checks if the operand is non-null and non-false EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999896791713	WITHOUT_CLASSIFICATION	1.0320828799776078E-8	TEST
FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9997216121448385	WITHOUT_CLASSIFICATION	2.7838785516159914E-4	TEST
invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999971705632466	WITHOUT_CLASSIFICATION	2.8294367534954056E-6	TEST
all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999987534172994	WITHOUT_CLASSIFICATION	1.246582700643067E-6	TEST
allow proxy to be read without synchronization. if proxy is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999974911454813	WITHOUT_CLASSIFICATION	2.5088545186884915E-6	TEST
Create list of interface names to proxy (and make sure they really are interfaces) Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.999999963443732	WITHOUT_CLASSIFICATION	3.6556267999067714E-8	TEST
Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999954779428212	WITHOUT_CLASSIFICATION	4.522057178852044E-6	TEST
Value of "TZ" property is of a bit different format, which confuses the Java's TimeZone.getTimeZone(id) method, and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999935065854659	WITHOUT_CLASSIFICATION	6.493414533984345E-6	TEST
file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999616987439	WITHOUT_CLASSIFICATION	3.83012560257007E-8	TEST
ensure the object is associated with the wrapper we found it in, so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999493074468981	WITHOUT_CLASSIFICATION	5.06925531017522E-5	TEST
return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.99999355765974	WITHOUT_CLASSIFICATION	6.442340260019379E-6	TEST
A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999971943798148	WITHOUT_CLASSIFICATION	2.805620185230024E-6	TEST
arg	WITHOUT_CLASSIFICATION	0.999801621286217	WITHOUT_CLASSIFICATION	1.983787137829969E-4	TEST
Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999963006759156	WITHOUT_CLASSIFICATION	3.6993240842925482E-6	TEST
normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999999856872653	WITHOUT_CLASSIFICATION	1.4312734786311468E-8	TEST
coerce arguments	WITHOUT_CLASSIFICATION	0.9999990336510151	WITHOUT_CLASSIFICATION	9.663489849608547E-7	TEST
0.0 is ok float range inverted float range? NaN +infinity -infinity	WITHOUT_CLASSIFICATION	0.9999922425402115	WITHOUT_CLASSIFICATION	7.75745978860414E-6	TEST
expected	WITHOUT_CLASSIFICATION	0.9999663098693364	WITHOUT_CLASSIFICATION	3.369013066355262E-5	TEST
set this class's method names in var @__java_ovrd_methods if this is the new class; otherwise, get method names from there if this is a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999968829804454	WITHOUT_CLASSIFICATION	3.11701955456906E-6	TEST
ignore backslashed spaces in %w	WITHOUT_CLASSIFICATION	0.9999997425281194	WITHOUT_CLASSIFICATION	2.5747188059343423E-7	TEST
Invert the sign, since TZ format and Java format use opposite signs, sigh... Also, Java API requires the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.999999997935949	WITHOUT_CLASSIFICATION	2.0640510537597547E-9	TEST
no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999967552010866	WITHOUT_CLASSIFICATION	3.244798913524528E-6	TEST
<=> may return nil in many circumstances, e.g. 3 <=> NaN	WITHOUT_CLASSIFICATION	0.9999994500020755	WITHOUT_CLASSIFICATION	5.499979244828888E-7	TEST
use numbered access method	WITHOUT_CLASSIFICATION	0.9999979935129938	WITHOUT_CLASSIFICATION	2.006487006177103E-6	TEST
Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.999999812066218	WITHOUT_CLASSIFICATION	1.879337820408786E-7	TEST
ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999981234795979	WITHOUT_CLASSIFICATION	1.876520402110708E-6	TEST
The dataStruct is a place where custom information can be contained for core implementations that doesn't necessarily want to go to the trouble of creating a subclass of RubyObject. The OpenSSL implementation uses this heavily to save holder objects containing Java cryptography objects. Java integration uses this to store the Java object ref. protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999151490690937	WITHOUT_CLASSIFICATION	8.48509309061967E-5	TEST
Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999989981476336	WITHOUT_CLASSIFICATION	1.0018523663274732E-6	TEST
arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999988820475896	WITHOUT_CLASSIFICATION	1.1179524104365588E-6	TEST
build scope names string	WITHOUT_CLASSIFICATION	0.9999950368220952	WITHOUT_CLASSIFICATION	4.9631779048476094E-6	TEST
Tries to load at compile-time the constant referred to by 'constRef'. This might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999878764309	WITHOUT_CLASSIFICATION	1.2123569104825704E-8	TEST
Here we create an "anonymous" exception type used for unrolling the stack. MRI creates a new one for every call to timeout, which can be costly. We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.999998674099739	WITHOUT_CLASSIFICATION	1.325900260958246E-6	TEST
finally	WITHOUT_CLASSIFICATION	0.9999822225135814	WITHOUT_CLASSIFICATION	1.7777486418659128E-5	TEST
MRI behavior: With TZ equal to "GMT" or "UTC", Time.now is NOT considered as a proper GMT/UTC time: ENV['TZ']="GMT" Time.now.gmt? ==> false ENV['TZ']="UTC" Time.now.utc? ==> false Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999797294763083	WITHOUT_CLASSIFICATION	2.027052369177319E-5	TEST
?l | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999998485316272	WITHOUT_CLASSIFICATION	1.5146837283013564E-7	TEST
This try/catch is to allow failing over to the "commands" logic when running from within a jruby-complete jar file, which has jruby.home = a jar file URL that does not resolve correctly with JRubyFile.create.	WITHOUT_CLASSIFICATION	0.999999830000811	WITHOUT_CLASSIFICATION	1.6999918900930207E-7	TEST
Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999588856862001	WITHOUT_CLASSIFICATION	4.1114313799996526E-5	TEST
specific arity	WITHOUT_CLASSIFICATION	0.9999993363757396	WITHOUT_CLASSIFICATION	6.636242603937724E-7	TEST
In the case of two arguments, MRI will discard the portion of the first argument after a decimal point (i.e., "floor"). However in the case of a single argument, any portion after the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999953312018	WITHOUT_CLASSIFICATION	4.668798196141671E-9	TEST
?w | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999995410582264	WITHOUT_CLASSIFICATION	4.5894177352173363E-7	TEST
COMMON VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998685040884608	WITHOUT_CLASSIFICATION	1.314959115391612E-4	TEST
@JRubyMethod public IRubyObject to_proc() { return RubyProc.newProc(getRuntime(), CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()), Block.Type.PROC); }	WITHOUT_CLASSIFICATION	0.9999999242544024	WITHOUT_CLASSIFICATION	7.574559759159125E-8	TEST
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999996366740312	WITHOUT_CLASSIFICATION	3.6332596870229465E-7	TEST
let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999996366740312	WITHOUT_CLASSIFICATION	3.6332596870229465E-7	TEST
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999997116683511	WITHOUT_CLASSIFICATION	2.883316487924147E-7	TEST
do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999997116683511	WITHOUT_CLASSIFICATION	2.883316487924147E-7	TEST
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999900808588322	WITHOUT_CLASSIFICATION	9.919141167805579E-5	TEST
Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999900808588322	WITHOUT_CLASSIFICATION	9.919141167805579E-5	TEST
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9999970194448335	WITHOUT_CLASSIFICATION	2.980555166410057E-6	TEST
================ Utility Methods ================	WITHOUT_CLASSIFICATION	0.9999970194448335	WITHOUT_CLASSIFICATION	2.980555166410057E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999958366663957	WITHOUT_CLASSIFICATION	4.163333604207437E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999958366663957	WITHOUT_CLASSIFICATION	4.163333604207437E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999958366663957	WITHOUT_CLASSIFICATION	4.163333604207437E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999958366663957	WITHOUT_CLASSIFICATION	4.163333604207437E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999958366663957	WITHOUT_CLASSIFICATION	4.163333604207437E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999958366663957	WITHOUT_CLASSIFICATION	4.163333604207437E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999958366663957	WITHOUT_CLASSIFICATION	4.163333604207437E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999958366663957	WITHOUT_CLASSIFICATION	4.163333604207437E-6	TEST
write-volatile	WITHOUT_CLASSIFICATION	0.9999958366663957	WITHOUT_CLASSIFICATION	4.163333604207437E-6	TEST
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999976126678154	WITHOUT_CLASSIFICATION	2.3873321846572042E-6	TEST
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999976126678154	WITHOUT_CLASSIFICATION	2.3873321846572042E-6	TEST
if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999976126678154	WITHOUT_CLASSIFICATION	2.3873321846572042E-6	TEST
Add property name aliases	WITHOUT_CLASSIFICATION	0.9999980654425825	WITHOUT_CLASSIFICATION	1.9345574175021327E-6	TEST
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999991522820569	WITHOUT_CLASSIFICATION	8.477179430034336E-7	TEST
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999991522820569	WITHOUT_CLASSIFICATION	8.477179430034336E-7	TEST
================ Instance Methods ================	WITHOUT_CLASSIFICATION	0.9999991522820569	WITHOUT_CLASSIFICATION	8.477179430034336E-7	TEST
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999996582496912	WITHOUT_CLASSIFICATION	3.417503088065355E-7	TEST
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999996582496912	WITHOUT_CLASSIFICATION	3.417503088065355E-7	TEST
@JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999996582496912	WITHOUT_CLASSIFICATION	3.417503088065355E-7	TEST
INTERNAL VARIABLE METHODS	WITHOUT_CLASSIFICATION	0.9998692871224227	WITHOUT_CLASSIFICATION	1.3071287757720725E-4	TEST
backspace	WITHOUT_CLASSIFICATION	0.9999878533516258	WITHOUT_CLASSIFICATION	1.2146648374251057E-5	TEST
yySindex 889	WITHOUT_CLASSIFICATION	0.9999690956971782	WITHOUT_CLASSIFICATION	3.0904302821797546E-5	TEST
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999745804041711	WITHOUT_CLASSIFICATION	2.5419595828922644E-5	TEST
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999745804041711	WITHOUT_CLASSIFICATION	2.5419595828922644E-5	TEST
yyGindex 136	WITHOUT_CLASSIFICATION	0.9999745804041711	WITHOUT_CLASSIFICATION	2.5419595828922644E-5	TEST
package-private	WITHOUT_CLASSIFICATION	0.9999915245199019	WITHOUT_CLASSIFICATION	8.475480098127116E-6	TEST
fall through	WITHOUT_CLASSIFICATION	0.9999850457082011	WITHOUT_CLASSIFICATION	1.495429179897254E-5	TEST
fall through	WITHOUT_CLASSIFICATION	0.9999850457082011	WITHOUT_CLASSIFICATION	1.495429179897254E-5	TEST
MRI issuses warning here on (RBIGNUM(x)->len SIZEOF_BDIGITS yy > 10241024)	WITHOUT_CLASSIFICATION	0.999999493523302	WITHOUT_CLASSIFICATION	5.064766980001172E-7	TEST
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999994952123414	WITHOUT_CLASSIFICATION	5.047876584542635E-7	TEST
interrupt the target thread in case it's blocking or waiting WARNING: We no longer interrupt the target thread, since this usually means interrupting IO and with NIO that means the channel is no longer usable. We either need a new way to handle waking a target thread that's waiting on IO, or we need to accept that we can't wake such threads and must wait for them to complete their operation. threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999994952123414	WITHOUT_CLASSIFICATION	5.047876584542635E-7	TEST
Nested class whose instances act as thunks reacting to to_str method called from (Exception#to_str, Exception#message) MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!", to_str implementation: "name_err_mesg_to_str" TODO: this class should not be lookupable	WITHOUT_CLASSIFICATION	0.9998942972657769	WITHOUT_CLASSIFICATION	1.0570273422302355E-4	TEST
We need to guarantee that any existing reads of old Map can proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999215053593117	WITHOUT_CLASSIFICATION	7.849464068833467E-5	TEST
The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999903979749895	WITHOUT_CLASSIFICATION	9.602025010609512E-6	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999865539182857	WITHOUT_CLASSIFICATION	1.3446081714331575E-5	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999865539182857	WITHOUT_CLASSIFICATION	1.3446081714331575E-5	TEST
This should only be called by this and RubyFile. It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999982107099988	WITHOUT_CLASSIFICATION	1.7892900011922631E-6	TEST
We yield here to hopefully permit the target thread to schedule MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.999999753811727	WITHOUT_CLASSIFICATION	2.4618827295275694E-7	TEST
note that addMethod now does its own put, so any change made to functionality here should be made there as well	WITHOUT_CLASSIFICATION	0.9999943073116165	WITHOUT_CLASSIFICATION	5.692688383493034E-6	TEST
Currently dead code, but useful when we figure out how to actually perform translit. private static boolean isTranslit(String encoding) { return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false; }	WITHOUT_CLASSIFICATION	0.9999999949865962	WITHOUT_CLASSIFICATION	5.013403699252882E-9	TEST
empirically it appears that to_ary coersions always return array or nil, so this should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999846147993501	WITHOUT_CLASSIFICATION	1.5385200649878486E-5	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999865539182857	WITHOUT_CLASSIFICATION	1.3446081714331575E-5	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999865539182857	WITHOUT_CLASSIFICATION	1.3446081714331575E-5	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999865539182857	WITHOUT_CLASSIFICATION	1.3446081714331575E-5	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999865539182857	WITHOUT_CLASSIFICATION	1.3446081714331575E-5	TEST
EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999865539182857	WITHOUT_CLASSIFICATION	1.3446081714331575E-5	TEST
No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999996145385749	WITHOUT_CLASSIFICATION	3.854614251445694E-7	TEST
finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.99999871137531	WITHOUT_CLASSIFICATION	1.28862468987153E-6	TEST
if it's an inner class and it's not public, we can't access it; skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999822414088	WITHOUT_CLASSIFICATION	1.7758591149213968E-8	TEST
getFoo => foo getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.999992277640464	WITHOUT_CLASSIFICATION	7.722359535971558E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
MRI behavior on Windows: it treats '/' as a root of a current drive (but only if SINGLE slash is present!): E.g., if current work directory is 'D:/home/directory', then '/' means 'D:/'. Basically, '/path' is treated as a RELATIVE path, relative to the current drive. 'path' is treated as absolute one.	WITHOUT_CLASSIFICATION	0.9999998916327982	WITHOUT_CLASSIFICATION	1.0836720178500894E-7	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
not reached	WITHOUT_CLASSIFICATION	0.9999985565978989	WITHOUT_CLASSIFICATION	1.4434021009669654E-6	TEST
This is needed when the enclosing class or module is a singleton. In that case, we generated a name such as null::Foo, which broke Marshalling, among others. The correct thing to do in this situation is to insert the generate the name of form #<Class:01xasdfasd> if it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999763817519982	WITHOUT_CLASSIFICATION	2.3618248001845426E-5	TEST
this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.999998270866489	WITHOUT_CLASSIFICATION	1.729133511020394E-6	TEST
EQ == 0 (i.e. false) pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999996862918009	WITHOUT_CLASSIFICATION	3.1370819911812404E-7	TEST
get "self"	WITHOUT_CLASSIFICATION	0.9999975225036253	WITHOUT_CLASSIFICATION	2.477496374648972E-6	TEST
No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999990054789476	WITHOUT_CLASSIFICATION	9.94521052486602E-7	TEST
rethrow exception rethrow it	WITHOUT_CLASSIFICATION	0.9999829637569234	WITHOUT_CLASSIFICATION	1.7036243076605496E-5	TEST
only public methods	WITHOUT_CLASSIFICATION	0.9999993871471882	WITHOUT_CLASSIFICATION	6.128528117705325E-7	TEST
If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999996720141815	WITHOUT_CLASSIFICATION	3.2798581851629573E-6	TEST
First try to use drive letter from supplied dir value, then try current work dir.	WITHOUT_CLASSIFICATION	0.9999999979376188	WITHOUT_CLASSIFICATION	2.062381139265282E-9	TEST
JRUBY-2435: Aliasing eval and other "special" methods should display a warning We warn because we treat certain method names as "special" for purposes of optimization. Hopefully this will be enough to convince people not to alias them.	WITHOUT_CLASSIFICATION	0.9999994344706155	WITHOUT_CLASSIFICATION	5.655293845391165E-7	TEST
generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999988471096997	WITHOUT_CLASSIFICATION	1.1528903003693387E-6	TEST
block argument to the method closure present class present method table mutations, def, defs, undef, alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame's self makes calls that are aware of the frame's visibility makes calls that are aware of the frame's block makes calls that are aware of the frame's name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame's class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero-argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry	WITHOUT_CLASSIFICATION	0.9999999937534124	WITHOUT_CLASSIFICATION	6.246587577476344E-9	TEST
Add aliases in Type::, NativeType:: and FFI::TYPE_	WITHOUT_CLASSIFICATION	0.9999993593552172	WITHOUT_CLASSIFICATION	6.406447827952805E-7	TEST
Create constants for flock	WITHOUT_CLASSIFICATION	0.999993927100204	WITHOUT_CLASSIFICATION	6.07289979603041E-6	TEST
double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999700152899437	WITHOUT_CLASSIFICATION	2.998471005630769E-5	TEST
indices for temp values	WITHOUT_CLASSIFICATION	0.9999988899858111	WITHOUT_CLASSIFICATION	1.1100141889747708E-6	TEST
a while node could receive non-local flow control from any of these: a closure within the loop an eval within the loop a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999339922713	WITHOUT_CLASSIFICATION	6.600772878126297E-8	TEST
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999947138811932	WITHOUT_CLASSIFICATION	5.286118806800353E-6	TEST
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999947138811932	WITHOUT_CLASSIFICATION	5.286118806800353E-6	TEST
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999947138811932	WITHOUT_CLASSIFICATION	5.286118806800353E-6	TEST
Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999947138811932	WITHOUT_CLASSIFICATION	5.286118806800353E-6	TEST
snapshot of contents of directory current position in directory	WITHOUT_CLASSIFICATION	0.9999992875135346	WITHOUT_CLASSIFICATION	7.124864654261983E-7	TEST
Exclusive locks in Java require the channel to be writable, otherwise an exception is thrown (terminating JRuby execution). But flock behavior of MRI is that it allows exclusive locks even on non-writable file. So we convert exclusive lock to shared lock if the channel is not writable, to better match the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999975446452314	WITHOUT_CLASSIFICATION	2.4553547685509937E-6	TEST
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999997004292599	WITHOUT_CLASSIFICATION	2.9957074013419767E-7	TEST
explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999997004292599	WITHOUT_CLASSIFICATION	2.9957074013419767E-7	TEST
set self to the class	WITHOUT_CLASSIFICATION	0.9999996350190491	WITHOUT_CLASSIFICATION	3.6498095094013487E-7	TEST
---------- Public fields, methods ---------	WITHOUT_CLASSIFICATION	0.9999995619614251	WITHOUT_CLASSIFICATION	4.380385748803118E-7	TEST
A specific version was requested - use as is for search	WITHOUT_CLASSIFICATION	0.9999940788297554	WITHOUT_CLASSIFICATION	5.921170244568475E-6	TEST
zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999988448276192	WITHOUT_CLASSIFICATION	1.1551723807876976E-6	TEST
we need to collect all methods, though we'll only install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999887666740308	WITHOUT_CLASSIFICATION	1.1233325969174896E-5	TEST
Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999938331665187	WITHOUT_CLASSIFICATION	6.166833481397222E-6	TEST
Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999923928147488	WITHOUT_CLASSIFICATION	7.607185251247163E-6	TEST
do nothing	WITHOUT_CLASSIFICATION	0.9999868270339987	WITHOUT_CLASSIFICATION	1.3172966001238013E-5	TEST
do nothing	WITHOUT_CLASSIFICATION	0.9999868270339987	WITHOUT_CLASSIFICATION	1.3172966001238013E-5	TEST
do nothing	WITHOUT_CLASSIFICATION	0.9999868270339987	WITHOUT_CLASSIFICATION	1.3172966001238013E-5	TEST
do nothing	WITHOUT_CLASSIFICATION	0.9999868270339987	WITHOUT_CLASSIFICATION	1.3172966001238013E-5	TEST
If an IO exception occurs (something odd, but possible) A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999259241079	WITHOUT_CLASSIFICATION	7.407589210189344E-8	TEST
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999999772613605	WITHOUT_CLASSIFICATION	2.273863950150537E-7	TEST
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999999772613605	WITHOUT_CLASSIFICATION	2.273863950150537E-7	TEST
Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999999772613605	WITHOUT_CLASSIFICATION	2.273863950150537E-7	TEST
use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999991664089494	WITHOUT_CLASSIFICATION	8.335910505195821E-7	TEST
finally with no exception	WITHOUT_CLASSIFICATION	0.999996448017377	WITHOUT_CLASSIFICATION	3.5519826230657245E-6	TEST
Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999989824179633	WITHOUT_CLASSIFICATION	1.0175820368441618E-6	TEST
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9874879812014096	WITHOUT_CLASSIFICATION	0.012512018798590352	TEST
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9874879812014096	WITHOUT_CLASSIFICATION	0.012512018798590352	TEST
The counting of slashes that follows is simply a way to adhere to Ruby's UNC (or something) compatibility. When Ruby's expand_path is called with "foobar" it will return "foo/bar". JRuby uses java.io.File, and hence returns "/foo/bar". In order to retain java.io.File in the lower layers and provide full Ruby compatibility, the number of extra slashes must be counted and prepended to the result.	WITHOUT_CLASSIFICATION	0.9999999923500492	WITHOUT_CLASSIFICATION	7.64995085320376E-9	TEST
This is almost always already interned, since it will be called with a symbol in most cases but when created from Java code, we might get an argument that needs to be interned. addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999998122780751	WITHOUT_CLASSIFICATION	1.877219250112536E-7	TEST
not a class	WITHOUT_CLASSIFICATION	0.9999945471403135	WITHOUT_CLASSIFICATION	5.452859686516605E-6	TEST
not a class	WITHOUT_CLASSIFICATION	0.9999945471403135	WITHOUT_CLASSIFICATION	5.452859686516605E-6	TEST
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999868502186465	WITHOUT_CLASSIFICATION	1.3149781353605885E-5	TEST
Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999868502186465	WITHOUT_CLASSIFICATION	1.3149781353605885E-5	TEST
io.available() only returns 0 after EOF is encountered so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999997998358788	WITHOUT_CLASSIFICATION	2.0016412114720385E-7	TEST
In the current logic, if we get here we know that module is not an IncludedModuleWrapper, so there's no need to fish out the delegate. But just in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999986365698672	WITHOUT_CLASSIFICATION	1.36343013277813E-6	TEST
rb_iterate((VALUE()_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999937721088713	WITHOUT_CLASSIFICATION	6.227891128642605E-6	TEST
Broken symlinks considered by exists() as non-existing, so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999955587479779	WITHOUT_CLASSIFICATION	4.441252022249623E-6	TEST
CONSTANT API METHODS	WITHOUT_CLASSIFICATION	0.9999005880333025	WITHOUT_CLASSIFICATION	9.941196669744194E-5	TEST
create the default thread group	WITHOUT_CLASSIFICATION	0.9999979245526249	WITHOUT_CLASSIFICATION	2.0754473751263698E-6	TEST
range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999991907425497	WITHOUT_CLASSIFICATION	8.092574503369321E-7	TEST
============================ Here are hash internals (This could be extracted to a separate class but it's not too large though) ============================	WITHOUT_CLASSIFICATION	0.9999768032597002	WITHOUT_CLASSIFICATION	2.3196740299870572E-5	TEST
LOW-LEVEL CLASS VARIABLE INTERFACE fetch/store/list class variables for this module	WITHOUT_CLASSIFICATION	0.9999930572570371	WITHOUT_CLASSIFICATION	6.942742962792136E-6	TEST
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999999967153492	WITHOUT_CLASSIFICATION	3.284650790465684E-8	TEST
used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999999967153492	WITHOUT_CLASSIFICATION	3.284650790465684E-8	TEST
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.99999920276726	WITHOUT_CLASSIFICATION	7.972327399540411E-7	TEST
Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.99999920276726	WITHOUT_CLASSIFICATION	7.972327399540411E-7	TEST
retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999999579519832	WITHOUT_CLASSIFICATION	4.204801692021333E-8	TEST
returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999992554666635	WITHOUT_CLASSIFICATION	7.445333364935785E-7	TEST
\cX, \c\M-X	WITHOUT_CLASSIFICATION	0.9998125452636997	WITHOUT_CLASSIFICATION	1.8745473630045231E-4	TEST
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999923534228587	WITHOUT_CLASSIFICATION	7.646577141139061E-6	TEST
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999923534228587	WITHOUT_CLASSIFICATION	7.646577141139061E-6	TEST
new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999923534228587	WITHOUT_CLASSIFICATION	7.646577141139061E-6	TEST
line 286	WITHOUT_CLASSIFICATION	0.9999897252038974	WITHOUT_CLASSIFICATION	1.027479610258088E-5	TEST
line 476	WITHOUT_CLASSIFICATION	0.9999930536701181	WITHOUT_CLASSIFICATION	6.946329881886239E-6	TEST
line 513	WITHOUT_CLASSIFICATION	0.9999922012353079	WITHOUT_CLASSIFICATION	7.798764692184903E-6	TEST
line 530	WITHOUT_CLASSIFICATION	0.9999872968611464	WITHOUT_CLASSIFICATION	1.2703138853628775E-5	TEST
line 533	WITHOUT_CLASSIFICATION	0.9999894499452745	WITHOUT_CLASSIFICATION	1.0550054725378652E-5	TEST
line 537	WITHOUT_CLASSIFICATION	0.9999903100123377	WITHOUT_CLASSIFICATION	9.689987662233785E-6	TEST
line 551	WITHOUT_CLASSIFICATION	0.9999939349367029	WITHOUT_CLASSIFICATION	6.0650632972195475E-6	TEST
end loop	WITHOUT_CLASSIFICATION	0.9999962564599091	WITHOUT_CLASSIFICATION	3.743540090955394E-6	TEST
MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999999563772173	WITHOUT_CLASSIFICATION	4.3622782747186586E-8	TEST
prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999997590222274	WITHOUT_CLASSIFICATION	2.409777725454741E-7	TEST
Traverse the instructions in this basic block in reverse order! Mark as dead all instructions whose results are not used!	WITHOUT_CLASSIFICATION	0.9999996981398984	WITHOUT_CLASSIFICATION	3.0186010157725817E-7	TEST
fields should really be an immutable map as it is never modified after construction	WITHOUT_CLASSIFICATION	0.9999981941029596	WITHOUT_CLASSIFICATION	1.80589704030668E-6	TEST
load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999969338102388	WITHOUT_CLASSIFICATION	3.0661897612496977E-6	TEST
TODO: varargs?	WITHOUT_CLASSIFICATION	0.9874879812014096	WITHOUT_CLASSIFICATION	0.012512018798590352	TEST
If we define a class in Ruby, but later want to allow it to be defined in Java, the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999999894568872	WITHOUT_CLASSIFICATION	1.054311294611766E-8	TEST
We only want IO objects with valid streams (better to error now).	WITHOUT_CLASSIFICATION	0.9999961211312614	WITHOUT_CLASSIFICATION	3.878868738629993E-6	TEST
produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999960610656505	WITHOUT_CLASSIFICATION	3.938934349477561E-6	TEST
value	WITHOUT_CLASSIFICATION	0.9999595442070409	WITHOUT_CLASSIFICATION	4.045579295912875E-5	TEST
value	WITHOUT_CLASSIFICATION	0.9999595442070409	WITHOUT_CLASSIFICATION	4.045579295912875E-5	TEST
value	WITHOUT_CLASSIFICATION	0.9999595442070409	WITHOUT_CLASSIFICATION	4.045579295912875E-5	TEST
value	WITHOUT_CLASSIFICATION	0.9999595442070409	WITHOUT_CLASSIFICATION	4.045579295912875E-5	TEST
value	WITHOUT_CLASSIFICATION	0.9999595442070409	WITHOUT_CLASSIFICATION	4.045579295912875E-5	TEST
yyLhs 542	WITHOUT_CLASSIFICATION	0.9999507120823928	WITHOUT_CLASSIFICATION	4.9287917607128455E-5	TEST
value	WITHOUT_CLASSIFICATION	0.9999595442070409	WITHOUT_CLASSIFICATION	4.045579295912875E-5	TEST
value	WITHOUT_CLASSIFICATION	0.9999595442070409	WITHOUT_CLASSIFICATION	4.045579295912875E-5	TEST
value	WITHOUT_CLASSIFICATION	0.9999595442070409	WITHOUT_CLASSIFICATION	4.045579295912875E-5	TEST
MRI has extra pointer which makes our code look a little bit more strange in comparison	WITHOUT_CLASSIFICATION	0.9999997282650205	WITHOUT_CLASSIFICATION	2.7173497948416326E-7	TEST
Tempory buffer to build up a potential token. Consumer takes responsibility to reset this before use.	WITHOUT_CLASSIFICATION	0.999999233264787	WITHOUT_CLASSIFICATION	7.667352128581632E-7	TEST
tmpPosition is required because getPosition()'s side effects. if the warning is generated, the getPosition() on line 954 (this line + 18) will create a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9998599128046668	WITHOUT_CLASSIFICATION	1.4008719533311018E-4	TEST
What is \v in C? case '\v': c2 = 'v'; break;	WITHOUT_CLASSIFICATION	0.9999935687424352	WITHOUT_CLASSIFICATION	6.43125756487832E-6	TEST
Consider Thread aspects of this	WITHOUT_CLASSIFICATION	0.9999832535093336	WITHOUT_CLASSIFICATION	1.674649066641386E-5	TEST
Position within source must reflect the actual offset and column. Since we ate an extra character here (this accounting is normally done in read ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999990291127256	WITHOUT_CLASSIFICATION	9.708872744019145E-7	TEST
An interrupt or timeout may have caused us to miss a notify that we consumed, so do another notify in case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.999999593543589	WITHOUT_CLASSIFICATION	4.0645641094560757E-7	TEST
line 572	WITHOUT_CLASSIFICATION	0.9999909701756364	WITHOUT_CLASSIFICATION	9.029824363652878E-6	TEST
line 601	WITHOUT_CLASSIFICATION	0.9999930159156035	WITHOUT_CLASSIFICATION	6.984084396385041E-6	TEST
line 601	WITHOUT_CLASSIFICATION	0.9999930159156035	WITHOUT_CLASSIFICATION	6.984084396385041E-6	TEST
line 625	WITHOUT_CLASSIFICATION	0.9999910847106399	WITHOUT_CLASSIFICATION	8.915289360173411E-6	TEST
line 649	WITHOUT_CLASSIFICATION	0.999991492904808	WITHOUT_CLASSIFICATION	8.50709519195589E-6	TEST
line 691	WITHOUT_CLASSIFICATION	0.9999933494856333	WITHOUT_CLASSIFICATION	6.650514366620833E-6	TEST
line 723	WITHOUT_CLASSIFICATION	0.9999882192860969	WITHOUT_CLASSIFICATION	1.1780713903011218E-5	TEST
line 732	WITHOUT_CLASSIFICATION	0.9999880325288473	WITHOUT_CLASSIFICATION	1.1967471152764805E-5	TEST
line 745	WITHOUT_CLASSIFICATION	0.9999928297684688	WITHOUT_CLASSIFICATION	7.170231531153294E-6	TEST
line 766	WITHOUT_CLASSIFICATION	0.9999923009823838	WITHOUT_CLASSIFICATION	7.69901761621836E-6	TEST
line 785	WITHOUT_CLASSIFICATION	0.999991855706542	WITHOUT_CLASSIFICATION	8.144293457989004E-6	TEST
line 794	WITHOUT_CLASSIFICATION	0.9999915029145533	WITHOUT_CLASSIFICATION	8.49708544673764E-6	TEST
line 800	WITHOUT_CLASSIFICATION	0.9999876667674177	WITHOUT_CLASSIFICATION	1.2333232582369834E-5	TEST
line 812	WITHOUT_CLASSIFICATION	0.9999921084863148	WITHOUT_CLASSIFICATION	7.891513685094345E-6	TEST
line 827	WITHOUT_CLASSIFICATION	0.999989906887084	WITHOUT_CLASSIFICATION	1.0093112916010356E-5	TEST
line 839	WITHOUT_CLASSIFICATION	0.9999871412690258	WITHOUT_CLASSIFICATION	1.285873097432198E-5	TEST
line 845	WITHOUT_CLASSIFICATION	0.9999918433212008	WITHOUT_CLASSIFICATION	8.15667879914346E-6	TEST
line 864	WITHOUT_CLASSIFICATION	0.9999917401533197	WITHOUT_CLASSIFICATION	8.259846680269308E-6	TEST
line 886	WITHOUT_CLASSIFICATION	0.999991346728595	WITHOUT_CLASSIFICATION	8.653271404970822E-6	TEST
line 896	WITHOUT_CLASSIFICATION	0.9999903483116123	WITHOUT_CLASSIFICATION	9.651688387764953E-6	TEST
line 911	WITHOUT_CLASSIFICATION	0.9999930877229539	WITHOUT_CLASSIFICATION	6.912277046144472E-6	TEST
line 929	WITHOUT_CLASSIFICATION	0.9999869942233345	WITHOUT_CLASSIFICATION	1.3005776665516371E-5	TEST
line 952	WITHOUT_CLASSIFICATION	0.999988928070056	WITHOUT_CLASSIFICATION	1.1071929943879402E-5	TEST
line 970	WITHOUT_CLASSIFICATION	0.9999894137258382	WITHOUT_CLASSIFICATION	1.0586274161911967E-5	TEST
line 972	WITHOUT_CLASSIFICATION	0.9999892289756839	WITHOUT_CLASSIFICATION	1.0771024316214282E-5	TEST
line 991	WITHOUT_CLASSIFICATION	0.9999927374447124	WITHOUT_CLASSIFICATION	7.2625552875548005E-6	TEST
line 1011	WITHOUT_CLASSIFICATION	0.9999943349571855	WITHOUT_CLASSIFICATION	5.665042814498962E-6	TEST
line 1026	WITHOUT_CLASSIFICATION	0.99999303653179	WITHOUT_CLASSIFICATION	6.963468210049872E-6	TEST
line 1038	WITHOUT_CLASSIFICATION	0.9999899251554576	WITHOUT_CLASSIFICATION	1.0074844542522181E-5	TEST
line 1067	WITHOUT_CLASSIFICATION	0.9999943807302145	WITHOUT_CLASSIFICATION	5.619269785547397E-6	TEST
line 1085	WITHOUT_CLASSIFICATION	0.9999929119962002	WITHOUT_CLASSIFICATION	7.08800379978025E-6	TEST
line 1097	WITHOUT_CLASSIFICATION	0.9999934316402699	WITHOUT_CLASSIFICATION	6.568359730129541E-6	TEST
line 1105	WITHOUT_CLASSIFICATION	0.9999937662325367	WITHOUT_CLASSIFICATION	6.233767463332513E-6	TEST
line 1122	WITHOUT_CLASSIFICATION	0.9999937019361894	WITHOUT_CLASSIFICATION	6.298063810543954E-6	TEST
line 1133	WITHOUT_CLASSIFICATION	0.9999930537735089	WITHOUT_CLASSIFICATION	6.94622649116386E-6	TEST
line 1145	WITHOUT_CLASSIFICATION	0.9999952300960022	WITHOUT_CLASSIFICATION	4.769903997880048E-6	TEST
line 1169	WITHOUT_CLASSIFICATION	0.9999942850214842	WITHOUT_CLASSIFICATION	5.714978515716999E-6	TEST
line 1201	WITHOUT_CLASSIFICATION	0.999991488577519	WITHOUT_CLASSIFICATION	8.511422481059702E-6	TEST
line 1210	WITHOUT_CLASSIFICATION	0.9999927091307566	WITHOUT_CLASSIFICATION	7.290869243458793E-6	TEST
line 1229	WITHOUT_CLASSIFICATION	0.9999917242347143	WITHOUT_CLASSIFICATION	8.27576528570061E-6	TEST
line 1261	WITHOUT_CLASSIFICATION	0.9999937786481108	WITHOUT_CLASSIFICATION	6.221351889258479E-6	TEST
line 1287	WITHOUT_CLASSIFICATION	0.9999934085079506	WITHOUT_CLASSIFICATION	6.591492049371025E-6	TEST
line 1293	WITHOUT_CLASSIFICATION	0.9999893464228714	WITHOUT_CLASSIFICATION	1.0653577128673162E-5	TEST
line 1307	WITHOUT_CLASSIFICATION	0.9999920342557339	WITHOUT_CLASSIFICATION	7.965744266122723E-6	TEST
line 1320	WITHOUT_CLASSIFICATION	0.9999885939749027	WITHOUT_CLASSIFICATION	1.1406025097394082E-5	TEST
line 1325	WITHOUT_CLASSIFICATION	0.9999919770831612	WITHOUT_CLASSIFICATION	8.02291683867741E-6	TEST
line 1363	WITHOUT_CLASSIFICATION	0.9999930388017171	WITHOUT_CLASSIFICATION	6.961198282891824E-6	TEST
line 1398	WITHOUT_CLASSIFICATION	0.9999912592775752	WITHOUT_CLASSIFICATION	8.740722424923112E-6	TEST
line 1448	WITHOUT_CLASSIFICATION	0.999994292450524	WITHOUT_CLASSIFICATION	5.7075494760896045E-6	TEST
line 1456	WITHOUT_CLASSIFICATION	0.9999953412479257	WITHOUT_CLASSIFICATION	4.658752074309393E-6	TEST
line 1473	WITHOUT_CLASSIFICATION	0.9999936547342534	WITHOUT_CLASSIFICATION	6.3452657466866025E-6	TEST
line 1492	WITHOUT_CLASSIFICATION	0.9999930242793031	WITHOUT_CLASSIFICATION	6.975720696891851E-6	TEST
line 1513	WITHOUT_CLASSIFICATION	0.9999930169001442	WITHOUT_CLASSIFICATION	6.983099855885533E-6	TEST
line 1523	WITHOUT_CLASSIFICATION	0.9999920681656405	WITHOUT_CLASSIFICATION	7.93183435960838E-6	TEST
line 1562	WITHOUT_CLASSIFICATION	0.9999940822517159	WITHOUT_CLASSIFICATION	5.917748284070029E-6	TEST
line 1582	WITHOUT_CLASSIFICATION	0.9999931616932999	WITHOUT_CLASSIFICATION	6.838306700129182E-6	TEST
line 1603	WITHOUT_CLASSIFICATION	0.9999901345847098	WITHOUT_CLASSIFICATION	9.86541529027567E-6	TEST
line 1603	WITHOUT_CLASSIFICATION	0.9999901345847098	WITHOUT_CLASSIFICATION	9.86541529027567E-6	TEST
line 1615	WITHOUT_CLASSIFICATION	0.9999948723193685	WITHOUT_CLASSIFICATION	5.127680631590035E-6	TEST
line 1620	WITHOUT_CLASSIFICATION	0.999991607360892	WITHOUT_CLASSIFICATION	8.392639107973487E-6	TEST
line 1635	WITHOUT_CLASSIFICATION	0.9999933773764983	WITHOUT_CLASSIFICATION	6.62262350166396E-6	TEST
line 1652	WITHOUT_CLASSIFICATION	0.9999939542312066	WITHOUT_CLASSIFICATION	6.0457687934010315E-6	TEST
line 1681	WITHOUT_CLASSIFICATION	0.9999942306101898	WITHOUT_CLASSIFICATION	5.769389810195386E-6	TEST
line 1708	WITHOUT_CLASSIFICATION	0.9999927125910456	WITHOUT_CLASSIFICATION	7.28740895447107E-6	TEST
line 1716	WITHOUT_CLASSIFICATION	0.999995006766816	WITHOUT_CLASSIFICATION	4.993233184008676E-6	TEST
line 1755	WITHOUT_CLASSIFICATION	0.99999486266046	WITHOUT_CLASSIFICATION	5.1373395400142486E-6	TEST
line 1772	WITHOUT_CLASSIFICATION	0.999993718054533	WITHOUT_CLASSIFICATION	6.281945467069239E-6	TEST
line 1789	WITHOUT_CLASSIFICATION	0.999993711162094	WITHOUT_CLASSIFICATION	6.288837905903746E-6	TEST
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9995054283637378	WITHOUT_CLASSIFICATION	4.945716362621051E-4	TEST
ACTIONS_END	WITHOUT_CLASSIFICATION	0.9995054283637378	WITHOUT_CLASSIFICATION	4.945716362621051E-4	TEST
force for args	WITHOUT_CLASSIFICATION	0.9999945471041801	WITHOUT_CLASSIFICATION	5.452895819857995E-6	TEST
last expression should not be void	WITHOUT_CLASSIFICATION	0.9999899612258717	WITHOUT_CLASSIFICATION	1.0038774128363312E-5	TEST
compstmt position includes both parens around it	WITHOUT_CLASSIFICATION	0.9999980149845178	WITHOUT_CLASSIFICATION	1.9850154822786824E-6	TEST
We can assign if we already have variable of that name here or we are the only scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999967979384666	WITHOUT_CLASSIFICATION	3.202061533302326E-6	TEST
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998601996273	WITHOUT_CLASSIFICATION	1.3980037281411669E-7	TEST
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998601996273	WITHOUT_CLASSIFICATION	1.3980037281411669E-7	TEST
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998601996273	WITHOUT_CLASSIFICATION	1.3980037281411669E-7	TEST
ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998601996273	WITHOUT_CLASSIFICATION	1.3980037281411669E-7	TEST
FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9944056887383236	WITHOUT_CLASSIFICATION	0.005594311261676411	TEST
This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:) into individual whenNodes. The primary reason for this is to ensure lazy evaluation of the arguments (when foo,bar,gar:) to prevent side-effects. In the old code this was done using nested when statements, which was awful for interpreter and compilation. Notes: This has semantic equivalence but will not be lexically equivalent. Compiler needs to detect same bodies to simplify bytecode generated.	WITHOUT_CLASSIFICATION	0.9999981157799895	WITHOUT_CLASSIFICATION	1.8842200104933955E-6	TEST
line 313	WITHOUT_CLASSIFICATION	0.9999895261536106	WITHOUT_CLASSIFICATION	1.047384638932427E-5	TEST
line 339	WITHOUT_CLASSIFICATION	0.9999840135096709	WITHOUT_CLASSIFICATION	1.59864903289842E-5	TEST
line 361	WITHOUT_CLASSIFICATION	0.9999899146884074	WITHOUT_CLASSIFICATION	1.0085311592519259E-5	TEST
line 413	WITHOUT_CLASSIFICATION	0.9999925294647798	WITHOUT_CLASSIFICATION	7.47053522023079E-6	TEST
line 451	WITHOUT_CLASSIFICATION	0.9999945293644205	WITHOUT_CLASSIFICATION	5.470635579538271E-6	TEST
line 472	WITHOUT_CLASSIFICATION	0.9999914618122839	WITHOUT_CLASSIFICATION	8.53818771603286E-6	TEST
line 500	WITHOUT_CLASSIFICATION	0.9999889495192504	WITHOUT_CLASSIFICATION	1.1050480749607845E-5	TEST
line 515	WITHOUT_CLASSIFICATION	0.9999939534046695	WITHOUT_CLASSIFICATION	6.046595330507342E-6	TEST
line 555	WITHOUT_CLASSIFICATION	0.9999917874425082	WITHOUT_CLASSIFICATION	8.212557491851999E-6	TEST
line 582	WITHOUT_CLASSIFICATION	0.9999896419395261	WITHOUT_CLASSIFICATION	1.035806047382796E-5	TEST
line 619	WITHOUT_CLASSIFICATION	0.9999935262638625	WITHOUT_CLASSIFICATION	6.4737361374967895E-6	TEST
line 636	WITHOUT_CLASSIFICATION	0.9999896408713561	WITHOUT_CLASSIFICATION	1.035912864387834E-5	TEST
line 669	WITHOUT_CLASSIFICATION	0.9999909706274085	WITHOUT_CLASSIFICATION	9.029372591548542E-6	TEST
line 703	WITHOUT_CLASSIFICATION	0.9999858904708532	WITHOUT_CLASSIFICATION	1.410952914693335E-5	TEST
line 776	WITHOUT_CLASSIFICATION	0.9999923011196533	WITHOUT_CLASSIFICATION	7.698880346682708E-6	TEST
line 814	WITHOUT_CLASSIFICATION	0.9999936349390154	WITHOUT_CLASSIFICATION	6.3650609845459E-6	TEST
line 823	WITHOUT_CLASSIFICATION	0.9999865457420868	WITHOUT_CLASSIFICATION	1.345425791315883E-5	TEST
line 854	WITHOUT_CLASSIFICATION	0.9999917781209605	WITHOUT_CLASSIFICATION	8.221879039412137E-6	TEST
line 872	WITHOUT_CLASSIFICATION	0.9999898974140969	WITHOUT_CLASSIFICATION	1.0102585903072369E-5	TEST
line 905	WITHOUT_CLASSIFICATION	0.9999875218937062	WITHOUT_CLASSIFICATION	1.2478106293825607E-5	TEST
line 925	WITHOUT_CLASSIFICATION	0.9999891244859077	WITHOUT_CLASSIFICATION	1.0875514092285454E-5	TEST
line 958	WITHOUT_CLASSIFICATION	0.9999898305889834	WITHOUT_CLASSIFICATION	1.0169411016644212E-5	TEST
line 992	WITHOUT_CLASSIFICATION	0.9999885060801801	WITHOUT_CLASSIFICATION	1.1493919819960503E-5	TEST
line 1047	WITHOUT_CLASSIFICATION	0.999994494443932	WITHOUT_CLASSIFICATION	5.505556068017168E-6	TEST
line 1072	WITHOUT_CLASSIFICATION	0.9999932898710607	WITHOUT_CLASSIFICATION	6.710128939154063E-6	TEST
line 1081	WITHOUT_CLASSIFICATION	0.9999925475773717	WITHOUT_CLASSIFICATION	7.452422628341612E-6	TEST
line 1108	WITHOUT_CLASSIFICATION	0.999993026900744	WITHOUT_CLASSIFICATION	6.973099255971638E-6	TEST
line 1136	WITHOUT_CLASSIFICATION	0.9999933817961272	WITHOUT_CLASSIFICATION	6.618203872829696E-6	TEST
line 1168	WITHOUT_CLASSIFICATION	0.99999448160829	WITHOUT_CLASSIFICATION	5.518391710007205E-6	TEST
line 1192	WITHOUT_CLASSIFICATION	0.9999930541598454	WITHOUT_CLASSIFICATION	6.945840154582605E-6	TEST
line 1241	WITHOUT_CLASSIFICATION	0.9999938658026327	WITHOUT_CLASSIFICATION	6.1341973673124E-6	TEST
line 1267	WITHOUT_CLASSIFICATION	0.999994186679965	WITHOUT_CLASSIFICATION	5.8133200350049685E-6	TEST
line 1286	WITHOUT_CLASSIFICATION	0.9999932881448774	WITHOUT_CLASSIFICATION	6.711855122632368E-6	TEST
line 1301	WITHOUT_CLASSIFICATION	0.9999914711966291	WITHOUT_CLASSIFICATION	8.52880337078415E-6	TEST
line 1314	WITHOUT_CLASSIFICATION	0.9999932527164055	WITHOUT_CLASSIFICATION	6.747283594427425E-6	TEST
line 1333	WITHOUT_CLASSIFICATION	0.9999926889454904	WITHOUT_CLASSIFICATION	7.311054509492891E-6	TEST
line 1362	WITHOUT_CLASSIFICATION	0.9999918868636082	WITHOUT_CLASSIFICATION	8.113136391756693E-6	TEST
line 1395	WITHOUT_CLASSIFICATION	0.9999921708576045	WITHOUT_CLASSIFICATION	7.829142395521917E-6	TEST
line 1420	WITHOUT_CLASSIFICATION	0.9999915606472578	WITHOUT_CLASSIFICATION	8.439352742249901E-6	TEST
line 1439	WITHOUT_CLASSIFICATION	0.9999923484065436	WITHOUT_CLASSIFICATION	7.651593456465868E-6	TEST
line 1476	WITHOUT_CLASSIFICATION	0.9999952820178155	WITHOUT_CLASSIFICATION	4.717982184545606E-6	TEST
line 1535	WITHOUT_CLASSIFICATION	0.9999930223825773	WITHOUT_CLASSIFICATION	6.977617422680508E-6	TEST
line 1588	WITHOUT_CLASSIFICATION	0.9999942443204509	WITHOUT_CLASSIFICATION	5.755679549095778E-6	TEST
line 1618	WITHOUT_CLASSIFICATION	0.9999943405578172	WITHOUT_CLASSIFICATION	5.659442182763642E-6	TEST
line 1643	WITHOUT_CLASSIFICATION	0.9999934958098816	WITHOUT_CLASSIFICATION	6.5041901184130356E-6	TEST
line 1669	WITHOUT_CLASSIFICATION	0.9999940044785743	WITHOUT_CLASSIFICATION	5.9955214257054655E-6	TEST
line 1728	WITHOUT_CLASSIFICATION	0.9999932758148813	WITHOUT_CLASSIFICATION	6.724185118783542E-6	TEST
line 1753	WITHOUT_CLASSIFICATION	0.9999933897951135	WITHOUT_CLASSIFICATION	6.610204886570149E-6	TEST
line 1779	WITHOUT_CLASSIFICATION	0.9999940269429858	WITHOUT_CLASSIFICATION	5.973057014256043E-6	TEST
line 1794	WITHOUT_CLASSIFICATION	0.9999943590460844	WITHOUT_CLASSIFICATION	5.640953915601925E-6	TEST
line 1812	WITHOUT_CLASSIFICATION	0.9999930404343779	WITHOUT_CLASSIFICATION	6.959565622138721E-6	TEST
line 1837	WITHOUT_CLASSIFICATION	0.9999932388902774	WITHOUT_CLASSIFICATION	6.7611097226352195E-6	TEST
line 1895	WITHOUT_CLASSIFICATION	0.9999936230508963	WITHOUT_CLASSIFICATION	6.3769491036767664E-6	TEST
line 1925	WITHOUT_CLASSIFICATION	0.9999930790569331	WITHOUT_CLASSIFICATION	6.9209430668799455E-6	TEST
line 1950	WITHOUT_CLASSIFICATION	0.9999926761651686	WITHOUT_CLASSIFICATION	7.323834831330365E-6	TEST
line 1992	WITHOUT_CLASSIFICATION	0.9999926799888949	WITHOUT_CLASSIFICATION	7.3200111051376074E-6	TEST
line 2014	WITHOUT_CLASSIFICATION	0.999989827424155	WITHOUT_CLASSIFICATION	1.0172575845130386E-5	TEST
Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999977167147324	WITHOUT_CLASSIFICATION	2.2832852675873956E-6	TEST
If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.999999931780356	WITHOUT_CLASSIFICATION	6.821964405216817E-8	TEST
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999995662862715	WITHOUT_CLASSIFICATION	4.3371372848360045E-7	TEST
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999995662862715	WITHOUT_CLASSIFICATION	4.3371372848360045E-7	TEST
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999995662862715	WITHOUT_CLASSIFICATION	4.3371372848360045E-7	TEST
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999995662862715	WITHOUT_CLASSIFICATION	4.3371372848360045E-7	TEST
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999995662862715	WITHOUT_CLASSIFICATION	4.3371372848360045E-7	TEST
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999995662862715	WITHOUT_CLASSIFICATION	4.3371372848360045E-7	TEST
This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999995662862715	WITHOUT_CLASSIFICATION	4.3371372848360045E-7	TEST
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999860576536	WITHOUT_CLASSIFICATION	1.3942346401763192E-7	TEST
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999860576536	WITHOUT_CLASSIFICATION	1.3942346401763192E-7	TEST
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999860576536	WITHOUT_CLASSIFICATION	1.3942346401763192E-7	TEST
A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999999860576536	WITHOUT_CLASSIFICATION	1.3942346401763192E-7	TEST
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.99998237433863	WITHOUT_CLASSIFICATION	1.7625661370013044E-5	TEST
happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.99998237433863	WITHOUT_CLASSIFICATION	1.7625661370013044E-5	TEST
We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the 'b' will get put into this new dynamic scope. The original scope does not see the new 'b' and successive evals with this binding will. I take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. One crappy outcome of this design is it requires Dynamic and Static scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999768431268395	WITHOUT_CLASSIFICATION	2.3156873160430335E-5	TEST
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999712414884	WITHOUT_CLASSIFICATION	2.875851153095526E-8	TEST
Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999712414884	WITHOUT_CLASSIFICATION	2.875851153095526E-8	TEST
tc under method self under method name args	WITHOUT_CLASSIFICATION	0.9999978730561718	WITHOUT_CLASSIFICATION	2.1269438280845365E-6	TEST
allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999989053033506	WITHOUT_CLASSIFICATION	1.0946966495267443E-6	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999679840905	WITHOUT_CLASSIFICATION	3.2015909565357456E-8	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999679840905	WITHOUT_CLASSIFICATION	3.2015909565357456E-8	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999679840905	WITHOUT_CLASSIFICATION	3.2015909565357456E-8	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999679840905	WITHOUT_CLASSIFICATION	3.2015909565357456E-8	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999679840905	WITHOUT_CLASSIFICATION	3.2015909565357456E-8	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999679840905	WITHOUT_CLASSIFICATION	3.2015909565357456E-8	TEST
IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999679840905	WITHOUT_CLASSIFICATION	3.2015909565357456E-8	TEST
IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999800466379	WITHOUT_CLASSIFICATION	1.9953362161092325E-8	TEST
IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999508323337	WITHOUT_CLASSIFICATION	4.916766629223933E-8	TEST
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999978311638644	WITHOUT_CLASSIFICATION	2.1688361356397722E-6	TEST
trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999978311638644	WITHOUT_CLASSIFICATION	2.1688361356397722E-6	TEST
Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999591532562	WITHOUT_CLASSIFICATION	4.084674365863846E-8	TEST
end suffix iteration	WITHOUT_CLASSIFICATION	0.9999988614569698	WITHOUT_CLASSIFICATION	1.1385430302617122E-6	TEST
end suffix iteration	WITHOUT_CLASSIFICATION	0.9999988614569698	WITHOUT_CLASSIFICATION	1.1385430302617122E-6	TEST
Unfortunately, the number of digits in the exponent is not clearly defined in Ruby documentation. This is a platform/version-dependent behavior. On Linux/Mac/Cygwinnix, two digits are used. On Windows, 3 digits are used. It is desirable for JRuby to have consistent behavior, and the two digits behavior was selected. This is also in sync with "Java-native" sprintf behavior (java.util.Formatter). E or e	WITHOUT_CLASSIFICATION	0.9999999358887097	WITHOUT_CLASSIFICATION	6.411129017701672E-8	TEST
Represents the the dynamic portion of scoping information. The variableValues are the values of assigned local or block variables. The staticScope identifies which sort of scope this is (block or local). Properties of Dynamic Scopes: 1. static and dynamic scopes have the same number of names to values 2. size of variables (and thus names) is determined during parsing. So those structured do not need to change FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents. This is harmless (other than wasting memory), but we should not do that. We can fix this in two ways: 1. Fix all callers 2. Check parent that is passed in and make if new instance is local, then its parent is not local	WITHOUT_CLASSIFICATION	0.9995804974663342	WITHOUT_CLASSIFICATION	4.1950253366593163E-4	TEST
This method handles '' patterns and delegates to fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999999782851441	WITHOUT_CLASSIFICATION	2.1714855980773758E-8	TEST
Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.999999990599995	WITHOUT_CLASSIFICATION	9.400005019294097E-9	TEST
double precision, native double precision, native	WITHOUT_CLASSIFICATION	0.9999981745938347	WITHOUT_CLASSIFICATION	1.825406165348282E-6	TEST
64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999980121584428	WITHOUT_CLASSIFICATION	1.9878415572291217E-6	TEST
Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.999998682162043	WITHOUT_CLASSIFICATION	1.3178379569288474E-6	TEST
calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999996207022249	WITHOUT_CLASSIFICATION	3.792977750963806E-7	TEST
processes seem to have some peculiar locking sequences, so we need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9997097694628463	WITHOUT_CLASSIFICATION	2.9023053715368567E-4	TEST
MRI behavior: for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999769235617619	WITHOUT_CLASSIFICATION	2.307643823817144E-5	TEST
this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9995456177333991	WITHOUT_CLASSIFICATION	4.543822666009519E-4	TEST
exec needs to behave differently in-process, because it's technically supposed to replace the calling process. So if we're supposed to run in-process, we allow it to use the default streams and not use pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999951563336	WITHOUT_CLASSIFICATION	4.843666319363908E-9	TEST
snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997251609142	WITHOUT_CLASSIFICATION	2.7483908582541466E-7	TEST
The problem we trying to solve below: STDIN in Java is blocked and non-interruptible, so if we invoke read on it, we might never be able to interrupt such thread. So, we use in.available() to see if there is any input ready, and only then read it. But this approach can't tell whether the end of stream reached or not, so we might end up looping right at the end of the stream. Well, at least, we can improve the situation by checking if some input was ever available, and if so, not checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999833017833301	WITHOUT_CLASSIFICATION	1.6698216669978486E-5	TEST
first digit is always printed	WITHOUT_CLASSIFICATION	0.999998912439114	WITHOUT_CLASSIFICATION	1.087560886097125E-6	TEST
an empirically derived rule: precision applies to significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999999771550221	WITHOUT_CLASSIFICATION	2.2844977974911364E-8	TEST
an official rule, clarified: if the exponent <clarif>after adjusting for exponent form</clarif> is < -4, or the exponent <clarif>after adjusting for exponent form</clarif> is greater than the precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999997947183873	WITHOUT_CLASSIFICATION	2.052816126601124E-7	TEST
in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.99998465046725	WITHOUT_CLASSIFICATION	1.53495327499839E-5	TEST
now some data...	WITHOUT_CLASSIFICATION	0.9999953601753861	WITHOUT_CLASSIFICATION	4.63982461385395E-6	TEST
now some data...	WITHOUT_CLASSIFICATION	0.9999953601753861	WITHOUT_CLASSIFICATION	4.63982461385395E-6	TEST
MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999987405228974	WITHOUT_CLASSIFICATION	1.2594771026401302E-6	TEST
else catch oversize below	WITHOUT_CLASSIFICATION	0.999998543903819	WITHOUT_CLASSIFICATION	1.4560961809518478E-6	TEST
calculation for simple (and typical) case, adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999548855167	WITHOUT_CLASSIFICATION	4.51144833063488E-8	TEST
switch	WITHOUT_CLASSIFICATION	0.9999628122825438	WITHOUT_CLASSIFICATION	3.7187717456290736E-5	TEST
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999929706222459	WITHOUT_CLASSIFICATION	7.029377754092067E-6	TEST
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999929706222459	WITHOUT_CLASSIFICATION	7.029377754092067E-6	TEST
utf8 lead byte	WITHOUT_CLASSIFICATION	0.9999929706222459	WITHOUT_CLASSIFICATION	7.029377754092067E-6	TEST
could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.999998943939324	WITHOUT_CLASSIFICATION	1.0560606759166816E-6	TEST
We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.999985574116131	WITHOUT_CLASSIFICATION	1.4425883868974304E-5	TEST
call chmod after we created the RandomAccesFile because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999999898336842	WITHOUT_CLASSIFICATION	1.0166315842393944E-8	TEST
attempt to set the permissions, if we have been passed a POSIX instance, and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999999811759818	WITHOUT_CLASSIFICATION	1.8824018250866283E-8	TEST
When reading into a heap buffer, the jvm allocates a temporary direct ByteBuffer of the requested size. To avoid allocating a huge direct buffer when doing ludicrous reads (e.g. 1G or more) we split the read up into chunks of no more than 1M	WITHOUT_CLASSIFICATION	0.9999965956805044	WITHOUT_CLASSIFICATION	3.4043194956371118E-6	TEST
If it is a file channel, then we can pre-allocate the output buffer to the total size of buffered + remaining bytes in file	WITHOUT_CLASSIFICATION	0.9999999888923741	WITHOUT_CLASSIFICATION	1.1107625984494679E-8	TEST
Cannot discern the total read length - allocate at least enough for the buffered data	WITHOUT_CLASSIFICATION	0.9999999442378928	WITHOUT_CLASSIFICATION	5.576210708843172E-8	TEST
Copy what is in the buffer, if there is some buffered data	WITHOUT_CLASSIFICATION	0.9999986624710305	WITHOUT_CLASSIFICATION	1.3375289694309929E-6	TEST
append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999936500463	WITHOUT_CLASSIFICATION	6.349953706163616E-9	TEST
already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999984758257778	WITHOUT_CLASSIFICATION	1.524174222155575E-6	TEST
reset buffer	WITHOUT_CLASSIFICATION	0.9999963468552273	WITHOUT_CLASSIFICATION	3.6531447727124466E-6	TEST
Synchronize and re-check to avoid creating more than one Selector per provider	WITHOUT_CLASSIFICATION	0.999999419916903	WITHOUT_CLASSIFICATION	5.800830970374211E-7	TEST
TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.999428738905567	WITHOUT_CLASSIFICATION	5.712610944329993E-4	TEST
Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999800289247073	WITHOUT_CLASSIFICATION	1.9971075292719575E-5	TEST
Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.999999173909585	WITHOUT_CLASSIFICATION	8.26090415096772E-7	TEST
value equality result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999838241834876	WITHOUT_CLASSIFICATION	1.617581651232567E-5	TEST
Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999992012222438	WITHOUT_CLASSIFICATION	7.987777562325654E-7	TEST
Since we don't have any other error reporting mechanism, we add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999651731564533	WITHOUT_CLASSIFICATION	3.482684354683081E-5	TEST
change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999999754361695	WITHOUT_CLASSIFICATION	2.4563830554594292E-8	TEST
