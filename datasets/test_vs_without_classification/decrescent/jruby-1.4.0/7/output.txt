// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999974702750539	WITHOUT_CLASSIFICATION	2.5297249460897416E-6	TEST
// TODO make an assert here	TEST	0.9978641427890902	WITHOUT_CLASSIFICATION	0.002135857210909782	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.8150247137664677	WITHOUT_CLASSIFICATION	0.18497528623353224	TEST
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9998599545012268	WITHOUT_CLASSIFICATION	1.4004549877329192E-4	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9999874029449128	WITHOUT_CLASSIFICATION	1.2597055087092008E-5	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999887603071866	WITHOUT_CLASSIFICATION	1.1239692813278115E-5	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999999895692596	WITHOUT_CLASSIFICATION	1.0430740439662168E-8	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999995089450562	WITHOUT_CLASSIFICATION	4.910549438781592E-7	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999926130908873	WITHOUT_CLASSIFICATION	7.386909112740601E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999926130908873	WITHOUT_CLASSIFICATION	7.386909112740601E-6	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999828657411381	WITHOUT_CLASSIFICATION	1.7134258861886983E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999828657411381	WITHOUT_CLASSIFICATION	1.7134258861886983E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999813491697132	WITHOUT_CLASSIFICATION	1.8650830286900193E-5	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999982275812448	WITHOUT_CLASSIFICATION	1.7724187552381259E-6	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999994669347968	WITHOUT_CLASSIFICATION	5.330652031791061E-7	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999994786259586	WITHOUT_CLASSIFICATION	5.213740413532653E-7	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999996090860097	WITHOUT_CLASSIFICATION	3.909139903039088E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999996090860097	WITHOUT_CLASSIFICATION	3.909139903039088E-6	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999994203190036	WITHOUT_CLASSIFICATION	5.79680996520966E-7	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999995803409029	WITHOUT_CLASSIFICATION	4.196590970928791E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999995803409029	WITHOUT_CLASSIFICATION	4.196590970928791E-6	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9999824483042886	WITHOUT_CLASSIFICATION	1.7551695711440102E-5	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.999989618829663	WITHOUT_CLASSIFICATION	1.0381170337081907E-5	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.99999270325776	WITHOUT_CLASSIFICATION	7.296742239979517E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.99999270325776	WITHOUT_CLASSIFICATION	7.296742239979517E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.99999270325776	WITHOUT_CLASSIFICATION	7.296742239979517E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.99999270325776	WITHOUT_CLASSIFICATION	7.296742239979517E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.99999270325776	WITHOUT_CLASSIFICATION	7.296742239979517E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.99999270325776	WITHOUT_CLASSIFICATION	7.296742239979517E-6	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.99999270325776	WITHOUT_CLASSIFICATION	7.296742239979517E-6	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999812992276391	WITHOUT_CLASSIFICATION	1.870077236092668E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999812992276391	WITHOUT_CLASSIFICATION	1.870077236092668E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999812992276391	WITHOUT_CLASSIFICATION	1.870077236092668E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999812992276391	WITHOUT_CLASSIFICATION	1.870077236092668E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999812992276391	WITHOUT_CLASSIFICATION	1.870077236092668E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999812992276391	WITHOUT_CLASSIFICATION	1.870077236092668E-5	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999812992276391	WITHOUT_CLASSIFICATION	1.870077236092668E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999769501134119	WITHOUT_CLASSIFICATION	2.3049886588018477E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999769501134119	WITHOUT_CLASSIFICATION	2.3049886588018477E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999769501134119	WITHOUT_CLASSIFICATION	2.3049886588018477E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999769501134119	WITHOUT_CLASSIFICATION	2.3049886588018477E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999769501134119	WITHOUT_CLASSIFICATION	2.3049886588018477E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999769501134119	WITHOUT_CLASSIFICATION	2.3049886588018477E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999995733352327	WITHOUT_CLASSIFICATION	4.2666476729283965E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999995733352327	WITHOUT_CLASSIFICATION	4.2666476729283965E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999995733352327	WITHOUT_CLASSIFICATION	4.2666476729283965E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999995733352327	WITHOUT_CLASSIFICATION	4.2666476729283965E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999995733352327	WITHOUT_CLASSIFICATION	4.2666476729283965E-6	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999995733352327	WITHOUT_CLASSIFICATION	4.2666476729283965E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999954196127349	WITHOUT_CLASSIFICATION	4.580387265166849E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999954196127349	WITHOUT_CLASSIFICATION	4.580387265166849E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999954196127349	WITHOUT_CLASSIFICATION	4.580387265166849E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999954196127349	WITHOUT_CLASSIFICATION	4.580387265166849E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999954196127349	WITHOUT_CLASSIFICATION	4.580387265166849E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999954196127349	WITHOUT_CLASSIFICATION	4.580387265166849E-6	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999954196127349	WITHOUT_CLASSIFICATION	4.580387265166849E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999954022946157	WITHOUT_CLASSIFICATION	4.597705384259607E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999954022946157	WITHOUT_CLASSIFICATION	4.597705384259607E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999954022946157	WITHOUT_CLASSIFICATION	4.597705384259607E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999954022946157	WITHOUT_CLASSIFICATION	4.597705384259607E-6	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.999967963004405	WITHOUT_CLASSIFICATION	3.203699559497578E-5	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.999967963004405	WITHOUT_CLASSIFICATION	3.203699559497578E-5	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// switch	WITHOUT_CLASSIFICATION	0.999999397369082	WITHOUT_CLASSIFICATION	6.026309179865737E-7	TEST
// return result	WITHOUT_CLASSIFICATION	0.9999999296127214	WITHOUT_CLASSIFICATION	7.038727848534085E-8	TEST
// name	WITHOUT_CLASSIFICATION	0.9999986408291126	WITHOUT_CLASSIFICATION	1.3591708873441658E-6	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999993601220353	WITHOUT_CLASSIFICATION	6.398779647709893E-7	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999998673116933	WITHOUT_CLASSIFICATION	1.3268830657620332E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996822194233	WITHOUT_CLASSIFICATION	3.1778057677324087E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996822194233	WITHOUT_CLASSIFICATION	3.1778057677324087E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996822194233	WITHOUT_CLASSIFICATION	3.1778057677324087E-7	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996822194233	WITHOUT_CLASSIFICATION	3.1778057677324087E-7	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999998402855983	WITHOUT_CLASSIFICATION	1.59714401771526E-7	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999999853648489	WITHOUT_CLASSIFICATION	1.4635150959345607E-8	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999997583692234	WITHOUT_CLASSIFICATION	2.4163077658221554E-7	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999998666394767	WITHOUT_CLASSIFICATION	1.3336052329441578E-7	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999993231770121	WITHOUT_CLASSIFICATION	6.768229879582331E-7	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999790040006	WITHOUT_CLASSIFICATION	2.0995999304874836E-8	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999998960689737	WITHOUT_CLASSIFICATION	1.0393102636335721E-7	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999845213949	WITHOUT_CLASSIFICATION	1.5478605043655167E-8	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999743107959	WITHOUT_CLASSIFICATION	2.5689204040049658E-8	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999993928913515	WITHOUT_CLASSIFICATION	6.071086484556074E-7	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999899323726	WITHOUT_CLASSIFICATION	1.0067627381513539E-8	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.999999986810618	WITHOUT_CLASSIFICATION	1.3189382135385864E-8	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999883658817532	WITHOUT_CLASSIFICATION	1.1634118246787188E-5	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999999670446571	WITHOUT_CLASSIFICATION	3.2955342963835663E-8	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997908678073	WITHOUT_CLASSIFICATION	2.0913219268693787E-7	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999851465036554	WITHOUT_CLASSIFICATION	1.4853496344584816E-5	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999999875287988	WITHOUT_CLASSIFICATION	1.2471201204027543E-8	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999996822194233	WITHOUT_CLASSIFICATION	3.1778057677324087E-7	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999658434385	WITHOUT_CLASSIFICATION	3.4156561487799705E-8	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999998868193732	WITHOUT_CLASSIFICATION	1.1318062686038727E-7	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999999833900695	WITHOUT_CLASSIFICATION	1.6609930493866614E-7	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999985329941815	WITHOUT_CLASSIFICATION	1.4670058185158854E-6	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999999719342736	WITHOUT_CLASSIFICATION	2.8065726367313856E-8	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.999999660125355	WITHOUT_CLASSIFICATION	3.3987464489134595E-7	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999998818579608	WITHOUT_CLASSIFICATION	1.1814203913324975E-7	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999996926733494	WITHOUT_CLASSIFICATION	3.0732665053973735E-7	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999994994670642	WITHOUT_CLASSIFICATION	5.005329357053196E-7	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999998140445968	WITHOUT_CLASSIFICATION	1.859554032993537E-7	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.999958400654801	WITHOUT_CLASSIFICATION	4.159934519904689E-5	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.999999729277247	WITHOUT_CLASSIFICATION	2.7072275291922563E-7	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999998857858198	WITHOUT_CLASSIFICATION	1.1421418013493134E-7	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999974306814123	WITHOUT_CLASSIFICATION	2.5693185876429263E-6	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999940859954178	WITHOUT_CLASSIFICATION	5.914004582112813E-6	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999964691275577	WITHOUT_CLASSIFICATION	3.5308724422022784E-6	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999998137154028	WITHOUT_CLASSIFICATION	1.8628459706851464E-7	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999452538619	WITHOUT_CLASSIFICATION	5.474613810766263E-8	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9982307340867537	WITHOUT_CLASSIFICATION	0.0017692659132462838	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999993002356222	WITHOUT_CLASSIFICATION	6.997643776867504E-7	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999993787723658	WITHOUT_CLASSIFICATION	6.212276343623818E-7	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999989528017904	WITHOUT_CLASSIFICATION	1.047198209675057E-6	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999997391700891	WITHOUT_CLASSIFICATION	2.60829910899779E-7	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9999779531870772	WITHOUT_CLASSIFICATION	2.2046812922819174E-5	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999996146161768	WITHOUT_CLASSIFICATION	3.853838231054337E-7	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9999973859382207	WITHOUT_CLASSIFICATION	2.61406177930353E-6	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999997631924705	WITHOUT_CLASSIFICATION	2.368075295061874E-7	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999999322817188	WITHOUT_CLASSIFICATION	6.771828127661539E-8	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999747666288	WITHOUT_CLASSIFICATION	2.5233371192766065E-8	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999999783922195	WITHOUT_CLASSIFICATION	2.1607780440095506E-8	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999992650173539	WITHOUT_CLASSIFICATION	7.349826459603787E-7	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999997875986798	WITHOUT_CLASSIFICATION	2.124013201731804E-7	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999996544014547	WITHOUT_CLASSIFICATION	3.455985453038651E-7	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999537359938	WITHOUT_CLASSIFICATION	4.626400613183165E-8	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999999851753186	WITHOUT_CLASSIFICATION	1.4824681473983568E-8	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999998891231119	WITHOUT_CLASSIFICATION	1.1087688808545912E-7	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999999732092169	WITHOUT_CLASSIFICATION	2.6790783148439475E-8	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999048792819	WITHOUT_CLASSIFICATION	9.512071803784065E-8	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.999998957201801	WITHOUT_CLASSIFICATION	1.0427981991063563E-6	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999674320137	WITHOUT_CLASSIFICATION	3.256798629428541E-7	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999836067932	WITHOUT_CLASSIFICATION	1.6393206794512705E-8	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999315429204	WITHOUT_CLASSIFICATION	6.845707961274657E-8	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999979618717921	WITHOUT_CLASSIFICATION	2.0381282078692667E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999985936569358	WITHOUT_CLASSIFICATION	1.4063430641284976E-6	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999985936569358	WITHOUT_CLASSIFICATION	1.4063430641284976E-6	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9999972444138273	WITHOUT_CLASSIFICATION	2.755586172671659E-6	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999999918194863	WITHOUT_CLASSIFICATION	8.180513697171062E-9	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.999996209135725	WITHOUT_CLASSIFICATION	3.790864274981001E-6	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999999747306046	WITHOUT_CLASSIFICATION	2.5269395348570118E-8	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999997692951519	WITHOUT_CLASSIFICATION	2.307048481230494E-7	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999987685857009	WITHOUT_CLASSIFICATION	1.2314142991311646E-6	TEST
// ???	WITHOUT_CLASSIFICATION	0.9999978980813771	WITHOUT_CLASSIFICATION	2.101918622963108E-6	TEST
// PID	WITHOUT_CLASSIFICATION	0.9999946058569338	WITHOUT_CLASSIFICATION	5.394143066214543E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999315429204	WITHOUT_CLASSIFICATION	6.845707961274657E-8	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999627785675	WITHOUT_CLASSIFICATION	3.7221432468900034E-8	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999993579599366	WITHOUT_CLASSIFICATION	6.420400633566068E-7	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999971764489	WITHOUT_CLASSIFICATION	2.8235511348449785E-9	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999918825981	WITHOUT_CLASSIFICATION	8.117401808904584E-9	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999998604738337	WITHOUT_CLASSIFICATION	1.3952616631464206E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998530784087	WITHOUT_CLASSIFICATION	1.4692159136813086E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998530784087	WITHOUT_CLASSIFICATION	1.4692159136813086E-7	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998530784087	WITHOUT_CLASSIFICATION	1.4692159136813086E-7	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999999873807199	WITHOUT_CLASSIFICATION	1.261927999536363E-8	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999981164355048	WITHOUT_CLASSIFICATION	1.8835644950931272E-6	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999998882752923	WITHOUT_CLASSIFICATION	1.117247078177566E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.999999041147031	WITHOUT_CLASSIFICATION	9.588529691250416E-7	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999998449700046	WITHOUT_CLASSIFICATION	1.5502999541121775E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999999485958424	WITHOUT_CLASSIFICATION	5.1404157627442146E-8	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999999558154028	WITHOUT_CLASSIFICATION	4.418459716731759E-8	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999456223005	WITHOUT_CLASSIFICATION	5.4377699542763445E-8	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999997607964858	WITHOUT_CLASSIFICATION	2.3920351427852313E-7	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999997607964858	WITHOUT_CLASSIFICATION	2.3920351427852313E-7	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.999999490937086	WITHOUT_CLASSIFICATION	5.090629139215085E-7	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999971970353609	WITHOUT_CLASSIFICATION	2.802964639102359E-6	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999996765749529	WITHOUT_CLASSIFICATION	3.2342504710810714E-7	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999996765749529	WITHOUT_CLASSIFICATION	3.2342504710810714E-7	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999998330767118	WITHOUT_CLASSIFICATION	1.6692328817839647E-7	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999625634509	WITHOUT_CLASSIFICATION	3.743654904558304E-8	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999990115866181	WITHOUT_CLASSIFICATION	9.88413381916627E-7	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.999999925217569	WITHOUT_CLASSIFICATION	7.478243098392776E-8	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999997345893022	WITHOUT_CLASSIFICATION	2.654106977961772E-7	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999998742998625	WITHOUT_CLASSIFICATION	1.2570013757945785E-7	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999987323678713	WITHOUT_CLASSIFICATION	1.2676321286730306E-6	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999985937778261	WITHOUT_CLASSIFICATION	1.4062221739145517E-6	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999998479180967	WITHOUT_CLASSIFICATION	1.520819032840684E-7	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999998706806318	WITHOUT_CLASSIFICATION	1.293193682105151E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999315429204	WITHOUT_CLASSIFICATION	6.845707961274657E-8	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.99999504231331	WITHOUT_CLASSIFICATION	4.957686689928146E-6	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999444803263	WITHOUT_CLASSIFICATION	5.5519673783417665E-8	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999998902424838	WITHOUT_CLASSIFICATION	1.0975751614357734E-7	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999984787320202	WITHOUT_CLASSIFICATION	1.5212679798067292E-6	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999992354214088	WITHOUT_CLASSIFICATION	7.64578591182293E-7	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999921588682161	WITHOUT_CLASSIFICATION	7.841131783842114E-6	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999995404652345	WITHOUT_CLASSIFICATION	4.595347655138941E-7	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999988910301275	WITHOUT_CLASSIFICATION	1.108969872528816E-6	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999998923133527	WITHOUT_CLASSIFICATION	1.0768664730913017E-7	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999996425231212	WITHOUT_CLASSIFICATION	3.5747687873156727E-7	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999999634960881	WITHOUT_CLASSIFICATION	3.6503911923832354E-8	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999650815716	WITHOUT_CLASSIFICATION	3.491842849173608E-8	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999999633531076	WITHOUT_CLASSIFICATION	3.664689240894319E-8	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999999955933476	WITHOUT_CLASSIFICATION	4.406652408525341E-8	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9998603684916902	WITHOUT_CLASSIFICATION	1.3963150830978964E-4	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999999880990771	WITHOUT_CLASSIFICATION	1.190092294642042E-8	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.999999972629965	WITHOUT_CLASSIFICATION	2.7370034921623146E-8	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999998924030057	WITHOUT_CLASSIFICATION	1.0759699428340272E-7	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999999924329166	WITHOUT_CLASSIFICATION	7.56708345542097E-9	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.999999970769289	WITHOUT_CLASSIFICATION	2.9230710869766007E-8	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999999863385733	WITHOUT_CLASSIFICATION	1.3661426500641379E-8	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999992739194	WITHOUT_CLASSIFICATION	7.260806976839087E-10	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999997665815	WITHOUT_CLASSIFICATION	2.3341858390969407E-10	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999987033858182	WITHOUT_CLASSIFICATION	1.2966141817984241E-6	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999998317325971	WITHOUT_CLASSIFICATION	1.6826740291029393E-7	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999997915139429	WITHOUT_CLASSIFICATION	2.0848605716147574E-7	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.999996982432536	WITHOUT_CLASSIFICATION	3.0175674639208154E-6	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999999919247942	WITHOUT_CLASSIFICATION	8.075205939801286E-9	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999958381239	WITHOUT_CLASSIFICATION	4.161876094092377E-9	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999997921338527	WITHOUT_CLASSIFICATION	2.0786614734887727E-7	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999893746762	WITHOUT_CLASSIFICATION	1.0625323974012874E-8	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999999686143585	WITHOUT_CLASSIFICATION	3.138564149865944E-8	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999908071565795	WITHOUT_CLASSIFICATION	9.19284342042568E-6	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999999108672658	WITHOUT_CLASSIFICATION	8.91327342601932E-8	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.999999731954232	WITHOUT_CLASSIFICATION	2.6804576806491366E-7	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999981109537296	WITHOUT_CLASSIFICATION	1.8890462704190039E-6	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999999899203421	WITHOUT_CLASSIFICATION	1.0079657903055835E-7	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999727524446704	WITHOUT_CLASSIFICATION	2.7247555329535966E-5	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999998948723686	WITHOUT_CLASSIFICATION	1.0512763142929715E-7	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999578100993	WITHOUT_CLASSIFICATION	4.218990062550115E-8	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999999406249179	WITHOUT_CLASSIFICATION	5.937508212238365E-8	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999999509718626	WITHOUT_CLASSIFICATION	4.902813750380362E-8	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999996339396182	WITHOUT_CLASSIFICATION	3.6606038174257953E-7	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999999440944708	WITHOUT_CLASSIFICATION	5.590552906572138E-8	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999998516704396	WITHOUT_CLASSIFICATION	1.483295604137164E-7	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999996979232594	WITHOUT_CLASSIFICATION	3.02076740524204E-7	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999997207945832	WITHOUT_CLASSIFICATION	2.792054168177434E-7	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999999517919185	WITHOUT_CLASSIFICATION	4.8208081529226285E-8	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999999690074561	WITHOUT_CLASSIFICATION	3.099254389365663E-8	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999999897358837	WITHOUT_CLASSIFICATION	1.0264116328356637E-8	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999999767230018	WITHOUT_CLASSIFICATION	2.3276998118290394E-8	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999999460836072	WITHOUT_CLASSIFICATION	5.391639273880118E-8	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.999999931705632	WITHOUT_CLASSIFICATION	6.829436806522048E-8	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999999804713283	WITHOUT_CLASSIFICATION	1.9528671593745155E-8	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.999999783800082	WITHOUT_CLASSIFICATION	2.161999179939771E-7	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999999840003803	WITHOUT_CLASSIFICATION	1.5999619711854855E-8	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999999368841956	WITHOUT_CLASSIFICATION	6.311580435160067E-8	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999999573602814	WITHOUT_CLASSIFICATION	4.2639718641133776E-8	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999999506121199	WITHOUT_CLASSIFICATION	4.9387880136079205E-8	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999999689369115	WITHOUT_CLASSIFICATION	3.1063088594059033E-8	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999975822166877	WITHOUT_CLASSIFICATION	2.417783312383361E-6	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999975822166877	WITHOUT_CLASSIFICATION	2.417783312383361E-6	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999993983598644	WITHOUT_CLASSIFICATION	6.016401357138261E-7	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999993983598644	WITHOUT_CLASSIFICATION	6.016401357138261E-7	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999976333147854	WITHOUT_CLASSIFICATION	2.3666852144603697E-6	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999976333147854	WITHOUT_CLASSIFICATION	2.3666852144603697E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999981933763912	WITHOUT_CLASSIFICATION	1.8066236087931372E-6	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9999981933763912	WITHOUT_CLASSIFICATION	1.8066236087931372E-6	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999991660124469	WITHOUT_CLASSIFICATION	8.33987553177196E-7	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999998604968771	WITHOUT_CLASSIFICATION	1.3950312297102784E-7	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996920099522	WITHOUT_CLASSIFICATION	3.0799004783256727E-7	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999980177138074	WITHOUT_CLASSIFICATION	1.982286192574048E-6	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999998747500466	WITHOUT_CLASSIFICATION	1.2524995342173008E-7	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999943419151982	WITHOUT_CLASSIFICATION	5.65808480176858E-6	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999933557104695	WITHOUT_CLASSIFICATION	6.644289530491558E-6	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999452015927	WITHOUT_CLASSIFICATION	5.4798407239471454E-8	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.999999932437358	WITHOUT_CLASSIFICATION	6.756264206312768E-8	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999995809061293	WITHOUT_CLASSIFICATION	4.190938707179483E-7	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999996776500583	WITHOUT_CLASSIFICATION	3.2234994170424227E-7	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999998852449525	WITHOUT_CLASSIFICATION	1.1475504748534395E-7	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999991728590784	WITHOUT_CLASSIFICATION	8.271409217275595E-7	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.999999481391979	WITHOUT_CLASSIFICATION	5.18608020957028E-7	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999998283661051	WITHOUT_CLASSIFICATION	1.7163389487380154E-7	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999984705255878	WITHOUT_CLASSIFICATION	1.529474412161055E-6	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999990632151	WITHOUT_CLASSIFICATION	9.367848743423991E-10	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999998292763136	WITHOUT_CLASSIFICATION	1.7072368635161787E-7	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999970473217749	WITHOUT_CLASSIFICATION	2.952678225201735E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999993266272003	WITHOUT_CLASSIFICATION	6.733727997530042E-7	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999998411868829	WITHOUT_CLASSIFICATION	1.5881311714231811E-7	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999993052725719	WITHOUT_CLASSIFICATION	6.947274281177911E-7	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.999999621006953	WITHOUT_CLASSIFICATION	3.789930468831182E-7	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.999999409142407	WITHOUT_CLASSIFICATION	5.908575929348943E-7	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999987426311681	WITHOUT_CLASSIFICATION	1.2573688320547165E-6	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999993473538655	WITHOUT_CLASSIFICATION	6.52646134404263E-7	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999993552302753	WITHOUT_CLASSIFICATION	6.447697247006956E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999998284484183	WITHOUT_CLASSIFICATION	1.715515816180754E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999998284484183	WITHOUT_CLASSIFICATION	1.715515816180754E-7	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999991244579199	WITHOUT_CLASSIFICATION	8.755420801745561E-7	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999990715896732	WITHOUT_CLASSIFICATION	9.284103267340241E-7	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999984175281026	WITHOUT_CLASSIFICATION	1.582471897337279E-6	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999999141318228	WITHOUT_CLASSIFICATION	8.586817720703467E-8	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999973947245794	WITHOUT_CLASSIFICATION	2.60527542064563E-6	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999984221552523	WITHOUT_CLASSIFICATION	1.5778447477262837E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.999998041329355	WITHOUT_CLASSIFICATION	1.958670645084771E-6	TEST
// nothing	WITHOUT_CLASSIFICATION	0.999998041329355	WITHOUT_CLASSIFICATION	1.958670645084771E-6	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999996571439016	WITHOUT_CLASSIFICATION	3.428560984432557E-7	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9994410309379904	WITHOUT_CLASSIFICATION	5.589690620096104E-4	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999995778839919	WITHOUT_CLASSIFICATION	4.221160081107174E-7	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999995778839919	WITHOUT_CLASSIFICATION	4.221160081107174E-7	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999998848159803	WITHOUT_CLASSIFICATION	1.1518401967055164E-7	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999972610923168	WITHOUT_CLASSIFICATION	2.7389076832624995E-6	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999972610923168	WITHOUT_CLASSIFICATION	2.7389076832624995E-6	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999992844148661	WITHOUT_CLASSIFICATION	7.155851338828081E-7	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999992844148661	WITHOUT_CLASSIFICATION	7.155851338828081E-7	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999960883116762	WITHOUT_CLASSIFICATION	3.911688323824392E-6	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999960883116762	WITHOUT_CLASSIFICATION	3.911688323824392E-6	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9999975084860483	WITHOUT_CLASSIFICATION	2.491513951680619E-6	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999997037931704	WITHOUT_CLASSIFICATION	2.9620682965687883E-7	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999997022770528	WITHOUT_CLASSIFICATION	2.977229472649127E-7	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.999999896540731	WITHOUT_CLASSIFICATION	1.0345926907477739E-7	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999986124259	WITHOUT_CLASSIFICATION	1.3875739757941954E-9	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999999922277388	WITHOUT_CLASSIFICATION	7.772261222003715E-9	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999997022577742	WITHOUT_CLASSIFICATION	2.977422257289018E-7	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999999921932929	WITHOUT_CLASSIFICATION	7.806707085850784E-9	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999997022577742	WITHOUT_CLASSIFICATION	2.977422257289018E-7	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9995015511298854	WITHOUT_CLASSIFICATION	4.98448870114642E-4	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999998640456595	WITHOUT_CLASSIFICATION	1.359543403814753E-7	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.999999884480715	WITHOUT_CLASSIFICATION	1.1551928500275814E-7	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999987939028143	WITHOUT_CLASSIFICATION	1.2060971856515227E-6	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999999425247859	WITHOUT_CLASSIFICATION	5.747521413134443E-8	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999989731805423	WITHOUT_CLASSIFICATION	1.0268194577112822E-6	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999958832049459	WITHOUT_CLASSIFICATION	4.11679505399797E-6	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999990845032705	WITHOUT_CLASSIFICATION	9.154967294905714E-7	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999989843168	WITHOUT_CLASSIFICATION	1.0156831055137077E-9	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999999863185345	WITHOUT_CLASSIFICATION	1.3681465442773092E-8	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999999299400655	WITHOUT_CLASSIFICATION	7.005993458362838E-8	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999967008269965	WITHOUT_CLASSIFICATION	3.299173003390595E-6	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999996925527105	WITHOUT_CLASSIFICATION	3.074472894529779E-7	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999998714022064	WITHOUT_CLASSIFICATION	1.2859779363625045E-7	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999997778939111	WITHOUT_CLASSIFICATION	2.2210608888670029E-7	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999818985664	WITHOUT_CLASSIFICATION	1.8101433527060514E-8	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999996644346811	WITHOUT_CLASSIFICATION	3.3556531876646565E-7	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999998591623929	WITHOUT_CLASSIFICATION	1.4083760716597784E-7	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999992761054975	WITHOUT_CLASSIFICATION	7.238945024320626E-7	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999958778093003	WITHOUT_CLASSIFICATION	4.122190699680998E-6	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999987470983512	WITHOUT_CLASSIFICATION	1.2529016487756932E-6	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999458784162	WITHOUT_CLASSIFICATION	5.412158371887857E-8	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999999177742054	WITHOUT_CLASSIFICATION	8.22257947009858E-8	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999999090908355	WITHOUT_CLASSIFICATION	9.090916461731523E-8	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999992043300376	WITHOUT_CLASSIFICATION	7.956699624920514E-7	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999999643304375	WITHOUT_CLASSIFICATION	3.5669562463798185E-8	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999998612096886	WITHOUT_CLASSIFICATION	1.387903114385018E-7	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999994846537027	WITHOUT_CLASSIFICATION	5.153462973565099E-7	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999642541788	WITHOUT_CLASSIFICATION	3.5745821187189954E-8	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999999161253061	WITHOUT_CLASSIFICATION	8.387469387007682E-8	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999998438387969	WITHOUT_CLASSIFICATION	1.5616120305988498E-7	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999970289899	WITHOUT_CLASSIFICATION	2.9710101367690808E-9	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999953023871	WITHOUT_CLASSIFICATION	4.697612942103106E-9	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999995683763838	WITHOUT_CLASSIFICATION	4.3162361621179745E-7	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999166730145	WITHOUT_CLASSIFICATION	8.332698552160006E-8	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999998151826738	WITHOUT_CLASSIFICATION	1.8481732624937468E-7	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.999999865823628	WITHOUT_CLASSIFICATION	1.3417637205981249E-7	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999999777239504	WITHOUT_CLASSIFICATION	2.227604958313904E-8	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999999990462236	WITHOUT_CLASSIFICATION	9.537764390742747E-10	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999999018897908	WITHOUT_CLASSIFICATION	9.811020921687875E-8	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999873390948	WITHOUT_CLASSIFICATION	1.2660905239113266E-8	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999997519901638	WITHOUT_CLASSIFICATION	2.480098362659993E-7	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999998073662788	WITHOUT_CLASSIFICATION	1.9263372120420058E-7	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999356965911	WITHOUT_CLASSIFICATION	6.430340899476923E-8	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999775316211	WITHOUT_CLASSIFICATION	2.2468378928716693E-8	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999254770265	WITHOUT_CLASSIFICATION	7.452297349716503E-8	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999993767225448	WITHOUT_CLASSIFICATION	6.232774553002551E-7	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999962935605	WITHOUT_CLASSIFICATION	3.7064395374386488E-9	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999996862219185	WITHOUT_CLASSIFICATION	3.137780815377764E-7	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999993817502278	WITHOUT_CLASSIFICATION	6.182497721807155E-7	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999999806410084	WITHOUT_CLASSIFICATION	1.935899158243609E-8	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999826983612	WITHOUT_CLASSIFICATION	1.7301638855644895E-8	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999806660893541	WITHOUT_CLASSIFICATION	1.9333910645862983E-5	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999998695817028	WITHOUT_CLASSIFICATION	1.3041829719610665E-7	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999638423942	WITHOUT_CLASSIFICATION	3.615760583340189E-8	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999638423942	WITHOUT_CLASSIFICATION	3.615760583340189E-8	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999990954551072	WITHOUT_CLASSIFICATION	9.045448928293167E-7	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999951678332474	WITHOUT_CLASSIFICATION	4.8321667525810245E-6	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999706402325	WITHOUT_CLASSIFICATION	2.9359767507208445E-8	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999999738300778	WITHOUT_CLASSIFICATION	2.6169922258686486E-8	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999999516209453	WITHOUT_CLASSIFICATION	4.8379054641906214E-8	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999987926990697	WITHOUT_CLASSIFICATION	1.2073009302900769E-6	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999973248771473	WITHOUT_CLASSIFICATION	2.6751228525693077E-6	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999999982308425	WITHOUT_CLASSIFICATION	1.7691574757827942E-9	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999997778916428	WITHOUT_CLASSIFICATION	2.2210835712380524E-7	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999998481565722	WITHOUT_CLASSIFICATION	1.518434278460126E-7	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999934582697	WITHOUT_CLASSIFICATION	6.541730360741269E-9	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999934582697	WITHOUT_CLASSIFICATION	6.541730360741269E-9	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999999084373176	WITHOUT_CLASSIFICATION	9.15626824128354E-8	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999999960727872	WITHOUT_CLASSIFICATION	3.92721285512102E-9	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999979995953898	WITHOUT_CLASSIFICATION	2.0004046102554206E-6	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999998572276824	WITHOUT_CLASSIFICATION	1.4277231764955446E-7	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999993466621298	WITHOUT_CLASSIFICATION	6.533378702570514E-7	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999827381102	WITHOUT_CLASSIFICATION	1.7261889802600508E-8	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999994209398625	WITHOUT_CLASSIFICATION	5.790601375554213E-7	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999996685737413	WITHOUT_CLASSIFICATION	3.314262587183426E-7	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999999896387625	WITHOUT_CLASSIFICATION	1.036123752599666E-8	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999997073317812	WITHOUT_CLASSIFICATION	2.926682187568079E-7	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999999556761668	WITHOUT_CLASSIFICATION	4.432383325648688E-8	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999993594784365	WITHOUT_CLASSIFICATION	6.40521563440457E-7	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999999817235621	WITHOUT_CLASSIFICATION	1.827643790885945E-8	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999999817235621	WITHOUT_CLASSIFICATION	1.827643790885945E-8	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999999682999474	WITHOUT_CLASSIFICATION	3.1700052668468253E-8	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999997911433134	WITHOUT_CLASSIFICATION	2.0885668668160368E-7	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999998057384261	WITHOUT_CLASSIFICATION	1.9426157390021638E-7	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999997972063266	WITHOUT_CLASSIFICATION	2.0279367353144278E-7	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999999485311806	WITHOUT_CLASSIFICATION	5.146881940422344E-8	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.999999772255532	WITHOUT_CLASSIFICATION	2.2774446802417758E-7	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999966409808843	WITHOUT_CLASSIFICATION	3.3590191158750604E-6	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999997091702802	WITHOUT_CLASSIFICATION	2.90829719771713E-7	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999988629665766	WITHOUT_CLASSIFICATION	1.1370334234024902E-6	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999999696521774	WITHOUT_CLASSIFICATION	3.0347822627042574E-8	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999979995953898	WITHOUT_CLASSIFICATION	2.0004046102554206E-6	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999988459857717	WITHOUT_CLASSIFICATION	1.1540142283217637E-6	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999963836170105	WITHOUT_CLASSIFICATION	3.61638298953476E-6	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999949106830144	WITHOUT_CLASSIFICATION	5.089316985570791E-6	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.999999981421749	WITHOUT_CLASSIFICATION	1.8578251026555614E-8	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999999721590356	WITHOUT_CLASSIFICATION	2.7840964455875497E-8	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999933070156	WITHOUT_CLASSIFICATION	6.692984419364525E-9	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999993592552696	WITHOUT_CLASSIFICATION	6.407447303607348E-7	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999998611796688	WITHOUT_CLASSIFICATION	1.3882033119009177E-7	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999546569996	WITHOUT_CLASSIFICATION	4.5343000343543154E-8	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999999520300497	WITHOUT_CLASSIFICATION	4.796995021438426E-8	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999998633448082	WITHOUT_CLASSIFICATION	1.3665519191936213E-7	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999964518387068	WITHOUT_CLASSIFICATION	3.54816129327442E-6	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999991573731938	WITHOUT_CLASSIFICATION	8.426268062969417E-7	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999992879579522	WITHOUT_CLASSIFICATION	7.120420478567401E-7	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.999995087693504	WITHOUT_CLASSIFICATION	4.91230649608884E-6	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999999450201753	WITHOUT_CLASSIFICATION	5.497982459316956E-8	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999995190912715	WITHOUT_CLASSIFICATION	4.809087285546815E-7	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999997466262026	WITHOUT_CLASSIFICATION	2.53373797475797E-7	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999992606469094	WITHOUT_CLASSIFICATION	7.393530907013739E-7	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.999998512328748	WITHOUT_CLASSIFICATION	1.48767125194783E-6	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999929096202	WITHOUT_CLASSIFICATION	7.090379832241697E-9	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.999999651117035	WITHOUT_CLASSIFICATION	3.488829650197695E-7	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999998444801219	WITHOUT_CLASSIFICATION	1.5551987819364869E-7	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999973150496999	WITHOUT_CLASSIFICATION	2.6849503000615482E-6	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.999999813901165	WITHOUT_CLASSIFICATION	1.8609883502579466E-7	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999996878490793	WITHOUT_CLASSIFICATION	3.12150920718628E-7	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999975058629194	WITHOUT_CLASSIFICATION	2.494137080648851E-6	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999996627267834	WITHOUT_CLASSIFICATION	3.372732165537328E-7	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999996502352162	WITHOUT_CLASSIFICATION	3.497647838315008E-7	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.999999979380064	WITHOUT_CLASSIFICATION	2.0619935963644424E-8	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999934979461423	WITHOUT_CLASSIFICATION	6.502053857665473E-6	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999934979461423	WITHOUT_CLASSIFICATION	6.502053857665473E-6	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999996219282993	WITHOUT_CLASSIFICATION	3.7807170069359576E-7	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.9999997727494893	WITHOUT_CLASSIFICATION	2.27250510691092E-7	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.999999988645644	WITHOUT_CLASSIFICATION	1.135435610141861E-8	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999999034569064	WITHOUT_CLASSIFICATION	9.654309358216015E-8	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999972206649115	WITHOUT_CLASSIFICATION	2.7793350884757424E-6	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999996956811138	WITHOUT_CLASSIFICATION	3.043188861652787E-7	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999999315429204	WITHOUT_CLASSIFICATION	6.845707961274657E-8	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.999999064061194	WITHOUT_CLASSIFICATION	9.359388060821574E-7	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999976433972316	WITHOUT_CLASSIFICATION	2.356602768311234E-6	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.999999846891875	WITHOUT_CLASSIFICATION	1.5310812489161263E-7	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999300625081	WITHOUT_CLASSIFICATION	6.993749182614638E-8	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999997079121052	WITHOUT_CLASSIFICATION	2.920878946949633E-7	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999913612475603	WITHOUT_CLASSIFICATION	8.63875243972769E-6	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999578100993	WITHOUT_CLASSIFICATION	4.218990062550115E-8	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999968028923	WITHOUT_CLASSIFICATION	3.1971076927835535E-9	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999624385678106	WITHOUT_CLASSIFICATION	3.756143218927061E-5	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999996669455	WITHOUT_CLASSIFICATION	3.330544666438662E-10	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999624780449	WITHOUT_CLASSIFICATION	3.752195500323147E-8	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999999751465684	WITHOUT_CLASSIFICATION	2.4853431640720387E-8	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999995908045441	WITHOUT_CLASSIFICATION	4.0919545582927275E-7	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999991804624467	WITHOUT_CLASSIFICATION	8.195375533865991E-7	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999991804624467	WITHOUT_CLASSIFICATION	8.195375533865991E-7	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999998936707926	WITHOUT_CLASSIFICATION	1.0632920748321142E-7	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999997866668793	WITHOUT_CLASSIFICATION	2.133331206707332E-7	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999999015841706	WITHOUT_CLASSIFICATION	9.841582941898825E-8	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999994824493742	WITHOUT_CLASSIFICATION	5.17550625825089E-7	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.999999453282446	WITHOUT_CLASSIFICATION	5.467175540010833E-7	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999999875776084	WITHOUT_CLASSIFICATION	1.2422391661322308E-8	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999973758507	WITHOUT_CLASSIFICATION	2.6241494457187672E-9	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999191817245	WITHOUT_CLASSIFICATION	8.081827548484037E-8	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999995852669445	WITHOUT_CLASSIFICATION	4.1473305550492044E-7	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999999666175595	WITHOUT_CLASSIFICATION	3.338244040439772E-8	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999993570177351	WITHOUT_CLASSIFICATION	6.42982264897738E-7	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999994521431379	WITHOUT_CLASSIFICATION	5.478568620978141E-7	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999982254220461	WITHOUT_CLASSIFICATION	1.7745779538611986E-6	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999996540127782	WITHOUT_CLASSIFICATION	3.459872217641818E-7	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999993135578152	WITHOUT_CLASSIFICATION	6.864421848255388E-7	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999975491690176	WITHOUT_CLASSIFICATION	2.4508309823471533E-6	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999998276562462	WITHOUT_CLASSIFICATION	1.7234375386075978E-7	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999998748806698	WITHOUT_CLASSIFICATION	1.251193302157123E-7	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999528285112	WITHOUT_CLASSIFICATION	4.7171488762489354E-8	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999995854313926	WITHOUT_CLASSIFICATION	4.1456860739388103E-7	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999999722505173	WITHOUT_CLASSIFICATION	2.7749482694191133E-8	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999998093765072	WITHOUT_CLASSIFICATION	1.9062349276783413E-7	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999999076742262	WITHOUT_CLASSIFICATION	9.232577382207415E-8	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999995686979122	WITHOUT_CLASSIFICATION	4.313020878093672E-7	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999998801672672	WITHOUT_CLASSIFICATION	1.1983273282478162E-7	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999999621365365	WITHOUT_CLASSIFICATION	3.7863463359351126E-8	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9999918544052125	WITHOUT_CLASSIFICATION	8.145594787501174E-6	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999999352374325	WITHOUT_CLASSIFICATION	6.476256753782827E-8	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999994220301913	WITHOUT_CLASSIFICATION	5.779698086563012E-7	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.999998589054216	WITHOUT_CLASSIFICATION	1.4109457839834852E-6	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.999999995181488	WITHOUT_CLASSIFICATION	4.818512066222628E-9	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999983350953704	WITHOUT_CLASSIFICATION	1.6649046296127389E-6	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999997053637547	WITHOUT_CLASSIFICATION	2.946362452754378E-7	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.9999959098675738	WITHOUT_CLASSIFICATION	4.09013242618153E-6	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.999997485181622	WITHOUT_CLASSIFICATION	2.514818377963901E-6	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999998466185261	WITHOUT_CLASSIFICATION	1.5338147387144638E-7	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999403094276	WITHOUT_CLASSIFICATION	5.96905723093108E-8	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.999999714523167	WITHOUT_CLASSIFICATION	2.8547683292426576E-7	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999999486505001	WITHOUT_CLASSIFICATION	5.1349499859082106E-8	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.999999882393613	WITHOUT_CLASSIFICATION	1.1760638695431042E-7	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999996893099786	WITHOUT_CLASSIFICATION	3.106900214248678E-7	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999998583227719	WITHOUT_CLASSIFICATION	1.4167722795331404E-7	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999997770274757	WITHOUT_CLASSIFICATION	2.229725243159143E-7	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999995520084762	WITHOUT_CLASSIFICATION	4.4799152373519564E-7	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.999999481703196	WITHOUT_CLASSIFICATION	5.182968040468358E-7	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999995520084762	WITHOUT_CLASSIFICATION	4.4799152373519564E-7	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999999936025314	WITHOUT_CLASSIFICATION	6.397468599541529E-8	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.999996541486562	WITHOUT_CLASSIFICATION	3.45851343798747E-6	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999998794023625	WITHOUT_CLASSIFICATION	1.2059763750992298E-7	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9995394278879159	WITHOUT_CLASSIFICATION	4.605721120840603E-4	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999992301992524	WITHOUT_CLASSIFICATION	7.698007475739888E-7	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999997074883101	WITHOUT_CLASSIFICATION	2.925116899720466E-7	TEST
// write	WITHOUT_CLASSIFICATION	0.999999597811472	WITHOUT_CLASSIFICATION	4.021885280507679E-7	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9998963380962753	WITHOUT_CLASSIFICATION	1.036619037245888E-4	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.999999872210953	WITHOUT_CLASSIFICATION	1.2778904705733057E-7	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999955728390297	WITHOUT_CLASSIFICATION	4.4271609702223015E-6	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999993142851075	WITHOUT_CLASSIFICATION	6.857148925891168E-7	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999995576079203	WITHOUT_CLASSIFICATION	4.423920797870421E-7	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999995848289609	WITHOUT_CLASSIFICATION	4.1517103911777156E-7	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999999914065476	WITHOUT_CLASSIFICATION	8.593452368365981E-9	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9999824486264258	WITHOUT_CLASSIFICATION	1.75513735742256E-5	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9998962808802718	WITHOUT_CLASSIFICATION	1.0371911972818649E-4	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.999999995202278	WITHOUT_CLASSIFICATION	4.797722016897188E-9	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999995052395025	WITHOUT_CLASSIFICATION	4.947604974117623E-7	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999991782177631	WITHOUT_CLASSIFICATION	8.217822370168256E-7	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999986276241012	WITHOUT_CLASSIFICATION	1.3723758987825272E-6	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999999298068344	WITHOUT_CLASSIFICATION	7.019316562103312E-8	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999241085809	WITHOUT_CLASSIFICATION	7.589141919332934E-8	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999989926797367	WITHOUT_CLASSIFICATION	1.007320263293837E-6	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999999180687761	WITHOUT_CLASSIFICATION	8.19312239008062E-8	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9999999647601043	WITHOUT_CLASSIFICATION	3.523989557371941E-8	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999997817196432	WITHOUT_CLASSIFICATION	2.1828035689582929E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999194293351	WITHOUT_CLASSIFICATION	8.057066490223455E-8	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999999811145593	WITHOUT_CLASSIFICATION	1.8885440631269685E-8	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999999899323726	WITHOUT_CLASSIFICATION	1.0067627381513539E-8	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999996546633184	WITHOUT_CLASSIFICATION	3.453366816178918E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999793588216217	WITHOUT_CLASSIFICATION	2.0641178378285705E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999780599194749	WITHOUT_CLASSIFICATION	2.1940080525090407E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999831284568271	WITHOUT_CLASSIFICATION	1.687154317283101E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999999724680809	WITHOUT_CLASSIFICATION	2.753191908000045E-8	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999446511079	WITHOUT_CLASSIFICATION	5.534889209278779E-8	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.9999999451367663	WITHOUT_CLASSIFICATION	5.4863233650652466E-8	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999996933973713	WITHOUT_CLASSIFICATION	3.0660262868225757E-7	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999473411788	WITHOUT_CLASSIFICATION	5.2658821293192184E-8	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999965068399934	WITHOUT_CLASSIFICATION	3.4931600066233026E-6	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999926443498302	WITHOUT_CLASSIFICATION	7.355650169901856E-6	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999999925684622	WITHOUT_CLASSIFICATION	7.431537825265605E-9	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.999998597536609	WITHOUT_CLASSIFICATION	1.4024633910062873E-6	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999847816661	WITHOUT_CLASSIFICATION	1.521833397398439E-8	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999995665335054	WITHOUT_CLASSIFICATION	4.334664945745405E-7	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999995665335054	WITHOUT_CLASSIFICATION	4.334664945745405E-7	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.999999166269978	WITHOUT_CLASSIFICATION	8.337300221377022E-7	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999998653918083	WITHOUT_CLASSIFICATION	1.3460819165912376E-7	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999999132492343	WITHOUT_CLASSIFICATION	8.675076576122617E-8	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999984812386792	WITHOUT_CLASSIFICATION	1.5187613208106722E-6	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.999999991401928	WITHOUT_CLASSIFICATION	8.598072064244246E-9	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999883215404	WITHOUT_CLASSIFICATION	1.167845962927067E-8	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999997733116843	WITHOUT_CLASSIFICATION	2.2668831566354597E-7	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999997733017129	WITHOUT_CLASSIFICATION	2.266982871192841E-7	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999995560203445	WITHOUT_CLASSIFICATION	4.439796555465072E-7	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999931419881	WITHOUT_CLASSIFICATION	6.858011951716343E-9	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999996949553851	WITHOUT_CLASSIFICATION	3.0504461489549577E-7	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999960160332	WITHOUT_CLASSIFICATION	3.9839668115792966E-9	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999994266730035	WITHOUT_CLASSIFICATION	5.733269964369192E-7	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999994104404979	WITHOUT_CLASSIFICATION	5.895595021507271E-7	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999701967887	WITHOUT_CLASSIFICATION	2.9803211299005076E-8	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999999642180784	WITHOUT_CLASSIFICATION	3.578192169043187E-8	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999999466583809	WITHOUT_CLASSIFICATION	5.334161907683273E-8	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999999861442787	WITHOUT_CLASSIFICATION	1.3855721274754172E-8	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999995838227449	WITHOUT_CLASSIFICATION	4.16177255084684E-7	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999999483937264	WITHOUT_CLASSIFICATION	5.16062736282147E-8	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999813641012963	WITHOUT_CLASSIFICATION	1.8635898703635718E-5	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999948974398413	WITHOUT_CLASSIFICATION	5.102560158782928E-6	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999999948802782	WITHOUT_CLASSIFICATION	5.119721720133629E-9	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999999967809512	WITHOUT_CLASSIFICATION	3.219048775180584E-9	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999928498161402	WITHOUT_CLASSIFICATION	7.15018385970233E-6	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999833953254	WITHOUT_CLASSIFICATION	1.66046745768373E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998900008578	WITHOUT_CLASSIFICATION	1.099991422294697E-7	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999990789668539	WITHOUT_CLASSIFICATION	9.210331461469397E-7	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999999160501323	WITHOUT_CLASSIFICATION	8.394986775836827E-8	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999997178680156	WITHOUT_CLASSIFICATION	2.8213198436574506E-7	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999999186548016	WITHOUT_CLASSIFICATION	8.134519840592283E-8	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999999256250852	WITHOUT_CLASSIFICATION	7.437491478856689E-8	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999986191074	WITHOUT_CLASSIFICATION	1.3808925889286137E-9	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999999924010201	WITHOUT_CLASSIFICATION	7.59897996954959E-9	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999438478228	WITHOUT_CLASSIFICATION	5.6152177328321305E-8	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999951017946	WITHOUT_CLASSIFICATION	4.898205323378115E-9	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999989206589895	WITHOUT_CLASSIFICATION	1.0793410105025184E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999981897138942	WITHOUT_CLASSIFICATION	1.8102861058028712E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999994656814996	WITHOUT_CLASSIFICATION	5.343185004640979E-7	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999891766486368	WITHOUT_CLASSIFICATION	1.08233513631231E-5	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999971905695686	WITHOUT_CLASSIFICATION	2.809430431414715E-6	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999997724006519	WITHOUT_CLASSIFICATION	2.2759934815199706E-7	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999943633508149	WITHOUT_CLASSIFICATION	5.636649185169502E-6	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999888104001	WITHOUT_CLASSIFICATION	1.1189599929359683E-8	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999995860089776	WITHOUT_CLASSIFICATION	4.1399102233368886E-7	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999998857733673	WITHOUT_CLASSIFICATION	1.1422663269130174E-7	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999999131726152	WITHOUT_CLASSIFICATION	8.682738476592413E-8	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999999912992358	WITHOUT_CLASSIFICATION	8.700764213850374E-9	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9999810526937906	WITHOUT_CLASSIFICATION	1.8947306209458E-5	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999998835566252	WITHOUT_CLASSIFICATION	1.1644337474291641E-7	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999924654785	WITHOUT_CLASSIFICATION	7.534521446232172E-9	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.999999845074577	WITHOUT_CLASSIFICATION	1.5492542314321383E-7	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999795845306	WITHOUT_CLASSIFICATION	2.041546945176593E-8	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999983927197	WITHOUT_CLASSIFICATION	1.6072803877007375E-9	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999999827141473	WITHOUT_CLASSIFICATION	1.7285852736272986E-8	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999999883098296	WITHOUT_CLASSIFICATION	1.1690170293904644E-8	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999999929612188	WITHOUT_CLASSIFICATION	7.038781235790916E-9	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998924381704	WITHOUT_CLASSIFICATION	1.0756182945097205E-7	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999999900668191	WITHOUT_CLASSIFICATION	9.933180964715271E-9	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999913311559	WITHOUT_CLASSIFICATION	8.668844134126907E-9	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999999883686423	WITHOUT_CLASSIFICATION	1.1631357735237834E-8	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999998264332215	WITHOUT_CLASSIFICATION	1.7356677853995293E-7	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999998548651857	WITHOUT_CLASSIFICATION	1.4513481431826963E-7	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999753664977	WITHOUT_CLASSIFICATION	2.4633502357395286E-8	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999999220857404	WITHOUT_CLASSIFICATION	7.791425956751823E-8	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999786370249296	WITHOUT_CLASSIFICATION	2.1362975070428083E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999905239586545	WITHOUT_CLASSIFICATION	9.47604134552349E-6	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.999999284581633	WITHOUT_CLASSIFICATION	7.154183670795488E-7	TEST
// odd	WITHOUT_CLASSIFICATION	0.9999978874198044	WITHOUT_CLASSIFICATION	2.1125801954793594E-6	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999998335313396	WITHOUT_CLASSIFICATION	1.6646866036232654E-7	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999994930722979	WITHOUT_CLASSIFICATION	5.069277021985734E-7	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999998045024511	WITHOUT_CLASSIFICATION	1.954975489535215E-7	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999763031684	WITHOUT_CLASSIFICATION	2.3696831648108242E-8	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999898142386218	WITHOUT_CLASSIFICATION	1.0185761378273903E-5	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9999865080732377	WITHOUT_CLASSIFICATION	1.3491926762205321E-5	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.999990019900625	WITHOUT_CLASSIFICATION	9.980099375010558E-6	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9999878186901084	WITHOUT_CLASSIFICATION	1.2181309891496076E-5	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9999843592048696	WITHOUT_CLASSIFICATION	1.564079513037347E-5	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9999892648289421	WITHOUT_CLASSIFICATION	1.0735171057775825E-5	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9999894650909477	WITHOUT_CLASSIFICATION	1.0534909052312397E-5	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9999894642788898	WITHOUT_CLASSIFICATION	1.0535721110164982E-5	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9999896733440806	WITHOUT_CLASSIFICATION	1.0326655919305694E-5	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9999883491469859	WITHOUT_CLASSIFICATION	1.1650853014057134E-5	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9999877999632324	WITHOUT_CLASSIFICATION	1.220003676765595E-5	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.9999874176186957	WITHOUT_CLASSIFICATION	1.2582381304232979E-5	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.999985674305945	WITHOUT_CLASSIFICATION	1.432569405493365E-5	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9999827163201044	WITHOUT_CLASSIFICATION	1.7283679895610674E-5	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.9999874626302689	WITHOUT_CLASSIFICATION	1.2537369730996774E-5	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9999873749630982	WITHOUT_CLASSIFICATION	1.2625036901902602E-5	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9999877065902489	WITHOUT_CLASSIFICATION	1.2293409751065803E-5	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.9999857755924376	WITHOUT_CLASSIFICATION	1.4224407562368142E-5	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.9999800393422592	WITHOUT_CLASSIFICATION	1.9960657740816323E-5	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9999856862854861	WITHOUT_CLASSIFICATION	1.4313714513921159E-5	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999999639000929	WITHOUT_CLASSIFICATION	3.609990713826673E-8	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.999994419156922	WITHOUT_CLASSIFICATION	5.580843078012994E-6	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999996147493128	WITHOUT_CLASSIFICATION	3.8525068716718264E-7	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999997635102034	WITHOUT_CLASSIFICATION	2.364897965371988E-7	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999997479819954	WITHOUT_CLASSIFICATION	2.5201800450614963E-7	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999999962075381	WITHOUT_CLASSIFICATION	3.7924619317076164E-9	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999999952540881	WITHOUT_CLASSIFICATION	4.745911936903922E-9	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999997516176727	WITHOUT_CLASSIFICATION	2.483823273278514E-7	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999587222785	WITHOUT_CLASSIFICATION	4.127772158711424E-8	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999996613393096	WITHOUT_CLASSIFICATION	3.386606903744978E-7	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9348602187774188	WITHOUT_CLASSIFICATION	0.06513978122258124	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999998832817144	WITHOUT_CLASSIFICATION	1.1671828562730085E-7	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999947592234149	WITHOUT_CLASSIFICATION	5.240776585259245E-6	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999998103336042	WITHOUT_CLASSIFICATION	1.8966639589024206E-7	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999998103336042	WITHOUT_CLASSIFICATION	1.8966639589024206E-7	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.999999987780431	WITHOUT_CLASSIFICATION	1.2219569085935754E-8	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999966928296061	WITHOUT_CLASSIFICATION	3.3071703939548356E-6	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999946602418	WITHOUT_CLASSIFICATION	5.339758185701189E-9	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999998293372412	WITHOUT_CLASSIFICATION	1.7066275881554036E-7	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999999656826084	WITHOUT_CLASSIFICATION	3.43173917035714E-8	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999991271101732	WITHOUT_CLASSIFICATION	8.728898268137649E-7	TEST
// sign	WITHOUT_CLASSIFICATION	0.99999941628144	WITHOUT_CLASSIFICATION	5.837185601543714E-7	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.99999996249965	WITHOUT_CLASSIFICATION	3.7500350020163637E-8	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999999681521244	WITHOUT_CLASSIFICATION	3.1847875658047064E-8	TEST
// base	WITHOUT_CLASSIFICATION	0.9999996164838656	WITHOUT_CLASSIFICATION	3.8351613449978103E-7	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9996419746302075	WITHOUT_CLASSIFICATION	3.580253697924884E-4	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999924303816	WITHOUT_CLASSIFICATION	7.56961834457439E-9	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9999968670362323	WITHOUT_CLASSIFICATION	3.132963767620476E-6	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999991390327018	WITHOUT_CLASSIFICATION	8.609672981504872E-7	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.999999938056399	WITHOUT_CLASSIFICATION	6.194360097723813E-8	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999801682487004	WITHOUT_CLASSIFICATION	1.9831751299574765E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.999999660125355	WITHOUT_CLASSIFICATION	3.3987464489134595E-7	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999439835896	WITHOUT_CLASSIFICATION	5.6016410322668964E-8	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999992865335495	WITHOUT_CLASSIFICATION	7.134664504760086E-7	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999981945478779	WITHOUT_CLASSIFICATION	1.8054521221102135E-6	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999998489166306	WITHOUT_CLASSIFICATION	1.5108336936627448E-7	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.999999998647301	WITHOUT_CLASSIFICATION	1.3526990518412592E-9	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999993083255919	WITHOUT_CLASSIFICATION	6.916744081137746E-7	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999997311384397	WITHOUT_CLASSIFICATION	2.688615603201725E-7	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999999690487267	WITHOUT_CLASSIFICATION	3.0951273243922256E-8	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999992411665349	WITHOUT_CLASSIFICATION	7.588334651714076E-7	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999999696897544	WITHOUT_CLASSIFICATION	3.031024560098169E-8	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999997642773104	WITHOUT_CLASSIFICATION	2.3572268956989042E-7	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999993067841064	WITHOUT_CLASSIFICATION	6.932158936578344E-7	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999987096424106	WITHOUT_CLASSIFICATION	1.2903575894891113E-6	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999996394763622	WITHOUT_CLASSIFICATION	3.6052363780815965E-7	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999993248161281	WITHOUT_CLASSIFICATION	6.751838718641219E-7	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.999998437432527	WITHOUT_CLASSIFICATION	1.5625674729806778E-6	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999991080867529	WITHOUT_CLASSIFICATION	8.919132471777543E-7	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.999999868181817	WITHOUT_CLASSIFICATION	1.3181818302190694E-7	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999998857064676	WITHOUT_CLASSIFICATION	1.1429353250592955E-7	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999993910911095	WITHOUT_CLASSIFICATION	6.089088905815545E-7	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999899494053	WITHOUT_CLASSIFICATION	1.0050594681892508E-8	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999999365573534	WITHOUT_CLASSIFICATION	6.344264660165317E-8	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999961468247	WITHOUT_CLASSIFICATION	3.853175316116685E-9	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999999292989258	WITHOUT_CLASSIFICATION	7.070107418876282E-8	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999999130999565	WITHOUT_CLASSIFICATION	8.690004343621662E-8	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999999152545528	WITHOUT_CLASSIFICATION	8.474544725954487E-8	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.999999272802809	WITHOUT_CLASSIFICATION	7.271971910567304E-7	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.999999272802809	WITHOUT_CLASSIFICATION	7.271971910567304E-7	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999999739374491	WITHOUT_CLASSIFICATION	2.60625508737157E-8	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999998777766241	WITHOUT_CLASSIFICATION	1.222233758923754E-7	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999999054680223	WITHOUT_CLASSIFICATION	9.453197772533999E-8	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9999995762784891	WITHOUT_CLASSIFICATION	4.237215108462211E-7	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999958803253394	WITHOUT_CLASSIFICATION	4.119674660591983E-6	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999998938788116	WITHOUT_CLASSIFICATION	1.0612118844347831E-7	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999999552819272	WITHOUT_CLASSIFICATION	4.4718072855668687E-8	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999813766824281	WITHOUT_CLASSIFICATION	1.8623317571796972E-5	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999997583841385	WITHOUT_CLASSIFICATION	2.416158615232507E-7	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999996325070651	WITHOUT_CLASSIFICATION	3.674929348883832E-7	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999997544341126	WITHOUT_CLASSIFICATION	2.4556588736500683E-7	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999998582690793	WITHOUT_CLASSIFICATION	1.4173092057774078E-7	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999939639199429	WITHOUT_CLASSIFICATION	6.03608005718803E-6	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999996986533151	WITHOUT_CLASSIFICATION	3.0134668489689886E-7	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9996024508998717	WITHOUT_CLASSIFICATION	3.975491001283244E-4	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999963349325611	WITHOUT_CLASSIFICATION	3.6650674388794947E-6	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999948320894925	WITHOUT_CLASSIFICATION	5.167910507608659E-6	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999998834272615	WITHOUT_CLASSIFICATION	1.1657273853245339E-7	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999935742153709	WITHOUT_CLASSIFICATION	6.425784629144983E-6	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999727524446704	WITHOUT_CLASSIFICATION	2.7247555329535966E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999602504711	WITHOUT_CLASSIFICATION	3.974952892201184E-8	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999999602504711	WITHOUT_CLASSIFICATION	3.974952892201184E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999472568526	WITHOUT_CLASSIFICATION	5.2743147468357996E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999472568526	WITHOUT_CLASSIFICATION	5.2743147468357996E-8	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999539352127	WITHOUT_CLASSIFICATION	4.6064787323030345E-8	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999997583547555	WITHOUT_CLASSIFICATION	2.4164524454571225E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999996383622062	WITHOUT_CLASSIFICATION	3.616377937896238E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.99999985117853	WITHOUT_CLASSIFICATION	1.4882147000794005E-7	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999997022770528	WITHOUT_CLASSIFICATION	2.977229472649127E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999883551124	WITHOUT_CLASSIFICATION	1.1644887715178207E-8	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999990006261291	WITHOUT_CLASSIFICATION	9.993738708612855E-7	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9999994450912189	WITHOUT_CLASSIFICATION	5.549087810852724E-7	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999995240854468	WITHOUT_CLASSIFICATION	4.759145532555191E-7	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.999999857539652	WITHOUT_CLASSIFICATION	1.4246034801085585E-7	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999996605193032	WITHOUT_CLASSIFICATION	3.394806967567664E-7	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999998961491963	WITHOUT_CLASSIFICATION	1.0385080363817917E-7	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999998741307956	WITHOUT_CLASSIFICATION	1.2586920433511834E-7	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999519450797643	WITHOUT_CLASSIFICATION	4.805492023578996E-5	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999999688402841	WITHOUT_CLASSIFICATION	3.115971596399526E-8	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999995916619466	WITHOUT_CLASSIFICATION	4.0833805338190693E-7	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999990578387921	WITHOUT_CLASSIFICATION	9.421612079216584E-7	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999998716544948	WITHOUT_CLASSIFICATION	1.2834550516404178E-7	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9999922688272346	WITHOUT_CLASSIFICATION	7.731172765459983E-6	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999994619262179	WITHOUT_CLASSIFICATION	5.380737821603672E-7	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999996764681686	WITHOUT_CLASSIFICATION	3.235318315313895E-7	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999999502443997	WITHOUT_CLASSIFICATION	4.9755600387108864E-8	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999994022948543	WITHOUT_CLASSIFICATION	5.977051456922342E-7	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999194293351	WITHOUT_CLASSIFICATION	8.057066490223455E-8	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999883215404	WITHOUT_CLASSIFICATION	1.167845962927067E-8	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999998435392775	WITHOUT_CLASSIFICATION	1.5646072250955875E-7	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999914363165	WITHOUT_CLASSIFICATION	8.563683546858559E-9	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999998741101633	WITHOUT_CLASSIFICATION	1.258898366837724E-7	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999993149058811	WITHOUT_CLASSIFICATION	6.850941188353198E-7	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999999648406155	WITHOUT_CLASSIFICATION	3.515938455287613E-8	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999999648406155	WITHOUT_CLASSIFICATION	3.515938455287613E-8	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.999999989764696	WITHOUT_CLASSIFICATION	1.0235303964146892E-8	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999997925675217	WITHOUT_CLASSIFICATION	2.074324782184391E-7	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.999999941019607	WITHOUT_CLASSIFICATION	5.8980393027487846E-8	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999999012557884	WITHOUT_CLASSIFICATION	9.874421157360172E-8	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.999999989696758	WITHOUT_CLASSIFICATION	1.030324198213756E-8	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999999709220558	WITHOUT_CLASSIFICATION	2.907794420620735E-8	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999999354262572	WITHOUT_CLASSIFICATION	6.4573742798031E-8	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.999999998426388	WITHOUT_CLASSIFICATION	1.5736119834312672E-9	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999998936356249	WITHOUT_CLASSIFICATION	1.0636437506479668E-7	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999998115655304	WITHOUT_CLASSIFICATION	1.8843446960855136E-7	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999998311583467	WITHOUT_CLASSIFICATION	1.6884165330003218E-7	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999999831043855	WITHOUT_CLASSIFICATION	1.6895614422811812E-8	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999996343070449	WITHOUT_CLASSIFICATION	3.6569295506901806E-7	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999994965481238	WITHOUT_CLASSIFICATION	5.034518761374713E-7	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999477658548	WITHOUT_CLASSIFICATION	5.223414537366717E-8	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996920099522	WITHOUT_CLASSIFICATION	3.0799004783256727E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999996299081222	WITHOUT_CLASSIFICATION	3.7009187786744923E-7	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999999959050877	WITHOUT_CLASSIFICATION	4.0949123053742653E-8	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999999907210403	WITHOUT_CLASSIFICATION	9.278959752242645E-9	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9997435975882795	WITHOUT_CLASSIFICATION	2.564024117205411E-4	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999998285770002	WITHOUT_CLASSIFICATION	1.7142299971375322E-7	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999994453817719	WITHOUT_CLASSIFICATION	5.546182280785196E-7	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999931684582958	WITHOUT_CLASSIFICATION	6.831541704189676E-6	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999994355505533	WITHOUT_CLASSIFICATION	5.644494467623248E-7	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999998324189651	WITHOUT_CLASSIFICATION	1.6758103495995667E-7	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999998281787523	WITHOUT_CLASSIFICATION	1.718212477829149E-7	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999998515190693	WITHOUT_CLASSIFICATION	1.4848093053253136E-7	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999996170301882	WITHOUT_CLASSIFICATION	3.829698117073402E-7	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.999999943136989	WITHOUT_CLASSIFICATION	5.686301090280003E-8	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999996464693937	WITHOUT_CLASSIFICATION	3.535306063117931E-7	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999999037439792	WITHOUT_CLASSIFICATION	9.625602091962927E-8	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999996193632046	WITHOUT_CLASSIFICATION	3.806367953656258E-7	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999994695933385	WITHOUT_CLASSIFICATION	5.304066614409631E-7	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9999994566608531	WITHOUT_CLASSIFICATION	5.433391468874136E-7	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999989136001971	WITHOUT_CLASSIFICATION	1.0863998028327632E-6	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999999878868097	WITHOUT_CLASSIFICATION	1.2113190384374183E-8	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.999993100295363	WITHOUT_CLASSIFICATION	6.899704637044945E-6	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999978152715001	WITHOUT_CLASSIFICATION	2.1847284999907805E-6	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999998878394722	WITHOUT_CLASSIFICATION	1.1216052765953237E-7	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999998521751574	WITHOUT_CLASSIFICATION	1.4782484251078175E-7	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999945823912	WITHOUT_CLASSIFICATION	5.417608764851002E-9	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.999999969012804	WITHOUT_CLASSIFICATION	3.09871959952233E-8	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999998688028809	WITHOUT_CLASSIFICATION	1.3119711914919378E-7	TEST
// while	WITHOUT_CLASSIFICATION	0.9999990479444641	WITHOUT_CLASSIFICATION	9.520555357921755E-7	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.999971475209456	WITHOUT_CLASSIFICATION	2.8524790543993704E-5	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999999520654097	WITHOUT_CLASSIFICATION	4.793459014642328E-8	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999998998319575	WITHOUT_CLASSIFICATION	1.0016804249678588E-7	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999914906513	WITHOUT_CLASSIFICATION	8.50934873695182E-9	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999999574868969	WITHOUT_CLASSIFICATION	4.251310306040196E-8	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.9999998670526304	WITHOUT_CLASSIFICATION	1.3294736958173124E-7	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999905722715463	WITHOUT_CLASSIFICATION	9.42772845356698E-6	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999907400537319	WITHOUT_CLASSIFICATION	9.259946268149388E-6	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999904154583236	WITHOUT_CLASSIFICATION	9.58454167636564E-6	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999935113783784	WITHOUT_CLASSIFICATION	6.4886216214908696E-6	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999979129412242	WITHOUT_CLASSIFICATION	2.0870587758173186E-6	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999887385138347	WITHOUT_CLASSIFICATION	1.1261486165256727E-5	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999959985450025	WITHOUT_CLASSIFICATION	4.0014549974531294E-6	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999357337138	WITHOUT_CLASSIFICATION	6.426628617613445E-8	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999870714775924	WITHOUT_CLASSIFICATION	1.2928522407552688E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999998062786954	WITHOUT_CLASSIFICATION	1.9372130447785465E-7	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.999973781532474	WITHOUT_CLASSIFICATION	2.621846752614195E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999905722715463	WITHOUT_CLASSIFICATION	9.42772845356698E-6	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999904154583236	WITHOUT_CLASSIFICATION	9.58454167636564E-6	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999907400537319	WITHOUT_CLASSIFICATION	9.259946268149388E-6	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999906919161394	WITHOUT_CLASSIFICATION	9.308083860626378E-6	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999939800372732	WITHOUT_CLASSIFICATION	6.0199627267834365E-6	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999983346565263	WITHOUT_CLASSIFICATION	1.6653434736993697E-6	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.999999939837194	WITHOUT_CLASSIFICATION	6.016280600163146E-8	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.9999999460747577	WITHOUT_CLASSIFICATION	5.392524240678014E-8	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999996778016714	WITHOUT_CLASSIFICATION	3.221983284769283E-7	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999995563800548	WITHOUT_CLASSIFICATION	4.436199451680776E-7	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999998915579172	WITHOUT_CLASSIFICATION	1.0844208273383416E-7	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999997777043111	WITHOUT_CLASSIFICATION	2.2229568897570837E-7	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999999790013546	WITHOUT_CLASSIFICATION	2.0998645398570206E-8	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999999905774812	WITHOUT_CLASSIFICATION	9.422518718024411E-9	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999999468129191	WITHOUT_CLASSIFICATION	5.318708083446142E-8	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999996554595678	WITHOUT_CLASSIFICATION	3.445404322724785E-7	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999995528840453	WITHOUT_CLASSIFICATION	4.4711595479737705E-7	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999999876304264	WITHOUT_CLASSIFICATION	1.2369573542218642E-8	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9999996457097703	WITHOUT_CLASSIFICATION	3.542902296605382E-7	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9999998079362551	WITHOUT_CLASSIFICATION	1.9206374498557624E-7	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999995606669007	WITHOUT_CLASSIFICATION	4.393330994145354E-7	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999995606669007	WITHOUT_CLASSIFICATION	4.393330994145354E-7	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999997398197117	WITHOUT_CLASSIFICATION	2.601802883633713E-7	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.999999850669011	WITHOUT_CLASSIFICATION	1.4933098897583223E-7	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999976554886648	WITHOUT_CLASSIFICATION	2.3445113351178103E-6	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999878538821863	WITHOUT_CLASSIFICATION	1.2146117813661203E-5	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999998599750938	WITHOUT_CLASSIFICATION	1.4002490626558746E-7	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999999934640705	WITHOUT_CLASSIFICATION	6.5359295163238374E-9	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999999869052483	WITHOUT_CLASSIFICATION	1.3094751724907779E-8	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999998860792799	WITHOUT_CLASSIFICATION	1.1392072011181554E-7	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999999357177095	WITHOUT_CLASSIFICATION	6.428229050918316E-8	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999957541224	WITHOUT_CLASSIFICATION	4.245877622271948E-9	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999998856978219	WITHOUT_CLASSIFICATION	1.1430217799635978E-7	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999981806154565	WITHOUT_CLASSIFICATION	1.8193845434438375E-6	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999999372065901	WITHOUT_CLASSIFICATION	6.279340985574807E-8	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999998831135548	WITHOUT_CLASSIFICATION	1.1688644515617313E-7	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999998632804129	WITHOUT_CLASSIFICATION	1.3671958714956186E-7	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999207667936	WITHOUT_CLASSIFICATION	7.923320643764822E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999999628264079	WITHOUT_CLASSIFICATION	3.717359201433762E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999374609434	WITHOUT_CLASSIFICATION	6.253905657249334E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999374609434	WITHOUT_CLASSIFICATION	6.253905657249334E-8	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9999991295299278	WITHOUT_CLASSIFICATION	8.704700723110959E-7	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9999985051836091	WITHOUT_CLASSIFICATION	1.4948163909393765E-6	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.999994225208625	WITHOUT_CLASSIFICATION	5.7747913749857325E-6	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999987412114358	WITHOUT_CLASSIFICATION	1.25878856410727E-6	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999999790273205	WITHOUT_CLASSIFICATION	2.097267946763591E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999374609434	WITHOUT_CLASSIFICATION	6.253905657249334E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999374609434	WITHOUT_CLASSIFICATION	6.253905657249334E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999977847204	WITHOUT_CLASSIFICATION	2.215279696273169E-9	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999977847204	WITHOUT_CLASSIFICATION	2.215279696273169E-9	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999987675904759	WITHOUT_CLASSIFICATION	1.2324095240288972E-6	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999983395242033	WITHOUT_CLASSIFICATION	1.6604757967694378E-6	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999999880602707	WITHOUT_CLASSIFICATION	1.193972926827438E-8	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.999999918106193	WITHOUT_CLASSIFICATION	8.189380696403725E-8	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999882861924	WITHOUT_CLASSIFICATION	1.1713807634142033E-8	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999999882861924	WITHOUT_CLASSIFICATION	1.1713807634142033E-8	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999999284137868	WITHOUT_CLASSIFICATION	7.158621319641718E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999986785686815	WITHOUT_CLASSIFICATION	1.3214313184542075E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999976957130218	WITHOUT_CLASSIFICATION	2.3042869781458206E-6	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999998059491048	WITHOUT_CLASSIFICATION	1.940508952511143E-7	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999977068446	WITHOUT_CLASSIFICATION	2.2931554042719997E-9	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999998070941775	WITHOUT_CLASSIFICATION	1.9290582265963462E-7	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999990602796707	WITHOUT_CLASSIFICATION	9.397203293011298E-7	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.99999996666063	WITHOUT_CLASSIFICATION	3.333937006344376E-8	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999997963535958	WITHOUT_CLASSIFICATION	2.036464041750611E-7	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999967449074	WITHOUT_CLASSIFICATION	3.255092641723452E-9	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999921846279384	WITHOUT_CLASSIFICATION	7.81537206164173E-6	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.999999937289147	WITHOUT_CLASSIFICATION	6.271085301171292E-8	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999997659333942	WITHOUT_CLASSIFICATION	2.3406660570574398E-7	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999769749358	WITHOUT_CLASSIFICATION	2.3025064229099456E-8	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999207667936	WITHOUT_CLASSIFICATION	7.923320643764822E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999374609434	WITHOUT_CLASSIFICATION	6.253905657249334E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999977847204	WITHOUT_CLASSIFICATION	2.215279696273169E-9	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999998070941775	WITHOUT_CLASSIFICATION	1.9290582265963462E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.999999927294486	WITHOUT_CLASSIFICATION	7.270551404499165E-8	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.999999927294486	WITHOUT_CLASSIFICATION	7.270551404499165E-8	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999994020964864	WITHOUT_CLASSIFICATION	5.979035135057406E-7	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999354844028	WITHOUT_CLASSIFICATION	6.451559726774334E-8	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999956630794	WITHOUT_CLASSIFICATION	4.3369206439697886E-9	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999977430918	WITHOUT_CLASSIFICATION	2.2569082462020226E-9	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999992431296779	WITHOUT_CLASSIFICATION	7.568703220312513E-7	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999998590162729	WITHOUT_CLASSIFICATION	1.4098372717088612E-7	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999998298767602	WITHOUT_CLASSIFICATION	1.7012323995170564E-7	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999975256697836	WITHOUT_CLASSIFICATION	2.474330216406765E-6	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999915030875	WITHOUT_CLASSIFICATION	8.496912502846262E-9	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999999689577578	WITHOUT_CLASSIFICATION	3.1042242172264954E-8	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999996310837435	WITHOUT_CLASSIFICATION	3.6891625657070155E-7	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999850370282	WITHOUT_CLASSIFICATION	1.4962971766696234E-8	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.999999933459846	WITHOUT_CLASSIFICATION	6.654015406740919E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999999628264079	WITHOUT_CLASSIFICATION	3.717359201433762E-8	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999977847204	WITHOUT_CLASSIFICATION	2.215279696273169E-9	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999986785686815	WITHOUT_CLASSIFICATION	1.3214313184542075E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999976957130218	WITHOUT_CLASSIFICATION	2.3042869781458206E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999976957130218	WITHOUT_CLASSIFICATION	2.3042869781458206E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999977068446	WITHOUT_CLASSIFICATION	2.2931554042719997E-9	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999998070941775	WITHOUT_CLASSIFICATION	1.9290582265963462E-7	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999998070941775	WITHOUT_CLASSIFICATION	1.9290582265963462E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.999999927294486	WITHOUT_CLASSIFICATION	7.270551404499165E-8	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999995611454788	WITHOUT_CLASSIFICATION	4.388545211262115E-7	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999988392169628	WITHOUT_CLASSIFICATION	1.160783037258924E-6	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999562432859	WITHOUT_CLASSIFICATION	4.3756714132477555E-8	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999939260828155	WITHOUT_CLASSIFICATION	6.0739171845088416E-6	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999996827050074	WITHOUT_CLASSIFICATION	3.172949927097529E-7	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999487858236724	WITHOUT_CLASSIFICATION	5.1214176327620603E-5	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999999481905657	WITHOUT_CLASSIFICATION	5.1809434241617164E-8	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999990973366	WITHOUT_CLASSIFICATION	9.026633611153511E-10	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999999671588472	WITHOUT_CLASSIFICATION	3.284115280811454E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999986785686815	WITHOUT_CLASSIFICATION	1.3214313184542075E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999976957130218	WITHOUT_CLASSIFICATION	2.3042869781458206E-6	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999976957130218	WITHOUT_CLASSIFICATION	2.3042869781458206E-6	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999977068446	WITHOUT_CLASSIFICATION	2.2931554042719997E-9	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999975256697836	WITHOUT_CLASSIFICATION	2.474330216406765E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999999689577578	WITHOUT_CLASSIFICATION	3.1042242172264954E-8	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9984781862221729	WITHOUT_CLASSIFICATION	0.0015218137778272238	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999998756787949	WITHOUT_CLASSIFICATION	1.2432120517036622E-7	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999982937380958	WITHOUT_CLASSIFICATION	1.7062619042545592E-6	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999982937380958	WITHOUT_CLASSIFICATION	1.7062619042545592E-6	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.999999829676379	WITHOUT_CLASSIFICATION	1.7032362103073153E-7	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999997604885018	WITHOUT_CLASSIFICATION	2.3951149821894355E-7	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999997653534497	WITHOUT_CLASSIFICATION	2.3464655039372495E-7	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999600374495	WITHOUT_CLASSIFICATION	3.996255049188276E-8	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999998911438315	WITHOUT_CLASSIFICATION	1.0885616849280567E-7	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999998911438315	WITHOUT_CLASSIFICATION	1.0885616849280567E-7	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999999060910089	WITHOUT_CLASSIFICATION	9.39089911781924E-8	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999999060910089	WITHOUT_CLASSIFICATION	9.39089911781924E-8	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999855123843	WITHOUT_CLASSIFICATION	1.4487615516526882E-8	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999855123843	WITHOUT_CLASSIFICATION	1.4487615516526882E-8	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.999999555772911	WITHOUT_CLASSIFICATION	4.4422708904572647E-7	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999997977075937	WITHOUT_CLASSIFICATION	2.0229240641168854E-7	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.999998565487861	WITHOUT_CLASSIFICATION	1.4345121389055047E-6	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999999803728281	WITHOUT_CLASSIFICATION	1.9627171841395522E-8	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999999945562866	WITHOUT_CLASSIFICATION	5.443713349641385E-9	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9999989104737236	WITHOUT_CLASSIFICATION	1.0895262764257752E-6	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999997831782288	WITHOUT_CLASSIFICATION	2.1682177125689148E-7	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999998195854369	WITHOUT_CLASSIFICATION	1.80414563062013E-7	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.999995427056233	WITHOUT_CLASSIFICATION	4.572943767003244E-6	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999963026323097	WITHOUT_CLASSIFICATION	3.6973676903005424E-6	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999999710781347	WITHOUT_CLASSIFICATION	2.8921865265398384E-8	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999999696865893	WITHOUT_CLASSIFICATION	3.0313410697998486E-8	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999995728817069	WITHOUT_CLASSIFICATION	4.271182931607427E-7	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999986124600762	WITHOUT_CLASSIFICATION	1.3875399237855188E-6	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999986124600762	WITHOUT_CLASSIFICATION	1.3875399237855188E-6	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999993579098246	WITHOUT_CLASSIFICATION	6.420901753874998E-7	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999883551124	WITHOUT_CLASSIFICATION	1.1644887715178207E-8	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999998826637488	WITHOUT_CLASSIFICATION	1.1733625127581743E-7	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.999999994659007	WITHOUT_CLASSIFICATION	5.340992971036821E-9	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999999498085018	WITHOUT_CLASSIFICATION	5.019149815828587E-8	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999997253191969	WITHOUT_CLASSIFICATION	2.7468080319074035E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999998887730126	WITHOUT_CLASSIFICATION	1.1122698729689476E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999997995635375	WITHOUT_CLASSIFICATION	2.004364625234283E-7	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999999940531986	WITHOUT_CLASSIFICATION	5.946801349543895E-9	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.999999970150462	WITHOUT_CLASSIFICATION	2.984953798510206E-8	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999813807883	WITHOUT_CLASSIFICATION	1.8619211739278403E-8	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999995078771108	WITHOUT_CLASSIFICATION	4.921228892660593E-7	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999999227883529	WITHOUT_CLASSIFICATION	7.721164711694322E-8	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999977601057252	WITHOUT_CLASSIFICATION	2.239894274825396E-6	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999570359044211	WITHOUT_CLASSIFICATION	4.296409557901148E-5	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999995409771735	WITHOUT_CLASSIFICATION	4.5902282642033637E-7	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.999999836205216	WITHOUT_CLASSIFICATION	1.6379478392859732E-7	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999999692298932	WITHOUT_CLASSIFICATION	3.077010681758269E-8	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999347074042	WITHOUT_CLASSIFICATION	6.529259573074693E-8	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999347074042	WITHOUT_CLASSIFICATION	6.529259573074693E-8	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.999999965006959	WITHOUT_CLASSIFICATION	3.499304104081122E-8	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999937671193485	WITHOUT_CLASSIFICATION	6.232880651585965E-6	TEST
//[]	WITHOUT_CLASSIFICATION	0.9999022857344947	WITHOUT_CLASSIFICATION	9.77142655054031E-5	TEST
//[]	WITHOUT_CLASSIFICATION	0.9999022857344947	WITHOUT_CLASSIFICATION	9.77142655054031E-5	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999993347464703	WITHOUT_CLASSIFICATION	6.652535296539727E-7	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999958449314431	WITHOUT_CLASSIFICATION	4.155068556918551E-6	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999871482051462	WITHOUT_CLASSIFICATION	1.2851794853748754E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999885985443919	WITHOUT_CLASSIFICATION	1.1401455608169315E-5	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999998545004559	WITHOUT_CLASSIFICATION	1.4549954398356509E-7	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999865193412	WITHOUT_CLASSIFICATION	1.3480658742161805E-8	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999865193412	WITHOUT_CLASSIFICATION	1.3480658742161805E-8	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999985696574	WITHOUT_CLASSIFICATION	1.4303426634429326E-9	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999997722373365	WITHOUT_CLASSIFICATION	2.277626636268214E-7	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999999431820373	WITHOUT_CLASSIFICATION	5.681796265648698E-8	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999947149370855	WITHOUT_CLASSIFICATION	5.285062914573063E-6	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999937671193485	WITHOUT_CLASSIFICATION	6.232880651585965E-6	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999946165318475	WITHOUT_CLASSIFICATION	5.383468152444574E-6	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999991194752342	WITHOUT_CLASSIFICATION	8.805247656844184E-7	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999991194752342	WITHOUT_CLASSIFICATION	8.805247656844184E-7	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999991896584456	WITHOUT_CLASSIFICATION	8.103415544894619E-7	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999755022537	WITHOUT_CLASSIFICATION	2.4497746333369216E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999755022537	WITHOUT_CLASSIFICATION	2.4497746333369216E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999649823927	WITHOUT_CLASSIFICATION	3.501760724557018E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999649823927	WITHOUT_CLASSIFICATION	3.501760724557018E-8	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999999649823927	WITHOUT_CLASSIFICATION	3.501760724557018E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999755022537	WITHOUT_CLASSIFICATION	2.4497746333369216E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999755022537	WITHOUT_CLASSIFICATION	2.4497746333369216E-8	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999991896584456	WITHOUT_CLASSIFICATION	8.103415544894619E-7	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999999791451266	WITHOUT_CLASSIFICATION	2.0854873393200777E-8	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999999131746143	WITHOUT_CLASSIFICATION	8.68253856941488E-8	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999998309699023	WITHOUT_CLASSIFICATION	1.6903009763598625E-7	TEST
// normal	WITHOUT_CLASSIFICATION	0.9999996948679947	WITHOUT_CLASSIFICATION	3.051320054193001E-7	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999940407657	WITHOUT_CLASSIFICATION	5.959234400788235E-9	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999994953615399	WITHOUT_CLASSIFICATION	5.046384601148825E-7	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999997312743881	WITHOUT_CLASSIFICATION	2.6872561177077845E-7	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999638452304	WITHOUT_CLASSIFICATION	3.6154769713203605E-8	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999999813807883	WITHOUT_CLASSIFICATION	1.8619211739278403E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999755022537	WITHOUT_CLASSIFICATION	2.4497746333369216E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999755022537	WITHOUT_CLASSIFICATION	2.4497746333369216E-8	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999756932404	WITHOUT_CLASSIFICATION	2.4306759591537443E-8	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999999312506005	WITHOUT_CLASSIFICATION	6.874939951919637E-8	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999994165784973	WITHOUT_CLASSIFICATION	5.834215027020118E-7	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999685235702	WITHOUT_CLASSIFICATION	3.14764299052127E-8	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.999999865879989	WITHOUT_CLASSIFICATION	1.3412001103829563E-7	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999508826211	WITHOUT_CLASSIFICATION	4.9117378850446725E-8	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999875287037	WITHOUT_CLASSIFICATION	1.2471296361841718E-8	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999254360189	WITHOUT_CLASSIFICATION	7.456398110317739E-8	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999998204403601	WITHOUT_CLASSIFICATION	1.7955963985076438E-7	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999713457631	WITHOUT_CLASSIFICATION	2.8654236923806742E-8	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999932811950016	WITHOUT_CLASSIFICATION	6.718804998384365E-6	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.999997730534518	WITHOUT_CLASSIFICATION	2.269465481941533E-6	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999999395908148	WITHOUT_CLASSIFICATION	6.040918520637937E-8	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999999890848592	WITHOUT_CLASSIFICATION	1.091514079529371E-7	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999971706065	WITHOUT_CLASSIFICATION	2.8293933532353715E-9	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999993185026113	WITHOUT_CLASSIFICATION	6.814973886585192E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999993185026113	WITHOUT_CLASSIFICATION	6.814973886585192E-7	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9999993185026113	WITHOUT_CLASSIFICATION	6.814973886585192E-7	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999999894295846	WITHOUT_CLASSIFICATION	1.057041541419409E-8	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999964816672	WITHOUT_CLASSIFICATION	3.51833275380244E-9	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999999834028341	WITHOUT_CLASSIFICATION	1.6597165833765873E-8	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999999415034042	WITHOUT_CLASSIFICATION	5.849659586381465E-8	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999999571485851	WITHOUT_CLASSIFICATION	4.285141488670665E-8	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999996150026584	WITHOUT_CLASSIFICATION	3.8499734155206E-7	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999996215063	WITHOUT_CLASSIFICATION	3.784937983043439E-10	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999996374164397	WITHOUT_CLASSIFICATION	3.625835602209779E-7	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999999470602566	WITHOUT_CLASSIFICATION	5.293974340216222E-8	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999997699607164	WITHOUT_CLASSIFICATION	2.3003928369549857E-7	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999995671779884	WITHOUT_CLASSIFICATION	4.328220115732331E-7	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999995138464548	WITHOUT_CLASSIFICATION	4.861535451727753E-7	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999985696574	WITHOUT_CLASSIFICATION	1.4303426634429326E-9	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999755022537	WITHOUT_CLASSIFICATION	2.4497746333369216E-8	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999755022537	WITHOUT_CLASSIFICATION	2.4497746333369216E-8	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999991896584456	WITHOUT_CLASSIFICATION	8.103415544894619E-7	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999994953615399	WITHOUT_CLASSIFICATION	5.046384601148825E-7	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999999312506005	WITHOUT_CLASSIFICATION	6.874939951919637E-8	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999685235702	WITHOUT_CLASSIFICATION	3.14764299052127E-8	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999999508826211	WITHOUT_CLASSIFICATION	4.9117378850446725E-8	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999994165784973	WITHOUT_CLASSIFICATION	5.834215027020118E-7	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999875287037	WITHOUT_CLASSIFICATION	1.2471296361841718E-8	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999713457631	WITHOUT_CLASSIFICATION	2.8654236923806742E-8	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999998204403601	WITHOUT_CLASSIFICATION	1.7955963985076438E-7	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.999997730534518	WITHOUT_CLASSIFICATION	2.269465481941533E-6	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999999556868201	WITHOUT_CLASSIFICATION	4.431317980442351E-8	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999998917804336	WITHOUT_CLASSIFICATION	1.0821956635544136E-7	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.999999680984807	WITHOUT_CLASSIFICATION	3.1901519295334234E-7	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999698069737	WITHOUT_CLASSIFICATION	3.019302634322628E-8	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999999762065542	WITHOUT_CLASSIFICATION	2.379344580737317E-8	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.999999658723161	WITHOUT_CLASSIFICATION	3.412768390192958E-7	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999998601426023	WITHOUT_CLASSIFICATION	1.398573977238339E-7	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999997829199416	WITHOUT_CLASSIFICATION	2.170800582278512E-7	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999999377269304	WITHOUT_CLASSIFICATION	6.227306948992637E-8	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999999238541677	WITHOUT_CLASSIFICATION	7.614583224110644E-8	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999999669423645	WITHOUT_CLASSIFICATION	3.3057635464096714E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999848617873	WITHOUT_CLASSIFICATION	1.513821268921858E-8	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999993796504335	WITHOUT_CLASSIFICATION	6.203495665881088E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999998984715753	WITHOUT_CLASSIFICATION	1.0152842465152567E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999980036797	WITHOUT_CLASSIFICATION	1.9963203788375E-9	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999610717701	WITHOUT_CLASSIFICATION	3.8928229887804435E-8	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999992096746797	WITHOUT_CLASSIFICATION	7.903253202535516E-7	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999999527499414	WITHOUT_CLASSIFICATION	4.7250058641824E-8	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999947280638	WITHOUT_CLASSIFICATION	5.271936326706725E-9	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999999868580717	WITHOUT_CLASSIFICATION	1.3141928355809348E-8	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999999898082689	WITHOUT_CLASSIFICATION	1.0191731227642126E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999896473178	WITHOUT_CLASSIFICATION	1.0352682206675068E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999896473178	WITHOUT_CLASSIFICATION	1.0352682206675068E-8	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999995770052941	WITHOUT_CLASSIFICATION	4.229947058745911E-7	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999890759252	WITHOUT_CLASSIFICATION	1.0924074755241146E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999879067541683	WITHOUT_CLASSIFICATION	1.209324583182057E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999879067541683	WITHOUT_CLASSIFICATION	1.209324583182057E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999879067541683	WITHOUT_CLASSIFICATION	1.209324583182057E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999767819554243	WITHOUT_CLASSIFICATION	2.3218044575725103E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999767819554243	WITHOUT_CLASSIFICATION	2.3218044575725103E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999767819554243	WITHOUT_CLASSIFICATION	2.3218044575725103E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999767819554243	WITHOUT_CLASSIFICATION	2.3218044575725103E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999521635951875	WITHOUT_CLASSIFICATION	4.783640481244607E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999521635951875	WITHOUT_CLASSIFICATION	4.783640481244607E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999521635951875	WITHOUT_CLASSIFICATION	4.783640481244607E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999599818958317	WITHOUT_CLASSIFICATION	4.001810416829535E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999599818958317	WITHOUT_CLASSIFICATION	4.001810416829535E-5	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999506653126194	WITHOUT_CLASSIFICATION	4.9334687380562354E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999663081486678	WITHOUT_CLASSIFICATION	3.3691851332070086E-5	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999890759252	WITHOUT_CLASSIFICATION	1.0924074755241146E-8	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999332734613	WITHOUT_CLASSIFICATION	6.672653865350423E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999879067541683	WITHOUT_CLASSIFICATION	1.209324583182057E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999879067541683	WITHOUT_CLASSIFICATION	1.209324583182057E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999767819554243	WITHOUT_CLASSIFICATION	2.3218044575725103E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999767819554243	WITHOUT_CLASSIFICATION	2.3218044575725103E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999767819554243	WITHOUT_CLASSIFICATION	2.3218044575725103E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999521635951875	WITHOUT_CLASSIFICATION	4.783640481244607E-5	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999521635951875	WITHOUT_CLASSIFICATION	4.783640481244607E-5	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999599818958317	WITHOUT_CLASSIFICATION	4.001810416829535E-5	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9999663081486678	WITHOUT_CLASSIFICATION	3.3691851332070086E-5	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999753756814	WITHOUT_CLASSIFICATION	2.462431860501653E-8	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999999753756814	WITHOUT_CLASSIFICATION	2.462431860501653E-8	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999743226019	WITHOUT_CLASSIFICATION	2.567739821837092E-8	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999743226019	WITHOUT_CLASSIFICATION	2.567739821837092E-8	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999993377285626	WITHOUT_CLASSIFICATION	6.622714374225234E-7	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9999993377285626	WITHOUT_CLASSIFICATION	6.622714374225234E-7	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999998209019496	WITHOUT_CLASSIFICATION	1.7909805034074473E-7	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.999999923944351	WITHOUT_CLASSIFICATION	7.605564905665532E-8	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.999999923944351	WITHOUT_CLASSIFICATION	7.605564905665532E-8	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999999759641914	WITHOUT_CLASSIFICATION	2.4035808547022155E-8	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999999759641914	WITHOUT_CLASSIFICATION	2.4035808547022155E-8	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999316003625	WITHOUT_CLASSIFICATION	6.8399637533116E-8	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999999361481139	WITHOUT_CLASSIFICATION	6.385188602514733E-8	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999999361481139	WITHOUT_CLASSIFICATION	6.385188602514733E-8	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999999976426038	WITHOUT_CLASSIFICATION	2.357396189846019E-8	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999997887605112	WITHOUT_CLASSIFICATION	2.112394887942104E-7	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999540967537	WITHOUT_CLASSIFICATION	4.590324627148951E-8	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999767819554243	WITHOUT_CLASSIFICATION	2.3218044575725103E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999767819554243	WITHOUT_CLASSIFICATION	2.3218044575725103E-5	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999999976426038	WITHOUT_CLASSIFICATION	2.357396189846019E-8	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.99999986789765	WITHOUT_CLASSIFICATION	1.3210234997034778E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999997627568435	WITHOUT_CLASSIFICATION	2.3724315656769632E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999997627568435	WITHOUT_CLASSIFICATION	2.3724315656769632E-7	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999997627568435	WITHOUT_CLASSIFICATION	2.3724315656769632E-7	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.99999996481287	WITHOUT_CLASSIFICATION	3.51871300661747E-8	TEST
// args	WITHOUT_CLASSIFICATION	0.9999994728459661	WITHOUT_CLASSIFICATION	5.271540339152685E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999994210886347	WITHOUT_CLASSIFICATION	5.789113653044282E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999994210886347	WITHOUT_CLASSIFICATION	5.789113653044282E-7	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999999696987585	WITHOUT_CLASSIFICATION	3.030124163207222E-8	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999998711356394	WITHOUT_CLASSIFICATION	1.288643606010254E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999998691386218	WITHOUT_CLASSIFICATION	1.308613781635367E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.999999603513958	WITHOUT_CLASSIFICATION	3.96486041998014E-7	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999189332076	WITHOUT_CLASSIFICATION	8.106679237004698E-8	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999642243436	WITHOUT_CLASSIFICATION	3.577565646600011E-8	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999642243436	WITHOUT_CLASSIFICATION	3.577565646600011E-8	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999999919013245	WITHOUT_CLASSIFICATION	8.09867553595236E-9	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999553130617632	WITHOUT_CLASSIFICATION	4.468693823685564E-5	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999553130617632	WITHOUT_CLASSIFICATION	4.468693823685564E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999767819554243	WITHOUT_CLASSIFICATION	2.3218044575725103E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999997627568435	WITHOUT_CLASSIFICATION	2.3724315656769632E-7	TEST
// args	WITHOUT_CLASSIFICATION	0.9999994728459661	WITHOUT_CLASSIFICATION	5.271540339152685E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999994210886347	WITHOUT_CLASSIFICATION	5.789113653044282E-7	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999999696987585	WITHOUT_CLASSIFICATION	3.030124163207222E-8	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9999998711356394	WITHOUT_CLASSIFICATION	1.288643606010254E-7	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9999998691386218	WITHOUT_CLASSIFICATION	1.308613781635367E-7	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.999999603513958	WITHOUT_CLASSIFICATION	3.96486041998014E-7	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999553130617632	WITHOUT_CLASSIFICATION	4.468693823685564E-5	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999998188286546	WITHOUT_CLASSIFICATION	1.8117134549292506E-7	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999999331613559	WITHOUT_CLASSIFICATION	6.683864409494194E-8	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999998564717782	WITHOUT_CLASSIFICATION	1.4352822164662582E-7	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999999516065997	WITHOUT_CLASSIFICATION	4.839340019823251E-8	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999997506642401	WITHOUT_CLASSIFICATION	2.493357599392767E-7	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999993840557018	WITHOUT_CLASSIFICATION	6.159442981975336E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998353865691	WITHOUT_CLASSIFICATION	1.6461343084842845E-7	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998353865691	WITHOUT_CLASSIFICATION	1.6461343084842845E-7	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999998729598065	WITHOUT_CLASSIFICATION	1.2704019355057482E-7	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999999382629557	WITHOUT_CLASSIFICATION	6.173704435141999E-8	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999999425915574	WITHOUT_CLASSIFICATION	5.740844244196592E-8	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999599621984	WITHOUT_CLASSIFICATION	4.003780171508303E-8	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999401741498	WITHOUT_CLASSIFICATION	5.982585013030967E-8	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999401741498	WITHOUT_CLASSIFICATION	5.982585013030967E-8	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999999682075296	WITHOUT_CLASSIFICATION	3.1792470471384094E-8	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999999525380312	WITHOUT_CLASSIFICATION	4.7461968744464234E-8	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999999946540464	WITHOUT_CLASSIFICATION	5.345953600268124E-8	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999999946540464	WITHOUT_CLASSIFICATION	5.345953600268124E-8	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999996097819657	WITHOUT_CLASSIFICATION	3.9021803427929575E-7	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999999785213736	WITHOUT_CLASSIFICATION	2.1478626404613603E-8	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999189332076	WITHOUT_CLASSIFICATION	8.106679237004698E-8	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999182176492	WITHOUT_CLASSIFICATION	8.17823507550891E-8	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999769896144	WITHOUT_CLASSIFICATION	2.301038556857523E-8	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999997421847364	WITHOUT_CLASSIFICATION	2.5781526360426466E-7	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999504940572	WITHOUT_CLASSIFICATION	4.950594268706135E-8	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999998926568839	WITHOUT_CLASSIFICATION	1.0734311603114837E-7	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999998772732113	WITHOUT_CLASSIFICATION	1.2272678869183627E-7	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999900876048	WITHOUT_CLASSIFICATION	9.9123951264698E-9	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999999544211722	WITHOUT_CLASSIFICATION	4.557882786378389E-8	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999987718003	WITHOUT_CLASSIFICATION	1.2281996113789732E-9	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999987718003	WITHOUT_CLASSIFICATION	1.2281996113789732E-9	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999999536005533	WITHOUT_CLASSIFICATION	4.639944668883081E-8	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999999536005533	WITHOUT_CLASSIFICATION	4.639944668883081E-8	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999926233988	WITHOUT_CLASSIFICATION	7.376601086745236E-9	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999999778496975	WITHOUT_CLASSIFICATION	2.2150302500129126E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999999778496975	WITHOUT_CLASSIFICATION	2.2150302500129126E-7	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999999778496975	WITHOUT_CLASSIFICATION	2.2150302500129126E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999993453675954	WITHOUT_CLASSIFICATION	6.546324047317451E-7	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999999633534732	WITHOUT_CLASSIFICATION	3.664652680216906E-8	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999999633534732	WITHOUT_CLASSIFICATION	3.664652680216906E-8	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999997455670769	WITHOUT_CLASSIFICATION	2.5443292310132155E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999999733245933	WITHOUT_CLASSIFICATION	2.667540658386586E-8	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999998326271492	WITHOUT_CLASSIFICATION	1.6737285073823348E-7	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999999033979818	WITHOUT_CLASSIFICATION	9.660201812378044E-8	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999999181591699	WITHOUT_CLASSIFICATION	8.18408301217399E-8	TEST
// next jump	WITHOUT_CLASSIFICATION	0.999999782669165	WITHOUT_CLASSIFICATION	2.173308349954399E-7	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999748536128238	WITHOUT_CLASSIFICATION	2.5146387176256546E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999993796504335	WITHOUT_CLASSIFICATION	6.203495665881088E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999993796504335	WITHOUT_CLASSIFICATION	6.203495665881088E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999993453675954	WITHOUT_CLASSIFICATION	6.546324047317451E-7	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999997455670769	WITHOUT_CLASSIFICATION	2.5443292310132155E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998666429597	WITHOUT_CLASSIFICATION	1.3335704035371382E-7	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999999733245933	WITHOUT_CLASSIFICATION	2.667540658386586E-8	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999998326271492	WITHOUT_CLASSIFICATION	1.6737285073823348E-7	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999922119419	WITHOUT_CLASSIFICATION	7.788058116059348E-9	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999998597296578	WITHOUT_CLASSIFICATION	1.4027034220102468E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995336660161	WITHOUT_CLASSIFICATION	4.663339837833105E-7	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9999559953543158	WITHOUT_CLASSIFICATION	4.400464568422391E-5	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999984974806517	WITHOUT_CLASSIFICATION	1.5025193483446356E-6	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.999999990888083	WITHOUT_CLASSIFICATION	9.111917107840528E-9	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999999961064819	WITHOUT_CLASSIFICATION	3.893518108687092E-9	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999999922119419	WITHOUT_CLASSIFICATION	7.788058116059348E-9	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999990343896452	WITHOUT_CLASSIFICATION	9.656103547896518E-6	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999990343896452	WITHOUT_CLASSIFICATION	9.656103547896518E-6	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999990674985251	WITHOUT_CLASSIFICATION	9.325014748854079E-7	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.999999986240887	WITHOUT_CLASSIFICATION	1.3759112914348042E-8	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999996238673896	WITHOUT_CLASSIFICATION	3.7613261037508394E-7	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999985481621413	WITHOUT_CLASSIFICATION	1.4518378587276019E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999990709588912	WITHOUT_CLASSIFICATION	9.290411087910128E-7	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999999117205429	WITHOUT_CLASSIFICATION	8.827945705932303E-8	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999998911811253	WITHOUT_CLASSIFICATION	1.0881887469115294E-7	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999999473543614	WITHOUT_CLASSIFICATION	5.264563868214345E-8	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999866213123	WITHOUT_CLASSIFICATION	1.3378687682714898E-8	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999997919869573	WITHOUT_CLASSIFICATION	2.0801304274047876E-7	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999989816384782	WITHOUT_CLASSIFICATION	1.018361521755911E-6	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999985481621413	WITHOUT_CLASSIFICATION	1.4518378587276019E-6	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999990709588912	WITHOUT_CLASSIFICATION	9.290411087910128E-7	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999999882091172	WITHOUT_CLASSIFICATION	1.179088278216684E-8	TEST
// push false	WITHOUT_CLASSIFICATION	0.999999648745843	WITHOUT_CLASSIFICATION	3.512541569378378E-7	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999998110426939	WITHOUT_CLASSIFICATION	1.8895730615300598E-7	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999983317832003	WITHOUT_CLASSIFICATION	1.6682167997438908E-6	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999982787896903	WITHOUT_CLASSIFICATION	1.7212103097602247E-6	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999965181627025	WITHOUT_CLASSIFICATION	3.4818372974991865E-6	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9999083853603213	WITHOUT_CLASSIFICATION	9.161463967875005E-5	TEST
// push true	WITHOUT_CLASSIFICATION	0.9999994230857011	WITHOUT_CLASSIFICATION	5.769142987870518E-7	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999985707930462	WITHOUT_CLASSIFICATION	1.4292069537811098E-6	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999953633843125	WITHOUT_CLASSIFICATION	4.6366156874180985E-6	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999985951244538	WITHOUT_CLASSIFICATION	1.4048755462722653E-6	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9999901920834875	WITHOUT_CLASSIFICATION	9.807916512430229E-6	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999999710729179	WITHOUT_CLASSIFICATION	2.8927081991809702E-8	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999999125374546	WITHOUT_CLASSIFICATION	8.746254545043513E-8	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999965131777242	WITHOUT_CLASSIFICATION	3.48682227585061E-6	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999863414153	WITHOUT_CLASSIFICATION	1.3658584682762598E-8	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999932345513336	WITHOUT_CLASSIFICATION	6.765448666409561E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999998196421445	WITHOUT_CLASSIFICATION	1.8035785560275607E-7	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999851381746	WITHOUT_CLASSIFICATION	1.4861825506033366E-8	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999998915252463	WITHOUT_CLASSIFICATION	1.0847475371973832E-7	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999932345513336	WITHOUT_CLASSIFICATION	6.765448666409561E-6	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999998196421445	WITHOUT_CLASSIFICATION	1.8035785560275607E-7	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999851381746	WITHOUT_CLASSIFICATION	1.4861825506033366E-8	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9999996954463786	WITHOUT_CLASSIFICATION	3.045536214259455E-7	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.999999995589925	WITHOUT_CLASSIFICATION	4.4100749211319965E-9	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999999877731817	WITHOUT_CLASSIFICATION	1.2226818389304986E-8	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999992675532454	WITHOUT_CLASSIFICATION	7.324467546044782E-7	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999988070768882	WITHOUT_CLASSIFICATION	1.1929231118307379E-6	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999998428753142	WITHOUT_CLASSIFICATION	1.5712468577458606E-7	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999999910420693	WITHOUT_CLASSIFICATION	8.957930757158785E-9	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999999964660011	WITHOUT_CLASSIFICATION	3.5339988564604175E-9	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999999517948802	WITHOUT_CLASSIFICATION	4.820511982492273E-8	TEST
// arities	WITHOUT_CLASSIFICATION	0.9999998742128047	WITHOUT_CLASSIFICATION	1.2578719537612824E-7	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9916694571987998	WITHOUT_CLASSIFICATION	0.008330542801200097	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999999095185603	WITHOUT_CLASSIFICATION	9.048143972760664E-8	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.999999816461271	WITHOUT_CLASSIFICATION	1.8353872902235374E-7	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999998955684597	WITHOUT_CLASSIFICATION	1.0443154021127263E-7	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9994833318168783	WITHOUT_CLASSIFICATION	5.166681831216386E-4	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999998493733733	WITHOUT_CLASSIFICATION	1.5062662676153234E-7	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999999898755565	WITHOUT_CLASSIFICATION	1.0124443436050368E-8	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999996900661282	WITHOUT_CLASSIFICATION	3.0993387175210637E-7	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999998749233558	WITHOUT_CLASSIFICATION	1.2507664412543476E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999996694932979	WITHOUT_CLASSIFICATION	3.3050670213023594E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998831642978	WITHOUT_CLASSIFICATION	1.1683570219613963E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999998283707024	WITHOUT_CLASSIFICATION	1.7162929754533921E-7	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999998283707024	WITHOUT_CLASSIFICATION	1.7162929754533921E-7	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999995039189304	WITHOUT_CLASSIFICATION	4.960810694513028E-7	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999995039189304	WITHOUT_CLASSIFICATION	4.960810694513028E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999995718071079	WITHOUT_CLASSIFICATION	4.2819289212951974E-7	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999995718071079	WITHOUT_CLASSIFICATION	4.2819289212951974E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999087014292	WITHOUT_CLASSIFICATION	9.129857081104508E-8	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999902779318	WITHOUT_CLASSIFICATION	9.722068095643008E-9	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999960357383	WITHOUT_CLASSIFICATION	3.9642617489236385E-9	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999993150483473	WITHOUT_CLASSIFICATION	6.849516527539692E-7	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999993687490794	WITHOUT_CLASSIFICATION	6.312509207003981E-7	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.999999966607292	WITHOUT_CLASSIFICATION	3.3392708035720226E-8	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999998129383965	WITHOUT_CLASSIFICATION	1.8706160348662485E-7	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999998577210025	WITHOUT_CLASSIFICATION	1.4227899755678614E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999993796504335	WITHOUT_CLASSIFICATION	6.203495665881088E-7	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999087014292	WITHOUT_CLASSIFICATION	9.129857081104508E-8	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999902779318	WITHOUT_CLASSIFICATION	9.722068095643008E-9	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999960357383	WITHOUT_CLASSIFICATION	3.9642617489236385E-9	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999993687490794	WITHOUT_CLASSIFICATION	6.312509207003981E-7	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.999999966607292	WITHOUT_CLASSIFICATION	3.3392708035720226E-8	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999997273682754	WITHOUT_CLASSIFICATION	2.7263172466872736E-7	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999999090789214	WITHOUT_CLASSIFICATION	9.092107855661541E-8	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999990915179121	WITHOUT_CLASSIFICATION	9.084820878348941E-7	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999990915179121	WITHOUT_CLASSIFICATION	9.084820878348941E-7	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999994947863635	WITHOUT_CLASSIFICATION	5.052136365500937E-7	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999314004615	WITHOUT_CLASSIFICATION	6.85995385085022E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999521378705	WITHOUT_CLASSIFICATION	4.7862129422997395E-8	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999998157436328	WITHOUT_CLASSIFICATION	1.8425636721032385E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999998157436328	WITHOUT_CLASSIFICATION	1.8425636721032385E-7	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999999763731424	WITHOUT_CLASSIFICATION	2.3626857600117365E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999996181038532	WITHOUT_CLASSIFICATION	3.818961468355477E-7	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999666071846	WITHOUT_CLASSIFICATION	3.339281542407742E-8	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999999538927412	WITHOUT_CLASSIFICATION	4.6107258839795865E-8	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999948098491	WITHOUT_CLASSIFICATION	5.1901508482241E-9	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999998984715753	WITHOUT_CLASSIFICATION	1.0152842465152567E-7	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999980036797	WITHOUT_CLASSIFICATION	1.9963203788375E-9	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999610717701	WITHOUT_CLASSIFICATION	3.8928229887804435E-8	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999992096746797	WITHOUT_CLASSIFICATION	7.903253202535516E-7	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999999868580717	WITHOUT_CLASSIFICATION	1.3141928355809348E-8	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999999898082689	WITHOUT_CLASSIFICATION	1.0191731227642126E-8	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999999763731424	WITHOUT_CLASSIFICATION	2.3626857600117365E-7	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999996181038532	WITHOUT_CLASSIFICATION	3.818961468355477E-7	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999999538927412	WITHOUT_CLASSIFICATION	4.6107258839795865E-8	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999885952264	WITHOUT_CLASSIFICATION	1.1404773582080346E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999521378705	WITHOUT_CLASSIFICATION	4.7862129422997395E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999521378705	WITHOUT_CLASSIFICATION	4.7862129422997395E-8	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999989816384782	WITHOUT_CLASSIFICATION	1.018361521755911E-6	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999989816384782	WITHOUT_CLASSIFICATION	1.018361521755911E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999999979647013	WITHOUT_CLASSIFICATION	2.035298689428849E-8	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999999979647013	WITHOUT_CLASSIFICATION	2.035298689428849E-8	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999837759896	WITHOUT_CLASSIFICATION	1.622401040994666E-8	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.999999925686578	WITHOUT_CLASSIFICATION	7.431342187617607E-8	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999998148190191	WITHOUT_CLASSIFICATION	1.8518098092088152E-7	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999952301352961	WITHOUT_CLASSIFICATION	4.769864703843419E-6	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999998903697869	WITHOUT_CLASSIFICATION	1.0963021302302422E-7	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999057425778	WITHOUT_CLASSIFICATION	9.425742215539597E-8	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999153956899	WITHOUT_CLASSIFICATION	8.460431011997762E-8	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999952502286	WITHOUT_CLASSIFICATION	4.7497713360729795E-9	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999999831527251	WITHOUT_CLASSIFICATION	1.6847274916557577E-8	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.999999979937756	WITHOUT_CLASSIFICATION	2.00622440385878E-8	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999998452153751	WITHOUT_CLASSIFICATION	1.5478462499293668E-7	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999999764036885	WITHOUT_CLASSIFICATION	2.35963114232411E-8	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999998727667294	WITHOUT_CLASSIFICATION	1.2723327054314202E-7	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999648410236	WITHOUT_CLASSIFICATION	3.5158976442662584E-8	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.999999652218115	WITHOUT_CLASSIFICATION	3.477818849521332E-7	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999997993859946	WITHOUT_CLASSIFICATION	2.0061400549446717E-7	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999998594339315	WITHOUT_CLASSIFICATION	1.4056606849655136E-7	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999999750211986	WITHOUT_CLASSIFICATION	2.4978801294392777E-8	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999999935357842	WITHOUT_CLASSIFICATION	6.464215836677071E-9	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999980036797	WITHOUT_CLASSIFICATION	1.9963203788375E-9	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999992096746797	WITHOUT_CLASSIFICATION	7.903253202535516E-7	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999896473178	WITHOUT_CLASSIFICATION	1.0352682206675068E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999994210886347	WITHOUT_CLASSIFICATION	5.789113653044282E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999994210886347	WITHOUT_CLASSIFICATION	5.789113653044282E-7	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999999885952264	WITHOUT_CLASSIFICATION	1.1404773582080346E-8	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999521378705	WITHOUT_CLASSIFICATION	4.7862129422997395E-8	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999989816384782	WITHOUT_CLASSIFICATION	1.018361521755911E-6	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999999979647013	WITHOUT_CLASSIFICATION	2.035298689428849E-8	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999999373220901	WITHOUT_CLASSIFICATION	6.267790985808231E-8	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999996743763162	WITHOUT_CLASSIFICATION	3.256236838509537E-7	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999999449743799	WITHOUT_CLASSIFICATION	5.5025620036829036E-8	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.999999925240679	WITHOUT_CLASSIFICATION	7.475932095869404E-8	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999782199938	WITHOUT_CLASSIFICATION	2.1780006320788995E-8	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999782199938	WITHOUT_CLASSIFICATION	2.1780006320788995E-8	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999360689001	WITHOUT_CLASSIFICATION	6.39310998822228E-8	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999999299910832	WITHOUT_CLASSIFICATION	7.000891672985933E-8	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999507477086	WITHOUT_CLASSIFICATION	4.925229129226568E-8	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999999259308534	WITHOUT_CLASSIFICATION	7.40691466094954E-8	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.999999881019908	WITHOUT_CLASSIFICATION	1.1898009191455252E-7	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.999999881019908	WITHOUT_CLASSIFICATION	1.1898009191455252E-7	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999999305875779	WITHOUT_CLASSIFICATION	6.941242217195662E-8	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.9999999673146054	WITHOUT_CLASSIFICATION	3.268539456908402E-8	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999997980971613	WITHOUT_CLASSIFICATION	2.0190283863039876E-7	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999992638009453	WITHOUT_CLASSIFICATION	7.361990547298485E-7	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999983476952894	WITHOUT_CLASSIFICATION	1.6523047106220898E-6	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999842355772	WITHOUT_CLASSIFICATION	1.576442269337509E-8	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999992056074802	WITHOUT_CLASSIFICATION	7.943925196551742E-7	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999830422123	WITHOUT_CLASSIFICATION	1.695778781802944E-8	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999977684635591	WITHOUT_CLASSIFICATION	2.2315364408223968E-6	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9987752434166275	WITHOUT_CLASSIFICATION	0.0012247565833725003	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999997002438503	WITHOUT_CLASSIFICATION	2.997561497565006E-7	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999996501198692	WITHOUT_CLASSIFICATION	3.4988013071706877E-7	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999970079859	WITHOUT_CLASSIFICATION	2.9920141283352844E-9	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999999752485239	WITHOUT_CLASSIFICATION	2.475147617043824E-8	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999893033053097	WITHOUT_CLASSIFICATION	1.0696694690390113E-5	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999983790916347	WITHOUT_CLASSIFICATION	1.6209083652453454E-6	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999998398825556	WITHOUT_CLASSIFICATION	1.6011744446266194E-7	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999999590612323	WITHOUT_CLASSIFICATION	4.093876764257086E-8	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.999999141503214	WITHOUT_CLASSIFICATION	8.58496785978404E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999996930690871	WITHOUT_CLASSIFICATION	3.069309129520493E-7	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999990453989489	WITHOUT_CLASSIFICATION	9.546010511062646E-7	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999999739218228	WITHOUT_CLASSIFICATION	2.6078177216253812E-8	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999999739218228	WITHOUT_CLASSIFICATION	2.6078177216253812E-8	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999999496670472	WITHOUT_CLASSIFICATION	5.0332952785165055E-8	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.999999839166937	WITHOUT_CLASSIFICATION	1.6083306294398707E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999997995635375	WITHOUT_CLASSIFICATION	2.004364625234283E-7	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999997995635375	WITHOUT_CLASSIFICATION	2.004364625234283E-7	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999964982257545	WITHOUT_CLASSIFICATION	3.5017742454191413E-6	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999995060066199	WITHOUT_CLASSIFICATION	4.939933800947455E-7	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999940643131822	WITHOUT_CLASSIFICATION	5.935686817815735E-6	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999650108331	WITHOUT_CLASSIFICATION	3.498916692897455E-8	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999650108331	WITHOUT_CLASSIFICATION	3.498916692897455E-8	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999999025525514	WITHOUT_CLASSIFICATION	9.744744859425575E-8	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999578848231	WITHOUT_CLASSIFICATION	4.211517689466744E-8	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999975039273	WITHOUT_CLASSIFICATION	2.49607267690339E-9	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999999849126355	WITHOUT_CLASSIFICATION	1.5087364524380192E-8	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999999765601069	WITHOUT_CLASSIFICATION	2.3439893108182888E-8	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999999347300387	WITHOUT_CLASSIFICATION	6.526996137505112E-8	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999999492900378	WITHOUT_CLASSIFICATION	5.070996232111881E-8	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999936448031401	WITHOUT_CLASSIFICATION	6.355196859791225E-6	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999998635984891	WITHOUT_CLASSIFICATION	1.364015108377677E-7	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999998298910582	WITHOUT_CLASSIFICATION	1.701089418946598E-7	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999994084418145	WITHOUT_CLASSIFICATION	5.915581855120586E-7	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999998569572139	WITHOUT_CLASSIFICATION	1.4304278609081253E-7	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9999999430755518	WITHOUT_CLASSIFICATION	5.6924448012852777E-8	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999996268979305	WITHOUT_CLASSIFICATION	3.731020694157876E-7	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999998748203291	WITHOUT_CLASSIFICATION	1.2517967091156532E-7	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999999918272671	WITHOUT_CLASSIFICATION	8.17273289716449E-9	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999941565714	WITHOUT_CLASSIFICATION	5.8434285266464165E-9	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999998106074629	WITHOUT_CLASSIFICATION	1.8939253711777953E-7	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999996127122087	WITHOUT_CLASSIFICATION	3.8728779134700844E-7	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999997994040356	WITHOUT_CLASSIFICATION	2.0059596438891016E-7	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999999787541216	WITHOUT_CLASSIFICATION	2.124587840984112E-8	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999998663777903	WITHOUT_CLASSIFICATION	1.3362220967416111E-7	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.999999829726867	WITHOUT_CLASSIFICATION	1.7027313305544038E-7	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999999278848047	WITHOUT_CLASSIFICATION	7.211519530945764E-8	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999930791588293	WITHOUT_CLASSIFICATION	6.9208411706273405E-6	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999994173693941	WITHOUT_CLASSIFICATION	5.826306058607241E-7	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999713608737985	WITHOUT_CLASSIFICATION	2.8639126201525777E-5	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999998317272204	WITHOUT_CLASSIFICATION	1.6827277963213625E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999997133298109	WITHOUT_CLASSIFICATION	2.86670189070051E-7	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999888662086	WITHOUT_CLASSIFICATION	1.1133791468883218E-8	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999999160492	WITHOUT_CLASSIFICATION	8.3950774273703E-11	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999996268979305	WITHOUT_CLASSIFICATION	3.731020694157876E-7	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999998317272204	WITHOUT_CLASSIFICATION	1.6827277963213625E-7	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999997133298109	WITHOUT_CLASSIFICATION	2.86670189070051E-7	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999999160492	WITHOUT_CLASSIFICATION	8.3950774273703E-11	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999995501368147	WITHOUT_CLASSIFICATION	4.4986318524334853E-7	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999988367407321	WITHOUT_CLASSIFICATION	1.1632592679214858E-6	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999993430813945	WITHOUT_CLASSIFICATION	6.569186055690275E-7	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999979948800249	WITHOUT_CLASSIFICATION	2.005119975061377E-6	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999984350639485	WITHOUT_CLASSIFICATION	1.564936051416535E-6	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999971087689	WITHOUT_CLASSIFICATION	2.8912311370600287E-9	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999997849470721	WITHOUT_CLASSIFICATION	2.1505292791949827E-7	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999999259050715	WITHOUT_CLASSIFICATION	7.409492858462477E-8	TEST
// set attr	WITHOUT_CLASSIFICATION	0.9999999350956077	WITHOUT_CLASSIFICATION	6.490439223385652E-8	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999999138398479	WITHOUT_CLASSIFICATION	8.616015209418282E-8	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999950930604763	WITHOUT_CLASSIFICATION	4.906939523728683E-6	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999950930604763	WITHOUT_CLASSIFICATION	4.906939523728683E-6	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999997110561347	WITHOUT_CLASSIFICATION	2.8894386528575936E-7	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999954312312	WITHOUT_CLASSIFICATION	4.568768825678711E-9	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999957322985	WITHOUT_CLASSIFICATION	4.267701527958022E-9	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.99999967398292	WITHOUT_CLASSIFICATION	3.2601708004161383E-7	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999881299523	WITHOUT_CLASSIFICATION	1.1870047719373005E-8	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999990617207803	WITHOUT_CLASSIFICATION	9.382792197839583E-7	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999999214851382	WITHOUT_CLASSIFICATION	7.851486184223821E-8	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999977868236	WITHOUT_CLASSIFICATION	2.2131763046385068E-9	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999998554648363	WITHOUT_CLASSIFICATION	1.4453516383658802E-7	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999998696615	WITHOUT_CLASSIFICATION	1.3033851308685037E-10	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999999110371743	WITHOUT_CLASSIFICATION	8.896282568764128E-8	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999996868927	WITHOUT_CLASSIFICATION	3.1310735356881905E-10	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999995952342282	WITHOUT_CLASSIFICATION	4.0476577179351614E-7	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999999681950392	WITHOUT_CLASSIFICATION	3.1804960749347675E-8	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999999517836413	WITHOUT_CLASSIFICATION	4.821635877557743E-8	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.999999998710624	WITHOUT_CLASSIFICATION	1.2893760681159926E-9	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999999775938501	WITHOUT_CLASSIFICATION	2.2406149936085763E-8	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999999783421931	WITHOUT_CLASSIFICATION	2.1657806824656586E-8	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999999795263764	WITHOUT_CLASSIFICATION	2.0473623497547015E-8	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999999605081126	WITHOUT_CLASSIFICATION	3.949188746502776E-8	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9999994094836354	WITHOUT_CLASSIFICATION	5.905163645154646E-7	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9999996972914875	WITHOUT_CLASSIFICATION	3.027085124969319E-7	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999999772892064	WITHOUT_CLASSIFICATION	2.2710793526581554E-8	TEST
// others	WITHOUT_CLASSIFICATION	0.9999996599555404	WITHOUT_CLASSIFICATION	3.400444594761749E-7	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999999352068891	WITHOUT_CLASSIFICATION	6.479311084776733E-8	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999995785047768	WITHOUT_CLASSIFICATION	4.214952231965479E-7	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999959267343186	WITHOUT_CLASSIFICATION	4.073265681480169E-6	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999970124828	WITHOUT_CLASSIFICATION	2.987517267458179E-9	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9999997327208087	WITHOUT_CLASSIFICATION	2.6727919130779475E-7	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999999329127515	WITHOUT_CLASSIFICATION	6.708724852785241E-8	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999999751659108	WITHOUT_CLASSIFICATION	2.483408914705503E-8	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999999891588304	WITHOUT_CLASSIFICATION	1.0841169586161825E-8	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999990420418804	WITHOUT_CLASSIFICATION	9.57958119589868E-7	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999994458094247	WITHOUT_CLASSIFICATION	5.541905752782395E-7	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999999405566501	WITHOUT_CLASSIFICATION	5.944334991641076E-8	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999985745815325	WITHOUT_CLASSIFICATION	1.4254184675523312E-6	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999997361820058	WITHOUT_CLASSIFICATION	2.6381799423955523E-7	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.999999699867265	WITHOUT_CLASSIFICATION	3.0013273498159794E-7	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999998947757034	WITHOUT_CLASSIFICATION	1.0522429653180836E-7	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999960646334994	WITHOUT_CLASSIFICATION	3.935366500502451E-6	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.999998919153293	WITHOUT_CLASSIFICATION	1.080846707020318E-6	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998773960211192	WITHOUT_CLASSIFICATION	1.2260397888078084E-4	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999998001161471	WITHOUT_CLASSIFICATION	1.9988385288669692E-7	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999998260938734	WITHOUT_CLASSIFICATION	1.7390612665292077E-7	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999998995561021	WITHOUT_CLASSIFICATION	1.0044389786890191E-7	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999999957626704	WITHOUT_CLASSIFICATION	4.237329627173326E-9	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999999957898947	WITHOUT_CLASSIFICATION	4.210105302969327E-9	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.999999996619104	WITHOUT_CLASSIFICATION	3.3808961186764228E-9	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999999195778891	WITHOUT_CLASSIFICATION	8.042211094124291E-8	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999993700481076	WITHOUT_CLASSIFICATION	6.299518924565877E-7	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999999333172591	WITHOUT_CLASSIFICATION	6.6682740922892E-8	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999999650841431	WITHOUT_CLASSIFICATION	3.4915856880182515E-8	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999216747170689	WITHOUT_CLASSIFICATION	7.832528293103427E-5	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999928948062127	WITHOUT_CLASSIFICATION	7.105193787288009E-6	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999383556627566	WITHOUT_CLASSIFICATION	6.164433724336245E-5	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999997793510434	WITHOUT_CLASSIFICATION	2.206489565684372E-7	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.999999985775417	WITHOUT_CLASSIFICATION	1.4224583003568081E-8	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999999155424288	WITHOUT_CLASSIFICATION	8.445757119673318E-8	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999998362273669	WITHOUT_CLASSIFICATION	1.63772633111214E-7	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999953593123618	WITHOUT_CLASSIFICATION	4.640687638151265E-6	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999953593123618	WITHOUT_CLASSIFICATION	4.640687638151265E-6	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999996104834382	WITHOUT_CLASSIFICATION	3.895165618392114E-7	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999985410052246	WITHOUT_CLASSIFICATION	1.4589947754219576E-6	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999988822641352	WITHOUT_CLASSIFICATION	1.1177358647276616E-6	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999992953781758	WITHOUT_CLASSIFICATION	7.046218242645795E-7	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.999999913940603	WITHOUT_CLASSIFICATION	8.605939702158869E-8	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999994494499892	WITHOUT_CLASSIFICATION	5.505500108595095E-7	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999622075746416	WITHOUT_CLASSIFICATION	3.7792425358389583E-5	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999992493151113	WITHOUT_CLASSIFICATION	7.50684888692524E-7	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999997441303452	WITHOUT_CLASSIFICATION	2.558696548274018E-7	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.999999997313015	WITHOUT_CLASSIFICATION	2.686984866221086E-9	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999998160666141	WITHOUT_CLASSIFICATION	1.839333858700925E-7	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999998790006651	WITHOUT_CLASSIFICATION	1.2099933488538618E-7	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999989494359767	WITHOUT_CLASSIFICATION	1.0505640233256886E-6	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999999698859723	WITHOUT_CLASSIFICATION	3.011402771384208E-8	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999996770616655	WITHOUT_CLASSIFICATION	3.229383345449333E-7	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999975663217946	WITHOUT_CLASSIFICATION	2.433678205474576E-6	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999993398410003	WITHOUT_CLASSIFICATION	6.601589997201751E-7	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999993723010779	WITHOUT_CLASSIFICATION	6.27698921983247E-7	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999998586546396	WITHOUT_CLASSIFICATION	1.4134536038011293E-7	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.999999628294692	WITHOUT_CLASSIFICATION	3.717053079892664E-7	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999998480657088	WITHOUT_CLASSIFICATION	1.5193429119414385E-6	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999998905893217	WITHOUT_CLASSIFICATION	1.0941067825394155E-7	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999971937779923	WITHOUT_CLASSIFICATION	2.806222007728433E-6	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999995548587983	WITHOUT_CLASSIFICATION	4.4514120170766574E-7	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999995305389877	WITHOUT_CLASSIFICATION	4.6946101224380413E-7	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999978081739936	WITHOUT_CLASSIFICATION	2.191826006361163E-6	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.999998829913963	WITHOUT_CLASSIFICATION	1.1700860368638345E-6	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.999999869399277	WITHOUT_CLASSIFICATION	1.3060072296815E-7	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999999460922492	WITHOUT_CLASSIFICATION	5.3907750902558665E-8	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999510294386	WITHOUT_CLASSIFICATION	4.8970561456764215E-8	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999999864776302	WITHOUT_CLASSIFICATION	1.3522369629359964E-8	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999992878969224	WITHOUT_CLASSIFICATION	7.121030776540014E-7	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999554411955	WITHOUT_CLASSIFICATION	4.4558804443138944E-8	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999976663089366	WITHOUT_CLASSIFICATION	2.3336910634409735E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999554411955	WITHOUT_CLASSIFICATION	4.4558804443138944E-8	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999999791331916	WITHOUT_CLASSIFICATION	2.086680840057626E-8	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999988331520097	WITHOUT_CLASSIFICATION	1.16684799030177E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999988331520097	WITHOUT_CLASSIFICATION	1.16684799030177E-6	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999988331520097	WITHOUT_CLASSIFICATION	1.16684799030177E-6	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999999326827684	WITHOUT_CLASSIFICATION	6.731723159940968E-8	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999999326827684	WITHOUT_CLASSIFICATION	6.731723159940968E-8	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999989083818495	WITHOUT_CLASSIFICATION	1.091618150552995E-6	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999634220097	WITHOUT_CLASSIFICATION	3.6577990248739035E-8	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999175610363	WITHOUT_CLASSIFICATION	8.243896367775628E-8	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999999973191143	WITHOUT_CLASSIFICATION	2.680885788190876E-9	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.999998162862706	WITHOUT_CLASSIFICATION	1.8371372939688761E-6	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999983844613035	WITHOUT_CLASSIFICATION	1.6155386964421866E-6	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999999369901239	WITHOUT_CLASSIFICATION	6.300987605926222E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999998714568118	WITHOUT_CLASSIFICATION	1.2854318818887165E-7	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.999999047809799	WITHOUT_CLASSIFICATION	9.521902009961738E-7	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999999815116659	WITHOUT_CLASSIFICATION	1.8488334009373376E-8	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999994057338455	WITHOUT_CLASSIFICATION	5.942661545074506E-7	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999999659459934	WITHOUT_CLASSIFICATION	3.405400668597918E-8	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999999922693293	WITHOUT_CLASSIFICATION	7.730670751120014E-9	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999998576129655	WITHOUT_CLASSIFICATION	1.423870344685517E-7	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999998655612797	WITHOUT_CLASSIFICATION	1.344387203126812E-7	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999998716475375	WITHOUT_CLASSIFICATION	1.2835246251550538E-7	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999998962348895	WITHOUT_CLASSIFICATION	1.0376511042368857E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999998541827343	WITHOUT_CLASSIFICATION	1.4581726563271696E-7	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999998541827343	WITHOUT_CLASSIFICATION	1.4581726563271696E-7	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999997907553326	WITHOUT_CLASSIFICATION	2.092446674055521E-7	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999999201601713	WITHOUT_CLASSIFICATION	7.983982871579825E-8	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999999201601713	WITHOUT_CLASSIFICATION	7.983982871579825E-8	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999962233989939	WITHOUT_CLASSIFICATION	3.7766010061173768E-6	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999998724948643	WITHOUT_CLASSIFICATION	1.2750513567848275E-7	TEST
// load handle	WITHOUT_CLASSIFICATION	0.9999997739538055	WITHOUT_CLASSIFICATION	2.2604619449590825E-7	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999992511280137	WITHOUT_CLASSIFICATION	7.48871986355311E-7	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999996939432219	WITHOUT_CLASSIFICATION	3.0605677810071374E-7	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999999874441317	WITHOUT_CLASSIFICATION	1.2555868199986985E-8	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999997532413031	WITHOUT_CLASSIFICATION	2.467586969786491E-7	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.99999998454307	WITHOUT_CLASSIFICATION	1.545692993547772E-8	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999468115811	WITHOUT_CLASSIFICATION	5.3188418910719575E-8	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999998144280935	WITHOUT_CLASSIFICATION	1.8557190648937195E-7	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999993899623304	WITHOUT_CLASSIFICATION	6.100376697030563E-7	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999997364890469	WITHOUT_CLASSIFICATION	2.6351095311290004E-7	TEST
// undo check	WITHOUT_CLASSIFICATION	0.9999998435392775	WITHOUT_CLASSIFICATION	1.5646072250955875E-7	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999999814327195	WITHOUT_CLASSIFICATION	1.856728045839244E-8	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999998714568118	WITHOUT_CLASSIFICATION	1.2854318818887165E-7	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999657804701477	WITHOUT_CLASSIFICATION	3.4219529852264215E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999116277994	WITHOUT_CLASSIFICATION	8.837220065714165E-8	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999999178668234	WITHOUT_CLASSIFICATION	8.213317666797806E-8	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999999178668234	WITHOUT_CLASSIFICATION	8.213317666797806E-8	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999998957228237	WITHOUT_CLASSIFICATION	1.0427717637166614E-7	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999997442792613	WITHOUT_CLASSIFICATION	2.557207387872464E-7	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999999965984571	WITHOUT_CLASSIFICATION	3.401542970943411E-9	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999992686780635	WITHOUT_CLASSIFICATION	7.313219365346206E-7	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999792693871	WITHOUT_CLASSIFICATION	2.0730612909065274E-8	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999999396282081	WITHOUT_CLASSIFICATION	6.037179193617985E-8	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999568125814	WITHOUT_CLASSIFICATION	4.318741865623285E-8	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9998524013757288	WITHOUT_CLASSIFICATION	1.4759862427112994E-4	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999999885985694	WITHOUT_CLASSIFICATION	1.1401430612486696E-8	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.999999944237507	WITHOUT_CLASSIFICATION	5.576249283967989E-8	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999997905621422	WITHOUT_CLASSIFICATION	2.0943785772502347E-7	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.999999619293101	WITHOUT_CLASSIFICATION	3.80706899017828E-7	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999708459422698	WITHOUT_CLASSIFICATION	2.9154057730277372E-5	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999998028314137	WITHOUT_CLASSIFICATION	1.971685862515171E-7	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999997918725597	WITHOUT_CLASSIFICATION	2.081274403654811E-7	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999998153731179	WITHOUT_CLASSIFICATION	1.8462688208437245E-7	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999998093896435	WITHOUT_CLASSIFICATION	1.906103565096705E-7	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999994337275379	WITHOUT_CLASSIFICATION	5.662724620711623E-7	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999999548998685	WITHOUT_CLASSIFICATION	4.5100131530986306E-8	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999565489402	WITHOUT_CLASSIFICATION	4.345105981464409E-8	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999998972169808	WITHOUT_CLASSIFICATION	1.027830192430863E-7	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999999947231686	WITHOUT_CLASSIFICATION	5.276831340214347E-9	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999997739580343	WITHOUT_CLASSIFICATION	2.2604196568799768E-7	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999987257745	WITHOUT_CLASSIFICATION	1.2742254293260186E-9	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999998874090333	WITHOUT_CLASSIFICATION	1.1259096661489493E-7	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999998689888564	WITHOUT_CLASSIFICATION	1.3101114361331263E-7	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999371763552929	WITHOUT_CLASSIFICATION	6.282364470712101E-5	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999884276151514	WITHOUT_CLASSIFICATION	1.1572384848557348E-5	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999915599127	WITHOUT_CLASSIFICATION	8.440087230372859E-9	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.99999904472866	WITHOUT_CLASSIFICATION	9.552713400544782E-7	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999999591788443	WITHOUT_CLASSIFICATION	4.082115577567195E-8	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999999573982687	WITHOUT_CLASSIFICATION	4.2601731267875894E-8	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999987475609282	WITHOUT_CLASSIFICATION	1.25243907182553E-6	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999952545769905	WITHOUT_CLASSIFICATION	4.745423009481978E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999989987726481	WITHOUT_CLASSIFICATION	1.0012273518776139E-6	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9999989454284276	WITHOUT_CLASSIFICATION	1.0545715723827691E-6	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999884276151514	WITHOUT_CLASSIFICATION	1.1572384848557348E-5	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999970301412798	WITHOUT_CLASSIFICATION	2.969858720076901E-6	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999989987726481	WITHOUT_CLASSIFICATION	1.0012273518776139E-6	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999994285640885	WITHOUT_CLASSIFICATION	5.714359115728467E-7	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999999740651013	WITHOUT_CLASSIFICATION	2.593489867436232E-8	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999977978595965	WITHOUT_CLASSIFICATION	2.202140403387204E-6	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999999360564851	WITHOUT_CLASSIFICATION	6.394351491642597E-8	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.999998854144369	WITHOUT_CLASSIFICATION	1.1458556310391033E-6	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999999655142701	WITHOUT_CLASSIFICATION	3.448572997512081E-8	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999999655142701	WITHOUT_CLASSIFICATION	3.448572997512081E-8	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999987532737044	WITHOUT_CLASSIFICATION	1.246726295626639E-6	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999985781705	WITHOUT_CLASSIFICATION	1.4218295985371324E-9	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999305486077	WITHOUT_CLASSIFICATION	6.94513923084517E-8	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999999305486077	WITHOUT_CLASSIFICATION	6.94513923084517E-8	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999974456674	WITHOUT_CLASSIFICATION	2.5543327292761456E-9	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9997614814038471	WITHOUT_CLASSIFICATION	2.385185961529171E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9999207801503953	WITHOUT_CLASSIFICATION	7.92198496046738E-5	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9999207801503953	WITHOUT_CLASSIFICATION	7.92198496046738E-5	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999996807620904	WITHOUT_CLASSIFICATION	3.1923790951170454E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999994127131325	WITHOUT_CLASSIFICATION	5.872868675903517E-7	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999997486354885	WITHOUT_CLASSIFICATION	2.5136451157711743E-7	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999999235715177	WITHOUT_CLASSIFICATION	7.642848231472272E-8	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999999883332532	WITHOUT_CLASSIFICATION	1.1666746861505701E-8	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999999679289023	WITHOUT_CLASSIFICATION	3.207109770403336E-8	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999997240560642	WITHOUT_CLASSIFICATION	2.759439357220173E-7	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999994525981045	WITHOUT_CLASSIFICATION	5.47401895387019E-7	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999998623355577	WITHOUT_CLASSIFICATION	1.376644423184249E-7	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999993763381919	WITHOUT_CLASSIFICATION	6.236618081852641E-7	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999996806265494	WITHOUT_CLASSIFICATION	3.1937345053823147E-7	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999997687071563	WITHOUT_CLASSIFICATION	2.312928437386157E-7	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999999330244529	WITHOUT_CLASSIFICATION	6.697554712419159E-8	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999977892475705	WITHOUT_CLASSIFICATION	2.210752429496806E-6	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999998984297548	WITHOUT_CLASSIFICATION	1.0157024519819796E-7	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999999826563886	WITHOUT_CLASSIFICATION	1.734361138162102E-8	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999654499529473	WITHOUT_CLASSIFICATION	3.455004705267661E-5	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999999249165791	WITHOUT_CLASSIFICATION	7.508342096146867E-8	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999999505906504	WITHOUT_CLASSIFICATION	4.9409349605039146E-8	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999999020258269	WITHOUT_CLASSIFICATION	9.797417314379985E-8	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999996443569245	WITHOUT_CLASSIFICATION	3.5564307559380023E-7	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999981609654468	WITHOUT_CLASSIFICATION	1.839034553172238E-6	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999998592112399	WITHOUT_CLASSIFICATION	1.4078876016006012E-7	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999978637725445	WITHOUT_CLASSIFICATION	2.136227455439993E-6	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.999996599303551	WITHOUT_CLASSIFICATION	3.4006964489597236E-6	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999950057917889	WITHOUT_CLASSIFICATION	4.994208211079043E-6	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999983399164539	WITHOUT_CLASSIFICATION	1.6600835459700883E-6	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999994399104843	WITHOUT_CLASSIFICATION	5.600895155775524E-7	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999913311559	WITHOUT_CLASSIFICATION	8.668844134126907E-9	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999913311559	WITHOUT_CLASSIFICATION	8.668844134126907E-9	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999713525439	WITHOUT_CLASSIFICATION	2.864745609084414E-8	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999998928239796	WITHOUT_CLASSIFICATION	1.0717602046431751E-7	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999976227812909	WITHOUT_CLASSIFICATION	2.3772187091306187E-6	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999994597275041	WITHOUT_CLASSIFICATION	5.402724957683737E-7	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999993651408442	WITHOUT_CLASSIFICATION	6.348591558166607E-7	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999998208414094	WITHOUT_CLASSIFICATION	1.7915859058182277E-7	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999997112868713	WITHOUT_CLASSIFICATION	2.8871312878517526E-7	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999276205461	WITHOUT_CLASSIFICATION	7.237945385205897E-8	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999999456268599	WITHOUT_CLASSIFICATION	5.4373140061836884E-8	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999296823389	WITHOUT_CLASSIFICATION	7.031766118974772E-8	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999997054745986	WITHOUT_CLASSIFICATION	2.945254014215563E-7	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999998526181401	WITHOUT_CLASSIFICATION	1.4738185984297238E-7	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999986229651844	WITHOUT_CLASSIFICATION	1.3770348156819906E-6	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999999108911413	WITHOUT_CLASSIFICATION	8.910885870685774E-8	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999999975635091	WITHOUT_CLASSIFICATION	2.4364908941487473E-9	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999999364952286	WITHOUT_CLASSIFICATION	6.35047714403055E-8	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999999713982898	WITHOUT_CLASSIFICATION	2.8601710289421418E-8	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999999136878664	WITHOUT_CLASSIFICATION	8.631213344740659E-8	TEST
// be dead	WITHOUT_CLASSIFICATION	0.999999551018306	WITHOUT_CLASSIFICATION	4.489816940058273E-7	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999996855657394	WITHOUT_CLASSIFICATION	3.1443426064985176E-7	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999999459717616	WITHOUT_CLASSIFICATION	5.402823842626181E-8	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999975110642919	WITHOUT_CLASSIFICATION	2.4889357081646293E-6	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.99999978367829	WITHOUT_CLASSIFICATION	2.1632171000012153E-7	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999674055422	WITHOUT_CLASSIFICATION	3.2594457745592464E-8	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.999999964880023	WITHOUT_CLASSIFICATION	3.511997700425914E-8	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999999321531006	WITHOUT_CLASSIFICATION	6.784689943975186E-8	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999983104214725	WITHOUT_CLASSIFICATION	1.6895785275655199E-6	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999997634443775	WITHOUT_CLASSIFICATION	2.365556225740973E-7	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999997547943913	WITHOUT_CLASSIFICATION	2.4520560871507936E-7	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.9999999910505382	WITHOUT_CLASSIFICATION	8.949461877396434E-9	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999996365539264	WITHOUT_CLASSIFICATION	3.6344607358123585E-7	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999999082040586	WITHOUT_CLASSIFICATION	9.179594143855523E-8	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999999491577113	WITHOUT_CLASSIFICATION	5.0842288695937045E-8	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.9999997938379213	WITHOUT_CLASSIFICATION	2.061620788141246E-7	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999998849459346	WITHOUT_CLASSIFICATION	1.1505406534365359E-7	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999996978810638	WITHOUT_CLASSIFICATION	3.0211893622404033E-7	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999998407472566	WITHOUT_CLASSIFICATION	1.592527434924075E-7	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999994781494204	WITHOUT_CLASSIFICATION	5.218505796866716E-7	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.999999991688685	WITHOUT_CLASSIFICATION	8.311315070666882E-9	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999997887403337	WITHOUT_CLASSIFICATION	2.1125966631302728E-7	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999972977182603	WITHOUT_CLASSIFICATION	2.7022817397359923E-6	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999999639395578	WITHOUT_CLASSIFICATION	3.606044228454653E-8	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999766036816	WITHOUT_CLASSIFICATION	2.339631849609693E-8	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999999766036816	WITHOUT_CLASSIFICATION	2.339631849609693E-8	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.999999374725747	WITHOUT_CLASSIFICATION	6.25274253057774E-7	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999952863603	WITHOUT_CLASSIFICATION	4.7136397145308214E-9	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999998917931585	WITHOUT_CLASSIFICATION	1.0820684153015238E-7	TEST
// return	WITHOUT_CLASSIFICATION	0.9999999454425076	WITHOUT_CLASSIFICATION	5.4557492379716686E-8	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999998749233558	WITHOUT_CLASSIFICATION	1.2507664412543476E-7	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999996694932979	WITHOUT_CLASSIFICATION	3.3050670213023594E-7	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999999714577662	WITHOUT_CLASSIFICATION	2.854223379661319E-7	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999991886286426	WITHOUT_CLASSIFICATION	8.113713575091382E-7	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999994879691738	WITHOUT_CLASSIFICATION	5.120308261243525E-7	TEST
// tc	WITHOUT_CLASSIFICATION	0.9999987561933249	WITHOUT_CLASSIFICATION	1.2438066751293752E-6	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999994063685852	WITHOUT_CLASSIFICATION	5.936314148388098E-7	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999998358947706	WITHOUT_CLASSIFICATION	1.6410522946686358E-7	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9999997681650985	WITHOUT_CLASSIFICATION	2.3183490139335064E-7	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999999462212987	WITHOUT_CLASSIFICATION	5.37787013346775E-8	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999999957913109	WITHOUT_CLASSIFICATION	4.208689096126705E-8	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9999997760220904	WITHOUT_CLASSIFICATION	2.2397790945998191E-7	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999196468786	WITHOUT_CLASSIFICATION	8.03531213631582E-8	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.999999635250817	WITHOUT_CLASSIFICATION	3.6474918292577374E-7	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999449305813	WITHOUT_CLASSIFICATION	5.506941863954775E-8	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9999996560948546	WITHOUT_CLASSIFICATION	3.439051453245389E-7	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999233621386	WITHOUT_CLASSIFICATION	7.66378613843239E-8	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999996986504952	WITHOUT_CLASSIFICATION	3.01349504846248E-7	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999995768777733	WITHOUT_CLASSIFICATION	4.2312222659634833E-7	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999998481252388	WITHOUT_CLASSIFICATION	1.5187476128005446E-7	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999168457877	WITHOUT_CLASSIFICATION	8.315421234631647E-8	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999064496221	WITHOUT_CLASSIFICATION	9.35503778708614E-8	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999215602214	WITHOUT_CLASSIFICATION	7.843977845892794E-8	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.999999923433361	WITHOUT_CLASSIFICATION	7.656663893870089E-8	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999999072881953	WITHOUT_CLASSIFICATION	9.271180471144316E-8	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999996403950963	WITHOUT_CLASSIFICATION	3.5960490373893324E-7	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999998260697892	WITHOUT_CLASSIFICATION	1.7393021075314312E-7	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999997018460733	WITHOUT_CLASSIFICATION	2.9815392665302715E-7	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999999787265257	WITHOUT_CLASSIFICATION	2.127347439149348E-8	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999998722275503	WITHOUT_CLASSIFICATION	1.2777244960728888E-7	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999994781494204	WITHOUT_CLASSIFICATION	5.218505796866716E-7	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999991913459734	WITHOUT_CLASSIFICATION	8.086540266671293E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999998193616331	WITHOUT_CLASSIFICATION	1.8063836697972924E-7	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999998193616331	WITHOUT_CLASSIFICATION	1.8063836697972924E-7	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999990955250412	WITHOUT_CLASSIFICATION	9.044749588479329E-7	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.999999976801828	WITHOUT_CLASSIFICATION	2.3198172087551343E-8	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999998098805938	WITHOUT_CLASSIFICATION	1.901194063602961E-7	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999997569076042	WITHOUT_CLASSIFICATION	2.4309239578542045E-7	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.999999765000371	WITHOUT_CLASSIFICATION	2.3499962899515643E-7	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999998218943742	WITHOUT_CLASSIFICATION	1.7810562571929454E-7	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999997896898989	WITHOUT_CLASSIFICATION	2.103101012612885E-7	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999996567839349	WITHOUT_CLASSIFICATION	3.432160650940462E-7	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9999998272037006	WITHOUT_CLASSIFICATION	1.7279629933141758E-7	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999997921606633	WITHOUT_CLASSIFICATION	2.0783933663449154E-7	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999996670151996	WITHOUT_CLASSIFICATION	3.3298480029325763E-7	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999995593222095	WITHOUT_CLASSIFICATION	4.4067779055305336E-7	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999999234281858	WITHOUT_CLASSIFICATION	7.657181420769642E-8	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999997933937297	WITHOUT_CLASSIFICATION	2.0660627029338576E-7	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999978498392057	WITHOUT_CLASSIFICATION	2.150160794390845E-6	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999999960598029	WITHOUT_CLASSIFICATION	3.940197006266638E-9	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999998206391956	WITHOUT_CLASSIFICATION	1.7936080440048365E-7	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999995352193821	WITHOUT_CLASSIFICATION	4.6478061795577204E-7	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.999999871569523	WITHOUT_CLASSIFICATION	1.2843047706505076E-7	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999998455238597	WITHOUT_CLASSIFICATION	1.5447614040519162E-7	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999997871170341	WITHOUT_CLASSIFICATION	2.1288296602918108E-7	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999998243372988	WITHOUT_CLASSIFICATION	1.756627011159368E-7	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999999885520816	WITHOUT_CLASSIFICATION	1.14479183977262E-8	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999999956408492	WITHOUT_CLASSIFICATION	4.359150793794746E-9	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999951452844	WITHOUT_CLASSIFICATION	4.8547156297460995E-9	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999999532570931	WITHOUT_CLASSIFICATION	4.6742906908087857E-8	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999997489680992	WITHOUT_CLASSIFICATION	2.5103190089980993E-7	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999998931213431	WITHOUT_CLASSIFICATION	1.0687865690602817E-7	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999998456053617	WITHOUT_CLASSIFICATION	1.5439463832823327E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999999685178053	WITHOUT_CLASSIFICATION	3.14821948065546E-8	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999998838018962	WITHOUT_CLASSIFICATION	1.1619810378961107E-7	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999999583505031	WITHOUT_CLASSIFICATION	4.1649496755976645E-8	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.9999998410182994	WITHOUT_CLASSIFICATION	1.5898170048191104E-7	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999853348988	WITHOUT_CLASSIFICATION	1.4665101171249358E-8	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999999945334195	WITHOUT_CLASSIFICATION	5.466580548484427E-9	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999998896318381	WITHOUT_CLASSIFICATION	1.103681620050332E-7	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999549536239	WITHOUT_CLASSIFICATION	4.504637605190637E-8	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999999532570931	WITHOUT_CLASSIFICATION	4.6742906908087857E-8	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999997489680992	WITHOUT_CLASSIFICATION	2.5103190089980993E-7	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9999998931213431	WITHOUT_CLASSIFICATION	1.0687865690602817E-7	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999999685178053	WITHOUT_CLASSIFICATION	3.14821948065546E-8	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999935082095	WITHOUT_CLASSIFICATION	6.491790543580298E-9	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999866308344	WITHOUT_CLASSIFICATION	1.3369165428680347E-8	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999998743671207	WITHOUT_CLASSIFICATION	1.256328793074323E-7	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999998146119745	WITHOUT_CLASSIFICATION	1.8538802558728842E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999998096555146	WITHOUT_CLASSIFICATION	1.9034448538227914E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999900167661	WITHOUT_CLASSIFICATION	9.98323397303609E-9	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999999423531682	WITHOUT_CLASSIFICATION	5.764683171845379E-8	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999999335638893	WITHOUT_CLASSIFICATION	6.643611071967045E-8	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999999517357799	WITHOUT_CLASSIFICATION	4.826422007183615E-8	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999994579897628	WITHOUT_CLASSIFICATION	5.420102371736392E-7	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999991392174657	WITHOUT_CLASSIFICATION	8.607825342507223E-7	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999995542392397	WITHOUT_CLASSIFICATION	4.4576076028551156E-7	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999998069175938	WITHOUT_CLASSIFICATION	1.9308240607222983E-7	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999999965460674	WITHOUT_CLASSIFICATION	3.4539325129178987E-9	TEST
// store it	WITHOUT_CLASSIFICATION	0.9999994628303812	WITHOUT_CLASSIFICATION	5.371696187610654E-7	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999999797670625	WITHOUT_CLASSIFICATION	2.0232937592756608E-8	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999999778693678	WITHOUT_CLASSIFICATION	2.213063218699797E-8	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999998473497265	WITHOUT_CLASSIFICATION	1.526502734445798E-7	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999999946179734	WITHOUT_CLASSIFICATION	5.3820267133580455E-9	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999549536239	WITHOUT_CLASSIFICATION	4.504637605190637E-8	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999866308344	WITHOUT_CLASSIFICATION	1.3369165428680347E-8	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999998743671207	WITHOUT_CLASSIFICATION	1.256328793074323E-7	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999998096555146	WITHOUT_CLASSIFICATION	1.9034448538227914E-7	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999900167661	WITHOUT_CLASSIFICATION	9.98323397303609E-9	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.9999999423531682	WITHOUT_CLASSIFICATION	5.764683171845379E-8	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999999335638893	WITHOUT_CLASSIFICATION	6.643611071967045E-8	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999998901700268	WITHOUT_CLASSIFICATION	1.098299732307981E-7	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999993175993345	WITHOUT_CLASSIFICATION	6.824006655151933E-7	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999675641722	WITHOUT_CLASSIFICATION	3.243582776252504E-8	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999986184022	WITHOUT_CLASSIFICATION	1.3815978212859992E-9	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999986991961767	WITHOUT_CLASSIFICATION	1.300803823358472E-6	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999986991961767	WITHOUT_CLASSIFICATION	1.300803823358472E-6	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999999788662449	WITHOUT_CLASSIFICATION	2.1133755041846932E-8	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999999886846326	WITHOUT_CLASSIFICATION	1.1315367442342754E-8	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999997498450119	WITHOUT_CLASSIFICATION	2.501549880388921E-7	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999999543443155	WITHOUT_CLASSIFICATION	4.5655684328467823E-8	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999999438710881	WITHOUT_CLASSIFICATION	5.6128911891394293E-8	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999999304898833	WITHOUT_CLASSIFICATION	6.951011662833768E-8	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999997084713128	WITHOUT_CLASSIFICATION	2.9152868721563486E-7	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999999950668693	WITHOUT_CLASSIFICATION	4.933130736394019E-9	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999999459783492	WITHOUT_CLASSIFICATION	5.402165090577052E-8	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999999519744928	WITHOUT_CLASSIFICATION	4.8025507306435994E-8	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999999767092271	WITHOUT_CLASSIFICATION	2.329077285493189E-8	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999999968783914	WITHOUT_CLASSIFICATION	3.1216086250905874E-9	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999993539116399	WITHOUT_CLASSIFICATION	6.460883601966771E-7	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999997287928355	WITHOUT_CLASSIFICATION	2.7120716457908714E-7	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999999953341592	WITHOUT_CLASSIFICATION	4.665840812912709E-9	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999999926484389	WITHOUT_CLASSIFICATION	7.351561159477043E-9	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999999332466973	WITHOUT_CLASSIFICATION	6.67533026029738E-8	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999999696916607	WITHOUT_CLASSIFICATION	3.0308339296139865E-8	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999998016457439	WITHOUT_CLASSIFICATION	1.9835425616544351E-7	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999999978729299	WITHOUT_CLASSIFICATION	2.1270701828130905E-9	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9998736801944232	WITHOUT_CLASSIFICATION	1.2631980557679904E-4	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999999655040995	WITHOUT_CLASSIFICATION	3.449590059960712E-8	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999899967077	WITHOUT_CLASSIFICATION	1.0003292260066836E-8	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9979990224849677	WITHOUT_CLASSIFICATION	0.0020009775150322804	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999801732434	WITHOUT_CLASSIFICATION	1.9826756574949958E-8	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999953958406	WITHOUT_CLASSIFICATION	4.604159363559712E-9	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.999999999086264	WITHOUT_CLASSIFICATION	9.137359340005534E-10	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999993845571019	WITHOUT_CLASSIFICATION	6.154428980564475E-7	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999994508622856	WITHOUT_CLASSIFICATION	5.491377144593001E-7	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999801732434	WITHOUT_CLASSIFICATION	1.9826756574949958E-8	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999999953958406	WITHOUT_CLASSIFICATION	4.604159363559712E-9	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999997287928355	WITHOUT_CLASSIFICATION	2.7120716457908714E-7	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999997038594249	WITHOUT_CLASSIFICATION	2.9614057502595984E-7	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999999465476664	WITHOUT_CLASSIFICATION	5.345233355174662E-8	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999997922315698	WITHOUT_CLASSIFICATION	2.0776843018861746E-7	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999999894180268	WITHOUT_CLASSIFICATION	1.0581973231403659E-8	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999999583740972	WITHOUT_CLASSIFICATION	4.162590288358715E-8	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.999998894442791	WITHOUT_CLASSIFICATION	1.1055572090268905E-6	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999995092887225	WITHOUT_CLASSIFICATION	4.907112775042399E-7	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999999619594143	WITHOUT_CLASSIFICATION	3.804058572827032E-8	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999953683616383	WITHOUT_CLASSIFICATION	4.631638361670127E-6	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999991818154477	WITHOUT_CLASSIFICATION	8.181845523311662E-7	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999999774692871	WITHOUT_CLASSIFICATION	2.2530712853353334E-8	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999999288192465	WITHOUT_CLASSIFICATION	7.118075345616831E-8	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999999098997792	WITHOUT_CLASSIFICATION	9.010022089103358E-8	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999772250114	WITHOUT_CLASSIFICATION	2.277498857680829E-8	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999996344614	WITHOUT_CLASSIFICATION	3.6553854172703087E-10	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999979536105666	WITHOUT_CLASSIFICATION	2.0463894333728297E-6	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.999999999248537	WITHOUT_CLASSIFICATION	7.514629799186167E-10	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999998869136186	WITHOUT_CLASSIFICATION	1.1308638133174591E-7	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999999796934895	WITHOUT_CLASSIFICATION	2.030651051906559E-8	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999998999000144	WITHOUT_CLASSIFICATION	1.0009998560322534E-7	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999999887963318	WITHOUT_CLASSIFICATION	1.1203668124452009E-8	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999910969637	WITHOUT_CLASSIFICATION	8.903036263769857E-9	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999999288514941	WITHOUT_CLASSIFICATION	7.114850580181273E-8	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999999267486	WITHOUT_CLASSIFICATION	7.32513837692575E-11	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999985441231	WITHOUT_CLASSIFICATION	1.4558769225622326E-9	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999999487793615	WITHOUT_CLASSIFICATION	5.1220638630116183E-8	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9978948628200264	WITHOUT_CLASSIFICATION	0.0021051371799737013	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999984480572442	WITHOUT_CLASSIFICATION	1.5519427557442803E-6	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999997872651278	WITHOUT_CLASSIFICATION	2.127348721626941E-7	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999812680374	WITHOUT_CLASSIFICATION	1.8731962611514106E-8	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999999942511418	WITHOUT_CLASSIFICATION	5.748858233640727E-9	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999768769982	WITHOUT_CLASSIFICATION	2.3123001838998732E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999768769982	WITHOUT_CLASSIFICATION	2.3123001838998732E-8	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999993539116399	WITHOUT_CLASSIFICATION	6.460883601966771E-7	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999859170706	WITHOUT_CLASSIFICATION	1.4082929441233486E-8	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998973587946	WITHOUT_CLASSIFICATION	1.0264120533997614E-7	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999996748313015	WITHOUT_CLASSIFICATION	3.251686985153462E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999830103358	WITHOUT_CLASSIFICATION	1.6989664188323264E-8	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999830103358	WITHOUT_CLASSIFICATION	1.6989664188323264E-8	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999818539337	WITHOUT_CLASSIFICATION	1.8146066376091883E-8	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999999014958721	WITHOUT_CLASSIFICATION	9.850412783585249E-8	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999678298013	WITHOUT_CLASSIFICATION	3.2170198797227555E-8	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999999417614142	WITHOUT_CLASSIFICATION	5.823858581082872E-8	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999989325635344	WITHOUT_CLASSIFICATION	1.0674364655718268E-6	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999827778415	WITHOUT_CLASSIFICATION	1.7222158454486226E-8	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999998930708734	WITHOUT_CLASSIFICATION	1.0692912660065913E-7	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999998764693562	WITHOUT_CLASSIFICATION	1.2353064390204893E-7	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999244378105	WITHOUT_CLASSIFICATION	7.556218954003669E-8	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999998709440708	WITHOUT_CLASSIFICATION	1.290559291986579E-7	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999996855631689	WITHOUT_CLASSIFICATION	3.144368311474396E-7	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999998570208655	WITHOUT_CLASSIFICATION	1.4297913459387455E-7	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999982104297135	WITHOUT_CLASSIFICATION	1.7895702864557162E-6	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.999999992244993	WITHOUT_CLASSIFICATION	7.755007095788985E-9	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999988063843136	WITHOUT_CLASSIFICATION	1.1936156863295933E-6	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999985723826625	WITHOUT_CLASSIFICATION	1.4276173375252206E-6	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999593071414	WITHOUT_CLASSIFICATION	4.069285873830492E-8	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999593071414	WITHOUT_CLASSIFICATION	4.069285873830492E-8	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999998670344937	WITHOUT_CLASSIFICATION	1.3296550637433426E-7	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999998670344937	WITHOUT_CLASSIFICATION	1.3296550637433426E-7	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999703708253	WITHOUT_CLASSIFICATION	2.9629174695549025E-8	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999991817465835	WITHOUT_CLASSIFICATION	8.182534163843829E-7	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999927779264	WITHOUT_CLASSIFICATION	7.222073544039293E-9	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.999999895091151	WITHOUT_CLASSIFICATION	1.0490884905574886E-7	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999999628411883	WITHOUT_CLASSIFICATION	3.715881175022662E-8	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999999352721729	WITHOUT_CLASSIFICATION	6.4727827089977E-8	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999999894887371	WITHOUT_CLASSIFICATION	1.0511262788025063E-8	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999998570208655	WITHOUT_CLASSIFICATION	1.4297913459387455E-7	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999982104297135	WITHOUT_CLASSIFICATION	1.7895702864557162E-6	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999988063843136	WITHOUT_CLASSIFICATION	1.1936156863295933E-6	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999996391155169	WITHOUT_CLASSIFICATION	3.6088448299108344E-7	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999980442348754	WITHOUT_CLASSIFICATION	1.95576512464194E-6	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999822158003	WITHOUT_CLASSIFICATION	1.7784199666434445E-8	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999996014615674	WITHOUT_CLASSIFICATION	3.985384326756938E-7	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999999765827089	WITHOUT_CLASSIFICATION	2.3417291115960373E-8	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.999998525038038	WITHOUT_CLASSIFICATION	1.4749619620038512E-6	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999998421383561	WITHOUT_CLASSIFICATION	1.5786164381995565E-7	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999998663974838	WITHOUT_CLASSIFICATION	1.3360251618115422E-7	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999998373149362	WITHOUT_CLASSIFICATION	1.626850637896226E-7	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999848015705	WITHOUT_CLASSIFICATION	1.5198429576376198E-8	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999999780461266	WITHOUT_CLASSIFICATION	2.1953873362338035E-8	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999998446741597	WITHOUT_CLASSIFICATION	1.553258401726927E-7	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999997639021648	WITHOUT_CLASSIFICATION	2.3609783523242913E-7	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999986062055121	WITHOUT_CLASSIFICATION	1.3937944879251668E-6	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999996749974064	WITHOUT_CLASSIFICATION	3.250025937192878E-7	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999764326312	WITHOUT_CLASSIFICATION	2.3567368799072304E-8	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999996280342696	WITHOUT_CLASSIFICATION	3.7196573046656045E-7	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999998864878521	WITHOUT_CLASSIFICATION	1.1351214789874339E-7	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999988254753642	WITHOUT_CLASSIFICATION	1.174524635757488E-6	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999865673533	WITHOUT_CLASSIFICATION	1.3432646776240508E-8	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999726001246	WITHOUT_CLASSIFICATION	2.739987526780026E-8	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999995844116932	WITHOUT_CLASSIFICATION	4.1558830676993625E-7	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999951076637557	WITHOUT_CLASSIFICATION	4.892336244244489E-6	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999998146549838	WITHOUT_CLASSIFICATION	1.8534501624241686E-7	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999998390300622	WITHOUT_CLASSIFICATION	1.6096993784625725E-7	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999998902591111	WITHOUT_CLASSIFICATION	1.0974088887932988E-7	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999998777061243	WITHOUT_CLASSIFICATION	1.222938757297839E-7	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999988446051113	WITHOUT_CLASSIFICATION	1.155394888684645E-6	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999999813991766	WITHOUT_CLASSIFICATION	1.8600823367158444E-8	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999999767220547	WITHOUT_CLASSIFICATION	2.3277945373469275E-8	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999999875318366	WITHOUT_CLASSIFICATION	1.2468163480429944E-8	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999995586105763	WITHOUT_CLASSIFICATION	4.413894235977393E-7	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.999999939253727	WITHOUT_CLASSIFICATION	6.074627300027865E-8	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999999930425229	WITHOUT_CLASSIFICATION	6.9574771955231205E-9	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999997833941953	WITHOUT_CLASSIFICATION	2.166058048378009E-7	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.99999998061408	WITHOUT_CLASSIFICATION	1.9385919956754998E-8	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999999476547063	WITHOUT_CLASSIFICATION	5.234529370056651E-8	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999998899173851	WITHOUT_CLASSIFICATION	1.1008261494524898E-7	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999969976881382	WITHOUT_CLASSIFICATION	3.0023118617368227E-6	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999724389693	WITHOUT_CLASSIFICATION	2.7561030601108337E-8	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999999401401591	WITHOUT_CLASSIFICATION	5.985984084861365E-8	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998973587946	WITHOUT_CLASSIFICATION	1.0264120533997614E-7	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999999476547063	WITHOUT_CLASSIFICATION	5.234529370056651E-8	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999728379523628	WITHOUT_CLASSIFICATION	2.7162047637214853E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999990579861	WITHOUT_CLASSIFICATION	9.420139191211485E-10	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999998193392403	WITHOUT_CLASSIFICATION	1.806607595915099E-7	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999990310896264	WITHOUT_CLASSIFICATION	9.689103736890717E-7	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999990310896264	WITHOUT_CLASSIFICATION	9.689103736890717E-7	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999998358980738	WITHOUT_CLASSIFICATION	1.6410192617862468E-7	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999999903452585	WITHOUT_CLASSIFICATION	9.654741553213558E-9	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999999373610857	WITHOUT_CLASSIFICATION	6.26389143155449E-8	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999872606498	WITHOUT_CLASSIFICATION	1.273935029172865E-8	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.999999873358384	WITHOUT_CLASSIFICATION	1.2664161601518763E-7	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999999232950529	WITHOUT_CLASSIFICATION	7.670494698778587E-8	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.999999801136075	WITHOUT_CLASSIFICATION	1.9886392497764028E-7	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999998870665011	WITHOUT_CLASSIFICATION	1.1293349892065843E-7	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999578056713	WITHOUT_CLASSIFICATION	4.21943287491262E-8	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999578056713	WITHOUT_CLASSIFICATION	4.21943287491262E-8	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999998125685259	WITHOUT_CLASSIFICATION	1.87431474051131E-7	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999967092018195	WITHOUT_CLASSIFICATION	3.2907981804431063E-6	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.999999982361594	WITHOUT_CLASSIFICATION	1.763840596937126E-8	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999999787210276	WITHOUT_CLASSIFICATION	2.1278972461755937E-8	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999999714025282	WITHOUT_CLASSIFICATION	2.8597471805448684E-8	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999999959650094	WITHOUT_CLASSIFICATION	4.034990564066753E-9	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999999236461	WITHOUT_CLASSIFICATION	7.635385172901944E-11	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999499032193	WITHOUT_CLASSIFICATION	5.009678074423241E-8	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.999999906567438	WITHOUT_CLASSIFICATION	9.343256204045813E-8	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9998737059416972	WITHOUT_CLASSIFICATION	1.262940583028481E-4	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999884888089212	WITHOUT_CLASSIFICATION	1.1511191078870063E-5	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999987054989418	WITHOUT_CLASSIFICATION	1.2945010582247118E-6	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.999999980852661	WITHOUT_CLASSIFICATION	1.91473391219463E-8	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999986149806643	WITHOUT_CLASSIFICATION	1.3850193356791E-6	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999986149806643	WITHOUT_CLASSIFICATION	1.3850193356791E-6	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999997604885018	WITHOUT_CLASSIFICATION	2.3951149821894355E-7	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999999335638893	WITHOUT_CLASSIFICATION	6.643611071967045E-8	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9998757385948176	WITHOUT_CLASSIFICATION	1.2426140518242144E-4	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999999986661215	WITHOUT_CLASSIFICATION	1.33387839137929E-9	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999980133559	WITHOUT_CLASSIFICATION	1.9866441561587552E-9	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999999494876387	WITHOUT_CLASSIFICATION	5.0512361246313815E-8	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999988663340628	WITHOUT_CLASSIFICATION	1.13366593724979E-6	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999982635347718	WITHOUT_CLASSIFICATION	1.7364652281518263E-6	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.999997238259053	WITHOUT_CLASSIFICATION	2.7617409469527785E-6	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999992649915566	WITHOUT_CLASSIFICATION	7.350084434992593E-7	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999998596897415	WITHOUT_CLASSIFICATION	1.4031025857900774E-7	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999998206793189	WITHOUT_CLASSIFICATION	1.7932068105723074E-7	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999824924344525	WITHOUT_CLASSIFICATION	1.7507565547539244E-5	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999918385367	WITHOUT_CLASSIFICATION	8.161463257300432E-9	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999990451307652	WITHOUT_CLASSIFICATION	9.548692347874058E-7	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999867564335	WITHOUT_CLASSIFICATION	1.3243566555446582E-8	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999999374267429	WITHOUT_CLASSIFICATION	6.257325714588195E-8	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999999702071398	WITHOUT_CLASSIFICATION	2.97928601276615E-8	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999999937039523	WITHOUT_CLASSIFICATION	6.29604769147363E-9	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.999999994291602	WITHOUT_CLASSIFICATION	5.708397911172069E-9	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.999998944683044	WITHOUT_CLASSIFICATION	1.0553169560813276E-6	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999998077313228	WITHOUT_CLASSIFICATION	1.9226867709114562E-7	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999998845703006	WITHOUT_CLASSIFICATION	1.1542969934048514E-7	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999999036867869	WITHOUT_CLASSIFICATION	9.631321301621544E-8	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9993807367470064	WITHOUT_CLASSIFICATION	6.192632529934646E-4	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999995023087213	WITHOUT_CLASSIFICATION	4.976912787169699E-7	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9999997331159006	WITHOUT_CLASSIFICATION	2.668840993927862E-7	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999999078111175	WITHOUT_CLASSIFICATION	9.218888252897014E-8	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999999465090483	WITHOUT_CLASSIFICATION	5.349095159905724E-8	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999989252746547	WITHOUT_CLASSIFICATION	1.074725345215532E-6	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999999430594224	WITHOUT_CLASSIFICATION	5.694057758737425E-8	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999999877616962	WITHOUT_CLASSIFICATION	1.2238303853323415E-8	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999999026375462	WITHOUT_CLASSIFICATION	9.736245370920472E-8	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999997948582796	WITHOUT_CLASSIFICATION	2.051417204595588E-7	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999993718533865	WITHOUT_CLASSIFICATION	6.281466134434088E-7	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999851391413	WITHOUT_CLASSIFICATION	1.4860858593918907E-8	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999985422722272	WITHOUT_CLASSIFICATION	1.457727772783358E-6	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999983407407564	WITHOUT_CLASSIFICATION	1.6592592435346874E-6	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.999997123689569	WITHOUT_CLASSIFICATION	2.876310431166617E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.999999320049096	WITHOUT_CLASSIFICATION	6.79950904055038E-7	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999999737553713	WITHOUT_CLASSIFICATION	2.624462863694348E-8	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999999714727148	WITHOUT_CLASSIFICATION	2.8527285226365005E-8	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999831365819654	WITHOUT_CLASSIFICATION	1.6863418034554066E-5	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999999886070235	WITHOUT_CLASSIFICATION	1.1392976514244635E-8	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9999913435142562	WITHOUT_CLASSIFICATION	8.656485743828472E-6	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999996383622062	WITHOUT_CLASSIFICATION	3.616377937896238E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.99999985117853	WITHOUT_CLASSIFICATION	1.4882147000794005E-7	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999915030875	WITHOUT_CLASSIFICATION	8.496912502846262E-9	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999939260828155	WITHOUT_CLASSIFICATION	6.0739171845088416E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999801732434	WITHOUT_CLASSIFICATION	1.9826756574949958E-8	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999801732434	WITHOUT_CLASSIFICATION	1.9826756574949958E-8	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999999942322355	WITHOUT_CLASSIFICATION	5.7677645211467914E-9	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999996379264028	WITHOUT_CLASSIFICATION	3.620735972056809E-7	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999992840976438	WITHOUT_CLASSIFICATION	7.159023561771349E-7	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999999272264725	WITHOUT_CLASSIFICATION	7.277352752069127E-8	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999996859199569	WITHOUT_CLASSIFICATION	3.1408004308663693E-7	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999993731595188	WITHOUT_CLASSIFICATION	6.26840481137334E-7	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999998572676558	WITHOUT_CLASSIFICATION	1.4273234417782884E-7	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999998653647914	WITHOUT_CLASSIFICATION	1.346352087031503E-7	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999945257643	WITHOUT_CLASSIFICATION	5.474235713905585E-9	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999998159008441	WITHOUT_CLASSIFICATION	1.8409915580374868E-7	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.999999982007819	WITHOUT_CLASSIFICATION	1.7992180955637365E-8	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.999999982007819	WITHOUT_CLASSIFICATION	1.7992180955637365E-8	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.999999982007819	WITHOUT_CLASSIFICATION	1.7992180955637365E-8	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999951398899	WITHOUT_CLASSIFICATION	4.86011008081209E-9	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999999950019609	WITHOUT_CLASSIFICATION	4.998039107265608E-9	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999998935408935	WITHOUT_CLASSIFICATION	1.0645910657590391E-7	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999824987621	WITHOUT_CLASSIFICATION	1.7501237870907976E-8	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999824987621	WITHOUT_CLASSIFICATION	1.7501237870907976E-8	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999999181117823	WITHOUT_CLASSIFICATION	8.188821760250733E-8	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999991446845538	WITHOUT_CLASSIFICATION	8.5531544618974E-7	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999991417033037	WITHOUT_CLASSIFICATION	8.582966962144137E-7	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.999999841206676	WITHOUT_CLASSIFICATION	1.5879332402225835E-7	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999998867838641	WITHOUT_CLASSIFICATION	1.1321613598150709E-7	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999968296134508	WITHOUT_CLASSIFICATION	3.17038654912064E-6	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999998329483438	WITHOUT_CLASSIFICATION	1.6705165615452703E-7	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999999249792524	WITHOUT_CLASSIFICATION	7.502074758225154E-8	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999110157379	WITHOUT_CLASSIFICATION	8.898426213055475E-8	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999999677288743	WITHOUT_CLASSIFICATION	3.227112554754329E-8	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999999677288743	WITHOUT_CLASSIFICATION	3.227112554754329E-8	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999980681867092	WITHOUT_CLASSIFICATION	1.9318132907456914E-6	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999906423218438	WITHOUT_CLASSIFICATION	9.35767815628973E-6	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999991690987609	WITHOUT_CLASSIFICATION	8.30901239133373E-7	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999993978889532	WITHOUT_CLASSIFICATION	6.021110468654721E-7	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999999832123758	WITHOUT_CLASSIFICATION	1.678762416896853E-8	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999997810242844	WITHOUT_CLASSIFICATION	2.1897571551170162E-7	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999995092095975	WITHOUT_CLASSIFICATION	4.907904024641376E-7	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999996627863976	WITHOUT_CLASSIFICATION	3.372136024223711E-7	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999978457374682	WITHOUT_CLASSIFICATION	2.154262531716327E-6	TEST
// POP	WITHOUT_CLASSIFICATION	0.9999945993000199	WITHOUT_CLASSIFICATION	5.4006999802073996E-6	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999999486460214	WITHOUT_CLASSIFICATION	5.135397855024045E-8	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.999996336746294	WITHOUT_CLASSIFICATION	3.6632537061702648E-6	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.999997850439581	WITHOUT_CLASSIFICATION	2.149560419078169E-6	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999998602125327	WITHOUT_CLASSIFICATION	1.3978746715872575E-7	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999962081871623	WITHOUT_CLASSIFICATION	3.79181283781998E-6	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999999897944147	WITHOUT_CLASSIFICATION	1.0205585315387357E-8	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999998405757261	WITHOUT_CLASSIFICATION	1.5942427389347383E-7	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999742811083124	WITHOUT_CLASSIFICATION	2.5718891687626175E-5	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999998905898055	WITHOUT_CLASSIFICATION	1.0941019454218414E-7	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999932530556	WITHOUT_CLASSIFICATION	6.746944362140831E-9	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999987507619761	WITHOUT_CLASSIFICATION	1.249238023940747E-6	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999999319189884	WITHOUT_CLASSIFICATION	6.808101167640425E-8	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999997915202826	WITHOUT_CLASSIFICATION	2.0847971739255126E-7	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999810845710704	WITHOUT_CLASSIFICATION	1.8915428929552403E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999989817616306	WITHOUT_CLASSIFICATION	1.0182383693564533E-6	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999999450037128	WITHOUT_CLASSIFICATION	5.4996287170768017E-8	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999996917958668	WITHOUT_CLASSIFICATION	3.0820413316994036E-7	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999984418549087	WITHOUT_CLASSIFICATION	1.5581450912500898E-6	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999293380175	WITHOUT_CLASSIFICATION	7.066198254788133E-8	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999989023864497	WITHOUT_CLASSIFICATION	1.0976135502440936E-6	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999866729828312	WITHOUT_CLASSIFICATION	1.3327017168752078E-5	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999996397337843	WITHOUT_CLASSIFICATION	3.6026621577454727E-7	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999990294760177	WITHOUT_CLASSIFICATION	9.70523982347911E-7	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999866729828312	WITHOUT_CLASSIFICATION	1.3327017168752078E-5	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999997463755261	WITHOUT_CLASSIFICATION	2.536244739010783E-7	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999961429587325	WITHOUT_CLASSIFICATION	3.8570412675050065E-6	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999973210066143	WITHOUT_CLASSIFICATION	2.6789933856668188E-6	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999994305540568	WITHOUT_CLASSIFICATION	5.694459431305529E-7	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999998426383588	WITHOUT_CLASSIFICATION	1.5736164115559347E-7	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999998663701444	WITHOUT_CLASSIFICATION	1.336298556130141E-7	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999999230759071	WITHOUT_CLASSIFICATION	7.692409289498167E-8	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999991887174058	WITHOUT_CLASSIFICATION	8.112825941675849E-7	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999983804724191	WITHOUT_CLASSIFICATION	1.6195275809670387E-6	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999956113939176	WITHOUT_CLASSIFICATION	4.388606082444501E-6	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.999990642563822	WITHOUT_CLASSIFICATION	9.357436178026035E-6	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999971108544665	WITHOUT_CLASSIFICATION	2.8891455335734624E-6	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999973914766462	WITHOUT_CLASSIFICATION	2.6085233536652427E-6	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999995841318565	WITHOUT_CLASSIFICATION	4.158681435051505E-7	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.99999772669162	WITHOUT_CLASSIFICATION	2.273308379920215E-6	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999915232179282	WITHOUT_CLASSIFICATION	8.476782071790553E-6	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999900520936678	WITHOUT_CLASSIFICATION	9.94790633225243E-6	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999993946198913	WITHOUT_CLASSIFICATION	6.053801086759076E-7	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999997494886365	WITHOUT_CLASSIFICATION	2.5051136351245674E-7	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999857123986162	WITHOUT_CLASSIFICATION	1.4287601383803344E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999981688385993	WITHOUT_CLASSIFICATION	1.8311614008326434E-6	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.999999282379671	WITHOUT_CLASSIFICATION	7.176203290576391E-7	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999957904582083	WITHOUT_CLASSIFICATION	4.2095417917291266E-6	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999984356726662	WITHOUT_CLASSIFICATION	1.56432733380628E-6	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999937814132674	WITHOUT_CLASSIFICATION	6.218586732512109E-6	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999998568810756	WITHOUT_CLASSIFICATION	1.431189243731646E-7	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999953054337504	WITHOUT_CLASSIFICATION	4.694566249628899E-6	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999995377162991	WITHOUT_CLASSIFICATION	4.622837008085291E-7	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.999999931525909	WITHOUT_CLASSIFICATION	6.847409095244205E-8	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999999099984929	WITHOUT_CLASSIFICATION	9.000150711056443E-8	TEST
// hash	WITHOUT_CLASSIFICATION	0.9999970327105936	WITHOUT_CLASSIFICATION	2.9672894064224355E-6	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999733316951644	WITHOUT_CLASSIFICATION	2.6668304835497163E-5	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999753004936797	WITHOUT_CLASSIFICATION	2.469950632029445E-5	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999999477362989	WITHOUT_CLASSIFICATION	5.226370111285146E-8	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999997907971625	WITHOUT_CLASSIFICATION	2.0920283745177496E-7	TEST
// binary	WITHOUT_CLASSIFICATION	0.999999662336409	WITHOUT_CLASSIFICATION	3.376635909292106E-7	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9999997408885878	WITHOUT_CLASSIFICATION	2.591114121305899E-7	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9999807464510669	WITHOUT_CLASSIFICATION	1.925354893313457E-5	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999999623329663	WITHOUT_CLASSIFICATION	3.766703369256177E-8	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999996750661176	WITHOUT_CLASSIFICATION	3.2493388231582077E-7	TEST
// newline	WITHOUT_CLASSIFICATION	0.9999992838232605	WITHOUT_CLASSIFICATION	7.161767394785308E-7	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999997711181758	WITHOUT_CLASSIFICATION	2.2888182422940532E-7	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999987570310124	WITHOUT_CLASSIFICATION	1.2429689876668951E-6	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999999341659559	WITHOUT_CLASSIFICATION	6.583404409454694E-8	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.999999745620053	WITHOUT_CLASSIFICATION	2.543799470684073E-7	TEST
// escape	WITHOUT_CLASSIFICATION	0.9999993408912246	WITHOUT_CLASSIFICATION	6.591087755564075E-7	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999999015407091	WITHOUT_CLASSIFICATION	9.845929083889114E-8	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.999999695368141	WITHOUT_CLASSIFICATION	3.046318589324186E-7	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999998230191812	WITHOUT_CLASSIFICATION	1.7698081883652782E-7	TEST
// space	WITHOUT_CLASSIFICATION	0.9999998372863559	WITHOUT_CLASSIFICATION	1.6271364410499483E-7	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999818604292351	WITHOUT_CLASSIFICATION	1.8139570764954777E-5	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999976407743852	WITHOUT_CLASSIFICATION	2.3592256147405365E-6	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999999884845274	WITHOUT_CLASSIFICATION	1.1515472596178213E-8	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999998230191812	WITHOUT_CLASSIFICATION	1.7698081883652782E-7	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.999951164549103	WITHOUT_CLASSIFICATION	4.883545089701786E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.999951164549103	WITHOUT_CLASSIFICATION	4.883545089701786E-5	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999944769134848	WITHOUT_CLASSIFICATION	5.5230865153099565E-6	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999998703193084	WITHOUT_CLASSIFICATION	1.296806915727791E-7	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999999827443627	WITHOUT_CLASSIFICATION	1.7255637185780576E-8	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999992574666087	WITHOUT_CLASSIFICATION	7.425333912186877E-7	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999995878611512	WITHOUT_CLASSIFICATION	4.1213884880627514E-7	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999998976356703	WITHOUT_CLASSIFICATION	1.023643295991009E-7	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999998154464248	WITHOUT_CLASSIFICATION	1.8455357507403157E-7	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9827694797699925	WITHOUT_CLASSIFICATION	0.01723052023000743	TEST
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999999526820348	WITHOUT_CLASSIFICATION	4.731796526198448E-8	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999992247884321	WITHOUT_CLASSIFICATION	7.752115678634662E-7	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999987829660213	WITHOUT_CLASSIFICATION	1.2170339787543967E-6	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999907389697	WITHOUT_CLASSIFICATION	9.26103021700372E-9	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999986460473722	WITHOUT_CLASSIFICATION	1.3539526278438653E-6	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999984041468422	WITHOUT_CLASSIFICATION	1.5958531578721657E-6	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.999998506155323	WITHOUT_CLASSIFICATION	1.4938446769954516E-6	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999980341143371	WITHOUT_CLASSIFICATION	1.9658856628791283E-6	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.999999879258854	WITHOUT_CLASSIFICATION	1.207411459302047E-7	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999772198655483	WITHOUT_CLASSIFICATION	2.278013445155407E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999772198655483	WITHOUT_CLASSIFICATION	2.278013445155407E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999772198655483	WITHOUT_CLASSIFICATION	2.278013445155407E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999772198655483	WITHOUT_CLASSIFICATION	2.278013445155407E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999772198655483	WITHOUT_CLASSIFICATION	2.278013445155407E-5	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999993132377091	WITHOUT_CLASSIFICATION	6.867622909489912E-7	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999983036276637	WITHOUT_CLASSIFICATION	1.696372336198625E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999996279339379	WITHOUT_CLASSIFICATION	3.7206606210030718E-6	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999589929951	WITHOUT_CLASSIFICATION	4.100700481869414E-8	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.99999625078538	WITHOUT_CLASSIFICATION	3.7492146199908297E-6	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999757894935	WITHOUT_CLASSIFICATION	2.4210506472182618E-8	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.999999270308394	WITHOUT_CLASSIFICATION	7.296916060717388E-7	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999998286923418	WITHOUT_CLASSIFICATION	1.7130765820493773E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999998660280436	WITHOUT_CLASSIFICATION	1.339719564507235E-7	TEST
// line 271	WITHOUT_CLASSIFICATION	0.999999675081508	WITHOUT_CLASSIFICATION	3.2491849200903224E-7	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999996866203162	WITHOUT_CLASSIFICATION	3.133796838486342E-7	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999993919728719	WITHOUT_CLASSIFICATION	6.080271281886439E-7	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999994916802222	WITHOUT_CLASSIFICATION	5.083197777689277E-7	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999995454021544	WITHOUT_CLASSIFICATION	4.5459784562210284E-7	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999995687910619	WITHOUT_CLASSIFICATION	4.31208938054119E-7	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999994463644029	WITHOUT_CLASSIFICATION	5.536355971481963E-7	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999994592676655	WITHOUT_CLASSIFICATION	5.407323345144919E-7	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999994840652944	WITHOUT_CLASSIFICATION	5.159347056322023E-7	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999994969445349	WITHOUT_CLASSIFICATION	5.030554651027627E-7	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999994897125855	WITHOUT_CLASSIFICATION	5.102874145275056E-7	TEST
// line 358	WITHOUT_CLASSIFICATION	0.999999480126812	WITHOUT_CLASSIFICATION	5.198731879920987E-7	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999995400903462	WITHOUT_CLASSIFICATION	4.599096538072067E-7	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999994786259586	WITHOUT_CLASSIFICATION	5.213740413532653E-7	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999994966703019	WITHOUT_CLASSIFICATION	5.033296982126458E-7	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999994113093481	WITHOUT_CLASSIFICATION	5.886906519250571E-7	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999997107720887	WITHOUT_CLASSIFICATION	2.8922791134441233E-7	TEST
// line 411	WITHOUT_CLASSIFICATION	0.999999700609575	WITHOUT_CLASSIFICATION	2.9939042500630107E-7	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999997291170786	WITHOUT_CLASSIFICATION	2.7088292147801437E-7	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999997460252814	WITHOUT_CLASSIFICATION	2.5397471856404025E-7	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999996284833776	WITHOUT_CLASSIFICATION	3.715166223101458E-7	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999996752400562	WITHOUT_CLASSIFICATION	3.2475994385401267E-7	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999996083546021	WITHOUT_CLASSIFICATION	3.9164539786162025E-7	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999996007865509	WITHOUT_CLASSIFICATION	3.9921344908026913E-7	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999997064432322	WITHOUT_CLASSIFICATION	2.935567678479081E-7	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999996912073131	WITHOUT_CLASSIFICATION	3.0879268685777523E-7	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999997309122693	WITHOUT_CLASSIFICATION	2.69087730728999E-7	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999997072068777	WITHOUT_CLASSIFICATION	2.927931223318438E-7	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999997290632548	WITHOUT_CLASSIFICATION	2.7093674513801863E-7	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999997207628559	WITHOUT_CLASSIFICATION	2.7923714408309903E-7	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999996913218174	WITHOUT_CLASSIFICATION	3.0867818253576613E-7	TEST
// line 484	WITHOUT_CLASSIFICATION	0.999999678746534	WITHOUT_CLASSIFICATION	3.212534660481232E-7	TEST
// line 486	WITHOUT_CLASSIFICATION	0.999999691810353	WITHOUT_CLASSIFICATION	3.0818964707112186E-7	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999996418923055	WITHOUT_CLASSIFICATION	3.5810769448926616E-7	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999996513731517	WITHOUT_CLASSIFICATION	3.48626848298814E-7	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999996789748626	WITHOUT_CLASSIFICATION	3.2102513737422344E-7	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999996824076093	WITHOUT_CLASSIFICATION	3.1759239080363576E-7	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999997107449493	WITHOUT_CLASSIFICATION	2.892550506947842E-7	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999997487870989	WITHOUT_CLASSIFICATION	2.5121290112561533E-7	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999997089116993	WITHOUT_CLASSIFICATION	2.9108830076163807E-7	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999996698170777	WITHOUT_CLASSIFICATION	3.3018292229169E-7	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999996279339379	WITHOUT_CLASSIFICATION	3.7206606210030718E-6	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999996324746987	WITHOUT_CLASSIFICATION	3.6752530130205704E-7	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999996938879552	WITHOUT_CLASSIFICATION	3.0611204482308546E-7	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999996090778858	WITHOUT_CLASSIFICATION	3.9092211426586024E-7	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999997125545278	WITHOUT_CLASSIFICATION	2.874454722326039E-7	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999997121161757	WITHOUT_CLASSIFICATION	2.8788382429641596E-7	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999996755352568	WITHOUT_CLASSIFICATION	3.2446474325502906E-7	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999996246748653	WITHOUT_CLASSIFICATION	3.7532513472829E-7	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999997118600419	WITHOUT_CLASSIFICATION	2.8813995812936474E-7	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999996888561351	WITHOUT_CLASSIFICATION	3.111438649343538E-7	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999997167788289	WITHOUT_CLASSIFICATION	2.8322117110339687E-7	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999997060525732	WITHOUT_CLASSIFICATION	2.939474268060159E-7	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999997048461693	WITHOUT_CLASSIFICATION	2.951538307275152E-7	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999996881801042	WITHOUT_CLASSIFICATION	3.1181989581556116E-7	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999996815786543	WITHOUT_CLASSIFICATION	3.184213456845661E-7	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999997101292293	WITHOUT_CLASSIFICATION	2.898707707433238E-7	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999997487488141	WITHOUT_CLASSIFICATION	2.5125118580942896E-7	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999996456650883	WITHOUT_CLASSIFICATION	3.5433491177388567E-7	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999997287334597	WITHOUT_CLASSIFICATION	2.712665403259173E-7	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999996167567546	WITHOUT_CLASSIFICATION	3.8324324543366726E-7	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999995837536297	WITHOUT_CLASSIFICATION	4.1624637030069373E-7	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999996102156685	WITHOUT_CLASSIFICATION	3.89784331436382E-7	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999997003091406	WITHOUT_CLASSIFICATION	2.9969085939624233E-7	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999997114015529	WITHOUT_CLASSIFICATION	2.8859844718042396E-7	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999996873680195	WITHOUT_CLASSIFICATION	3.1263198047398815E-7	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999997198494334	WITHOUT_CLASSIFICATION	2.801505666655152E-7	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999997258654979	WITHOUT_CLASSIFICATION	2.7413450210754286E-7	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999996979107404	WITHOUT_CLASSIFICATION	3.0208925964605076E-7	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999996715395979	WITHOUT_CLASSIFICATION	3.284604020860285E-7	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999997112006698	WITHOUT_CLASSIFICATION	2.887993302208412E-7	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999997348852697	WITHOUT_CLASSIFICATION	2.651147302932241E-7	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999996402621705	WITHOUT_CLASSIFICATION	3.5973782950628475E-7	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999996855377761	WITHOUT_CLASSIFICATION	3.144622239902422E-7	TEST
// line 729	WITHOUT_CLASSIFICATION	0.999999606726581	WITHOUT_CLASSIFICATION	3.9327341904811374E-7	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999995819308771	WITHOUT_CLASSIFICATION	4.18069122809684E-7	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999996291138029	WITHOUT_CLASSIFICATION	3.708861970692689E-7	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999995916505827	WITHOUT_CLASSIFICATION	4.0834941719796497E-7	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999997085555482	WITHOUT_CLASSIFICATION	2.914444518632725E-7	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999997201609262	WITHOUT_CLASSIFICATION	2.7983907388385376E-7	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999997168971038	WITHOUT_CLASSIFICATION	2.831028962402891E-7	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999997064439031	WITHOUT_CLASSIFICATION	2.9355609685811517E-7	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999996286220004	WITHOUT_CLASSIFICATION	3.713779995529627E-7	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999996921290842	WITHOUT_CLASSIFICATION	3.07870915796212E-7	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999996790905877	WITHOUT_CLASSIFICATION	3.209094122053605E-7	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999997161395429	WITHOUT_CLASSIFICATION	2.838604571435728E-7	TEST
// line 782	WITHOUT_CLASSIFICATION	0.999999666363801	WITHOUT_CLASSIFICATION	3.3363619893405054E-7	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999996918643635	WITHOUT_CLASSIFICATION	3.08135636562702E-7	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999996682363672	WITHOUT_CLASSIFICATION	3.317636328544374E-7	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999996815789489	WITHOUT_CLASSIFICATION	3.1842105105033156E-7	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999996778550743	WITHOUT_CLASSIFICATION	3.2214492575984713E-7	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999994694567919	WITHOUT_CLASSIFICATION	5.305432081791621E-7	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999996559931025	WITHOUT_CLASSIFICATION	3.4400689754510783E-7	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999996118394497	WITHOUT_CLASSIFICATION	3.881605502326357E-7	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999997146455033	WITHOUT_CLASSIFICATION	2.853544967417727E-7	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999997069781625	WITHOUT_CLASSIFICATION	2.930218374570032E-7	TEST
// line 821	WITHOUT_CLASSIFICATION	0.999999620116122	WITHOUT_CLASSIFICATION	3.79883877957925E-7	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999996346743574	WITHOUT_CLASSIFICATION	3.653256426484458E-7	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999995609084396	WITHOUT_CLASSIFICATION	4.3909156042655583E-7	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999995663559536	WITHOUT_CLASSIFICATION	4.3364404641715216E-7	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999995802851862	WITHOUT_CLASSIFICATION	4.197148137909198E-7	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999995269432419	WITHOUT_CLASSIFICATION	4.730567580425526E-7	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999996421911863	WITHOUT_CLASSIFICATION	3.5780881370218193E-7	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999996685816979	WITHOUT_CLASSIFICATION	3.314183021789527E-7	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999996606784095	WITHOUT_CLASSIFICATION	3.393215905756157E-7	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999996824543724	WITHOUT_CLASSIFICATION	3.1754562755809487E-7	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999996690908133	WITHOUT_CLASSIFICATION	3.309091866769489E-7	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999996784540395	WITHOUT_CLASSIFICATION	3.215459604559528E-7	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999996805114649	WITHOUT_CLASSIFICATION	3.194885350171154E-7	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999997010114736	WITHOUT_CLASSIFICATION	2.989885263081914E-7	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999996627592258	WITHOUT_CLASSIFICATION	3.3724077421910765E-7	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999995648157959	WITHOUT_CLASSIFICATION	4.3518420410566054E-7	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999995296199224	WITHOUT_CLASSIFICATION	4.703800775337531E-7	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999996550422868	WITHOUT_CLASSIFICATION	3.4495771311043325E-7	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999996400871997	WITHOUT_CLASSIFICATION	3.5991280037837067E-7	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999994443269226	WITHOUT_CLASSIFICATION	5.556730774286526E-7	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999996676633677	WITHOUT_CLASSIFICATION	3.323366322613143E-7	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999997008872706	WITHOUT_CLASSIFICATION	2.991127292692182E-7	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999995746258235	WITHOUT_CLASSIFICATION	4.2537417660502765E-7	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999995041585014	WITHOUT_CLASSIFICATION	4.95841498636568E-7	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999996281633783	WITHOUT_CLASSIFICATION	3.718366217084127E-7	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999995058793256	WITHOUT_CLASSIFICATION	4.941206744278422E-7	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999995597579545	WITHOUT_CLASSIFICATION	4.402420454538203E-7	TEST
// line 940	WITHOUT_CLASSIFICATION	0.99999964557414	WITHOUT_CLASSIFICATION	3.544258599513825E-7	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999996529271641	WITHOUT_CLASSIFICATION	3.4707283585340466E-7	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999996354905177	WITHOUT_CLASSIFICATION	3.645094822747037E-7	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999996828532481	WITHOUT_CLASSIFICATION	3.171467518863127E-7	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999996538162641	WITHOUT_CLASSIFICATION	3.4618373578289206E-7	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999996686348674	WITHOUT_CLASSIFICATION	3.3136513256633285E-7	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999996897835918	WITHOUT_CLASSIFICATION	3.102164082542034E-7	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999996474437534	WITHOUT_CLASSIFICATION	3.5255624662240385E-7	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999996596454481	WITHOUT_CLASSIFICATION	3.403545518262796E-7	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999996245035238	WITHOUT_CLASSIFICATION	3.7549647618184783E-7	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999996357875621	WITHOUT_CLASSIFICATION	3.642124378140993E-7	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999996465117387	WITHOUT_CLASSIFICATION	3.534882613224308E-7	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999996636868826	WITHOUT_CLASSIFICATION	3.3631311739503E-7	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.999999678802111	WITHOUT_CLASSIFICATION	3.2119788892945164E-7	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999997150427402	WITHOUT_CLASSIFICATION	2.8495725976243346E-7	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999996629710919	WITHOUT_CLASSIFICATION	3.3702890809187666E-7	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999997285608814	WITHOUT_CLASSIFICATION	2.714391186336438E-7	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999996147937408	WITHOUT_CLASSIFICATION	3.8520625920302276E-7	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999995380217507	WITHOUT_CLASSIFICATION	4.619782492452831E-7	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999995845279915	WITHOUT_CLASSIFICATION	4.154720083940353E-7	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999997333327602	WITHOUT_CLASSIFICATION	2.6666723983157193E-7	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999997038143202	WITHOUT_CLASSIFICATION	2.961856797310678E-7	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999996555543972	WITHOUT_CLASSIFICATION	3.444456027805386E-7	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999996859795586	WITHOUT_CLASSIFICATION	3.1402044139774334E-7	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999997801588274	WITHOUT_CLASSIFICATION	2.1984117269162101E-7	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.999999664330836	WITHOUT_CLASSIFICATION	3.3566916398035696E-7	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999997533130803	WITHOUT_CLASSIFICATION	2.466869196950228E-7	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999997217843836	WITHOUT_CLASSIFICATION	2.7821561642560525E-7	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999996397761423	WITHOUT_CLASSIFICATION	3.602238577726874E-7	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999996418778726	WITHOUT_CLASSIFICATION	3.5812212742367695E-7	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999997070166132	WITHOUT_CLASSIFICATION	2.929833867542069E-7	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999997426763931	WITHOUT_CLASSIFICATION	2.573236068611882E-7	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999996048046043	WITHOUT_CLASSIFICATION	3.9519539582357894E-7	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999997631151596	WITHOUT_CLASSIFICATION	2.3688484044340695E-7	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999996868086607	WITHOUT_CLASSIFICATION	3.131913392463685E-7	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999996437057315	WITHOUT_CLASSIFICATION	3.5629426855894047E-7	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999997403600297	WITHOUT_CLASSIFICATION	2.5963997031552947E-7	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999997072234431	WITHOUT_CLASSIFICATION	2.927765569121703E-7	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999996409370553	WITHOUT_CLASSIFICATION	3.5906294464206715E-7	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999996450597358	WITHOUT_CLASSIFICATION	3.5494026422142143E-7	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.999999657953516	WITHOUT_CLASSIFICATION	3.420464840560146E-7	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999996672713313	WITHOUT_CLASSIFICATION	3.3272866867914686E-7	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999997258044583	WITHOUT_CLASSIFICATION	2.741955416709792E-7	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999997008429656	WITHOUT_CLASSIFICATION	2.99157034424269E-7	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999997427352872	WITHOUT_CLASSIFICATION	2.5726471273569693E-7	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999997270076436	WITHOUT_CLASSIFICATION	2.729923564071827E-7	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999997422398257	WITHOUT_CLASSIFICATION	2.5776017423521035E-7	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999997568262217	WITHOUT_CLASSIFICATION	2.431737783379717E-7	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999997347772306	WITHOUT_CLASSIFICATION	2.6522276933393716E-7	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999997394040234	WITHOUT_CLASSIFICATION	2.605959766718451E-7	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999996988667273	WITHOUT_CLASSIFICATION	3.01133272628283E-7	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999996147846129	WITHOUT_CLASSIFICATION	3.8521538710779934E-7	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999996526489437	WITHOUT_CLASSIFICATION	3.4735105617190196E-7	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999996838112661	WITHOUT_CLASSIFICATION	3.1618873388958734E-7	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999997130415191	WITHOUT_CLASSIFICATION	2.8695848092253695E-7	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999996959921577	WITHOUT_CLASSIFICATION	3.040078423202286E-7	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999996381796217	WITHOUT_CLASSIFICATION	3.618203783178186E-7	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999995808307588	WITHOUT_CLASSIFICATION	4.191692412679468E-7	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999995993073361	WITHOUT_CLASSIFICATION	4.006926639555703E-7	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999997136096443	WITHOUT_CLASSIFICATION	2.863903556853501E-7	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999996610761968	WITHOUT_CLASSIFICATION	3.389238031910641E-7	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999996103146134	WITHOUT_CLASSIFICATION	3.896853866070434E-7	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999996769523306	WITHOUT_CLASSIFICATION	3.2304766940183993E-7	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999996666039623	WITHOUT_CLASSIFICATION	3.3339603768885603E-7	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.999999573490133	WITHOUT_CLASSIFICATION	4.2650986705300353E-7	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999996176730976	WITHOUT_CLASSIFICATION	3.823269023232231E-7	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.999999641291151	WITHOUT_CLASSIFICATION	3.5870884894818056E-7	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999996257399056	WITHOUT_CLASSIFICATION	3.7426009438769904E-7	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999995722935755	WITHOUT_CLASSIFICATION	4.277064244765136E-7	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999995719187752	WITHOUT_CLASSIFICATION	4.2808122491529115E-7	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999996257455473	WITHOUT_CLASSIFICATION	3.7425445262116834E-7	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999996436657805	WITHOUT_CLASSIFICATION	3.5633421945757987E-7	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999995458256927	WITHOUT_CLASSIFICATION	4.541743072369498E-7	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999995644745155	WITHOUT_CLASSIFICATION	4.3552548441252883E-7	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999996429308544	WITHOUT_CLASSIFICATION	3.5706914562020216E-7	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999996176989985	WITHOUT_CLASSIFICATION	3.8230100162538963E-7	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999996169551557	WITHOUT_CLASSIFICATION	3.830448442597044E-7	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999996238208916	WITHOUT_CLASSIFICATION	3.7617910845307233E-7	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999996545548087	WITHOUT_CLASSIFICATION	3.454451912903457E-7	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999995458751066	WITHOUT_CLASSIFICATION	4.5412489332644825E-7	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999996330902614	WITHOUT_CLASSIFICATION	3.669097386035422E-7	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999995605427248	WITHOUT_CLASSIFICATION	4.3945727530234005E-7	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.999999733900772	WITHOUT_CLASSIFICATION	2.660992279105056E-7	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999995773427	WITHOUT_CLASSIFICATION	4.2265730005102664E-7	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999996386844539	WITHOUT_CLASSIFICATION	3.613155461637116E-7	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999997118027666	WITHOUT_CLASSIFICATION	2.881972334535867E-7	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.999999631684987	WITHOUT_CLASSIFICATION	3.683150130320158E-7	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999996527706623	WITHOUT_CLASSIFICATION	3.4722933765388746E-7	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999997487924702	WITHOUT_CLASSIFICATION	2.5120752977275707E-7	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999997102299649	WITHOUT_CLASSIFICATION	2.8977003503079304E-7	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999997420715865	WITHOUT_CLASSIFICATION	2.5792841351994963E-7	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999997425353114	WITHOUT_CLASSIFICATION	2.5746468859847334E-7	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.999999736608816	WITHOUT_CLASSIFICATION	2.6339118403779174E-7	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999996978227302	WITHOUT_CLASSIFICATION	3.0217726966690585E-7	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999997187406315	WITHOUT_CLASSIFICATION	2.8125936844390196E-7	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999997045699826	WITHOUT_CLASSIFICATION	2.954300174319292E-7	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999997068200775	WITHOUT_CLASSIFICATION	2.93179922439375E-7	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999996819539905	WITHOUT_CLASSIFICATION	3.1804600955372576E-7	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999997470981636	WITHOUT_CLASSIFICATION	2.5290183637849915E-7	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999996433346081	WITHOUT_CLASSIFICATION	3.566653918866833E-7	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999997386717067	WITHOUT_CLASSIFICATION	2.613282934193646E-7	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.999999646746703	WITHOUT_CLASSIFICATION	3.5325329696290415E-7	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999997190460005	WITHOUT_CLASSIFICATION	2.809539994266273E-7	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999996443253701	WITHOUT_CLASSIFICATION	3.5567462993217735E-7	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999997404063538	WITHOUT_CLASSIFICATION	2.5959364624751764E-7	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999997399449589	WITHOUT_CLASSIFICATION	2.60055041115326E-7	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999997274847134	WITHOUT_CLASSIFICATION	2.725152865645374E-7	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999997087443274	WITHOUT_CLASSIFICATION	2.912556725552617E-7	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999997483832759	WITHOUT_CLASSIFICATION	2.516167241260106E-7	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999997451540176	WITHOUT_CLASSIFICATION	2.548459824741388E-7	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999997338822042	WITHOUT_CLASSIFICATION	2.661177957824029E-7	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999997075119239	WITHOUT_CLASSIFICATION	2.9248807598441894E-7	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999996920822122	WITHOUT_CLASSIFICATION	3.079177878125054E-7	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999997114732313	WITHOUT_CLASSIFICATION	2.8852676869832555E-7	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.999999677844378	WITHOUT_CLASSIFICATION	3.221556219247199E-7	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.999999614342839	WITHOUT_CLASSIFICATION	3.856571610297555E-7	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999996978124831	WITHOUT_CLASSIFICATION	3.021875169030957E-7	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999996387171896	WITHOUT_CLASSIFICATION	3.6128281045179905E-7	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999996130163714	WITHOUT_CLASSIFICATION	3.869836286634223E-7	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999996220352451	WITHOUT_CLASSIFICATION	3.779647548849069E-7	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999996893467143	WITHOUT_CLASSIFICATION	3.106532856474693E-7	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.999999728695772	WITHOUT_CLASSIFICATION	2.713042279802814E-7	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.999999706402523	WITHOUT_CLASSIFICATION	2.9359747697945086E-7	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999997379280753	WITHOUT_CLASSIFICATION	2.620719246526611E-7	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.999999725276134	WITHOUT_CLASSIFICATION	2.7472386598701685E-7	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999996834279238	WITHOUT_CLASSIFICATION	3.165720761275524E-7	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999997259574096	WITHOUT_CLASSIFICATION	2.7404259037690013E-7	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999997455924254	WITHOUT_CLASSIFICATION	2.5440757454800353E-7	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999997320337675	WITHOUT_CLASSIFICATION	2.6796623256258147E-7	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999997055437972	WITHOUT_CLASSIFICATION	2.9445620272143315E-7	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999997186773435	WITHOUT_CLASSIFICATION	2.8132265651298706E-7	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.999999683545693	WITHOUT_CLASSIFICATION	3.164543070077281E-7	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999997199482159	WITHOUT_CLASSIFICATION	2.8005178411034847E-7	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999996528858212	WITHOUT_CLASSIFICATION	3.4711417882950207E-7	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999997138374552	WITHOUT_CLASSIFICATION	2.8616254475797927E-7	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999997495260131	WITHOUT_CLASSIFICATION	2.504739868642357E-7	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999997133682293	WITHOUT_CLASSIFICATION	2.8663177073818284E-7	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999997446797887	WITHOUT_CLASSIFICATION	2.553202113529864E-7	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999997223478467	WITHOUT_CLASSIFICATION	2.776521532570769E-7	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999997105922317	WITHOUT_CLASSIFICATION	2.894077683583142E-7	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999997440029549	WITHOUT_CLASSIFICATION	2.559970450808529E-7	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999997246255424	WITHOUT_CLASSIFICATION	2.7537445752641227E-7	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999996555984192	WITHOUT_CLASSIFICATION	3.4440158077545697E-7	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999997110396133	WITHOUT_CLASSIFICATION	2.8896038669939827E-7	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999997044003238	WITHOUT_CLASSIFICATION	2.955996761926426E-7	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999996819353917	WITHOUT_CLASSIFICATION	3.180646083320368E-7	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999993890564352	WITHOUT_CLASSIFICATION	6.109435648042474E-7	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.999966753279473	WITHOUT_CLASSIFICATION	3.324672052700821E-5	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999831056818239	WITHOUT_CLASSIFICATION	1.6894318176044856E-5	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.999988536140034	WITHOUT_CLASSIFICATION	1.1463859966056851E-5	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999973490087753	WITHOUT_CLASSIFICATION	2.650991224616228E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999990254747616	WITHOUT_CLASSIFICATION	9.745252383854915E-7	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.999995817883949	WITHOUT_CLASSIFICATION	4.182116051089805E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.999996132887191	WITHOUT_CLASSIFICATION	3.867112808990878E-6	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999851020155053	WITHOUT_CLASSIFICATION	1.4897984494723989E-5	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999962171288957	WITHOUT_CLASSIFICATION	3.7828711041918746E-6	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999997300448109	WITHOUT_CLASSIFICATION	2.699551890754523E-7	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999996061985973	WITHOUT_CLASSIFICATION	3.9380140268503964E-7	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999990048086312	WITHOUT_CLASSIFICATION	9.951913687571594E-7	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999773123452295	WITHOUT_CLASSIFICATION	2.268765477053853E-5	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999974865862874	WITHOUT_CLASSIFICATION	2.5134137126837654E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999410100073765	WITHOUT_CLASSIFICATION	5.8989992623606995E-5	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999779117396662	WITHOUT_CLASSIFICATION	2.208826033376382E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999916719750467	WITHOUT_CLASSIFICATION	8.328024953366736E-6	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999540014827	WITHOUT_CLASSIFICATION	4.5998517193445195E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999863020516	WITHOUT_CLASSIFICATION	1.3697948444436802E-8	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999991156953347	WITHOUT_CLASSIFICATION	8.843046651449983E-7	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999996235923478	WITHOUT_CLASSIFICATION	3.7640765212290816E-7	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.999999912410131	WITHOUT_CLASSIFICATION	8.7589869020418E-8	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999785005619	WITHOUT_CLASSIFICATION	2.1499438132407628E-8	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999785005619	WITHOUT_CLASSIFICATION	2.1499438132407628E-8	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999926406963608	WITHOUT_CLASSIFICATION	7.359303639131389E-6	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999944417125763	WITHOUT_CLASSIFICATION	5.558287423700053E-6	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999964873053229	WITHOUT_CLASSIFICATION	3.5126946771760222E-6	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999998620379458	WITHOUT_CLASSIFICATION	1.379620542992416E-7	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999997459512687	WITHOUT_CLASSIFICATION	2.5404873124046834E-7	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.999999903548385	WITHOUT_CLASSIFICATION	9.645161501857092E-8	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999999819155884	WITHOUT_CLASSIFICATION	1.8084411606560254E-8	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999995070697997	WITHOUT_CLASSIFICATION	4.929302002498483E-7	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999998449658997	WITHOUT_CLASSIFICATION	1.5503410033799283E-7	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.999999689737663	WITHOUT_CLASSIFICATION	3.1026233700984663E-7	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999971376682686	WITHOUT_CLASSIFICATION	2.8623317314330915E-6	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999557864640977	WITHOUT_CLASSIFICATION	4.4213535902394765E-5	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999999965447836	WITHOUT_CLASSIFICATION	3.455216558208462E-9	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999977916343927	WITHOUT_CLASSIFICATION	2.208365607230077E-6	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999971866198294	WITHOUT_CLASSIFICATION	2.8133801706756505E-6	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999981782824017	WITHOUT_CLASSIFICATION	1.8217175983018365E-6	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999995073533191	WITHOUT_CLASSIFICATION	4.926466808377642E-7	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999992748400133	WITHOUT_CLASSIFICATION	7.251599866629617E-7	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999999781064263	WITHOUT_CLASSIFICATION	2.1893573767957657E-8	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999991581740255	WITHOUT_CLASSIFICATION	8.418259745370742E-7	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999965572254	WITHOUT_CLASSIFICATION	3.4427747036042393E-9	TEST
// Node	WITHOUT_CLASSIFICATION	0.9999990207758781	WITHOUT_CLASSIFICATION	9.792241219491811E-7	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9884789764786379	WITHOUT_CLASSIFICATION	0.011521023521362087	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999997710677604	WITHOUT_CLASSIFICATION	2.2893223970482702E-7	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9884789764786379	WITHOUT_CLASSIFICATION	0.011521023521362087	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999996616060719	WITHOUT_CLASSIFICATION	3.3839392812619405E-7	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.999999734534609	WITHOUT_CLASSIFICATION	2.65465390986825E-7	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999988687772685	WITHOUT_CLASSIFICATION	1.1312227314400093E-6	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999979728742509	WITHOUT_CLASSIFICATION	2.0271257492542316E-6	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999999019873852	WITHOUT_CLASSIFICATION	9.80126148057847E-8	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999988061270298	WITHOUT_CLASSIFICATION	1.193872970181702E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999988061270298	WITHOUT_CLASSIFICATION	1.193872970181702E-6	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9999988061270298	WITHOUT_CLASSIFICATION	1.193872970181702E-6	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999987715512845	WITHOUT_CLASSIFICATION	1.2284487154746228E-6	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999944038103807	WITHOUT_CLASSIFICATION	5.596189619320406E-6	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999999449802168	WITHOUT_CLASSIFICATION	5.5019783289871244E-8	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999769743100512	WITHOUT_CLASSIFICATION	2.3025689948744452E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999769743100512	WITHOUT_CLASSIFICATION	2.3025689948744452E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999769743100512	WITHOUT_CLASSIFICATION	2.3025689948744452E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999769743100512	WITHOUT_CLASSIFICATION	2.3025689948744452E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999769743100512	WITHOUT_CLASSIFICATION	2.3025689948744452E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999769743100512	WITHOUT_CLASSIFICATION	2.3025689948744452E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999926130908873	WITHOUT_CLASSIFICATION	7.386909112740601E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999926130908873	WITHOUT_CLASSIFICATION	7.386909112740601E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999926130908873	WITHOUT_CLASSIFICATION	7.386909112740601E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999926130908873	WITHOUT_CLASSIFICATION	7.386909112740601E-6	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999926130908873	WITHOUT_CLASSIFICATION	7.386909112740601E-6	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999828657411381	WITHOUT_CLASSIFICATION	1.7134258861886983E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999828657411381	WITHOUT_CLASSIFICATION	1.7134258861886983E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999828657411381	WITHOUT_CLASSIFICATION	1.7134258861886983E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999828657411381	WITHOUT_CLASSIFICATION	1.7134258861886983E-5	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999828657411381	WITHOUT_CLASSIFICATION	1.7134258861886983E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999813491697132	WITHOUT_CLASSIFICATION	1.8650830286900193E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999813491697132	WITHOUT_CLASSIFICATION	1.8650830286900193E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999813491697132	WITHOUT_CLASSIFICATION	1.8650830286900193E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999813491697132	WITHOUT_CLASSIFICATION	1.8650830286900193E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999813491697132	WITHOUT_CLASSIFICATION	1.8650830286900193E-5	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999813491697132	WITHOUT_CLASSIFICATION	1.8650830286900193E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999996090860097	WITHOUT_CLASSIFICATION	3.909139903039088E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999996090860097	WITHOUT_CLASSIFICATION	3.909139903039088E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999996090860097	WITHOUT_CLASSIFICATION	3.909139903039088E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999996090860097	WITHOUT_CLASSIFICATION	3.909139903039088E-6	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.999996090860097	WITHOUT_CLASSIFICATION	3.909139903039088E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999995803409029	WITHOUT_CLASSIFICATION	4.196590970928791E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999995803409029	WITHOUT_CLASSIFICATION	4.196590970928791E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999995803409029	WITHOUT_CLASSIFICATION	4.196590970928791E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999995803409029	WITHOUT_CLASSIFICATION	4.196590970928791E-6	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999995803409029	WITHOUT_CLASSIFICATION	4.196590970928791E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999996279339379	WITHOUT_CLASSIFICATION	3.7206606210030718E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999996279339379	WITHOUT_CLASSIFICATION	3.7206606210030718E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999996279339379	WITHOUT_CLASSIFICATION	3.7206606210030718E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999996279339379	WITHOUT_CLASSIFICATION	3.7206606210030718E-6	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999996279339379	WITHOUT_CLASSIFICATION	3.7206606210030718E-6	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999589929951	WITHOUT_CLASSIFICATION	4.100700481869414E-8	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999757894935	WITHOUT_CLASSIFICATION	2.4210506472182618E-8	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.999999270308394	WITHOUT_CLASSIFICATION	7.296916060717388E-7	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999998286923418	WITHOUT_CLASSIFICATION	1.7130765820493773E-7	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999998660280436	WITHOUT_CLASSIFICATION	1.339719564507235E-7	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999994127131325	WITHOUT_CLASSIFICATION	5.872868675903517E-7	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999994897125855	WITHOUT_CLASSIFICATION	5.102874145275056E-7	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999994113093481	WITHOUT_CLASSIFICATION	5.886906519250571E-7	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999997460252814	WITHOUT_CLASSIFICATION	2.5397471856404025E-7	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999996284833776	WITHOUT_CLASSIFICATION	3.715166223101458E-7	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999995669403509	WITHOUT_CLASSIFICATION	4.330596492257478E-7	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999996752400562	WITHOUT_CLASSIFICATION	3.2475994385401267E-7	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999996355931696	WITHOUT_CLASSIFICATION	3.644068303970173E-7	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999995338163773	WITHOUT_CLASSIFICATION	4.6618362278435623E-7	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999996082063061	WITHOUT_CLASSIFICATION	3.917936939223947E-7	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999994352123901	WITHOUT_CLASSIFICATION	5.647876099304403E-7	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999994671618648	WITHOUT_CLASSIFICATION	5.328381350782117E-7	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999994722501456	WITHOUT_CLASSIFICATION	5.277498542617254E-7	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999994869416564	WITHOUT_CLASSIFICATION	5.130583434707578E-7	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999995067303531	WITHOUT_CLASSIFICATION	4.932696469327491E-7	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999994565303676	WITHOUT_CLASSIFICATION	5.434696324789882E-7	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999995283681445	WITHOUT_CLASSIFICATION	4.7163185543602387E-7	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999994716664601	WITHOUT_CLASSIFICATION	5.283335399461509E-7	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999995100333665	WITHOUT_CLASSIFICATION	4.899666335296864E-7	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999994771333532	WITHOUT_CLASSIFICATION	5.228666468578084E-7	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999995159821419	WITHOUT_CLASSIFICATION	4.840178581771262E-7	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999994563893728	WITHOUT_CLASSIFICATION	5.436106272024465E-7	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999993928256176	WITHOUT_CLASSIFICATION	6.071743825303992E-7	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999994761254529	WITHOUT_CLASSIFICATION	5.238745471483263E-7	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999995938488839	WITHOUT_CLASSIFICATION	4.0615111604775486E-7	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999995695173909	WITHOUT_CLASSIFICATION	4.304826090883927E-7	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999996164519941	WITHOUT_CLASSIFICATION	3.8354800593725454E-7	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999997105076402	WITHOUT_CLASSIFICATION	2.8949235983961883E-7	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999996784825267	WITHOUT_CLASSIFICATION	3.215174732579867E-7	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999997108700046	WITHOUT_CLASSIFICATION	2.8912999545215167E-7	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999996904773306	WITHOUT_CLASSIFICATION	3.0952266943898094E-7	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999997064216796	WITHOUT_CLASSIFICATION	2.9357832045508503E-7	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999996829064816	WITHOUT_CLASSIFICATION	3.170935184241868E-7	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999997029374381	WITHOUT_CLASSIFICATION	2.9706256190505445E-7	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999996692450888	WITHOUT_CLASSIFICATION	3.307549112237711E-7	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999996797732033	WITHOUT_CLASSIFICATION	3.2022679682664706E-7	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999996680267186	WITHOUT_CLASSIFICATION	3.3197328147388223E-7	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999996910220436	WITHOUT_CLASSIFICATION	3.089779563634131E-7	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999995162541484	WITHOUT_CLASSIFICATION	4.83745851640121E-7	TEST
// line 506	WITHOUT_CLASSIFICATION	0.999999686345649	WITHOUT_CLASSIFICATION	3.136543510524728E-7	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999996460905649	WITHOUT_CLASSIFICATION	3.5390943511003666E-7	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999997100284579	WITHOUT_CLASSIFICATION	2.899715420604002E-7	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999996598854571	WITHOUT_CLASSIFICATION	3.401145428109343E-7	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999996819814289	WITHOUT_CLASSIFICATION	3.1801857114395446E-7	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999996938879552	WITHOUT_CLASSIFICATION	3.0611204482308546E-7	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999996090778858	WITHOUT_CLASSIFICATION	3.9092211426586024E-7	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999997125545278	WITHOUT_CLASSIFICATION	2.874454722326039E-7	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999997118600419	WITHOUT_CLASSIFICATION	2.8813995812936474E-7	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999997487488141	WITHOUT_CLASSIFICATION	2.5125118580942896E-7	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999996979107404	WITHOUT_CLASSIFICATION	3.0208925964605076E-7	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999996617410636	WITHOUT_CLASSIFICATION	3.382589363509125E-7	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999996715395979	WITHOUT_CLASSIFICATION	3.284604020860285E-7	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999996790905877	WITHOUT_CLASSIFICATION	3.209094122053605E-7	TEST
// line 782	WITHOUT_CLASSIFICATION	0.999999666363801	WITHOUT_CLASSIFICATION	3.3363619893405054E-7	TEST
// line 785	WITHOUT_CLASSIFICATION	0.999999706645401	WITHOUT_CLASSIFICATION	2.9335459890632316E-7	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999996918643635	WITHOUT_CLASSIFICATION	3.08135636562702E-7	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999996682363672	WITHOUT_CLASSIFICATION	3.317636328544374E-7	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999996173401218	WITHOUT_CLASSIFICATION	3.826598781774729E-7	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999996756139442	WITHOUT_CLASSIFICATION	3.243860558448334E-7	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999996762816434	WITHOUT_CLASSIFICATION	3.237183566271359E-7	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999996821384137	WITHOUT_CLASSIFICATION	3.1786158634689144E-7	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999997035593313	WITHOUT_CLASSIFICATION	2.964406686943337E-7	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999997106364708	WITHOUT_CLASSIFICATION	2.8936352920651937E-7	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999997209126184	WITHOUT_CLASSIFICATION	2.7908738165337906E-7	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999996945587593	WITHOUT_CLASSIFICATION	3.0544124071615123E-7	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999996951080732	WITHOUT_CLASSIFICATION	3.0489192687106637E-7	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999996589418859	WITHOUT_CLASSIFICATION	3.410581140744742E-7	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999996485634365	WITHOUT_CLASSIFICATION	3.5143656346708234E-7	TEST
// line 595	WITHOUT_CLASSIFICATION	0.999999674435437	WITHOUT_CLASSIFICATION	3.255645629226872E-7	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999996578729423	WITHOUT_CLASSIFICATION	3.4212705779342315E-7	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999995750514679	WITHOUT_CLASSIFICATION	4.24948532119081E-7	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999996912246676	WITHOUT_CLASSIFICATION	3.0877533240025716E-7	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999996027599976	WITHOUT_CLASSIFICATION	3.972400023936571E-7	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999996076891667	WITHOUT_CLASSIFICATION	3.9231083321235937E-7	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999995720331153	WITHOUT_CLASSIFICATION	4.279668846717313E-7	TEST
// line 648	WITHOUT_CLASSIFICATION	0.999999685857327	WITHOUT_CLASSIFICATION	3.141426729690999E-7	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999997314799555	WITHOUT_CLASSIFICATION	2.685200445601373E-7	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999996876169198	WITHOUT_CLASSIFICATION	3.123830801547667E-7	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999996960457975	WITHOUT_CLASSIFICATION	3.0395420244716057E-7	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999997107254782	WITHOUT_CLASSIFICATION	2.8927452179902533E-7	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999996566152953	WITHOUT_CLASSIFICATION	3.433847046024469E-7	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999996829086591	WITHOUT_CLASSIFICATION	3.1709134090403104E-7	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999996720139229	WITHOUT_CLASSIFICATION	3.279860771265504E-7	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999997075565488	WITHOUT_CLASSIFICATION	2.924434511481776E-7	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999996491287896	WITHOUT_CLASSIFICATION	3.508712104527842E-7	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999996721433201	WITHOUT_CLASSIFICATION	3.278566799757705E-7	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999996119905505	WITHOUT_CLASSIFICATION	3.880094494833184E-7	TEST
// line 753	WITHOUT_CLASSIFICATION	0.999999631485834	WITHOUT_CLASSIFICATION	3.685141659742218E-7	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999996780808142	WITHOUT_CLASSIFICATION	3.219191857473455E-7	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999996479078126	WITHOUT_CLASSIFICATION	3.520921873834893E-7	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999996077312039	WITHOUT_CLASSIFICATION	3.9226879613737146E-7	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999996710196439	WITHOUT_CLASSIFICATION	3.289803561167651E-7	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999997209228065	WITHOUT_CLASSIFICATION	2.790771934549976E-7	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999996421911863	WITHOUT_CLASSIFICATION	3.5780881370218193E-7	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999996868150548	WITHOUT_CLASSIFICATION	3.1318494521966306E-7	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999996685816979	WITHOUT_CLASSIFICATION	3.314183021789527E-7	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999995296199224	WITHOUT_CLASSIFICATION	4.703800775337531E-7	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999996400871997	WITHOUT_CLASSIFICATION	3.5991280037837067E-7	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999995058793256	WITHOUT_CLASSIFICATION	4.941206744278422E-7	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999996529271641	WITHOUT_CLASSIFICATION	3.4707283585340466E-7	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999996538162641	WITHOUT_CLASSIFICATION	3.4618373578289206E-7	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999996245035238	WITHOUT_CLASSIFICATION	3.7549647618184783E-7	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999997150427402	WITHOUT_CLASSIFICATION	2.8495725976243346E-7	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999995477607736	WITHOUT_CLASSIFICATION	4.5223922651692195E-7	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999995936568213	WITHOUT_CLASSIFICATION	4.0634317864873916E-7	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999996447972941	WITHOUT_CLASSIFICATION	3.552027059397842E-7	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999995557765756	WITHOUT_CLASSIFICATION	4.4422342431735463E-7	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999995289208742	WITHOUT_CLASSIFICATION	4.710791257679741E-7	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999996729525834	WITHOUT_CLASSIFICATION	3.2704741665645223E-7	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999997043260144	WITHOUT_CLASSIFICATION	2.956739855891805E-7	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999996688278516	WITHOUT_CLASSIFICATION	3.311721482824375E-7	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999995810330292	WITHOUT_CLASSIFICATION	4.189669707527348E-7	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999996783566852	WITHOUT_CLASSIFICATION	3.216433146831824E-7	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999996526780096	WITHOUT_CLASSIFICATION	3.4732199047591524E-7	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999997026293407	WITHOUT_CLASSIFICATION	2.9737065931144356E-7	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999996700342569	WITHOUT_CLASSIFICATION	3.299657430012074E-7	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999996899786692	WITHOUT_CLASSIFICATION	3.100213308517987E-7	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999996353029739	WITHOUT_CLASSIFICATION	3.646970260947789E-7	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999995943127723	WITHOUT_CLASSIFICATION	4.0568722776728413E-7	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999996244477225	WITHOUT_CLASSIFICATION	3.7555227755251853E-7	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999996639738616	WITHOUT_CLASSIFICATION	3.3602613831654907E-7	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999996992555354	WITHOUT_CLASSIFICATION	3.0074446452522483E-7	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999996214491329	WITHOUT_CLASSIFICATION	3.7855086709431154E-7	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999995925545974	WITHOUT_CLASSIFICATION	4.0744540268717545E-7	TEST
// line 941	WITHOUT_CLASSIFICATION	0.999999644041394	WITHOUT_CLASSIFICATION	3.559586060306093E-7	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999996768223283	WITHOUT_CLASSIFICATION	3.231776717896409E-7	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999996562793111	WITHOUT_CLASSIFICATION	3.437206888444048E-7	TEST
// line 955	WITHOUT_CLASSIFICATION	0.999999665869378	WITHOUT_CLASSIFICATION	3.3413062196318966E-7	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999996799512935	WITHOUT_CLASSIFICATION	3.2004870655754724E-7	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999996646304509	WITHOUT_CLASSIFICATION	3.3536954921313876E-7	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999996727042318	WITHOUT_CLASSIFICATION	3.2729576806349833E-7	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999995196486255	WITHOUT_CLASSIFICATION	4.803513743668834E-7	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.99999963873637	WITHOUT_CLASSIFICATION	3.6126362997926525E-7	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999995892698958	WITHOUT_CLASSIFICATION	4.107301040401908E-7	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999995892505769	WITHOUT_CLASSIFICATION	4.107494231648954E-7	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999996770911364	WITHOUT_CLASSIFICATION	3.229088637030515E-7	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999996322214952	WITHOUT_CLASSIFICATION	3.677785046651182E-7	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999997037493943	WITHOUT_CLASSIFICATION	2.962506057450274E-7	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999997210605157	WITHOUT_CLASSIFICATION	2.789394843134543E-7	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999997363932579	WITHOUT_CLASSIFICATION	2.636067421794659E-7	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999996988594755	WITHOUT_CLASSIFICATION	3.011405245205879E-7	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999997546479363	WITHOUT_CLASSIFICATION	2.4535206363351085E-7	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999997235563222	WITHOUT_CLASSIFICATION	2.764436778956857E-7	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999996868086607	WITHOUT_CLASSIFICATION	3.131913392463685E-7	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.999999707804452	WITHOUT_CLASSIFICATION	2.9219554795793193E-7	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999996409370553	WITHOUT_CLASSIFICATION	3.5906294464206715E-7	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999997258044583	WITHOUT_CLASSIFICATION	2.741955416709792E-7	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999997270076436	WITHOUT_CLASSIFICATION	2.729923564071827E-7	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999996526489437	WITHOUT_CLASSIFICATION	3.4735105617190196E-7	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999996838112661	WITHOUT_CLASSIFICATION	3.1618873388958734E-7	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999997136096443	WITHOUT_CLASSIFICATION	2.863903556853501E-7	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999996610761968	WITHOUT_CLASSIFICATION	3.389238031910641E-7	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999996563849116	WITHOUT_CLASSIFICATION	3.436150884178667E-7	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999997324834042	WITHOUT_CLASSIFICATION	2.675165957903696E-7	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999996701484655	WITHOUT_CLASSIFICATION	3.2985153460521125E-7	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999996900912724	WITHOUT_CLASSIFICATION	3.099087276293362E-7	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999997049388566	WITHOUT_CLASSIFICATION	2.9506114343678176E-7	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999995888883992	WITHOUT_CLASSIFICATION	4.111116007924203E-7	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999997322970039	WITHOUT_CLASSIFICATION	2.677029961124495E-7	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999997391388187	WITHOUT_CLASSIFICATION	2.6086118127323077E-7	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999997202480962	WITHOUT_CLASSIFICATION	2.797519038136078E-7	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.999999704789815	WITHOUT_CLASSIFICATION	2.9521018496390485E-7	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999997129705417	WITHOUT_CLASSIFICATION	2.8702945836554336E-7	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999996234033945	WITHOUT_CLASSIFICATION	3.765966054533056E-7	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999997313255874	WITHOUT_CLASSIFICATION	2.6867441251549155E-7	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999997092546045	WITHOUT_CLASSIFICATION	2.907453955683725E-7	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999997395198448	WITHOUT_CLASSIFICATION	2.604801551722489E-7	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999997199320485	WITHOUT_CLASSIFICATION	2.800679514911034E-7	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999996673102715	WITHOUT_CLASSIFICATION	3.326897285786603E-7	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999997242219949	WITHOUT_CLASSIFICATION	2.7577800508077027E-7	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.999999697099885	WITHOUT_CLASSIFICATION	3.0290011503203117E-7	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999996994330762	WITHOUT_CLASSIFICATION	3.005669238133706E-7	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999997175004025	WITHOUT_CLASSIFICATION	2.8249959751977215E-7	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999995950809142	WITHOUT_CLASSIFICATION	4.049190858402766E-7	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999997113919548	WITHOUT_CLASSIFICATION	2.886080452889929E-7	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999995550606463	WITHOUT_CLASSIFICATION	4.4493935367854755E-7	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999996275047457	WITHOUT_CLASSIFICATION	3.7249525424856264E-7	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999996926775517	WITHOUT_CLASSIFICATION	3.0732244833521796E-7	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.99999970850887	WITHOUT_CLASSIFICATION	2.914911300668516E-7	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999996909879727	WITHOUT_CLASSIFICATION	3.090120272985922E-7	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999997051574768	WITHOUT_CLASSIFICATION	2.9484252310753237E-7	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999997161896546	WITHOUT_CLASSIFICATION	2.8381034537246864E-7	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999996212621413	WITHOUT_CLASSIFICATION	3.7873785867260973E-7	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999997216558109	WITHOUT_CLASSIFICATION	2.783441890842094E-7	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999996860336401	WITHOUT_CLASSIFICATION	3.1396635991997553E-7	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999996803387997	WITHOUT_CLASSIFICATION	3.196612002632297E-7	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999996488941166	WITHOUT_CLASSIFICATION	3.5110588342978724E-7	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999996340714811	WITHOUT_CLASSIFICATION	3.6592851894985975E-7	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999996432186327	WITHOUT_CLASSIFICATION	3.5678136734395597E-7	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999996064146265	WITHOUT_CLASSIFICATION	3.935853735868611E-7	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999995911260552	WITHOUT_CLASSIFICATION	4.0887394487133765E-7	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999996176989985	WITHOUT_CLASSIFICATION	3.8230100162538963E-7	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999996330902614	WITHOUT_CLASSIFICATION	3.669097386035422E-7	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999995605427248	WITHOUT_CLASSIFICATION	4.3945727530234005E-7	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999997033674293	WITHOUT_CLASSIFICATION	2.966325706554643E-7	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999997102299649	WITHOUT_CLASSIFICATION	2.8977003503079304E-7	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999997425353114	WITHOUT_CLASSIFICATION	2.5746468859847334E-7	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999997068200775	WITHOUT_CLASSIFICATION	2.93179922439375E-7	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999996819539905	WITHOUT_CLASSIFICATION	3.1804600955372576E-7	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999997075119239	WITHOUT_CLASSIFICATION	2.9248807598441894E-7	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999996920822122	WITHOUT_CLASSIFICATION	3.079177878125054E-7	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999995450722189	WITHOUT_CLASSIFICATION	4.549277810361634E-7	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.999999589185762	WITHOUT_CLASSIFICATION	4.1081423787070373E-7	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999996515045189	WITHOUT_CLASSIFICATION	3.4849548116016874E-7	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.999999594605001	WITHOUT_CLASSIFICATION	4.053949989924969E-7	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999996025337974	WITHOUT_CLASSIFICATION	3.974662025920671E-7	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999995029210286	WITHOUT_CLASSIFICATION	4.970789713680297E-7	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999996522314323	WITHOUT_CLASSIFICATION	3.4776856776743767E-7	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999996067465531	WITHOUT_CLASSIFICATION	3.93253446942075E-7	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999996587282195	WITHOUT_CLASSIFICATION	3.4127178055774974E-7	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999996454612123	WITHOUT_CLASSIFICATION	3.54538787740211E-7	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999996160190285	WITHOUT_CLASSIFICATION	3.839809715524511E-7	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999996391810143	WITHOUT_CLASSIFICATION	3.6081898567833834E-7	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999996103755392	WITHOUT_CLASSIFICATION	3.896244608035909E-7	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999996511497702	WITHOUT_CLASSIFICATION	3.488502297173651E-7	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999996501213527	WITHOUT_CLASSIFICATION	3.498786472367191E-7	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999996063358079	WITHOUT_CLASSIFICATION	3.9366419208015923E-7	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999995931836401	WITHOUT_CLASSIFICATION	4.06816359882923E-7	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999996694250185	WITHOUT_CLASSIFICATION	3.3057498148577773E-7	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999997101913254	WITHOUT_CLASSIFICATION	2.8980867452029907E-7	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999997397499134	WITHOUT_CLASSIFICATION	2.6025008656652333E-7	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999996882371689	WITHOUT_CLASSIFICATION	3.117628310582478E-7	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999997092626751	WITHOUT_CLASSIFICATION	2.907373248778397E-7	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999996298181546	WITHOUT_CLASSIFICATION	3.70181845282597E-7	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999996344657742	WITHOUT_CLASSIFICATION	3.6553422583949165E-7	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999996461547668	WITHOUT_CLASSIFICATION	3.5384523325175055E-7	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.999999694858329	WITHOUT_CLASSIFICATION	3.0514167106472286E-7	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999997329138544	WITHOUT_CLASSIFICATION	2.670861455874467E-7	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999997202282728	WITHOUT_CLASSIFICATION	2.797717271961736E-7	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999997298286345	WITHOUT_CLASSIFICATION	2.7017136545752407E-7	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999996819403846	WITHOUT_CLASSIFICATION	3.18059615429817E-7	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999996002235184	WITHOUT_CLASSIFICATION	3.9977648157552727E-7	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999997395069552	WITHOUT_CLASSIFICATION	2.6049304483434387E-7	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999997069365796	WITHOUT_CLASSIFICATION	2.9306342048099906E-7	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999996162506328	WITHOUT_CLASSIFICATION	3.837493671318272E-7	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999996251952986	WITHOUT_CLASSIFICATION	3.748047014818388E-7	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999997080750249	WITHOUT_CLASSIFICATION	2.9192497516229144E-7	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999997456418003	WITHOUT_CLASSIFICATION	2.5435819975286855E-7	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999996677945553	WITHOUT_CLASSIFICATION	3.3220544464680423E-7	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999996628670935	WITHOUT_CLASSIFICATION	3.3713290651409485E-7	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999997382757013	WITHOUT_CLASSIFICATION	2.617242986681826E-7	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999996387171896	WITHOUT_CLASSIFICATION	3.6128281045179905E-7	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999996130163714	WITHOUT_CLASSIFICATION	3.869836286634223E-7	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999997186773435	WITHOUT_CLASSIFICATION	2.8132265651298706E-7	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999997445673867	WITHOUT_CLASSIFICATION	2.5543261318707073E-7	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999997199482159	WITHOUT_CLASSIFICATION	2.8005178411034847E-7	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999997138374552	WITHOUT_CLASSIFICATION	2.8616254475797927E-7	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999997133682293	WITHOUT_CLASSIFICATION	2.8663177073818284E-7	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999997044003238	WITHOUT_CLASSIFICATION	2.955996761926426E-7	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999996819353917	WITHOUT_CLASSIFICATION	3.180646083320368E-7	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999997367884648	WITHOUT_CLASSIFICATION	2.632115352392774E-7	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999997453313383	WITHOUT_CLASSIFICATION	2.546686617299224E-7	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999997055666389	WITHOUT_CLASSIFICATION	2.944333611966095E-7	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999997144516877	WITHOUT_CLASSIFICATION	2.8554831240329216E-7	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999996397441041	WITHOUT_CLASSIFICATION	3.602558959415964E-7	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999996113926501	WITHOUT_CLASSIFICATION	3.8860734982822077E-7	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999997477333592	WITHOUT_CLASSIFICATION	2.522666408193524E-7	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999996989455012	WITHOUT_CLASSIFICATION	3.010544987494921E-7	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999997562098161	WITHOUT_CLASSIFICATION	2.437901839753946E-7	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999997162164562	WITHOUT_CLASSIFICATION	2.837835437887023E-7	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.999999640986067	WITHOUT_CLASSIFICATION	3.590139330378908E-7	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999997375823978	WITHOUT_CLASSIFICATION	2.624176022756013E-7	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999997025543028	WITHOUT_CLASSIFICATION	2.974456971859941E-7	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999997075392987	WITHOUT_CLASSIFICATION	2.9246070133781465E-7	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999997135409096	WITHOUT_CLASSIFICATION	2.8645909038853096E-7	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999997111508218	WITHOUT_CLASSIFICATION	2.888491782101723E-7	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999995987008048	WITHOUT_CLASSIFICATION	4.01299195266766E-7	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999996609087667	WITHOUT_CLASSIFICATION	3.3909123335292536E-7	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999996317069809	WITHOUT_CLASSIFICATION	3.682930191114463E-7	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.999999746009951	WITHOUT_CLASSIFICATION	2.5399004897715995E-7	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999997574795869	WITHOUT_CLASSIFICATION	2.425204130910575E-7	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999997322187542	WITHOUT_CLASSIFICATION	2.677812458325158E-7	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999997046691033	WITHOUT_CLASSIFICATION	2.9533089668789563E-7	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999997451017818	WITHOUT_CLASSIFICATION	2.5489821827849377E-7	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999997426101841	WITHOUT_CLASSIFICATION	2.5738981593689226E-7	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999996993129385	WITHOUT_CLASSIFICATION	3.0068706143105253E-7	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999997356164222	WITHOUT_CLASSIFICATION	2.643835777812635E-7	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999997222951252	WITHOUT_CLASSIFICATION	2.777048747795093E-7	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999996659641315	WITHOUT_CLASSIFICATION	3.3403586852533474E-7	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999997094738405	WITHOUT_CLASSIFICATION	2.9052615948125573E-7	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999996952838967	WITHOUT_CLASSIFICATION	3.047161034317062E-7	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999995341971515	WITHOUT_CLASSIFICATION	4.6580284857952354E-7	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999996979710857	WITHOUT_CLASSIFICATION	3.0202891430846625E-7	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999996592053502	WITHOUT_CLASSIFICATION	3.407946498526939E-7	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999997197428965	WITHOUT_CLASSIFICATION	2.8025710344129514E-7	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999996915163004	WITHOUT_CLASSIFICATION	3.084836995479379E-7	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999996737159481	WITHOUT_CLASSIFICATION	3.2628405193607227E-7	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.999999559132817	WITHOUT_CLASSIFICATION	4.4086718310505623E-7	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999997286354362	WITHOUT_CLASSIFICATION	2.7136456375780687E-7	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.999995817883949	WITHOUT_CLASSIFICATION	4.182116051089805E-6	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.999996132887191	WITHOUT_CLASSIFICATION	3.867112808990878E-6	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999990048086312	WITHOUT_CLASSIFICATION	9.951913687571594E-7	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999974865862874	WITHOUT_CLASSIFICATION	2.5134137126837654E-6	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999410100073765	WITHOUT_CLASSIFICATION	5.8989992623606995E-5	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999779117396662	WITHOUT_CLASSIFICATION	2.208826033376382E-5	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999916719750467	WITHOUT_CLASSIFICATION	8.328024953366736E-6	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999759934620046	WITHOUT_CLASSIFICATION	2.4006537995398766E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999997237855096	WITHOUT_CLASSIFICATION	2.7621449037453054E-7	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999996944917438	WITHOUT_CLASSIFICATION	3.0550825634525165E-7	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.999999704292045	WITHOUT_CLASSIFICATION	2.957079549298666E-7	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999997254793731	WITHOUT_CLASSIFICATION	2.7452062689077573E-7	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999997183228126	WITHOUT_CLASSIFICATION	2.816771874156528E-7	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.999999682692451	WITHOUT_CLASSIFICATION	3.1730754899274445E-7	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999996420720717	WITHOUT_CLASSIFICATION	3.5792792827042414E-7	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999996577953385	WITHOUT_CLASSIFICATION	3.4220466155942715E-7	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999996599774446	WITHOUT_CLASSIFICATION	3.400225554494479E-7	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999996822258881	WITHOUT_CLASSIFICATION	3.1777411187049396E-7	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999996128536178	WITHOUT_CLASSIFICATION	3.8714638213461093E-7	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.999999573749006	WITHOUT_CLASSIFICATION	4.2625099396033355E-7	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999996688172613	WITHOUT_CLASSIFICATION	3.3118273868312785E-7	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999996780544581	WITHOUT_CLASSIFICATION	3.2194554182612533E-7	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999996942441309	WITHOUT_CLASSIFICATION	3.0575586910243604E-7	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999996131880623	WITHOUT_CLASSIFICATION	3.8681193770770237E-7	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999996885048206	WITHOUT_CLASSIFICATION	3.114951794639908E-7	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999996886219669	WITHOUT_CLASSIFICATION	3.1137803312810567E-7	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999996486868601	WITHOUT_CLASSIFICATION	3.513131399366609E-7	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999997049065741	WITHOUT_CLASSIFICATION	2.9509342582570727E-7	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.999999537502237	WITHOUT_CLASSIFICATION	4.6249776291209143E-7	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999995252700478	WITHOUT_CLASSIFICATION	4.7472995215424163E-7	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.999999694525831	WITHOUT_CLASSIFICATION	3.054741689627049E-7	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.999999805959091	WITHOUT_CLASSIFICATION	1.9404090897618503E-7	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999984381808474	WITHOUT_CLASSIFICATION	1.5618191525313525E-6	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999993198675113	WITHOUT_CLASSIFICATION	6.801324885407886E-7	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999980714963694	WITHOUT_CLASSIFICATION	1.9285036305664174E-6	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999428719978	WITHOUT_CLASSIFICATION	5.7128002169931546E-8	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999991724781506	WITHOUT_CLASSIFICATION	8.275218492955954E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999863020516	WITHOUT_CLASSIFICATION	1.3697948444436802E-8	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999991156953347	WITHOUT_CLASSIFICATION	8.843046651449983E-7	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999785005619	WITHOUT_CLASSIFICATION	2.1499438132407628E-8	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999785005619	WITHOUT_CLASSIFICATION	2.1499438132407628E-8	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999929809495457	WITHOUT_CLASSIFICATION	7.019050454202066E-6	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999989914000793	WITHOUT_CLASSIFICATION	1.008599920652013E-6	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999482671624	WITHOUT_CLASSIFICATION	5.1732837535193574E-8	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999995832067395	WITHOUT_CLASSIFICATION	4.167932604003695E-7	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999998359056725	WITHOUT_CLASSIFICATION	1.6409432735231786E-7	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999970224187364	WITHOUT_CLASSIFICATION	2.977581263615077E-6	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999997596437022	WITHOUT_CLASSIFICATION	2.403562977998362E-7	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999999821343581	WITHOUT_CLASSIFICATION	1.7865641877619718E-8	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.999999987692484	WITHOUT_CLASSIFICATION	1.2307516052437839E-8	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999995799977195	WITHOUT_CLASSIFICATION	4.200022805026643E-7	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.999999333495534	WITHOUT_CLASSIFICATION	6.665044659777219E-7	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999990703859041	WITHOUT_CLASSIFICATION	9.296140959348885E-7	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999995127747924	WITHOUT_CLASSIFICATION	4.872252076347093E-7	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999979800517255	WITHOUT_CLASSIFICATION	2.01994827456839E-6	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999999283236813	WITHOUT_CLASSIFICATION	7.167631872160984E-8	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999999283236813	WITHOUT_CLASSIFICATION	7.167631872160984E-8	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999815529056723	WITHOUT_CLASSIFICATION	1.844709432764178E-5	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999999866847297	WITHOUT_CLASSIFICATION	1.331527044453384E-8	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999366086337	WITHOUT_CLASSIFICATION	6.339136628858627E-8	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999995784934119	WITHOUT_CLASSIFICATION	4.2150658807287917E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996469268799	WITHOUT_CLASSIFICATION	3.53073120155177E-7	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998443577959	WITHOUT_CLASSIFICATION	1.5564220421137475E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999999674345831	WITHOUT_CLASSIFICATION	3.2565417026716026E-8	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998443577959	WITHOUT_CLASSIFICATION	1.5564220421137475E-7	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999831607662086	WITHOUT_CLASSIFICATION	1.6839233791407995E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999486341633	WITHOUT_CLASSIFICATION	5.1365836788477525E-8	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999994699061329	WITHOUT_CLASSIFICATION	5.300938672545584E-7	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.999998994071248	WITHOUT_CLASSIFICATION	1.0059287519156932E-6	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999998383282748	WITHOUT_CLASSIFICATION	1.616717251872292E-7	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999996401446392	WITHOUT_CLASSIFICATION	3.5985536087920484E-7	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999998322590241	WITHOUT_CLASSIFICATION	1.6774097583946342E-7	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999984061880826	WITHOUT_CLASSIFICATION	1.593811917551597E-6	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999988934859859	WITHOUT_CLASSIFICATION	1.1065140140660164E-6	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999975042311536	WITHOUT_CLASSIFICATION	2.4957688464635893E-6	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999994642578325	WITHOUT_CLASSIFICATION	5.357421676129161E-7	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999912480630687	WITHOUT_CLASSIFICATION	8.751936931325658E-6	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999851433550486	WITHOUT_CLASSIFICATION	1.4856644951292452E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999971826015996	WITHOUT_CLASSIFICATION	2.817398400428744E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999983253577203	WITHOUT_CLASSIFICATION	1.6746422797860809E-6	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999983253577203	WITHOUT_CLASSIFICATION	1.6746422797860809E-6	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999999788234314	WITHOUT_CLASSIFICATION	2.117656868762946E-8	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999992062321208	WITHOUT_CLASSIFICATION	7.93767879104727E-7	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999999549501795	WITHOUT_CLASSIFICATION	4.5049820586231654E-8	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.999999882984413	WITHOUT_CLASSIFICATION	1.1701558698922781E-7	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999999835011886	WITHOUT_CLASSIFICATION	1.6498811405708433E-8	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999998443577959	WITHOUT_CLASSIFICATION	1.5564220421137475E-7	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.999999987334341	WITHOUT_CLASSIFICATION	1.2665658848506678E-8	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999989774101	WITHOUT_CLASSIFICATION	1.022589883096867E-9	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999966361030154	WITHOUT_CLASSIFICATION	3.363896984668202E-6	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999938424537	WITHOUT_CLASSIFICATION	6.1575462586222285E-9	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999951382146	WITHOUT_CLASSIFICATION	4.861785524424151E-9	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999905480939	WITHOUT_CLASSIFICATION	9.45190623636534E-9	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999998939545107	WITHOUT_CLASSIFICATION	1.0604548927273481E-7	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999988747563936	WITHOUT_CLASSIFICATION	1.1252436063259809E-6	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999999982958112	WITHOUT_CLASSIFICATION	1.704188744754229E-9	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999994570245021	WITHOUT_CLASSIFICATION	5.429754979031054E-7	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999999770151471	WITHOUT_CLASSIFICATION	2.298485287803434E-8	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999855016108	WITHOUT_CLASSIFICATION	1.4498389142467491E-8	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999988901289838	WITHOUT_CLASSIFICATION	1.109871016196773E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999989811385875	WITHOUT_CLASSIFICATION	1.018861412498391E-6	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999998138434907	WITHOUT_CLASSIFICATION	1.861565092907952E-7	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999926495547149	WITHOUT_CLASSIFICATION	7.350445285145073E-6	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999999786371103	WITHOUT_CLASSIFICATION	2.136288972181674E-8	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.9999998355372842	WITHOUT_CLASSIFICATION	1.6446271575936065E-7	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9999992661306493	WITHOUT_CLASSIFICATION	7.338693506864129E-7	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999998107651474	WITHOUT_CLASSIFICATION	1.892348524875315E-7	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.999999637265897	WITHOUT_CLASSIFICATION	3.627341030781046E-7	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999967907669397	WITHOUT_CLASSIFICATION	3.209233060314856E-6	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999998636370357	WITHOUT_CLASSIFICATION	1.3636296417289434E-7	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999998383040841	WITHOUT_CLASSIFICATION	1.6169591596653162E-7	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999999582701655	WITHOUT_CLASSIFICATION	4.172983447838358E-8	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999994364103506	WITHOUT_CLASSIFICATION	5.635896493284268E-7	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999999951022374	WITHOUT_CLASSIFICATION	4.897762721798749E-9	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999999704455727	WITHOUT_CLASSIFICATION	2.9554427320216612E-8	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999801898952445	WITHOUT_CLASSIFICATION	1.981010475538412E-5	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999998833129984	WITHOUT_CLASSIFICATION	1.1668700155539675E-7	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999998551967514	WITHOUT_CLASSIFICATION	1.4480324857917008E-7	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999998096529378	WITHOUT_CLASSIFICATION	1.903470622313274E-7	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999991975952748	WITHOUT_CLASSIFICATION	8.024047251075337E-7	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999999672997987	WITHOUT_CLASSIFICATION	3.270020135999158E-8	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999999448489175	WITHOUT_CLASSIFICATION	5.515108252458306E-8	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999999937865696	WITHOUT_CLASSIFICATION	6.21343043362062E-9	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999999702936745	WITHOUT_CLASSIFICATION	2.9706325484207283E-8	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999999786606837	WITHOUT_CLASSIFICATION	2.133931629547368E-8	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999999421692485	WITHOUT_CLASSIFICATION	5.783075147898712E-8	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999991946336	WITHOUT_CLASSIFICATION	8.053664405444963E-10	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999759934620046	WITHOUT_CLASSIFICATION	2.4006537995398766E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999976586657465	WITHOUT_CLASSIFICATION	2.341334253489448E-5	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999997583547555	WITHOUT_CLASSIFICATION	2.4164524454571225E-7	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999996383622062	WITHOUT_CLASSIFICATION	3.616377937896238E-7	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.99999985117853	WITHOUT_CLASSIFICATION	1.4882147000794005E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999486341633	WITHOUT_CLASSIFICATION	5.1365836788477525E-8	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999999189436284	WITHOUT_CLASSIFICATION	8.105637158610462E-8	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.999999998349046	WITHOUT_CLASSIFICATION	1.650953993048646E-9	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999999488104306	WITHOUT_CLASSIFICATION	5.118956947065871E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999802852799	WITHOUT_CLASSIFICATION	1.9714720003235184E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999802852799	WITHOUT_CLASSIFICATION	1.9714720003235184E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999866503914	WITHOUT_CLASSIFICATION	1.3349608606125625E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999866503914	WITHOUT_CLASSIFICATION	1.3349608606125625E-8	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999866503914	WITHOUT_CLASSIFICATION	1.3349608606125625E-8	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999987043980958	WITHOUT_CLASSIFICATION	1.295601904179693E-6	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999987043980958	WITHOUT_CLASSIFICATION	1.295601904179693E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999959190940915	WITHOUT_CLASSIFICATION	4.080905908566418E-6	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999959190940915	WITHOUT_CLASSIFICATION	4.080905908566418E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999954703808039	WITHOUT_CLASSIFICATION	4.529619196033382E-6	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999998043003526	WITHOUT_CLASSIFICATION	1.9569964742728215E-7	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999997530432503	WITHOUT_CLASSIFICATION	2.4695674976666016E-7	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.9999997530432503	WITHOUT_CLASSIFICATION	2.4695674976666016E-7	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999999782878154	WITHOUT_CLASSIFICATION	2.1712184677011295E-8	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999998658729009	WITHOUT_CLASSIFICATION	1.3412709905873E-7	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999991725169123	WITHOUT_CLASSIFICATION	8.274830876911809E-7	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999229929053	WITHOUT_CLASSIFICATION	7.700709473456903E-8	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.999999846815846	WITHOUT_CLASSIFICATION	1.5318415402226639E-7	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999999866913878	WITHOUT_CLASSIFICATION	1.3308612221392673E-8	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999989809150688	WITHOUT_CLASSIFICATION	1.0190849312683047E-6	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999997308674833	WITHOUT_CLASSIFICATION	2.6913251669349144E-7	TEST
// caller	WITHOUT_CLASSIFICATION	0.9999998885970766	WITHOUT_CLASSIFICATION	1.114029233498469E-7	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999999239031288	WITHOUT_CLASSIFICATION	7.609687133648849E-8	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999999623814321	WITHOUT_CLASSIFICATION	3.761856794251787E-8	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999998501922945	WITHOUT_CLASSIFICATION	1.4980770553519856E-7	TEST
// throw	WITHOUT_CLASSIFICATION	0.9999980121338091	WITHOUT_CLASSIFICATION	1.9878661908600993E-6	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9999998527166808	WITHOUT_CLASSIFICATION	1.4728331930027734E-7	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999999749150007	WITHOUT_CLASSIFICATION	2.50849993601186E-8	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999974411387254	WITHOUT_CLASSIFICATION	2.55886127465864E-6	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999992383858742	WITHOUT_CLASSIFICATION	7.616141257931421E-7	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999994442639123	WITHOUT_CLASSIFICATION	5.557360877495784E-7	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999997508954158	WITHOUT_CLASSIFICATION	2.4910458425795873E-7	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999847201409161	WITHOUT_CLASSIFICATION	1.5279859083877296E-5	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999999976782099	WITHOUT_CLASSIFICATION	2.321790114436198E-8	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999277439298	WITHOUT_CLASSIFICATION	7.225607024192006E-8	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999999377424145	WITHOUT_CLASSIFICATION	6.225758551726147E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999999987565009	WITHOUT_CLASSIFICATION	1.2434990956841677E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999919812124	WITHOUT_CLASSIFICATION	8.018787589918825E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999719152224	WITHOUT_CLASSIFICATION	2.8084777663535162E-8	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999550109371	WITHOUT_CLASSIFICATION	4.498906294366757E-8	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999803716968	WITHOUT_CLASSIFICATION	1.962830309465346E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999879768307	WITHOUT_CLASSIFICATION	1.2023169342027688E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999922467784	WITHOUT_CLASSIFICATION	7.753221649445462E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999728453332	WITHOUT_CLASSIFICATION	2.7154666949806357E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999936432614	WITHOUT_CLASSIFICATION	6.356738469923302E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959008145	WITHOUT_CLASSIFICATION	4.099185566106242E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999889027106	WITHOUT_CLASSIFICATION	1.1097289522140443E-8	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959008145	WITHOUT_CLASSIFICATION	4.099185566106242E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959008145	WITHOUT_CLASSIFICATION	4.099185566106242E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959008145	WITHOUT_CLASSIFICATION	4.099185566106242E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959008145	WITHOUT_CLASSIFICATION	4.099185566106242E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959008145	WITHOUT_CLASSIFICATION	4.099185566106242E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959008145	WITHOUT_CLASSIFICATION	4.099185566106242E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999889027106	WITHOUT_CLASSIFICATION	1.1097289522140443E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999889027106	WITHOUT_CLASSIFICATION	1.1097289522140443E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999889027106	WITHOUT_CLASSIFICATION	1.1097289522140443E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999889027106	WITHOUT_CLASSIFICATION	1.1097289522140443E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999889027106	WITHOUT_CLASSIFICATION	1.1097289522140443E-8	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999889027106	WITHOUT_CLASSIFICATION	1.1097289522140443E-8	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999999434457192	WITHOUT_CLASSIFICATION	5.655428085895241E-8	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999998928979847	WITHOUT_CLASSIFICATION	1.0710201523744118E-7	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999998424726205	WITHOUT_CLASSIFICATION	1.5752737939319725E-7	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999518565182	WITHOUT_CLASSIFICATION	4.814348170098168E-8	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999972023572	WITHOUT_CLASSIFICATION	2.7976427247678397E-9	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999999946896401	WITHOUT_CLASSIFICATION	5.3103599006418126E-8	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999999744906577	WITHOUT_CLASSIFICATION	2.550934240047482E-8	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999974975847	WITHOUT_CLASSIFICATION	2.502415229194475E-9	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999999907811581	WITHOUT_CLASSIFICATION	9.218842038947684E-9	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999994666397075	WITHOUT_CLASSIFICATION	5.333602925166301E-7	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999804535075367	WITHOUT_CLASSIFICATION	1.9546492463355972E-5	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999919797374	WITHOUT_CLASSIFICATION	8.020262665733293E-9	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999994152954572	WITHOUT_CLASSIFICATION	5.847045428887952E-7	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999856379368	WITHOUT_CLASSIFICATION	1.4362063366923364E-8	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999999319979707	WITHOUT_CLASSIFICATION	6.800202933055613E-8	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999958045889551	WITHOUT_CLASSIFICATION	4.1954110449703545E-6	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999995358383335	WITHOUT_CLASSIFICATION	4.6416166660044694E-7	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999999801015781	WITHOUT_CLASSIFICATION	1.989842192405491E-8	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999999861617772	WITHOUT_CLASSIFICATION	1.3838222801557485E-8	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999968520643	WITHOUT_CLASSIFICATION	3.1479356411640315E-9	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.999999726407548	WITHOUT_CLASSIFICATION	2.735924519339002E-7	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999998688388106	WITHOUT_CLASSIFICATION	1.3116118938971387E-7	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999999674345831	WITHOUT_CLASSIFICATION	3.2565417026716026E-8	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999985903618687	WITHOUT_CLASSIFICATION	1.4096381312828914E-6	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999971528782519	WITHOUT_CLASSIFICATION	2.8471217480206946E-6	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999871945532	WITHOUT_CLASSIFICATION	1.2805446876599136E-8	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999645824705	WITHOUT_CLASSIFICATION	3.5417529468629824E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999999888330352	WITHOUT_CLASSIFICATION	1.1166964789657463E-7	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999995923344548	WITHOUT_CLASSIFICATION	4.0766554527815396E-7	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999999749122236	WITHOUT_CLASSIFICATION	2.5087776412658253E-8	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999999410277219	WITHOUT_CLASSIFICATION	5.8972278132486617E-8	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999903655679	WITHOUT_CLASSIFICATION	9.634432051713723E-9	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999927020452	WITHOUT_CLASSIFICATION	7.297954774209367E-9	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.999999971627557	WITHOUT_CLASSIFICATION	2.8372442935623597E-8	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999999830209771	WITHOUT_CLASSIFICATION	1.697902283090241E-8	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999999278512846	WITHOUT_CLASSIFICATION	7.214871550056949E-8	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999999792666843	WITHOUT_CLASSIFICATION	2.0733315762411522E-8	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999998753044861	WITHOUT_CLASSIFICATION	1.246955139350889E-7	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999998956876	WITHOUT_CLASSIFICATION	1.0431239931890407E-10	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999958811977	WITHOUT_CLASSIFICATION	4.1188023837062925E-9	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999997722405128	WITHOUT_CLASSIFICATION	2.2775948713232342E-7	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999998202591993	WITHOUT_CLASSIFICATION	1.7974080074935463E-7	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999995758749186	WITHOUT_CLASSIFICATION	4.241250813440334E-7	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999985741921175	WITHOUT_CLASSIFICATION	1.4258078824278308E-6	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999985741921175	WITHOUT_CLASSIFICATION	1.4258078824278308E-6	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999996725211561	WITHOUT_CLASSIFICATION	3.274788439483981E-7	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999996725211561	WITHOUT_CLASSIFICATION	3.274788439483981E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999998025327909	WITHOUT_CLASSIFICATION	1.974672091004769E-7	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999998025327909	WITHOUT_CLASSIFICATION	1.974672091004769E-7	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999999140017417	WITHOUT_CLASSIFICATION	8.599825825875791E-8	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999999941425692	WITHOUT_CLASSIFICATION	5.857430723511892E-9	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999997864778588	WITHOUT_CLASSIFICATION	2.1352214131611996E-7	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999999810129653	WITHOUT_CLASSIFICATION	1.8987034683307865E-8	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.999999980552094	WITHOUT_CLASSIFICATION	1.9447906022656374E-8	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999976975853674	WITHOUT_CLASSIFICATION	2.3024146325363128E-6	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999996845442756	WITHOUT_CLASSIFICATION	3.154557243154733E-7	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999957638938	WITHOUT_CLASSIFICATION	4.2361061706513024E-9	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999129713644	WITHOUT_CLASSIFICATION	8.702863566997943E-8	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999163809234	WITHOUT_CLASSIFICATION	8.361907656725791E-8	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999986692456195	WITHOUT_CLASSIFICATION	1.3307543805200235E-6	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999995950941241	WITHOUT_CLASSIFICATION	4.0490587594361944E-7	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999878111943	WITHOUT_CLASSIFICATION	1.2188805708855806E-8	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999999983181731	WITHOUT_CLASSIFICATION	1.6818268871656315E-9	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999989665407075	WITHOUT_CLASSIFICATION	1.0334592925504861E-6	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999993209250054	WITHOUT_CLASSIFICATION	6.790749945866991E-7	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999999992095281	WITHOUT_CLASSIFICATION	7.904719056367452E-10	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999997327287992	WITHOUT_CLASSIFICATION	2.6727120080246053E-7	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999999335434344	WITHOUT_CLASSIFICATION	6.645656555072902E-8	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999989416445821	WITHOUT_CLASSIFICATION	1.0583554177908838E-6	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999993630556873	WITHOUT_CLASSIFICATION	6.369443127682428E-7	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999996224138814	WITHOUT_CLASSIFICATION	3.7758611859633055E-7	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999992015153086	WITHOUT_CLASSIFICATION	7.984846913995389E-7	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999926888057	WITHOUT_CLASSIFICATION	7.311194402382097E-9	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999997276674065	WITHOUT_CLASSIFICATION	2.723325934638662E-7	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.999999992990734	WITHOUT_CLASSIFICATION	7.009266006161089E-9	TEST
// sic	WITHOUT_CLASSIFICATION	0.9999991488219718	WITHOUT_CLASSIFICATION	8.511780281789881E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999905228953	WITHOUT_CLASSIFICATION	9.477104691415101E-8	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999905228953	WITHOUT_CLASSIFICATION	9.477104691415101E-8	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999905228953	WITHOUT_CLASSIFICATION	9.477104691415101E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999989808197	WITHOUT_CLASSIFICATION	1.0191803254258079E-9	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999989808197	WITHOUT_CLASSIFICATION	1.0191803254258079E-9	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999989811385875	WITHOUT_CLASSIFICATION	1.018861412498391E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999989811385875	WITHOUT_CLASSIFICATION	1.018861412498391E-6	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999756014607	WITHOUT_CLASSIFICATION	2.4398539178712405E-8	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999966993363608	WITHOUT_CLASSIFICATION	3.300663639220483E-6	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999997736568745	WITHOUT_CLASSIFICATION	2.2634312560240042E-7	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999997405601034	WITHOUT_CLASSIFICATION	2.5943989661157853E-7	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999905228953	WITHOUT_CLASSIFICATION	9.477104691415101E-8	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999905228953	WITHOUT_CLASSIFICATION	9.477104691415101E-8	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.999999905228953	WITHOUT_CLASSIFICATION	9.477104691415101E-8	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999989808197	WITHOUT_CLASSIFICATION	1.0191803254258079E-9	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999989808197	WITHOUT_CLASSIFICATION	1.0191803254258079E-9	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999999989808197	WITHOUT_CLASSIFICATION	1.0191803254258079E-9	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999989811385875	WITHOUT_CLASSIFICATION	1.018861412498391E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999989811385875	WITHOUT_CLASSIFICATION	1.018861412498391E-6	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.999999835859747	WITHOUT_CLASSIFICATION	1.6414025298283673E-7	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999419908631	WITHOUT_CLASSIFICATION	5.8009136973295964E-8	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999996514857065	WITHOUT_CLASSIFICATION	3.485142935283096E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999996514857065	WITHOUT_CLASSIFICATION	3.485142935283096E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999996514857065	WITHOUT_CLASSIFICATION	3.485142935283096E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999996514857065	WITHOUT_CLASSIFICATION	3.485142935283096E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999996514857065	WITHOUT_CLASSIFICATION	3.485142935283096E-7	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999999525989377	WITHOUT_CLASSIFICATION	4.740106217753504E-8	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999996194061088	WITHOUT_CLASSIFICATION	3.805938912306107E-7	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999996022586851	WITHOUT_CLASSIFICATION	3.977413148809217E-7	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999983296300189	WITHOUT_CLASSIFICATION	1.6703699810995456E-6	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999995983220222	WITHOUT_CLASSIFICATION	4.0167797764898124E-7	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999947072466324	WITHOUT_CLASSIFICATION	5.2927533675626115E-6	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999946363421305	WITHOUT_CLASSIFICATION	5.363657869548407E-6	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999999626520186	WITHOUT_CLASSIFICATION	3.734798144079914E-8	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.999999928000638	WITHOUT_CLASSIFICATION	7.199936196824745E-8	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999978026748344	WITHOUT_CLASSIFICATION	2.1973251657192206E-6	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999991167352749	WITHOUT_CLASSIFICATION	8.832647250476744E-7	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999986062742672	WITHOUT_CLASSIFICATION	1.3937257327767735E-6	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999972757004798	WITHOUT_CLASSIFICATION	2.7242995202146494E-6	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999999311103859	WITHOUT_CLASSIFICATION	6.888961411312819E-8	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999989399092968	WITHOUT_CLASSIFICATION	1.0600907032723057E-6	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999885797337424	WITHOUT_CLASSIFICATION	1.142026625760466E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999885797337424	WITHOUT_CLASSIFICATION	1.142026625760466E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999885797337424	WITHOUT_CLASSIFICATION	1.142026625760466E-5	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9998896717131274	WITHOUT_CLASSIFICATION	1.1032828687270406E-4	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9998896933750056	WITHOUT_CLASSIFICATION	1.1030662499436273E-4	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999997323901706	WITHOUT_CLASSIFICATION	2.6760982943827715E-7	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999974758507	WITHOUT_CLASSIFICATION	2.524149397439616E-9	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999223799426	WITHOUT_CLASSIFICATION	7.762005738391836E-8	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999998783105113	WITHOUT_CLASSIFICATION	1.2168948870158487E-7	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999998119566714	WITHOUT_CLASSIFICATION	1.8804332862568557E-7	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999997738737908	WITHOUT_CLASSIFICATION	2.2612620920866367E-7	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.999999060397613	WITHOUT_CLASSIFICATION	9.396023871315134E-7	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999564229232	WITHOUT_CLASSIFICATION	4.357707688270746E-8	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.999999904600051	WITHOUT_CLASSIFICATION	9.53999490270292E-8	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999999369478529	WITHOUT_CLASSIFICATION	6.30521469753584E-8	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999999146549543	WITHOUT_CLASSIFICATION	8.534504573499326E-8	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999998924387933	WITHOUT_CLASSIFICATION	1.0756120669841903E-7	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999999160271397	WITHOUT_CLASSIFICATION	8.397286030880523E-8	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999999047089191	WITHOUT_CLASSIFICATION	9.529108093481702E-8	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999999015599204	WITHOUT_CLASSIFICATION	9.844007955713254E-8	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999999073283267	WITHOUT_CLASSIFICATION	9.267167331721527E-8	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999999063789687	WITHOUT_CLASSIFICATION	9.362103115021355E-8	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999997263347777	WITHOUT_CLASSIFICATION	2.73665222305468E-7	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999998741080204	WITHOUT_CLASSIFICATION	1.2589197955481953E-7	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.999999896157542	WITHOUT_CLASSIFICATION	1.0384245798751234E-7	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999999425533177	WITHOUT_CLASSIFICATION	5.74466823039728E-8	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.999999867204383	WITHOUT_CLASSIFICATION	1.3279561706599203E-7	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999998129544645	WITHOUT_CLASSIFICATION	1.870455356170384E-7	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.9999998489651579	WITHOUT_CLASSIFICATION	1.5103484198493828E-7	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999998917611403	WITHOUT_CLASSIFICATION	1.082388595426587E-7	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999998307196684	WITHOUT_CLASSIFICATION	1.6928033160512103E-7	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999992872724265	WITHOUT_CLASSIFICATION	7.127275734367841E-7	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9999899251224738	WITHOUT_CLASSIFICATION	1.0074877526221976E-5	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9999881024409566	WITHOUT_CLASSIFICATION	1.1897559043339536E-5	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.999974598823248	WITHOUT_CLASSIFICATION	2.5401176752037417E-5	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.999989885389867	WITHOUT_CLASSIFICATION	1.0114610133139743E-5	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9999883822137701	WITHOUT_CLASSIFICATION	1.1617786230019158E-5	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.999989777624652	WITHOUT_CLASSIFICATION	1.022237534800853E-5	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.9999898740875381	WITHOUT_CLASSIFICATION	1.0125912461743406E-5	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999999106704535	WITHOUT_CLASSIFICATION	8.932954655960292E-8	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.999999977690472	WITHOUT_CLASSIFICATION	2.2309527958531984E-8	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999973027027237	WITHOUT_CLASSIFICATION	2.6972972763709236E-6	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.559051406480867	WITHOUT_CLASSIFICATION	0.4409485935191328	TEST
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999911217912064	WITHOUT_CLASSIFICATION	8.878208793690168E-6	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999999864703373	WITHOUT_CLASSIFICATION	1.3529662680000451E-8	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999987239935926	WITHOUT_CLASSIFICATION	1.2760064073697676E-6	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.999999970879976	WITHOUT_CLASSIFICATION	2.9120023916046862E-8	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999361058538127	WITHOUT_CLASSIFICATION	6.389414618734349E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.999996731404707	WITHOUT_CLASSIFICATION	3.268595292894003E-6	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.999831883190891	WITHOUT_CLASSIFICATION	1.681168091090265E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.999831883190891	WITHOUT_CLASSIFICATION	1.681168091090265E-4	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999923504236188	WITHOUT_CLASSIFICATION	7.649576381146047E-6	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999999925291763	WITHOUT_CLASSIFICATION	7.470823814391409E-9	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999986623103005	WITHOUT_CLASSIFICATION	1.3376896993940416E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9959506907140429	WITHOUT_CLASSIFICATION	0.004049309285957133	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999829597228056	WITHOUT_CLASSIFICATION	1.7040277194315952E-5	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.999999490749714	WITHOUT_CLASSIFICATION	5.092502861141969E-7	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999998833568925	WITHOUT_CLASSIFICATION	1.1664310750626442E-7	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999689622683	WITHOUT_CLASSIFICATION	3.1037731706450525E-8	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999999705410043	WITHOUT_CLASSIFICATION	2.9458995662028945E-8	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999999846191704	WITHOUT_CLASSIFICATION	1.5380829642655202E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999889949462	WITHOUT_CLASSIFICATION	1.1005053750261804E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999889949462	WITHOUT_CLASSIFICATION	1.1005053750261804E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999889949462	WITHOUT_CLASSIFICATION	1.1005053750261804E-8	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999889949462	WITHOUT_CLASSIFICATION	1.1005053750261804E-8	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999994330766118	WITHOUT_CLASSIFICATION	5.66923388245424E-7	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999995763894766	WITHOUT_CLASSIFICATION	4.236105234967981E-7	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999998736592444	WITHOUT_CLASSIFICATION	1.2634075561850758E-7	TEST
// neither	WITHOUT_CLASSIFICATION	0.9999993995026206	WITHOUT_CLASSIFICATION	6.00497379445902E-7	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999968419574555	WITHOUT_CLASSIFICATION	3.158042544435164E-6	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999999397888992	WITHOUT_CLASSIFICATION	6.021110071420794E-8	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999998379681139	WITHOUT_CLASSIFICATION	1.6203188615547635E-7	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999999751817646	WITHOUT_CLASSIFICATION	2.481823531616728E-8	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999999751817646	WITHOUT_CLASSIFICATION	2.481823531616728E-8	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999597460764	WITHOUT_CLASSIFICATION	4.025392353751399E-8	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999998837202833	WITHOUT_CLASSIFICATION	1.1627971683423827E-7	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999528533884401	WITHOUT_CLASSIFICATION	4.714661155990728E-5	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999986233272	WITHOUT_CLASSIFICATION	1.3766727052793738E-9	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999986233272	WITHOUT_CLASSIFICATION	1.3766727052793738E-9	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999923966896	WITHOUT_CLASSIFICATION	7.603310388725229E-9	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999964991626317	WITHOUT_CLASSIFICATION	3.500837368199764E-6	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999964991626317	WITHOUT_CLASSIFICATION	3.500837368199764E-6	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999906909452855	WITHOUT_CLASSIFICATION	9.30905471454031E-6	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999978813093537	WITHOUT_CLASSIFICATION	2.1186906462921284E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999896135022	WITHOUT_CLASSIFICATION	1.038649787482951E-8	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.999992390341044	WITHOUT_CLASSIFICATION	7.609658955899575E-6	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999973614488581	WITHOUT_CLASSIFICATION	2.638551141933233E-6	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999918616492	WITHOUT_CLASSIFICATION	8.138350677673415E-9	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999963613245979	WITHOUT_CLASSIFICATION	3.638675402148226E-6	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9999975735190244	WITHOUT_CLASSIFICATION	2.426480975536628E-6	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999770240918	WITHOUT_CLASSIFICATION	2.2975908114152414E-8	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999997995871567	WITHOUT_CLASSIFICATION	2.0041284327579953E-7	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999978305012819	WITHOUT_CLASSIFICATION	2.1694987180210017E-6	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999999371883961	WITHOUT_CLASSIFICATION	6.28116039547853E-8	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.991796962770286	WITHOUT_CLASSIFICATION	0.008203037229714015	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9884717421956918	WITHOUT_CLASSIFICATION	0.01152825780430816	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999999494107354	WITHOUT_CLASSIFICATION	5.0589264549434084E-8	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999999724400468	WITHOUT_CLASSIFICATION	2.7559953259529825E-8	TEST
// Args	WITHOUT_CLASSIFICATION	0.9999992930109491	WITHOUT_CLASSIFICATION	7.069890508714777E-7	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999999569402983	WITHOUT_CLASSIFICATION	4.305970158654276E-8	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999994996028861	WITHOUT_CLASSIFICATION	5.00397113778434E-7	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999996936037732	WITHOUT_CLASSIFICATION	3.063962268016327E-7	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999990554613958	WITHOUT_CLASSIFICATION	9.445386042277755E-7	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999999154626475	WITHOUT_CLASSIFICATION	8.453735238296145E-8	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999998621916464	WITHOUT_CLASSIFICATION	1.378083536714244E-7	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999268433953892	WITHOUT_CLASSIFICATION	7.315660461084016E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999991975211696	WITHOUT_CLASSIFICATION	8.02478830401123E-6	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999866245484216	WITHOUT_CLASSIFICATION	1.337545157833729E-5	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999999398485109	WITHOUT_CLASSIFICATION	6.015148916797129E-8	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999976538419848	WITHOUT_CLASSIFICATION	2.3461580151928545E-6	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999989300739	WITHOUT_CLASSIFICATION	1.069926074155156E-9	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999994602072199	WITHOUT_CLASSIFICATION	5.397927801876691E-7	TEST
// ..	WITHOUT_CLASSIFICATION	0.9999976166067828	WITHOUT_CLASSIFICATION	2.3833932171891575E-6	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999993793094039	WITHOUT_CLASSIFICATION	6.20690596087663E-7	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9993784829011797	WITHOUT_CLASSIFICATION	6.215170988202141E-4	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999989637712757	WITHOUT_CLASSIFICATION	1.0362287242622132E-6	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999999806388005	WITHOUT_CLASSIFICATION	1.93611995803392E-8	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999983942144793	WITHOUT_CLASSIFICATION	1.6057855207469974E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999982340476501	WITHOUT_CLASSIFICATION	1.7659523499236847E-6	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999995074469	WITHOUT_CLASSIFICATION	4.925530999192465E-7	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999966023752079	WITHOUT_CLASSIFICATION	3.3976247920260005E-6	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999983942144793	WITHOUT_CLASSIFICATION	1.6057855207469974E-6	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999982340476501	WITHOUT_CLASSIFICATION	1.7659523499236847E-6	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999998717267738	WITHOUT_CLASSIFICATION	1.2827322615076697E-7	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.999997398649446	WITHOUT_CLASSIFICATION	2.6013505540019064E-6	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.999997398649446	WITHOUT_CLASSIFICATION	2.6013505540019064E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999992242701143	WITHOUT_CLASSIFICATION	7.757298857223168E-7	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999998658644225	WITHOUT_CLASSIFICATION	1.3413557753036333E-7	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999995411601802	WITHOUT_CLASSIFICATION	4.5883981975220923E-7	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999997190817425	WITHOUT_CLASSIFICATION	2.8091825748346055E-7	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999962455551054	WITHOUT_CLASSIFICATION	3.754444894502762E-6	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999846941169231	WITHOUT_CLASSIFICATION	1.5305883076802526E-5	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999978260604442	WITHOUT_CLASSIFICATION	2.173939555818143E-6	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999998483510394	WITHOUT_CLASSIFICATION	1.516489606513795E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998258785839	WITHOUT_CLASSIFICATION	1.7412141617237372E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999963943726479	WITHOUT_CLASSIFICATION	3.605627352207944E-6	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999999405682838	WITHOUT_CLASSIFICATION	5.9431716181062776E-8	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999994584425158	WITHOUT_CLASSIFICATION	5.415574841741216E-7	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999984928908395	WITHOUT_CLASSIFICATION	1.5071091604564732E-6	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999278407519	WITHOUT_CLASSIFICATION	7.215924813534322E-8	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999278407519	WITHOUT_CLASSIFICATION	7.215924813534322E-8	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999943217582056	WITHOUT_CLASSIFICATION	5.678241794387258E-6	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999943217582056	WITHOUT_CLASSIFICATION	5.678241794387258E-6	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999996254319024	WITHOUT_CLASSIFICATION	3.745680977357446E-7	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999999473566265	WITHOUT_CLASSIFICATION	5.264337344997512E-8	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.999999827737947	WITHOUT_CLASSIFICATION	1.7226205292088801E-7	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999996516701045	WITHOUT_CLASSIFICATION	3.483298955377992E-7	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999838153622981	WITHOUT_CLASSIFICATION	1.6184637701903368E-5	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999973429188774	WITHOUT_CLASSIFICATION	2.6570811225119995E-6	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999995411601802	WITHOUT_CLASSIFICATION	4.5883981975220923E-7	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999997190817425	WITHOUT_CLASSIFICATION	2.8091825748346055E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998258785839	WITHOUT_CLASSIFICATION	1.7412141617237372E-7	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9999963943726479	WITHOUT_CLASSIFICATION	3.605627352207944E-6	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999999309964742	WITHOUT_CLASSIFICATION	6.900352576944028E-8	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999997654776825	WITHOUT_CLASSIFICATION	2.3452231750475927E-7	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999967484863429	WITHOUT_CLASSIFICATION	3.2515136571288075E-6	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999996235952571	WITHOUT_CLASSIFICATION	3.7640474291902646E-7	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999998808970227	WITHOUT_CLASSIFICATION	1.1910297725884422E-7	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999996890958458	WITHOUT_CLASSIFICATION	3.1090415428297686E-7	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.999999275863966	WITHOUT_CLASSIFICATION	7.241360339213707E-7	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999961994033986	WITHOUT_CLASSIFICATION	3.8005966014658274E-6	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999977294658864	WITHOUT_CLASSIFICATION	2.2705341136406704E-6	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999996253167293	WITHOUT_CLASSIFICATION	3.746832707320258E-7	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999756582677	WITHOUT_CLASSIFICATION	2.4341732241249715E-8	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.999931590931263	WITHOUT_CLASSIFICATION	6.840906873696729E-5	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999998783014995	WITHOUT_CLASSIFICATION	1.2169850042180612E-7	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999985534011542	WITHOUT_CLASSIFICATION	1.4465988457671607E-6	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999995359357682	WITHOUT_CLASSIFICATION	4.640642318705721E-7	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999990601703932	WITHOUT_CLASSIFICATION	9.398296067153232E-7	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999998691753166	WITHOUT_CLASSIFICATION	1.308246834800262E-7	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999986260231577	WITHOUT_CLASSIFICATION	1.3739768423336918E-6	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999997346855775	WITHOUT_CLASSIFICATION	2.6531442253397527E-7	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999989159692692	WITHOUT_CLASSIFICATION	1.0840307308280842E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999989935200784	WITHOUT_CLASSIFICATION	1.0064799216673183E-6	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999989935200784	WITHOUT_CLASSIFICATION	1.0064799216673183E-6	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.99999917690489	WITHOUT_CLASSIFICATION	8.23095109815171E-7	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999933275623073	WITHOUT_CLASSIFICATION	6.672437692705541E-6	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999991813640663	WITHOUT_CLASSIFICATION	8.186359338450303E-7	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999990794204016	WITHOUT_CLASSIFICATION	9.205795983613955E-7	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999990794204016	WITHOUT_CLASSIFICATION	9.205795983613955E-7	TEST
// \v	WITHOUT_CLASSIFICATION	0.9999967484863429	WITHOUT_CLASSIFICATION	3.2515136571288075E-6	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999954774254862	WITHOUT_CLASSIFICATION	4.5225745137547765E-6	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999983221905454	WITHOUT_CLASSIFICATION	1.677809454625799E-6	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.999998425678313	WITHOUT_CLASSIFICATION	1.5743216868981751E-6	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999989362039308	WITHOUT_CLASSIFICATION	1.0637960692363928E-6	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999993785693296	WITHOUT_CLASSIFICATION	6.214306703888663E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999809119842281	WITHOUT_CLASSIFICATION	1.9088015771907913E-5	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999983272338929	WITHOUT_CLASSIFICATION	1.672766107113854E-6	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999998353750557	WITHOUT_CLASSIFICATION	1.6462494434729684E-7	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999997414581104	WITHOUT_CLASSIFICATION	2.5854188957669005E-7	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999939871796811	WITHOUT_CLASSIFICATION	6.012820318841557E-6	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999994672277481	WITHOUT_CLASSIFICATION	5.327722518449339E-7	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999999568602643	WITHOUT_CLASSIFICATION	4.313973560942175E-8	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.999999979331398	WITHOUT_CLASSIFICATION	2.0668602030996562E-8	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999999201434014	WITHOUT_CLASSIFICATION	7.985659853565607E-8	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999999227291896	WITHOUT_CLASSIFICATION	7.727081040719603E-8	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999999554151121	WITHOUT_CLASSIFICATION	4.4584887873893406E-8	TEST
// states	WITHOUT_CLASSIFICATION	0.9999937618125424	WITHOUT_CLASSIFICATION	6.238187457589304E-6	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999997048801199	WITHOUT_CLASSIFICATION	2.951198800882079E-7	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999666557654	WITHOUT_CLASSIFICATION	3.3344234544109903E-8	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999923496257	WITHOUT_CLASSIFICATION	7.650374454546529E-9	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.999999247597712	WITHOUT_CLASSIFICATION	7.524022880516003E-7	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999998347875365	WITHOUT_CLASSIFICATION	1.6521246344151216E-7	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999990497225867	WITHOUT_CLASSIFICATION	9.50277413213816E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999951713521	WITHOUT_CLASSIFICATION	4.828647968471317E-9	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999993577843763	WITHOUT_CLASSIFICATION	6.42215623784637E-7	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999960690901	WITHOUT_CLASSIFICATION	3.930909949129782E-9	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999995954594662	WITHOUT_CLASSIFICATION	4.045405338043978E-7	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999991387211	WITHOUT_CLASSIFICATION	8.612790545605598E-10	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999998558223847	WITHOUT_CLASSIFICATION	1.4417761526715545E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999770662094	WITHOUT_CLASSIFICATION	2.293379056232133E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999770662094	WITHOUT_CLASSIFICATION	2.293379056232133E-8	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999999061688589	WITHOUT_CLASSIFICATION	9.3831141017662E-8	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999999115271526	WITHOUT_CLASSIFICATION	8.84728474386686E-8	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999999115271526	WITHOUT_CLASSIFICATION	8.84728474386686E-8	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999931825542	WITHOUT_CLASSIFICATION	6.817445837506778E-9	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999931825542	WITHOUT_CLASSIFICATION	6.817445837506778E-9	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999995116463638	WITHOUT_CLASSIFICATION	4.883536362017092E-7	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999858054308	WITHOUT_CLASSIFICATION	1.419456933031915E-8	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999984875736	WITHOUT_CLASSIFICATION	1.5124263510432108E-9	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999990803215032	WITHOUT_CLASSIFICATION	9.196784967506561E-7	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999874892561	WITHOUT_CLASSIFICATION	1.251074394709244E-8	TEST
// block	WITHOUT_CLASSIFICATION	0.9999994210886347	WITHOUT_CLASSIFICATION	5.789113653044282E-7	TEST
// block	WITHOUT_CLASSIFICATION	0.9999994210886347	WITHOUT_CLASSIFICATION	5.789113653044282E-7	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999951713521	WITHOUT_CLASSIFICATION	4.828647968471317E-9	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999951713521	WITHOUT_CLASSIFICATION	4.828647968471317E-9	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999951713521	WITHOUT_CLASSIFICATION	4.828647968471317E-9	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999993577843763	WITHOUT_CLASSIFICATION	6.42215623784637E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999770662094	WITHOUT_CLASSIFICATION	2.293379056232133E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999770662094	WITHOUT_CLASSIFICATION	2.293379056232133E-8	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999770662094	WITHOUT_CLASSIFICATION	2.293379056232133E-8	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999995116463638	WITHOUT_CLASSIFICATION	4.883536362017092E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999995116463638	WITHOUT_CLASSIFICATION	4.883536362017092E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999995116463638	WITHOUT_CLASSIFICATION	4.883536362017092E-7	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999990803215032	WITHOUT_CLASSIFICATION	9.196784967506561E-7	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999990803215032	WITHOUT_CLASSIFICATION	9.196784967506561E-7	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999999887959852	WITHOUT_CLASSIFICATION	1.1204014821463332E-8	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999998528445309	WITHOUT_CLASSIFICATION	1.4715546913800242E-7	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999997457086159	WITHOUT_CLASSIFICATION	2.5429138411354035E-7	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9998758988354014	WITHOUT_CLASSIFICATION	1.2410116459858958E-4	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.9999999825604028	WITHOUT_CLASSIFICATION	1.7439597272058856E-8	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999999106615365	WITHOUT_CLASSIFICATION	8.933846352239746E-8	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999999106615365	WITHOUT_CLASSIFICATION	8.933846352239746E-8	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999447663092	WITHOUT_CLASSIFICATION	5.523369076992172E-8	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999809119842281	WITHOUT_CLASSIFICATION	1.9088015771907913E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999809119842281	WITHOUT_CLASSIFICATION	1.9088015771907913E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999809119842281	WITHOUT_CLASSIFICATION	1.9088015771907913E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999809119842281	WITHOUT_CLASSIFICATION	1.9088015771907913E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999809119842281	WITHOUT_CLASSIFICATION	1.9088015771907913E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998097387949	WITHOUT_CLASSIFICATION	1.9026120512448734E-7	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998097387949	WITHOUT_CLASSIFICATION	1.9026120512448734E-7	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998097387949	WITHOUT_CLASSIFICATION	1.9026120512448734E-7	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999823684582	WITHOUT_CLASSIFICATION	1.763154178340611E-8	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999997986726125	WITHOUT_CLASSIFICATION	2.0132738757367057E-7	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999993577843763	WITHOUT_CLASSIFICATION	6.42215623784637E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999995116463638	WITHOUT_CLASSIFICATION	4.883536362017092E-7	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999995116463638	WITHOUT_CLASSIFICATION	4.883536362017092E-7	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999809119842281	WITHOUT_CLASSIFICATION	1.9088015771907913E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999809119842281	WITHOUT_CLASSIFICATION	1.9088015771907913E-5	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999998097387949	WITHOUT_CLASSIFICATION	1.9026120512448734E-7	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999447663092	WITHOUT_CLASSIFICATION	5.523369076992172E-8	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999991647322424	WITHOUT_CLASSIFICATION	8.35267757518398E-7	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999993829595242	WITHOUT_CLASSIFICATION	6.170404757942643E-7	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999999704757311	WITHOUT_CLASSIFICATION	2.952426889812636E-8	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999999624857973	WITHOUT_CLASSIFICATION	3.751420269135799E-8	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999998804198895	WITHOUT_CLASSIFICATION	1.195801105759117E-7	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999999031047403	WITHOUT_CLASSIFICATION	9.68952596967147E-8	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999881919771981	WITHOUT_CLASSIFICATION	1.1808022801952739E-5	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999998870260968	WITHOUT_CLASSIFICATION	1.1297390317814001E-7	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999999835534037	WITHOUT_CLASSIFICATION	1.6446596257803066E-8	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999998905116423	WITHOUT_CLASSIFICATION	1.0948835770454171E-7	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999998867363937	WITHOUT_CLASSIFICATION	1.1326360623545242E-7	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999995684084951	WITHOUT_CLASSIFICATION	4.3159150489352655E-7	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999996525776725	WITHOUT_CLASSIFICATION	3.47422327477072E-7	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999922307107694	WITHOUT_CLASSIFICATION	7.769289230709718E-6	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.99999813481873	WITHOUT_CLASSIFICATION	1.8651812699832406E-6	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999999792024724	WITHOUT_CLASSIFICATION	2.0797527566867532E-8	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999999984191706	WITHOUT_CLASSIFICATION	1.5808293633671988E-9	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999864552037652	WITHOUT_CLASSIFICATION	1.3544796234808936E-5	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999913151678917	WITHOUT_CLASSIFICATION	8.684832108194316E-6	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999961123742	WITHOUT_CLASSIFICATION	3.887625675007588E-9	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999995912588946	WITHOUT_CLASSIFICATION	4.087411055112091E-7	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999143124767	WITHOUT_CLASSIFICATION	8.568752323452966E-8	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999264624908	WITHOUT_CLASSIFICATION	7.35375091591019E-8	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999999973760899	WITHOUT_CLASSIFICATION	2.62391009316206E-9	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999998270380555	WITHOUT_CLASSIFICATION	1.7296194464477653E-7	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999972630413047	WITHOUT_CLASSIFICATION	2.7369586953887652E-6	TEST
// unread back	WITHOUT_CLASSIFICATION	0.9999999067607429	WITHOUT_CLASSIFICATION	9.323925708714244E-8	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999621235742	WITHOUT_CLASSIFICATION	3.787642584175499E-8	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999999656398293	WITHOUT_CLASSIFICATION	3.4360170689071665E-8	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999999899194391	WITHOUT_CLASSIFICATION	1.0080560887284752E-8	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999998105864418	WITHOUT_CLASSIFICATION	1.8941355818681446E-7	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999904310426	WITHOUT_CLASSIFICATION	9.568957365160355E-9	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.999999981956047	WITHOUT_CLASSIFICATION	1.804395304569999E-8	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999939582964	WITHOUT_CLASSIFICATION	6.041703587753279E-9	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999991647322424	WITHOUT_CLASSIFICATION	8.35267757518398E-7	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999946344714	WITHOUT_CLASSIFICATION	5.3655286186883395E-9	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999999467994924	WITHOUT_CLASSIFICATION	5.3200507547610195E-8	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999978923403331	WITHOUT_CLASSIFICATION	2.1076596669579546E-6	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999998953005192	WITHOUT_CLASSIFICATION	1.0469948074977079E-7	TEST
// silence	WITHOUT_CLASSIFICATION	0.9999998953005192	WITHOUT_CLASSIFICATION	1.0469948074977079E-7	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999998098970542	WITHOUT_CLASSIFICATION	1.9010294591199037E-7	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999998098970542	WITHOUT_CLASSIFICATION	1.9010294591199037E-7	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999996805226655	WITHOUT_CLASSIFICATION	3.194773343806191E-7	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999999712809458	WITHOUT_CLASSIFICATION	2.871905420096019E-7	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999598634126	WITHOUT_CLASSIFICATION	4.013658734841137E-8	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999998894469398	WITHOUT_CLASSIFICATION	1.1055306020900839E-7	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999419646233	WITHOUT_CLASSIFICATION	5.803537667769606E-8	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999999363494686	WITHOUT_CLASSIFICATION	6.365053136541876E-8	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999444351232	WITHOUT_CLASSIFICATION	5.556487668231028E-8	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999999896612299	WITHOUT_CLASSIFICATION	1.0338770123998507E-8	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999997849699	WITHOUT_CLASSIFICATION	2.150300490440688E-10	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999998191870703	WITHOUT_CLASSIFICATION	1.8081292969220676E-7	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999963740284	WITHOUT_CLASSIFICATION	3.6259715778367718E-9	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999981016029271	WITHOUT_CLASSIFICATION	1.8983970728308682E-6	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999981016029271	WITHOUT_CLASSIFICATION	1.8983970728308682E-6	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999997567988468	WITHOUT_CLASSIFICATION	2.4320115314569163E-7	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999986721149605	WITHOUT_CLASSIFICATION	1.3278850394473838E-6	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999997719112442	WITHOUT_CLASSIFICATION	2.2808875576737732E-7	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999997719112442	WITHOUT_CLASSIFICATION	2.2808875576737732E-7	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999983957833188	WITHOUT_CLASSIFICATION	1.6042166811219957E-6	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999963621886	WITHOUT_CLASSIFICATION	3.637811474133083E-9	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999993704485705	WITHOUT_CLASSIFICATION	6.295514295884282E-7	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999998644878885	WITHOUT_CLASSIFICATION	1.355121115599549E-7	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.99999995132621	WITHOUT_CLASSIFICATION	4.867378990309038E-8	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999996608610461	WITHOUT_CLASSIFICATION	3.3913895394870667E-7	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999994613837058	WITHOUT_CLASSIFICATION	5.386162942156879E-7	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999999450275029	WITHOUT_CLASSIFICATION	5.497249714648252E-8	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999949287404586	WITHOUT_CLASSIFICATION	5.071259541428352E-6	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999997696371539	WITHOUT_CLASSIFICATION	2.3036284612835821E-7	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999996197597519	WITHOUT_CLASSIFICATION	3.802402480706297E-7	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999560099081596	WITHOUT_CLASSIFICATION	4.3990091840359025E-5	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999999285529197	WITHOUT_CLASSIFICATION	7.144708023550391E-8	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999995149647498	WITHOUT_CLASSIFICATION	4.85035250172025E-7	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999470725026	WITHOUT_CLASSIFICATION	5.292749731783268E-8	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999955040997504	WITHOUT_CLASSIFICATION	4.495900249617659E-6	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.999999967356884	WITHOUT_CLASSIFICATION	3.264311599171039E-8	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999999932630663	WITHOUT_CLASSIFICATION	6.73693360229543E-9	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999629752957947	WITHOUT_CLASSIFICATION	3.702470420526077E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999886616523	WITHOUT_CLASSIFICATION	1.1338347747379771E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9932717376854755	WITHOUT_CLASSIFICATION	0.006728262314524525	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999999039061445	WITHOUT_CLASSIFICATION	9.60938555281504E-8	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999999584172795	WITHOUT_CLASSIFICATION	4.158272045317501E-8	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999999519331715	WITHOUT_CLASSIFICATION	4.8066828468897985E-8	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999999569487468	WITHOUT_CLASSIFICATION	4.305125308703904E-8	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999999906177733	WITHOUT_CLASSIFICATION	9.382226549240145E-9	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9999998130229603	WITHOUT_CLASSIFICATION	1.8697703985687545E-7	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999996723142961	WITHOUT_CLASSIFICATION	3.27685703918259E-7	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999994408966622	WITHOUT_CLASSIFICATION	5.591033379249747E-7	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999994797394754	WITHOUT_CLASSIFICATION	5.202605245457269E-7	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999689503819	WITHOUT_CLASSIFICATION	3.1049618212935865E-8	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999998944660237	WITHOUT_CLASSIFICATION	1.0553397638297756E-7	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999939279985	WITHOUT_CLASSIFICATION	6.072001461137745E-9	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999937110091	WITHOUT_CLASSIFICATION	6.288990842037678E-9	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999937110091	WITHOUT_CLASSIFICATION	6.288990842037678E-9	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999743021787	WITHOUT_CLASSIFICATION	2.5697821236049188E-8	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999999933964524	WITHOUT_CLASSIFICATION	6.603547634138208E-9	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999758455178924	WITHOUT_CLASSIFICATION	2.4154482107526853E-5	TEST
// Init	WITHOUT_CLASSIFICATION	0.9999995085665841	WITHOUT_CLASSIFICATION	4.914334159375931E-7	TEST
// Block	WITHOUT_CLASSIFICATION	0.9999989725188321	WITHOUT_CLASSIFICATION	1.0274811680321163E-6	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999999070091904	WITHOUT_CLASSIFICATION	9.299080956388633E-8	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999508501351752	WITHOUT_CLASSIFICATION	4.914986482494457E-5	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999487653752143	WITHOUT_CLASSIFICATION	5.123462478575313E-5	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999702094788115	WITHOUT_CLASSIFICATION	2.979052118847554E-5	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999971071158843	WITHOUT_CLASSIFICATION	2.89288411578906E-6	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999915634911	WITHOUT_CLASSIFICATION	8.43650897081469E-9	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.999997538758211	WITHOUT_CLASSIFICATION	2.461241789083169E-6	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999273143810383	WITHOUT_CLASSIFICATION	7.268561896157981E-5	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.99999766250168	WITHOUT_CLASSIFICATION	2.3374983200801983E-6	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999999749032189	WITHOUT_CLASSIFICATION	2.5096781157795425E-8	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999999167617559	WITHOUT_CLASSIFICATION	8.32382440752499E-8	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999999301163842	WITHOUT_CLASSIFICATION	6.988361581635079E-8	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.999999915693026	WITHOUT_CLASSIFICATION	8.430697399492369E-8	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999997255914321	WITHOUT_CLASSIFICATION	2.7440856784708136E-7	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999984948657743	WITHOUT_CLASSIFICATION	1.5051342257398839E-6	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999998531805672	WITHOUT_CLASSIFICATION	1.468194329465511E-7	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999993473538655	WITHOUT_CLASSIFICATION	6.52646134404263E-7	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999999441601148	WITHOUT_CLASSIFICATION	5.583988506963421E-8	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999999366126835	WITHOUT_CLASSIFICATION	6.338731657617488E-8	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999984722847071	WITHOUT_CLASSIFICATION	1.5277152929150838E-6	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999999291019576	WITHOUT_CLASSIFICATION	7.089804247070106E-8	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999916183431	WITHOUT_CLASSIFICATION	8.38165685694214E-9	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999983495702253	WITHOUT_CLASSIFICATION	1.650429774739689E-6	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9999996043605899	WITHOUT_CLASSIFICATION	3.9563941001003934E-7	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.999999943495299	WITHOUT_CLASSIFICATION	5.650470099112717E-8	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999497847254836	WITHOUT_CLASSIFICATION	5.0215274516403844E-5	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.996751380588673	WITHOUT_CLASSIFICATION	0.003248619411326979	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999994404394741	WITHOUT_CLASSIFICATION	5.59560525986396E-7	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999996792504986	WITHOUT_CLASSIFICATION	3.2074950136409764E-7	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999996835809795	WITHOUT_CLASSIFICATION	3.1641902052937777E-7	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.999886381424993	WITHOUT_CLASSIFICATION	1.1361857500707664E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999962556845152	WITHOUT_CLASSIFICATION	3.744315484882624E-6	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999998754645233	WITHOUT_CLASSIFICATION	1.2453547680162386E-7	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999999497075596	WITHOUT_CLASSIFICATION	5.0292440446524925E-8	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999999184457867	WITHOUT_CLASSIFICATION	8.155421330647815E-8	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.999999937582034	WITHOUT_CLASSIFICATION	6.241796597458576E-8	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999998420275117	WITHOUT_CLASSIFICATION	1.5797248835225552E-7	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999998420275117	WITHOUT_CLASSIFICATION	1.5797248835225552E-7	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999997881927498	WITHOUT_CLASSIFICATION	2.1180725011150044E-7	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999997934412442	WITHOUT_CLASSIFICATION	2.0655875571609965E-7	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999995303823752	WITHOUT_CLASSIFICATION	4.696176247185252E-7	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.999999855533272	WITHOUT_CLASSIFICATION	1.4446672809604185E-7	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999991408626844	WITHOUT_CLASSIFICATION	8.591373157330134E-7	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999900497085	WITHOUT_CLASSIFICATION	9.950291594334356E-9	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999896473178	WITHOUT_CLASSIFICATION	1.0352682206675068E-8	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999999862538992	WITHOUT_CLASSIFICATION	1.3746100755248986E-8	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.999999531127988	WITHOUT_CLASSIFICATION	4.688720120731207E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999993244233	WITHOUT_CLASSIFICATION	6.755765623468687E-10	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999947149370855	WITHOUT_CLASSIFICATION	5.285062914573063E-6	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999332734613	WITHOUT_CLASSIFICATION	6.672653865350423E-8	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999997587695696	WITHOUT_CLASSIFICATION	2.412304304121175E-7	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999999733061878	WITHOUT_CLASSIFICATION	2.6693812141020143E-8	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999854845982	WITHOUT_CLASSIFICATION	1.4515401661200662E-8	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999950730738035	WITHOUT_CLASSIFICATION	4.926926196492047E-6	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999990579861	WITHOUT_CLASSIFICATION	9.420139191211485E-10	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999957700278675	WITHOUT_CLASSIFICATION	4.229972132532269E-6	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999969295067	WITHOUT_CLASSIFICATION	3.0704932588783504E-9	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999924647224757	WITHOUT_CLASSIFICATION	7.535277524347109E-6	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999997418151023	WITHOUT_CLASSIFICATION	2.5818489767819586E-7	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999995525034544	WITHOUT_CLASSIFICATION	4.4749654560157785E-7	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999998045199	WITHOUT_CLASSIFICATION	1.9548006917427105E-10	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.999999973588451	WITHOUT_CLASSIFICATION	2.6411548910873817E-8	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999244378105	WITHOUT_CLASSIFICATION	7.556218954003669E-8	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999990182328545	WITHOUT_CLASSIFICATION	9.817671455064634E-7	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999996935786063	WITHOUT_CLASSIFICATION	3.064213937328362E-7	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999997681317053	WITHOUT_CLASSIFICATION	2.3186829469872296E-7	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999109927462	WITHOUT_CLASSIFICATION	8.900725378653974E-8	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999998945706712	WITHOUT_CLASSIFICATION	1.054293288659266E-7	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999080029152	WITHOUT_CLASSIFICATION	9.199708481961233E-8	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999893865028	WITHOUT_CLASSIFICATION	1.0613497152146503E-8	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999998945706712	WITHOUT_CLASSIFICATION	1.054293288659266E-7	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999869442856839	WITHOUT_CLASSIFICATION	1.3055714316117701E-5	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999991975211696	WITHOUT_CLASSIFICATION	8.02478830401123E-6	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9999999562574374	WITHOUT_CLASSIFICATION	4.374256260413178E-8	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9991660960553952	WITHOUT_CLASSIFICATION	8.339039446048383E-4	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999997883128665	WITHOUT_CLASSIFICATION	2.1168713337284346E-7	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999996514857065	WITHOUT_CLASSIFICATION	3.485142935283096E-7	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999997524651981	WITHOUT_CLASSIFICATION	2.475348019054552E-7	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999879730106048	WITHOUT_CLASSIFICATION	1.2026989395143115E-5	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999998658644225	WITHOUT_CLASSIFICATION	1.3413557753036333E-7	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999886616523	WITHOUT_CLASSIFICATION	1.1338347747379771E-8	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999997457086159	WITHOUT_CLASSIFICATION	2.5429138411354035E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.999999927294486	WITHOUT_CLASSIFICATION	7.270551404499165E-8	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999991929782188	WITHOUT_CLASSIFICATION	8.070217811020913E-7	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999999893865765	WITHOUT_CLASSIFICATION	1.0613423432607537E-8	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999831751292639	WITHOUT_CLASSIFICATION	1.682487073609275E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999994727276843	WITHOUT_CLASSIFICATION	5.272723156215862E-7	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999687638370527	WITHOUT_CLASSIFICATION	3.123616294738491E-5	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.999998986837244	WITHOUT_CLASSIFICATION	1.0131627560924487E-6	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999866996458	WITHOUT_CLASSIFICATION	1.3300354230905849E-8	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999997328254814	WITHOUT_CLASSIFICATION	2.6717451853986953E-7	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999986773174838	WITHOUT_CLASSIFICATION	1.3226825161436635E-6	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986866030637	WITHOUT_CLASSIFICATION	1.313396936307594E-6	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999999102329977	WITHOUT_CLASSIFICATION	8.97670022149499E-8	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999997254723129	WITHOUT_CLASSIFICATION	2.745276871726621E-7	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999998357233854	WITHOUT_CLASSIFICATION	1.6427661459095581E-7	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999995669403509	WITHOUT_CLASSIFICATION	4.330596492257478E-7	TEST
// line 486	WITHOUT_CLASSIFICATION	0.999999691810353	WITHOUT_CLASSIFICATION	3.0818964707112186E-7	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999800032957	WITHOUT_CLASSIFICATION	1.9996704307363248E-8	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999191817245	WITHOUT_CLASSIFICATION	8.081827548484037E-8	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998924381704	WITHOUT_CLASSIFICATION	1.0756182945097205E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998924381704	WITHOUT_CLASSIFICATION	1.0756182945097205E-7	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999347074042	WITHOUT_CLASSIFICATION	6.529259573074693E-8	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999975459433	WITHOUT_CLASSIFICATION	2.4540567601665277E-9	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999999985781705	WITHOUT_CLASSIFICATION	1.4218295985371324E-9	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9979990224849677	WITHOUT_CLASSIFICATION	0.0020009775150322804	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9979990224849677	WITHOUT_CLASSIFICATION	0.0020009775150322804	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9979990224849677	WITHOUT_CLASSIFICATION	0.0020009775150322804	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9979990224849677	WITHOUT_CLASSIFICATION	0.0020009775150322804	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999999345665836	WITHOUT_CLASSIFICATION	6.543341631777582E-8	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999999890848592	WITHOUT_CLASSIFICATION	1.091514079529371E-7	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999995958699093	WITHOUT_CLASSIFICATION	4.041300907100788E-7	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999927717906922	WITHOUT_CLASSIFICATION	7.2282093077985146E-6	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999999801732434	WITHOUT_CLASSIFICATION	1.9826756574949958E-8	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999920422062977	WITHOUT_CLASSIFICATION	7.957793702394681E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999908071565795	WITHOUT_CLASSIFICATION	9.19284342042568E-6	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999908071565795	WITHOUT_CLASSIFICATION	9.19284342042568E-6	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.999999986074032	WITHOUT_CLASSIFICATION	1.3925968031611675E-8	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.999986609873586	WITHOUT_CLASSIFICATION	1.3390126414002508E-5	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999996734095432	WITHOUT_CLASSIFICATION	3.2659045674274723E-7	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9997421491652637	WITHOUT_CLASSIFICATION	2.578508347362227E-4	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999999395908148	WITHOUT_CLASSIFICATION	6.040918520637937E-8	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999998202421627	WITHOUT_CLASSIFICATION	1.7975783728261752E-7	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999528280197	WITHOUT_CLASSIFICATION	4.7171980351708065E-8	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999928209906978	WITHOUT_CLASSIFICATION	7.179009302332176E-6	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999772198655483	WITHOUT_CLASSIFICATION	2.278013445155407E-5	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999772198655483	WITHOUT_CLASSIFICATION	2.278013445155407E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999893865028	WITHOUT_CLASSIFICATION	1.0613497152146503E-8	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999996687172656	WITHOUT_CLASSIFICATION	3.31282734336807E-7	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999996839716546	WITHOUT_CLASSIFICATION	3.1602834534142896E-7	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999998422371508	WITHOUT_CLASSIFICATION	1.5776284914881976E-7	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999997391100001	WITHOUT_CLASSIFICATION	2.6088999999397823E-7	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9999870305317198	WITHOUT_CLASSIFICATION	1.2969468280264543E-5	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999993488490961	WITHOUT_CLASSIFICATION	6.511509038436066E-7	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999999135971271	WITHOUT_CLASSIFICATION	8.640287283083915E-8	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998831642978	WITHOUT_CLASSIFICATION	1.1683570219613963E-7	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998831642978	WITHOUT_CLASSIFICATION	1.1683570219613963E-7	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999999711173378	WITHOUT_CLASSIFICATION	2.8882662155349657E-8	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999996321735	WITHOUT_CLASSIFICATION	3.6782647501580243E-10	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999975051388759	WITHOUT_CLASSIFICATION	2.494861124147775E-6	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999998283707024	WITHOUT_CLASSIFICATION	1.7162929754533921E-7	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999999806217469	WITHOUT_CLASSIFICATION	1.9378253106385768E-8	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9999864741398671	WITHOUT_CLASSIFICATION	1.3525860132895328E-5	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999998632804129	WITHOUT_CLASSIFICATION	1.3671958714956186E-7	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999848617873	WITHOUT_CLASSIFICATION	1.513821268921858E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999848617873	WITHOUT_CLASSIFICATION	1.513821268921858E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999848617873	WITHOUT_CLASSIFICATION	1.513821268921858E-8	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999848617873	WITHOUT_CLASSIFICATION	1.513821268921858E-8	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999650108331	WITHOUT_CLASSIFICATION	3.498916692897455E-8	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999717169368	WITHOUT_CLASSIFICATION	2.828306323955503E-8	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999654499529473	WITHOUT_CLASSIFICATION	3.455004705267661E-5	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999998818272288	WITHOUT_CLASSIFICATION	1.1817277123150828E-7	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.99999931590297	WITHOUT_CLASSIFICATION	6.840970299074986E-7	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.9999839578382941	WITHOUT_CLASSIFICATION	1.6042161706007166E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999207667936	WITHOUT_CLASSIFICATION	7.923320643764822E-8	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999993796504335	WITHOUT_CLASSIFICATION	6.203495665881088E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999993796504335	WITHOUT_CLASSIFICATION	6.203495665881088E-7	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999993796504335	WITHOUT_CLASSIFICATION	6.203495665881088E-7	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999314004615	WITHOUT_CLASSIFICATION	6.85995385085022E-8	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999999819142609	WITHOUT_CLASSIFICATION	1.8085739194302757E-8	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999554411955	WITHOUT_CLASSIFICATION	4.4558804443138944E-8	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999554411955	WITHOUT_CLASSIFICATION	4.4558804443138944E-8	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9999978637725445	WITHOUT_CLASSIFICATION	2.136227455439993E-6	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999999999998748	WITHOUT_CLASSIFICATION	1.2519014607523275E-13	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999999175190873	WITHOUT_CLASSIFICATION	8.248091266103314E-8	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9999978475679424	WITHOUT_CLASSIFICATION	2.1524320575640753E-6	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999575305417	WITHOUT_CLASSIFICATION	4.246945830199767E-8	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999999628264079	WITHOUT_CLASSIFICATION	3.717359201433762E-8	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999998984715753	WITHOUT_CLASSIFICATION	1.0152842465152567E-7	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999998984715753	WITHOUT_CLASSIFICATION	1.0152842465152567E-7	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999998157436328	WITHOUT_CLASSIFICATION	1.8425636721032385E-7	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999682172789	WITHOUT_CLASSIFICATION	3.178272111540495E-8	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999632563739	WITHOUT_CLASSIFICATION	3.674362605730403E-8	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999989248517406	WITHOUT_CLASSIFICATION	1.0751482593605503E-6	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999995390764808	WITHOUT_CLASSIFICATION	4.6092351921202673E-7	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999853271531	WITHOUT_CLASSIFICATION	1.467284689260116E-8	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999999888150907	WITHOUT_CLASSIFICATION	1.1184909348005162E-8	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999769501134119	WITHOUT_CLASSIFICATION	2.3049886588018477E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.99999625078538	WITHOUT_CLASSIFICATION	3.7492146199908297E-6	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999998779304681	WITHOUT_CLASSIFICATION	1.2206953195398666E-7	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.999999969418779	WITHOUT_CLASSIFICATION	3.058122106063427E-8	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999980036797	WITHOUT_CLASSIFICATION	1.9963203788375E-9	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999999979647013	WITHOUT_CLASSIFICATION	2.035298689428849E-8	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999997009398972	WITHOUT_CLASSIFICATION	2.990601027795461E-7	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999296823389	WITHOUT_CLASSIFICATION	7.031766118974772E-8	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.999999999156474	WITHOUT_CLASSIFICATION	8.435260563350586E-10	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999999474643161	WITHOUT_CLASSIFICATION	5.253568398963215E-8	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999836161015	WITHOUT_CLASSIFICATION	1.6383898519716163E-8	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999999947280638	WITHOUT_CLASSIFICATION	5.271936326706725E-9	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999999888983602	WITHOUT_CLASSIFICATION	1.1101639801883396E-8	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999888662086	WITHOUT_CLASSIFICATION	1.1133791468883218E-8	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999999935082095	WITHOUT_CLASSIFICATION	6.491790543580298E-9	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999768769982	WITHOUT_CLASSIFICATION	2.3123001838998732E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999768769982	WITHOUT_CLASSIFICATION	2.3123001838998732E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999768769982	WITHOUT_CLASSIFICATION	2.3123001838998732E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999768769982	WITHOUT_CLASSIFICATION	2.3123001838998732E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999768769982	WITHOUT_CLASSIFICATION	2.3123001838998732E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999768769982	WITHOUT_CLASSIFICATION	2.3123001838998732E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999768769982	WITHOUT_CLASSIFICATION	2.3123001838998732E-8	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999999768769982	WITHOUT_CLASSIFICATION	2.3123001838998732E-8	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999927779264	WITHOUT_CLASSIFICATION	7.222073544039293E-9	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999947474118026	WITHOUT_CLASSIFICATION	5.252588197405572E-6	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.999994282365396	WITHOUT_CLASSIFICATION	5.717634603983319E-6	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999999936025314	WITHOUT_CLASSIFICATION	6.397468599541529E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999896473178	WITHOUT_CLASSIFICATION	1.0352682206675068E-8	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999896473178	WITHOUT_CLASSIFICATION	1.0352682206675068E-8	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999997834400732	WITHOUT_CLASSIFICATION	2.1655992681659246E-7	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999999126950189	WITHOUT_CLASSIFICATION	8.730498114647513E-8	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999384998548	WITHOUT_CLASSIFICATION	6.15001451639102E-8	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999990566183302	WITHOUT_CLASSIFICATION	9.433816697141772E-7	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999998896318381	WITHOUT_CLASSIFICATION	1.103681620050332E-7	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999998670749991	WITHOUT_CLASSIFICATION	1.3292500081387524E-7	TEST
// read	WITHOUT_CLASSIFICATION	0.9999996478791263	WITHOUT_CLASSIFICATION	3.5212087370959184E-7	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999993266272003	WITHOUT_CLASSIFICATION	6.733727997530042E-7	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999996613393096	WITHOUT_CLASSIFICATION	3.386606903744978E-7	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999374609434	WITHOUT_CLASSIFICATION	6.253905657249334E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999374609434	WITHOUT_CLASSIFICATION	6.253905657249334E-8	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999374609434	WITHOUT_CLASSIFICATION	6.253905657249334E-8	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999879067541683	WITHOUT_CLASSIFICATION	1.209324583182057E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999879067541683	WITHOUT_CLASSIFICATION	1.209324583182057E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999879067541683	WITHOUT_CLASSIFICATION	1.209324583182057E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999879067541683	WITHOUT_CLASSIFICATION	1.209324583182057E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999879067541683	WITHOUT_CLASSIFICATION	1.209324583182057E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999879067541683	WITHOUT_CLASSIFICATION	1.209324583182057E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999879067541683	WITHOUT_CLASSIFICATION	1.209324583182057E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999879067541683	WITHOUT_CLASSIFICATION	1.209324583182057E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999879067541683	WITHOUT_CLASSIFICATION	1.209324583182057E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999782199938	WITHOUT_CLASSIFICATION	2.1780006320788995E-8	TEST
// at end	WITHOUT_CLASSIFICATION	0.9999997364890469	WITHOUT_CLASSIFICATION	2.6351095311290004E-7	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999987426311681	WITHOUT_CLASSIFICATION	1.2573688320547165E-6	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999997074883101	WITHOUT_CLASSIFICATION	2.925116899720466E-7	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999879067541683	WITHOUT_CLASSIFICATION	1.209324583182057E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999879067541683	WITHOUT_CLASSIFICATION	1.209324583182057E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999879067541683	WITHOUT_CLASSIFICATION	1.209324583182057E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999507477086	WITHOUT_CLASSIFICATION	4.925229129226568E-8	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999984350639485	WITHOUT_CLASSIFICATION	1.564936051416535E-6	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999999977827128	WITHOUT_CLASSIFICATION	2.2172871919602915E-9	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999999321531006	WITHOUT_CLASSIFICATION	6.784689943975186E-8	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999999321531006	WITHOUT_CLASSIFICATION	6.784689943975186E-8	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999998146119745	WITHOUT_CLASSIFICATION	1.8538802558728842E-7	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998973587946	WITHOUT_CLASSIFICATION	1.0264120533997614E-7	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999936958002	WITHOUT_CLASSIFICATION	6.304199834417441E-9	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.999999921839072	WITHOUT_CLASSIFICATION	7.816092797263602E-8	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999998284484183	WITHOUT_CLASSIFICATION	1.715515816180754E-7	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999998284484183	WITHOUT_CLASSIFICATION	1.715515816180754E-7	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999989281272684	WITHOUT_CLASSIFICATION	1.0718727315442756E-6	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999598860969	WITHOUT_CLASSIFICATION	4.0113903056213656E-8	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999986785686815	WITHOUT_CLASSIFICATION	1.3214313184542075E-6	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999767819554243	WITHOUT_CLASSIFICATION	2.3218044575725103E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999767819554243	WITHOUT_CLASSIFICATION	2.3218044575725103E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9999767819554243	WITHOUT_CLASSIFICATION	2.3218044575725103E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.999999881019908	WITHOUT_CLASSIFICATION	1.1898009191455252E-7	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999116277994	WITHOUT_CLASSIFICATION	8.837220065714165E-8	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999116277994	WITHOUT_CLASSIFICATION	8.837220065714165E-8	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999999578637813	WITHOUT_CLASSIFICATION	4.213621861975062E-8	TEST
// check arity	WITHOUT_CLASSIFICATION	0.9999999578637813	WITHOUT_CLASSIFICATION	4.213621861975062E-8	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999998901700268	WITHOUT_CLASSIFICATION	1.098299732307981E-7	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999830103358	WITHOUT_CLASSIFICATION	1.6989664188323264E-8	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999995761592112	WITHOUT_CLASSIFICATION	4.2384078870280803E-7	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9999960883116762	WITHOUT_CLASSIFICATION	3.911688323824392E-6	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999989926797367	WITHOUT_CLASSIFICATION	1.007320263293837E-6	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999999553599371	WITHOUT_CLASSIFICATION	4.464006287969422E-8	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999999977068446	WITHOUT_CLASSIFICATION	2.2931554042719997E-9	TEST
// block	WITHOUT_CLASSIFICATION	0.9999994210886347	WITHOUT_CLASSIFICATION	5.789113653044282E-7	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999998785575112	WITHOUT_CLASSIFICATION	1.2144248884214875E-7	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999912776748	WITHOUT_CLASSIFICATION	8.722325228818938E-9	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999708459422698	WITHOUT_CLASSIFICATION	2.9154057730277372E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999997634443775	WITHOUT_CLASSIFICATION	2.365556225740973E-7	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999995409021222	WITHOUT_CLASSIFICATION	4.59097877769292E-7	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999998930708734	WITHOUT_CLASSIFICATION	1.0692912660065913E-7	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999963756782	WITHOUT_CLASSIFICATION	3.6243217450220088E-9	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999996504112391	WITHOUT_CLASSIFICATION	3.495887609983973E-7	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.999999010028693	WITHOUT_CLASSIFICATION	9.89971307096485E-7	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999989843168	WITHOUT_CLASSIFICATION	1.0156831055137077E-9	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999888714855439	WITHOUT_CLASSIFICATION	1.1128514455988171E-5	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.999999192250271	WITHOUT_CLASSIFICATION	8.077497290341136E-7	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.999999927294486	WITHOUT_CLASSIFICATION	7.270551404499165E-8	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9999553130617632	WITHOUT_CLASSIFICATION	4.468693823685564E-5	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999998250774027	WITHOUT_CLASSIFICATION	1.74922597277228E-7	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999999959403034	WITHOUT_CLASSIFICATION	4.059696572763037E-9	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999999686287228	WITHOUT_CLASSIFICATION	3.13712772300676E-8	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999839737996696	WITHOUT_CLASSIFICATION	1.6026200330314056E-5	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999969976881382	WITHOUT_CLASSIFICATION	3.0023118617368227E-6	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999372226509	WITHOUT_CLASSIFICATION	6.277734916840336E-8	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999999366911696	WITHOUT_CLASSIFICATION	6.330883043832002E-8	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999999995050031	WITHOUT_CLASSIFICATION	4.949970066642706E-10	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999997531466169	WITHOUT_CLASSIFICATION	2.4685338308869277E-7	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999750640658	WITHOUT_CLASSIFICATION	2.493593425088694E-8	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999999331613559	WITHOUT_CLASSIFICATION	6.683864409494194E-8	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999886569158	WITHOUT_CLASSIFICATION	1.1343084163336298E-8	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999999458784162	WITHOUT_CLASSIFICATION	5.412158371887857E-8	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999680099049061	WITHOUT_CLASSIFICATION	3.199009509383555E-5	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999998743356634	WITHOUT_CLASSIFICATION	1.2566433647847666E-7	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999999775862917	WITHOUT_CLASSIFICATION	2.2413708440115445E-8	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9999993840557018	WITHOUT_CLASSIFICATION	6.159442981975336E-7	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999977868236	WITHOUT_CLASSIFICATION	2.2131763046385068E-9	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999998238917561	WITHOUT_CLASSIFICATION	1.7610824381836934E-7	TEST
// finally	WITHOUT_CLASSIFICATION	0.9999996365539264	WITHOUT_CLASSIFICATION	3.6344607358123585E-7	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999969548066319	WITHOUT_CLASSIFICATION	3.0451933682052947E-6	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999262792717	WITHOUT_CLASSIFICATION	7.372072827230514E-8	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999995043378535	WITHOUT_CLASSIFICATION	4.956621465551463E-7	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999939260828155	WITHOUT_CLASSIFICATION	6.0739171845088416E-6	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999999825694754	WITHOUT_CLASSIFICATION	1.7430524536782596E-8	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999949894949	WITHOUT_CLASSIFICATION	5.010505046390661E-9	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999997811847895	WITHOUT_CLASSIFICATION	2.1881521055774164E-7	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999793588216217	WITHOUT_CLASSIFICATION	2.0641178378285705E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999999795555582	WITHOUT_CLASSIFICATION	2.0444441746496058E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999600374495	WITHOUT_CLASSIFICATION	3.996255049188276E-8	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999999600374495	WITHOUT_CLASSIFICATION	3.996255049188276E-8	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999769896144	WITHOUT_CLASSIFICATION	2.301038556857523E-8	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999769896144	WITHOUT_CLASSIFICATION	2.301038556857523E-8	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998773960211192	WITHOUT_CLASSIFICATION	1.2260397888078084E-4	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998773960211192	WITHOUT_CLASSIFICATION	1.2260397888078084E-4	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999674320137	WITHOUT_CLASSIFICATION	3.256798629428541E-7	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999674320137	WITHOUT_CLASSIFICATION	3.256798629428541E-7	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999472568526	WITHOUT_CLASSIFICATION	5.2743147468357996E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999472568526	WITHOUT_CLASSIFICATION	5.2743147468357996E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999472568526	WITHOUT_CLASSIFICATION	5.2743147468357996E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999472568526	WITHOUT_CLASSIFICATION	5.2743147468357996E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999472568526	WITHOUT_CLASSIFICATION	5.2743147468357996E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999472568526	WITHOUT_CLASSIFICATION	5.2743147468357996E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999472568526	WITHOUT_CLASSIFICATION	5.2743147468357996E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999472568526	WITHOUT_CLASSIFICATION	5.2743147468357996E-8	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999472568526	WITHOUT_CLASSIFICATION	5.2743147468357996E-8	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999997421847364	WITHOUT_CLASSIFICATION	2.5781526360426466E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999997421847364	WITHOUT_CLASSIFICATION	2.5781526360426466E-7	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999997421847364	WITHOUT_CLASSIFICATION	2.5781526360426466E-7	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999998709440708	WITHOUT_CLASSIFICATION	1.290559291986579E-7	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999315429204	WITHOUT_CLASSIFICATION	6.845707961274657E-8	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999315429204	WITHOUT_CLASSIFICATION	6.845707961274657E-8	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999315429204	WITHOUT_CLASSIFICATION	6.845707961274657E-8	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999996862219185	WITHOUT_CLASSIFICATION	3.137780815377764E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999996862219185	WITHOUT_CLASSIFICATION	3.137780815377764E-7	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999996862219185	WITHOUT_CLASSIFICATION	3.137780815377764E-7	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999780599194749	WITHOUT_CLASSIFICATION	2.1940080525090407E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999999179235456	WITHOUT_CLASSIFICATION	8.207645449606666E-8	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.999995733352327	WITHOUT_CLASSIFICATION	4.2666476729283965E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999954022946157	WITHOUT_CLASSIFICATION	4.597705384259607E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999954022946157	WITHOUT_CLASSIFICATION	4.597705384259607E-6	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999954022946157	WITHOUT_CLASSIFICATION	4.597705384259607E-6	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9999993996689601	WITHOUT_CLASSIFICATION	6.003310397615554E-7	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999991250105305	WITHOUT_CLASSIFICATION	8.74989469456305E-7	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999991250105305	WITHOUT_CLASSIFICATION	8.74989469456305E-7	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999979618717921	WITHOUT_CLASSIFICATION	2.0381282078692667E-6	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997644677526	WITHOUT_CLASSIFICATION	2.3553224741350136E-7	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999997644677526	WITHOUT_CLASSIFICATION	2.3553224741350136E-7	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9870967383221301	WITHOUT_CLASSIFICATION	0.01290326167786988	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999976586657465	WITHOUT_CLASSIFICATION	2.341334253489448E-5	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999996994175244	WITHOUT_CLASSIFICATION	3.005824756472819E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999993453675954	WITHOUT_CLASSIFICATION	6.546324047317451E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999993453675954	WITHOUT_CLASSIFICATION	6.546324047317451E-7	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999997692951519	WITHOUT_CLASSIFICATION	2.307048481230494E-7	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999907423797897	WITHOUT_CLASSIFICATION	9.257620210359163E-6	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999993851139547	WITHOUT_CLASSIFICATION	6.14886045349105E-7	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999999709658818	WITHOUT_CLASSIFICATION	2.9034118164996838E-8	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999997502543694	WITHOUT_CLASSIFICATION	2.49745630588678E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999993453675954	WITHOUT_CLASSIFICATION	6.546324047317451E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999993453675954	WITHOUT_CLASSIFICATION	6.546324047317451E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999993453675954	WITHOUT_CLASSIFICATION	6.546324047317451E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999993453675954	WITHOUT_CLASSIFICATION	6.546324047317451E-7	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999993453675954	WITHOUT_CLASSIFICATION	6.546324047317451E-7	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999999548998685	WITHOUT_CLASSIFICATION	4.5100131530986306E-8	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999998407472566	WITHOUT_CLASSIFICATION	1.592527434924075E-7	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999971461928	WITHOUT_CLASSIFICATION	2.853807231173826E-9	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999996855631689	WITHOUT_CLASSIFICATION	3.144368311474396E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999635553771	WITHOUT_CLASSIFICATION	3.644462281993976E-8	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9999998661386299	WITHOUT_CLASSIFICATION	1.3386137015949279E-7	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999768111190198	WITHOUT_CLASSIFICATION	2.318888098018543E-5	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999993149058811	WITHOUT_CLASSIFICATION	6.850941188353198E-7	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998666429597	WITHOUT_CLASSIFICATION	1.3335704035371382E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999996930690871	WITHOUT_CLASSIFICATION	3.069309129520493E-7	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999565489402	WITHOUT_CLASSIFICATION	4.345105981464409E-8	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999995525034544	WITHOUT_CLASSIFICATION	4.4749654560157785E-7	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.999999969815557	WITHOUT_CLASSIFICATION	3.0184442896072776E-8	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999971970353609	WITHOUT_CLASSIFICATION	2.802964639102359E-6	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999999943721519	WITHOUT_CLASSIFICATION	5.627848074607001E-9	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999999911761018	WITHOUT_CLASSIFICATION	8.823898231966088E-9	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999999624823049	WITHOUT_CLASSIFICATION	3.7517695104621524E-8	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999998274042	WITHOUT_CLASSIFICATION	1.7259588693167996E-10	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999999587907228	WITHOUT_CLASSIFICATION	4.1209277172870035E-8	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999994209398625	WITHOUT_CLASSIFICATION	5.790601375554213E-7	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999902453391201	WITHOUT_CLASSIFICATION	9.754660879875446E-6	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999998115655304	WITHOUT_CLASSIFICATION	1.8843446960855136E-7	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999999993244233	WITHOUT_CLASSIFICATION	6.755765623468687E-10	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995336660161	WITHOUT_CLASSIFICATION	4.663339837833105E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995336660161	WITHOUT_CLASSIFICATION	4.663339837833105E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995336660161	WITHOUT_CLASSIFICATION	4.663339837833105E-7	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995336660161	WITHOUT_CLASSIFICATION	4.663339837833105E-7	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999998974191511	WITHOUT_CLASSIFICATION	1.0258084891645165E-7	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.999999849514832	WITHOUT_CLASSIFICATION	1.5048516808211888E-7	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999629880528	WITHOUT_CLASSIFICATION	3.701194723089041E-8	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999629880528	WITHOUT_CLASSIFICATION	3.701194723089041E-8	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999863414153	WITHOUT_CLASSIFICATION	1.3658584682762598E-8	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999994690168397	WITHOUT_CLASSIFICATION	5.309831603117743E-7	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999970301412798	WITHOUT_CLASSIFICATION	2.969858720076901E-6	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999564459698	WITHOUT_CLASSIFICATION	4.35540301768851E-8	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999991817465835	WITHOUT_CLASSIFICATION	8.182534163843829E-7	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999996357091496	WITHOUT_CLASSIFICATION	3.6429085036624535E-7	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999997064716014	WITHOUT_CLASSIFICATION	2.935283986177363E-7	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999987186762449	WITHOUT_CLASSIFICATION	1.2813237551112597E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999987186762449	WITHOUT_CLASSIFICATION	1.2813237551112597E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999987186762449	WITHOUT_CLASSIFICATION	1.2813237551112597E-6	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999987186762449	WITHOUT_CLASSIFICATION	1.2813237551112597E-6	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999890091075	WITHOUT_CLASSIFICATION	1.0990892557927795E-8	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998900008578	WITHOUT_CLASSIFICATION	1.099991422294697E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998900008578	WITHOUT_CLASSIFICATION	1.099991422294697E-7	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999998900008578	WITHOUT_CLASSIFICATION	1.099991422294697E-7	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999998887730126	WITHOUT_CLASSIFICATION	1.1122698729689476E-7	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999998287355636	WITHOUT_CLASSIFICATION	1.712644364045322E-7	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999997954089297	WITHOUT_CLASSIFICATION	2.0459107037231354E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9979990224849677	WITHOUT_CLASSIFICATION	0.0020009775150322804	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9979990224849677	WITHOUT_CLASSIFICATION	0.0020009775150322804	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999996230952	WITHOUT_CLASSIFICATION	3.769048237540909E-10	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.999999807668885	WITHOUT_CLASSIFICATION	1.9233111511972008E-7	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.999999523057054	WITHOUT_CLASSIFICATION	4.769429459420599E-7	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.999999523057054	WITHOUT_CLASSIFICATION	4.769429459420599E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999996299081222	WITHOUT_CLASSIFICATION	3.7009187786744923E-7	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999996299081222	WITHOUT_CLASSIFICATION	3.7009187786744923E-7	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999998148740155	WITHOUT_CLASSIFICATION	1.8512598456849784E-7	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999998157778743	WITHOUT_CLASSIFICATION	1.8422212566368022E-7	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999996796818358	WITHOUT_CLASSIFICATION	3.2031816417025697E-7	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999978988080118	WITHOUT_CLASSIFICATION	2.1011919882322412E-6	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999836297191917	WITHOUT_CLASSIFICATION	1.6370280808310657E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999997359901797	WITHOUT_CLASSIFICATION	2.6400982031112434E-7	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999444803263	WITHOUT_CLASSIFICATION	5.5519673783417665E-8	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.99999952056478	WITHOUT_CLASSIFICATION	4.794352198988612E-7	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999969528155459	WITHOUT_CLASSIFICATION	3.04718445411587E-6	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999914906513	WITHOUT_CLASSIFICATION	8.50934873695182E-9	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999914906513	WITHOUT_CLASSIFICATION	8.50934873695182E-9	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999999955933476	WITHOUT_CLASSIFICATION	4.406652408525341E-8	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999999955933476	WITHOUT_CLASSIFICATION	4.406652408525341E-8	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999998769154257	WITHOUT_CLASSIFICATION	1.2308457422005665E-7	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999998857733673	WITHOUT_CLASSIFICATION	1.1422663269130174E-7	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999935113783784	WITHOUT_CLASSIFICATION	6.4886216214908696E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999983036276637	WITHOUT_CLASSIFICATION	1.696372336198625E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999983036276637	WITHOUT_CLASSIFICATION	1.696372336198625E-6	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999983036276637	WITHOUT_CLASSIFICATION	1.696372336198625E-6	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999996569368891	WITHOUT_CLASSIFICATION	3.430631109954178E-7	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999997263342939	WITHOUT_CLASSIFICATION	2.73665706095476E-7	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999996457164995	WITHOUT_CLASSIFICATION	3.542835005553316E-7	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999996045393077	WITHOUT_CLASSIFICATION	3.954606922460037E-7	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999996082863365	WITHOUT_CLASSIFICATION	3.917136634122351E-7	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999996324746987	WITHOUT_CLASSIFICATION	3.6752530130205704E-7	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999996879914066	WITHOUT_CLASSIFICATION	3.1200859344029623E-7	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999996995167411	WITHOUT_CLASSIFICATION	3.0048325895066866E-7	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999999920444055	WITHOUT_CLASSIFICATION	7.955594496449756E-9	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.999999995589925	WITHOUT_CLASSIFICATION	4.4100749211319965E-9	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999997872790745	WITHOUT_CLASSIFICATION	2.1272092551711894E-7	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999997052707728	WITHOUT_CLASSIFICATION	2.947292271845949E-7	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999997037645658	WITHOUT_CLASSIFICATION	2.962354342044789E-7	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9979990224849677	WITHOUT_CLASSIFICATION	0.0020009775150322804	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999999821389236	WITHOUT_CLASSIFICATION	1.7861076348084912E-8	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999995908045441	WITHOUT_CLASSIFICATION	4.0919545582927275E-7	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998924381704	WITHOUT_CLASSIFICATION	1.0756182945097205E-7	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999679595309763	WITHOUT_CLASSIFICATION	3.2040469023645604E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999679595309763	WITHOUT_CLASSIFICATION	3.2040469023645604E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999679595309763	WITHOUT_CLASSIFICATION	3.2040469023645604E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999679595309763	WITHOUT_CLASSIFICATION	3.2040469023645604E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999679595309763	WITHOUT_CLASSIFICATION	3.2040469023645604E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999769743100512	WITHOUT_CLASSIFICATION	2.3025689948744452E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999679595309763	WITHOUT_CLASSIFICATION	3.2040469023645604E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999679595309763	WITHOUT_CLASSIFICATION	3.2040469023645604E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9999679595309763	WITHOUT_CLASSIFICATION	3.2040469023645604E-5	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999999799491972	WITHOUT_CLASSIFICATION	2.005080277660122E-8	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999994953227955	WITHOUT_CLASSIFICATION	5.046772045391018E-7	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9998966273826079	WITHOUT_CLASSIFICATION	1.0337261739214645E-4	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999988050195784	WITHOUT_CLASSIFICATION	1.194980421683837E-6	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999981751310261	WITHOUT_CLASSIFICATION	1.8248689739543045E-6	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999976407743852	WITHOUT_CLASSIFICATION	2.3592256147405365E-6	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999636623773	WITHOUT_CLASSIFICATION	3.633762266074614E-8	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999996955145712	WITHOUT_CLASSIFICATION	3.044854288428958E-7	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999996781444843	WITHOUT_CLASSIFICATION	3.2185551574928993E-7	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999996781444843	WITHOUT_CLASSIFICATION	3.2185551574928993E-7	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999996853595636	WITHOUT_CLASSIFICATION	3.146404363877722E-7	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999996763160564	WITHOUT_CLASSIFICATION	3.236839436495613E-7	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999996617410636	WITHOUT_CLASSIFICATION	3.382589363509125E-7	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999995806712272	WITHOUT_CLASSIFICATION	4.1932877276168175E-7	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999995819308771	WITHOUT_CLASSIFICATION	4.18069122809684E-7	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999997222640321	WITHOUT_CLASSIFICATION	2.777359679529475E-7	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999997148916498	WITHOUT_CLASSIFICATION	2.851083500990526E-7	TEST
// line 785	WITHOUT_CLASSIFICATION	0.999999706645401	WITHOUT_CLASSIFICATION	2.9335459890632316E-7	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999996815789489	WITHOUT_CLASSIFICATION	3.1842105105033156E-7	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999996526505404	WITHOUT_CLASSIFICATION	3.4734945959512037E-7	TEST
// line 812	WITHOUT_CLASSIFICATION	0.999999679652555	WITHOUT_CLASSIFICATION	3.203474450840686E-7	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999996553282466	WITHOUT_CLASSIFICATION	3.446717533462142E-7	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999995269432419	WITHOUT_CLASSIFICATION	4.730567580425526E-7	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999996868150548	WITHOUT_CLASSIFICATION	3.1318494521966306E-7	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999996830025352	WITHOUT_CLASSIFICATION	3.1699746483019145E-7	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999996797500454	WITHOUT_CLASSIFICATION	3.202499545921E-7	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999996550422868	WITHOUT_CLASSIFICATION	3.4495771311043325E-7	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999996551565845	WITHOUT_CLASSIFICATION	3.4484341546407316E-7	TEST
// line 929	WITHOUT_CLASSIFICATION	0.999999570527475	WITHOUT_CLASSIFICATION	4.2947252493811603E-7	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999996433769482	WITHOUT_CLASSIFICATION	3.566230517648327E-7	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999996800735834	WITHOUT_CLASSIFICATION	3.1992641669069417E-7	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999996474437534	WITHOUT_CLASSIFICATION	3.5255624662240385E-7	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999996380949246	WITHOUT_CLASSIFICATION	3.6190507535785487E-7	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999997079971822	WITHOUT_CLASSIFICATION	2.9200281787833094E-7	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999996919847717	WITHOUT_CLASSIFICATION	3.0801522823577604E-7	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999995477607736	WITHOUT_CLASSIFICATION	4.5223922651692195E-7	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999997426940994	WITHOUT_CLASSIFICATION	2.57305900665411E-7	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999996833126358	WITHOUT_CLASSIFICATION	3.166873641771843E-7	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999997070166132	WITHOUT_CLASSIFICATION	2.929833867542069E-7	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999997235563222	WITHOUT_CLASSIFICATION	2.764436778956857E-7	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.999999707804452	WITHOUT_CLASSIFICATION	2.9219554795793193E-7	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999996450597358	WITHOUT_CLASSIFICATION	3.5494026422142143E-7	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999997459440149	WITHOUT_CLASSIFICATION	2.540559851739684E-7	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999997173897401	WITHOUT_CLASSIFICATION	2.826102598882506E-7	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999996080154626	WITHOUT_CLASSIFICATION	3.9198453744299144E-7	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999997130415191	WITHOUT_CLASSIFICATION	2.8695848092253695E-7	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999996261936214	WITHOUT_CLASSIFICATION	3.7380637859079397E-7	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999996563849116	WITHOUT_CLASSIFICATION	3.436150884178667E-7	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999996961574539	WITHOUT_CLASSIFICATION	3.0384254609084214E-7	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999995108690459	WITHOUT_CLASSIFICATION	4.891309540965908E-7	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999996496685538	WITHOUT_CLASSIFICATION	3.5033144623357123E-7	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999995458256927	WITHOUT_CLASSIFICATION	4.541743072369498E-7	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999996075698835	WITHOUT_CLASSIFICATION	3.924301165576129E-7	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999996405077219	WITHOUT_CLASSIFICATION	3.594922780465715E-7	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999995721772875	WITHOUT_CLASSIFICATION	4.2782271238015756E-7	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999997033674293	WITHOUT_CLASSIFICATION	2.966325706554643E-7	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999997487924702	WITHOUT_CLASSIFICATION	2.5120752977275707E-7	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999996566561958	WITHOUT_CLASSIFICATION	3.433438041823907E-7	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999996695659222	WITHOUT_CLASSIFICATION	3.304340777397033E-7	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999996433346081	WITHOUT_CLASSIFICATION	3.566653918866833E-7	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999996176340759	WITHOUT_CLASSIFICATION	3.8236592404794417E-7	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999997221672822	WITHOUT_CLASSIFICATION	2.778327178282032E-7	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999996906810217	WITHOUT_CLASSIFICATION	3.093189782622387E-7	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999995596612437	WITHOUT_CLASSIFICATION	4.4033875639344985E-7	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999995596612437	WITHOUT_CLASSIFICATION	4.4033875639344985E-7	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999997382757013	WITHOUT_CLASSIFICATION	2.617242986681826E-7	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999996691476781	WITHOUT_CLASSIFICATION	3.3085232181457113E-7	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999996567101154	WITHOUT_CLASSIFICATION	3.4328988460803636E-7	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999997202213327	WITHOUT_CLASSIFICATION	2.79778667243927E-7	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999996683369246	WITHOUT_CLASSIFICATION	3.3166307550005234E-7	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.999999683545693	WITHOUT_CLASSIFICATION	3.164543070077281E-7	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999997445673867	WITHOUT_CLASSIFICATION	2.5543261318707073E-7	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999997444921118	WITHOUT_CLASSIFICATION	2.5550788808890273E-7	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999997105922317	WITHOUT_CLASSIFICATION	2.894077683583142E-7	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999997034423276	WITHOUT_CLASSIFICATION	2.9655767243427435E-7	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999961956197871	WITHOUT_CLASSIFICATION	3.804380212850566E-6	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999961956197871	WITHOUT_CLASSIFICATION	3.804380212850566E-6	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9999993890564352	WITHOUT_CLASSIFICATION	6.109435648042474E-7	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999973490087753	WITHOUT_CLASSIFICATION	2.650991224616228E-6	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999990254747616	WITHOUT_CLASSIFICATION	9.745252383854915E-7	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999997491617351	WITHOUT_CLASSIFICATION	2.5083826499595335E-7	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999863020516	WITHOUT_CLASSIFICATION	1.3697948444436802E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999863020516	WITHOUT_CLASSIFICATION	1.3697948444436802E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999863020516	WITHOUT_CLASSIFICATION	1.3697948444436802E-8	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999863020516	WITHOUT_CLASSIFICATION	1.3697948444436802E-8	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9884789764786379	WITHOUT_CLASSIFICATION	0.011521023521362087	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999958883684005	WITHOUT_CLASSIFICATION	4.111631599548023E-6	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999995376401278	WITHOUT_CLASSIFICATION	4.623598722207345E-7	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999994440402622	WITHOUT_CLASSIFICATION	5.559597378273608E-7	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999994871757963	WITHOUT_CLASSIFICATION	5.128242037410936E-7	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999996436414119	WITHOUT_CLASSIFICATION	3.56358587985926E-7	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999997023598567	WITHOUT_CLASSIFICATION	2.9764014328742734E-7	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999996922877586	WITHOUT_CLASSIFICATION	3.077122413608328E-7	TEST
// line 500	WITHOUT_CLASSIFICATION	0.999999682748363	WITHOUT_CLASSIFICATION	3.17251636946147E-7	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999997285195523	WITHOUT_CLASSIFICATION	2.714804476926677E-7	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999996961130183	WITHOUT_CLASSIFICATION	3.0388698161227015E-7	TEST
// line 582	WITHOUT_CLASSIFICATION	0.99999965693132	WITHOUT_CLASSIFICATION	3.4306867998835006E-7	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999997089455563	WITHOUT_CLASSIFICATION	2.9105444364463625E-7	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999996032561042	WITHOUT_CLASSIFICATION	3.9674389581573226E-7	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999996721236872	WITHOUT_CLASSIFICATION	3.2787631275320267E-7	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999995483031267	WITHOUT_CLASSIFICATION	4.516968733568429E-7	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999997145951791	WITHOUT_CLASSIFICATION	2.8540482091031437E-7	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999997057839223	WITHOUT_CLASSIFICATION	2.9421607766360876E-7	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999995263466585	WITHOUT_CLASSIFICATION	4.736533414464763E-7	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999996859763419	WITHOUT_CLASSIFICATION	3.140236580649829E-7	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999996638145473	WITHOUT_CLASSIFICATION	3.361854526614472E-7	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999996121340364	WITHOUT_CLASSIFICATION	3.8786596351726514E-7	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999996328701136	WITHOUT_CLASSIFICATION	3.671298863593275E-7	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999996498193674	WITHOUT_CLASSIFICATION	3.501806325879551E-7	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999996209303146	WITHOUT_CLASSIFICATION	3.790696853156498E-7	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999997374025698	WITHOUT_CLASSIFICATION	2.625974302454708E-7	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999997227088379	WITHOUT_CLASSIFICATION	2.772911622299502E-7	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999996166833964	WITHOUT_CLASSIFICATION	3.833166034976702E-7	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999996923314945	WITHOUT_CLASSIFICATION	3.0766850535527964E-7	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.999999656462597	WITHOUT_CLASSIFICATION	3.435374028971924E-7	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999997254718438	WITHOUT_CLASSIFICATION	2.7452815618099886E-7	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999996816644835	WITHOUT_CLASSIFICATION	3.183355165472264E-7	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999996478352015	WITHOUT_CLASSIFICATION	3.5216479855553263E-7	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.999999723975802	WITHOUT_CLASSIFICATION	2.7602419810716416E-7	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999996861326885	WITHOUT_CLASSIFICATION	3.138673114563605E-7	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999995659992558	WITHOUT_CLASSIFICATION	4.3400074426343947E-7	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999996326027951	WITHOUT_CLASSIFICATION	3.6739720492895664E-7	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999996268715273	WITHOUT_CLASSIFICATION	3.731284726813548E-7	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999996141368108	WITHOUT_CLASSIFICATION	3.8586318913004043E-7	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999996121802113	WITHOUT_CLASSIFICATION	3.8781978870638817E-7	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999996572423501	WITHOUT_CLASSIFICATION	3.42757649967082E-7	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999996011842451	WITHOUT_CLASSIFICATION	3.988157548700493E-7	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999997476723378	WITHOUT_CLASSIFICATION	2.5232766221236167E-7	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.999999642025734	WITHOUT_CLASSIFICATION	3.579742661053584E-7	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.999999714365248	WITHOUT_CLASSIFICATION	2.8563475195550227E-7	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.999999718001718	WITHOUT_CLASSIFICATION	2.819982819672127E-7	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999996467105234	WITHOUT_CLASSIFICATION	3.5328947652130205E-7	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999997023794389	WITHOUT_CLASSIFICATION	2.976205610749053E-7	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999996891004918	WITHOUT_CLASSIFICATION	3.108995081962265E-7	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999996676504664	WITHOUT_CLASSIFICATION	3.3234953361938885E-7	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999997096800258	WITHOUT_CLASSIFICATION	2.903199742694039E-7	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999997128328212	WITHOUT_CLASSIFICATION	2.871671788442653E-7	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999996853750401	WITHOUT_CLASSIFICATION	3.1462495995444534E-7	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999996423062325	WITHOUT_CLASSIFICATION	3.576937674770508E-7	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999996981937106	WITHOUT_CLASSIFICATION	3.018062893978336E-7	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999996757384626	WITHOUT_CLASSIFICATION	3.242615374156158E-7	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.99999969683668	WITHOUT_CLASSIFICATION	3.0316332001930716E-7	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.999999665615427	WITHOUT_CLASSIFICATION	3.343845730684571E-7	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999996470221648	WITHOUT_CLASSIFICATION	3.529778351542093E-7	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999996983830395	WITHOUT_CLASSIFICATION	3.0161696057332003E-7	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999999866847297	WITHOUT_CLASSIFICATION	1.331527044453384E-8	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996469268799	WITHOUT_CLASSIFICATION	3.53073120155177E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996469268799	WITHOUT_CLASSIFICATION	3.53073120155177E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996469268799	WITHOUT_CLASSIFICATION	3.53073120155177E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996469268799	WITHOUT_CLASSIFICATION	3.53073120155177E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996469268799	WITHOUT_CLASSIFICATION	3.53073120155177E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996469268799	WITHOUT_CLASSIFICATION	3.53073120155177E-7	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996469268799	WITHOUT_CLASSIFICATION	3.53073120155177E-7	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999486341633	WITHOUT_CLASSIFICATION	5.1365836788477525E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999486341633	WITHOUT_CLASSIFICATION	5.1365836788477525E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999486341633	WITHOUT_CLASSIFICATION	5.1365836788477525E-8	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999999486341633	WITHOUT_CLASSIFICATION	5.1365836788477525E-8	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999971826015996	WITHOUT_CLASSIFICATION	2.817398400428744E-6	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999971826015996	WITHOUT_CLASSIFICATION	2.817398400428744E-6	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999995565449371	WITHOUT_CLASSIFICATION	4.4345506293319606E-7	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999802852799	WITHOUT_CLASSIFICATION	1.9714720003235184E-8	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999802852799	WITHOUT_CLASSIFICATION	1.9714720003235184E-8	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999999285655911	WITHOUT_CLASSIFICATION	7.143440896026438E-8	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999999358559687	WITHOUT_CLASSIFICATION	6.414403130927223E-8	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999936432614	WITHOUT_CLASSIFICATION	6.356738469923302E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999936432614	WITHOUT_CLASSIFICATION	6.356738469923302E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999936432614	WITHOUT_CLASSIFICATION	6.356738469923302E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999936432614	WITHOUT_CLASSIFICATION	6.356738469923302E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999936432614	WITHOUT_CLASSIFICATION	6.356738469923302E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999936432614	WITHOUT_CLASSIFICATION	6.356738469923302E-9	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999936432614	WITHOUT_CLASSIFICATION	6.356738469923302E-9	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999959008145	WITHOUT_CLASSIFICATION	4.099185566106242E-9	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999889027106	WITHOUT_CLASSIFICATION	1.1097289522140443E-8	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999999888330352	WITHOUT_CLASSIFICATION	1.1166964789657463E-7	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999999888330352	WITHOUT_CLASSIFICATION	1.1166964789657463E-7	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999925102199	WITHOUT_CLASSIFICATION	7.489780180105144E-9	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999997722405128	WITHOUT_CLASSIFICATION	2.2775948713232342E-7	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999997722405128	WITHOUT_CLASSIFICATION	2.2775948713232342E-7	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.999999988631422	WITHOUT_CLASSIFICATION	1.1368577917575553E-8	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9715400016161329	WITHOUT_CLASSIFICATION	0.028459998383867105	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999999447506919	WITHOUT_CLASSIFICATION	5.524930816993568E-8	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999999876512603	WITHOUT_CLASSIFICATION	1.2348739685169196E-8	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999997380048138	WITHOUT_CLASSIFICATION	2.6199518623756717E-7	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999998566898971	WITHOUT_CLASSIFICATION	1.4331010284292767E-7	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999997012735142	WITHOUT_CLASSIFICATION	2.987264857875732E-7	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999999788515638	WITHOUT_CLASSIFICATION	2.114843624073979E-8	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999528533884401	WITHOUT_CLASSIFICATION	4.714661155990728E-5	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.999998749444389	WITHOUT_CLASSIFICATION	1.2505556110296705E-6	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9959506907140429	WITHOUT_CLASSIFICATION	0.004049309285957133	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.999999998770626	WITHOUT_CLASSIFICATION	1.2293739999420762E-9	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999689622683	WITHOUT_CLASSIFICATION	3.1037731706450525E-8	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999928341510449	WITHOUT_CLASSIFICATION	7.165848955036818E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999992242701143	WITHOUT_CLASSIFICATION	7.757298857223168E-7	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999999700599381	WITHOUT_CLASSIFICATION	2.9940061883789166E-8	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999998771416277	WITHOUT_CLASSIFICATION	1.2285837227632735E-7	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999962455551054	WITHOUT_CLASSIFICATION	3.754444894502762E-6	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998258785839	WITHOUT_CLASSIFICATION	1.7412141617237372E-7	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999998258785839	WITHOUT_CLASSIFICATION	1.7412141617237372E-7	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999997641787352	WITHOUT_CLASSIFICATION	2.358212648021743E-7	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999770662094	WITHOUT_CLASSIFICATION	2.293379056232133E-8	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999574087471	WITHOUT_CLASSIFICATION	4.259125287773003E-8	TEST
//switch	WITHOUT_CLASSIFICATION	0.9999809119842281	WITHOUT_CLASSIFICATION	1.9088015771907913E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999881919771981	WITHOUT_CLASSIFICATION	1.1808022801952739E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999881919771981	WITHOUT_CLASSIFICATION	1.1808022801952739E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999881919771981	WITHOUT_CLASSIFICATION	1.1808022801952739E-5	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999998867363937	WITHOUT_CLASSIFICATION	1.1326360623545242E-7	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999995912588946	WITHOUT_CLASSIFICATION	4.087411055112091E-7	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999999891309013	WITHOUT_CLASSIFICATION	1.086909885837704E-8	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999999740843603	WITHOUT_CLASSIFICATION	2.5915639698115446E-8	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999995389119906	WITHOUT_CLASSIFICATION	4.6108800937184787E-7	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999512381177	WITHOUT_CLASSIFICATION	4.876188241575301E-8	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999085825197	WITHOUT_CLASSIFICATION	9.141748025126424E-8	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999998191870703	WITHOUT_CLASSIFICATION	1.8081292969220676E-7	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999999997849699	WITHOUT_CLASSIFICATION	2.150300490440688E-10	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999998685299969	WITHOUT_CLASSIFICATION	1.3147000314987728E-7	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999999368274651	WITHOUT_CLASSIFICATION	6.317253481075647E-8	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999999842394666	WITHOUT_CLASSIFICATION	1.5760533457477315E-8	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9932717376854755	WITHOUT_CLASSIFICATION	0.006728262314524525	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999976879839685	WITHOUT_CLASSIFICATION	2.3120160314951135E-6	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999997711890787	WITHOUT_CLASSIFICATION	2.2881092122228294E-7	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999069428048192	WITHOUT_CLASSIFICATION	9.30571951807828E-5	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999999390685946	WITHOUT_CLASSIFICATION	6.093140533057098E-8	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999497847254836	WITHOUT_CLASSIFICATION	5.0215274516403844E-5	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999999981278366	WITHOUT_CLASSIFICATION	1.8721633358302506E-9	TEST
