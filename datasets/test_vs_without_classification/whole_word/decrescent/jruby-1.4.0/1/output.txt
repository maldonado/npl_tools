// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest	TEST	0.9999790657026079	WITHOUT_CLASSIFICATION	2.093429739216028E-5	TEST
// TODO make an assert here	TEST	0.9983522561637421	WITHOUT_CLASSIFICATION	0.001647743836257763	TEST
// TODO add test methods here. The name must begin with 'test'. For example:	TEST	0.8800195954056856	WITHOUT_CLASSIFICATION	0.1199804045943144	TEST
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil	TEST	0.9961461003113067	WITHOUT_CLASSIFICATION	0.003853899688693242	TEST
// if the method is extending something, then we have // to test if the handler is initialized...	TEST	0.9995279766733696	WITHOUT_CLASSIFICATION	4.720233266303449E-4	TEST
// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest	TEST	0.9999945616462044	WITHOUT_CLASSIFICATION	5.438353795672219E-6	TEST
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9998850070075465	WITHOUT_CLASSIFICATION	1.1499299245359789E-4	TEST
// line 335	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999699303512017	WITHOUT_CLASSIFICATION	3.0069648798244092E-5	TEST
// line 362	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
// line 391	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/* ^D */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
/* ^Z */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLen 496	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9998012051754366	WITHOUT_CLASSIFICATION	1.9879482456351853E-4	TEST
//Do nothing	WITHOUT_CLASSIFICATION	0.9998012051754366	WITHOUT_CLASSIFICATION	1.9879482456351853E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// switch	WITHOUT_CLASSIFICATION	0.9998890766948749	WITHOUT_CLASSIFICATION	1.1092330512511073E-4	TEST
// return result	WITHOUT_CLASSIFICATION	0.999982699623717	WITHOUT_CLASSIFICATION	1.7300376282946215E-5	TEST
// name	WITHOUT_CLASSIFICATION	0.9998437727941584	WITHOUT_CLASSIFICATION	1.5622720584157284E-4	TEST
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999481261936171	WITHOUT_CLASSIFICATION	5.187380638296902E-5	TEST
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999581207371188	WITHOUT_CLASSIFICATION	4.18792628812286E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999582150497823	WITHOUT_CLASSIFICATION	4.178495021765217E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999582150497823	WITHOUT_CLASSIFICATION	4.178495021765217E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999582150497823	WITHOUT_CLASSIFICATION	4.178495021765217E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999582150497823	WITHOUT_CLASSIFICATION	4.178495021765217E-5	TEST
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.999932901387745	WITHOUT_CLASSIFICATION	6.709861225493532E-5	TEST
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9998671087719654	WITHOUT_CLASSIFICATION	1.3289122803458473E-4	TEST
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9998900203800779	WITHOUT_CLASSIFICATION	1.099796199220729E-4	TEST
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999305470108845	WITHOUT_CLASSIFICATION	6.945298911549892E-5	TEST
// Version information:	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999953898881163	WITHOUT_CLASSIFICATION	4.610111883762168E-6	TEST
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.999964479170173	WITHOUT_CLASSIFICATION	3.552082982704871E-5	TEST
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999902023661241	WITHOUT_CLASSIFICATION	9.79763387589744E-6	TEST
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999995660250033	WITHOUT_CLASSIFICATION	4.3397499672927814E-7	TEST
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9949207063274395	WITHOUT_CLASSIFICATION	0.005079293672560587	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999928190979985	WITHOUT_CLASSIFICATION	7.180902001513463E-5	TEST
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999489347123048	WITHOUT_CLASSIFICATION	5.106528769520922E-5	TEST
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9996194770641615	WITHOUT_CLASSIFICATION	3.805229358385107E-4	TEST
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999409964960985	WITHOUT_CLASSIFICATION	5.90035039014823E-5	TEST
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999215426961027	WITHOUT_CLASSIFICATION	7.845730389735704E-5	TEST
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999333728715303	WITHOUT_CLASSIFICATION	6.662712846968895E-5	TEST
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999862159221381	WITHOUT_CLASSIFICATION	1.3784077861963939E-5	TEST
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999582150497823	WITHOUT_CLASSIFICATION	4.178495021765217E-5	TEST
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999172226028986	WITHOUT_CLASSIFICATION	8.277739710147121E-5	TEST
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999358545690449	WITHOUT_CLASSIFICATION	6.414543095508759E-5	TEST
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999157647309512	WITHOUT_CLASSIFICATION	8.423526904879153E-5	TEST
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9998152859136739	WITHOUT_CLASSIFICATION	1.8471408632611538E-4	TEST
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999625164051921	WITHOUT_CLASSIFICATION	3.748359480792812E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999789139934101	WITHOUT_CLASSIFICATION	2.1086006589985655E-5	TEST
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.999968841752137	WITHOUT_CLASSIFICATION	3.115824786311144E-5	TEST
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9997913855064176	WITHOUT_CLASSIFICATION	2.086144935824066E-4	TEST
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9998520473550213	WITHOUT_CLASSIFICATION	1.4795264497865536E-4	TEST
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999691115628005	WITHOUT_CLASSIFICATION	3.088843719944786E-5	TEST
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9998356056191164	WITHOUT_CLASSIFICATION	1.643943808835954E-4	TEST
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9997684532369823	WITHOUT_CLASSIFICATION	2.315467630177537E-4	TEST
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999318265072494	WITHOUT_CLASSIFICATION	6.817349275053021E-5	TEST
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999275664938868	WITHOUT_CLASSIFICATION	7.243350611314028E-5	TEST
// RubySignal	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999204321010533	WITHOUT_CLASSIFICATION	7.956789894677804E-5	TEST
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9980053728715554	WITHOUT_CLASSIFICATION	0.0019946271284444965	TEST
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999890644892511	WITHOUT_CLASSIFICATION	1.0935510748967147E-5	TEST
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999735482839059	WITHOUT_CLASSIFICATION	2.6451716094044774E-5	TEST
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.999940306544231	WITHOUT_CLASSIFICATION	5.9693455769030866E-5	TEST
//io.finish();	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9995744688938067	WITHOUT_CLASSIFICATION	4.2553110619328983E-4	TEST
// hmm...	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999395291131564	WITHOUT_CLASSIFICATION	6.0470886843660935E-5	TEST
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999385718260766	WITHOUT_CLASSIFICATION	6.142817392332838E-5	TEST
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9998853309938528	WITHOUT_CLASSIFICATION	1.1466900614721034E-4	TEST
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999559928569012	WITHOUT_CLASSIFICATION	4.400714309870633E-5	TEST
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999230564629871	WITHOUT_CLASSIFICATION	7.694353701288544E-5	TEST
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9998136111221417	WITHOUT_CLASSIFICATION	1.8638887785827897E-4	TEST
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999511363472668	WITHOUT_CLASSIFICATION	4.886365273307864E-5	TEST
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9997393929408488	WITHOUT_CLASSIFICATION	2.606070591512572E-4	TEST
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999888445756638	WITHOUT_CLASSIFICATION	1.1155424336130863E-5	TEST
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.999982055003698	WITHOUT_CLASSIFICATION	1.794499630202502E-5	TEST
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999718980928504	WITHOUT_CLASSIFICATION	2.810190714959244E-5	TEST
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999905927181969	WITHOUT_CLASSIFICATION	9.407281803059776E-6	TEST
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9982397120615055	WITHOUT_CLASSIFICATION	0.0017602879384945437	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999915089453844	WITHOUT_CLASSIFICATION	8.49105461559015E-5	TEST
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999974124721402	WITHOUT_CLASSIFICATION	2.587527859793006E-6	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999916691079817	WITHOUT_CLASSIFICATION	8.330892018308504E-5	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999470380892129	WITHOUT_CLASSIFICATION	5.296191078713862E-5	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999141051843381	WITHOUT_CLASSIFICATION	8.589481566190975E-5	TEST
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999141051843381	WITHOUT_CLASSIFICATION	8.589481566190975E-5	TEST
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9998389180067813	WITHOUT_CLASSIFICATION	1.6108199321879747E-4	TEST
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999621872988982	WITHOUT_CLASSIFICATION	3.781270110178982E-5	TEST
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9998664401198556	WITHOUT_CLASSIFICATION	1.335598801444383E-4	TEST
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999753961897541	WITHOUT_CLASSIFICATION	2.4603810246026205E-5	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999794291713326	WITHOUT_CLASSIFICATION	2.0570828667295642E-5	TEST
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9997030482476079	WITHOUT_CLASSIFICATION	2.9695175239207946E-4	TEST
// ???	WITHOUT_CLASSIFICATION	0.9998931943674901	WITHOUT_CLASSIFICATION	1.0680563250982943E-4	TEST
// PID	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999916691079817	WITHOUT_CLASSIFICATION	8.330892018308504E-5	TEST
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999927202769221	WITHOUT_CLASSIFICATION	7.279723077832737E-6	TEST
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9995823346143707	WITHOUT_CLASSIFICATION	4.1766538562934444E-4	TEST
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999041067360162	WITHOUT_CLASSIFICATION	9.589326398392402E-5	TEST
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999768793875476	WITHOUT_CLASSIFICATION	2.3120612452390763E-5	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999212033330672	WITHOUT_CLASSIFICATION	7.87966669327683E-5	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999212033330672	WITHOUT_CLASSIFICATION	7.87966669327683E-5	TEST
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999212033330672	WITHOUT_CLASSIFICATION	7.87966669327683E-5	TEST
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999792384059712	WITHOUT_CLASSIFICATION	2.076159402863467E-5	TEST
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.999976950872621	WITHOUT_CLASSIFICATION	2.304912737902078E-5	TEST
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999908317065527	WITHOUT_CLASSIFICATION	9.168293447274063E-6	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9985758506615438	WITHOUT_CLASSIFICATION	0.001424149338456217	TEST
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999881480306324	WITHOUT_CLASSIFICATION	1.1851969367561431E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999433930060694	WITHOUT_CLASSIFICATION	5.660699393066722E-5	TEST
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9994672363402479	WITHOUT_CLASSIFICATION	5.327636597520222E-4	TEST
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999360977567223	WITHOUT_CLASSIFICATION	6.390224327767472E-5	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999718144885845	WITHOUT_CLASSIFICATION	2.8185511415541675E-5	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999013968931278	WITHOUT_CLASSIFICATION	9.860310687214653E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999423191252359	WITHOUT_CLASSIFICATION	5.7680874764051116E-5	TEST
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999423191252359	WITHOUT_CLASSIFICATION	5.7680874764051116E-5	TEST
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999303447231416	WITHOUT_CLASSIFICATION	6.965527685842209E-5	TEST
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999508273369747	WITHOUT_CLASSIFICATION	4.917266302515828E-5	TEST
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999165628487445	WITHOUT_CLASSIFICATION	8.34371512555225E-5	TEST
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999477904162042	WITHOUT_CLASSIFICATION	5.2209583795928986E-5	TEST
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999280876473192	WITHOUT_CLASSIFICATION	7.191235268082641E-5	TEST
// extras flag	WITHOUT_CLASSIFICATION	0.9999586756014711	WITHOUT_CLASSIFICATION	4.132439852885832E-5	TEST
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// ...nothing	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// utility method	WITHOUT_CLASSIFICATION	0.9999629775263306	WITHOUT_CLASSIFICATION	3.702247366944301E-5	TEST
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.999986391372184	WITHOUT_CLASSIFICATION	1.360862781609757E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999916691079817	WITHOUT_CLASSIFICATION	8.330892018308504E-5	TEST
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999471947030893	WITHOUT_CLASSIFICATION	5.2805296910698244E-5	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999151737089975	WITHOUT_CLASSIFICATION	8.482629100242897E-5	TEST
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999673412315696	WITHOUT_CLASSIFICATION	3.265876843036105E-5	TEST
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9997690064276166	WITHOUT_CLASSIFICATION	2.3099357238352749E-4	TEST
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999185218952935	WITHOUT_CLASSIFICATION	8.147810470643483E-5	TEST
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999542121086736	WITHOUT_CLASSIFICATION	4.5787891326501255E-5	TEST
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.999817330284324	WITHOUT_CLASSIFICATION	1.8266971567603202E-4	TEST
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9996927008434862	WITHOUT_CLASSIFICATION	3.072991565138223E-4	TEST
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9998004464016927	WITHOUT_CLASSIFICATION	1.9955359830730902E-4	TEST
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999334811931296	WITHOUT_CLASSIFICATION	6.651880687032337E-5	TEST
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999937491299542	WITHOUT_CLASSIFICATION	6.2508700459221786E-6	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999575495634806	WITHOUT_CLASSIFICATION	4.245043651937454E-5	TEST
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9994409434937769	WITHOUT_CLASSIFICATION	5.590565062230284E-4	TEST
// recheck condition	WITHOUT_CLASSIFICATION	0.9999595881688461	WITHOUT_CLASSIFICATION	4.041183115387115E-5	TEST
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999363560977699	WITHOUT_CLASSIFICATION	6.364390223009876E-5	TEST
// Construct key services	WITHOUT_CLASSIFICATION	0.9999477826505139	WITHOUT_CLASSIFICATION	5.221734948617954E-5	TEST
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999867493657006	WITHOUT_CLASSIFICATION	1.3250634299291292E-5	TEST
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999881273133167	WITHOUT_CLASSIFICATION	1.1872686683466708E-5	TEST
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999604232096418	WITHOUT_CLASSIFICATION	3.9576790358125045E-5	TEST
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999939812753301	WITHOUT_CLASSIFICATION	6.018724669946284E-6	TEST
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999850960090438	WITHOUT_CLASSIFICATION	1.4903990956259251E-5	TEST
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9997428407748576	WITHOUT_CLASSIFICATION	2.571592251423612E-4	TEST
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.999968808472478	WITHOUT_CLASSIFICATION	3.119152752204934E-5	TEST
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999116400180176	WITHOUT_CLASSIFICATION	8.8359981982401E-5	TEST
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999421817230599	WITHOUT_CLASSIFICATION	5.7818276940052184E-5	TEST
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999226918538913	WITHOUT_CLASSIFICATION	7.730814610875022E-5	TEST
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999586647845333	WITHOUT_CLASSIFICATION	4.133521546680798E-5	TEST
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.999974474563505	WITHOUT_CLASSIFICATION	2.5525436495025116E-5	TEST
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999399592194259	WITHOUT_CLASSIFICATION	6.004078057406202E-5	TEST
// determine spacing	WITHOUT_CLASSIFICATION	0.9999585095429372	WITHOUT_CLASSIFICATION	4.1490457062851946E-5	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9994616696411761	WITHOUT_CLASSIFICATION	5.383303588239916E-4	TEST
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9998975200386203	WITHOUT_CLASSIFICATION	1.0247996137966077E-4	TEST
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9996533269432514	WITHOUT_CLASSIFICATION	3.46673056748628E-4	TEST
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9989352399307792	WITHOUT_CLASSIFICATION	0.0010647600692209078	TEST
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998292464276205	WITHOUT_CLASSIFICATION	1.7075357237950365E-4	TEST
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9969989417236982	WITHOUT_CLASSIFICATION	0.0030010582763017107	TEST
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999372759819042	WITHOUT_CLASSIFICATION	6.27240180958682E-5	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999420012318776	WITHOUT_CLASSIFICATION	5.799876812240837E-5	TEST
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999221351917623	WITHOUT_CLASSIFICATION	7.786480823770253E-5	TEST
// Default objects	WITHOUT_CLASSIFICATION	0.9999595191046717	WITHOUT_CLASSIFICATION	4.0480895328236624E-5	TEST
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9996491447675085	WITHOUT_CLASSIFICATION	3.508552324914123E-4	TEST
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9998476056697528	WITHOUT_CLASSIFICATION	1.5239433024720903E-4	TEST
// Java support	WITHOUT_CLASSIFICATION	0.9999698906377538	WITHOUT_CLASSIFICATION	3.0109362246245064E-5	TEST
// Parser stats	WITHOUT_CLASSIFICATION	0.9999580201123981	WITHOUT_CLASSIFICATION	4.197988760183694E-5	TEST
// Compilation	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999264282346572	WITHOUT_CLASSIFICATION	7.35717653428174E-5	TEST
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9998711427595649	WITHOUT_CLASSIFICATION	1.2885724043512403E-4	TEST
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9998251384513209	WITHOUT_CLASSIFICATION	1.7486154867905632E-4	TEST
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998370707581478	WITHOUT_CLASSIFICATION	1.6292924185228285E-4	TEST
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.999854959634175	WITHOUT_CLASSIFICATION	1.4504036582487656E-4	TEST
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999614581876027	WITHOUT_CLASSIFICATION	3.85418123973383E-5	TEST
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999269889621997	WITHOUT_CLASSIFICATION	7.30110378002501E-5	TEST
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9998313866273769	WITHOUT_CLASSIFICATION	1.686133726230898E-4	TEST
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9991478222755316	WITHOUT_CLASSIFICATION	8.52177724468439E-4	TEST
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.999996513620446	WITHOUT_CLASSIFICATION	3.486379554057112E-6	TEST
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999451360416464	WITHOUT_CLASSIFICATION	5.4863958353548984E-5	TEST
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// default options	WITHOUT_CLASSIFICATION	0.9999754403500691	WITHOUT_CLASSIFICATION	2.455964993082551E-5	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// EUC-JP	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// UTF-8	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// long name option	WITHOUT_CLASSIFICATION	0.9999460952256258	WITHOUT_CLASSIFICATION	5.390477437407665E-5	TEST
// conversion	WITHOUT_CLASSIFICATION	0.9999579763754616	WITHOUT_CLASSIFICATION	4.202362453836896E-5	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999150849230325	WITHOUT_CLASSIFICATION	8.491507696748198E-5	TEST
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9998360871760711	WITHOUT_CLASSIFICATION	1.6391282392895216E-4	TEST
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999424721814042	WITHOUT_CLASSIFICATION	5.7527818595678574E-5	TEST
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999539252112885	WITHOUT_CLASSIFICATION	4.6074788711487945E-5	TEST
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999185183100504	WITHOUT_CLASSIFICATION	8.14816899495668E-5	TEST
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999965718747895	WITHOUT_CLASSIFICATION	3.4281252105076108E-6	TEST
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999046396111179	WITHOUT_CLASSIFICATION	9.536038888216148E-5	TEST
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999415965627566	WITHOUT_CLASSIFICATION	5.840343724340767E-5	TEST
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999393755311419	WITHOUT_CLASSIFICATION	6.0624468858200156E-5	TEST
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999961398241451	WITHOUT_CLASSIFICATION	3.860175854858775E-6	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999365726856536	WITHOUT_CLASSIFICATION	6.342731434637895E-5	TEST
// must not reallocate	WITHOUT_CLASSIFICATION	0.999843802509896	WITHOUT_CLASSIFICATION	1.5619749010409948E-4	TEST
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999746753867592	WITHOUT_CLASSIFICATION	2.532461324083516E-5	TEST
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9998284982139817	WITHOUT_CLASSIFICATION	1.7150178601832886E-4	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9998512438939057	WITHOUT_CLASSIFICATION	1.4875610609439217E-4	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999863933590528	WITHOUT_CLASSIFICATION	1.3606640947223266E-5	TEST
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999265142743242	WITHOUT_CLASSIFICATION	7.348572567575696E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999789745864868	WITHOUT_CLASSIFICATION	2.1025413513236283E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999789745864868	WITHOUT_CLASSIFICATION	2.1025413513236283E-5	TEST
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999067229658989	WITHOUT_CLASSIFICATION	9.327703410121219E-5	TEST
// string given	WITHOUT_CLASSIFICATION	0.9999403977033986	WITHOUT_CLASSIFICATION	5.9602296601409635E-5	TEST
// hash given	WITHOUT_CLASSIFICATION	0.9999778925707198	WITHOUT_CLASSIFICATION	2.2107429280211547E-5	TEST
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999941397038585	WITHOUT_CLASSIFICATION	5.860296141501268E-6	TEST
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9995710150344252	WITHOUT_CLASSIFICATION	4.2898496557474195E-4	TEST
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999195773267375	WITHOUT_CLASSIFICATION	8.042267326255901E-5	TEST
// nothing	WITHOUT_CLASSIFICATION	0.9999195773267375	WITHOUT_CLASSIFICATION	8.042267326255901E-5	TEST
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.994672991604628	WITHOUT_CLASSIFICATION	0.005327008395371987	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.99997080331634	WITHOUT_CLASSIFICATION	2.9196683659954477E-5	TEST
// keep cr ?	WITHOUT_CLASSIFICATION	0.99997080331634	WITHOUT_CLASSIFICATION	2.9196683659954477E-5	TEST
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999524609478043	WITHOUT_CLASSIFICATION	4.7539052195743015E-5	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9995143680814186	WITHOUT_CLASSIFICATION	4.856319185814932E-4	TEST
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9995143680814186	WITHOUT_CLASSIFICATION	4.856319185814932E-4	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999599753259385	WITHOUT_CLASSIFICATION	4.002467406147023E-5	TEST
// modified	WITHOUT_CLASSIFICATION	0.9999599753259385	WITHOUT_CLASSIFICATION	4.002467406147023E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// QTRUE	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9998963666684092	WITHOUT_CLASSIFICATION	1.0363333159074457E-4	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999571747652849	WITHOUT_CLASSIFICATION	4.282523471509323E-5	TEST
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.999982957717325	WITHOUT_CLASSIFICATION	1.704228267498314E-5	TEST
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999693088520798	WITHOUT_CLASSIFICATION	3.069114792026309E-5	TEST
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999669662905702	WITHOUT_CLASSIFICATION	3.303370942974149E-5	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999412161821304	WITHOUT_CLASSIFICATION	5.8783817869647884E-5	TEST
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999941895449126	WITHOUT_CLASSIFICATION	5.8104550874751015E-6	TEST
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999412161821304	WITHOUT_CLASSIFICATION	5.8783817869647884E-5	TEST
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9920087056877882	WITHOUT_CLASSIFICATION	0.007991294312211695	TEST
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999542087578362	WITHOUT_CLASSIFICATION	4.579124216368503E-5	TEST
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9998761656164576	WITHOUT_CLASSIFICATION	1.238343835424419E-4	TEST
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999804284117464	WITHOUT_CLASSIFICATION	1.9571588253593964E-5	TEST
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999508876093798	WITHOUT_CLASSIFICATION	4.91123906202316E-5	TEST
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9994218086392906	WITHOUT_CLASSIFICATION	5.78191360709388E-4	TEST
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9992305609697609	WITHOUT_CLASSIFICATION	7.694390302391124E-4	TEST
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999613510425788	WITHOUT_CLASSIFICATION	3.8648957421281165E-5	TEST
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.999953802374732	WITHOUT_CLASSIFICATION	4.6197625267998224E-5	TEST
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9994550060975232	WITHOUT_CLASSIFICATION	5.449939024767809E-4	TEST
// file not given	WITHOUT_CLASSIFICATION	0.9999317740164603	WITHOUT_CLASSIFICATION	6.822598353967008E-5	TEST
// string to eval	WITHOUT_CLASSIFICATION	0.9999395118584595	WITHOUT_CLASSIFICATION	6.048814154052754E-5	TEST
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999492008370541	WITHOUT_CLASSIFICATION	5.0799162945922135E-5	TEST
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999758065860423	WITHOUT_CLASSIFICATION	2.4193413957553894E-5	TEST
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.999833141457343	WITHOUT_CLASSIFICATION	1.66858542656962E-4	TEST
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999117495577479	WITHOUT_CLASSIFICATION	8.825044225224243E-5	TEST
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9995619764741424	WITHOUT_CLASSIFICATION	4.380235258575656E-4	TEST
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9988929791480792	WITHOUT_CLASSIFICATION	0.0011070208519208665	TEST
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9997791285148916	WITHOUT_CLASSIFICATION	2.208714851083945E-4	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999094033634154	WITHOUT_CLASSIFICATION	9.059663658463234E-5	TEST
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999199065818439	WITHOUT_CLASSIFICATION	8.009341815611201E-5	TEST
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999697354089986	WITHOUT_CLASSIFICATION	3.0264591001397378E-5	TEST
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9998779831559478	WITHOUT_CLASSIFICATION	1.2201684405211092E-4	TEST
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9998954467529082	WITHOUT_CLASSIFICATION	1.0455324709179166E-4	TEST
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9998988784833303	WITHOUT_CLASSIFICATION	1.0112151666977292E-4	TEST
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.999854814707926	WITHOUT_CLASSIFICATION	1.451852920739252E-4	TEST
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999827146345813	WITHOUT_CLASSIFICATION	1.7285365418709765E-5	TEST
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999187820733444	WITHOUT_CLASSIFICATION	8.121792665556819E-5	TEST
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.999979351162702	WITHOUT_CLASSIFICATION	2.064883729797599E-5	TEST
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999983198588484	WITHOUT_CLASSIFICATION	1.6801411516332299E-6	TEST
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999972966011036	WITHOUT_CLASSIFICATION	2.7033988965114496E-6	TEST
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9998779831559478	WITHOUT_CLASSIFICATION	1.2201684405211092E-4	TEST
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.999984223372877	WITHOUT_CLASSIFICATION	1.5776627123081624E-5	TEST
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999865933378005	WITHOUT_CLASSIFICATION	1.3406662199539842E-5	TEST
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999792107665519	WITHOUT_CLASSIFICATION	2.0789233448108884E-5	TEST
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999386148837398	WITHOUT_CLASSIFICATION	6.138511626019956E-5	TEST
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999924336413517	WITHOUT_CLASSIFICATION	7.566358648260976E-6	TEST
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999792107665519	WITHOUT_CLASSIFICATION	2.0789233448108884E-5	TEST
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999855521469146	WITHOUT_CLASSIFICATION	1.4447853085236774E-5	TEST
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999841512918044	WITHOUT_CLASSIFICATION	1.584870819564737E-5	TEST
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999865320846009	WITHOUT_CLASSIFICATION	1.3467915399231093E-5	TEST
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999930960941451	WITHOUT_CLASSIFICATION	6.903905854901693E-6	TEST
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999940681296576	WITHOUT_CLASSIFICATION	5.931870342447278E-6	TEST
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999115380804702	WITHOUT_CLASSIFICATION	8.846191952987467E-5	TEST
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9998544791875571	WITHOUT_CLASSIFICATION	1.4552081244284244E-4	TEST
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999825206270236	WITHOUT_CLASSIFICATION	1.7479372976442787E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999591327159503	WITHOUT_CLASSIFICATION	4.086728404968412E-5	TEST
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9998663665405413	WITHOUT_CLASSIFICATION	1.336334594587935E-4	TEST
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999673295421416	WITHOUT_CLASSIFICATION	3.267045785841166E-5	TEST
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999401553318907	WITHOUT_CLASSIFICATION	5.984466810920727E-5	TEST
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.998402782948402	WITHOUT_CLASSIFICATION	0.001597217051597971	TEST
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9997032326404104	WITHOUT_CLASSIFICATION	2.9676735958954653E-4	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.999990098182977	WITHOUT_CLASSIFICATION	9.901817022860383E-6	TEST
// set to default thread group	WITHOUT_CLASSIFICATION	0.999990098182977	WITHOUT_CLASSIFICATION	9.901817022860383E-6	TEST
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9997435436293348	WITHOUT_CLASSIFICATION	2.5645637066518335E-4	TEST
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9997320307164671	WITHOUT_CLASSIFICATION	2.6796928353295683E-4	TEST
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9996723135682797	WITHOUT_CLASSIFICATION	3.276864317203394E-4	TEST
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.999964354281155	WITHOUT_CLASSIFICATION	3.5645718844904495E-5	TEST
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999859324136708	WITHOUT_CLASSIFICATION	1.4067586329100632E-5	TEST
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999025170619118	WITHOUT_CLASSIFICATION	9.748293808819547E-5	TEST
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999399409313737	WITHOUT_CLASSIFICATION	6.0059068626260086E-5	TEST
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999789621394747	WITHOUT_CLASSIFICATION	2.1037860525316618E-5	TEST
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9997215742054446	WITHOUT_CLASSIFICATION	2.7842579455541273E-4	TEST
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999934135238815	WITHOUT_CLASSIFICATION	6.586476118492673E-6	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999867652175528	WITHOUT_CLASSIFICATION	1.3234782447318318E-5	TEST
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999867652175528	WITHOUT_CLASSIFICATION	1.3234782447318318E-5	TEST
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999262063726455	WITHOUT_CLASSIFICATION	7.379362735451368E-5	TEST
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999940660673727	WITHOUT_CLASSIFICATION	5.933932627233437E-6	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9998689400960199	WITHOUT_CLASSIFICATION	1.310599039800114E-4	TEST
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999726802774536	WITHOUT_CLASSIFICATION	2.7319722546428173E-5	TEST
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9998676851919084	WITHOUT_CLASSIFICATION	1.323148080916185E-4	TEST
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999853810327701	WITHOUT_CLASSIFICATION	1.4618967229942276E-5	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999030869537006	WITHOUT_CLASSIFICATION	9.691304629935439E-5	TEST
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9998919659807685	WITHOUT_CLASSIFICATION	1.0803401923154994E-4	TEST
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999775355605712	WITHOUT_CLASSIFICATION	2.2464439428799054E-5	TEST
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.999890100710139	WITHOUT_CLASSIFICATION	1.0989928986106814E-4	TEST
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.999981617565549	WITHOUT_CLASSIFICATION	1.8382434450940986E-5	TEST
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9992896283400337	WITHOUT_CLASSIFICATION	7.103716599662476E-4	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999532149624563	WITHOUT_CLASSIFICATION	4.678503754383149E-5	TEST
// Return false here	WITHOUT_CLASSIFICATION	0.9999532149624563	WITHOUT_CLASSIFICATION	4.678503754383149E-5	TEST
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9996941269348525	WITHOUT_CLASSIFICATION	3.058730651474826E-4	TEST
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9998827615891814	WITHOUT_CLASSIFICATION	1.1723841081846267E-4	TEST
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999511536294291	WITHOUT_CLASSIFICATION	4.884637057088989E-5	TEST
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9998478986196844	WITHOUT_CLASSIFICATION	1.521013803156826E-4	TEST
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999287497898754	WITHOUT_CLASSIFICATION	7.125021012459127E-5	TEST
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9998687445379405	WITHOUT_CLASSIFICATION	1.3125546205954353E-4	TEST
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9980512907350244	WITHOUT_CLASSIFICATION	0.0019487092649755607	TEST
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999398372844649	WITHOUT_CLASSIFICATION	6.016271553501877E-5	TEST
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9998937917235909	WITHOUT_CLASSIFICATION	1.062082764091266E-4	TEST
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.999942053574704	WITHOUT_CLASSIFICATION	5.7946425295972434E-5	TEST
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9998689400960199	WITHOUT_CLASSIFICATION	1.310599039800114E-4	TEST
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9992262402679197	WITHOUT_CLASSIFICATION	7.737597320802242E-4	TEST
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999625831608624	WITHOUT_CLASSIFICATION	3.741683913765596E-5	TEST
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9994345847734007	WITHOUT_CLASSIFICATION	5.654152265993125E-4	TEST
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999904559647425	WITHOUT_CLASSIFICATION	9.544035257518068E-6	TEST
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.999941988695085	WITHOUT_CLASSIFICATION	5.801130491495238E-5	TEST
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999937871491669	WITHOUT_CLASSIFICATION	6.2128508331149315E-6	TEST
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9998547516980412	WITHOUT_CLASSIFICATION	1.4524830195879743E-4	TEST
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999822285744607	WITHOUT_CLASSIFICATION	1.777142553927979E-5	TEST
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999824418424839	WITHOUT_CLASSIFICATION	1.7558157516153973E-5	TEST
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999818886288089	WITHOUT_CLASSIFICATION	1.8111371191129012E-5	TEST
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999870474537857	WITHOUT_CLASSIFICATION	1.2952546214262753E-5	TEST
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9985766175884948	WITHOUT_CLASSIFICATION	0.0014233824115052456	TEST
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999363210867402	WITHOUT_CLASSIFICATION	6.367891325984399E-5	TEST
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999363691293048	WITHOUT_CLASSIFICATION	6.363087069521478E-5	TEST
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9996509404232163	WITHOUT_CLASSIFICATION	3.4905957678361705E-4	TEST
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999861562565394	WITHOUT_CLASSIFICATION	1.3843743460673199E-5	TEST
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9985043917855541	WITHOUT_CLASSIFICATION	0.0014956082144459704	TEST
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9998773432531649	WITHOUT_CLASSIFICATION	1.226567468351139E-4	TEST
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999166291871454	WITHOUT_CLASSIFICATION	8.337081285463074E-5	TEST
// rename is successful	WITHOUT_CLASSIFICATION	0.9998630101781595	WITHOUT_CLASSIFICATION	1.3698982184054713E-4	TEST
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999705119778266	WITHOUT_CLASSIFICATION	2.948802217348453E-5	TEST
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999797661447354	WITHOUT_CLASSIFICATION	2.0233855264596643E-5	TEST
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999164146604808	WITHOUT_CLASSIFICATION	8.358533951918033E-5	TEST
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9996687341313707	WITHOUT_CLASSIFICATION	3.3126586862927384E-4	TEST
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999465461373342	WITHOUT_CLASSIFICATION	5.345386266577679E-5	TEST
// 16 ?	WITHOUT_CLASSIFICATION	0.9999015055019732	WITHOUT_CLASSIFICATION	9.849449802679696E-5	TEST
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9998444281793593	WITHOUT_CLASSIFICATION	1.5557182064078346E-4	TEST
// size + 1;	WITHOUT_CLASSIFICATION	0.9999687197476701	WITHOUT_CLASSIFICATION	3.1280252329922025E-5	TEST
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9998722513786625	WITHOUT_CLASSIFICATION	1.2774862133746543E-4	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// ------------------------------	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// put implementation	WITHOUT_CLASSIFICATION	0.9999536934987765	WITHOUT_CLASSIFICATION	4.6306501223597315E-5	TEST
// get implementation	WITHOUT_CLASSIFICATION	0.999969353943686	WITHOUT_CLASSIFICATION	3.064605631409152E-5	TEST
// specialized for value	WITHOUT_CLASSIFICATION	0.9998995939765418	WITHOUT_CLASSIFICATION	1.0040602345827997E-4	TEST
// delete implementation	WITHOUT_CLASSIFICATION	0.9999613093378968	WITHOUT_CLASSIFICATION	3.8690662103056305E-5	TEST
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999817909250031	WITHOUT_CLASSIFICATION	1.8209074996962394E-5	TEST
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999393511883967	WITHOUT_CLASSIFICATION	6.0648811603209565E-5	TEST
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.999916691079817	WITHOUT_CLASSIFICATION	8.330892018308504E-5	TEST
// update the hash value	WITHOUT_CLASSIFICATION	0.9999777432801332	WITHOUT_CLASSIFICATION	2.2256719866776735E-5	TEST
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9992466128510996	WITHOUT_CLASSIFICATION	7.533871489004253E-4	TEST
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999220917201624	WITHOUT_CLASSIFICATION	7.790827983751584E-5	TEST
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999303447231416	WITHOUT_CLASSIFICATION	6.965527685842209E-5	TEST
// remain where we are	WITHOUT_CLASSIFICATION	0.9999071285773095	WITHOUT_CLASSIFICATION	9.287142269043882E-5	TEST
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9949490748976143	WITHOUT_CLASSIFICATION	0.005050925102385699	TEST
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999420012318776	WITHOUT_CLASSIFICATION	5.799876812240837E-5	TEST
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9998897291711883	WITHOUT_CLASSIFICATION	1.1027082881157074E-4	TEST
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9970764501725277	WITHOUT_CLASSIFICATION	0.0029235498274723325	TEST
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999991849355777	WITHOUT_CLASSIFICATION	8.150644222318539E-7	TEST
// first try as directory	WITHOUT_CLASSIFICATION	0.9999772480563598	WITHOUT_CLASSIFICATION	2.275194364026049E-5	TEST
// next as regular file	WITHOUT_CLASSIFICATION	0.9999785479151202	WITHOUT_CLASSIFICATION	2.145208487983194E-5	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9984669280729281	WITHOUT_CLASSIFICATION	0.0015330719270718184	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// NIO-based	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// Stream-based	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9993859887213093	WITHOUT_CLASSIFICATION	6.140112786907344E-4	TEST
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.999974705978575	WITHOUT_CLASSIFICATION	2.529402142509697E-5	TEST
// Constants for seek	WITHOUT_CLASSIFICATION	0.9998875164697484	WITHOUT_CLASSIFICATION	1.124835302515408E-4	TEST
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9997606306259463	WITHOUT_CLASSIFICATION	2.3936937405364553E-4	TEST
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999888208285078	WITHOUT_CLASSIFICATION	1.1179171492187412E-5	TEST
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999427604829	WITHOUT_CLASSIFICATION	5.723951709996034E-5	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998519314999179	WITHOUT_CLASSIFICATION	1.4806850008210594E-4	TEST
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999711584589807	WITHOUT_CLASSIFICATION	2.8841541019285108E-5	TEST
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9998754638988302	WITHOUT_CLASSIFICATION	1.2453610116974884E-4	TEST
// re-register	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9998769791342138	WITHOUT_CLASSIFICATION	1.23020865786206E-4	TEST
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.999570543515771	WITHOUT_CLASSIFICATION	4.2945648422898177E-4	TEST
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999607833971694	WITHOUT_CLASSIFICATION	3.921660283044679E-5	TEST
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9998784552264585	WITHOUT_CLASSIFICATION	1.2154477354162319E-4	TEST
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9998061844866599	WITHOUT_CLASSIFICATION	1.9381551334002187E-4	TEST
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999789917730688	WITHOUT_CLASSIFICATION	2.1008226931164926E-5	TEST
// use original modes	WITHOUT_CLASSIFICATION	0.9999644235058122	WITHOUT_CLASSIFICATION	3.557649418791958E-5	TEST
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.999959879630034	WITHOUT_CLASSIFICATION	4.012036996603828E-5	TEST
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9998486142269349	WITHOUT_CLASSIFICATION	1.5138577306508406E-4	TEST
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999413333020094	WITHOUT_CLASSIFICATION	5.866669799061581E-5	TEST
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999276542217691	WITHOUT_CLASSIFICATION	7.234577823087705E-5	TEST
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9994513699895543	WITHOUT_CLASSIFICATION	5.486300104457008E-4	TEST
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9995024286004028	WITHOUT_CLASSIFICATION	4.975713995972E-4	TEST
//Everything written	WITHOUT_CLASSIFICATION	0.9997513082410243	WITHOUT_CLASSIFICATION	2.4869175897569105E-4	TEST
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999561233621911	WITHOUT_CLASSIFICATION	4.387663780880383E-5	TEST
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9998403003188842	WITHOUT_CLASSIFICATION	1.5969968111587555E-4	TEST
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9994783087278285	WITHOUT_CLASSIFICATION	5.216912721714579E-4	TEST
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999793934368147	WITHOUT_CLASSIFICATION	2.0606563185226545E-5	TEST
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999522597539826	WITHOUT_CLASSIFICATION	4.774024601739495E-5	TEST
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9998929279925963	WITHOUT_CLASSIFICATION	1.0707200740373546E-4	TEST
// hmmmm	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9996975425002625	WITHOUT_CLASSIFICATION	3.0245749973743964E-4	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999307282723253	WITHOUT_CLASSIFICATION	6.927172767462654E-5	TEST
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999796971317193	WITHOUT_CLASSIFICATION	2.0302868280744758E-5	TEST
// Length to read	WITHOUT_CLASSIFICATION	0.9999761313388688	WITHOUT_CLASSIFICATION	2.386866113122306E-5	TEST
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9998034209139656	WITHOUT_CLASSIFICATION	1.9657908603443853E-4	TEST
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999251731647689	WITHOUT_CLASSIFICATION	7.482683523109877E-5	TEST
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999042971478252	WITHOUT_CLASSIFICATION	9.570285217474669E-5	TEST
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999621044137361	WITHOUT_CLASSIFICATION	3.789558626382014E-5	TEST
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999619846030378	WITHOUT_CLASSIFICATION	3.8015396962242755E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999959303147185	WITHOUT_CLASSIFICATION	4.069685281507001E-5	TEST
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999959303147185	WITHOUT_CLASSIFICATION	4.069685281507001E-5	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9994544253000999	WITHOUT_CLASSIFICATION	5.455746999001527E-4	TEST
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9978200313176977	WITHOUT_CLASSIFICATION	0.0021799686823022204	TEST
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9998622290586578	WITHOUT_CLASSIFICATION	1.3777094134225103E-4	TEST
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.996846600789081	WITHOUT_CLASSIFICATION	0.0031533992109190204	TEST
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999094386096627	WITHOUT_CLASSIFICATION	9.056139033718874E-5	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999525970068828	WITHOUT_CLASSIFICATION	4.740299311725883E-5	TEST
// write	WITHOUT_CLASSIFICATION	0.9997527216683486	WITHOUT_CLASSIFICATION	2.472783316513239E-4	TEST
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9995711552126703	WITHOUT_CLASSIFICATION	4.2884478732969537E-4	TEST
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999619279677995	WITHOUT_CLASSIFICATION	3.807203220060243E-5	TEST
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999395303252963	WITHOUT_CLASSIFICATION	6.046967470364682E-5	TEST
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999279335899799	WITHOUT_CLASSIFICATION	7.206641002001462E-5	TEST
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999593246426027	WITHOUT_CLASSIFICATION	4.067535739714169E-5	TEST
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.999896958958294	WITHOUT_CLASSIFICATION	1.0304104170600276E-4	TEST
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999896504052566	WITHOUT_CLASSIFICATION	1.0349594743327112E-5	TEST
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9998398544799589	WITHOUT_CLASSIFICATION	1.6014552004099894E-4	TEST
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9953044055843818	WITHOUT_CLASSIFICATION	0.004695594415618164	TEST
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999965329000206	WITHOUT_CLASSIFICATION	3.4670999794154064E-6	TEST
// The class of this object	WITHOUT_CLASSIFICATION	0.9999277248835171	WITHOUT_CLASSIFICATION	7.227511648286137E-5	TEST
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999598237283722	WITHOUT_CLASSIFICATION	4.0176271627815424E-5	TEST
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9991499126853411	WITHOUT_CLASSIFICATION	8.500873146588059E-4	TEST
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9998773432531649	WITHOUT_CLASSIFICATION	1.226567468351139E-4	TEST
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// for interface impls	WITHOUT_CLASSIFICATION	0.9998957526255149	WITHOUT_CLASSIFICATION	1.0424737448517371E-4	TEST
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9998749891199576	WITHOUT_CLASSIFICATION	1.250108800423429E-4	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999853825301007	WITHOUT_CLASSIFICATION	1.4617469899332311E-5	TEST
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.999993461567899	WITHOUT_CLASSIFICATION	6.538432101085428E-6	TEST
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999928190979985	WITHOUT_CLASSIFICATION	7.180902001513463E-5	TEST
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999910099554912	WITHOUT_CLASSIFICATION	8.990044508824188E-6	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999164598313997	WITHOUT_CLASSIFICATION	8.354016860034064E-5	TEST
// Struct methods	WITHOUT_CLASSIFICATION	0.9999666198086646	WITHOUT_CLASSIFICATION	3.338019133531934E-5	TEST
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.999545231062878	WITHOUT_CLASSIFICATION	4.5476893712206656E-4	TEST
// define access methods.	WITHOUT_CLASSIFICATION	0.999959653359181	WITHOUT_CLASSIFICATION	4.0346640818872714E-5	TEST
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9998463287461864	WITHOUT_CLASSIFICATION	1.5367125381354248E-4	TEST
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999356857642582	WITHOUT_CLASSIFICATION	6.431423574180164E-5	TEST
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999579847072095	WITHOUT_CLASSIFICATION	4.201529279046643E-5	TEST
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999599425974396	WITHOUT_CLASSIFICATION	4.005740256045563E-5	TEST
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999167426680201	WITHOUT_CLASSIFICATION	8.325733197987043E-5	TEST
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999690030574395	WITHOUT_CLASSIFICATION	3.09969425604137E-5	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.999964036611671	WITHOUT_CLASSIFICATION	3.596338832901222E-5	TEST
// Atomic ?	WITHOUT_CLASSIFICATION	0.999964036611671	WITHOUT_CLASSIFICATION	3.596338832901222E-5	TEST
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999607471917649	WITHOUT_CLASSIFICATION	3.925280823520002E-5	TEST
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999856020467045	WITHOUT_CLASSIFICATION	1.4397953295442127E-5	TEST
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9998896901936465	WITHOUT_CLASSIFICATION	1.1030980635349698E-4	TEST
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9998520088536974	WITHOUT_CLASSIFICATION	1.4799114630266317E-4	TEST
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999750318159104	WITHOUT_CLASSIFICATION	2.4968184089659087E-5	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.999950090085811	WITHOUT_CLASSIFICATION	4.990991418901517E-5	TEST
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9997688920282386	WITHOUT_CLASSIFICATION	2.3110797176146333E-4	TEST
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999344443141709	WITHOUT_CLASSIFICATION	6.555568582914134E-5	TEST
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9998468771938918	WITHOUT_CLASSIFICATION	1.531228061082495E-4	TEST
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999293088945026	WITHOUT_CLASSIFICATION	7.069110549736851E-5	TEST
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9996197913606832	WITHOUT_CLASSIFICATION	3.8020863931674564E-4	TEST
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9998901337774304	WITHOUT_CLASSIFICATION	1.0986622256961139E-4	TEST
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9989113454847293	WITHOUT_CLASSIFICATION	0.0010886545152708315	TEST
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.999789604187468	WITHOUT_CLASSIFICATION	2.103958125320671E-4	TEST
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9990576112209086	WITHOUT_CLASSIFICATION	9.423887790913171E-4	TEST
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9998506957765401	WITHOUT_CLASSIFICATION	1.4930422345998864E-4	TEST
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999694735543845	WITHOUT_CLASSIFICATION	3.0526445615603105E-5	TEST
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999820031222756	WITHOUT_CLASSIFICATION	1.7996877724413345E-5	TEST
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9994118612339987	WITHOUT_CLASSIFICATION	5.881387660013488E-4	TEST
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999648909330741	WITHOUT_CLASSIFICATION	3.510906692587794E-5	TEST
//FIXME warning	WITHOUT_CLASSIFICATION	0.9997475010652384	WITHOUT_CLASSIFICATION	2.52498934761665E-4	TEST
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999613305143865	WITHOUT_CLASSIFICATION	3.866948561341209E-5	TEST
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9998695958809436	WITHOUT_CLASSIFICATION	1.304041190564724E-4	TEST
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999832915046152	WITHOUT_CLASSIFICATION	1.670849538484974E-5	TEST
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999276178628302	WITHOUT_CLASSIFICATION	7.238213716976746E-5	TEST
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999984449199188	WITHOUT_CLASSIFICATION	1.5550800812517814E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999948085858402	WITHOUT_CLASSIFICATION	5.191414159758176E-6	TEST
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9994860478278218	WITHOUT_CLASSIFICATION	5.139521721781309E-4	TEST
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999231324185157	WITHOUT_CLASSIFICATION	7.68675814842579E-5	TEST
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999511363472668	WITHOUT_CLASSIFICATION	4.886365273307864E-5	TEST
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9992884527813651	WITHOUT_CLASSIFICATION	7.115472186349947E-4	TEST
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9996652283406053	WITHOUT_CLASSIFICATION	3.347716593946939E-4	TEST
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999860188207057	WITHOUT_CLASSIFICATION	1.398117929424585E-5	TEST
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999802907593486	WITHOUT_CLASSIFICATION	1.9709240651345873E-5	TEST
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.999954579377199	WITHOUT_CLASSIFICATION	4.542062280100213E-5	TEST
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999844343909581	WITHOUT_CLASSIFICATION	1.5565609041858237E-5	TEST
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999178688799845	WITHOUT_CLASSIFICATION	8.213112001552999E-5	TEST
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999178688799845	WITHOUT_CLASSIFICATION	8.213112001552999E-5	TEST
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999356955752372	WITHOUT_CLASSIFICATION	6.430442476275199E-5	TEST
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999191501941477	WITHOUT_CLASSIFICATION	8.084980585233901E-5	TEST
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999641150912064	WITHOUT_CLASSIFICATION	3.5884908793605824E-5	TEST
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999448103107019	WITHOUT_CLASSIFICATION	5.518968929798158E-5	TEST
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9994203400144367	WITHOUT_CLASSIFICATION	5.79659985563236E-4	TEST
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999690450051296	WITHOUT_CLASSIFICATION	3.095499487045384E-5	TEST
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9995820541869105	WITHOUT_CLASSIFICATION	4.1794581308956006E-4	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999685856036434	WITHOUT_CLASSIFICATION	3.141439635645912E-5	TEST
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999994065532165	WITHOUT_CLASSIFICATION	5.934467835013435E-6	TEST
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999622078853508	WITHOUT_CLASSIFICATION	3.779211464919025E-5	TEST
//reopen	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999666198086646	WITHOUT_CLASSIFICATION	3.338019133531934E-5	TEST
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.99992433282742	WITHOUT_CLASSIFICATION	7.566717257997423E-5	TEST
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999502623539879	WITHOUT_CLASSIFICATION	4.973764601201941E-5	TEST
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999916133348754	WITHOUT_CLASSIFICATION	8.38666512459919E-6	TEST
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999941774417112	WITHOUT_CLASSIFICATION	5.822558288835542E-6	TEST
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999560380746707	WITHOUT_CLASSIFICATION	4.396192532928476E-5	TEST
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999714269911294	WITHOUT_CLASSIFICATION	2.8573008870512563E-5	TEST
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999764689947661	WITHOUT_CLASSIFICATION	2.3531005233912857E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999445995126527	WITHOUT_CLASSIFICATION	5.5400487347335805E-5	TEST
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999671437038086	WITHOUT_CLASSIFICATION	3.285629619140625E-5	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999658860544278	WITHOUT_CLASSIFICATION	3.411394557212129E-5	TEST
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999289351726233	WITHOUT_CLASSIFICATION	7.106482737674205E-5	TEST
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999295915017895	WITHOUT_CLASSIFICATION	7.040849821044654E-5	TEST
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.999834705143174	WITHOUT_CLASSIFICATION	1.652948568260908E-4	TEST
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9998352624371856	WITHOUT_CLASSIFICATION	1.6473756281434703E-4	TEST
// ignore error	WITHOUT_CLASSIFICATION	0.9999650416518512	WITHOUT_CLASSIFICATION	3.495834814884641E-5	TEST
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999242918365356	WITHOUT_CLASSIFICATION	7.570816346442308E-5	TEST
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999191501941477	WITHOUT_CLASSIFICATION	8.084980585233901E-5	TEST
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9994768245851962	WITHOUT_CLASSIFICATION	5.231754148038703E-4	TEST
// odd	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999827925108676	WITHOUT_CLASSIFICATION	1.720748913239656E-5	TEST
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9998983395771256	WITHOUT_CLASSIFICATION	1.0166042287434447E-4	TEST
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.99995944270602	WITHOUT_CLASSIFICATION	4.055729398006259E-5	TEST
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999750148762472	WITHOUT_CLASSIFICATION	2.498512375276666E-5	TEST
/*  0! */	WITHOUT_CLASSIFICATION	0.9997999203401355	WITHOUT_CLASSIFICATION	2.0007965986451351E-4	TEST
/*  1! */	WITHOUT_CLASSIFICATION	0.9997999203401355	WITHOUT_CLASSIFICATION	2.0007965986451351E-4	TEST
/*  2! */	WITHOUT_CLASSIFICATION	0.9997999203401355	WITHOUT_CLASSIFICATION	2.0007965986451351E-4	TEST
/*  3! */	WITHOUT_CLASSIFICATION	0.9997999203401355	WITHOUT_CLASSIFICATION	2.0007965986451351E-4	TEST
/*  4! */	WITHOUT_CLASSIFICATION	0.9997999203401355	WITHOUT_CLASSIFICATION	2.0007965986451351E-4	TEST
/*  5! */	WITHOUT_CLASSIFICATION	0.9997999203401355	WITHOUT_CLASSIFICATION	2.0007965986451351E-4	TEST
/*  6! */	WITHOUT_CLASSIFICATION	0.9997999203401355	WITHOUT_CLASSIFICATION	2.0007965986451351E-4	TEST
/*  7! */	WITHOUT_CLASSIFICATION	0.9997999203401355	WITHOUT_CLASSIFICATION	2.0007965986451351E-4	TEST
/*  8! */	WITHOUT_CLASSIFICATION	0.9997999203401355	WITHOUT_CLASSIFICATION	2.0007965986451351E-4	TEST
/*  9! */	WITHOUT_CLASSIFICATION	0.9997999203401355	WITHOUT_CLASSIFICATION	2.0007965986451351E-4	TEST
/* 11! */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
/* 12! */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
/* 13! */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
/* 15! */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
/* 16! */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
/* 17! */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
/* 19! */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
/* 20! */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
/* 21! */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
// Static constants	WITHOUT_CLASSIFICATION	0.9999600483434297	WITHOUT_CLASSIFICATION	3.995165657031467E-5	TEST
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9998626290355441	WITHOUT_CLASSIFICATION	1.3737096445589332E-4	TEST
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999225740883786	WITHOUT_CLASSIFICATION	7.74259116215056E-5	TEST
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.999960116538027	WITHOUT_CLASSIFICATION	3.988346197301175E-5	TEST
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999806121610542	WITHOUT_CLASSIFICATION	1.938783894588249E-5	TEST
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999881928165373	WITHOUT_CLASSIFICATION	1.1807183462789047E-5	TEST
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999946845605028	WITHOUT_CLASSIFICATION	5.315439497142761E-6	TEST
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999812173597566	WITHOUT_CLASSIFICATION	1.878264024339512E-5	TEST
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999940570730294	WITHOUT_CLASSIFICATION	5.942926970603224E-6	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998848669906331	WITHOUT_CLASSIFICATION	1.1513300936692714E-4	TEST
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9729720275520567	WITHOUT_CLASSIFICATION	0.027027972447943256	TEST
// integer division	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999810182729398	WITHOUT_CLASSIFICATION	1.898172706011992E-5	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999881928165373	WITHOUT_CLASSIFICATION	1.1807183462789047E-5	TEST
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9995125911020694	WITHOUT_CLASSIFICATION	4.8740889793063614E-4	TEST
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999982786074981	WITHOUT_CLASSIFICATION	1.721392501874214E-6	TEST
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999084684120895	WITHOUT_CLASSIFICATION	9.153158791055507E-5	TEST
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999856210825885	WITHOUT_CLASSIFICATION	1.437891741154568E-5	TEST
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9993723277917173	WITHOUT_CLASSIFICATION	6.276722082827715E-4	TEST
// sign	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999838941264991	WITHOUT_CLASSIFICATION	1.6105873500909265E-5	TEST
// normalize the value	WITHOUT_CLASSIFICATION	0.9999742369125312	WITHOUT_CLASSIFICATION	2.5763087468875103E-5	TEST
// base	WITHOUT_CLASSIFICATION	0.9998895435956922	WITHOUT_CLASSIFICATION	1.1045640430788538E-4	TEST
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9997864348773594	WITHOUT_CLASSIFICATION	2.135651226406891E-4	TEST
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999884956345959	WITHOUT_CLASSIFICATION	1.1504365404040598E-5	TEST
// eh?!	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9998499590451051	WITHOUT_CLASSIFICATION	1.500409548948513E-4	TEST
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999846197901239	WITHOUT_CLASSIFICATION	1.538020987611301E-5	TEST
// the requested precision	WITHOUT_CLASSIFICATION	0.9999723061135979	WITHOUT_CLASSIFICATION	2.769388640208844E-5	TEST
// Proc class	WITHOUT_CLASSIFICATION	0.9999789139934101	WITHOUT_CLASSIFICATION	2.1086006589985655E-5	TEST
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.999973183188532	WITHOUT_CLASSIFICATION	2.681681146791335E-5	TEST
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999153196662458	WITHOUT_CLASSIFICATION	8.468033375416362E-5	TEST
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9998769262313669	WITHOUT_CLASSIFICATION	1.2307376863312602E-4	TEST
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999686964991057	WITHOUT_CLASSIFICATION	3.130350089433541E-5	TEST
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999699043959163	WITHOUT_CLASSIFICATION	3.009560408370794E-5	TEST
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999743406431242	WITHOUT_CLASSIFICATION	2.5659356875862747E-5	TEST
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999713461842544	WITHOUT_CLASSIFICATION	2.8653815745561285E-5	TEST
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999157195604953	WITHOUT_CLASSIFICATION	8.428043950472385E-5	TEST
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999687743082025	WITHOUT_CLASSIFICATION	3.122569179744902E-5	TEST
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.999937771654377	WITHOUT_CLASSIFICATION	6.22283456229827E-5	TEST
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999069743306324	WITHOUT_CLASSIFICATION	9.302566936766737E-5	TEST
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999479327568059	WITHOUT_CLASSIFICATION	5.206724319405022E-5	TEST
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999519151797339	WITHOUT_CLASSIFICATION	4.808482026620515E-5	TEST
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999095639051795	WITHOUT_CLASSIFICATION	9.043609482045203E-5	TEST
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999477290141563	WITHOUT_CLASSIFICATION	5.22709858437636E-5	TEST
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999503631213743	WITHOUT_CLASSIFICATION	4.963687862568113E-5	TEST
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999150679809857	WITHOUT_CLASSIFICATION	8.493201901432307E-5	TEST
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.999959303147185	WITHOUT_CLASSIFICATION	4.069685281507001E-5	TEST
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999748147182557	WITHOUT_CLASSIFICATION	2.518528174429399E-5	TEST
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999814998282531	WITHOUT_CLASSIFICATION	1.8500171746933155E-5	TEST
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999347057601263	WITHOUT_CLASSIFICATION	6.529423987368511E-5	TEST
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.999989284829817	WITHOUT_CLASSIFICATION	1.0715170183138159E-5	TEST
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999632019633445	WITHOUT_CLASSIFICATION	3.6798036655503335E-5	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998533959298181	WITHOUT_CLASSIFICATION	1.466040701818374E-4	TEST
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998533959298181	WITHOUT_CLASSIFICATION	1.466040701818374E-4	TEST
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999023660261958	WITHOUT_CLASSIFICATION	9.763397380415563E-5	TEST
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999336071453133	WITHOUT_CLASSIFICATION	6.639285468666181E-5	TEST
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999885890044293	WITHOUT_CLASSIFICATION	1.1410995570646387E-5	TEST
//consume the file name	WITHOUT_CLASSIFICATION	0.9997363725249434	WITHOUT_CLASSIFICATION	2.636274750566058E-4	TEST
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9997497376769288	WITHOUT_CLASSIFICATION	2.5026232307125503E-4	TEST
// try cwd first	WITHOUT_CLASSIFICATION	0.9999584793459287	WITHOUT_CLASSIFICATION	4.152065407132093E-5	TEST
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9946553116856799	WITHOUT_CLASSIFICATION	0.005344688314320174	TEST
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999571806299462	WITHOUT_CLASSIFICATION	4.2819370053825274E-5	TEST
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999571806299462	WITHOUT_CLASSIFICATION	4.2819370053825274E-5	TEST
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999571806299462	WITHOUT_CLASSIFICATION	4.2819370053825274E-5	TEST
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999115795357242	WITHOUT_CLASSIFICATION	8.842046427577398E-5	TEST
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9969989417236982	WITHOUT_CLASSIFICATION	0.0030010582763017107	TEST
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999573257577924	WITHOUT_CLASSIFICATION	4.267424220762556E-5	TEST
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9953044055843818	WITHOUT_CLASSIFICATION	0.004695594415618164	TEST
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9997809733624446	WITHOUT_CLASSIFICATION	2.1902663755548796E-4	TEST
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9990834031787594	WITHOUT_CLASSIFICATION	9.165968212406897E-4	TEST
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999824829671776	WITHOUT_CLASSIFICATION	1.751703282232168E-5	TEST
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999437208014703	WITHOUT_CLASSIFICATION	5.62791985297453E-5	TEST
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9969989417236982	WITHOUT_CLASSIFICATION	0.0030010582763017107	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.999940814678425	WITHOUT_CLASSIFICATION	5.918532157502702E-5	TEST
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.999940814678425	WITHOUT_CLASSIFICATION	5.918532157502702E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9998941497301534	WITHOUT_CLASSIFICATION	1.0585026984659925E-4	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999639416678866	WITHOUT_CLASSIFICATION	3.605833211330281E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998006613084394	WITHOUT_CLASSIFICATION	1.9933869156055223E-4	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999910782245145	WITHOUT_CLASSIFICATION	8.921775485508848E-5	TEST
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999571747652849	WITHOUT_CLASSIFICATION	4.282523471509323E-5	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999646964215736	WITHOUT_CLASSIFICATION	3.530357842636751E-5	TEST
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9979984873750033	WITHOUT_CLASSIFICATION	0.0020015126249966994	TEST
// Profile	WITHOUT_CLASSIFICATION	0.9998891280255218	WITHOUT_CLASSIFICATION	1.108719744781461E-4	TEST
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9997421571841645	WITHOUT_CLASSIFICATION	2.578428158355181E-4	TEST
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999906596911393	WITHOUT_CLASSIFICATION	9.34030886057958E-6	TEST
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9998920837854423	WITHOUT_CLASSIFICATION	1.0791621455782772E-4	TEST
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999724042501958	WITHOUT_CLASSIFICATION	2.7595749804159034E-5	TEST
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9985948709295661	WITHOUT_CLASSIFICATION	0.0014051290704338688	TEST
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9980707680825207	WITHOUT_CLASSIFICATION	0.00192923191747929	TEST
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9996312075430102	WITHOUT_CLASSIFICATION	3.687924569898261E-4	TEST
// reset the state	WITHOUT_CLASSIFICATION	0.9999833392403995	WITHOUT_CLASSIFICATION	1.66607596005032E-5	TEST
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9993321232004603	WITHOUT_CLASSIFICATION	6.678767995397106E-4	TEST
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
//str is frozen	WITHOUT_CLASSIFICATION	0.9993795577232965	WITHOUT_CLASSIFICATION	6.20442276703481E-4	TEST
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9998996003460728	WITHOUT_CLASSIFICATION	1.0039965392713248E-4	TEST
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9984891526689489	WITHOUT_CLASSIFICATION	0.001510847331051001	TEST
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999857808551517	WITHOUT_CLASSIFICATION	1.4219144848333225E-5	TEST
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999853825301007	WITHOUT_CLASSIFICATION	1.4617469899332311E-5	TEST
// update superclass reference	WITHOUT_CLASSIFICATION	0.999950090085811	WITHOUT_CLASSIFICATION	4.990991418901517E-5	TEST
// undo check	WITHOUT_CLASSIFICATION	0.999989223728294	WITHOUT_CLASSIFICATION	1.0776271706041565E-5	TEST
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999655718793022	WITHOUT_CLASSIFICATION	3.4428120697720376E-5	TEST
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999932856469036	WITHOUT_CLASSIFICATION	6.714353096437797E-6	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9993705848545942	WITHOUT_CLASSIFICATION	6.294151454057502E-4	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999634339305987	WITHOUT_CLASSIFICATION	3.65660694012951E-5	TEST
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999634339305987	WITHOUT_CLASSIFICATION	3.65660694012951E-5	TEST
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999941064187554	WITHOUT_CLASSIFICATION	5.893581244572591E-6	TEST
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999104848411832	WITHOUT_CLASSIFICATION	8.95151588168576E-5	TEST
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999096482656211	WITHOUT_CLASSIFICATION	9.035173437887344E-5	TEST
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999462595003517	WITHOUT_CLASSIFICATION	5.374049964833828E-5	TEST
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999918510813162	WITHOUT_CLASSIFICATION	8.148918683826529E-6	TEST
// static initializing method	WITHOUT_CLASSIFICATION	0.9999473057940756	WITHOUT_CLASSIFICATION	5.2694205924415155E-5	TEST
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.99972179071953	WITHOUT_CLASSIFICATION	2.7820928046997485E-4	TEST
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.999986577033473	WITHOUT_CLASSIFICATION	1.3422966527030873E-5	TEST
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9997803053977528	WITHOUT_CLASSIFICATION	2.1969460224715955E-4	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999006915672716	WITHOUT_CLASSIFICATION	9.930843272840331E-5	TEST
// self // method name	WITHOUT_CLASSIFICATION	0.9999254985674526	WITHOUT_CLASSIFICATION	7.450143254736808E-5	TEST
// the default allocator	WITHOUT_CLASSIFICATION	0.9999830968539901	WITHOUT_CLASSIFICATION	1.690314600991573E-5	TEST
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999551416588595	WITHOUT_CLASSIFICATION	4.485834114045211E-5	TEST
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999252013744365	WITHOUT_CLASSIFICATION	7.479862556347534E-5	TEST
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999575927082538	WITHOUT_CLASSIFICATION	4.240729174615803E-5	TEST
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999150849230325	WITHOUT_CLASSIFICATION	8.491507696748198E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999463904505512	WITHOUT_CLASSIFICATION	5.360954944869618E-5	TEST
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999790168004066	WITHOUT_CLASSIFICATION	2.098319959338306E-5	TEST
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.999988446842209	WITHOUT_CLASSIFICATION	1.1553157791011164E-5	TEST
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9972603001419253	WITHOUT_CLASSIFICATION	0.002739699858074767	TEST
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9998151081157389	WITHOUT_CLASSIFICATION	1.8489188426109307E-4	TEST
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999950937396647	WITHOUT_CLASSIFICATION	4.906260335301474E-5	TEST
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// a gotcha	WITHOUT_CLASSIFICATION	0.9999749287142693	WITHOUT_CLASSIFICATION	2.5071285730700033E-5	TEST
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999929257781054	WITHOUT_CLASSIFICATION	7.07422189458158E-6	TEST
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999376189909155	WITHOUT_CLASSIFICATION	6.238100908455265E-5	TEST
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999551416588595	WITHOUT_CLASSIFICATION	4.485834114045211E-5	TEST
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999309111853948	WITHOUT_CLASSIFICATION	6.908881460519826E-5	TEST
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999575927082538	WITHOUT_CLASSIFICATION	4.240729174615803E-5	TEST
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999216715129453	WITHOUT_CLASSIFICATION	7.832848705466864E-5	TEST
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.999949987587532	WITHOUT_CLASSIFICATION	5.001241246805473E-5	TEST
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// provider is not available	WITHOUT_CLASSIFICATION	0.9995859699844981	WITHOUT_CLASSIFICATION	4.140300155019639E-4	TEST
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999604624935039	WITHOUT_CLASSIFICATION	3.953750649617677E-5	TEST
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999594714065877	WITHOUT_CLASSIFICATION	4.052859341236996E-5	TEST
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999855247680093	WITHOUT_CLASSIFICATION	1.4475231990694875E-5	TEST
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999299020397402	WITHOUT_CLASSIFICATION	7.009796025980424E-5	TEST
// we only add live threads	WITHOUT_CLASSIFICATION	0.999750912751238	WITHOUT_CLASSIFICATION	2.4908724876197336E-4	TEST
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999856058515498	WITHOUT_CLASSIFICATION	1.4394148450055059E-5	TEST
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999928924891821	WITHOUT_CLASSIFICATION	7.107510817908915E-6	TEST
// JRubyService	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// while	WITHOUT_CLASSIFICATION	0.9998904660766174	WITHOUT_CLASSIFICATION	1.0953392338258152E-4	TEST
/* \OOO */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999858222887337	WITHOUT_CLASSIFICATION	1.4177711266286513E-5	TEST
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999455389219629	WITHOUT_CLASSIFICATION	5.4461078037102746E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999531818872924	WITHOUT_CLASSIFICATION	4.6818112707580287E-5	TEST
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999239765429573	WITHOUT_CLASSIFICATION	7.602345704279261E-5	TEST
// silent ?	WITHOUT_CLASSIFICATION	0.999964036611671	WITHOUT_CLASSIFICATION	3.596338832901222E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998773432531649	WITHOUT_CLASSIFICATION	1.226567468351139E-4	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9998522722707925	WITHOUT_CLASSIFICATION	1.4772772920751184E-4	TEST
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999159046465957	WITHOUT_CLASSIFICATION	8.40953534042712E-5	TEST
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9998587747136054	WITHOUT_CLASSIFICATION	1.4122528639467184E-4	TEST
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
/* \xHH */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998773432531649	WITHOUT_CLASSIFICATION	1.226567468351139E-4	TEST
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9998284982139817	WITHOUT_CLASSIFICATION	1.7150178601832886E-4	TEST
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
// inner switch	WITHOUT_CLASSIFICATION	0.9999593488428155	WITHOUT_CLASSIFICATION	4.0651157184594646E-5	TEST
// newInstance here	WITHOUT_CLASSIFICATION	0.999946522961499	WITHOUT_CLASSIFICATION	5.347703850109646E-5	TEST
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999399793847161	WITHOUT_CLASSIFICATION	6.002061528383123E-5	TEST
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// option_to_str	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999895907971503	WITHOUT_CLASSIFICATION	1.040920284965642E-5	TEST
// args should be before block	WITHOUT_CLASSIFICATION	0.9998991070452424	WITHOUT_CLASSIFICATION	1.0089295475760405E-4	TEST
// args should be at end	WITHOUT_CLASSIFICATION	0.9998421582330519	WITHOUT_CLASSIFICATION	1.578417669480687E-4	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.999909042365006	WITHOUT_CLASSIFICATION	9.095763499393358E-5	TEST
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.999909042365006	WITHOUT_CLASSIFICATION	9.095763499393358E-5	TEST
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999016061769354	WITHOUT_CLASSIFICATION	9.83938230646896E-5	TEST
// start a new populator	WITHOUT_CLASSIFICATION	0.9999406149582629	WITHOUT_CLASSIFICATION	5.938504173719374E-5	TEST
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999335337480841	WITHOUT_CLASSIFICATION	6.646625191586204E-5	TEST
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9992063959772687	WITHOUT_CLASSIFICATION	7.936040227312414E-4	TEST
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999413021289976	WITHOUT_CLASSIFICATION	5.869787100238413E-5	TEST
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9975857750956252	WITHOUT_CLASSIFICATION	0.0024142249043748627	TEST
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.999959540405972	WITHOUT_CLASSIFICATION	4.0459594028003836E-5	TEST
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9998971506723894	WITHOUT_CLASSIFICATION	1.0284932761059037E-4	TEST
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999238955174936	WITHOUT_CLASSIFICATION	7.610448250634732E-5	TEST
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999745944154688	WITHOUT_CLASSIFICATION	2.5405584531168204E-5	TEST
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999618212497424	WITHOUT_CLASSIFICATION	3.817875025753678E-5	TEST
//                }	WITHOUT_CLASSIFICATION	0.9999626242311129	WITHOUT_CLASSIFICATION	3.737576888708364E-5	TEST
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999182500093856	WITHOUT_CLASSIFICATION	8.174999061442256E-5	TEST
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9957469335105632	WITHOUT_CLASSIFICATION	0.004253066489436769	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999873015421764	WITHOUT_CLASSIFICATION	1.2698457823611048E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999330948942593	WITHOUT_CLASSIFICATION	6.690510574065288E-5	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999855600304247	WITHOUT_CLASSIFICATION	1.4439969575321635E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999795474992432	WITHOUT_CLASSIFICATION	2.045250075677531E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999795474992432	WITHOUT_CLASSIFICATION	2.045250075677531E-5	TEST
// colon3	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// Colon3	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999732471968229	WITHOUT_CLASSIFICATION	2.6752803177090687E-5	TEST
// For b.foo	WITHOUT_CLASSIFICATION	0.9999368016633232	WITHOUT_CLASSIFICATION	6.319833667677283E-5	TEST
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9998742251394453	WITHOUT_CLASSIFICATION	1.2577486055462018E-4	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999795474992432	WITHOUT_CLASSIFICATION	2.045250075677531E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999795474992432	WITHOUT_CLASSIFICATION	2.045250075677531E-5	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998646954301048	WITHOUT_CLASSIFICATION	1.3530456989517905E-4	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998646954301048	WITHOUT_CLASSIFICATION	1.3530456989517905E-4	TEST
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9997263881391243	WITHOUT_CLASSIFICATION	2.73611860875697E-4	TEST
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999368016633232	WITHOUT_CLASSIFICATION	6.319833667677283E-5	TEST
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999821385053319	WITHOUT_CLASSIFICATION	1.7861494668137117E-5	TEST
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9998867691230844	WITHOUT_CLASSIFICATION	1.1323087691554816E-4	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999964003345485	WITHOUT_CLASSIFICATION	3.599665451492916E-5	TEST
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999964003345485	WITHOUT_CLASSIFICATION	3.599665451492916E-5	TEST
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999302108375933	WITHOUT_CLASSIFICATION	6.978916240670381E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999698338185497	WITHOUT_CLASSIFICATION	3.0166181450289823E-4	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9995393600880692	WITHOUT_CLASSIFICATION	4.606399119307136E-4	TEST
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9998395769328424	WITHOUT_CLASSIFICATION	1.6042306715756974E-4	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998646954301048	WITHOUT_CLASSIFICATION	1.3530456989517905E-4	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999690141561917	WITHOUT_CLASSIFICATION	3.098584380830366E-5	TEST
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999732566638082	WITHOUT_CLASSIFICATION	2.6743336191867756E-5	TEST
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999754318263555	WITHOUT_CLASSIFICATION	2.4568173644460873E-5	TEST
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9998820701191563	WITHOUT_CLASSIFICATION	1.1792988084376706E-4	TEST
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999831942409819	WITHOUT_CLASSIFICATION	1.6805759018006835E-5	TEST
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999655880028158	WITHOUT_CLASSIFICATION	3.441199718431074E-5	TEST
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.99992433282742	WITHOUT_CLASSIFICATION	7.566717257997423E-5	TEST
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999824453159986	WITHOUT_CLASSIFICATION	1.755468400140481E-5	TEST
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999757783924854	WITHOUT_CLASSIFICATION	2.4221607514622668E-5	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999330948942593	WITHOUT_CLASSIFICATION	6.690510574065288E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999795474992432	WITHOUT_CLASSIFICATION	2.045250075677531E-5	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998646954301048	WITHOUT_CLASSIFICATION	1.3530456989517905E-4	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999690141561917	WITHOUT_CLASSIFICATION	3.098584380830366E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999898049333563	WITHOUT_CLASSIFICATION	1.0195066643745025E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999898049333563	WITHOUT_CLASSIFICATION	1.0195066643745025E-5	TEST
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999619172548224	WITHOUT_CLASSIFICATION	3.808274517762299E-5	TEST
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999742690013408	WITHOUT_CLASSIFICATION	2.5730998659134466E-5	TEST
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999436140421284	WITHOUT_CLASSIFICATION	5.638595787155685E-5	TEST
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999928823365181	WITHOUT_CLASSIFICATION	7.1176634818355315E-6	TEST
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.999978262365679	WITHOUT_CLASSIFICATION	2.1737634321055956E-5	TEST
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.999982901288631	WITHOUT_CLASSIFICATION	1.7098711368989683E-5	TEST
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.999600064158732	WITHOUT_CLASSIFICATION	3.999358412679773E-4	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9995175749848013	WITHOUT_CLASSIFICATION	4.824250151987511E-4	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999961001307922	WITHOUT_CLASSIFICATION	3.8998692077275805E-6	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999405079624517	WITHOUT_CLASSIFICATION	5.949203754823084E-5	TEST
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999056280107125	WITHOUT_CLASSIFICATION	9.437198928746332E-5	TEST
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999901750474294	WITHOUT_CLASSIFICATION	9.824952570593933E-6	TEST
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999610448974237	WITHOUT_CLASSIFICATION	3.895510257630335E-5	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999855600304247	WITHOUT_CLASSIFICATION	1.4439969575321635E-5	TEST
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998646954301048	WITHOUT_CLASSIFICATION	1.3530456989517905E-4	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999698338185497	WITHOUT_CLASSIFICATION	3.0166181450289823E-4	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9995393600880692	WITHOUT_CLASSIFICATION	4.606399119307136E-4	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9995393600880692	WITHOUT_CLASSIFICATION	4.606399119307136E-4	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998646954301048	WITHOUT_CLASSIFICATION	1.3530456989517905E-4	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999690141561917	WITHOUT_CLASSIFICATION	3.098584380830366E-5	TEST
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999690141561917	WITHOUT_CLASSIFICATION	3.098584380830366E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999898049333563	WITHOUT_CLASSIFICATION	1.0195066643745025E-5	TEST
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999776713282591	WITHOUT_CLASSIFICATION	2.2328671740930733E-5	TEST
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9993928716295133	WITHOUT_CLASSIFICATION	6.071283704867865E-4	TEST
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999871717846409	WITHOUT_CLASSIFICATION	1.2828215359197474E-5	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9997278118473366	WITHOUT_CLASSIFICATION	2.7218815266344924E-4	TEST
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999625428467682	WITHOUT_CLASSIFICATION	3.7457153231792764E-5	TEST
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.998427643185974	WITHOUT_CLASSIFICATION	0.0015723568140260772	TEST
// add in reverse order	WITHOUT_CLASSIFICATION	0.999954927542397	WITHOUT_CLASSIFICATION	4.5072457602999606E-5	TEST
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.999992779592723	WITHOUT_CLASSIFICATION	7.22040727698403E-6	TEST
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.999949224533312	WITHOUT_CLASSIFICATION	5.077546668800739E-5	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999698338185497	WITHOUT_CLASSIFICATION	3.0166181450289823E-4	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9995393600880692	WITHOUT_CLASSIFICATION	4.606399119307136E-4	TEST
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9995393600880692	WITHOUT_CLASSIFICATION	4.606399119307136E-4	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998646954301048	WITHOUT_CLASSIFICATION	1.3530456989517905E-4	TEST
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9995175749848013	WITHOUT_CLASSIFICATION	4.824250151987511E-4	TEST
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999405079624517	WITHOUT_CLASSIFICATION	5.949203754823084E-5	TEST
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9958995616155988	WITHOUT_CLASSIFICATION	0.004100438384401264	TEST
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999817983473128	WITHOUT_CLASSIFICATION	1.8201652687221978E-5	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999368016633232	WITHOUT_CLASSIFICATION	6.319833667677283E-5	TEST
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999368016633232	WITHOUT_CLASSIFICATION	6.319833667677283E-5	TEST
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999515538419118	WITHOUT_CLASSIFICATION	4.8446158088111005E-5	TEST
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9996817650290879	WITHOUT_CLASSIFICATION	3.182349709121154E-4	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999406704248138	WITHOUT_CLASSIFICATION	5.932957518624879E-5	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999805476070464	WITHOUT_CLASSIFICATION	1.945239295365383E-5	TEST
// just rethrow	WITHOUT_CLASSIFICATION	0.9999805476070464	WITHOUT_CLASSIFICATION	1.945239295365383E-5	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999245182604499	WITHOUT_CLASSIFICATION	7.548173955007923E-5	TEST
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999245182604499	WITHOUT_CLASSIFICATION	7.548173955007923E-5	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999368993616249	WITHOUT_CLASSIFICATION	6.310063837504934E-5	TEST
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999368993616249	WITHOUT_CLASSIFICATION	6.310063837504934E-5	TEST
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999428748571295	WITHOUT_CLASSIFICATION	5.7125142870482175E-5	TEST
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999355090158503	WITHOUT_CLASSIFICATION	6.449098414974382E-5	TEST
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9995790505656381	WITHOUT_CLASSIFICATION	4.209494343618188E-4	TEST
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999352462736485	WITHOUT_CLASSIFICATION	6.475372635147052E-5	TEST
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999977877102972	WITHOUT_CLASSIFICATION	2.2122897028071323E-6	TEST
// pragmas	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999424795795625	WITHOUT_CLASSIFICATION	5.752042043746083E-5	TEST
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999791236425681	WITHOUT_CLASSIFICATION	2.0876357431817974E-5	TEST
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9997963387992326	WITHOUT_CLASSIFICATION	2.036612007673242E-4	TEST
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999490367964778	WITHOUT_CLASSIFICATION	5.096320352219684E-5	TEST
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999874071986576	WITHOUT_CLASSIFICATION	1.2592801342433584E-5	TEST
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999320838692374	WITHOUT_CLASSIFICATION	6.791613076258939E-5	TEST
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999062725684483	WITHOUT_CLASSIFICATION	9.372743155169048E-5	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999625034467997	WITHOUT_CLASSIFICATION	3.749655320031708E-5	TEST
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999625034467997	WITHOUT_CLASSIFICATION	3.749655320031708E-5	TEST
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9998003024555734	WITHOUT_CLASSIFICATION	1.9969754442672338E-4	TEST
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999646964215736	WITHOUT_CLASSIFICATION	3.530357842636751E-5	TEST
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999125793094886	WITHOUT_CLASSIFICATION	8.742069051144398E-5	TEST
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.999981243699854	WITHOUT_CLASSIFICATION	1.875630014602027E-5	TEST
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9997916225829716	WITHOUT_CLASSIFICATION	2.0837741702848817E-4	TEST
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999552437286051	WITHOUT_CLASSIFICATION	4.475627139482095E-5	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999730354450428	WITHOUT_CLASSIFICATION	2.6964554957209447E-5	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999957821954613	WITHOUT_CLASSIFICATION	4.2178045387054265E-5	TEST
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999968225766174	WITHOUT_CLASSIFICATION	3.177423382710898E-6	TEST
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999349048964286	WITHOUT_CLASSIFICATION	6.509510357143394E-5	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999085934606311	WITHOUT_CLASSIFICATION	9.140653936888414E-5	TEST
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9966820519700178	WITHOUT_CLASSIFICATION	0.0033179480299821715	TEST
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9994158637519855	WITHOUT_CLASSIFICATION	5.841362480144851E-4	TEST
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9987027244968095	WITHOUT_CLASSIFICATION	0.001297275503190491	TEST
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9994310159414289	WITHOUT_CLASSIFICATION	5.689840585710136E-4	TEST
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999010374122624	WITHOUT_CLASSIFICATION	9.896258773754084E-5	TEST
// can't do it	WITHOUT_CLASSIFICATION	0.9997067432590309	WITHOUT_CLASSIFICATION	2.932567409691364E-4	TEST
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999493890175245	WITHOUT_CLASSIFICATION	5.061098247546601E-5	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999635853309756	WITHOUT_CLASSIFICATION	3.6414669024421265E-5	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999635853309756	WITHOUT_CLASSIFICATION	3.6414669024421265E-5	TEST
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999144969124252	WITHOUT_CLASSIFICATION	8.550308757480408E-5	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
//[]	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.99992433282742	WITHOUT_CLASSIFICATION	7.566717257997423E-5	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999614638070736	WITHOUT_CLASSIFICATION	3.8536192926263566E-5	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999886729150859	WITHOUT_CLASSIFICATION	1.1327084914184959E-5	TEST
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999886729150859	WITHOUT_CLASSIFICATION	1.1327084914184959E-5	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999909729377272	WITHOUT_CLASSIFICATION	9.027062272774058E-6	TEST
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999353911251662	WITHOUT_CLASSIFICATION	6.460887483377561E-5	TEST
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9998336292277001	WITHOUT_CLASSIFICATION	1.6637077229992623E-4	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9995540944217371	WITHOUT_CLASSIFICATION	4.459055782628836E-4	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999975358899203	WITHOUT_CLASSIFICATION	2.4641100796997627E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999975358899203	WITHOUT_CLASSIFICATION	2.4641100796997627E-5	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999800749698668	WITHOUT_CLASSIFICATION	1.9925030133205834E-4	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999800749698668	WITHOUT_CLASSIFICATION	1.9925030133205834E-4	TEST
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999800749698668	WITHOUT_CLASSIFICATION	1.9925030133205834E-4	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999975358899203	WITHOUT_CLASSIFICATION	2.4641100796997627E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999975358899203	WITHOUT_CLASSIFICATION	2.4641100796997627E-5	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9995540944217371	WITHOUT_CLASSIFICATION	4.459055782628836E-4	TEST
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9998154967019259	WITHOUT_CLASSIFICATION	1.845032980739699E-4	TEST
// always false or nil	WITHOUT_CLASSIFICATION	0.9999342002804158	WITHOUT_CLASSIFICATION	6.579971958429175E-5	TEST
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9998874945971519	WITHOUT_CLASSIFICATION	1.1250540284806303E-4	TEST
// normal	WITHOUT_CLASSIFICATION	0.9998897137290442	WITHOUT_CLASSIFICATION	1.1028627095581855E-4	TEST
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999967690739614	WITHOUT_CLASSIFICATION	3.230926038657605E-6	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999240762846009	WITHOUT_CLASSIFICATION	7.592371539911415E-5	TEST
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.99994794355856	WITHOUT_CLASSIFICATION	5.2056441439960294E-5	TEST
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999390847298437	WITHOUT_CLASSIFICATION	6.0915270156286666E-5	TEST
// compile first node only	WITHOUT_CLASSIFICATION	0.9999085934606311	WITHOUT_CLASSIFICATION	9.140653936888414E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999975358899203	WITHOUT_CLASSIFICATION	2.4641100796997627E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999975358899203	WITHOUT_CLASSIFICATION	2.4641100796997627E-5	TEST
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999835744985048	WITHOUT_CLASSIFICATION	1.6425501495162146E-5	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999527263823385	WITHOUT_CLASSIFICATION	4.727361766150426E-5	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999679207050218	WITHOUT_CLASSIFICATION	3.2079294978136334E-5	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999673620201907	WITHOUT_CLASSIFICATION	3.2637979809353396E-5	TEST
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999560224173681	WITHOUT_CLASSIFICATION	4.39775826318474E-5	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999928158995659	WITHOUT_CLASSIFICATION	7.184100434053684E-6	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999740207121768	WITHOUT_CLASSIFICATION	2.597928782325221E-5	TEST
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999788064026308	WITHOUT_CLASSIFICATION	2.1193597369172603E-5	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999451267635502	WITHOUT_CLASSIFICATION	5.487323644983593E-5	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999321942299784	WITHOUT_CLASSIFICATION	6.780577002162087E-5	TEST
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.999720410110306	WITHOUT_CLASSIFICATION	2.79589889694053E-4	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999211116610263	WITHOUT_CLASSIFICATION	7.888833897374836E-5	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999371468195972	WITHOUT_CLASSIFICATION	6.285318040278584E-5	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999552335608634	WITHOUT_CLASSIFICATION	4.4766439136662185E-5	TEST
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999958858547772	WITHOUT_CLASSIFICATION	4.114145222923751E-6	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// [recv]	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// compile into array	WITHOUT_CLASSIFICATION	0.9999385332151466	WITHOUT_CLASSIFICATION	6.146678485341117E-5	TEST
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999943308711553	WITHOUT_CLASSIFICATION	5.6691288447321106E-6	TEST
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999923710854826	WITHOUT_CLASSIFICATION	7.628914517317404E-6	TEST
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9998252961398169	WITHOUT_CLASSIFICATION	1.747038601832055E-4	TEST
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9997009528860499	WITHOUT_CLASSIFICATION	2.9904711395009056E-4	TEST
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9998352327474164	WITHOUT_CLASSIFICATION	1.6476725258363054E-4	TEST
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999922086532783	WITHOUT_CLASSIFICATION	7.791346721708973E-6	TEST
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9996446538558248	WITHOUT_CLASSIFICATION	3.553461441752401E-4	TEST
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9998435932990059	WITHOUT_CLASSIFICATION	1.5640670099418386E-4	TEST
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999838980728881	WITHOUT_CLASSIFICATION	1.6101927111889332E-5	TEST
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999499621043397	WITHOUT_CLASSIFICATION	5.0037895660365646E-5	TEST
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9997725804596493	WITHOUT_CLASSIFICATION	2.2741954035068976E-4	TEST
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999909729377272	WITHOUT_CLASSIFICATION	9.027062272774058E-6	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999975358899203	WITHOUT_CLASSIFICATION	2.4641100796997627E-5	TEST
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.999975358899203	WITHOUT_CLASSIFICATION	2.4641100796997627E-5	TEST
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9995540944217371	WITHOUT_CLASSIFICATION	4.459055782628836E-4	TEST
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999240762846009	WITHOUT_CLASSIFICATION	7.592371539911415E-5	TEST
// try optz version	WITHOUT_CLASSIFICATION	0.9999527263823385	WITHOUT_CLASSIFICATION	4.727361766150426E-5	TEST
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999673620201907	WITHOUT_CLASSIFICATION	3.2637979809353396E-5	TEST
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999928158995659	WITHOUT_CLASSIFICATION	7.184100434053684E-6	TEST
// sizes must match	WITHOUT_CLASSIFICATION	0.9999679207050218	WITHOUT_CLASSIFICATION	3.2079294978136334E-5	TEST
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999740207121768	WITHOUT_CLASSIFICATION	2.597928782325221E-5	TEST
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999321942299784	WITHOUT_CLASSIFICATION	6.780577002162087E-5	TEST
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999451267635502	WITHOUT_CLASSIFICATION	5.487323644983593E-5	TEST
// done processing args	WITHOUT_CLASSIFICATION	0.9999211116610263	WITHOUT_CLASSIFICATION	7.888833897374836E-5	TEST
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999716422491624	WITHOUT_CLASSIFICATION	2.8357750837574816E-5	TEST
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.999994120158694	WITHOUT_CLASSIFICATION	5.879841305917498E-6	TEST
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999573570129687	WITHOUT_CLASSIFICATION	4.26429870312415E-5	TEST
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999711608429322	WITHOUT_CLASSIFICATION	2.8839157067766602E-5	TEST
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999348313195726	WITHOUT_CLASSIFICATION	6.516868042731159E-5	TEST
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999711262194598	WITHOUT_CLASSIFICATION	2.8873780540187107E-5	TEST
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999470874725959	WITHOUT_CLASSIFICATION	5.291252740413259E-5	TEST
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999354515817062	WITHOUT_CLASSIFICATION	6.454841829377987E-5	TEST
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999490713205932	WITHOUT_CLASSIFICATION	5.092867940682411E-5	TEST
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999978807212967	WITHOUT_CLASSIFICATION	2.1192787032960223E-5	TEST
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999479373970772	WITHOUT_CLASSIFICATION	5.206260292286652E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999651527653934	WITHOUT_CLASSIFICATION	3.4847234606526616E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998480610071865	WITHOUT_CLASSIFICATION	1.5193899281352422E-4	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999027478025257	WITHOUT_CLASSIFICATION	9.725219747421983E-5	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999753336854843	WITHOUT_CLASSIFICATION	2.466631451581018E-5	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999652250538851	WITHOUT_CLASSIFICATION	3.4774946114839925E-5	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9998267383755114	WITHOUT_CLASSIFICATION	1.7326162448858313E-4	TEST
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.999933303428748	WITHOUT_CLASSIFICATION	6.669657125212109E-5	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999913530009128	WITHOUT_CLASSIFICATION	8.646999087142032E-6	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999675603811122	WITHOUT_CLASSIFICATION	3.2439618887821374E-5	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999588675343263	WITHOUT_CLASSIFICATION	4.113246567375245E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999625413918237	WITHOUT_CLASSIFICATION	3.745860817621682E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999625413918237	WITHOUT_CLASSIFICATION	3.745860817621682E-5	TEST
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9991194320344498	WITHOUT_CLASSIFICATION	8.805679655501212E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999309260858125	WITHOUT_CLASSIFICATION	6.907391418746543E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*arg2*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999309260858125	WITHOUT_CLASSIFICATION	6.907391418746543E-5	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999561508821744	WITHOUT_CLASSIFICATION	4.384911782561358E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*arg0*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*arg1*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*args*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999940926272168	WITHOUT_CLASSIFICATION	5.907372783107478E-6	TEST
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999940926272168	WITHOUT_CLASSIFICATION	5.907372783107478E-6	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999858428501063	WITHOUT_CLASSIFICATION	1.415714989376595E-5	TEST
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999858428501063	WITHOUT_CLASSIFICATION	1.415714989376595E-5	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9998889961082305	WITHOUT_CLASSIFICATION	1.1100389176949888E-4	TEST
// invoke	WITHOUT_CLASSIFICATION	0.9998889961082305	WITHOUT_CLASSIFICATION	1.1100389176949888E-4	TEST
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999469640650535	WITHOUT_CLASSIFICATION	5.303593494646401E-5	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.999957227180965	WITHOUT_CLASSIFICATION	4.2772819035100114E-5	TEST
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.999957227180965	WITHOUT_CLASSIFICATION	4.2772819035100114E-5	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999862532190559	WITHOUT_CLASSIFICATION	1.3746780944167927E-5	TEST
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999862532190559	WITHOUT_CLASSIFICATION	1.3746780944167927E-5	TEST
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9998995939765418	WITHOUT_CLASSIFICATION	1.0040602345827997E-4	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999723324993856	WITHOUT_CLASSIFICATION	2.766750061444936E-5	TEST
// call site	WITHOUT_CLASSIFICATION	0.9999723324993856	WITHOUT_CLASSIFICATION	2.766750061444936E-5	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999740274114973	WITHOUT_CLASSIFICATION	2.5972588502665333E-5	TEST
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999044815963601	WITHOUT_CLASSIFICATION	9.551840363983295E-5	TEST
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999636815300125	WITHOUT_CLASSIFICATION	3.631846998752198E-5	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999740274114973	WITHOUT_CLASSIFICATION	2.5972588502665333E-5	TEST
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999242480818835	WITHOUT_CLASSIFICATION	7.575191811649077E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999622372550774	WITHOUT_CLASSIFICATION	3.77627449225945E-5	TEST
// args	WITHOUT_CLASSIFICATION	0.9998893342509073	WITHOUT_CLASSIFICATION	1.1066574909269845E-4	TEST
// block	WITHOUT_CLASSIFICATION	0.9998954864916576	WITHOUT_CLASSIFICATION	1.0451350834238835E-4	TEST
// block	WITHOUT_CLASSIFICATION	0.9998954864916576	WITHOUT_CLASSIFICATION	1.0451350834238835E-4	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999645571414754	WITHOUT_CLASSIFICATION	3.544285852463882E-5	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9997136463294001	WITHOUT_CLASSIFICATION	2.863536705999509E-4	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9997136463294001	WITHOUT_CLASSIFICATION	2.863536705999509E-4	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9996803638207546	WITHOUT_CLASSIFICATION	3.1963617924534013E-4	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999501007957972	WITHOUT_CLASSIFICATION	4.989920420274491E-5	TEST
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999501007957972	WITHOUT_CLASSIFICATION	4.989920420274491E-5	TEST
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999934815171106	WITHOUT_CLASSIFICATION	6.518482889347811E-6	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// args	WITHOUT_CLASSIFICATION	0.9998893342509073	WITHOUT_CLASSIFICATION	1.1066574909269845E-4	TEST
// block	WITHOUT_CLASSIFICATION	0.9998954864916576	WITHOUT_CLASSIFICATION	1.0451350834238835E-4	TEST
// no args, no block	WITHOUT_CLASSIFICATION	0.9999645571414754	WITHOUT_CLASSIFICATION	3.544285852463882E-5	TEST
// no args, with block	WITHOUT_CLASSIFICATION	0.9997136463294001	WITHOUT_CLASSIFICATION	2.863536705999509E-4	TEST
// with args, no block	WITHOUT_CLASSIFICATION	0.9997136463294001	WITHOUT_CLASSIFICATION	2.863536705999509E-4	TEST
// with args, with block	WITHOUT_CLASSIFICATION	0.9996803638207546	WITHOUT_CLASSIFICATION	3.1963617924534013E-4	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999437674402104	WITHOUT_CLASSIFICATION	5.6232559789581056E-5	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999674071299919	WITHOUT_CLASSIFICATION	3.259287000812505E-5	TEST
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999629576054748	WITHOUT_CLASSIFICATION	3.704239452512147E-5	TEST
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999692801603046	WITHOUT_CLASSIFICATION	3.071983969534327E-5	TEST
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999179533329409	WITHOUT_CLASSIFICATION	8.204666705918272E-5	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9998592073678265	WITHOUT_CLASSIFICATION	1.4079263217344344E-4	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9998524966554092	WITHOUT_CLASSIFICATION	1.4750334459084937E-4	TEST
// build descriptor string	WITHOUT_CLASSIFICATION	0.9998524966554092	WITHOUT_CLASSIFICATION	1.4750334459084937E-4	TEST
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999368059404934	WITHOUT_CLASSIFICATION	6.319405950651567E-5	TEST
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999039931439588	WITHOUT_CLASSIFICATION	9.600685604107592E-5	TEST
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999039931439588	WITHOUT_CLASSIFICATION	9.600685604107592E-5	TEST
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999078179972223	WITHOUT_CLASSIFICATION	9.218200277778052E-5	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999039931439588	WITHOUT_CLASSIFICATION	9.600685604107592E-5	TEST
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999039931439588	WITHOUT_CLASSIFICATION	9.600685604107592E-5	TEST
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999046172921142	WITHOUT_CLASSIFICATION	9.53827078857912E-5	TEST
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999046172921142	WITHOUT_CLASSIFICATION	9.53827078857912E-5	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999096785779629	WITHOUT_CLASSIFICATION	9.03214220371064E-5	TEST
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999096785779629	WITHOUT_CLASSIFICATION	9.03214220371064E-5	TEST
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999039931439588	WITHOUT_CLASSIFICATION	9.600685604107592E-5	TEST
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999144245131845	WITHOUT_CLASSIFICATION	8.557548681551296E-5	TEST
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999746753867592	WITHOUT_CLASSIFICATION	2.532461324083516E-5	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9997384095582463	WITHOUT_CLASSIFICATION	2.6159044175367994E-4	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999975414001408	WITHOUT_CLASSIFICATION	2.4585998591982764E-5	TEST
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999694837678004	WITHOUT_CLASSIFICATION	3.051623219957657E-5	TEST
// load Object under value	WITHOUT_CLASSIFICATION	0.9999485837723708	WITHOUT_CLASSIFICATION	5.141622762925137E-5	TEST
// put under object array already present	WITHOUT_CLASSIFICATION	0.999938177937429	WITHOUT_CLASSIFICATION	6.182206257097392E-5	TEST
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999441987984058	WITHOUT_CLASSIFICATION	5.580120159416476E-5	TEST
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9992292506053415	WITHOUT_CLASSIFICATION	7.707493946584649E-4	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999921404839878	WITHOUT_CLASSIFICATION	7.859516012197776E-5	TEST
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999921404839878	WITHOUT_CLASSIFICATION	7.859516012197776E-5	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999166376514389	WITHOUT_CLASSIFICATION	8.336234856114673E-5	TEST
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999166376514389	WITHOUT_CLASSIFICATION	8.336234856114673E-5	TEST
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999598968462342	WITHOUT_CLASSIFICATION	4.0103153765839714E-5	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999868615625335	WITHOUT_CLASSIFICATION	1.3138437466398673E-5	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999868615625335	WITHOUT_CLASSIFICATION	1.3138437466398673E-5	TEST
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999868615625335	WITHOUT_CLASSIFICATION	1.3138437466398673E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999026332810187	WITHOUT_CLASSIFICATION	9.736671898128341E-5	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9996977937392898	WITHOUT_CLASSIFICATION	3.022062607102167E-4	TEST
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9996977937392898	WITHOUT_CLASSIFICATION	3.022062607102167E-4	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999562155858053	WITHOUT_CLASSIFICATION	4.378441419462355E-5	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999896671284414	WITHOUT_CLASSIFICATION	1.0332871558551635E-5	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999897716748306	WITHOUT_CLASSIFICATION	1.0228325169400664E-4	TEST
// skip catch block	WITHOUT_CLASSIFICATION	0.9999619428516189	WITHOUT_CLASSIFICATION	3.805714838113331E-5	TEST
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9998465234879881	WITHOUT_CLASSIFICATION	1.5347651201192084E-4	TEST
// next jump	WITHOUT_CLASSIFICATION	0.9999672634667733	WITHOUT_CLASSIFICATION	3.273653322660426E-5	TEST
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9994685541510657	WITHOUT_CLASSIFICATION	5.314458489342484E-4	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998480610071865	WITHOUT_CLASSIFICATION	1.5193899281352422E-4	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998480610071865	WITHOUT_CLASSIFICATION	1.5193899281352422E-4	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999026332810187	WITHOUT_CLASSIFICATION	9.736671898128341E-5	TEST
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999562155858053	WITHOUT_CLASSIFICATION	4.378441419462355E-5	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999772939104209	WITHOUT_CLASSIFICATION	2.270608957905825E-5	TEST
// check the condition	WITHOUT_CLASSIFICATION	0.9999896671284414	WITHOUT_CLASSIFICATION	1.0332871558551635E-5	TEST
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999897716748306	WITHOUT_CLASSIFICATION	1.0228325169400664E-4	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999770227585553	WITHOUT_CLASSIFICATION	2.2977241444702424E-5	TEST
// break jump	WITHOUT_CLASSIFICATION	0.9999580176943411	WITHOUT_CLASSIFICATION	4.1982305658763876E-5	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9995252145899384	WITHOUT_CLASSIFICATION	4.7478541006155207E-4	TEST
//[reg]	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9995886565864558	WITHOUT_CLASSIFICATION	4.1134341354419953E-4	TEST
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999814416396178	WITHOUT_CLASSIFICATION	1.8558360382223437E-5	TEST
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999737011051281	WITHOUT_CLASSIFICATION	2.6298894871936505E-5	TEST
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999770227585553	WITHOUT_CLASSIFICATION	2.2977241444702424E-5	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9997222039916582	WITHOUT_CLASSIFICATION	2.7779600834184986E-4	TEST
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9997222039916582	WITHOUT_CLASSIFICATION	2.7779600834184986E-4	TEST
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999543463117826	WITHOUT_CLASSIFICATION	4.5653688217348824E-5	TEST
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999769959707875	WITHOUT_CLASSIFICATION	2.3004029212581063E-5	TEST
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999815452152102	WITHOUT_CLASSIFICATION	1.8454784789764607E-5	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999237690008902	WITHOUT_CLASSIFICATION	7.623099910979215E-5	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999697794074026	WITHOUT_CLASSIFICATION	3.0220592597375087E-5	TEST
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.999969885018923	WITHOUT_CLASSIFICATION	3.0114981076918744E-5	TEST
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999561901809148	WITHOUT_CLASSIFICATION	4.3809819085183976E-5	TEST
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.999919044429334	WITHOUT_CLASSIFICATION	8.095557066595727E-5	TEST
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999611643106472	WITHOUT_CLASSIFICATION	3.8835689352824305E-5	TEST
// false // zero	WITHOUT_CLASSIFICATION	0.9999588807863484	WITHOUT_CLASSIFICATION	4.1119213651544905E-5	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999912811270971	WITHOUT_CLASSIFICATION	8.71887290289486E-5	TEST
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999237690008902	WITHOUT_CLASSIFICATION	7.623099910979215E-5	TEST
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999697794074026	WITHOUT_CLASSIFICATION	3.0220592597375087E-5	TEST
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999755592962813	WITHOUT_CLASSIFICATION	2.4440703718637304E-5	TEST
// push false	WITHOUT_CLASSIFICATION	0.9999588445299955	WITHOUT_CLASSIFICATION	4.1155470004623486E-5	TEST
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9996037452901051	WITHOUT_CLASSIFICATION	3.962547098949498E-4	TEST
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9998786113889467	WITHOUT_CLASSIFICATION	1.2138861105325954E-4	TEST
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
//[C]	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
// push true	WITHOUT_CLASSIFICATION	0.999964384284563	WITHOUT_CLASSIFICATION	3.5615715437031324E-5	TEST
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999442047336041	WITHOUT_CLASSIFICATION	5.5795266395849306E-5	TEST
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9996037452901051	WITHOUT_CLASSIFICATION	3.962547098949498E-4	TEST
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
//[boolean]	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999299293879597	WITHOUT_CLASSIFICATION	7.00706120403783E-5	TEST
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9998636549337612	WITHOUT_CLASSIFICATION	1.3634506623890164E-4	TEST
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.999678485026955	WITHOUT_CLASSIFICATION	3.215149730450624E-4	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999954339301262	WITHOUT_CLASSIFICATION	4.566069873813605E-6	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999590888269025	WITHOUT_CLASSIFICATION	4.091117309736185E-5	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999715670558125	WITHOUT_CLASSIFICATION	2.8432944187548396E-5	TEST
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9998288028609014	WITHOUT_CLASSIFICATION	1.7119713909869398E-4	TEST
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// static scope	WITHOUT_CLASSIFICATION	0.9999590888269025	WITHOUT_CLASSIFICATION	4.091117309736185E-5	TEST
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999715670558125	WITHOUT_CLASSIFICATION	2.8432944187548396E-5	TEST
// finally with exception	WITHOUT_CLASSIFICATION	0.9997340973826023	WITHOUT_CLASSIFICATION	2.6590261739763593E-4	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999837392984963	WITHOUT_CLASSIFICATION	1.626070150366255E-5	TEST
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9997952826918549	WITHOUT_CLASSIFICATION	2.0471730814502646E-4	TEST
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9998591782043127	WITHOUT_CLASSIFICATION	1.4082179568734767E-4	TEST
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9998747558460777	WITHOUT_CLASSIFICATION	1.252441539223754E-4	TEST
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9998938720831118	WITHOUT_CLASSIFICATION	1.0612791688826095E-4	TEST
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999757023411446	WITHOUT_CLASSIFICATION	2.4297658855336585E-5	TEST
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999780881850137	WITHOUT_CLASSIFICATION	2.1911814986366365E-5	TEST
// script object	WITHOUT_CLASSIFICATION	0.9999644907363987	WITHOUT_CLASSIFICATION	3.550926360122108E-5	TEST
// arities	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9995763523084792	WITHOUT_CLASSIFICATION	4.2364769152089673E-4	TEST
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.999932195662422	WITHOUT_CLASSIFICATION	6.780433757803054E-5	TEST
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999710158350468	WITHOUT_CLASSIFICATION	2.8984164953212892E-5	TEST
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999774254301971	WITHOUT_CLASSIFICATION	2.2574569802905896E-5	TEST
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9981947263270522	WITHOUT_CLASSIFICATION	0.0018052736729477915	TEST
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9998650572765165	WITHOUT_CLASSIFICATION	1.349427234834052E-4	TEST
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999576907356299	WITHOUT_CLASSIFICATION	4.230926437004113E-5	TEST
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999006965831297	WITHOUT_CLASSIFICATION	9.930341687030264E-5	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999631558900718	WITHOUT_CLASSIFICATION	3.68441099282483E-5	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999466122031964	WITHOUT_CLASSIFICATION	5.338779680363906E-5	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999687921304118	WITHOUT_CLASSIFICATION	3.120786958814576E-5	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999586364723686	WITHOUT_CLASSIFICATION	4.13635276314256E-5	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999586364723686	WITHOUT_CLASSIFICATION	4.13635276314256E-5	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9998428606945795	WITHOUT_CLASSIFICATION	1.5713930542052827E-4	TEST
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9998428606945795	WITHOUT_CLASSIFICATION	1.5713930542052827E-4	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999543344709759	WITHOUT_CLASSIFICATION	4.566552902414869E-5	TEST
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999543344709759	WITHOUT_CLASSIFICATION	4.566552902414869E-5	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9998792241729649	WITHOUT_CLASSIFICATION	1.2077582703504022E-4	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999746986415454	WITHOUT_CLASSIFICATION	2.530135845467276E-5	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999922460009096	WITHOUT_CLASSIFICATION	7.753999090345128E-6	TEST
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.999968914115951	WITHOUT_CLASSIFICATION	3.108588404885995E-5	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999651672873031	WITHOUT_CLASSIFICATION	3.4832712696993226E-5	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999503005409598	WITHOUT_CLASSIFICATION	4.96994590402154E-5	TEST
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999253946270573	WITHOUT_CLASSIFICATION	7.460537294272908E-5	TEST
// then optional args	WITHOUT_CLASSIFICATION	0.9999663750164842	WITHOUT_CLASSIFICATION	3.362498351573128E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998480610071865	WITHOUT_CLASSIFICATION	1.5193899281352422E-4	TEST
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9998792241729649	WITHOUT_CLASSIFICATION	1.2077582703504022E-4	TEST
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999746986415454	WITHOUT_CLASSIFICATION	2.530135845467276E-5	TEST
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999922460009096	WITHOUT_CLASSIFICATION	7.753999090345128E-6	TEST
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999651672873031	WITHOUT_CLASSIFICATION	3.4832712696993226E-5	TEST
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999503005409598	WITHOUT_CLASSIFICATION	4.96994590402154E-5	TEST
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.999903728896438	WITHOUT_CLASSIFICATION	9.62711035619772E-5	TEST
// finally, post args	WITHOUT_CLASSIFICATION	0.9999395648403535	WITHOUT_CLASSIFICATION	6.0435159646471376E-5	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9974265404979668	WITHOUT_CLASSIFICATION	0.0025734595020332476	TEST
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9974265404979668	WITHOUT_CLASSIFICATION	0.0025734595020332476	TEST
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999558272331984	WITHOUT_CLASSIFICATION	4.417276680152778E-5	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9991989437046067	WITHOUT_CLASSIFICATION	8.010562953933801E-4	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999607348867162	WITHOUT_CLASSIFICATION	3.926511328372101E-5	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999561178040022	WITHOUT_CLASSIFICATION	4.3882195997821256E-5	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999561178040022	WITHOUT_CLASSIFICATION	4.3882195997821256E-5	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998699802842046	WITHOUT_CLASSIFICATION	1.3001971579544542E-4	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9984177534079091	WITHOUT_CLASSIFICATION	0.0015822465920908755	TEST
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999865760809675	WITHOUT_CLASSIFICATION	1.342391903254061E-5	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999901259012042	WITHOUT_CLASSIFICATION	9.874098795741913E-6	TEST
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999912630924841	WITHOUT_CLASSIFICATION	8.73690751591123E-6	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999027478025257	WITHOUT_CLASSIFICATION	9.725219747421983E-5	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999753336854843	WITHOUT_CLASSIFICATION	2.466631451581018E-5	TEST
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999652250538851	WITHOUT_CLASSIFICATION	3.4774946114839925E-5	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9998267383755114	WITHOUT_CLASSIFICATION	1.7326162448858313E-4	TEST
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999675603811122	WITHOUT_CLASSIFICATION	3.2439618887821374E-5	TEST
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999588675343263	WITHOUT_CLASSIFICATION	4.113246567375245E-5	TEST
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9998699802842046	WITHOUT_CLASSIFICATION	1.3001971579544542E-4	TEST
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9984177534079091	WITHOUT_CLASSIFICATION	0.0015822465920908755	TEST
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999901259012042	WITHOUT_CLASSIFICATION	9.874098795741913E-6	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999812755230854	WITHOUT_CLASSIFICATION	1.8724476914740053E-5	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999607348867162	WITHOUT_CLASSIFICATION	3.926511328372101E-5	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999607348867162	WITHOUT_CLASSIFICATION	3.926511328372101E-5	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999912811270971	WITHOUT_CLASSIFICATION	8.71887290289486E-5	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999912811270971	WITHOUT_CLASSIFICATION	8.71887290289486E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9998331749235205	WITHOUT_CLASSIFICATION	1.6682507647953291E-4	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9998331749235205	WITHOUT_CLASSIFICATION	1.6682507647953291E-4	TEST
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999854085574936	WITHOUT_CLASSIFICATION	1.4591442506362287E-5	TEST
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999953341923395	WITHOUT_CLASSIFICATION	4.665807660367287E-6	TEST
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9996909921695928	WITHOUT_CLASSIFICATION	3.090078304071763E-4	TEST
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9998299307378644	WITHOUT_CLASSIFICATION	1.7006926213557018E-4	TEST
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999856898734327	WITHOUT_CLASSIFICATION	1.4310126567237348E-5	TEST
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999772361422428	WITHOUT_CLASSIFICATION	2.276385775717962E-5	TEST
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999849658927569	WITHOUT_CLASSIFICATION	1.5034107243034793E-5	TEST
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999470597561656	WITHOUT_CLASSIFICATION	5.294024383437634E-5	TEST
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9998402559173177	WITHOUT_CLASSIFICATION	1.5974408268228476E-4	TEST
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999651527653934	WITHOUT_CLASSIFICATION	3.4847234606526616E-5	TEST
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9996925963017697	WITHOUT_CLASSIFICATION	3.074036982303139E-4	TEST
// verify the class	WITHOUT_CLASSIFICATION	0.9999912015148361	WITHOUT_CLASSIFICATION	8.798485163944114E-6	TEST
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9998904423867035	WITHOUT_CLASSIFICATION	1.0955761329650593E-4	TEST
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.999980877403335	WITHOUT_CLASSIFICATION	1.9122596665122672E-5	TEST
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999694938183368	WITHOUT_CLASSIFICATION	3.0506181663298427E-5	TEST
// thread context	WITHOUT_CLASSIFICATION	0.9999642696822426	WITHOUT_CLASSIFICATION	3.573031775735286E-5	TEST
// line number	WITHOUT_CLASSIFICATION	0.9999673285575668	WITHOUT_CLASSIFICATION	3.267144243336134E-5	TEST
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999154763893553	WITHOUT_CLASSIFICATION	8.452361064468443E-5	TEST
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9998410256690247	WITHOUT_CLASSIFICATION	1.589743309754197E-4	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999753336854843	WITHOUT_CLASSIFICATION	2.466631451581018E-5	TEST
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9998267383755114	WITHOUT_CLASSIFICATION	1.7326162448858313E-4	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999625413918237	WITHOUT_CLASSIFICATION	3.745860817621682E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9998954864916576	WITHOUT_CLASSIFICATION	1.0451350834238835E-4	TEST
// block	WITHOUT_CLASSIFICATION	0.9998954864916576	WITHOUT_CLASSIFICATION	1.0451350834238835E-4	TEST
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999812755230854	WITHOUT_CLASSIFICATION	1.8724476914740053E-5	TEST
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999607348867162	WITHOUT_CLASSIFICATION	3.926511328372101E-5	TEST
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999912811270971	WITHOUT_CLASSIFICATION	8.71887290289486E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9998331749235205	WITHOUT_CLASSIFICATION	1.6682507647953291E-4	TEST
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9996550198543565	WITHOUT_CLASSIFICATION	3.449801456435395E-4	TEST
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9955800221011575	WITHOUT_CLASSIFICATION	0.004419977898842552	TEST
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999576146794968	WITHOUT_CLASSIFICATION	4.238532050321701E-5	TEST
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999057936385027	WITHOUT_CLASSIFICATION	9.42063614972016E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999401641905387	WITHOUT_CLASSIFICATION	5.9835809461261724E-5	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999401641905387	WITHOUT_CLASSIFICATION	5.9835809461261724E-5	TEST
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9998516379228214	WITHOUT_CLASSIFICATION	1.4836207717863067E-4	TEST
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999554791838652	WITHOUT_CLASSIFICATION	4.4520816134860526E-5	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999409016084491	WITHOUT_CLASSIFICATION	5.90983915510209E-5	TEST
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999554791838652	WITHOUT_CLASSIFICATION	4.4520816134860526E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.999981126839431	WITHOUT_CLASSIFICATION	1.887316056895422E-5	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.999981126839431	WITHOUT_CLASSIFICATION	1.887316056895422E-5	TEST
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9997257840748874	WITHOUT_CLASSIFICATION	2.742159251125463E-4	TEST
// normal closure	WITHOUT_CLASSIFICATION	0.999958251087164	WITHOUT_CLASSIFICATION	4.174891283598281E-5	TEST
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999092196597096	WITHOUT_CLASSIFICATION	9.078034029039564E-5	TEST
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9938768956642883	WITHOUT_CLASSIFICATION	0.00612310433571165	TEST
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999699822118531	WITHOUT_CLASSIFICATION	3.0017788146911732E-5	TEST
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.999953257080474	WITHOUT_CLASSIFICATION	4.674291952610462E-5	TEST
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999408584388556	WITHOUT_CLASSIFICATION	5.914156114425943E-5	TEST
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999601213050333	WITHOUT_CLASSIFICATION	3.9878694966586605E-5	TEST
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.999921270893845	WITHOUT_CLASSIFICATION	7.872910615514019E-5	TEST
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9841622617031753	WITHOUT_CLASSIFICATION	0.01583773829682464	TEST
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9998115056635822	WITHOUT_CLASSIFICATION	1.884943364177474E-4	TEST
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9997389281522501	WITHOUT_CLASSIFICATION	2.610718477499059E-4	TEST
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999961395362548	WITHOUT_CLASSIFICATION	3.860463745261167E-6	TEST
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999822982280689	WITHOUT_CLASSIFICATION	1.7701771930966626E-5	TEST
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9994437898112944	WITHOUT_CLASSIFICATION	5.562101887056127E-4	TEST
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999672459316767	WITHOUT_CLASSIFICATION	3.275406832334835E-5	TEST
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999638100834247	WITHOUT_CLASSIFICATION	3.61899165753533E-5	TEST
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999742600704444	WITHOUT_CLASSIFICATION	2.5739929555512145E-5	TEST
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999991101655498	WITHOUT_CLASSIFICATION	8.898344503345303E-7	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999724433815187	WITHOUT_CLASSIFICATION	2.7556618481295026E-5	TEST
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9998242189513178	WITHOUT_CLASSIFICATION	1.7578104868224808E-4	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999579793760215	WITHOUT_CLASSIFICATION	4.2020623978485635E-5	TEST
// inline script	WITHOUT_CLASSIFICATION	0.9999579793760215	WITHOUT_CLASSIFICATION	4.2020623978485635E-5	TEST
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999360532304409	WITHOUT_CLASSIFICATION	6.394676955913743E-5	TEST
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999856546155845	WITHOUT_CLASSIFICATION	1.4345384415435799E-5	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999957821954613	WITHOUT_CLASSIFICATION	4.2178045387054265E-5	TEST
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999957821954613	WITHOUT_CLASSIFICATION	4.2178045387054265E-5	TEST
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9998952886384943	WITHOUT_CLASSIFICATION	1.0471136150560902E-4	TEST
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999779649792752	WITHOUT_CLASSIFICATION	2.2035020724876054E-5	TEST
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9998883952765283	WITHOUT_CLASSIFICATION	1.116047234717105E-4	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999597320220468	WITHOUT_CLASSIFICATION	4.0267977953177944E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999597320220468	WITHOUT_CLASSIFICATION	4.0267977953177944E-5	TEST
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999361552695561	WITHOUT_CLASSIFICATION	6.384473044390203E-5	TEST
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999965330509656	WITHOUT_CLASSIFICATION	3.4669490344267144E-6	TEST
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999875707749027	WITHOUT_CLASSIFICATION	1.2429225097164553E-5	TEST
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999856161534305	WITHOUT_CLASSIFICATION	1.438384656954632E-5	TEST
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9998731074751264	WITHOUT_CLASSIFICATION	1.26892524873714E-4	TEST
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999864484653007	WITHOUT_CLASSIFICATION	1.3551534699342026E-5	TEST
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999711309014879	WITHOUT_CLASSIFICATION	2.8869098511994617E-5	TEST
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999845735711793	WITHOUT_CLASSIFICATION	1.5426428820633297E-5	TEST
// build each "when"	WITHOUT_CLASSIFICATION	0.9999656626662589	WITHOUT_CLASSIFICATION	3.4337333741241444E-5	TEST
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9998738259532575	WITHOUT_CLASSIFICATION	1.2617404674242834E-4	TEST
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9997517947467299	WITHOUT_CLASSIFICATION	2.482052532700885E-4	TEST
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999592901255429	WITHOUT_CLASSIFICATION	4.070987445720811E-5	TEST
// close it out	WITHOUT_CLASSIFICATION	0.9998441089426502	WITHOUT_CLASSIFICATION	1.5589105734984396E-4	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9997126760967823	WITHOUT_CLASSIFICATION	2.873239032176667E-4	TEST
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.99996356879688	WITHOUT_CLASSIFICATION	3.643120311999372E-5	TEST
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999950881299754	WITHOUT_CLASSIFICATION	4.911870024601964E-6	TEST
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999853031609847	WITHOUT_CLASSIFICATION	1.4696839015287775E-5	TEST
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999231014712309	WITHOUT_CLASSIFICATION	7.689852876916529E-5	TEST
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999238653293303	WITHOUT_CLASSIFICATION	7.613467066965108E-5	TEST
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999648573824638	WITHOUT_CLASSIFICATION	3.5142617536293155E-5	TEST
// Instance method	WITHOUT_CLASSIFICATION	0.9999632490830135	WITHOUT_CLASSIFICATION	3.675091698648986E-5	TEST
// Class method	WITHOUT_CLASSIFICATION	0.9999651671707883	WITHOUT_CLASSIFICATION	3.483282921174427E-5	TEST
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999060421006025	WITHOUT_CLASSIFICATION	9.395789939756484E-5	TEST
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999769994787825	WITHOUT_CLASSIFICATION	2.3000521217552903E-5	TEST
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999656258555093	WITHOUT_CLASSIFICATION	3.437414449065092E-5	TEST
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999780753109218	WITHOUT_CLASSIFICATION	2.192468907835417E-5	TEST
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9986101607043846	WITHOUT_CLASSIFICATION	0.0013898392956153496	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999256687616767	WITHOUT_CLASSIFICATION	7.433123832342675E-5	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999585085945428	WITHOUT_CLASSIFICATION	4.149140545704893E-5	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999977222656287	WITHOUT_CLASSIFICATION	2.2777343712726054E-6	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999953868705549	WITHOUT_CLASSIFICATION	4.613129445167465E-6	TEST
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9997126760967823	WITHOUT_CLASSIFICATION	2.873239032176667E-4	TEST
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999256687616767	WITHOUT_CLASSIFICATION	7.433123832342675E-5	TEST
// Build args	WITHOUT_CLASSIFICATION	0.9999585085945428	WITHOUT_CLASSIFICATION	4.149140545704893E-5	TEST
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999953868705549	WITHOUT_CLASSIFICATION	4.613129445167465E-6	TEST
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9996213231774257	WITHOUT_CLASSIFICATION	3.7867682257432765E-4	TEST
// Build the new module	WITHOUT_CLASSIFICATION	0.9999525432536858	WITHOUT_CLASSIFICATION	4.745674631422486E-5	TEST
// Build the module body	WITHOUT_CLASSIFICATION	0.9999723857567517	WITHOUT_CLASSIFICATION	2.7614243248363157E-5	TEST
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9997504581001753	WITHOUT_CLASSIFICATION	2.495418998247371E-4	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999802010847694	WITHOUT_CLASSIFICATION	1.9798915230629682E-5	TEST
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999972996903317	WITHOUT_CLASSIFICATION	2.7003096683929434E-6	TEST
// get attr	WITHOUT_CLASSIFICATION	0.9999724433815187	WITHOUT_CLASSIFICATION	2.7556618481295026E-5	TEST
// call operator	WITHOUT_CLASSIFICATION	0.9999724664425094	WITHOUT_CLASSIFICATION	2.7533557490696584E-5	TEST
// set attr	WITHOUT_CLASSIFICATION	0.999974897717375	WITHOUT_CLASSIFICATION	2.5102282624874714E-5	TEST
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999484808155674	WITHOUT_CLASSIFICATION	5.151918443260675E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999462746391787	WITHOUT_CLASSIFICATION	5.372536082120517E-5	TEST
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999462746391787	WITHOUT_CLASSIFICATION	5.372536082120517E-5	TEST
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999197080330501	WITHOUT_CLASSIFICATION	8.029196694985772E-5	TEST
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999892438591431	WITHOUT_CLASSIFICATION	1.075614085686019E-5	TEST
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999948301211155	WITHOUT_CLASSIFICATION	5.169878884541558E-6	TEST
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999819856842369	WITHOUT_CLASSIFICATION	1.801431576304301E-5	TEST
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998330917840618	WITHOUT_CLASSIFICATION	1.6690821593832197E-4	TEST
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999462430029602	WITHOUT_CLASSIFICATION	5.375699703969068E-5	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999933448990254	WITHOUT_CLASSIFICATION	6.655100974639278E-6	TEST
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999674226257373	WITHOUT_CLASSIFICATION	3.2577374262709965E-5	TEST
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999992535942832	WITHOUT_CLASSIFICATION	7.464057167307814E-7	TEST
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999665553834185	WITHOUT_CLASSIFICATION	3.344461658156928E-5	TEST
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999982615822437	WITHOUT_CLASSIFICATION	1.7384177563760328E-6	TEST
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9998701170897455	WITHOUT_CLASSIFICATION	1.2988291025463211E-4	TEST
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999909555063752	WITHOUT_CLASSIFICATION	9.044493624816419E-6	TEST
// alu operations	WITHOUT_CLASSIFICATION	0.9999590089765567	WITHOUT_CLASSIFICATION	4.099102344327309E-5	TEST
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.99999517312629	WITHOUT_CLASSIFICATION	4.826873709960159E-6	TEST
// closure instructions	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// eval instructions	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// def instructions	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// exception instructions	WITHOUT_CLASSIFICATION	0.9999524693063034	WITHOUT_CLASSIFICATION	4.7530693696541494E-5	TEST
// Loads	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// Stores	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999887796836171	WITHOUT_CLASSIFICATION	1.1220316382823797E-5	TEST
// others	WITHOUT_CLASSIFICATION	0.9998891313015899	WITHOUT_CLASSIFICATION	1.1086869841021284E-4	TEST
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999637997047228	WITHOUT_CLASSIFICATION	3.6200295277282306E-5	TEST
// optimization guards	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.999837111132935	WITHOUT_CLASSIFICATION	1.6288886706503918E-4	TEST
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999968839251806	WITHOUT_CLASSIFICATION	3.1160748194085057E-6	TEST
// scripts	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999910029487442	WITHOUT_CLASSIFICATION	8.997051255780518E-6	TEST
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999874528531085	WITHOUT_CLASSIFICATION	1.2547146891524686E-5	TEST
// methods and closures	WITHOUT_CLASSIFICATION	0.9999908531824925	WITHOUT_CLASSIFICATION	9.14681750755692E-6	TEST
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999093013542292	WITHOUT_CLASSIFICATION	9.06986457708604E-5	TEST
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9998673012351473	WITHOUT_CLASSIFICATION	1.3269876485256797E-4	TEST
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9998957677590972	WITHOUT_CLASSIFICATION	1.0423224090281513E-4	TEST
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9988390743868834	WITHOUT_CLASSIFICATION	0.0011609256131166414	TEST
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9997292737125425	WITHOUT_CLASSIFICATION	2.7072628745747974E-4	TEST
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9993596012836135	WITHOUT_CLASSIFICATION	6.40398716386549E-4	TEST
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999622629347771	WITHOUT_CLASSIFICATION	3.773706522303983E-5	TEST
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9997505882896662	WITHOUT_CLASSIFICATION	2.494117103337032E-4	TEST
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999193710795699	WITHOUT_CLASSIFICATION	8.062892043015302E-5	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9993822771790946	WITHOUT_CLASSIFICATION	6.177228209054822E-4	TEST
// Readline	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999679999244915	WITHOUT_CLASSIFICATION	3.200007550858836E-5	TEST
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.999932097247845	WITHOUT_CLASSIFICATION	6.790275215499619E-5	TEST
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999791135198186	WITHOUT_CLASSIFICATION	2.0886480181366237E-5	TEST
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999913777771814	WITHOUT_CLASSIFICATION	8.622222818683014E-6	TEST
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999992435071948	WITHOUT_CLASSIFICATION	7.564928050746934E-7	TEST
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999316574406731	WITHOUT_CLASSIFICATION	6.834255932679067E-5	TEST
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.999857853462026	WITHOUT_CLASSIFICATION	1.421465379739933E-4	TEST
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9997959274730578	WITHOUT_CLASSIFICATION	2.040725269422838E-4	TEST
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999927649453044	WITHOUT_CLASSIFICATION	7.235054695685627E-6	TEST
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9998779188598012	WITHOUT_CLASSIFICATION	1.220811401988903E-4	TEST
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.999421265309569	WITHOUT_CLASSIFICATION	5.787346904310497E-4	TEST
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9907303013270184	WITHOUT_CLASSIFICATION	0.009269698672981483	TEST
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999912928694422	WITHOUT_CLASSIFICATION	8.707130557794106E-5	TEST
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999823810764455	WITHOUT_CLASSIFICATION	1.761892355450062E-5	TEST
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.999829066087412	WITHOUT_CLASSIFICATION	1.709339125880112E-4	TEST
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9998700592372488	WITHOUT_CLASSIFICATION	1.2994076275118455E-4	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9968384820614351	WITHOUT_CLASSIFICATION	0.003161517938564941	TEST
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9968384820614351	WITHOUT_CLASSIFICATION	0.003161517938564941	TEST
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999912928694422	WITHOUT_CLASSIFICATION	8.707130557794106E-5	TEST
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9994766983701979	WITHOUT_CLASSIFICATION	5.233016298021245E-4	TEST
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999912928694422	WITHOUT_CLASSIFICATION	8.707130557794106E-5	TEST
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999137319840282	WITHOUT_CLASSIFICATION	8.626801597170625E-5	TEST
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9998703334398397	WITHOUT_CLASSIFICATION	1.2966656016028831E-4	TEST
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999786352133981	WITHOUT_CLASSIFICATION	2.1364786601851862E-5	TEST
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9998284982139817	WITHOUT_CLASSIFICATION	1.7150178601832886E-4	TEST
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9998343506409	WITHOUT_CLASSIFICATION	1.656493590999874E-4	TEST
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9998343157149185	WITHOUT_CLASSIFICATION	1.6568428508154597E-4	TEST
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.999977185934125	WITHOUT_CLASSIFICATION	2.2814065875098544E-5	TEST
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998315377350894	WITHOUT_CLASSIFICATION	1.68462264910627E-4	TEST
// class or module	WITHOUT_CLASSIFICATION	0.9999751466445144	WITHOUT_CLASSIFICATION	2.4853355485608236E-5	TEST
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999693770412501	WITHOUT_CLASSIFICATION	3.062295874993478E-5	TEST
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999157293836011	WITHOUT_CLASSIFICATION	8.42706163989621E-5	TEST
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9998984300317729	WITHOUT_CLASSIFICATION	1.0156996822703203E-4	TEST
// IN is the same!	WITHOUT_CLASSIFICATION	0.999954897951149	WITHOUT_CLASSIFICATION	4.510204885095564E-5	TEST
// IN changed!	WITHOUT_CLASSIFICATION	0.9999582194841397	WITHOUT_CLASSIFICATION	4.178051586032154E-5	TEST
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998843533591761	WITHOUT_CLASSIFICATION	1.1564664082388301E-4	TEST
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9998987905710007	WITHOUT_CLASSIFICATION	1.012094289992702E-4	TEST
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9987699185540776	WITHOUT_CLASSIFICATION	0.0012300814459223826	TEST
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998656469500543	WITHOUT_CLASSIFICATION	1.3435304994557923E-4	TEST
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999855109847162	WITHOUT_CLASSIFICATION	1.448901528373618E-5	TEST
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.999989927734954	WITHOUT_CLASSIFICATION	1.0072265046068897E-5	TEST
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999779877010873	WITHOUT_CLASSIFICATION	2.2012298912750453E-5	TEST
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9998642405395695	WITHOUT_CLASSIFICATION	1.3575946043047307E-4	TEST
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9990994829576932	WITHOUT_CLASSIFICATION	9.005170423068596E-4	TEST
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9995089040331654	WITHOUT_CLASSIFICATION	4.910959668347015E-4	TEST
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9973235560292852	WITHOUT_CLASSIFICATION	0.0026764439707148042	TEST
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999252259406564	WITHOUT_CLASSIFICATION	7.47740593436393E-5	TEST
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9997730426197677	WITHOUT_CLASSIFICATION	2.269573802323723E-4	TEST
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999849486193493	WITHOUT_CLASSIFICATION	1.505138065086189E-5	TEST
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999774279731145	WITHOUT_CLASSIFICATION	2.2572026885439445E-5	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999755973069022	WITHOUT_CLASSIFICATION	2.4402693097792759E-4	TEST
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9991862242547427	WITHOUT_CLASSIFICATION	8.137757452571945E-4	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999755973069022	WITHOUT_CLASSIFICATION	2.4402693097792759E-4	TEST
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999154420122853	WITHOUT_CLASSIFICATION	8.455798771463554E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999007643031693	WITHOUT_CLASSIFICATION	9.923569683068387E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999007643031693	WITHOUT_CLASSIFICATION	9.923569683068387E-5	TEST
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999007643031693	WITHOUT_CLASSIFICATION	9.923569683068387E-5	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999602013835752	WITHOUT_CLASSIFICATION	3.979861642479767E-5	TEST
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999602013835752	WITHOUT_CLASSIFICATION	3.979861642479767E-5	TEST
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9989587457545178	WITHOUT_CLASSIFICATION	0.0010412542454822122	TEST
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999172839396816	WITHOUT_CLASSIFICATION	8.271606031839134E-5	TEST
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999485708597164	WITHOUT_CLASSIFICATION	5.142914028360016E-5	TEST
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999788093394486	WITHOUT_CLASSIFICATION	2.1190660551349633E-5	TEST
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999369458077237	WITHOUT_CLASSIFICATION	6.305419227630375E-5	TEST
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9988273447560448	WITHOUT_CLASSIFICATION	0.0011726552439551394	TEST
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999265410169379	WITHOUT_CLASSIFICATION	7.34589830620808E-5	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999071030749512	WITHOUT_CLASSIFICATION	9.289692504876918E-5	TEST
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.999821024969203	WITHOUT_CLASSIFICATION	1.7897503079702986E-4	TEST
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.999978840051172	WITHOUT_CLASSIFICATION	2.1159948828044154E-5	TEST
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999243829411687	WITHOUT_CLASSIFICATION	7.561705883129166E-5	TEST
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999783046342825	WITHOUT_CLASSIFICATION	2.1695365717486813E-5	TEST
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999657982697678	WITHOUT_CLASSIFICATION	3.42017302320937E-5	TEST
// root-level logic	WITHOUT_CLASSIFICATION	0.9999579934565274	WITHOUT_CLASSIFICATION	4.200654347272661E-5	TEST
// root-level methods	WITHOUT_CLASSIFICATION	0.9999518026981616	WITHOUT_CLASSIFICATION	4.8197301838419574E-5	TEST
// root-level classes	WITHOUT_CLASSIFICATION	0.9999427914757347	WITHOUT_CLASSIFICATION	5.720852426523245E-5	TEST
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999691220936296	WITHOUT_CLASSIFICATION	3.087790637038233E-5	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999590448049558	WITHOUT_CLASSIFICATION	4.0955195044114706E-5	TEST
// load receiver	WITHOUT_CLASSIFICATION	0.9999590448049558	WITHOUT_CLASSIFICATION	4.0955195044114706E-5	TEST
// receiver	WITHOUT_CLASSIFICATION	0.9999580290165362	WITHOUT_CLASSIFICATION	4.197098346380407E-5	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999590551022463	WITHOUT_CLASSIFICATION	4.0944897753712915E-5	TEST
// load arguments	WITHOUT_CLASSIFICATION	0.9999590551022463	WITHOUT_CLASSIFICATION	4.0944897753712915E-5	TEST
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999387700856365	WITHOUT_CLASSIFICATION	6.12299143636164E-5	TEST
// Object[] args	WITHOUT_CLASSIFICATION	0.9999581525673105	WITHOUT_CLASSIFICATION	4.184743268952187E-5	TEST
// load handle	WITHOUT_CLASSIFICATION	0.999966100794543	WITHOUT_CLASSIFICATION	3.389920545700739E-5	TEST
// args array	WITHOUT_CLASSIFICATION	0.9999585072955661	WITHOUT_CLASSIFICATION	4.149270443381748E-5	TEST
// i'th argument	WITHOUT_CLASSIFICATION	0.9999609439473518	WITHOUT_CLASSIFICATION	3.905605264818284E-5	TEST
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999279686932901	WITHOUT_CLASSIFICATION	7.203130670990109E-5	TEST
// Object arg0	WITHOUT_CLASSIFICATION	0.9999587345654064	WITHOUT_CLASSIFICATION	4.1265434593610135E-5	TEST
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9998942041707429	WITHOUT_CLASSIFICATION	1.057958292570526E-4	TEST
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999121023175674	WITHOUT_CLASSIFICATION	8.789768243259785E-5	TEST
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999623436519236	WITHOUT_CLASSIFICATION	3.765634807633728E-5	TEST
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999456285043119	WITHOUT_CLASSIFICATION	5.437149568818931E-5	TEST
// at end	WITHOUT_CLASSIFICATION	0.9998574366140662	WITHOUT_CLASSIFICATION	1.4256338593389897E-4	TEST
// undo check	WITHOUT_CLASSIFICATION	0.999989223728294	WITHOUT_CLASSIFICATION	1.0776271706041565E-5	TEST
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999877318133442	WITHOUT_CLASSIFICATION	1.226818665576283E-5	TEST
// ignore	WITHOUT_CLASSIFICATION	0.9999071030749512	WITHOUT_CLASSIFICATION	9.289692504876918E-5	TEST
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9996037452901051	WITHOUT_CLASSIFICATION	3.962547098949498E-4	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999711262194598	WITHOUT_CLASSIFICATION	2.8873780540187107E-5	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999740513690296	WITHOUT_CLASSIFICATION	2.594863097040785E-5	TEST
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999740513690296	WITHOUT_CLASSIFICATION	2.594863097040785E-5	TEST
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9996255315402088	WITHOUT_CLASSIFICATION	3.744684597911461E-4	TEST
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9996814417017161	WITHOUT_CLASSIFICATION	3.1855829828395036E-4	TEST
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.999978494330658	WITHOUT_CLASSIFICATION	2.150566934189356E-5	TEST
// restore position	WITHOUT_CLASSIFICATION	0.9999598610400683	WITHOUT_CLASSIFICATION	4.0138959931688514E-5	TEST
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.999964273254758	WITHOUT_CLASSIFICATION	3.57267452419326E-5	TEST
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999836114630678	WITHOUT_CLASSIFICATION	1.6388536932181066E-5	TEST
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999947808687136	WITHOUT_CLASSIFICATION	5.2191312863964046E-6	TEST
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9992281135062588	WITHOUT_CLASSIFICATION	7.718864937410834E-4	TEST
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9998480075545565	WITHOUT_CLASSIFICATION	1.5199244544348574E-4	TEST
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9997730676706946	WITHOUT_CLASSIFICATION	2.2693232930536724E-4	TEST
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9998979375858996	WITHOUT_CLASSIFICATION	1.0206241410044679E-4	TEST
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9998344898596763	WITHOUT_CLASSIFICATION	1.6551014032372714E-4	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999409135739126	WITHOUT_CLASSIFICATION	5.9086426087455754E-5	TEST
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9998758789333378	WITHOUT_CLASSIFICATION	1.2412106666225212E-4	TEST
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9995501231774084	WITHOUT_CLASSIFICATION	4.498768225915274E-4	TEST
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999528334583299	WITHOUT_CLASSIFICATION	4.716654167017906E-5	TEST
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999433706243844	WITHOUT_CLASSIFICATION	5.662937561545153E-5	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9998960961599811	WITHOUT_CLASSIFICATION	1.0390384001891203E-4	TEST
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999704047599446	WITHOUT_CLASSIFICATION	2.959524005546764E-5	TEST
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999958536382614	WITHOUT_CLASSIFICATION	4.146361738665661E-6	TEST
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999959029763544	WITHOUT_CLASSIFICATION	4.097023645580497E-6	TEST
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999719494131645	WITHOUT_CLASSIFICATION	2.8050586835513957E-5	TEST
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9997892689119969	WITHOUT_CLASSIFICATION	2.107310880031612E-4	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9984185534658663	WITHOUT_CLASSIFICATION	0.0015814465341337	TEST
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999616937775897	WITHOUT_CLASSIFICATION	3.830622241035103E-5	TEST
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999576333515313	WITHOUT_CLASSIFICATION	4.236664846866628E-5	TEST
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999341956049553	WITHOUT_CLASSIFICATION	6.580439504468535E-5	TEST
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999589673892955	WITHOUT_CLASSIFICATION	4.103261070451256E-5	TEST
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999052756992378	WITHOUT_CLASSIFICATION	9.472430076223067E-5	TEST
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999783878999519	WITHOUT_CLASSIFICATION	2.1612100048137444E-5	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999842860566793	WITHOUT_CLASSIFICATION	1.571394332070661E-4	TEST
// $blah	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9984185534658663	WITHOUT_CLASSIFICATION	0.0015814465341337	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999614989660027	WITHOUT_CLASSIFICATION	3.850103399737616E-5	TEST
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.999842860566793	WITHOUT_CLASSIFICATION	1.571394332070661E-4	TEST
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9996266899809191	WITHOUT_CLASSIFICATION	3.733100190809309E-4	TEST
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999693358985718	WITHOUT_CLASSIFICATION	3.066410142819251E-5	TEST
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999883317358181	WITHOUT_CLASSIFICATION	1.1668264181859752E-5	TEST
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999501298549184	WITHOUT_CLASSIFICATION	4.9870145081668984E-5	TEST
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999562102157842	WITHOUT_CLASSIFICATION	4.378978421573769E-5	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999883422538283	WITHOUT_CLASSIFICATION	1.1657746171671723E-5	TEST
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999883422538283	WITHOUT_CLASSIFICATION	1.1657746171671723E-5	TEST
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9997150707778714	WITHOUT_CLASSIFICATION	2.849292221286312E-4	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999847885541416	WITHOUT_CLASSIFICATION	1.5211445858266325E-5	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999763107373192	WITHOUT_CLASSIFICATION	2.3689262680720853E-5	TEST
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999763107373192	WITHOUT_CLASSIFICATION	2.3689262680720853E-5	TEST
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999997772099839	WITHOUT_CLASSIFICATION	2.22790016144176E-7	TEST
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
//AF_INET	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.999838445891607	WITHOUT_CLASSIFICATION	1.615541083930492E-4	TEST
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.999965950658335	WITHOUT_CLASSIFICATION	3.404934166500622E-5	TEST
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999969417976579	WITHOUT_CLASSIFICATION	3.0582023421017918E-6	TEST
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999477679423839	WITHOUT_CLASSIFICATION	5.22320576160299E-5	TEST
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999232472023617	WITHOUT_CLASSIFICATION	7.675279763833923E-5	TEST
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999470892077917	WITHOUT_CLASSIFICATION	5.291079220828823E-5	TEST
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999592389963107	WITHOUT_CLASSIFICATION	4.07610036892684E-5	TEST
// host and port given	WITHOUT_CLASSIFICATION	0.9999943851856404	WITHOUT_CLASSIFICATION	5.614814359488619E-6	TEST
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999364200941867	WITHOUT_CLASSIFICATION	6.357990581322374E-5	TEST
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9998737689557694	WITHOUT_CLASSIFICATION	1.2623104423054504E-4	TEST
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.999545502266202	WITHOUT_CLASSIFICATION	4.54497733798078E-4	TEST
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999472974129993	WITHOUT_CLASSIFICATION	5.270258700077878E-5	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998390852306487	WITHOUT_CLASSIFICATION	1.609147693513647E-4	TEST
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999476192275935	WITHOUT_CLASSIFICATION	5.238077240661237E-5	TEST
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9998965337901443	WITHOUT_CLASSIFICATION	1.0346620985563796E-4	TEST
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999205904195865	WITHOUT_CLASSIFICATION	7.940958041361513E-5	TEST
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9998186393850709	WITHOUT_CLASSIFICATION	1.813606149290683E-4	TEST
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9992610127618216	WITHOUT_CLASSIFICATION	7.389872381784673E-4	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.999720410110306	WITHOUT_CLASSIFICATION	2.79589889694053E-4	TEST
// line 323	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999658860544278	WITHOUT_CLASSIFICATION	3.411394557212129E-5	TEST
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999658860544278	WITHOUT_CLASSIFICATION	3.411394557212129E-5	TEST
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999862845722152	WITHOUT_CLASSIFICATION	1.3715427784818484E-5	TEST
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999616932104815	WITHOUT_CLASSIFICATION	3.8306789518505656E-5	TEST
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.999720410110306	WITHOUT_CLASSIFICATION	2.79589889694053E-4	TEST
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999797316003347	WITHOUT_CLASSIFICATION	2.0268399665361878E-5	TEST
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9997637315739873	WITHOUT_CLASSIFICATION	2.3626842601270865E-4	TEST
// RubySocket	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9996532666048035	WITHOUT_CLASSIFICATION	3.4673339519656775E-4	TEST
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.99992433282742	WITHOUT_CLASSIFICATION	7.566717257997423E-5	TEST
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999836779474277	WITHOUT_CLASSIFICATION	1.632205257232591E-5	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999983551735793	WITHOUT_CLASSIFICATION	1.6448264207027017E-5	TEST
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999404749438603	WITHOUT_CLASSIFICATION	5.9525056139627334E-5	TEST
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.999949529210016	WITHOUT_CLASSIFICATION	5.047078998388462E-5	TEST
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999275102324698	WITHOUT_CLASSIFICATION	7.248976753012152E-5	TEST
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9995770468065193	WITHOUT_CLASSIFICATION	4.2295319348077985E-4	TEST
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999625246233518	WITHOUT_CLASSIFICATION	3.7475376648137764E-5	TEST
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9998793054416744	WITHOUT_CLASSIFICATION	1.2069455832555592E-4	TEST
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999734701321298	WITHOUT_CLASSIFICATION	2.6529867870216162E-5	TEST
// be dead	WITHOUT_CLASSIFICATION	0.9999566374448007	WITHOUT_CLASSIFICATION	4.336255519935902E-5	TEST
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999622061051883	WITHOUT_CLASSIFICATION	3.779389481179863E-5	TEST
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999562999602498	WITHOUT_CLASSIFICATION	4.3700039750132695E-5	TEST
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9979624848724671	WITHOUT_CLASSIFICATION	0.002037515127532907	TEST
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9989939539483536	WITHOUT_CLASSIFICATION	0.0010060460516464287	TEST
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999881923189969	WITHOUT_CLASSIFICATION	1.1807681003140683E-5	TEST
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999942788767158	WITHOUT_CLASSIFICATION	5.721123284198735E-6	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998275197944295	WITHOUT_CLASSIFICATION	1.7248020557058863E-4	TEST
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9998452186452079	WITHOUT_CLASSIFICATION	1.5478135479203288E-4	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999460768043308	WITHOUT_CLASSIFICATION	5.3923195669283915E-5	TEST
// main body	WITHOUT_CLASSIFICATION	0.9999604839784124	WITHOUT_CLASSIFICATION	3.951602158765607E-5	TEST
// return jump handling	WITHOUT_CLASSIFICATION	0.99996554145143	WITHOUT_CLASSIFICATION	3.445854856992886E-5	TEST
// finally	WITHOUT_CLASSIFICATION	0.9998889852526852	WITHOUT_CLASSIFICATION	1.1101474731473363E-4	TEST
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999656921638236	WITHOUT_CLASSIFICATION	3.430783617644703E-5	TEST
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999399560564267	WITHOUT_CLASSIFICATION	6.0043943573354326E-5	TEST
// clear the redo	WITHOUT_CLASSIFICATION	0.999980438762982	WITHOUT_CLASSIFICATION	1.9561237018033897E-5	TEST
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999330813828865	WITHOUT_CLASSIFICATION	6.691861711353029E-5	TEST
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999188052323771	WITHOUT_CLASSIFICATION	8.119476762289001E-5	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9998457082691521	WITHOUT_CLASSIFICATION	1.5429173084791057E-4	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9995076097742168	WITHOUT_CLASSIFICATION	4.923902257832446E-4	TEST
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999631460700272	WITHOUT_CLASSIFICATION	3.6853929972635264E-5	TEST
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9997933956828162	WITHOUT_CLASSIFICATION	2.066043171838322E-4	TEST
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9998634636595729	WITHOUT_CLASSIFICATION	1.3653634042717992E-4	TEST
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999486490697859	WITHOUT_CLASSIFICATION	5.135093021409508E-5	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999335291130452	WITHOUT_CLASSIFICATION	6.647088695472441E-5	TEST
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999335291130452	WITHOUT_CLASSIFICATION	6.647088695472441E-5	TEST
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999462692495329	WITHOUT_CLASSIFICATION	5.373075046704703E-5	TEST
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999702115865227	WITHOUT_CLASSIFICATION	2.978841347733404E-5	TEST
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999559397885904	WITHOUT_CLASSIFICATION	4.406021140966673E-5	TEST
// return	WITHOUT_CLASSIFICATION	0.9999362739174333	WITHOUT_CLASSIFICATION	6.372608256666972E-5	TEST
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999631558900718	WITHOUT_CLASSIFICATION	3.68441099282483E-5	TEST
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999466122031964	WITHOUT_CLASSIFICATION	5.338779680363906E-5	TEST
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999203858614395	WITHOUT_CLASSIFICATION	7.961413856053989E-5	TEST
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9997005029608799	WITHOUT_CLASSIFICATION	2.994970391200936E-4	TEST
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9992820954912094	WITHOUT_CLASSIFICATION	7.179045087906459E-4	TEST
// tc	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// self // name	WITHOUT_CLASSIFICATION	0.9999421119527651	WITHOUT_CLASSIFICATION	5.788804723489516E-5	TEST
// no args	WITHOUT_CLASSIFICATION	0.9999008596154871	WITHOUT_CLASSIFICATION	9.914038451278856E-5	TEST
// variable args with block	WITHOUT_CLASSIFICATION	0.9996835118302254	WITHOUT_CLASSIFICATION	3.1648816977459355E-4	TEST
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999486006783644	WITHOUT_CLASSIFICATION	5.1399321635501436E-5	TEST
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999258795998908	WITHOUT_CLASSIFICATION	7.412040010920784E-5	TEST
// one arg with block	WITHOUT_CLASSIFICATION	0.9997683077794707	WITHOUT_CLASSIFICATION	2.3169222052925965E-4	TEST
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999461424501309	WITHOUT_CLASSIFICATION	5.385754986910928E-5	TEST
// two args with block	WITHOUT_CLASSIFICATION	0.9996100310053376	WITHOUT_CLASSIFICATION	3.89968994662309E-4	TEST
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999091792816602	WITHOUT_CLASSIFICATION	9.082071833976232E-5	TEST
// three args with block	WITHOUT_CLASSIFICATION	0.9996814413129838	WITHOUT_CLASSIFICATION	3.1855868701615553E-4	TEST
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999258142473125	WITHOUT_CLASSIFICATION	7.418575268750264E-5	TEST
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9996455748020057	WITHOUT_CLASSIFICATION	3.544251979943148E-4	TEST
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9991313786805666	WITHOUT_CLASSIFICATION	8.686213194333776E-4	TEST
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9998482649680718	WITHOUT_CLASSIFICATION	1.5173503192835656E-4	TEST
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999258024778799	WITHOUT_CLASSIFICATION	7.419752212011369E-5	TEST
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999874881456705	WITHOUT_CLASSIFICATION	1.2511854329499652E-4	TEST
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999897797861598	WITHOUT_CLASSIFICATION	1.0220213840198926E-4	TEST
// load target for invocations	WITHOUT_CLASSIFICATION	0.999948543905905	WITHOUT_CLASSIFICATION	5.145609409500668E-5	TEST
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999421984399806	WITHOUT_CLASSIFICATION	5.780156001942869E-5	TEST
// static invocation	WITHOUT_CLASSIFICATION	0.9999590564940477	WITHOUT_CLASSIFICATION	4.094350595224271E-5	TEST
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9991915310590316	WITHOUT_CLASSIFICATION	8.08468940968422E-4	TEST
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999886208872224	WITHOUT_CLASSIFICATION	1.1379112777614229E-5	TEST
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999679851224782	WITHOUT_CLASSIFICATION	3.2014877521878305E-5	TEST
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9995076097742168	WITHOUT_CLASSIFICATION	4.923902257832446E-4	TEST
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999258665255533	WITHOUT_CLASSIFICATION	7.41334744467094E-5	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999027340025588	WITHOUT_CLASSIFICATION	9.726599744122614E-5	TEST
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999027340025588	WITHOUT_CLASSIFICATION	9.726599744122614E-5	TEST
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.999947374831782	WITHOUT_CLASSIFICATION	5.2625168217993576E-5	TEST
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999234628373997	WITHOUT_CLASSIFICATION	7.653716260026423E-5	TEST
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// never reached	WITHOUT_CLASSIFICATION	0.9999609716133241	WITHOUT_CLASSIFICATION	3.902838667584908E-5	TEST
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9997677370964634	WITHOUT_CLASSIFICATION	2.3226290353673478E-4	TEST
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9997679416718908	WITHOUT_CLASSIFICATION	2.3205832810918592E-4	TEST
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9998313739179807	WITHOUT_CLASSIFICATION	1.6862608201920467E-4	TEST
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9997156659434439	WITHOUT_CLASSIFICATION	2.843340565561738E-4	TEST
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9997679416718908	WITHOUT_CLASSIFICATION	2.3205832810918592E-4	TEST
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9998313739179807	WITHOUT_CLASSIFICATION	1.6862608201920467E-4	TEST
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9997156659434439	WITHOUT_CLASSIFICATION	2.843340565561738E-4	TEST
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9997677370964634	WITHOUT_CLASSIFICATION	2.3226290353673478E-4	TEST
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999684618383815	WITHOUT_CLASSIFICATION	3.153816161854684E-5	TEST
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999227013211677	WITHOUT_CLASSIFICATION	7.729867883227155E-5	TEST
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999921631205545	WITHOUT_CLASSIFICATION	7.836879445580425E-6	TEST
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999460120675377	WITHOUT_CLASSIFICATION	5.398793246228419E-5	TEST
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9999559009391636	WITHOUT_CLASSIFICATION	4.409906083642505E-5	TEST
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999559397885904	WITHOUT_CLASSIFICATION	4.406021140966673E-5	TEST
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999679851224782	WITHOUT_CLASSIFICATION	3.2014877521878305E-5	TEST
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999460120675377	WITHOUT_CLASSIFICATION	5.398793246228419E-5	TEST
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999684618383815	WITHOUT_CLASSIFICATION	3.153816161854684E-5	TEST
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999147096900526	WITHOUT_CLASSIFICATION	8.529030994736671E-5	TEST
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999886685363736	WITHOUT_CLASSIFICATION	1.133146362643301E-5	TEST
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999931172789039	WITHOUT_CLASSIFICATION	6.882721096027948E-6	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999601052910017	WITHOUT_CLASSIFICATION	3.9894708998308517E-5	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999331837098926	WITHOUT_CLASSIFICATION	6.681629010731631E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9998841224722065	WITHOUT_CLASSIFICATION	1.1587752779353784E-4	TEST
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999933912643663	WITHOUT_CLASSIFICATION	6.608735633759408E-6	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999614049311129	WITHOUT_CLASSIFICATION	3.85950688871206E-5	TEST
// start setup method	WITHOUT_CLASSIFICATION	0.9999479924486743	WITHOUT_CLASSIFICATION	5.20075513256227E-5	TEST
// set RubyClass	WITHOUT_CLASSIFICATION	0.999974897717375	WITHOUT_CLASSIFICATION	2.5102282624874714E-5	TEST
// set Ruby	WITHOUT_CLASSIFICATION	0.999974897717375	WITHOUT_CLASSIFICATION	2.5102282624874714E-5	TEST
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999601806513335	WITHOUT_CLASSIFICATION	3.9819348666495496E-5	TEST
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9998900797962589	WITHOUT_CLASSIFICATION	1.0992020374117603E-4	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999686972091837	WITHOUT_CLASSIFICATION	3.13027908162779E-5	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999849496900028	WITHOUT_CLASSIFICATION	1.5050309997019103E-5	TEST
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999601052910017	WITHOUT_CLASSIFICATION	3.9894708998308517E-5	TEST
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999331837098926	WITHOUT_CLASSIFICATION	6.681629010731631E-5	TEST
// create constructor	WITHOUT_CLASSIFICATION	0.9998841224722065	WITHOUT_CLASSIFICATION	1.1587752779353784E-4	TEST
// end constructor	WITHOUT_CLASSIFICATION	0.9999614049311129	WITHOUT_CLASSIFICATION	3.85950688871206E-5	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999571959538681	WITHOUT_CLASSIFICATION	4.2804046131973735E-5	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9998478366312348	WITHOUT_CLASSIFICATION	1.521633687652502E-4	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999674066366179	WITHOUT_CLASSIFICATION	3.259336338206322E-5	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999712990721787	WITHOUT_CLASSIFICATION	2.8700927821316006E-5	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999625452674733	WITHOUT_CLASSIFICATION	3.745473252665053E-5	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9997096090246468	WITHOUT_CLASSIFICATION	2.9039097535318934E-4	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.999970924549208	WITHOUT_CLASSIFICATION	2.907545079190073E-5	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999835338828055	WITHOUT_CLASSIFICATION	1.6466117194539942E-5	TEST
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9998746109805307	WITHOUT_CLASSIFICATION	1.253890194693833E-4	TEST
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999823747191409	WITHOUT_CLASSIFICATION	1.762528085909713E-5	TEST
// prepare temp locals	WITHOUT_CLASSIFICATION	0.999939354373474	WITHOUT_CLASSIFICATION	6.064562652586158E-5	TEST
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.999938518026153	WITHOUT_CLASSIFICATION	6.148197384706715E-5	TEST
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999912749345232	WITHOUT_CLASSIFICATION	8.725065476727251E-6	TEST
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999581376444832	WITHOUT_CLASSIFICATION	4.1862355516746854E-5	TEST
// store it	WITHOUT_CLASSIFICATION	0.9998460296086645	WITHOUT_CLASSIFICATION	1.5397039133549652E-4	TEST
// end of try block	WITHOUT_CLASSIFICATION	0.9999727502088953	WITHOUT_CLASSIFICATION	2.724979110461598E-5	TEST
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999357981491951	WITHOUT_CLASSIFICATION	6.420185080487296E-5	TEST
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9998181705491759	WITHOUT_CLASSIFICATION	1.818294508242646E-4	TEST
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999171921910257	WITHOUT_CLASSIFICATION	8.28078089743479E-5	TEST
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999849496900028	WITHOUT_CLASSIFICATION	1.5050309997019103E-5	TEST
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9998478366312348	WITHOUT_CLASSIFICATION	1.521633687652502E-4	TEST
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999674066366179	WITHOUT_CLASSIFICATION	3.259336338206322E-5	TEST
// invoke method	WITHOUT_CLASSIFICATION	0.9999625452674733	WITHOUT_CLASSIFICATION	3.745473252665053E-5	TEST
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9997096090246468	WITHOUT_CLASSIFICATION	2.9039097535318934E-4	TEST
// end setup method	WITHOUT_CLASSIFICATION	0.999970924549208	WITHOUT_CLASSIFICATION	2.907545079190073E-5	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999835338828055	WITHOUT_CLASSIFICATION	1.6466117194539942E-5	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999837105820046	WITHOUT_CLASSIFICATION	1.628941799533908E-5	TEST
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9998562772753682	WITHOUT_CLASSIFICATION	1.4372272463182166E-4	TEST
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999719604643506	WITHOUT_CLASSIFICATION	2.8039535649461568E-5	TEST
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999478314635147	WITHOUT_CLASSIFICATION	5.216853648522408E-5	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9997765516899372	WITHOUT_CLASSIFICATION	2.2344831006280576E-4	TEST
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9997765516899372	WITHOUT_CLASSIFICATION	2.2344831006280576E-4	TEST
// setup the class	WITHOUT_CLASSIFICATION	0.9999900314436944	WITHOUT_CLASSIFICATION	9.968556305589753E-6	TEST
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999717667719191	WITHOUT_CLASSIFICATION	2.823322808088373E-5	TEST
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999272265401377	WITHOUT_CLASSIFICATION	7.277345986225682E-5	TEST
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999793412505724	WITHOUT_CLASSIFICATION	2.065874942755341E-5	TEST
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999667468623946	WITHOUT_CLASSIFICATION	3.325313760548446E-5	TEST
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999969372033283	WITHOUT_CLASSIFICATION	3.0627966717365125E-6	TEST
// set the full name	WITHOUT_CLASSIFICATION	0.9999832690692015	WITHOUT_CLASSIFICATION	1.673093079845485E-5	TEST
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999411224017174	WITHOUT_CLASSIFICATION	5.887759828250585E-5	TEST
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.999916203238377	WITHOUT_CLASSIFICATION	8.379676162303811E-5	TEST
// add array construction methods	WITHOUT_CLASSIFICATION	0.99990797071853	WITHOUT_CLASSIFICATION	9.202928146993144E-5	TEST
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9998373909630289	WITHOUT_CLASSIFICATION	1.6260903697114446E-4	TEST
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999835924903321	WITHOUT_CLASSIFICATION	1.640750966798831E-5	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9995769051429045	WITHOUT_CLASSIFICATION	4.230948570955674E-4	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999203202656357	WITHOUT_CLASSIFICATION	7.967973436426233E-5	TEST
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9998662573536663	WITHOUT_CLASSIFICATION	1.3374264633359595E-4	TEST
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.999959987323527	WITHOUT_CLASSIFICATION	4.001267647301564E-5	TEST
// add all static variables	WITHOUT_CLASSIFICATION	0.9999174036257901	WITHOUT_CLASSIFICATION	8.259637420991672E-5	TEST
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9996599163577639	WITHOUT_CLASSIFICATION	3.4008364223622864E-4	TEST
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999802586030263	WITHOUT_CLASSIFICATION	1.974139697369243E-5	TEST
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999823980029643	WITHOUT_CLASSIFICATION	1.7601997035736385E-5	TEST
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9951127922923829	WITHOUT_CLASSIFICATION	0.004887207707617053	TEST
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999898471606529	WITHOUT_CLASSIFICATION	1.0152839347232384E-5	TEST
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999910555705009	WITHOUT_CLASSIFICATION	8.944429499104152E-6	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9967433008820976	WITHOUT_CLASSIFICATION	0.003256699117902447	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999740404630797	WITHOUT_CLASSIFICATION	2.5959536920274002E-5	TEST
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999928025317371	WITHOUT_CLASSIFICATION	7.1974682628612466E-6	TEST
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.999881810394008	WITHOUT_CLASSIFICATION	1.1818960599195413E-4	TEST
// line 326	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999740404630797	WITHOUT_CLASSIFICATION	2.5959536920274002E-5	TEST
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999203202656357	WITHOUT_CLASSIFICATION	7.967973436426233E-5	TEST
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9998640456149425	WITHOUT_CLASSIFICATION	1.359543850575848E-4	TEST
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9998981905342438	WITHOUT_CLASSIFICATION	1.0180946575614401E-4	TEST
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9998605484585273	WITHOUT_CLASSIFICATION	1.3945154147264492E-4	TEST
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.999996586726793	WITHOUT_CLASSIFICATION	3.413273206984662E-6	TEST
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.999903347813439	WITHOUT_CLASSIFICATION	9.665218656098452E-5	TEST
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999079653419289	WITHOUT_CLASSIFICATION	9.203465807103394E-5	TEST
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.998845992446743	WITHOUT_CLASSIFICATION	0.0011540075532570342	TEST
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.999938351881747	WITHOUT_CLASSIFICATION	6.164811825299754E-5	TEST
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9994096769534939	WITHOUT_CLASSIFICATION	5.903230465060876E-4	TEST
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.999636093141125	WITHOUT_CLASSIFICATION	3.6390685887506796E-4	TEST
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999945565409285	WITHOUT_CLASSIFICATION	5.44345907153042E-6	TEST
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999311923141262	WITHOUT_CLASSIFICATION	6.880768587382318E-5	TEST
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.99996020587532	WITHOUT_CLASSIFICATION	3.979412468005933E-5	TEST
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999977153144047	WITHOUT_CLASSIFICATION	2.2846855953470775E-6	TEST
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999603065574899	WITHOUT_CLASSIFICATION	3.9693442510056796E-5	TEST
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.999950874967253	WITHOUT_CLASSIFICATION	4.9125032747091187E-5	TEST
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999957375541931	WITHOUT_CLASSIFICATION	4.262445806853734E-6	TEST
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9998612485390661	WITHOUT_CLASSIFICATION	1.3875146093392284E-4	TEST
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999948050821801	WITHOUT_CLASSIFICATION	5.19491781991354E-6	TEST
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999111995541259	WITHOUT_CLASSIFICATION	8.880044587406371E-5	TEST
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999754481851154	WITHOUT_CLASSIFICATION	2.455181488458353E-5	TEST
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999662051979563	WITHOUT_CLASSIFICATION	3.3794802043591056E-5	TEST
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9997114012836394	WITHOUT_CLASSIFICATION	2.885987163606088E-4	TEST
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999979782265092	WITHOUT_CLASSIFICATION	2.0217734908683367E-6	TEST
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999737519596168	WITHOUT_CLASSIFICATION	2.6248040383103765E-5	TEST
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9993496674675891	WITHOUT_CLASSIFICATION	6.503325324109652E-4	TEST
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9985038539726686	WITHOUT_CLASSIFICATION	0.0014961460273314052	TEST
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9998434951774836	WITHOUT_CLASSIFICATION	1.5650482251636038E-4	TEST
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999482018937567	WITHOUT_CLASSIFICATION	5.179810624329401E-5	TEST
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999450139944457	WITHOUT_CLASSIFICATION	5.4986005554315E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999709038215134	WITHOUT_CLASSIFICATION	2.909617848654231E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999709038215134	WITHOUT_CLASSIFICATION	2.909617848654231E-5	TEST
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9995769051429045	WITHOUT_CLASSIFICATION	4.230948570955674E-4	TEST
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999706246454262	WITHOUT_CLASSIFICATION	2.9375354573712716E-5	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998838315711629	WITHOUT_CLASSIFICATION	1.1616842883700889E-4	TEST
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999420877513525	WITHOUT_CLASSIFICATION	5.7912248647520776E-5	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999141112964587	WITHOUT_CLASSIFICATION	8.588870354132095E-5	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999141112964587	WITHOUT_CLASSIFICATION	8.588870354132095E-5	TEST
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.999891611774125	WITHOUT_CLASSIFICATION	1.0838822587498958E-4	TEST
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9998905158734702	WITHOUT_CLASSIFICATION	1.094841265298336E-4	TEST
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.999903465503805	WITHOUT_CLASSIFICATION	9.653449619501737E-5	TEST
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9998940824827056	WITHOUT_CLASSIFICATION	1.0591751729444787E-4	TEST
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.999522822960059	WITHOUT_CLASSIFICATION	4.771770399409679E-4	TEST
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999797464015088	WITHOUT_CLASSIFICATION	2.0253598491149778E-5	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999754960633387	WITHOUT_CLASSIFICATION	2.450393666122125E-5	TEST
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999650632874002	WITHOUT_CLASSIFICATION	3.493671259975932E-5	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999116594025945	WITHOUT_CLASSIFICATION	8.834059740550724E-5	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9998940592539586	WITHOUT_CLASSIFICATION	1.0594074604148329E-4	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999264010883646	WITHOUT_CLASSIFICATION	7.359891163548418E-5	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999409663171402	WITHOUT_CLASSIFICATION	5.903368285975227E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999174555101166	WITHOUT_CLASSIFICATION	8.254448988352235E-5	TEST
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999891412503901	WITHOUT_CLASSIFICATION	1.0858749610016597E-5	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// something?	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9998935868106321	WITHOUT_CLASSIFICATION	1.0641318936784775E-4	TEST
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9998935868106321	WITHOUT_CLASSIFICATION	1.0641318936784775E-4	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999301855450843	WITHOUT_CLASSIFICATION	6.981445491570726E-5	TEST
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999301855450843	WITHOUT_CLASSIFICATION	6.981445491570726E-5	TEST
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9997519589601597	WITHOUT_CLASSIFICATION	2.480410398403759E-4	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9985076072741775	WITHOUT_CLASSIFICATION	0.0014923927258225203	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9997805089591829	WITHOUT_CLASSIFICATION	2.194910408172099E-4	TEST
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999956469476141	WITHOUT_CLASSIFICATION	4.353052385895067E-6	TEST
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999624123634598	WITHOUT_CLASSIFICATION	3.758763654027913E-5	TEST
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999090212409226	WITHOUT_CLASSIFICATION	9.09787590774011E-5	TEST
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9998994687684015	WITHOUT_CLASSIFICATION	1.0053123159841573E-4	TEST
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999409663171402	WITHOUT_CLASSIFICATION	5.903368285975227E-5	TEST
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999174555101166	WITHOUT_CLASSIFICATION	8.254448988352235E-5	TEST
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999710478218047	WITHOUT_CLASSIFICATION	2.895217819538708E-5	TEST
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9994289063504602	WITHOUT_CLASSIFICATION	5.710936495397869E-4	TEST
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999850656205801	WITHOUT_CLASSIFICATION	1.4934379419805234E-5	TEST
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999020683308483	WITHOUT_CLASSIFICATION	9.793166915177869E-5	TEST
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9996473410701755	WITHOUT_CLASSIFICATION	3.5265892982459736E-4	TEST
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9998473241577974	WITHOUT_CLASSIFICATION	1.52675842202613E-4	TEST
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999398866485854	WITHOUT_CLASSIFICATION	6.0113351414624036E-5	TEST
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999398866485854	WITHOUT_CLASSIFICATION	6.0113351414624036E-5	TEST
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9998211800766836	WITHOUT_CLASSIFICATION	1.7881992331633822E-4	TEST
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9997432549820529	WITHOUT_CLASSIFICATION	2.5674501794723794E-4	TEST
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999193794199521	WITHOUT_CLASSIFICATION	8.062058004791512E-5	TEST
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999025818375248	WITHOUT_CLASSIFICATION	9.741816247519669E-5	TEST
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999174555101166	WITHOUT_CLASSIFICATION	8.254448988352235E-5	TEST
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9996696921581648	WITHOUT_CLASSIFICATION	3.303078418352653E-4	TEST
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999241728017022	WITHOUT_CLASSIFICATION	7.582719829772982E-5	TEST
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999598585691998	WITHOUT_CLASSIFICATION	4.014143080029472E-5	TEST
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999772306829032	WITHOUT_CLASSIFICATION	2.2769317096702545E-5	TEST
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9994739290204185	WITHOUT_CLASSIFICATION	5.260709795815111E-4	TEST
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9996846250531163	WITHOUT_CLASSIFICATION	3.153749468837016E-4	TEST
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999608655716437	WITHOUT_CLASSIFICATION	3.913442835624361E-5	TEST
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999480368797395	WITHOUT_CLASSIFICATION	5.1963120260461336E-5	TEST
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.999967137121922	WITHOUT_CLASSIFICATION	3.286287807803646E-5	TEST
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999527602838958	WITHOUT_CLASSIFICATION	4.723971610430717E-5	TEST
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9998862080838716	WITHOUT_CLASSIFICATION	1.1379191612837394E-4	TEST
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999600743806681	WITHOUT_CLASSIFICATION	3.9925619331936045E-5	TEST
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9998772887965164	WITHOUT_CLASSIFICATION	1.227112034835833E-4	TEST
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9997652320584834	WITHOUT_CLASSIFICATION	2.3476794151653098E-4	TEST
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999768603034945	WITHOUT_CLASSIFICATION	2.3139696505468436E-5	TEST
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9996778657308426	WITHOUT_CLASSIFICATION	3.221342691573436E-4	TEST
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9998500676107089	WITHOUT_CLASSIFICATION	1.4993238929104946E-4	TEST
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9997951266121918	WITHOUT_CLASSIFICATION	2.048733878081149E-4	TEST
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.999842835956401	WITHOUT_CLASSIFICATION	1.5716404359901028E-4	TEST
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999866258073358	WITHOUT_CLASSIFICATION	1.3374192664206635E-5	TEST
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999864585788446	WITHOUT_CLASSIFICATION	1.3541421155372043E-5	TEST
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9998693060752069	WITHOUT_CLASSIFICATION	1.3069392479309988E-4	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.999968736720758	WITHOUT_CLASSIFICATION	3.1263279241925836E-5	TEST
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999679984700831	WITHOUT_CLASSIFICATION	3.2001529916906404E-5	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999240838298684	WITHOUT_CLASSIFICATION	7.591617013153326E-5	TEST
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9998900637913827	WITHOUT_CLASSIFICATION	1.0993620861728085E-4	TEST
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999739549061026	WITHOUT_CLASSIFICATION	2.6045093897376598E-5	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998838315711629	WITHOUT_CLASSIFICATION	1.1616842883700889E-4	TEST
// add alias to meta	WITHOUT_CLASSIFICATION	0.999968736720758	WITHOUT_CLASSIFICATION	3.1263279241925836E-5	TEST
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9995027682134047	WITHOUT_CLASSIFICATION	4.972317865953652E-4	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999975012854471	WITHOUT_CLASSIFICATION	2.498714552894596E-6	TEST
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999727761948957	WITHOUT_CLASSIFICATION	2.7223805104331768E-5	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9996928964820009	WITHOUT_CLASSIFICATION	3.0710351799919804E-4	TEST
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9996928964820009	WITHOUT_CLASSIFICATION	3.0710351799919804E-4	TEST
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999540713764333	WITHOUT_CLASSIFICATION	4.592862356656674E-5	TEST
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999840171846369	WITHOUT_CLASSIFICATION	1.598281536308079E-5	TEST
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999979662179113	WITHOUT_CLASSIFICATION	2.033782088761009E-6	TEST
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.999998478879278	WITHOUT_CLASSIFICATION	1.5211207220368586E-6	TEST
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.999928371783317	WITHOUT_CLASSIFICATION	7.162821668304758E-5	TEST
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9998950813814107	WITHOUT_CLASSIFICATION	1.0491861858920783E-4	TEST
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9998842329702775	WITHOUT_CLASSIFICATION	1.1576702972250589E-4	TEST
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9995840072787417	WITHOUT_CLASSIFICATION	4.1599272125823403E-4	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9998883514289062	WITHOUT_CLASSIFICATION	1.1164857109385675E-4	TEST
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9998883514289062	WITHOUT_CLASSIFICATION	1.1164857109385675E-4	TEST
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999501494164722	WITHOUT_CLASSIFICATION	4.9850583527813735E-5	TEST
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9983143644278515	WITHOUT_CLASSIFICATION	0.0016856355721485518	TEST
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999969898950904	WITHOUT_CLASSIFICATION	3.0101049096241677E-6	TEST
// must be a public method	WITHOUT_CLASSIFICATION	0.9999918006368291	WITHOUT_CLASSIFICATION	8.19936317078202E-6	TEST
// must be a public class	WITHOUT_CLASSIFICATION	0.9999953855453032	WITHOUT_CLASSIFICATION	4.6144546967255435E-6	TEST
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999882117048479	WITHOUT_CLASSIFICATION	1.1788295152220984E-5	TEST
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.999910910812416	WITHOUT_CLASSIFICATION	8.908918758404948E-5	TEST
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999850371153155	WITHOUT_CLASSIFICATION	1.4962884684465392E-5	TEST
// no matching method found	WITHOUT_CLASSIFICATION	0.9999555614851579	WITHOUT_CLASSIFICATION	4.443851484223464E-5	TEST
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.991869208791497	WITHOUT_CLASSIFICATION	0.008130791208502984	TEST
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999013431799448	WITHOUT_CLASSIFICATION	9.865682005517475E-5	TEST
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9997979571826215	WITHOUT_CLASSIFICATION	2.0204281737846747E-4	TEST
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999501914899236	WITHOUT_CLASSIFICATION	4.9808510076399224E-5	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996037452901051	WITHOUT_CLASSIFICATION	3.962547098949498E-4	TEST
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9996037452901051	WITHOUT_CLASSIFICATION	3.962547098949498E-4	TEST
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999515538419118	WITHOUT_CLASSIFICATION	4.8446158088111005E-5	TEST
// end class	WITHOUT_CLASSIFICATION	0.9999835338828055	WITHOUT_CLASSIFICATION	1.6466117194539942E-5	TEST
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.991869208791497	WITHOUT_CLASSIFICATION	0.008130791208502984	TEST
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.999971307506236	WITHOUT_CLASSIFICATION	2.8692493764042327E-5	TEST
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999957858378162	WITHOUT_CLASSIFICATION	4.2141621838163915E-6	TEST
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999876817093771	WITHOUT_CLASSIFICATION	1.2318290622928241E-5	TEST
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999146170936574	WITHOUT_CLASSIFICATION	8.538290634262128E-5	TEST
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999958704980441	WITHOUT_CLASSIFICATION	4.129501955990448E-6	TEST
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999428351601636	WITHOUT_CLASSIFICATION	5.71648398364772E-5	TEST
/* package scope */	WITHOUT_CLASSIFICATION	0.9999214679826945	WITHOUT_CLASSIFICATION	7.853201730540105E-5	TEST
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9998838315711629	WITHOUT_CLASSIFICATION	1.1616842883700889E-4	TEST
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999518026981616	WITHOUT_CLASSIFICATION	4.8197301838419574E-5	TEST
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9996149504803078	WITHOUT_CLASSIFICATION	3.8504951969215746E-4	TEST
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999390294583251	WITHOUT_CLASSIFICATION	6.097054167484298E-5	TEST
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.999207881387539	WITHOUT_CLASSIFICATION	7.921186124608623E-4	TEST
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999530270815697	WITHOUT_CLASSIFICATION	4.6972918430374033E-5	TEST
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999818652451345	WITHOUT_CLASSIFICATION	1.8134754865445088E-5	TEST
// statically initialized below	WITHOUT_CLASSIFICATION	0.9997492579597003	WITHOUT_CLASSIFICATION	2.507420402997127E-4	TEST
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999697485922258	WITHOUT_CLASSIFICATION	3.0251407774191667E-5	TEST
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999650683156884	WITHOUT_CLASSIFICATION	3.493168431154684E-5	TEST
// should not happen!	WITHOUT_CLASSIFICATION	0.9990299469889823	WITHOUT_CLASSIFICATION	9.70053011017633E-4	TEST
// start class	WITHOUT_CLASSIFICATION	0.9999796014609853	WITHOUT_CLASSIFICATION	2.0398539014707004E-5	TEST
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999065079078319	WITHOUT_CLASSIFICATION	9.349209216821992E-5	TEST
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999546541240132	WITHOUT_CLASSIFICATION	4.534587598689109E-5	TEST
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9948275655365326	WITHOUT_CLASSIFICATION	0.005172434463467364	TEST
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.999951969927452	WITHOUT_CLASSIFICATION	4.803007254809528E-5	TEST
// create static private method field	WITHOUT_CLASSIFICATION	0.9998891716892653	WITHOUT_CLASSIFICATION	1.1082831073462167E-4	TEST
// load static empty array	WITHOUT_CLASSIFICATION	0.9999606442709448	WITHOUT_CLASSIFICATION	3.935572905521092E-5	TEST
// box arguments	WITHOUT_CLASSIFICATION	0.9999626216895829	WITHOUT_CLASSIFICATION	3.7378310416992336E-5	TEST
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9995901122971209	WITHOUT_CLASSIFICATION	4.098877028789688E-4	TEST
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999643611176603	WITHOUT_CLASSIFICATION	3.563888233977688E-5	TEST
// do a void return	WITHOUT_CLASSIFICATION	0.9999736552160675	WITHOUT_CLASSIFICATION	2.634478393252399E-5	TEST
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999523744835817	WITHOUT_CLASSIFICATION	4.762551641826028E-5	TEST
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999540713764333	WITHOUT_CLASSIFICATION	4.592862356656674E-5	TEST
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.999877915513088	WITHOUT_CLASSIFICATION	1.2208448691199977E-4	TEST
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999951056471734	WITHOUT_CLASSIFICATION	4.894352826640703E-6	TEST
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999309932851106	WITHOUT_CLASSIFICATION	6.900671488940185E-5	TEST
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999335286656289	WITHOUT_CLASSIFICATION	6.647133437115478E-5	TEST
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999939117405686	WITHOUT_CLASSIFICATION	6.088259431415721E-6	TEST
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999934771355848	WITHOUT_CLASSIFICATION	6.522864415221662E-6	TEST
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999539363947042	WITHOUT_CLASSIFICATION	4.6063605295780616E-5	TEST
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9997463255861134	WITHOUT_CLASSIFICATION	2.5367441388659E-4	TEST
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9972758798840696	WITHOUT_CLASSIFICATION	0.002724120115930352	TEST
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999001087078458	WITHOUT_CLASSIFICATION	9.98912921540981E-5	TEST
/* NUL */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998006613084394	WITHOUT_CLASSIFICATION	1.9933869156055223E-4	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999910782245145	WITHOUT_CLASSIFICATION	8.921775485508848E-5	TEST
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999961001307922	WITHOUT_CLASSIFICATION	3.8998692077275805E-6	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9997278118473366	WITHOUT_CLASSIFICATION	2.7218815266344924E-4	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9998828042465686	WITHOUT_CLASSIFICATION	1.1719575343140772E-4	TEST
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999825571472883	WITHOUT_CLASSIFICATION	1.744285271159697E-5	TEST
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999358607855658	WITHOUT_CLASSIFICATION	6.413921443416113E-5	TEST
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9998528623813729	WITHOUT_CLASSIFICATION	1.4713761862700592E-4	TEST
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9998301364071865	WITHOUT_CLASSIFICATION	1.6986359281334106E-4	TEST
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9998479507509047	WITHOUT_CLASSIFICATION	1.52049249095254E-4	TEST
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9998345275447531	WITHOUT_CLASSIFICATION	1.654724552468247E-4	TEST
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9988615877300366	WITHOUT_CLASSIFICATION	0.001138412269963382	TEST
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999982868798575	WITHOUT_CLASSIFICATION	1.7131201425048115E-6	TEST
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999362547100038	WITHOUT_CLASSIFICATION	6.374528999611972E-5	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999856986289102	WITHOUT_CLASSIFICATION	1.4301371089776108E-5	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999856986289102	WITHOUT_CLASSIFICATION	1.4301371089776108E-5	TEST
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999856986289102	WITHOUT_CLASSIFICATION	1.4301371089776108E-5	TEST
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999856755120184	WITHOUT_CLASSIFICATION	1.4324487981572799E-5	TEST
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999924780234812	WITHOUT_CLASSIFICATION	7.521976518861786E-6	TEST
// Single node in list	WITHOUT_CLASSIFICATION	0.9999743556810778	WITHOUT_CLASSIFICATION	2.5644318922111295E-5	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999463640181456	WITHOUT_CLASSIFICATION	5.3635981854366044E-5	TEST
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.999855779988108	WITHOUT_CLASSIFICATION	1.4422001189198636E-4	TEST
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9998417098039823	WITHOUT_CLASSIFICATION	1.5829019601772688E-4	TEST
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999789378045645	WITHOUT_CLASSIFICATION	2.106219543557268E-5	TEST
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999690809246402	WITHOUT_CLASSIFICATION	3.091907535978835E-5	TEST
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9997386098863601	WITHOUT_CLASSIFICATION	2.613901136399339E-4	TEST
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999569477655993	WITHOUT_CLASSIFICATION	4.305223440079983E-5	TEST
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999462421761329	WITHOUT_CLASSIFICATION	5.375782386710456E-5	TEST
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999746871548547	WITHOUT_CLASSIFICATION	2.5312845145178864E-5	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999392828514844	WITHOUT_CLASSIFICATION	6.071714851560429E-5	TEST
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999392828514844	WITHOUT_CLASSIFICATION	6.071714851560429E-5	TEST
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9998423439098522	WITHOUT_CLASSIFICATION	1.5765609014795415E-4	TEST
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999439273275141	WITHOUT_CLASSIFICATION	5.607267248579764E-5	TEST
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999485845459823	WITHOUT_CLASSIFICATION	5.141545401770479E-5	TEST
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999698704524879	WITHOUT_CLASSIFICATION	3.0129547512256323E-5	TEST
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999671100789993	WITHOUT_CLASSIFICATION	3.288992100073786E-5	TEST
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999155708541461	WITHOUT_CLASSIFICATION	8.442914585392208E-5	TEST
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999155708541461	WITHOUT_CLASSIFICATION	8.442914585392208E-5	TEST
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// POP	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999505682742462	WITHOUT_CLASSIFICATION	4.943172575370361E-5	TEST
// LEXPOP	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// SET_P	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999153580334799	WITHOUT_CLASSIFICATION	8.46419665201509E-5	TEST
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9995522803512467	WITHOUT_CLASSIFICATION	4.477196487534436E-4	TEST
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999127392654295	WITHOUT_CLASSIFICATION	8.726073457055688E-5	TEST
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999075977434736	WITHOUT_CLASSIFICATION	9.240225652651245E-5	TEST
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9997268502520411	WITHOUT_CLASSIFICATION	2.7314974795894476E-4	TEST
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.999852914317544	WITHOUT_CLASSIFICATION	1.470856824560536E-4	TEST
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999449512940908	WITHOUT_CLASSIFICATION	5.504870590918467E-5	TEST
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999309879877912	WITHOUT_CLASSIFICATION	6.901201220877805E-5	TEST
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.999915814141448	WITHOUT_CLASSIFICATION	8.418585855196527E-5	TEST
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9998436658777464	WITHOUT_CLASSIFICATION	1.563341222535261E-4	TEST
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999377175045386	WITHOUT_CLASSIFICATION	6.228249546140569E-5	TEST
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999187095938148	WITHOUT_CLASSIFICATION	8.129040618519347E-5	TEST
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.999917643246866	WITHOUT_CLASSIFICATION	8.235675313404351E-5	TEST
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999411005847546	WITHOUT_CLASSIFICATION	5.889941524552761E-5	TEST
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9998768023924255	WITHOUT_CLASSIFICATION	1.2319760757451982E-4	TEST
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999840264268451	WITHOUT_CLASSIFICATION	1.5973573154911943E-5	TEST
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999509816671275	WITHOUT_CLASSIFICATION	4.9018332872463484E-5	TEST
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999341486659202	WITHOUT_CLASSIFICATION	6.585133407979547E-5	TEST
/* '\v' */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999645984217412	WITHOUT_CLASSIFICATION	3.540157825876331E-5	TEST
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9995187253552283	WITHOUT_CLASSIFICATION	4.812746447716346E-4	TEST
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9998314988583797	WITHOUT_CLASSIFICATION	1.685011416202684E-4	TEST
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999396816750931	WITHOUT_CLASSIFICATION	6.031832490705919E-5	TEST
// documentation nodes	WITHOUT_CLASSIFICATION	0.999908209468411	WITHOUT_CLASSIFICATION	9.179053158908264E-5	TEST
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.999991076746754	WITHOUT_CLASSIFICATION	8.92325324601107E-6	TEST
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999751931050905	WITHOUT_CLASSIFICATION	2.4806894909456773E-5	TEST
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9996770532914483	WITHOUT_CLASSIFICATION	3.229467085517689E-4	TEST
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9998988352744639	WITHOUT_CLASSIFICATION	1.0116472553611343E-4	TEST
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9996747190300599	WITHOUT_CLASSIFICATION	3.252809699400601E-4	TEST
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9998813724608306	WITHOUT_CLASSIFICATION	1.186275391693307E-4	TEST
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9998309622061118	WITHOUT_CLASSIFICATION	1.69037793888244E-4	TEST
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9998849118392743	WITHOUT_CLASSIFICATION	1.1508816072567099E-4	TEST
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9998409525067458	WITHOUT_CLASSIFICATION	1.5904749325421644E-4	TEST
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9998812388560017	WITHOUT_CLASSIFICATION	1.1876114399830098E-4	TEST
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999281355637101	WITHOUT_CLASSIFICATION	7.18644362898884E-5	TEST
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9998831804339982	WITHOUT_CLASSIFICATION	1.1681956600184734E-4	TEST
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999141629407498	WITHOUT_CLASSIFICATION	8.583705925022681E-5	TEST
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999343201432407	WITHOUT_CLASSIFICATION	6.567985675932361E-5	TEST
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9996915700313826	WITHOUT_CLASSIFICATION	3.0842996861734327E-4	TEST
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9996857803679216	WITHOUT_CLASSIFICATION	3.14219632078493E-4	TEST
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.999887157048354	WITHOUT_CLASSIFICATION	1.1284295164609377E-4	TEST
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.99910910107489	WITHOUT_CLASSIFICATION	8.908989251100081E-4	TEST
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// block (primary)	WITHOUT_CLASSIFICATION	0.9999604365107538	WITHOUT_CLASSIFICATION	3.956348924609179E-5	TEST
// block (expr)	WITHOUT_CLASSIFICATION	0.9999604365107538	WITHOUT_CLASSIFICATION	3.956348924609179E-5	TEST
// hash	WITHOUT_CLASSIFICATION	0.9998901084601384	WITHOUT_CLASSIFICATION	1.0989153986164493E-4	TEST
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9987329043378224	WITHOUT_CLASSIFICATION	0.0012670956621775734	TEST
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9998431791382492	WITHOUT_CLASSIFICATION	1.568208617509294E-4	TEST
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999329825290975	WITHOUT_CLASSIFICATION	6.701747090260696E-5	TEST
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999625212298962	WITHOUT_CLASSIFICATION	3.747877010377693E-5	TEST
// binary	WITHOUT_CLASSIFICATION	0.999893310064213	WITHOUT_CLASSIFICATION	1.0668993578695832E-4	TEST
// decimal	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
//Octal	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.999986787865123	WITHOUT_CLASSIFICATION	1.3212134877181159E-5	TEST
// backslash	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// newline	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999596465940911	WITHOUT_CLASSIFICATION	4.035340590890553E-5	TEST
// form feed	WITHOUT_CLASSIFICATION	0.9999609328619153	WITHOUT_CLASSIFICATION	3.906713808475033E-5	TEST
// vertical tab	WITHOUT_CLASSIFICATION	0.9999596387318611	WITHOUT_CLASSIFICATION	4.0361268138825436E-5	TEST
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// escape	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// hex constant	WITHOUT_CLASSIFICATION	0.9999582238190684	WITHOUT_CLASSIFICATION	4.177618093159502E-5	TEST
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9998000333230763	WITHOUT_CLASSIFICATION	1.99966676923633E-4	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999891367086063	WITHOUT_CLASSIFICATION	1.0863291393681654E-5	TEST
// space	WITHOUT_CLASSIFICATION	0.9999155791223419	WITHOUT_CLASSIFICATION	8.442087765820007E-5	TEST
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9995653305203128	WITHOUT_CLASSIFICATION	4.3466947968716444E-4	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999462390408457	WITHOUT_CLASSIFICATION	5.3760959154258114E-5	TEST
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.999942198806391	WITHOUT_CLASSIFICATION	5.78011936088705E-5	TEST
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999891367086063	WITHOUT_CLASSIFICATION	1.0863291393681654E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999172934832316	WITHOUT_CLASSIFICATION	8.27065167683744E-5	TEST
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9999172934832316	WITHOUT_CLASSIFICATION	8.27065167683744E-5	TEST
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999317289332043	WITHOUT_CLASSIFICATION	6.827106679578637E-5	TEST
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999091947390489	WITHOUT_CLASSIFICATION	9.080526095109466E-5	TEST
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999706537809955	WITHOUT_CLASSIFICATION	2.9346219004535684E-5	TEST
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999106770429761	WITHOUT_CLASSIFICATION	8.932295702390558E-5	TEST
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999414456162972	WITHOUT_CLASSIFICATION	5.855438370293073E-5	TEST
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9138948303605061	TEST	0.08610516963949395	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999044258128401	WITHOUT_CLASSIFICATION	9.557418715991374E-5	TEST
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999141149072616	WITHOUT_CLASSIFICATION	8.588509273835935E-5	TEST
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999133128977037	WITHOUT_CLASSIFICATION	8.66871022962481E-5	TEST
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9994695420825362	WITHOUT_CLASSIFICATION	5.304579174637226E-4	TEST
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9989260279299093	WITHOUT_CLASSIFICATION	0.0010739720700907252	TEST
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9998651868404747	WITHOUT_CLASSIFICATION	1.3481315952538025E-4	TEST
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999066991695816	WITHOUT_CLASSIFICATION	9.33008304183065E-5	TEST
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9997192956680914	WITHOUT_CLASSIFICATION	2.8070433190862434E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
// line 329	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999403785903179	WITHOUT_CLASSIFICATION	5.96214096820381E-5	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9996233725064866	WITHOUT_CLASSIFICATION	3.766274935134285E-4	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999431382384982	WITHOUT_CLASSIFICATION	5.686176150176636E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999773294590538	WITHOUT_CLASSIFICATION	2.2670540946078792E-5	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999583567566028	WITHOUT_CLASSIFICATION	4.1643243397086165E-5	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999584463162365	WITHOUT_CLASSIFICATION	4.155368376339265E-5	TEST
// line 271	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 274	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 303	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 311	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 314	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 317	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 332	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 338	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 341	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 344	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 358	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 367	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 372	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 378	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 407	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 411	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 414	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 434	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 443	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 446	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 452	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 457	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 464	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 467	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 470	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 479	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 484	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 492	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 498	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 501	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 504	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 507	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 510	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 519	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 525	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 556	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 559	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 563	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 569	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 575	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 578	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 587	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 596	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 604	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 607	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 613	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 616	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 634	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 638	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 643	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 646	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 655	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 660	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 667	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 670	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 701	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 717	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 720	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 726	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 729	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 735	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 738	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 751	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 754	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 757	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 760	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 763	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 769	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 775	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 797	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 803	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 806	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 809	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 815	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 818	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 821	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 824	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 830	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 833	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 836	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 852	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 858	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 861	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 868	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 871	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 876	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 879	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 883	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 903	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 907	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 915	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 920	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 923	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 926	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 936	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 940	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 948	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 956	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 964	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 967	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 978	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 984	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 986	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 996	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1001	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1008	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1014	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1029	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1032	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1034	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1045	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1048	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1051	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1058	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1070	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1073	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1076	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1079	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1082	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1089	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1100	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1103	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1107	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1113	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1115	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1119	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1135	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1137	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1151	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1154	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1164	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1175	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1178	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1187	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1189	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1193	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1214	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1234	WITHOUT_CLASSIFICATION	0.9999668579363727	WITHOUT_CLASSIFICATION	3.31420636271912E-5	TEST
// line 1239	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1243	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1263	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1269	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1280	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1283	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1290	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1296	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1299	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1302	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1309	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1313	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1315	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1328	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1335	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1352	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1358	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1374	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1381	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1415	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1431	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1434	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1440	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1443	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1453	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1465	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1477	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1480	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1485	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1488	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1510	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1516	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1533	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1550	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1553	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1556	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1565	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1568	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1571	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1574	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1577	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1587	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1600	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1609	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1623	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1626	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1638	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1641	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1644	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1649	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1655	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1658	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1661	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1672	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1677	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1687	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1694	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1733	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1745	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1757	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1769	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1775	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1784	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1808	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1814	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9998458136815982	WITHOUT_CLASSIFICATION	1.541863184017784E-4	TEST
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999124286522516	WITHOUT_CLASSIFICATION	8.757134774846325E-5	TEST
/*                  }*/	WITHOUT_CLASSIFICATION	0.9998857677728953	WITHOUT_CLASSIFICATION	1.1423222710476639E-4	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9991151658326652	WITHOUT_CLASSIFICATION	8.848341673348907E-4	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998506350656211	WITHOUT_CLASSIFICATION	1.49364934378921E-4	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9994211809412706	WITHOUT_CLASSIFICATION	5.788190587293628E-4	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9994211809412706	WITHOUT_CLASSIFICATION	5.788190587293628E-4	TEST
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.999688661656197	WITHOUT_CLASSIFICATION	3.113383438029731E-4	TEST
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.999846595009292	WITHOUT_CLASSIFICATION	1.534049907079563E-4	TEST
// line 529	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9998607921117447	WITHOUT_CLASSIFICATION	1.392078882553426E-4	TEST
/* XXX*/	WITHOUT_CLASSIFICATION	0.9997453290549099	WITHOUT_CLASSIFICATION	2.5467094509015785E-4	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9998787259833068	WITHOUT_CLASSIFICATION	1.2127401669314931E-4	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998354122314561	WITHOUT_CLASSIFICATION	1.6458776854383377E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998607921117447	WITHOUT_CLASSIFICATION	1.392078882553426E-4	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998053572697535	WITHOUT_CLASSIFICATION	1.9464273024645667E-4	TEST
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999327623600633	WITHOUT_CLASSIFICATION	6.723763993666882E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999462387669881	WITHOUT_CLASSIFICATION	5.376123301186968E-5	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9990609092860533	WITHOUT_CLASSIFICATION	9.39090713946659E-4	TEST
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999505942656418	WITHOUT_CLASSIFICATION	4.940573435822816E-5	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999723910947557	WITHOUT_CLASSIFICATION	2.7608905244326945E-5	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999723910947557	WITHOUT_CLASSIFICATION	2.7608905244326945E-5	TEST
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9998867885262983	WITHOUT_CLASSIFICATION	1.132114737016664E-4	TEST
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9995677815660096	WITHOUT_CLASSIFICATION	4.322184339904188E-4	TEST
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9995371196301943	WITHOUT_CLASSIFICATION	4.6288036980576613E-4	TEST
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999412727000647	WITHOUT_CLASSIFICATION	5.8727299935220786E-5	TEST
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9997771573117056	WITHOUT_CLASSIFICATION	2.228426882945072E-4	TEST
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9998946262769851	WITHOUT_CLASSIFICATION	1.0537372301478927E-4	TEST
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999900661199239	WITHOUT_CLASSIFICATION	9.93388007607033E-6	TEST
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.999915866533619	WITHOUT_CLASSIFICATION	8.413346638107303E-5	TEST
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999227589328296	WITHOUT_CLASSIFICATION	7.724106717040729E-5	TEST
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999283107881898	WITHOUT_CLASSIFICATION	7.168921181029414E-5	TEST
// Parser states:	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999726363680697	WITHOUT_CLASSIFICATION	2.7363631930377826E-5	TEST
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999825149965624	WITHOUT_CLASSIFICATION	1.7485003437575036E-5	TEST
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9992145415902628	WITHOUT_CLASSIFICATION	7.854584097372972E-4	TEST
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9998773432531649	WITHOUT_CLASSIFICATION	1.226567468351139E-4	TEST
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999179966584658	WITHOUT_CLASSIFICATION	8.20033415341811E-5	TEST
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999264112554526	WITHOUT_CLASSIFICATION	7.358874454744383E-5	TEST
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999263630751215	WITHOUT_CLASSIFICATION	7.363692487847849E-5	TEST
// Node	WITHOUT_CLASSIFICATION	0.999889647428757	WITHOUT_CLASSIFICATION	1.1035257124300004E-4	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997080569182253	WITHOUT_CLASSIFICATION	2.919430817747452E-4	TEST
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9995060194868757	WITHOUT_CLASSIFICATION	4.939805131243508E-4	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997080569182253	WITHOUT_CLASSIFICATION	2.919430817747452E-4	TEST
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9996002388097234	WITHOUT_CLASSIFICATION	3.997611902766167E-4	TEST
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9995060194868757	WITHOUT_CLASSIFICATION	4.939805131243508E-4	TEST
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999522963956726	WITHOUT_CLASSIFICATION	4.770360432734455E-5	TEST
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999898049346306	WITHOUT_CLASSIFICATION	1.0195065369407866E-5	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// foo()	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9998475923095629	WITHOUT_CLASSIFICATION	1.5240769043708854E-4	TEST
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9947343284118364	WITHOUT_CLASSIFICATION	0.0052656715881635174	TEST
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999410945389444	WITHOUT_CLASSIFICATION	5.890546105548146E-5	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLen 542	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999403785903179	WITHOUT_CLASSIFICATION	5.96214096820381E-5	TEST
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999431382384982	WITHOUT_CLASSIFICATION	5.686176150176636E-5	TEST
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999773294590538	WITHOUT_CLASSIFICATION	2.2670540946078792E-5	TEST
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999583567566028	WITHOUT_CLASSIFICATION	4.1643243397086165E-5	TEST
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999584463162365	WITHOUT_CLASSIFICATION	4.155368376339265E-5	TEST
// line 321	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 351	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 382	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 417	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 420	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 426	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 280	WITHOUT_CLASSIFICATION	0.9999667003168832	WITHOUT_CLASSIFICATION	3.3299683116799835E-5	TEST
// line 283	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 296	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 324	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 327	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 331	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 333	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 336	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 342	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 345	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 348	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 354	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 368	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 377	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 388	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 392	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 397	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 429	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 432	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 436	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 445	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 448	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 454	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 459	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 466	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 469	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 478	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 481	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 488	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 494	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 497	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 503	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 506	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 509	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 512	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 521	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 526	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 540	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 543	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 546	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 566	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 610	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 672	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 696	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 772	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 782	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 788	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 791	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 534	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 549	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 552	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 558	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 561	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 571	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 574	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 579	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 586	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 589	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 592	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 595	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 598	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 623	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 627	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 630	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 633	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 639	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 648	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 657	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 661	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 666	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 678	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 682	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 688	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 699	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 706	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 708	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 727	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 737	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 753	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 779	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 801	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 808	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 811	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 817	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 842	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 848	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 893	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 899	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 932	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 944	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 960	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 980	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1004	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 820	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 826	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 829	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 832	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 851	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 857	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 860	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 863	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 866	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 869	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 875	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 884	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 887	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 890	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 902	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 909	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 912	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 916	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 922	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 928	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 941	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 947	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 951	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 955	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 965	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 969	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 977	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 983	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1013	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1023	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1035	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1041	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1043	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1054	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1057	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1060	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1069	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1075	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1111	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1130	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1140	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1158	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1204	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1207	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1247	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1251	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1078	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1084	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1087	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1090	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1093	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1114	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1116	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1118	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1124	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1126	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1138	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1144	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1149	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1155	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1162	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1173	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1179	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1182	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1190	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1196	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1213	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1217	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1231	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1236	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1244	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1254	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1258	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1264	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1270	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1273	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1276	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1279	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1282	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1289	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1292	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1295	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1298	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1305	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1348	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1387	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1392	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1462	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1470	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1496	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1502	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1595	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1598	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1308	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1311	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1317	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1323	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1326	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1329	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1337	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1342	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1345	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1354	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1359	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1366	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1369	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1373	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1377	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1383	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1399	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1401	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1406	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1417	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1424	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1427	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1430	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1433	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1436	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1442	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1445	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1458	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1464	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1489	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1493	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1507	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1519	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1532	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1538	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1542	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1557	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1573	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1591	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1629	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1632	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1705	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1725	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1742	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1749	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1818	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1822	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1607	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1610	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1622	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1625	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1636	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1639	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1647	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1651	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1657	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1660	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1663	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1678	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1702	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1711	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1719	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1722	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1731	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1734	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1738	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1746	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1756	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1758	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1761	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1767	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1776	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1782	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1785	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1788	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1791	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1797	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1800	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1803	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1806	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1809	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1815	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1825	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1828	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1831	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1847	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9994211809412706	WITHOUT_CLASSIFICATION	5.788190587293628E-4	TEST
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9994211809412706	WITHOUT_CLASSIFICATION	5.788190587293628E-4	TEST
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9998607921117447	WITHOUT_CLASSIFICATION	1.392078882553426E-4	TEST
/* zero length array */	WITHOUT_CLASSIFICATION	0.9998787259833068	WITHOUT_CLASSIFICATION	1.2127401669314931E-4	TEST
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998354122314561	WITHOUT_CLASSIFICATION	1.6458776854383377E-4	TEST
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998607921117447	WITHOUT_CLASSIFICATION	1.392078882553426E-4	TEST
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998053572697535	WITHOUT_CLASSIFICATION	1.9464273024645667E-4	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// line 1854	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1869	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1872	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1877	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1886	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1898	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1902	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1905	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1911	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1918	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1935	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1938	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1942	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1948	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1960	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1963	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1968	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1972	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1982	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1995	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 2000	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 2006	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 2010	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9998297485637966	WITHOUT_CLASSIFICATION	1.702514362034588E-4	TEST
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9996763753616366	WITHOUT_CLASSIFICATION	3.236246383634534E-4	TEST
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.999822535283995	WITHOUT_CLASSIFICATION	1.7746471600490644E-4	TEST
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.999987940851148	WITHOUT_CLASSIFICATION	1.2059148852016336E-5	TEST
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9998696687450829	WITHOUT_CLASSIFICATION	1.3033125491716767E-4	TEST
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9998142593303088	WITHOUT_CLASSIFICATION	1.8574066969114726E-4	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999462387669881	WITHOUT_CLASSIFICATION	5.376123301186968E-5	TEST
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9990609092860533	WITHOUT_CLASSIFICATION	9.39090713946659E-4	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999723910947557	WITHOUT_CLASSIFICATION	2.7608905244326945E-5	TEST
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999723910947557	WITHOUT_CLASSIFICATION	2.7608905244326945E-5	TEST
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9998535488168164	WITHOUT_CLASSIFICATION	1.4645118318351238E-4	TEST
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999766642724187	WITHOUT_CLASSIFICATION	2.3335727581240434E-5	TEST
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999519135897349	WITHOUT_CLASSIFICATION	4.808641026515478E-5	TEST
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.999986225685089	WITHOUT_CLASSIFICATION	1.3774314910901252E-5	TEST
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9991313739670389	WITHOUT_CLASSIFICATION	8.686260329609697E-4	TEST
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999895496661498	WITHOUT_CLASSIFICATION	1.0450333850234146E-5	TEST
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999692356785862	WITHOUT_CLASSIFICATION	3.076432141388944E-5	TEST
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999616166330342	WITHOUT_CLASSIFICATION	3.8383366965903846E-5	TEST
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999394431134355	WITHOUT_CLASSIFICATION	6.055688656443047E-5	TEST
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9998926320537119	WITHOUT_CLASSIFICATION	1.0736794628806938E-4	TEST
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9998685404816148	WITHOUT_CLASSIFICATION	1.3145951838525736E-4	TEST
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999014835351843	WITHOUT_CLASSIFICATION	9.851646481571248E-5	TEST
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999644698057971	WITHOUT_CLASSIFICATION	3.5530194202847075E-5	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999645993822014	WITHOUT_CLASSIFICATION	3.540061779865517E-5	TEST
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999645993822014	WITHOUT_CLASSIFICATION	3.540061779865517E-5	TEST
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9995959998338071	WITHOUT_CLASSIFICATION	4.040001661929191E-4	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999517013812572	WITHOUT_CLASSIFICATION	4.8298618742712276E-5	TEST
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999897016289446	WITHOUT_CLASSIFICATION	1.0298371055390271E-5	TEST
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9992512416984419	WITHOUT_CLASSIFICATION	7.487583015581071E-4	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999722153826872	WITHOUT_CLASSIFICATION	2.7784617312788896E-5	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999302108375933	WITHOUT_CLASSIFICATION	6.978916240670381E-5	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999698111957563	WITHOUT_CLASSIFICATION	3.01888042436895E-5	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999302108375933	WITHOUT_CLASSIFICATION	6.978916240670381E-5	TEST
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999169817950732	WITHOUT_CLASSIFICATION	8.301820492679602E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999496996131926	WITHOUT_CLASSIFICATION	5.030038680729071E-5	TEST
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9996550088065289	WITHOUT_CLASSIFICATION	3.4499119347115425E-4	TEST
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.999282254732775	WITHOUT_CLASSIFICATION	7.177452672249811E-4	TEST
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9994513381123523	WITHOUT_CLASSIFICATION	5.486618876476321E-4	TEST
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9994513381123523	WITHOUT_CLASSIFICATION	5.486618876476321E-4	TEST
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999913955376679	WITHOUT_CLASSIFICATION	8.60446233212768E-6	TEST
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998872282172278	WITHOUT_CLASSIFICATION	1.1277178277226455E-4	TEST
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998872960566272	WITHOUT_CLASSIFICATION	1.1270394337274336E-4	TEST
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9998615246337383	WITHOUT_CLASSIFICATION	1.3847536626167972E-4	TEST
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9998493156205008	WITHOUT_CLASSIFICATION	1.5068437949918975E-4	TEST
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9994512492335093	WITHOUT_CLASSIFICATION	5.487507664907207E-4	TEST
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9994512492335093	WITHOUT_CLASSIFICATION	5.487507664907207E-4	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9936257068008257	WITHOUT_CLASSIFICATION	0.00637429319917436	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.999269776316834	WITHOUT_CLASSIFICATION	7.302236831659403E-4	TEST
// assert level == 0;	WITHOUT_CLASSIFICATION	0.999269776316834	WITHOUT_CLASSIFICATION	7.302236831659403E-4	TEST
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9998901972817945	WITHOUT_CLASSIFICATION	1.0980271820541692E-4	TEST
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9996791868629648	WITHOUT_CLASSIFICATION	3.2081313703533266E-4	TEST
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9998349165845674	WITHOUT_CLASSIFICATION	1.650834154326002E-4	TEST
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999889574982065	WITHOUT_CLASSIFICATION	1.1042501793463601E-5	TEST
// required and optional only	WITHOUT_CLASSIFICATION	0.9999821039787772	WITHOUT_CLASSIFICATION	1.7896021222809567E-5	TEST
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999302108375933	WITHOUT_CLASSIFICATION	6.978916240670381E-5	TEST
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999509251135033	WITHOUT_CLASSIFICATION	4.907488649681776E-5	TEST
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.99999905943005	WITHOUT_CLASSIFICATION	9.405699500617943E-7	TEST
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999147563088897	WITHOUT_CLASSIFICATION	8.524369111033946E-5	TEST
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999509251135033	WITHOUT_CLASSIFICATION	4.907488649681776E-5	TEST
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999989201779933	WITHOUT_CLASSIFICATION	1.0798220067255377E-6	TEST
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999800329667933	WITHOUT_CLASSIFICATION	1.9967033206756437E-5	TEST
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999436093074038	WITHOUT_CLASSIFICATION	5.639069259627394E-5	TEST
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9993510424013993	WITHOUT_CLASSIFICATION	6.489575986008475E-4	TEST
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9991819917985305	WITHOUT_CLASSIFICATION	8.180082014694063E-4	TEST
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9997269980563329	WITHOUT_CLASSIFICATION	2.7300194366705843E-4	TEST
// No argument blocks	WITHOUT_CLASSIFICATION	0.9998863051441661	WITHOUT_CLASSIFICATION	1.1369485583384578E-4	TEST
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999973205543312	WITHOUT_CLASSIFICATION	2.6794456687407246E-6	TEST
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9991840471642879	WITHOUT_CLASSIFICATION	8.159528357120715E-4	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999802128761391	WITHOUT_CLASSIFICATION	1.9787123860902497E-5	TEST
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.999653920592602	WITHOUT_CLASSIFICATION	3.460794073979866E-4	TEST
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999393653020293	WITHOUT_CLASSIFICATION	6.0634697970794384E-5	TEST
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999481066854877	WITHOUT_CLASSIFICATION	5.189331451228475E-5	TEST
// id must always be even	WITHOUT_CLASSIFICATION	0.999965880171433	WITHOUT_CLASSIFICATION	3.411982856699951E-5	TEST
// with block pass	WITHOUT_CLASSIFICATION	0.9997715280442168	WITHOUT_CLASSIFICATION	2.2847195578331737E-4	TEST
// no block	WITHOUT_CLASSIFICATION	0.9999645571414754	WITHOUT_CLASSIFICATION	3.544285852463882E-5	TEST
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.99968048279515	WITHOUT_CLASSIFICATION	3.1951720484998605E-4	TEST
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9988723209675564	WITHOUT_CLASSIFICATION	0.0011276790324436109	TEST
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9991848140276515	WITHOUT_CLASSIFICATION	8.151859723485117E-4	TEST
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999259605400083	WITHOUT_CLASSIFICATION	7.403945999173986E-5	TEST
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999565751656967	WITHOUT_CLASSIFICATION	4.3424834303388734E-5	TEST
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9998871097602643	WITHOUT_CLASSIFICATION	1.1289023973562627E-4	TEST
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9998834350943154	WITHOUT_CLASSIFICATION	1.1656490568446096E-4	TEST
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999900008031932	WITHOUT_CLASSIFICATION	9.999196806747081E-6	TEST
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9994337367609386	WITHOUT_CLASSIFICATION	5.662632390613233E-4	TEST
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.999888029420716	WITHOUT_CLASSIFICATION	1.1197057928398799E-4	TEST
// Lastline	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9972304817930348	WITHOUT_CLASSIFICATION	0.002769518206965318	TEST
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999932397154805	WITHOUT_CLASSIFICATION	6.760284519573123E-6	TEST
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999399774705954	WITHOUT_CLASSIFICATION	6.002252940456818E-5	TEST
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999611213439673	WITHOUT_CLASSIFICATION	3.8878656032811126E-5	TEST
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999544164011712	WITHOUT_CLASSIFICATION	4.558359882887496E-5	TEST
// silently ignore	WITHOUT_CLASSIFICATION	0.9999652040874182	WITHOUT_CLASSIFICATION	3.479591258181771E-5	TEST
// used by compiler	WITHOUT_CLASSIFICATION	0.9999558469600659	WITHOUT_CLASSIFICATION	4.4153039934172E-5	TEST
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999848964210146	WITHOUT_CLASSIFICATION	1.5103578985379593E-5	TEST
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9983089612326668	WITHOUT_CLASSIFICATION	0.001691038767333167	TEST
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999639416678866	WITHOUT_CLASSIFICATION	3.605833211330281E-5	TEST
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9998006613084394	WITHOUT_CLASSIFICATION	1.9933869156055223E-4	TEST
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999910782245145	WITHOUT_CLASSIFICATION	8.921775485508848E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999496996131926	WITHOUT_CLASSIFICATION	5.030038680729071E-5	TEST
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999387617091187	WITHOUT_CLASSIFICATION	6.123829088134994E-5	TEST
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9997280519086087	WITHOUT_CLASSIFICATION	2.7194809139128483E-4	TEST
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999427919303214	WITHOUT_CLASSIFICATION	5.720806967869053E-5	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999900147928448	WITHOUT_CLASSIFICATION	9.985207155245154E-6	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999900147928448	WITHOUT_CLASSIFICATION	9.985207155245154E-6	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999426140869072	WITHOUT_CLASSIFICATION	5.738591309269282E-5	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999426140869072	WITHOUT_CLASSIFICATION	5.738591309269282E-5	TEST
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999426140869072	WITHOUT_CLASSIFICATION	5.738591309269282E-5	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999015271188189	WITHOUT_CLASSIFICATION	9.847288118121464E-5	TEST
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999015271188189	WITHOUT_CLASSIFICATION	9.847288118121464E-5	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.999890079344956	WITHOUT_CLASSIFICATION	1.0992065504403225E-4	TEST
// extra args for rest	WITHOUT_CLASSIFICATION	0.999890079344956	WITHOUT_CLASSIFICATION	1.0992065504403225E-4	TEST
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9996042951884221	WITHOUT_CLASSIFICATION	3.957048115779165E-4	TEST
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9998385566474461	WITHOUT_CLASSIFICATION	1.614433525538342E-4	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.999964036611671	WITHOUT_CLASSIFICATION	3.596338832901222E-5	TEST
// prefill ?	WITHOUT_CLASSIFICATION	0.999964036611671	WITHOUT_CLASSIFICATION	3.596338832901222E-5	TEST
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9998389596478321	WITHOUT_CLASSIFICATION	1.610403521678441E-4	TEST
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9998960057162137	WITHOUT_CLASSIFICATION	1.0399428378626115E-4	TEST
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.999914228139542	WITHOUT_CLASSIFICATION	8.577186045793914E-5	TEST
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999478227643128	WITHOUT_CLASSIFICATION	5.217723568730115E-5	TEST
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999443436233688	WITHOUT_CLASSIFICATION	5.5656376631195846E-5	TEST
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999235642567296	WITHOUT_CLASSIFICATION	7.643574327040006E-5	TEST
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9998405398903666	WITHOUT_CLASSIFICATION	1.5946010963339144E-4	TEST
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999393271555027	WITHOUT_CLASSIFICATION	6.067284449733159E-5	TEST
// caller	WITHOUT_CLASSIFICATION	0.9998890372648781	WITHOUT_CLASSIFICATION	1.1096273512193401E-4	TEST
// calltype // block	WITHOUT_CLASSIFICATION	0.9999604365107538	WITHOUT_CLASSIFICATION	3.956348924609179E-5	TEST
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999792355427441	WITHOUT_CLASSIFICATION	2.076445725588304E-5	TEST
// load arity for check	WITHOUT_CLASSIFICATION	0.9999591891743045	WITHOUT_CLASSIFICATION	4.0810825695499316E-5	TEST
// throw	WITHOUT_CLASSIFICATION	0.999891195593064	WITHOUT_CLASSIFICATION	1.0880440693595376E-4	TEST
// load arity for error	WITHOUT_CLASSIFICATION	0.9998908860537176	WITHOUT_CLASSIFICATION	1.0911394628232418E-4	TEST
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999400040860688	WITHOUT_CLASSIFICATION	5.999591393124769E-5	TEST
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9996037452901051	WITHOUT_CLASSIFICATION	3.962547098949498E-4	TEST
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.99980724775592	WITHOUT_CLASSIFICATION	1.9275224407995698E-4	TEST
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998658361731256	WITHOUT_CLASSIFICATION	1.3416382687441803E-4	TEST
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9998505120102459	WITHOUT_CLASSIFICATION	1.4948798975413413E-4	TEST
// load the encoding	WITHOUT_CLASSIFICATION	0.9999821555341649	WITHOUT_CLASSIFICATION	1.7844465835093973E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999184892416264	WITHOUT_CLASSIFICATION	8.151075837363747E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999184892416264	WITHOUT_CLASSIFICATION	8.151075837363747E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999184892416264	WITHOUT_CLASSIFICATION	8.151075837363747E-5	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999153063601138	WITHOUT_CLASSIFICATION	8.469363988616067E-5	TEST
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999153063601138	WITHOUT_CLASSIFICATION	8.469363988616067E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999153063601138	WITHOUT_CLASSIFICATION	8.469363988616067E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999153063601138	WITHOUT_CLASSIFICATION	8.469363988616067E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999153063601138	WITHOUT_CLASSIFICATION	8.469363988616067E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999888424795426	WITHOUT_CLASSIFICATION	1.1157520457385861E-5	TEST
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999942638996667	WITHOUT_CLASSIFICATION	5.73610033325494E-6	TEST
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.999983933084979	WITHOUT_CLASSIFICATION	1.6066915020991636E-5	TEST
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999289752569277	WITHOUT_CLASSIFICATION	7.102474307228058E-5	TEST
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9998750092495902	WITHOUT_CLASSIFICATION	1.2499075040978857E-4	TEST
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999163849372592	WITHOUT_CLASSIFICATION	8.361506274079588E-5	TEST
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9996683529678052	WITHOUT_CLASSIFICATION	3.316470321948175E-4	TEST
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999803339688464	WITHOUT_CLASSIFICATION	1.96660311535093E-5	TEST
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999438663651171	WITHOUT_CLASSIFICATION	5.613363488284648E-5	TEST
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999881208135932	WITHOUT_CLASSIFICATION	1.1879186406718622E-5	TEST
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999654648428782	WITHOUT_CLASSIFICATION	3.453515712178232E-5	TEST
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9949320703546801	WITHOUT_CLASSIFICATION	0.005067929645319864	TEST
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9998222619331673	WITHOUT_CLASSIFICATION	1.7773806683286453E-4	TEST
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999872805723573	WITHOUT_CLASSIFICATION	1.2719427642773816E-5	TEST
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999852095115996	WITHOUT_CLASSIFICATION	1.479048840047477E-5	TEST
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999924232664844	WITHOUT_CLASSIFICATION	7.576733515651594E-6	TEST
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9997341256826	WITHOUT_CLASSIFICATION	2.6587431740009897E-4	TEST
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999394655479138	WITHOUT_CLASSIFICATION	6.053445208613331E-5	TEST
// source extensions	WITHOUT_CLASSIFICATION	0.9999698111957563	WITHOUT_CLASSIFICATION	3.01888042436895E-5	TEST
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9894430460791276	WITHOUT_CLASSIFICATION	0.01055695392087237	TEST
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999099866720429	WITHOUT_CLASSIFICATION	9.001332795702455E-5	TEST
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999981216683522	WITHOUT_CLASSIFICATION	1.8783316476771533E-6	TEST
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999710667768332	WITHOUT_CLASSIFICATION	2.893322316672928E-5	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998989131606807	WITHOUT_CLASSIFICATION	1.0108683931922884E-4	TEST
// extension extensions	WITHOUT_CLASSIFICATION	0.9999405509430727	WITHOUT_CLASSIFICATION	5.944905692722206E-5	TEST
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9998223326201092	WITHOUT_CLASSIFICATION	1.7766737989072275E-4	TEST
// try all extensions	WITHOUT_CLASSIFICATION	0.9999242144358451	WITHOUT_CLASSIFICATION	7.57855641548127E-5	TEST
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9998849402655119	WITHOUT_CLASSIFICATION	1.1505973448809233E-4	TEST
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999681893912663	WITHOUT_CLASSIFICATION	3.181060873374014E-5	TEST
// try only literal search	WITHOUT_CLASSIFICATION	0.9998865968438267	WITHOUT_CLASSIFICATION	1.1340315617321203E-4	TEST
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999803429663856	WITHOUT_CLASSIFICATION	1.965703361442215E-5	TEST
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999683565047913	WITHOUT_CLASSIFICATION	3.164349520865304E-5	TEST
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999859640155918	WITHOUT_CLASSIFICATION	1.4035984408198937E-5	TEST
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999071652611239	WITHOUT_CLASSIFICATION	9.283473887607823E-5	TEST
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999968401823824	WITHOUT_CLASSIFICATION	3.159817617613359E-6	TEST
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999638162136547	WITHOUT_CLASSIFICATION	3.618378634538156E-5	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999527630937666	WITHOUT_CLASSIFICATION	4.723690623346444E-5	TEST
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999689740601744	WITHOUT_CLASSIFICATION	3.102593982553438E-5	TEST
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999631573190041	WITHOUT_CLASSIFICATION	3.6842680995860354E-5	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9994579435019851	WITHOUT_CLASSIFICATION	5.420564980148784E-4	TEST
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9994579435019851	WITHOUT_CLASSIFICATION	5.420564980148784E-4	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9997719447998422	WITHOUT_CLASSIFICATION	2.2805520015771368E-4	TEST
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9997719447998422	WITHOUT_CLASSIFICATION	2.2805520015771368E-4	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9995786369628632	WITHOUT_CLASSIFICATION	4.213630371368559E-4	TEST
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9995786369628632	WITHOUT_CLASSIFICATION	4.213630371368559E-4	TEST
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999352587966913	WITHOUT_CLASSIFICATION	6.474120330868907E-5	TEST
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999432443871671	WITHOUT_CLASSIFICATION	5.6755612832868024E-5	TEST
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9992443580204377	WITHOUT_CLASSIFICATION	7.556419795622692E-4	TEST
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.999425765912568	WITHOUT_CLASSIFICATION	5.74234087432051E-4	TEST
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999529194711807	WITHOUT_CLASSIFICATION	4.708052881922109E-5	TEST
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9990894926417663	WITHOUT_CLASSIFICATION	9.105073582337021E-4	TEST
// signed short, native	WITHOUT_CLASSIFICATION	0.9999395191767677	WITHOUT_CLASSIFICATION	6.048082323232298E-5	TEST
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.99996479648296	WITHOUT_CLASSIFICATION	3.520351704006596E-5	TEST
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9998994626101725	WITHOUT_CLASSIFICATION	1.0053738982758684E-4	TEST
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9995263802018197	WITHOUT_CLASSIFICATION	4.736197981802164E-4	TEST
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9964809691982175	WITHOUT_CLASSIFICATION	0.0035190308017823946	TEST
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999545425416183	WITHOUT_CLASSIFICATION	4.545745838159223E-5	TEST
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999879804634718	WITHOUT_CLASSIFICATION	1.2019536528167732E-5	TEST
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999992728851932	WITHOUT_CLASSIFICATION	7.271148068238154E-7	TEST
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.999816957954644	WITHOUT_CLASSIFICATION	1.8304204535614095E-4	TEST
//            write('S');	WITHOUT_CLASSIFICATION	0.9999458849024978	WITHOUT_CLASSIFICATION	5.411509750222997E-5	TEST
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999786192481384	WITHOUT_CLASSIFICATION	2.13807518616238E-5	TEST
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999258212676067	WITHOUT_CLASSIFICATION	7.417873239329818E-5	TEST
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9992874053147441	WITHOUT_CLASSIFICATION	7.125946852557934E-4	TEST
// w_symbol	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// w_unique	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9998051726676858	WITHOUT_CLASSIFICATION	1.948273323142263E-4	TEST
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999645677963972	WITHOUT_CLASSIFICATION	3.5432203602857246E-5	TEST
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9998373503286169	WITHOUT_CLASSIFICATION	1.626496713831175E-4	TEST
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999295279777719	WITHOUT_CLASSIFICATION	7.047202222804612E-5	TEST
// sic	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998057737448538	WITHOUT_CLASSIFICATION	1.942262551461536E-4	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998057737448538	WITHOUT_CLASSIFICATION	1.942262551461536E-4	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998057737448538	WITHOUT_CLASSIFICATION	1.942262551461536E-4	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999982414887089	WITHOUT_CLASSIFICATION	1.758511291063988E-6	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999982414887089	WITHOUT_CLASSIFICATION	1.758511291063988E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999802128761391	WITHOUT_CLASSIFICATION	1.9787123860902497E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999802128761391	WITHOUT_CLASSIFICATION	1.9787123860902497E-5	TEST
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999680734344247	WITHOUT_CLASSIFICATION	3.192656557531727E-5	TEST
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999415768403748	WITHOUT_CLASSIFICATION	5.8423159625153976E-5	TEST
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999395191767677	WITHOUT_CLASSIFICATION	6.048082323232298E-5	TEST
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999407449149881	WITHOUT_CLASSIFICATION	5.92550850118357E-5	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998057737448538	WITHOUT_CLASSIFICATION	1.942262551461536E-4	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998057737448538	WITHOUT_CLASSIFICATION	1.942262551461536E-4	TEST
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998057737448538	WITHOUT_CLASSIFICATION	1.942262551461536E-4	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999982414887089	WITHOUT_CLASSIFICATION	1.758511291063988E-6	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999982414887089	WITHOUT_CLASSIFICATION	1.758511291063988E-6	TEST
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999982414887089	WITHOUT_CLASSIFICATION	1.758511291063988E-6	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999802128761391	WITHOUT_CLASSIFICATION	1.9787123860902497E-5	TEST
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999802128761391	WITHOUT_CLASSIFICATION	1.9787123860902497E-5	TEST
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999207277160728	WITHOUT_CLASSIFICATION	7.927228392719066E-5	TEST
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999620898904391	WITHOUT_CLASSIFICATION	3.7910109560887084E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999287159292087	WITHOUT_CLASSIFICATION	7.128407079128053E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999287159292087	WITHOUT_CLASSIFICATION	7.128407079128053E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999287159292087	WITHOUT_CLASSIFICATION	7.128407079128053E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999287159292087	WITHOUT_CLASSIFICATION	7.128407079128053E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999287159292087	WITHOUT_CLASSIFICATION	7.128407079128053E-5	TEST
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999441514481973	WITHOUT_CLASSIFICATION	5.584855180275878E-5	TEST
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9998641868534995	WITHOUT_CLASSIFICATION	1.3581314650044953E-4	TEST
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999679714444616	WITHOUT_CLASSIFICATION	3.202855553828263E-5	TEST
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9998799360222643	WITHOUT_CLASSIFICATION	1.2006397773571325E-4	TEST
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9998864290733734	WITHOUT_CLASSIFICATION	1.1357092662662478E-4	TEST
// not enough bytes	WITHOUT_CLASSIFICATION	0.9998709819058467	WITHOUT_CLASSIFICATION	1.290180941534515E-4	TEST
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999646599172731	WITHOUT_CLASSIFICATION	3.5340082726972696E-5	TEST
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999599187141843	WITHOUT_CLASSIFICATION	4.0081285815727474E-5	TEST
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999166885711344	WITHOUT_CLASSIFICATION	8.331142886557348E-5	TEST
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999087523182424	WITHOUT_CLASSIFICATION	9.124768175759618E-5	TEST
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9998351332458522	WITHOUT_CLASSIFICATION	1.648667541478539E-4	TEST
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999583284597594	WITHOUT_CLASSIFICATION	4.167154024060252E-5	TEST
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999374049030134	WITHOUT_CLASSIFICATION	6.259509698658983E-5	TEST
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9998446381476761	WITHOUT_CLASSIFICATION	1.5536185232392665E-4	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999546207903792	WITHOUT_CLASSIFICATION	4.537920962087515E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999546207903792	WITHOUT_CLASSIFICATION	4.537920962087515E-5	TEST
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999546207903792	WITHOUT_CLASSIFICATION	4.537920962087515E-5	TEST
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9986164941440344	WITHOUT_CLASSIFICATION	0.0013835058559656035	TEST
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9986164941440344	WITHOUT_CLASSIFICATION	0.0013835058559656035	TEST
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999803100963628	WITHOUT_CLASSIFICATION	1.9689903637193312E-5	TEST
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9998428756507824	WITHOUT_CLASSIFICATION	1.5712434921751596E-4	TEST
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999321804309389	WITHOUT_CLASSIFICATION	6.781956906111975E-5	TEST
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999321804309389	WITHOUT_CLASSIFICATION	6.781956906111975E-5	TEST
// single precision, native	WITHOUT_CLASSIFICATION	0.9999515403729357	WITHOUT_CLASSIFICATION	4.845962706425572E-5	TEST
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999322405134069	WITHOUT_CLASSIFICATION	6.775948659312681E-5	TEST
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999285168169133	WITHOUT_CLASSIFICATION	7.148318308674609E-5	TEST
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999285168169133	WITHOUT_CLASSIFICATION	7.148318308674609E-5	TEST
// double precision, native	WITHOUT_CLASSIFICATION	0.9999489225298135	WITHOUT_CLASSIFICATION	5.107747018656755E-5	TEST
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999394655479138	WITHOUT_CLASSIFICATION	6.053445208613331E-5	TEST
// signed char	WITHOUT_CLASSIFICATION	0.9999584129347256	WITHOUT_CLASSIFICATION	4.15870652743819E-5	TEST
// unsigned char	WITHOUT_CLASSIFICATION	0.9999584129347256	WITHOUT_CLASSIFICATION	4.15870652743819E-5	TEST
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999407449149881	WITHOUT_CLASSIFICATION	5.92550850118357E-5	TEST
// int, native	WITHOUT_CLASSIFICATION	0.9999589613375829	WITHOUT_CLASSIFICATION	4.103866241715459E-5	TEST
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.99991542550677	WITHOUT_CLASSIFICATION	8.457449322993802E-5	TEST
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9998061055039222	WITHOUT_CLASSIFICATION	1.938944960778298E-4	TEST
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999667983933407	WITHOUT_CLASSIFICATION	3.3201606659411376E-5	TEST
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999280888159322	WITHOUT_CLASSIFICATION	7.191118406776953E-5	TEST
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// obtain a	WITHOUT_CLASSIFICATION	0.9999749287142693	WITHOUT_CLASSIFICATION	2.5071285730700033E-5	TEST
// obtain b	WITHOUT_CLASSIFICATION	0.999958226008305	WITHOUT_CLASSIFICATION	4.1773991694965866E-5	TEST
// obtain c	WITHOUT_CLASSIFICATION	0.9999642352744993	WITHOUT_CLASSIFICATION	3.576472550075754E-5	TEST
// obtain d	WITHOUT_CLASSIFICATION	0.9999580042756933	WITHOUT_CLASSIFICATION	4.1995724306704844E-5	TEST
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9995067733885824	WITHOUT_CLASSIFICATION	4.932266114175664E-4	TEST
/* 1 */	WITHOUT_CLASSIFICATION	0.9997824492606234	WITHOUT_CLASSIFICATION	2.1755073937668084E-4	TEST
/* 2 */	WITHOUT_CLASSIFICATION	0.9998091846243706	WITHOUT_CLASSIFICATION	1.9081537562940477E-4	TEST
/* 3 */	WITHOUT_CLASSIFICATION	0.9997937019673367	WITHOUT_CLASSIFICATION	2.0629803266327657E-4	TEST
/* 4 */	WITHOUT_CLASSIFICATION	0.9997782375919025	WITHOUT_CLASSIFICATION	2.2176240809751305E-4	TEST
/* 5 */	WITHOUT_CLASSIFICATION	0.9997880117225671	WITHOUT_CLASSIFICATION	2.1198827743284143E-4	TEST
/* 6 */	WITHOUT_CLASSIFICATION	0.9997894561279597	WITHOUT_CLASSIFICATION	2.1054387204033075E-4	TEST
/* 7 */	WITHOUT_CLASSIFICATION	0.999775616696369	WITHOUT_CLASSIFICATION	2.2438330363090548E-4	TEST
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9998632637687568	WITHOUT_CLASSIFICATION	1.3673623124313156E-4	TEST
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9998733739247928	WITHOUT_CLASSIFICATION	1.2662607520723274E-4	TEST
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999877816343836	WITHOUT_CLASSIFICATION	1.2218365616391274E-5	TEST
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.7114051093391932	TEST	0.2885948906608068	WITHOUT_CLASSIFICATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999661647774282	WITHOUT_CLASSIFICATION	3.3835222571729524E-5	TEST
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999937749615434	WITHOUT_CLASSIFICATION	6.2250384565629985E-6	TEST
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9998075065477274	WITHOUT_CLASSIFICATION	1.9249345227267023E-4	TEST
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999388085965208	WITHOUT_CLASSIFICATION	6.119140347915222E-5	TEST
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9998493454524622	WITHOUT_CLASSIFICATION	1.5065454753784258E-4	TEST
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9988988350664615	WITHOUT_CLASSIFICATION	0.0011011649335384917	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9990018853990378	WITHOUT_CLASSIFICATION	9.981146009622928E-4	TEST
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9990018853990378	WITHOUT_CLASSIFICATION	9.981146009622928E-4	TEST
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9996799028840776	WITHOUT_CLASSIFICATION	3.200971159224622E-4	TEST
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999133867658474	WITHOUT_CLASSIFICATION	8.661323415262656E-5	TEST
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9988988350664615	WITHOUT_CLASSIFICATION	0.0011011649335384917	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9965609833011354	WITHOUT_CLASSIFICATION	0.003439016698864704	TEST
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9993336356962259	WITHOUT_CLASSIFICATION	6.663643037739674E-4	TEST
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9995265940644915	WITHOUT_CLASSIFICATION	4.734059355085552E-4	TEST
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999269725168937	WITHOUT_CLASSIFICATION	7.302748310637784E-5	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999654784320078	WITHOUT_CLASSIFICATION	3.4521567992296694E-5	TEST
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999753923469615	WITHOUT_CLASSIFICATION	2.4607653038471142E-5	TEST
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999851862682372	WITHOUT_CLASSIFICATION	1.4813731762788865E-5	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999941945563552	WITHOUT_CLASSIFICATION	5.805443644724889E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999941945563552	WITHOUT_CLASSIFICATION	5.805443644724889E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999941945563552	WITHOUT_CLASSIFICATION	5.805443644724889E-6	TEST
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999941945563552	WITHOUT_CLASSIFICATION	5.805443644724889E-6	TEST
// try both	WITHOUT_CLASSIFICATION	0.9999582779542466	WITHOUT_CLASSIFICATION	4.1722045753479454E-5	TEST
// just unix	WITHOUT_CLASSIFICATION	0.9999707546312805	WITHOUT_CLASSIFICATION	2.9245368719566773E-5	TEST
// just windows	WITHOUT_CLASSIFICATION	0.9999809838660599	WITHOUT_CLASSIFICATION	1.9016133940156274E-5	TEST
// neither	WITHOUT_CLASSIFICATION	0.9998889926258392	WITHOUT_CLASSIFICATION	1.110073741608364E-4	TEST
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9997450103920158	WITHOUT_CLASSIFICATION	2.549896079841599E-4	TEST
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9998992853223903	WITHOUT_CLASSIFICATION	1.0071467760980758E-4	TEST
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999704136051307	WITHOUT_CLASSIFICATION	2.9586394869199266E-5	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999616102278022	WITHOUT_CLASSIFICATION	3.83897721977998E-5	TEST
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999616102278022	WITHOUT_CLASSIFICATION	3.83897721977998E-5	TEST
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999076490477431	WITHOUT_CLASSIFICATION	9.235095225691038E-5	TEST
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999550838119008	WITHOUT_CLASSIFICATION	4.4916188099211366E-5	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9996782510898534	WITHOUT_CLASSIFICATION	3.2174891014650375E-4	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999865381375505	WITHOUT_CLASSIFICATION	1.3461862449526462E-5	TEST
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999865381375505	WITHOUT_CLASSIFICATION	1.3461862449526462E-5	TEST
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999772057206802	WITHOUT_CLASSIFICATION	2.2794279319854486E-5	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999951160514383	WITHOUT_CLASSIFICATION	4.883948561686527E-5	TEST
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999951160514383	WITHOUT_CLASSIFICATION	4.883948561686527E-5	TEST
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9973908667882376	WITHOUT_CLASSIFICATION	0.0026091332117624505	TEST
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999920744400232	WITHOUT_CLASSIFICATION	7.925559976825065E-6	TEST
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999722800702638	WITHOUT_CLASSIFICATION	2.7719929736182072E-5	TEST
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9998626555728469	WITHOUT_CLASSIFICATION	1.3734442715314333E-4	TEST
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999533059514752	WITHOUT_CLASSIFICATION	4.669404852472539E-5	TEST
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999857268115063	WITHOUT_CLASSIFICATION	1.4273188493694288E-5	TEST
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9989186945305293	WITHOUT_CLASSIFICATION	0.0010813054694706994	TEST
//sequential	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999741755115894	WITHOUT_CLASSIFICATION	2.582448841061286E-5	TEST
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.999870031242609	WITHOUT_CLASSIFICATION	1.2996875739096535E-4	TEST
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9998981342187576	WITHOUT_CLASSIFICATION	1.0186578124240665E-4	TEST
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9921743728143609	WITHOUT_CLASSIFICATION	0.007825627185639178	TEST
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9935986658456791	WITHOUT_CLASSIFICATION	0.006401334154320838	TEST
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999853141992253	WITHOUT_CLASSIFICATION	1.4685800774600264E-5	TEST
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9998631582792776	WITHOUT_CLASSIFICATION	1.36841720722425E-4	TEST
// Args	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// static methods only	WITHOUT_CLASSIFICATION	0.9999092101583883	WITHOUT_CLASSIFICATION	9.078984161175515E-5	TEST
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9995205933122173	WITHOUT_CLASSIFICATION	4.794066877826567E-4	TEST
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999676804600208	WITHOUT_CLASSIFICATION	3.231953997915005E-5	TEST
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999315050907226	WITHOUT_CLASSIFICATION	6.849490927743043E-5	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999859982006294	WITHOUT_CLASSIFICATION	1.4001799370518208E-5	TEST
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999740490103982	WITHOUT_CLASSIFICATION	2.5950989601884247E-5	TEST
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.999741200803578	WITHOUT_CLASSIFICATION	2.5879919642209613E-4	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999686419038167	WITHOUT_CLASSIFICATION	3.135809618321624E-5	TEST
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9997650029280045	WITHOUT_CLASSIFICATION	2.3499707199548276E-4	TEST
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999955709041307	WITHOUT_CLASSIFICATION	4.429095869222386E-6	TEST
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9996842847120825	WITHOUT_CLASSIFICATION	3.1571528791750797E-4	TEST
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999903521588991	WITHOUT_CLASSIFICATION	9.647841100995221E-6	TEST
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999636272637333	WITHOUT_CLASSIFICATION	3.637273626662546E-5	TEST
// ..	WITHOUT_CLASSIFICATION	0.9998890401873386	WITHOUT_CLASSIFICATION	1.1095981266143585E-4	TEST
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9998379296234398	WITHOUT_CLASSIFICATION	1.6207037656032223E-4	TEST
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9998231784174594	WITHOUT_CLASSIFICATION	1.7682158254064446E-4	TEST
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999682141612651	WITHOUT_CLASSIFICATION	3.1785838734796854E-5	TEST
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999986252739124	WITHOUT_CLASSIFICATION	1.3747260875860013E-6	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9991843677354671	WITHOUT_CLASSIFICATION	8.156322645328567E-4	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999572728029643	WITHOUT_CLASSIFICATION	4.272719703572662E-5	TEST
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9995205933122173	WITHOUT_CLASSIFICATION	4.794066877826567E-4	TEST
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9995282194486441	WITHOUT_CLASSIFICATION	4.7178055135585885E-4	TEST
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9991843677354671	WITHOUT_CLASSIFICATION	8.156322645328567E-4	TEST
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999572728029643	WITHOUT_CLASSIFICATION	4.272719703572662E-5	TEST
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9998441717706603	WITHOUT_CLASSIFICATION	1.55828229339663E-4	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9996801863080647	WITHOUT_CLASSIFICATION	3.198136919353443E-4	TEST
// deal with length/width	WITHOUT_CLASSIFICATION	0.9996801863080647	WITHOUT_CLASSIFICATION	3.198136919353443E-4	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999853970902025	WITHOUT_CLASSIFICATION	1.460290979750264E-4	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999773576407698	WITHOUT_CLASSIFICATION	2.2642359230307797E-5	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999584671813515	WITHOUT_CLASSIFICATION	4.1532818648416094E-5	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999699090177914	WITHOUT_CLASSIFICATION	3.009098220861699E-5	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9996078551369018	WITHOUT_CLASSIFICATION	3.9214486309817526E-4	TEST
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9997684996505845	WITHOUT_CLASSIFICATION	2.3150034941555735E-4	TEST
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999049514258245	WITHOUT_CLASSIFICATION	9.504857417545497E-5	TEST
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999110277547508	WITHOUT_CLASSIFICATION	8.897224524911616E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999494844233926	WITHOUT_CLASSIFICATION	5.051557660748092E-5	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.999756614373692	WITHOUT_CLASSIFICATION	2.4338562630786428E-4	TEST
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999231047314249	WITHOUT_CLASSIFICATION	7.689526857509721E-5	TEST
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999862819197403	WITHOUT_CLASSIFICATION	1.3718080259713646E-5	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999562741933666	WITHOUT_CLASSIFICATION	4.372580663338117E-5	TEST
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999562741933666	WITHOUT_CLASSIFICATION	4.372580663338117E-5	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998385229223867	WITHOUT_CLASSIFICATION	1.614770776133525E-4	TEST
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9998385229223867	WITHOUT_CLASSIFICATION	1.614770776133525E-4	TEST
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999223637095126	WITHOUT_CLASSIFICATION	7.763629048742186E-5	TEST
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999913901176806	WITHOUT_CLASSIFICATION	8.609882319459856E-6	TEST
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.999741490322385	WITHOUT_CLASSIFICATION	2.5850967761506207E-4	TEST
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9995205933122173	WITHOUT_CLASSIFICATION	4.794066877826567E-4	TEST
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999584671813515	WITHOUT_CLASSIFICATION	4.1532818648416094E-5	TEST
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999699090177914	WITHOUT_CLASSIFICATION	3.009098220861699E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999494844233926	WITHOUT_CLASSIFICATION	5.051557660748092E-5	TEST
// '.'	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999659981849962	WITHOUT_CLASSIFICATION	3.400181500386635E-5	TEST
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999831144120648	WITHOUT_CLASSIFICATION	1.6885587935218602E-5	TEST
// \v	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999584129347256	WITHOUT_CLASSIFICATION	4.15870652743819E-5	TEST
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999203001338477	WITHOUT_CLASSIFICATION	7.969986615227933E-5	TEST
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.999859245774083	WITHOUT_CLASSIFICATION	1.4075422591698715E-4	TEST
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9984145785005584	WITHOUT_CLASSIFICATION	0.0015854214994415917	TEST
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999580710981774	WITHOUT_CLASSIFICATION	4.192890182252976E-5	TEST
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999788915206342	WITHOUT_CLASSIFICATION	2.110847936571815E-5	TEST
// negative values	WITHOUT_CLASSIFICATION	0.9999628746258733	WITHOUT_CLASSIFICATION	3.712537412666792E-5	TEST
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999753811010056	WITHOUT_CLASSIFICATION	2.461889899444775E-5	TEST
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9962998086127053	WITHOUT_CLASSIFICATION	0.0037001913872947395	TEST
// no such luck...	WITHOUT_CLASSIFICATION	0.9999626377980076	WITHOUT_CLASSIFICATION	3.7362201992237456E-5	TEST
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9996629954795985	WITHOUT_CLASSIFICATION	3.370045204015587E-4	TEST
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999636840067938	WITHOUT_CLASSIFICATION	3.6315993206214233E-5	TEST
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999561623473798	WITHOUT_CLASSIFICATION	4.383765262020082E-5	TEST
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999273981611427	WITHOUT_CLASSIFICATION	7.260183885723416E-5	TEST
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9998583079958382	WITHOUT_CLASSIFICATION	1.4169200416191518E-4	TEST
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9998854970051885	WITHOUT_CLASSIFICATION	1.145029948116175E-4	TEST
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9996215997628204	WITHOUT_CLASSIFICATION	3.7840023717961653E-4	TEST
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.999983445397132	WITHOUT_CLASSIFICATION	1.65546028679759E-5	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9995205933122173	WITHOUT_CLASSIFICATION	4.794066877826567E-4	TEST
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9995205933122173	WITHOUT_CLASSIFICATION	4.794066877826567E-4	TEST
// \v	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9995205933122173	WITHOUT_CLASSIFICATION	4.794066877826567E-4	TEST
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9995205933122173	WITHOUT_CLASSIFICATION	4.794066877826567E-4	TEST
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9995205933122173	WITHOUT_CLASSIFICATION	4.794066877826567E-4	TEST
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9995205933122173	WITHOUT_CLASSIFICATION	4.794066877826567E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9995205933122173	WITHOUT_CLASSIFICATION	4.794066877826567E-4	TEST
// no number	WITHOUT_CLASSIFICATION	0.9999630581954266	WITHOUT_CLASSIFICATION	3.694180457333862E-5	TEST
// trailing garbage	WITHOUT_CLASSIFICATION	0.999966003987105	WITHOUT_CLASSIFICATION	3.399601289507119E-5	TEST
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9974803327477472	WITHOUT_CLASSIFICATION	0.0025196672522528173	TEST
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9994557314739317	WITHOUT_CLASSIFICATION	5.442685260683438E-4	TEST
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999910589498088	WITHOUT_CLASSIFICATION	8.941050191229119E-6	TEST
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999841865163944	WITHOUT_CLASSIFICATION	1.581348360554633E-5	TEST
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999672282278278	WITHOUT_CLASSIFICATION	3.2771772172202266E-5	TEST
// we reached the end	WITHOUT_CLASSIFICATION	0.9999650831141145	WITHOUT_CLASSIFICATION	3.491688588552795E-5	TEST
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9998846230979894	WITHOUT_CLASSIFICATION	1.1537690201055543E-4	TEST
// states	WITHOUT_CLASSIFICATION	0.9998926707713239	WITHOUT_CLASSIFICATION	1.0732922867604396E-4	TEST
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9997150818202656	WITHOUT_CLASSIFICATION	2.8491817973443404E-4	TEST
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999619063533002	WITHOUT_CLASSIFICATION	3.8093646699939154E-5	TEST
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999801653920751	WITHOUT_CLASSIFICATION	1.9834607924905403E-5	TEST
// drop through for sign	WITHOUT_CLASSIFICATION	0.9998922946633303	WITHOUT_CLASSIFICATION	1.0770533666967894E-4	TEST
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999822714828074	WITHOUT_CLASSIFICATION	1.772851719260811E-5	TEST
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9998494027595369	WITHOUT_CLASSIFICATION	1.5059724046306836E-4	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999750115111301	WITHOUT_CLASSIFICATION	2.498848886994526E-5	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999292884072395	WITHOUT_CLASSIFICATION	7.071159276053573E-5	TEST
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999410876391885	WITHOUT_CLASSIFICATION	5.891236081150158E-5	TEST
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999493757988129	WITHOUT_CLASSIFICATION	5.0624201187144217E-5	TEST
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.999997313057938	WITHOUT_CLASSIFICATION	2.6869420620976552E-6	TEST
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999905239504612	WITHOUT_CLASSIFICATION	9.47604953886622E-6	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998101830951304	WITHOUT_CLASSIFICATION	1.8981690486971465E-4	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998101830951304	WITHOUT_CLASSIFICATION	1.8981690486971465E-4	TEST
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999423205707884	WITHOUT_CLASSIFICATION	5.767942921154327E-5	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999648712158492	WITHOUT_CLASSIFICATION	3.512878415075757E-5	TEST
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999648712158492	WITHOUT_CLASSIFICATION	3.512878415075757E-5	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999807781513217	WITHOUT_CLASSIFICATION	1.9221848678273997E-5	TEST
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999807781513217	WITHOUT_CLASSIFICATION	1.9221848678273997E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999221772825307	WITHOUT_CLASSIFICATION	7.78227174692782E-5	TEST
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999772712690166	WITHOUT_CLASSIFICATION	2.2728730983435908E-5	TEST
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999982780188683	WITHOUT_CLASSIFICATION	1.7219811316945157E-5	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999521328713573	WITHOUT_CLASSIFICATION	4.786712864270404E-5	TEST
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999556355264391	WITHOUT_CLASSIFICATION	4.4364473561018176E-5	TEST
// block	WITHOUT_CLASSIFICATION	0.9998954864916576	WITHOUT_CLASSIFICATION	1.0451350834238835E-4	TEST
// block	WITHOUT_CLASSIFICATION	0.9998954864916576	WITHOUT_CLASSIFICATION	1.0451350834238835E-4	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999750115111301	WITHOUT_CLASSIFICATION	2.498848886994526E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999750115111301	WITHOUT_CLASSIFICATION	2.498848886994526E-5	TEST
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999750115111301	WITHOUT_CLASSIFICATION	2.498848886994526E-5	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999292884072395	WITHOUT_CLASSIFICATION	7.071159276053573E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998101830951304	WITHOUT_CLASSIFICATION	1.8981690486971465E-4	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998101830951304	WITHOUT_CLASSIFICATION	1.8981690486971465E-4	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998101830951304	WITHOUT_CLASSIFICATION	1.8981690486971465E-4	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999221772825307	WITHOUT_CLASSIFICATION	7.78227174692782E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999221772825307	WITHOUT_CLASSIFICATION	7.78227174692782E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999221772825307	WITHOUT_CLASSIFICATION	7.78227174692782E-5	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999521328713573	WITHOUT_CLASSIFICATION	4.786712864270404E-5	TEST
// switch // if	WITHOUT_CLASSIFICATION	0.9999521328713573	WITHOUT_CLASSIFICATION	4.786712864270404E-5	TEST
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999849450415357	WITHOUT_CLASSIFICATION	1.5054958464193089E-5	TEST
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9997702369855052	WITHOUT_CLASSIFICATION	2.2976301449472255E-4	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999563445682698	WITHOUT_CLASSIFICATION	4.365543173013277E-5	TEST
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9893287546772467	WITHOUT_CLASSIFICATION	0.010671245322753266	TEST
// no digits, error	WITHOUT_CLASSIFICATION	0.999962565783656	WITHOUT_CLASSIFICATION	3.7434216343937896E-5	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999321976824497	WITHOUT_CLASSIFICATION	6.780231755030414E-5	TEST
// too big for us	WITHOUT_CLASSIFICATION	0.9999321976824497	WITHOUT_CLASSIFICATION	6.780231755030414E-5	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999425616279352	WITHOUT_CLASSIFICATION	5.743837206469307E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9997709898176895	WITHOUT_CLASSIFICATION	2.2901018231034903E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9997709898176895	WITHOUT_CLASSIFICATION	2.2901018231034903E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9997709898176895	WITHOUT_CLASSIFICATION	2.2901018231034903E-4	TEST
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999837452767908	WITHOUT_CLASSIFICATION	1.6254723209232725E-5	TEST
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9998756524338782	WITHOUT_CLASSIFICATION	1.2434756612182945E-4	TEST
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999292884072395	WITHOUT_CLASSIFICATION	7.071159276053573E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999221772825307	WITHOUT_CLASSIFICATION	7.78227174692782E-5	TEST
// switch // for	WITHOUT_CLASSIFICATION	0.9999221772825307	WITHOUT_CLASSIFICATION	7.78227174692782E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9997709898176895	WITHOUT_CLASSIFICATION	2.2901018231034903E-4	TEST
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999425616279352	WITHOUT_CLASSIFICATION	5.743837206469307E-5	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9998908880954099	WITHOUT_CLASSIFICATION	1.0911190459014151E-4	TEST
// switch //while	WITHOUT_CLASSIFICATION	0.9999580099209945	WITHOUT_CLASSIFICATION	4.1990079005558615E-5	TEST
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999899957750654	WITHOUT_CLASSIFICATION	1.0004224934656992E-5	TEST
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999876358197339	WITHOUT_CLASSIFICATION	1.2364180266038735E-5	TEST
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9996002937223913	WITHOUT_CLASSIFICATION	3.997062776085837E-4	TEST
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999783438625653	WITHOUT_CLASSIFICATION	2.1656137434618113E-5	TEST
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9997587081587143	WITHOUT_CLASSIFICATION	2.41291841285831E-4	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999858315380344	WITHOUT_CLASSIFICATION	1.4168461965605725E-5	TEST
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9998701603111357	WITHOUT_CLASSIFICATION	1.2983968886421136E-4	TEST
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9998820152482644	WITHOUT_CLASSIFICATION	1.1798475173573539E-4	TEST
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999036492371215	WITHOUT_CLASSIFICATION	9.635076287858429E-5	TEST
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999510372815804	WITHOUT_CLASSIFICATION	4.896271841950539E-5	TEST
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999836162095763	WITHOUT_CLASSIFICATION	1.6383790423637596E-5	TEST
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999734087490793	WITHOUT_CLASSIFICATION	2.6591250920636943E-5	TEST
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999662733789961	WITHOUT_CLASSIFICATION	3.372662100389732E-5	TEST
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9996037452901051	WITHOUT_CLASSIFICATION	3.962547098949498E-4	TEST
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999620155504916	WITHOUT_CLASSIFICATION	3.798444950842896E-5	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9978458250073888	WITHOUT_CLASSIFICATION	0.0021541749926111517	TEST
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9991194765644128	WITHOUT_CLASSIFICATION	8.805234355871005E-4	TEST
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998821528345503	WITHOUT_CLASSIFICATION	1.1784716544967467E-4	TEST
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999938844052741	WITHOUT_CLASSIFICATION	6.115594725874631E-6	TEST
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.999816128021264	WITHOUT_CLASSIFICATION	1.8387197873610922E-4	TEST
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9978371388060704	WITHOUT_CLASSIFICATION	0.0021628611939296565	TEST
// unread back	WITHOUT_CLASSIFICATION	0.999958636494374	WITHOUT_CLASSIFICATION	4.1363505625898474E-5	TEST
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999677485340235	WITHOUT_CLASSIFICATION	3.2251465976563427E-5	TEST
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999831075277027	WITHOUT_CLASSIFICATION	1.689247229729344E-5	TEST
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999590008094177	WITHOUT_CLASSIFICATION	4.099919058223628E-5	TEST
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999922245402049	WITHOUT_CLASSIFICATION	7.77545979515667E-6	TEST
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999989534912757	WITHOUT_CLASSIFICATION	1.0465087243154094E-6	TEST
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999112932958873	WITHOUT_CLASSIFICATION	8.870670411258246E-5	TEST
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999737765388551	WITHOUT_CLASSIFICATION	2.6223461144833514E-5	TEST
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9998908880954099	WITHOUT_CLASSIFICATION	1.0911190459014151E-4	TEST
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999630909907827	WITHOUT_CLASSIFICATION	3.6909009217248806E-5	TEST
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9998750112522978	WITHOUT_CLASSIFICATION	1.249887477021345E-4	TEST
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9998667549930174	WITHOUT_CLASSIFICATION	1.3324500698265172E-4	TEST
// silence	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// silence	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999715866801548	WITHOUT_CLASSIFICATION	2.8413319845100367E-5	TEST
// Don't bother	WITHOUT_CLASSIFICATION	0.9999715866801548	WITHOUT_CLASSIFICATION	2.8413319845100367E-5	TEST
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9997803321990296	WITHOUT_CLASSIFICATION	2.1966780097037693E-4	TEST
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9997160152589485	WITHOUT_CLASSIFICATION	2.839847410515547E-4	TEST
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.999905711043918	WITHOUT_CLASSIFICATION	9.428895608197114E-5	TEST
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9997697489900493	WITHOUT_CLASSIFICATION	2.302510099507357E-4	TEST
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9998861683766346	WITHOUT_CLASSIFICATION	1.13831623365414E-4	TEST
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999781046597523	WITHOUT_CLASSIFICATION	2.1895340247597183E-5	TEST
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999671280193868	WITHOUT_CLASSIFICATION	3.2871980613098803E-5	TEST
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999763787567828	WITHOUT_CLASSIFICATION	2.3621243217225344E-5	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999952209623545	WITHOUT_CLASSIFICATION	4.779037645551205E-6	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999530826031584	WITHOUT_CLASSIFICATION	4.691739684170555E-5	TEST
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9997644247817473	WITHOUT_CLASSIFICATION	2.355752182528126E-4	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999668098752588	WITHOUT_CLASSIFICATION	3.319012474126598E-5	TEST
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999668098752588	WITHOUT_CLASSIFICATION	3.319012474126598E-5	TEST
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9995638183664086	WITHOUT_CLASSIFICATION	4.361816335914401E-4	TEST
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.999957436137169	WITHOUT_CLASSIFICATION	4.256386283097775E-5	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999415447481995	WITHOUT_CLASSIFICATION	5.845525180040439E-5	TEST
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999415447481995	WITHOUT_CLASSIFICATION	5.845525180040439E-5	TEST
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999576508381468	WITHOUT_CLASSIFICATION	4.2349161853137416E-5	TEST
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999745798005446	WITHOUT_CLASSIFICATION	2.5420199455415028E-5	TEST
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9998164770516965	WITHOUT_CLASSIFICATION	1.835229483035064E-4	TEST
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9998754045281949	WITHOUT_CLASSIFICATION	1.2459547180503912E-4	TEST
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.999952852136536	WITHOUT_CLASSIFICATION	4.714786346399924E-5	TEST
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9996797415873615	WITHOUT_CLASSIFICATION	3.202584126385252E-4	TEST
// save the ungot	WITHOUT_CLASSIFICATION	0.9999822957441908	WITHOUT_CLASSIFICATION	1.7704255809235413E-5	TEST
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999248504813322	WITHOUT_CLASSIFICATION	7.514951866785454E-5	TEST
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9998985174203655	WITHOUT_CLASSIFICATION	1.014825796344755E-4	TEST
// flush first	WITHOUT_CLASSIFICATION	0.9999652064385264	WITHOUT_CLASSIFICATION	3.47935614735237E-5	TEST
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.999654265355613	WITHOUT_CLASSIFICATION	3.4573464438703705E-4	TEST
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9998251486753833	WITHOUT_CLASSIFICATION	1.748513246166856E-4	TEST
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999139819611249	WITHOUT_CLASSIFICATION	8.601803887513736E-5	TEST
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9998098954936057	WITHOUT_CLASSIFICATION	1.9010450639426606E-4	TEST
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9998464307631905	WITHOUT_CLASSIFICATION	1.5356923680962057E-4	TEST
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9977953769935303	WITHOUT_CLASSIFICATION	0.0022046230064697333	TEST
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999552153787293	WITHOUT_CLASSIFICATION	4.478462127059861E-5	TEST
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999528486019712	WITHOUT_CLASSIFICATION	4.71513980288586E-5	TEST
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999451936047101	WITHOUT_CLASSIFICATION	5.4806395289906415E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9996500556919571	WITHOUT_CLASSIFICATION	3.49944308042931E-4	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9927208968717021	WITHOUT_CLASSIFICATION	0.0072791031282979065	TEST
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999838055889709	WITHOUT_CLASSIFICATION	1.619441102914273E-5	TEST
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999845710449935	WITHOUT_CLASSIFICATION	1.5428955006508738E-5	TEST
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999336840009482	WITHOUT_CLASSIFICATION	6.631599905173708E-5	TEST
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999594051633167	WITHOUT_CLASSIFICATION	4.0594836683280816E-5	TEST
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999703682007862	WITHOUT_CLASSIFICATION	2.9631799213875264E-5	TEST
// else leave it null	WITHOUT_CLASSIFICATION	0.9998313609984373	WITHOUT_CLASSIFICATION	1.6863900156273794E-4	TEST
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999537363621199	WITHOUT_CLASSIFICATION	4.626363788005009E-5	TEST
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.999963006836158	WITHOUT_CLASSIFICATION	3.699316384209325E-5	TEST
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999810348488033	WITHOUT_CLASSIFICATION	1.8965151196735398E-5	TEST
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999806203337975	WITHOUT_CLASSIFICATION	1.9379666202481878E-5	TEST
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999751386825896	WITHOUT_CLASSIFICATION	2.4861317410417853E-5	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999914568892717	WITHOUT_CLASSIFICATION	8.543110728341075E-6	TEST
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999914568892717	WITHOUT_CLASSIFICATION	8.543110728341075E-6	TEST
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999684012433939	WITHOUT_CLASSIFICATION	3.1598756606065795E-5	TEST
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999976232217105	WITHOUT_CLASSIFICATION	2.3767782895425587E-6	TEST
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9994513227102688	WITHOUT_CLASSIFICATION	5.486772897311255E-4	TEST
// Init	WITHOUT_CLASSIFICATION	0.9998891655962566	WITHOUT_CLASSIFICATION	1.1083440374340263E-4	TEST
// Block	WITHOUT_CLASSIFICATION	0.9998890582760209	WITHOUT_CLASSIFICATION	1.1094172397898017E-4	TEST
// Copy constructor	WITHOUT_CLASSIFICATION	0.999950916529867	WITHOUT_CLASSIFICATION	4.908347013307446E-5	TEST
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9968804733794769	WITHOUT_CLASSIFICATION	0.003119526620523076	TEST
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9968804733794769	WITHOUT_CLASSIFICATION	0.003119526620523076	TEST
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9937887019601127	WITHOUT_CLASSIFICATION	0.006211298039887247	TEST
// ok	WITHOUT_CLASSIFICATION	0.9999086655543832	WITHOUT_CLASSIFICATION	9.13344456167957E-5	TEST
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9995781998414514	WITHOUT_CLASSIFICATION	4.2180015854864037E-4	TEST
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9992398367758172	WITHOUT_CLASSIFICATION	7.60163224182797E-4	TEST
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9998120972480383	WITHOUT_CLASSIFICATION	1.879027519616558E-4	TEST
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9994263141157346	WITHOUT_CLASSIFICATION	5.736858842653506E-4	TEST
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999825707521566	WITHOUT_CLASSIFICATION	1.7429247843388762E-5	TEST
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999631996793003	WITHOUT_CLASSIFICATION	3.680032069981732E-5	TEST
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9998601370675619	WITHOUT_CLASSIFICATION	1.3986293243811032E-4	TEST
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999631471002932	WITHOUT_CLASSIFICATION	3.685289970672738E-5	TEST
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999711744061809	WITHOUT_CLASSIFICATION	2.882559381907607E-5	TEST
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999577800552693	WITHOUT_CLASSIFICATION	4.221994473070136E-5	TEST
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999350707541967	WITHOUT_CLASSIFICATION	6.492924580324871E-5	TEST
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999863933590528	WITHOUT_CLASSIFICATION	1.3606640947223266E-5	TEST
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999039117435667	WITHOUT_CLASSIFICATION	9.608825643330548E-5	TEST
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9997268855543077	WITHOUT_CLASSIFICATION	2.7311444569227267E-4	TEST
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9998912442790348	WITHOUT_CLASSIFICATION	1.0875572096529286E-4	TEST
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999193974751786	WITHOUT_CLASSIFICATION	8.060252482144444E-5	TEST
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999618212497424	WITHOUT_CLASSIFICATION	3.817875025753678E-5	TEST
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.99992433282742	WITHOUT_CLASSIFICATION	7.566717257997423E-5	TEST
// void methods should work	WITHOUT_CLASSIFICATION	0.9998186287644595	WITHOUT_CLASSIFICATION	1.8137123554053577E-4	TEST
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9998604469440413	WITHOUT_CLASSIFICATION	1.3955305595858875E-4	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9994253456012786	WITHOUT_CLASSIFICATION	5.746543987213891E-4	TEST
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9997735251921823	WITHOUT_CLASSIFICATION	2.2647480781771414E-4	TEST
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999786648354072	WITHOUT_CLASSIFICATION	2.1335164592882026E-5	TEST
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999727787945831	WITHOUT_CLASSIFICATION	2.7221205416955604E-5	TEST
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9997916871570577	WITHOUT_CLASSIFICATION	2.0831284294222955E-4	TEST
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9996037452901051	WITHOUT_CLASSIFICATION	3.962547098949498E-4	TEST
// value equality	WITHOUT_CLASSIFICATION	0.9999626608955108	WITHOUT_CLASSIFICATION	3.733910448919134E-5	TEST
// identity equality	WITHOUT_CLASSIFICATION	0.9999591374417685	WITHOUT_CLASSIFICATION	4.08625582314513E-5	TEST
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999188599852034	WITHOUT_CLASSIFICATION	8.114001479658467E-5	TEST
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999580169791151	WITHOUT_CLASSIFICATION	4.1983020884782775E-5	TEST
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.999859574959301	WITHOUT_CLASSIFICATION	1.404250406989473E-4	TEST
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9997860998247433	WITHOUT_CLASSIFICATION	2.1390017525669866E-4	TEST
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999710200951077	WITHOUT_CLASSIFICATION	2.8979904892259707E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999625413918237	WITHOUT_CLASSIFICATION	3.745860817621682E-5	TEST
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999017637642402	WITHOUT_CLASSIFICATION	9.823623575980689E-5	TEST
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.999895982504752	WITHOUT_CLASSIFICATION	1.0401749524794114E-4	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999958205348838	WITHOUT_CLASSIFICATION	4.179465116245149E-6	TEST
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999561508821744	WITHOUT_CLASSIFICATION	4.384911782561358E-5	TEST
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999499495342093	WITHOUT_CLASSIFICATION	5.0050465790688406E-5	TEST
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999915964655356	WITHOUT_CLASSIFICATION	8.403534464443994E-6	TEST
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999852581914872	WITHOUT_CLASSIFICATION	1.4741808512793774E-5	TEST
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999153493577388	WITHOUT_CLASSIFICATION	8.465064226125753E-5	TEST
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999975012854471	WITHOUT_CLASSIFICATION	2.498714552894596E-6	TEST
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9996037452901051	WITHOUT_CLASSIFICATION	3.962547098949498E-4	TEST
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999782896194314	WITHOUT_CLASSIFICATION	2.1710380568620516E-5	TEST
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9996651319056299	WITHOUT_CLASSIFICATION	3.348680943702089E-4	TEST
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999718664813048	WITHOUT_CLASSIFICATION	2.813351869523163E-5	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9997348733270552	WITHOUT_CLASSIFICATION	2.6512667294483166E-4	TEST
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999821155118349	WITHOUT_CLASSIFICATION	1.7884488165134076E-5	TEST
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.999987569616609	WITHOUT_CLASSIFICATION	1.2430383391015247E-5	TEST
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999116594025945	WITHOUT_CLASSIFICATION	8.834059740550724E-5	TEST
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9997461447709116	WITHOUT_CLASSIFICATION	2.538552290883517E-4	TEST
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999679000369309	WITHOUT_CLASSIFICATION	3.209996306917195E-5	TEST
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999656735804388	WITHOUT_CLASSIFICATION	3.432641956120061E-5	TEST
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999935441139702	WITHOUT_CLASSIFICATION	6.455886029795294E-5	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999396469546786	WITHOUT_CLASSIFICATION	6.0353045321303056E-5	TEST
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999935441139702	WITHOUT_CLASSIFICATION	6.455886029795294E-5	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999751998624786	WITHOUT_CLASSIFICATION	2.4800137521369746E-5	TEST
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999396469546786	WITHOUT_CLASSIFICATION	6.0353045321303056E-5	TEST
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9942299241905613	WITHOUT_CLASSIFICATION	0.005770075809438604	TEST
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999686419038167	WITHOUT_CLASSIFICATION	3.135809618321624E-5	TEST
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.999428618142209	WITHOUT_CLASSIFICATION	5.713818577910974E-4	TEST
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9945911056332317	WITHOUT_CLASSIFICATION	0.005408894366768269	TEST
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.999972272872027	WITHOUT_CLASSIFICATION	2.772712797308979E-5	TEST
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999287159292087	WITHOUT_CLASSIFICATION	7.128407079128053E-5	TEST
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999171459394526	WITHOUT_CLASSIFICATION	8.285406054739172E-5	TEST
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9964281386683687	WITHOUT_CLASSIFICATION	0.003571861331631271	TEST
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999773576407698	WITHOUT_CLASSIFICATION	2.2642359230307797E-5	TEST
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9996500556919571	WITHOUT_CLASSIFICATION	3.49944308042931E-4	TEST
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999563445682698	WITHOUT_CLASSIFICATION	4.365543173013277E-5	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999898049333563	WITHOUT_CLASSIFICATION	1.0195066643745025E-5	TEST
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999792585476104	WITHOUT_CLASSIFICATION	2.0741452389607597E-5	TEST
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999008738224399	WITHOUT_CLASSIFICATION	9.912617756007833E-5	TEST
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// switch // while	WITHOUT_CLASSIFICATION	0.9999585795400429	WITHOUT_CLASSIFICATION	4.1420459957064955E-5	TEST
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.984424416218262	WITHOUT_CLASSIFICATION	0.015575583781737982	TEST
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9993897352825898	WITHOUT_CLASSIFICATION	6.102647174101567E-4	TEST
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999893772216999	WITHOUT_CLASSIFICATION	1.0622778300103124E-5	TEST
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9998170092719461	WITHOUT_CLASSIFICATION	1.8299072805397738E-4	TEST
// expected	WITHOUT_CLASSIFICATION	0.9999624362655065	WITHOUT_CLASSIFICATION	3.756373449347645E-5	TEST
// Do nothing	WITHOUT_CLASSIFICATION	0.9999653824490681	WITHOUT_CLASSIFICATION	3.461755093192858E-5	TEST
// constructor	WITHOUT_CLASSIFICATION	0.9999505766408388	WITHOUT_CLASSIFICATION	4.942335916131267E-5	TEST
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9998158745307801	WITHOUT_CLASSIFICATION	1.8412546921996924E-4	TEST
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999179826562357	WITHOUT_CLASSIFICATION	8.201734376442704E-5	TEST
// line 423	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 486	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9995373366483482	WITHOUT_CLASSIFICATION	4.626633516517858E-4	TEST
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9998519314999179	WITHOUT_CLASSIFICATION	1.4806850008210594E-4	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999445995126527	WITHOUT_CLASSIFICATION	5.5400487347335805E-5	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999445995126527	WITHOUT_CLASSIFICATION	5.5400487347335805E-5	TEST
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999635853309756	WITHOUT_CLASSIFICATION	3.6414669024421265E-5	TEST
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.999977577323878	WITHOUT_CLASSIFICATION	2.2422676121912987E-5	TEST
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999847885541416	WITHOUT_CLASSIFICATION	1.5211445858266325E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9967433008820976	WITHOUT_CLASSIFICATION	0.003256699117902447	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9967433008820976	WITHOUT_CLASSIFICATION	0.003256699117902447	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9967433008820976	WITHOUT_CLASSIFICATION	0.003256699117902447	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9967433008820976	WITHOUT_CLASSIFICATION	0.003256699117902447	TEST
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999593226077429	WITHOUT_CLASSIFICATION	4.067739225714166E-5	TEST
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999552335608634	WITHOUT_CLASSIFICATION	4.4766439136662185E-5	TEST
// "else" body	WITHOUT_CLASSIFICATION	0.9999585235726709	WITHOUT_CLASSIFICATION	4.14764273289962E-5	TEST
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9996260076906759	WITHOUT_CLASSIFICATION	3.739923093240638E-4	TEST
// read-volatile	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9996325600212607	WITHOUT_CLASSIFICATION	3.674399787392886E-4	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9994616696411761	WITHOUT_CLASSIFICATION	5.383303588239916E-4	TEST
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9994616696411761	WITHOUT_CLASSIFICATION	5.383303588239916E-4	TEST
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.999941817790873	WITHOUT_CLASSIFICATION	5.81822091270008E-5	TEST
/* 10! */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999537877693714	WITHOUT_CLASSIFICATION	4.621223062856101E-5	TEST
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9996138463833961	WITHOUT_CLASSIFICATION	3.8615361660392897E-4	TEST
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999371468195972	WITHOUT_CLASSIFICATION	6.285318040278584E-5	TEST
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999395673234519	WITHOUT_CLASSIFICATION	6.0432676548033294E-5	TEST
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999993439976858	WITHOUT_CLASSIFICATION	6.560023142254456E-7	TEST
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9997317059921098	WITHOUT_CLASSIFICATION	2.682940078901608E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999751998624786	WITHOUT_CLASSIFICATION	2.4800137521369746E-5	TEST
// line 449	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 495	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999393073403098	WITHOUT_CLASSIFICATION	6.069265969021582E-5	TEST
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.999997217672365	WITHOUT_CLASSIFICATION	2.7823276349452825E-6	TEST
/* 14! */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9996771445296828	WITHOUT_CLASSIFICATION	3.2285547031721495E-4	TEST
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999857575289965	WITHOUT_CLASSIFICATION	1.4242471003519346E-5	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999687921304118	WITHOUT_CLASSIFICATION	3.120786958814576E-5	TEST
// extract item from array	WITHOUT_CLASSIFICATION	0.9999687921304118	WITHOUT_CLASSIFICATION	3.120786958814576E-5	TEST
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999537877693714	WITHOUT_CLASSIFICATION	4.621223062856097E-5	TEST
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.999994820110875	WITHOUT_CLASSIFICATION	5.179889124876693E-6	TEST
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9997638334287838	WITHOUT_CLASSIFICATION	2.3616657121618164E-4	TEST
// index for the item	WITHOUT_CLASSIFICATION	0.9999586364723686	WITHOUT_CLASSIFICATION	4.13635276314256E-5	TEST
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999734700232973	WITHOUT_CLASSIFICATION	2.6529976702720623E-5	TEST
/* 18! */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999873015421764	WITHOUT_CLASSIFICATION	1.2698457823611048E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999651527653934	WITHOUT_CLASSIFICATION	3.4847234606526616E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999651527653934	WITHOUT_CLASSIFICATION	3.4847234606526616E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999651527653934	WITHOUT_CLASSIFICATION	3.4847234606526616E-5	TEST
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999651527653934	WITHOUT_CLASSIFICATION	3.4847234606526616E-5	TEST
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999597320220468	WITHOUT_CLASSIFICATION	4.0267977953177944E-5	TEST
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9997893253438674	WITHOUT_CLASSIFICATION	2.1067465613266442E-4	TEST
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9998390852306487	WITHOUT_CLASSIFICATION	1.609147693513647E-4	TEST
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9998397124067264	WITHOUT_CLASSIFICATION	1.6028759327350569E-4	TEST
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9998523548157237	WITHOUT_CLASSIFICATION	1.4764518427631053E-4	TEST
/* 22! */	WITHOUT_CLASSIFICATION	0.9997756051117633	WITHOUT_CLASSIFICATION	2.2439488823654006E-4	TEST
// attribute set.	WITHOUT_CLASSIFICATION	0.9999330948942593	WITHOUT_CLASSIFICATION	6.690510574065288E-5	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998480610071865	WITHOUT_CLASSIFICATION	1.5193899281352422E-4	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998480610071865	WITHOUT_CLASSIFICATION	1.5193899281352422E-4	TEST
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9998480610071865	WITHOUT_CLASSIFICATION	1.5193899281352422E-4	TEST
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9991989437046067	WITHOUT_CLASSIFICATION	8.010562953933801E-4	TEST
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999967222882911	WITHOUT_CLASSIFICATION	3.2777117090495014E-6	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999755973069022	WITHOUT_CLASSIFICATION	2.4402693097792759E-4	TEST
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999755973069022	WITHOUT_CLASSIFICATION	2.4402693097792759E-4	TEST
// AF_INET	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999991235961175	WITHOUT_CLASSIFICATION	8.76403882324704E-7	TEST
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9998052515123177	WITHOUT_CLASSIFICATION	1.9474848768232978E-4	TEST
// BASE64	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999858078718198	WITHOUT_CLASSIFICATION	1.4192128180326681E-5	TEST
// element set	WITHOUT_CLASSIFICATION	0.9999855600304247	WITHOUT_CLASSIFICATION	1.4439969575321635E-5	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999027478025257	WITHOUT_CLASSIFICATION	9.725219747421983E-5	TEST
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999027478025257	WITHOUT_CLASSIFICATION	9.725219747421983E-5	TEST
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999561178040022	WITHOUT_CLASSIFICATION	4.3882195997821256E-5	TEST
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999892145200558	WITHOUT_CLASSIFICATION	1.0785479944198456E-5	TEST
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999961915613549	WITHOUT_CLASSIFICATION	3.8084386451772176E-6	TEST
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.999720410110306	WITHOUT_CLASSIFICATION	2.79589889694053E-4	TEST
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9997677370964634	WITHOUT_CLASSIFICATION	2.3226290353673478E-4	TEST
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.999978604820238	WITHOUT_CLASSIFICATION	2.1395179761924365E-5	TEST
// carriage return	WITHOUT_CLASSIFICATION	0.9999758771635288	WITHOUT_CLASSIFICATION	2.4122836471181244E-5	TEST
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9996233725064866	WITHOUT_CLASSIFICATION	3.766274935134285E-4	TEST
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999965718747895	WITHOUT_CLASSIFICATION	3.4281252105076108E-6	TEST
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999694832188164	WITHOUT_CLASSIFICATION	3.0516781183662747E-5	TEST
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999753336854843	WITHOUT_CLASSIFICATION	2.466631451581018E-5	TEST
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9998331749235205	WITHOUT_CLASSIFICATION	1.6682507647953291E-4	TEST
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999285687468162	WITHOUT_CLASSIFICATION	7.143125318376282E-5	TEST
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999983551735793	WITHOUT_CLASSIFICATION	1.6448264207027017E-5	TEST
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9998467166463075	WITHOUT_CLASSIFICATION	1.5328335369242964E-4	TEST
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999973000693523	WITHOUT_CLASSIFICATION	2.699930647760234E-6	TEST
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999639083059463	WITHOUT_CLASSIFICATION	3.6091694053726984E-5	TEST
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999913530009128	WITHOUT_CLASSIFICATION	8.646999087142032E-6	TEST
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999680069443065	WITHOUT_CLASSIFICATION	3.19930556934859E-5	TEST
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999977222656287	WITHOUT_CLASSIFICATION	2.2777343712726054E-6	TEST
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999571959538681	WITHOUT_CLASSIFICATION	4.2804046131973735E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999709038215134	WITHOUT_CLASSIFICATION	2.909617848654231E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999709038215134	WITHOUT_CLASSIFICATION	2.909617848654231E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999709038215134	WITHOUT_CLASSIFICATION	2.909617848654231E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999709038215134	WITHOUT_CLASSIFICATION	2.909617848654231E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999709038215134	WITHOUT_CLASSIFICATION	2.909617848654231E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999709038215134	WITHOUT_CLASSIFICATION	2.909617848654231E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999709038215134	WITHOUT_CLASSIFICATION	2.909617848654231E-5	TEST
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999709038215134	WITHOUT_CLASSIFICATION	2.909617848654231E-5	TEST
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9997805089591829	WITHOUT_CLASSIFICATION	2.194910408172099E-4	TEST
/* fall through */	WITHOUT_CLASSIFICATION	0.9999224035042218	WITHOUT_CLASSIFICATION	7.759649577814405E-5	TEST
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9960863974832328	WITHOUT_CLASSIFICATION	0.00391360251676718	TEST
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9994544253000999	WITHOUT_CLASSIFICATION	5.455746999001527E-4	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999625413918237	WITHOUT_CLASSIFICATION	3.745860817621682E-5	TEST
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999625413918237	WITHOUT_CLASSIFICATION	3.745860817621682E-5	TEST
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999270174719268	WITHOUT_CLASSIFICATION	7.298252807325086E-5	TEST
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999852632175287	WITHOUT_CLASSIFICATION	1.473678247126841E-5	TEST
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9998764253959449	WITHOUT_CLASSIFICATION	1.2357460405506426E-4	TEST
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999487864594222	WITHOUT_CLASSIFICATION	5.121354057785148E-5	TEST
// get current context	WITHOUT_CLASSIFICATION	0.9999686972091837	WITHOUT_CLASSIFICATION	3.13027908162779E-5	TEST
// octal constant	WITHOUT_CLASSIFICATION	0.9999582238190684	WITHOUT_CLASSIFICATION	4.177618093159502E-5	TEST
// read	WITHOUT_CLASSIFICATION	0.9998830920193558	WITHOUT_CLASSIFICATION	1.1690798064431636E-4	TEST
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999365726856536	WITHOUT_CLASSIFICATION	6.342731434637895E-5	TEST
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9998848669906331	WITHOUT_CLASSIFICATION	1.1513300936692714E-4	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999795474992432	WITHOUT_CLASSIFICATION	2.045250075677531E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999795474992432	WITHOUT_CLASSIFICATION	2.045250075677531E-5	TEST
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999795474992432	WITHOUT_CLASSIFICATION	2.045250075677531E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999401641905387	WITHOUT_CLASSIFICATION	5.9835809461261724E-5	TEST
// at end	WITHOUT_CLASSIFICATION	0.9998574366140662	WITHOUT_CLASSIFICATION	1.4256338593389897E-4	TEST
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9998512438939057	WITHOUT_CLASSIFICATION	1.4875610609439217E-4	TEST
// save blocking state	WITHOUT_CLASSIFICATION	0.9999525970068828	WITHOUT_CLASSIFICATION	4.740299311725883E-5	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999409016084491	WITHOUT_CLASSIFICATION	5.90983915510209E-5	TEST
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999802010847694	WITHOUT_CLASSIFICATION	1.9798915230629682E-5	TEST
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999607106384136	WITHOUT_CLASSIFICATION	3.9289361586501974E-5	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998275197944295	WITHOUT_CLASSIFICATION	1.7248020557058863E-4	TEST
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998275197944295	WITHOUT_CLASSIFICATION	1.7248020557058863E-4	TEST
// load null block	WITHOUT_CLASSIFICATION	0.9999712990721787	WITHOUT_CLASSIFICATION	2.8700927821316006E-5	TEST
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998838315711629	WITHOUT_CLASSIFICATION	1.1616842883700889E-4	TEST
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999955340973833	WITHOUT_CLASSIFICATION	4.465902616648205E-6	TEST
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999324868664312	WITHOUT_CLASSIFICATION	6.751313356875185E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999789745864868	WITHOUT_CLASSIFICATION	2.1025413513236283E-5	TEST
// block given	WITHOUT_CLASSIFICATION	0.9999789745864868	WITHOUT_CLASSIFICATION	2.1025413513236283E-5	TEST
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999296600091543	WITHOUT_CLASSIFICATION	7.033999084574731E-5	TEST
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9996922249596738	WITHOUT_CLASSIFICATION	3.0777504032630825E-4	TEST
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999698338185497	WITHOUT_CLASSIFICATION	3.0166181450289823E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*self*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
// declare the field	WITHOUT_CLASSIFICATION	0.999981126839431	WITHOUT_CLASSIFICATION	1.887316056895422E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999711262194598	WITHOUT_CLASSIFICATION	2.8873780540187107E-5	TEST
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999711262194598	WITHOUT_CLASSIFICATION	2.8873780540187107E-5	TEST
// check arity	WITHOUT_CLASSIFICATION	0.99998437171566	WITHOUT_CLASSIFICATION	1.5628284339973523E-5	TEST
// check arity	WITHOUT_CLASSIFICATION	0.99998437171566	WITHOUT_CLASSIFICATION	1.5628284339973523E-5	TEST
// create the class	WITHOUT_CLASSIFICATION	0.9999837105820046	WITHOUT_CLASSIFICATION	1.628941799533908E-5	TEST
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999141112964587	WITHOUT_CLASSIFICATION	8.588870354132095E-5	TEST
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999538414871838	WITHOUT_CLASSIFICATION	4.615851281616699E-5	TEST
// 1.8	WITHOUT_CLASSIFICATION	0.9998889598572059	WITHOUT_CLASSIFICATION	1.1104014279407712E-4	TEST
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9998773432531649	WITHOUT_CLASSIFICATION	1.226567468351139E-4	TEST
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999874755699389	WITHOUT_CLASSIFICATION	1.2524430060982349E-5	TEST
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9998646954301048	WITHOUT_CLASSIFICATION	1.3530456989517905E-4	TEST
// block	WITHOUT_CLASSIFICATION	0.9998954864916576	WITHOUT_CLASSIFICATION	1.0451350834238835E-4	TEST
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999627594789495	WITHOUT_CLASSIFICATION	3.7240521050533E-5	TEST
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999959906195146	WITHOUT_CLASSIFICATION	4.009380485419935E-6	TEST
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999460768043308	WITHOUT_CLASSIFICATION	5.3923195669283915E-5	TEST
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9990261218024058	WITHOUT_CLASSIFICATION	9.738781975941615E-4	TEST
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999754960633387	WITHOUT_CLASSIFICATION	2.450393666122125E-5	TEST
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999943743204381	WITHOUT_CLASSIFICATION	5.625679561855453E-6	TEST
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999637288146163	WITHOUT_CLASSIFICATION	3.6271185383775414E-5	TEST
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999718471742417	WITHOUT_CLASSIFICATION	2.8152825758295378E-5	TEST
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999613510425788	WITHOUT_CLASSIFICATION	3.8648957421281165E-5	TEST
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9892995634850136	WITHOUT_CLASSIFICATION	0.010700436514986311	TEST
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9997985659230471	WITHOUT_CLASSIFICATION	2.0143407695294107E-4	TEST
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999898049333563	WITHOUT_CLASSIFICATION	1.0195066643745025E-5	TEST
/*arg*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999506431036702	WITHOUT_CLASSIFICATION	4.935689632974215E-5	TEST
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999908243241898	WITHOUT_CLASSIFICATION	9.17567581017166E-6	TEST
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999580395692138	WITHOUT_CLASSIFICATION	4.1960430786279497E-5	TEST
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9998422576199992	WITHOUT_CLASSIFICATION	1.5774238000076108E-4	TEST
/* expected */	WITHOUT_CLASSIFICATION	0.9999240838298684	WITHOUT_CLASSIFICATION	7.591617013153326E-5	TEST
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999662218173009	WITHOUT_CLASSIFICATION	3.3778182699066265E-5	TEST
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999124475079705	WITHOUT_CLASSIFICATION	8.755249202957648E-5	TEST
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999961889180414	WITHOUT_CLASSIFICATION	3.8110819584766803E-6	TEST
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999328036678318	WITHOUT_CLASSIFICATION	6.719633216820224E-5	TEST
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999831565170327	WITHOUT_CLASSIFICATION	1.6843482967294424E-5	TEST
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999674071299919	WITHOUT_CLASSIFICATION	3.259287000812505E-5	TEST
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999802555212405	WITHOUT_CLASSIFICATION	1.9744478759545103E-5	TEST
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999094033634154	WITHOUT_CLASSIFICATION	9.059663658463234E-5	TEST
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999798407544459	WITHOUT_CLASSIFICATION	2.0159245554177033E-5	TEST
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999213976567886	WITHOUT_CLASSIFICATION	7.860234321145398E-5	TEST
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999489866917608	WITHOUT_CLASSIFICATION	5.1013308239199025E-5	TEST
// build scope names string	WITHOUT_CLASSIFICATION	0.9998592073678265	WITHOUT_CLASSIFICATION	1.4079263217344344E-4	TEST
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999933448990254	WITHOUT_CLASSIFICATION	6.655100974639278E-6	TEST
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999530090880663	WITHOUT_CLASSIFICATION	4.699091193380254E-5	TEST
// finally	WITHOUT_CLASSIFICATION	0.9998889852526852	WITHOUT_CLASSIFICATION	1.1101474731473363E-4	TEST
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9997622942908078	WITHOUT_CLASSIFICATION	2.3770570919239088E-4	TEST
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.999982174166964	WITHOUT_CLASSIFICATION	1.782583303599047E-5	TEST
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9995352091057723	WITHOUT_CLASSIFICATION	4.647908942277424E-4	TEST
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9997278118473366	WITHOUT_CLASSIFICATION	2.7218815266344924E-4	TEST
// specific arity	WITHOUT_CLASSIFICATION	0.9999621304422842	WITHOUT_CLASSIFICATION	3.786955771568112E-5	TEST
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999923027085504	WITHOUT_CLASSIFICATION	7.697291449481029E-6	TEST
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999666855519992	WITHOUT_CLASSIFICATION	3.3314448000820353E-5	TEST
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9998952911599663	WITHOUT_CLASSIFICATION	1.0470884003365668E-4	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999406704248138	WITHOUT_CLASSIFICATION	5.932957518624879E-5	TEST
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999406704248138	WITHOUT_CLASSIFICATION	5.932957518624879E-5	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9997384095582463	WITHOUT_CLASSIFICATION	2.6159044175367994E-4	TEST
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9997384095582463	WITHOUT_CLASSIFICATION	2.6159044175367994E-4	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9993822771790946	WITHOUT_CLASSIFICATION	6.177228209054822E-4	TEST
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9993822771790946	WITHOUT_CLASSIFICATION	6.177228209054822E-4	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999915089453844	WITHOUT_CLASSIFICATION	8.49105461559015E-5	TEST
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999915089453844	WITHOUT_CLASSIFICATION	8.49105461559015E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// write-volatile	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999975414001408	WITHOUT_CLASSIFICATION	2.4585998591982764E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999975414001408	WITHOUT_CLASSIFICATION	2.4585998591982764E-5	TEST
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999975414001408	WITHOUT_CLASSIFICATION	2.4585998591982764E-5	TEST
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9998940592539586	WITHOUT_CLASSIFICATION	1.0594074604148329E-4	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999916691079817	WITHOUT_CLASSIFICATION	8.330892018308504E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999916691079817	WITHOUT_CLASSIFICATION	8.330892018308504E-5	TEST
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999916691079817	WITHOUT_CLASSIFICATION	8.330892018308504E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999591327159503	WITHOUT_CLASSIFICATION	4.086728404968412E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999591327159503	WITHOUT_CLASSIFICATION	4.086728404968412E-5	TEST
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999591327159503	WITHOUT_CLASSIFICATION	4.086728404968412E-5	TEST
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// backspace	WITHOUT_CLASSIFICATION	0.9999580263051523	WITHOUT_CLASSIFICATION	4.197369484771279E-5	TEST
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/* package-private */	WITHOUT_CLASSIFICATION	0.9998773432531649	WITHOUT_CLASSIFICATION	1.226567468351139E-4	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999616047986281	WITHOUT_CLASSIFICATION	3.8395201371916545E-5	TEST
// fall through	WITHOUT_CLASSIFICATION	0.9999616047986281	WITHOUT_CLASSIFICATION	3.8395201371916545E-5	TEST
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999470380892129	WITHOUT_CLASSIFICATION	5.296191078713862E-5	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9996047505077322	WITHOUT_CLASSIFICATION	3.952494922677373E-4	TEST
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9996047505077322	WITHOUT_CLASSIFICATION	3.952494922677373E-4	TEST
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9689814432391737	WITHOUT_CLASSIFICATION	0.031018556760826314	TEST
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9983089612326668	WITHOUT_CLASSIFICATION	0.001691038767333167	TEST
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9998602935903612	WITHOUT_CLASSIFICATION	1.3970640963883527E-4	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999026332810187	WITHOUT_CLASSIFICATION	9.736671898128341E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999026332810187	WITHOUT_CLASSIFICATION	9.736671898128341E-5	TEST
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999794291713326	WITHOUT_CLASSIFICATION	2.0570828667295642E-5	TEST
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9990993446873168	WITHOUT_CLASSIFICATION	9.006553126833872E-4	TEST
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9996993986023216	WITHOUT_CLASSIFICATION	3.0060139767847316E-4	TEST
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.999923950261111	WITHOUT_CLASSIFICATION	7.604973888898735E-5	TEST
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9914455818622021	WITHOUT_CLASSIFICATION	0.008554418137797873	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999026332810187	WITHOUT_CLASSIFICATION	9.736671898128341E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999026332810187	WITHOUT_CLASSIFICATION	9.736671898128341E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999026332810187	WITHOUT_CLASSIFICATION	9.736671898128341E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999026332810187	WITHOUT_CLASSIFICATION	9.736671898128341E-5	TEST
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999026332810187	WITHOUT_CLASSIFICATION	9.736671898128341E-5	TEST
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999433706243844	WITHOUT_CLASSIFICATION	5.662937561545153E-5	TEST
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9998457082691521	WITHOUT_CLASSIFICATION	1.5429173084791057E-4	TEST
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999798112370303	WITHOUT_CLASSIFICATION	2.0188762969620365E-5	TEST
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999264010883646	WITHOUT_CLASSIFICATION	7.359891163548418E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999813253688169	WITHOUT_CLASSIFICATION	1.8674631183078295E-5	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// not reached	WITHOUT_CLASSIFICATION	0.9998710486499266	WITHOUT_CLASSIFICATION	1.2895135007344918E-4	TEST
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9991475055941048	WITHOUT_CLASSIFICATION	8.524944058952267E-4	TEST
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9993705848545942	WITHOUT_CLASSIFICATION	6.294151454057502E-4	TEST
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999772939104209	WITHOUT_CLASSIFICATION	2.270608957905825E-5	TEST
// get "self"	WITHOUT_CLASSIFICATION	0.9999724433815187	WITHOUT_CLASSIFICATION	2.7556618481295026E-5	TEST
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9998960961599811	WITHOUT_CLASSIFICATION	1.0390384001891203E-4	TEST
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9997348733270552	WITHOUT_CLASSIFICATION	2.6512667294483166E-4	TEST
// only public methods	WITHOUT_CLASSIFICATION	0.9999275731316836	WITHOUT_CLASSIFICATION	7.24268683164668E-5	TEST
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999013968931278	WITHOUT_CLASSIFICATION	9.860310687214653E-5	TEST
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999931011998269	WITHOUT_CLASSIFICATION	6.898800173102229E-6	TEST
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.999930362927877	WITHOUT_CLASSIFICATION	6.96370721230835E-5	TEST
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9998316717674742	WITHOUT_CLASSIFICATION	1.683282325258544E-4	TEST
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999963055105647	WITHOUT_CLASSIFICATION	3.694489435279899E-6	TEST
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999868531829343	WITHOUT_CLASSIFICATION	1.314681706570806E-5	TEST
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999030869537006	WITHOUT_CLASSIFICATION	9.691304629935439E-5	TEST
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9998166330951942	WITHOUT_CLASSIFICATION	1.8336690480572627E-4	TEST
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999006915672716	WITHOUT_CLASSIFICATION	9.930843272840331E-5	TEST
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999958205348838	WITHOUT_CLASSIFICATION	4.179465116245149E-6	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9995252145899384	WITHOUT_CLASSIFICATION	4.7478541006155207E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9995252145899384	WITHOUT_CLASSIFICATION	4.7478541006155207E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9995252145899384	WITHOUT_CLASSIFICATION	4.7478541006155207E-4	TEST
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9995252145899384	WITHOUT_CLASSIFICATION	4.7478541006155207E-4	TEST
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999775221428175	WITHOUT_CLASSIFICATION	2.2477857182512594E-5	TEST
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9990228103913541	WITHOUT_CLASSIFICATION	9.771896086458766E-4	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999088708255027	WITHOUT_CLASSIFICATION	9.112917449722448E-5	TEST
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999088708255027	WITHOUT_CLASSIFICATION	9.112917449722448E-5	TEST
// set self to the class	WITHOUT_CLASSIFICATION	0.9999954339301262	WITHOUT_CLASSIFICATION	4.566069873813605E-6	TEST
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9998643959746024	WITHOUT_CLASSIFICATION	1.3560402539749438E-4	TEST
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999614989660027	WITHOUT_CLASSIFICATION	3.850103399737616E-5	TEST
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998978878921772	WITHOUT_CLASSIFICATION	1.0211210782287494E-4	TEST
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9985076072741775	WITHOUT_CLASSIFICATION	0.0014923927258225203	TEST
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9994439685027594	WITHOUT_CLASSIFICATION	5.56031497240589E-4	TEST
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999608301959564	WITHOUT_CLASSIFICATION	3.91698040436817E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999434921605288	WITHOUT_CLASSIFICATION	5.6507839471123725E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999434921605288	WITHOUT_CLASSIFICATION	5.6507839471123725E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999434921605288	WITHOUT_CLASSIFICATION	5.6507839471123725E-5	TEST
// do nothing	WITHOUT_CLASSIFICATION	0.9999434921605288	WITHOUT_CLASSIFICATION	5.6507839471123725E-5	TEST
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999854138618569	WITHOUT_CLASSIFICATION	1.4586138143106504E-5	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999948085858402	WITHOUT_CLASSIFICATION	5.191414159758176E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999948085858402	WITHOUT_CLASSIFICATION	5.191414159758176E-6	TEST
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999948085858402	WITHOUT_CLASSIFICATION	5.191414159758176E-6	TEST
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999730354450428	WITHOUT_CLASSIFICATION	2.6964554957209447E-5	TEST
// finally with no exception	WITHOUT_CLASSIFICATION	0.999761786151559	WITHOUT_CLASSIFICATION	2.3821384844099322E-4	TEST
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9998843181932584	WITHOUT_CLASSIFICATION	1.1568180674155037E-4	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9967433008820976	WITHOUT_CLASSIFICATION	0.003256699117902447	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9967433008820976	WITHOUT_CLASSIFICATION	0.003256699117902447	TEST
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999913954512453	WITHOUT_CLASSIFICATION	8.604548754670396E-6	TEST
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999673100513834	WITHOUT_CLASSIFICATION	3.2689948616473776E-5	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.999921886925986	WITHOUT_CLASSIFICATION	7.811307401396377E-5	TEST
/* not a class */	WITHOUT_CLASSIFICATION	0.999921886925986	WITHOUT_CLASSIFICATION	7.811307401396377E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999463904505512	WITHOUT_CLASSIFICATION	5.360954944869618E-5	TEST
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999463904505512	WITHOUT_CLASSIFICATION	5.360954944869618E-5	TEST
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9997805176168535	WITHOUT_CLASSIFICATION	2.1948238314646872E-4	TEST
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.970541745864774	WITHOUT_CLASSIFICATION	0.029458254135225886	TEST
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.999915135883772	WITHOUT_CLASSIFICATION	8.486411622801025E-5	TEST
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9998793757553238	WITHOUT_CLASSIFICATION	1.2062424467620896E-4	TEST
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999191501941477	WITHOUT_CLASSIFICATION	8.084980585233901E-5	TEST
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999667906118297	WITHOUT_CLASSIFICATION	3.3209388170254356E-5	TEST
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999151737089975	WITHOUT_CLASSIFICATION	8.482629100242897E-5	TEST
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999939523180876	WITHOUT_CLASSIFICATION	6.047681912311897E-6	TEST
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9997358345115018	WITHOUT_CLASSIFICATION	2.641654884981241E-4	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999531818872924	WITHOUT_CLASSIFICATION	4.6818112707580287E-5	TEST
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999531818872924	WITHOUT_CLASSIFICATION	4.6818112707580287E-5	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999575495634806	WITHOUT_CLASSIFICATION	4.245043651937454E-5	TEST
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999575495634806	WITHOUT_CLASSIFICATION	4.245043651937454E-5	TEST
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999165808395469	WITHOUT_CLASSIFICATION	8.341916045310815E-5	TEST
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999685856036434	WITHOUT_CLASSIFICATION	3.141439635645912E-5	TEST
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999150491988087	WITHOUT_CLASSIFICATION	8.495080119138416E-5	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9994460069437623	WITHOUT_CLASSIFICATION	5.539930562377556E-4	TEST
// line 286	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 476	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 513	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 530	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 533	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 537	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 551	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// end loop	WITHOUT_CLASSIFICATION	0.9999671983978423	WITHOUT_CLASSIFICATION	3.280160215761802E-5	TEST
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9997978172751928	WITHOUT_CLASSIFICATION	2.0218272480728605E-4	TEST
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999837392984963	WITHOUT_CLASSIFICATION	1.626070150366255E-5	TEST
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9998788641676474	WITHOUT_CLASSIFICATION	1.2113583235266325E-4	TEST
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9994732124067511	WITHOUT_CLASSIFICATION	5.26787593248821E-4	TEST
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999423299739215	WITHOUT_CLASSIFICATION	5.7670026078397405E-5	TEST
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9967433008820976	WITHOUT_CLASSIFICATION	0.003256699117902447	TEST
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999916444545258	WITHOUT_CLASSIFICATION	8.355545474109041E-6	TEST
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9984669280729281	WITHOUT_CLASSIFICATION	0.0015330719270718184	TEST
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999445995126527	WITHOUT_CLASSIFICATION	5.5400487347335805E-5	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9997255349766508	WITHOUT_CLASSIFICATION	2.744650233492337E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*value*/	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.999988134429716	WITHOUT_CLASSIFICATION	1.1865570284038092E-5	TEST
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999337723489273	WITHOUT_CLASSIFICATION	6.622765107275882E-5	TEST
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9991819630321758	WITHOUT_CLASSIFICATION	8.180369678243636E-4	TEST
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999137163604996	WITHOUT_CLASSIFICATION	8.628363950045727E-5	TEST
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9995362918855647	WITHOUT_CLASSIFICATION	4.6370811443537124E-4	TEST
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999462390408457	WITHOUT_CLASSIFICATION	5.3760959154258114E-5	TEST
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9995741322068423	WITHOUT_CLASSIFICATION	4.258677931576666E-4	TEST
// line 572	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 601	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 625	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 649	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 691	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 723	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 732	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 745	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 766	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 785	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 794	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 800	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 812	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 827	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 839	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 845	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 864	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 886	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 896	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 911	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 929	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 952	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 970	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 972	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 991	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1011	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1026	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1038	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1067	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1085	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1097	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1105	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1122	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1133	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1145	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1169	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1201	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1210	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1229	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1261	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1287	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1293	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1307	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1320	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1325	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1363	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1398	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1448	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1456	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1473	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1492	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1513	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1523	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1562	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1582	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1603	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1615	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1620	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1635	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1652	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1681	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1708	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1716	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1755	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1772	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1789	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999579656889772	WITHOUT_CLASSIFICATION	4.203431102268956E-5	TEST
/* force for args */	WITHOUT_CLASSIFICATION	0.9998458136815982	WITHOUT_CLASSIFICATION	1.541863184017784E-4	TEST
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9991151658326652	WITHOUT_CLASSIFICATION	8.848341673348907E-4	TEST
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998506350656211	WITHOUT_CLASSIFICATION	1.49364934378921E-4	TEST
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.999867089437859	WITHOUT_CLASSIFICATION	1.3291056214100925E-4	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999462387669881	WITHOUT_CLASSIFICATION	5.376123301186968E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999462387669881	WITHOUT_CLASSIFICATION	5.376123301186968E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999462387669881	WITHOUT_CLASSIFICATION	5.376123301186968E-5	TEST
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999462387669881	WITHOUT_CLASSIFICATION	5.376123301186968E-5	TEST
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9997080569182253	WITHOUT_CLASSIFICATION	2.919430817747452E-4	TEST
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999768162401279	WITHOUT_CLASSIFICATION	2.3183759872021342E-5	TEST
// line 313	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 339	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 361	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 413	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 451	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 472	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 500	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 515	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 555	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 582	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 619	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 636	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 669	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 703	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 776	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 814	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 823	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 854	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 872	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 905	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 925	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 958	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 992	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1047	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1072	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1081	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1108	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1136	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1168	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1192	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1241	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1267	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1286	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1301	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1314	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1333	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1362	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1395	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1420	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1439	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1476	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1535	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1588	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1618	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1643	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1669	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1728	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1753	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1779	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1794	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1812	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1837	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1895	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1925	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1950	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 1992	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// line 2014	WITHOUT_CLASSIFICATION	0.9999666966104048	WITHOUT_CLASSIFICATION	3.330338959507554E-5	TEST
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.999692901290427	WITHOUT_CLASSIFICATION	3.0709870957309847E-4	TEST
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999517013812572	WITHOUT_CLASSIFICATION	4.8298618742712276E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999722153826872	WITHOUT_CLASSIFICATION	2.7784617312788896E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999722153826872	WITHOUT_CLASSIFICATION	2.7784617312788896E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999722153826872	WITHOUT_CLASSIFICATION	2.7784617312788896E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999722153826872	WITHOUT_CLASSIFICATION	2.7784617312788896E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999722153826872	WITHOUT_CLASSIFICATION	2.7784617312788896E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999722153826872	WITHOUT_CLASSIFICATION	2.7784617312788896E-5	TEST
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999722153826872	WITHOUT_CLASSIFICATION	2.7784617312788896E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999496996131926	WITHOUT_CLASSIFICATION	5.030038680729071E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999496996131926	WITHOUT_CLASSIFICATION	5.030038680729071E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999496996131926	WITHOUT_CLASSIFICATION	5.030038680729071E-5	TEST
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999496996131926	WITHOUT_CLASSIFICATION	5.030038680729071E-5	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9936257068008257	WITHOUT_CLASSIFICATION	0.00637429319917436	TEST
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9936257068008257	WITHOUT_CLASSIFICATION	0.00637429319917436	TEST
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9974057080238787	WITHOUT_CLASSIFICATION	0.00259429197612124	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999900147928448	WITHOUT_CLASSIFICATION	9.985207155245154E-6	TEST
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999900147928448	WITHOUT_CLASSIFICATION	9.985207155245154E-6	TEST
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9998971423393447	WITHOUT_CLASSIFICATION	1.0285766065531733E-4	TEST
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.999871958086499	WITHOUT_CLASSIFICATION	1.2804191350105333E-4	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999915591928893	WITHOUT_CLASSIFICATION	8.440807110704161E-5	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998989131606807	WITHOUT_CLASSIFICATION	1.0108683931922884E-4	TEST
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998989131606807	WITHOUT_CLASSIFICATION	1.0108683931922884E-4	TEST
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.999951417489302	WITHOUT_CLASSIFICATION	4.858251069802134E-5	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999527630937666	WITHOUT_CLASSIFICATION	4.723690623346444E-5	TEST
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999527630937666	WITHOUT_CLASSIFICATION	4.723690623346444E-5	TEST
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999866268037493	WITHOUT_CLASSIFICATION	1.337319625069095E-5	TEST
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9899595295422777	WITHOUT_CLASSIFICATION	0.010040470457722278	TEST
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999940921028062	WITHOUT_CLASSIFICATION	5.9078971938101736E-6	TEST
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999616940640532	WITHOUT_CLASSIFICATION	3.830593594676465E-5	TEST
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999285801448052	WITHOUT_CLASSIFICATION	7.141985519485046E-5	TEST
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.99991542550677	WITHOUT_CLASSIFICATION	8.457449322993802E-5	TEST
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999392404785611	WITHOUT_CLASSIFICATION	6.0759521438943936E-5	TEST
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999874008002301	WITHOUT_CLASSIFICATION	1.2599199769941616E-5	TEST
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9996782510898534	WITHOUT_CLASSIFICATION	3.2174891014650375E-4	TEST
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9989072805117556	WITHOUT_CLASSIFICATION	0.0010927194882444536	TEST
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9965609833011354	WITHOUT_CLASSIFICATION	0.003439016698864704	TEST
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999621528882375	WITHOUT_CLASSIFICATION	3.784711176250095E-5	TEST
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999654784320078	WITHOUT_CLASSIFICATION	3.4521567992296694E-5	TEST
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999914446134162	WITHOUT_CLASSIFICATION	8.55538658375399E-6	TEST
// first digit is always printed	WITHOUT_CLASSIFICATION	0.999853970902025	WITHOUT_CLASSIFICATION	1.460290979750264E-4	TEST
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999573750837355	WITHOUT_CLASSIFICATION	4.262491626453935E-5	TEST
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9998233981396506	WITHOUT_CLASSIFICATION	1.7660186034940616E-4	TEST
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9996078551369018	WITHOUT_CLASSIFICATION	3.9214486309817526E-4	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999494844233926	WITHOUT_CLASSIFICATION	5.051557660748092E-5	TEST
// now some data...	WITHOUT_CLASSIFICATION	0.9999494844233926	WITHOUT_CLASSIFICATION	5.051557660748092E-5	TEST
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999220584309347	WITHOUT_CLASSIFICATION	7.794156906524641E-5	TEST
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9998101830951304	WITHOUT_CLASSIFICATION	1.8981690486971465E-4	TEST
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999027856078893	WITHOUT_CLASSIFICATION	9.721439211083597E-5	TEST
//switch	WITHOUT_CLASSIFICATION	0.9992752346930408	WITHOUT_CLASSIFICATION	7.247653069591877E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9996002937223913	WITHOUT_CLASSIFICATION	3.997062776085837E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9996002937223913	WITHOUT_CLASSIFICATION	3.997062776085837E-4	TEST
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9996002937223913	WITHOUT_CLASSIFICATION	3.997062776085837E-4	TEST
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999858315380344	WITHOUT_CLASSIFICATION	1.4168461965605725E-5	TEST
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9978458250073888	WITHOUT_CLASSIFICATION	0.0021541749926111517	TEST
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999949195268552	WITHOUT_CLASSIFICATION	5.080473144776068E-6	TEST
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999987681558782	WITHOUT_CLASSIFICATION	1.2318441217749291E-6	TEST
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999679071569665	WITHOUT_CLASSIFICATION	3.2092843033421545E-5	TEST
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.99999051971935	WITHOUT_CLASSIFICATION	9.480280650011213E-6	TEST
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9998610407006736	WITHOUT_CLASSIFICATION	1.389592993264227E-4	TEST
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999530826031584	WITHOUT_CLASSIFICATION	4.691739684170555E-5	TEST
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999952209623545	WITHOUT_CLASSIFICATION	4.779037645551205E-6	TEST
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999910912899453	WITHOUT_CLASSIFICATION	8.908710054759685E-6	TEST
// reset buffer	WITHOUT_CLASSIFICATION	0.9999604711076074	WITHOUT_CLASSIFICATION	3.952889239263458E-5	TEST
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999933586190374	WITHOUT_CLASSIFICATION	6.641380962596028E-6	TEST
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9927208968717021	WITHOUT_CLASSIFICATION	0.0072791031282979065	TEST
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999289533939582	WITHOUT_CLASSIFICATION	7.104660604192542E-5	TEST
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999486960653151	WITHOUT_CLASSIFICATION	5.1303934684932364E-5	TEST
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999621883989095	WITHOUT_CLASSIFICATION	3.781160109045745E-5	TEST
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999703861324426	WITHOUT_CLASSIFICATION	2.9613867557388307E-5	TEST
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9994253456012786	WITHOUT_CLASSIFICATION	5.746543987213891E-4	TEST
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999897669823143	WITHOUT_CLASSIFICATION	1.0233017685601237E-5	TEST
